
adc_to_AWE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000339a8  08000188  08000188  00001188  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00007a58  08033b30  08033b30  00034b30  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0803b588  0803b588  0004e000  2**0
                  CONTENTS
  4 .ARM          00000008  0803b588  0803b588  0003c588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0803b590  0803b590  0004e000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0803b590  0803b590  0003c590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0803b594  0803b594  0003c594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000aa0  20000000  0803b598  0003d000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00010000  10000000  0803c038  0003e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0001e5e0  20000aa0  20000aa0  0004eaa0  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  2001f080  2001f080  0004eaa0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0004e000  2**0
                  CONTENTS, READONLY
 13 .debug_info   00014baf  00000000  00000000  0004e030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003b4c  00000000  00000000  00062bdf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001358  00000000  00000000  00066730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000ed2  00000000  00000000  00067a88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024a7b  00000000  00000000  0006895a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001b25d  00000000  00000000  0008d3d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000e26ab  00000000  00000000  000a8632  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000173  00000000  00000000  0018acdd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00006808  00000000  00000000  0018ae50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007d  00000000  00000000  00191658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000aa0 	.word	0x20000aa0
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08033b18 	.word	0x08033b18

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000aa4 	.word	0x20000aa4
 80001c4:	08033b18 	.word	0x08033b18

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	@ 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2iz>:
 8000ab0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ab8:	d215      	bcs.n	8000ae6 <__aeabi_d2iz+0x36>
 8000aba:	d511      	bpl.n	8000ae0 <__aeabi_d2iz+0x30>
 8000abc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d912      	bls.n	8000aec <__aeabi_d2iz+0x3c>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000ad6:	fa23 f002 	lsr.w	r0, r3, r2
 8000ada:	bf18      	it	ne
 8000adc:	4240      	negne	r0, r0
 8000ade:	4770      	bx	lr
 8000ae0:	f04f 0000 	mov.w	r0, #0
 8000ae4:	4770      	bx	lr
 8000ae6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aea:	d105      	bne.n	8000af8 <__aeabi_d2iz+0x48>
 8000aec:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000af0:	bf08      	it	eq
 8000af2:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000af6:	4770      	bx	lr
 8000af8:	f04f 0000 	mov.w	r0, #0
 8000afc:	4770      	bx	lr
 8000afe:	bf00      	nop

08000b00 <__aeabi_d2f>:
 8000b00:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b04:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b08:	bf24      	itt	cs
 8000b0a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b0e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b12:	d90d      	bls.n	8000b30 <__aeabi_d2f+0x30>
 8000b14:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b18:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b1c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b20:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b24:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b28:	bf08      	it	eq
 8000b2a:	f020 0001 	biceq.w	r0, r0, #1
 8000b2e:	4770      	bx	lr
 8000b30:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b34:	d121      	bne.n	8000b7a <__aeabi_d2f+0x7a>
 8000b36:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b3a:	bfbc      	itt	lt
 8000b3c:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b40:	4770      	bxlt	lr
 8000b42:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b46:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b4a:	f1c2 0218 	rsb	r2, r2, #24
 8000b4e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b52:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b56:	fa20 f002 	lsr.w	r0, r0, r2
 8000b5a:	bf18      	it	ne
 8000b5c:	f040 0001 	orrne.w	r0, r0, #1
 8000b60:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b64:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b68:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b6c:	ea40 000c 	orr.w	r0, r0, ip
 8000b70:	fa23 f302 	lsr.w	r3, r3, r2
 8000b74:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b78:	e7cc      	b.n	8000b14 <__aeabi_d2f+0x14>
 8000b7a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b7e:	d107      	bne.n	8000b90 <__aeabi_d2f+0x90>
 8000b80:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b84:	bf1e      	ittt	ne
 8000b86:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b8a:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b8e:	4770      	bxne	lr
 8000b90:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b94:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b98:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop

08000ba0 <__aeabi_ldivmod>:
 8000ba0:	b97b      	cbnz	r3, 8000bc2 <__aeabi_ldivmod+0x22>
 8000ba2:	b972      	cbnz	r2, 8000bc2 <__aeabi_ldivmod+0x22>
 8000ba4:	2900      	cmp	r1, #0
 8000ba6:	bfbe      	ittt	lt
 8000ba8:	2000      	movlt	r0, #0
 8000baa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000bae:	e006      	blt.n	8000bbe <__aeabi_ldivmod+0x1e>
 8000bb0:	bf08      	it	eq
 8000bb2:	2800      	cmpeq	r0, #0
 8000bb4:	bf1c      	itt	ne
 8000bb6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000bba:	f04f 30ff 	movne.w	r0, #4294967295
 8000bbe:	f000 b9b5 	b.w	8000f2c <__aeabi_idiv0>
 8000bc2:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bc6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bca:	2900      	cmp	r1, #0
 8000bcc:	db09      	blt.n	8000be2 <__aeabi_ldivmod+0x42>
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	db1a      	blt.n	8000c08 <__aeabi_ldivmod+0x68>
 8000bd2:	f000 f84d 	bl	8000c70 <__udivmoddi4>
 8000bd6:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bda:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bde:	b004      	add	sp, #16
 8000be0:	4770      	bx	lr
 8000be2:	4240      	negs	r0, r0
 8000be4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	db1b      	blt.n	8000c24 <__aeabi_ldivmod+0x84>
 8000bec:	f000 f840 	bl	8000c70 <__udivmoddi4>
 8000bf0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf8:	b004      	add	sp, #16
 8000bfa:	4240      	negs	r0, r0
 8000bfc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c00:	4252      	negs	r2, r2
 8000c02:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c06:	4770      	bx	lr
 8000c08:	4252      	negs	r2, r2
 8000c0a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c0e:	f000 f82f 	bl	8000c70 <__udivmoddi4>
 8000c12:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c16:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c1a:	b004      	add	sp, #16
 8000c1c:	4240      	negs	r0, r0
 8000c1e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c22:	4770      	bx	lr
 8000c24:	4252      	negs	r2, r2
 8000c26:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c2a:	f000 f821 	bl	8000c70 <__udivmoddi4>
 8000c2e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c36:	b004      	add	sp, #16
 8000c38:	4252      	negs	r2, r2
 8000c3a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c3e:	4770      	bx	lr

08000c40 <__aeabi_uldivmod>:
 8000c40:	b953      	cbnz	r3, 8000c58 <__aeabi_uldivmod+0x18>
 8000c42:	b94a      	cbnz	r2, 8000c58 <__aeabi_uldivmod+0x18>
 8000c44:	2900      	cmp	r1, #0
 8000c46:	bf08      	it	eq
 8000c48:	2800      	cmpeq	r0, #0
 8000c4a:	bf1c      	itt	ne
 8000c4c:	f04f 31ff 	movne.w	r1, #4294967295
 8000c50:	f04f 30ff 	movne.w	r0, #4294967295
 8000c54:	f000 b96a 	b.w	8000f2c <__aeabi_idiv0>
 8000c58:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c5c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c60:	f000 f806 	bl	8000c70 <__udivmoddi4>
 8000c64:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c68:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c6c:	b004      	add	sp, #16
 8000c6e:	4770      	bx	lr

08000c70 <__udivmoddi4>:
 8000c70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c74:	9d08      	ldr	r5, [sp, #32]
 8000c76:	460c      	mov	r4, r1
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d14e      	bne.n	8000d1a <__udivmoddi4+0xaa>
 8000c7c:	4694      	mov	ip, r2
 8000c7e:	458c      	cmp	ip, r1
 8000c80:	4686      	mov	lr, r0
 8000c82:	fab2 f282 	clz	r2, r2
 8000c86:	d962      	bls.n	8000d4e <__udivmoddi4+0xde>
 8000c88:	b14a      	cbz	r2, 8000c9e <__udivmoddi4+0x2e>
 8000c8a:	f1c2 0320 	rsb	r3, r2, #32
 8000c8e:	4091      	lsls	r1, r2
 8000c90:	fa20 f303 	lsr.w	r3, r0, r3
 8000c94:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c98:	4319      	orrs	r1, r3
 8000c9a:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c9e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ca2:	fa1f f68c 	uxth.w	r6, ip
 8000ca6:	fbb1 f4f7 	udiv	r4, r1, r7
 8000caa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cae:	fb07 1114 	mls	r1, r7, r4, r1
 8000cb2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cb6:	fb04 f106 	mul.w	r1, r4, r6
 8000cba:	4299      	cmp	r1, r3
 8000cbc:	d90a      	bls.n	8000cd4 <__udivmoddi4+0x64>
 8000cbe:	eb1c 0303 	adds.w	r3, ip, r3
 8000cc2:	f104 30ff 	add.w	r0, r4, #4294967295
 8000cc6:	f080 8112 	bcs.w	8000eee <__udivmoddi4+0x27e>
 8000cca:	4299      	cmp	r1, r3
 8000ccc:	f240 810f 	bls.w	8000eee <__udivmoddi4+0x27e>
 8000cd0:	3c02      	subs	r4, #2
 8000cd2:	4463      	add	r3, ip
 8000cd4:	1a59      	subs	r1, r3, r1
 8000cd6:	fa1f f38e 	uxth.w	r3, lr
 8000cda:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cde:	fb07 1110 	mls	r1, r7, r0, r1
 8000ce2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ce6:	fb00 f606 	mul.w	r6, r0, r6
 8000cea:	429e      	cmp	r6, r3
 8000cec:	d90a      	bls.n	8000d04 <__udivmoddi4+0x94>
 8000cee:	eb1c 0303 	adds.w	r3, ip, r3
 8000cf2:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cf6:	f080 80fc 	bcs.w	8000ef2 <__udivmoddi4+0x282>
 8000cfa:	429e      	cmp	r6, r3
 8000cfc:	f240 80f9 	bls.w	8000ef2 <__udivmoddi4+0x282>
 8000d00:	4463      	add	r3, ip
 8000d02:	3802      	subs	r0, #2
 8000d04:	1b9b      	subs	r3, r3, r6
 8000d06:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d0a:	2100      	movs	r1, #0
 8000d0c:	b11d      	cbz	r5, 8000d16 <__udivmoddi4+0xa6>
 8000d0e:	40d3      	lsrs	r3, r2
 8000d10:	2200      	movs	r2, #0
 8000d12:	e9c5 3200 	strd	r3, r2, [r5]
 8000d16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d1a:	428b      	cmp	r3, r1
 8000d1c:	d905      	bls.n	8000d2a <__udivmoddi4+0xba>
 8000d1e:	b10d      	cbz	r5, 8000d24 <__udivmoddi4+0xb4>
 8000d20:	e9c5 0100 	strd	r0, r1, [r5]
 8000d24:	2100      	movs	r1, #0
 8000d26:	4608      	mov	r0, r1
 8000d28:	e7f5      	b.n	8000d16 <__udivmoddi4+0xa6>
 8000d2a:	fab3 f183 	clz	r1, r3
 8000d2e:	2900      	cmp	r1, #0
 8000d30:	d146      	bne.n	8000dc0 <__udivmoddi4+0x150>
 8000d32:	42a3      	cmp	r3, r4
 8000d34:	d302      	bcc.n	8000d3c <__udivmoddi4+0xcc>
 8000d36:	4290      	cmp	r0, r2
 8000d38:	f0c0 80f0 	bcc.w	8000f1c <__udivmoddi4+0x2ac>
 8000d3c:	1a86      	subs	r6, r0, r2
 8000d3e:	eb64 0303 	sbc.w	r3, r4, r3
 8000d42:	2001      	movs	r0, #1
 8000d44:	2d00      	cmp	r5, #0
 8000d46:	d0e6      	beq.n	8000d16 <__udivmoddi4+0xa6>
 8000d48:	e9c5 6300 	strd	r6, r3, [r5]
 8000d4c:	e7e3      	b.n	8000d16 <__udivmoddi4+0xa6>
 8000d4e:	2a00      	cmp	r2, #0
 8000d50:	f040 8090 	bne.w	8000e74 <__udivmoddi4+0x204>
 8000d54:	eba1 040c 	sub.w	r4, r1, ip
 8000d58:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d5c:	fa1f f78c 	uxth.w	r7, ip
 8000d60:	2101      	movs	r1, #1
 8000d62:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d6a:	fb08 4416 	mls	r4, r8, r6, r4
 8000d6e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d72:	fb07 f006 	mul.w	r0, r7, r6
 8000d76:	4298      	cmp	r0, r3
 8000d78:	d908      	bls.n	8000d8c <__udivmoddi4+0x11c>
 8000d7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d7e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d82:	d202      	bcs.n	8000d8a <__udivmoddi4+0x11a>
 8000d84:	4298      	cmp	r0, r3
 8000d86:	f200 80cd 	bhi.w	8000f24 <__udivmoddi4+0x2b4>
 8000d8a:	4626      	mov	r6, r4
 8000d8c:	1a1c      	subs	r4, r3, r0
 8000d8e:	fa1f f38e 	uxth.w	r3, lr
 8000d92:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d96:	fb08 4410 	mls	r4, r8, r0, r4
 8000d9a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d9e:	fb00 f707 	mul.w	r7, r0, r7
 8000da2:	429f      	cmp	r7, r3
 8000da4:	d908      	bls.n	8000db8 <__udivmoddi4+0x148>
 8000da6:	eb1c 0303 	adds.w	r3, ip, r3
 8000daa:	f100 34ff 	add.w	r4, r0, #4294967295
 8000dae:	d202      	bcs.n	8000db6 <__udivmoddi4+0x146>
 8000db0:	429f      	cmp	r7, r3
 8000db2:	f200 80b0 	bhi.w	8000f16 <__udivmoddi4+0x2a6>
 8000db6:	4620      	mov	r0, r4
 8000db8:	1bdb      	subs	r3, r3, r7
 8000dba:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dbe:	e7a5      	b.n	8000d0c <__udivmoddi4+0x9c>
 8000dc0:	f1c1 0620 	rsb	r6, r1, #32
 8000dc4:	408b      	lsls	r3, r1
 8000dc6:	fa22 f706 	lsr.w	r7, r2, r6
 8000dca:	431f      	orrs	r7, r3
 8000dcc:	fa20 fc06 	lsr.w	ip, r0, r6
 8000dd0:	fa04 f301 	lsl.w	r3, r4, r1
 8000dd4:	ea43 030c 	orr.w	r3, r3, ip
 8000dd8:	40f4      	lsrs	r4, r6
 8000dda:	fa00 f801 	lsl.w	r8, r0, r1
 8000dde:	0c38      	lsrs	r0, r7, #16
 8000de0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000de4:	fbb4 fef0 	udiv	lr, r4, r0
 8000de8:	fa1f fc87 	uxth.w	ip, r7
 8000dec:	fb00 441e 	mls	r4, r0, lr, r4
 8000df0:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000df4:	fb0e f90c 	mul.w	r9, lr, ip
 8000df8:	45a1      	cmp	r9, r4
 8000dfa:	fa02 f201 	lsl.w	r2, r2, r1
 8000dfe:	d90a      	bls.n	8000e16 <__udivmoddi4+0x1a6>
 8000e00:	193c      	adds	r4, r7, r4
 8000e02:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e06:	f080 8084 	bcs.w	8000f12 <__udivmoddi4+0x2a2>
 8000e0a:	45a1      	cmp	r9, r4
 8000e0c:	f240 8081 	bls.w	8000f12 <__udivmoddi4+0x2a2>
 8000e10:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e14:	443c      	add	r4, r7
 8000e16:	eba4 0409 	sub.w	r4, r4, r9
 8000e1a:	fa1f f983 	uxth.w	r9, r3
 8000e1e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e22:	fb00 4413 	mls	r4, r0, r3, r4
 8000e26:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e2a:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e2e:	45a4      	cmp	ip, r4
 8000e30:	d907      	bls.n	8000e42 <__udivmoddi4+0x1d2>
 8000e32:	193c      	adds	r4, r7, r4
 8000e34:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e38:	d267      	bcs.n	8000f0a <__udivmoddi4+0x29a>
 8000e3a:	45a4      	cmp	ip, r4
 8000e3c:	d965      	bls.n	8000f0a <__udivmoddi4+0x29a>
 8000e3e:	3b02      	subs	r3, #2
 8000e40:	443c      	add	r4, r7
 8000e42:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e46:	fba0 9302 	umull	r9, r3, r0, r2
 8000e4a:	eba4 040c 	sub.w	r4, r4, ip
 8000e4e:	429c      	cmp	r4, r3
 8000e50:	46ce      	mov	lr, r9
 8000e52:	469c      	mov	ip, r3
 8000e54:	d351      	bcc.n	8000efa <__udivmoddi4+0x28a>
 8000e56:	d04e      	beq.n	8000ef6 <__udivmoddi4+0x286>
 8000e58:	b155      	cbz	r5, 8000e70 <__udivmoddi4+0x200>
 8000e5a:	ebb8 030e 	subs.w	r3, r8, lr
 8000e5e:	eb64 040c 	sbc.w	r4, r4, ip
 8000e62:	fa04 f606 	lsl.w	r6, r4, r6
 8000e66:	40cb      	lsrs	r3, r1
 8000e68:	431e      	orrs	r6, r3
 8000e6a:	40cc      	lsrs	r4, r1
 8000e6c:	e9c5 6400 	strd	r6, r4, [r5]
 8000e70:	2100      	movs	r1, #0
 8000e72:	e750      	b.n	8000d16 <__udivmoddi4+0xa6>
 8000e74:	f1c2 0320 	rsb	r3, r2, #32
 8000e78:	fa20 f103 	lsr.w	r1, r0, r3
 8000e7c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e80:	fa24 f303 	lsr.w	r3, r4, r3
 8000e84:	4094      	lsls	r4, r2
 8000e86:	430c      	orrs	r4, r1
 8000e88:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e8c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e90:	fa1f f78c 	uxth.w	r7, ip
 8000e94:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e98:	fb08 3110 	mls	r1, r8, r0, r3
 8000e9c:	0c23      	lsrs	r3, r4, #16
 8000e9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ea2:	fb00 f107 	mul.w	r1, r0, r7
 8000ea6:	4299      	cmp	r1, r3
 8000ea8:	d908      	bls.n	8000ebc <__udivmoddi4+0x24c>
 8000eaa:	eb1c 0303 	adds.w	r3, ip, r3
 8000eae:	f100 36ff 	add.w	r6, r0, #4294967295
 8000eb2:	d22c      	bcs.n	8000f0e <__udivmoddi4+0x29e>
 8000eb4:	4299      	cmp	r1, r3
 8000eb6:	d92a      	bls.n	8000f0e <__udivmoddi4+0x29e>
 8000eb8:	3802      	subs	r0, #2
 8000eba:	4463      	add	r3, ip
 8000ebc:	1a5b      	subs	r3, r3, r1
 8000ebe:	b2a4      	uxth	r4, r4
 8000ec0:	fbb3 f1f8 	udiv	r1, r3, r8
 8000ec4:	fb08 3311 	mls	r3, r8, r1, r3
 8000ec8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000ecc:	fb01 f307 	mul.w	r3, r1, r7
 8000ed0:	42a3      	cmp	r3, r4
 8000ed2:	d908      	bls.n	8000ee6 <__udivmoddi4+0x276>
 8000ed4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ed8:	f101 36ff 	add.w	r6, r1, #4294967295
 8000edc:	d213      	bcs.n	8000f06 <__udivmoddi4+0x296>
 8000ede:	42a3      	cmp	r3, r4
 8000ee0:	d911      	bls.n	8000f06 <__udivmoddi4+0x296>
 8000ee2:	3902      	subs	r1, #2
 8000ee4:	4464      	add	r4, ip
 8000ee6:	1ae4      	subs	r4, r4, r3
 8000ee8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000eec:	e739      	b.n	8000d62 <__udivmoddi4+0xf2>
 8000eee:	4604      	mov	r4, r0
 8000ef0:	e6f0      	b.n	8000cd4 <__udivmoddi4+0x64>
 8000ef2:	4608      	mov	r0, r1
 8000ef4:	e706      	b.n	8000d04 <__udivmoddi4+0x94>
 8000ef6:	45c8      	cmp	r8, r9
 8000ef8:	d2ae      	bcs.n	8000e58 <__udivmoddi4+0x1e8>
 8000efa:	ebb9 0e02 	subs.w	lr, r9, r2
 8000efe:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f02:	3801      	subs	r0, #1
 8000f04:	e7a8      	b.n	8000e58 <__udivmoddi4+0x1e8>
 8000f06:	4631      	mov	r1, r6
 8000f08:	e7ed      	b.n	8000ee6 <__udivmoddi4+0x276>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	e799      	b.n	8000e42 <__udivmoddi4+0x1d2>
 8000f0e:	4630      	mov	r0, r6
 8000f10:	e7d4      	b.n	8000ebc <__udivmoddi4+0x24c>
 8000f12:	46d6      	mov	lr, sl
 8000f14:	e77f      	b.n	8000e16 <__udivmoddi4+0x1a6>
 8000f16:	4463      	add	r3, ip
 8000f18:	3802      	subs	r0, #2
 8000f1a:	e74d      	b.n	8000db8 <__udivmoddi4+0x148>
 8000f1c:	4606      	mov	r6, r0
 8000f1e:	4623      	mov	r3, r4
 8000f20:	4608      	mov	r0, r1
 8000f22:	e70f      	b.n	8000d44 <__udivmoddi4+0xd4>
 8000f24:	3e02      	subs	r6, #2
 8000f26:	4463      	add	r3, ip
 8000f28:	e730      	b.n	8000d8c <__udivmoddi4+0x11c>
 8000f2a:	bf00      	nop

08000f2c <__aeabi_idiv0>:
 8000f2c:	4770      	bx	lr
 8000f2e:	bf00      	nop

08000f30 <write_register>:

//(1): Functions definitions
//-------------- Static Functions ---------------//
// Function(1): Write to register
static void write_register(uint8_t reg, uint8_t *data)
{
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b084      	sub	sp, #16
 8000f34:	af02      	add	r7, sp, #8
 8000f36:	4603      	mov	r3, r0
 8000f38:	6039      	str	r1, [r7, #0]
 8000f3a:	71fb      	strb	r3, [r7, #7]
	iData[0] = reg;
 8000f3c:	4a09      	ldr	r2, [pc, #36]	@ (8000f64 <write_register+0x34>)
 8000f3e:	79fb      	ldrb	r3, [r7, #7]
 8000f40:	7013      	strb	r3, [r2, #0]
	iData[1] = data[0];
 8000f42:	683b      	ldr	r3, [r7, #0]
 8000f44:	781a      	ldrb	r2, [r3, #0]
 8000f46:	4b07      	ldr	r3, [pc, #28]	@ (8000f64 <write_register+0x34>)
 8000f48:	705a      	strb	r2, [r3, #1]
	HAL_I2C_Master_Transmit(&i2cx, DAC_I2C_ADDR, iData, 2, 100);
 8000f4a:	2364      	movs	r3, #100	@ 0x64
 8000f4c:	9300      	str	r3, [sp, #0]
 8000f4e:	2302      	movs	r3, #2
 8000f50:	4a04      	ldr	r2, [pc, #16]	@ (8000f64 <write_register+0x34>)
 8000f52:	2194      	movs	r1, #148	@ 0x94
 8000f54:	4804      	ldr	r0, [pc, #16]	@ (8000f68 <write_register+0x38>)
 8000f56:	f003 fe49 	bl	8004bec <HAL_I2C_Master_Transmit>
	//HAL_I2C_Master_Transmit(&i2cx, DAC_I2C_ADDR, data, size, 100);
}
 8000f5a:	bf00      	nop
 8000f5c:	3708      	adds	r7, #8
 8000f5e:	46bd      	mov	sp, r7
 8000f60:	bd80      	pop	{r7, pc}
 8000f62:	bf00      	nop
 8000f64:	20000ac4 	.word	0x20000ac4
 8000f68:	20000ac8 	.word	0x20000ac8

08000f6c <read_register>:
// Function(2): Read from register
static void read_register(uint8_t reg, uint8_t *data)
{
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	b084      	sub	sp, #16
 8000f70:	af02      	add	r7, sp, #8
 8000f72:	4603      	mov	r3, r0
 8000f74:	6039      	str	r1, [r7, #0]
 8000f76:	71fb      	strb	r3, [r7, #7]
	iData[0] = reg;
 8000f78:	4a0b      	ldr	r2, [pc, #44]	@ (8000fa8 <read_register+0x3c>)
 8000f7a:	79fb      	ldrb	r3, [r7, #7]
 8000f7c:	7013      	strb	r3, [r2, #0]
	HAL_I2C_Master_Transmit(&i2cx, DAC_I2C_ADDR, iData, 1, 100);
 8000f7e:	2364      	movs	r3, #100	@ 0x64
 8000f80:	9300      	str	r3, [sp, #0]
 8000f82:	2301      	movs	r3, #1
 8000f84:	4a08      	ldr	r2, [pc, #32]	@ (8000fa8 <read_register+0x3c>)
 8000f86:	2194      	movs	r1, #148	@ 0x94
 8000f88:	4808      	ldr	r0, [pc, #32]	@ (8000fac <read_register+0x40>)
 8000f8a:	f003 fe2f 	bl	8004bec <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&i2cx, DAC_I2C_ADDR, data, 1, 100);
 8000f8e:	2364      	movs	r3, #100	@ 0x64
 8000f90:	9300      	str	r3, [sp, #0]
 8000f92:	2301      	movs	r3, #1
 8000f94:	683a      	ldr	r2, [r7, #0]
 8000f96:	2194      	movs	r1, #148	@ 0x94
 8000f98:	4804      	ldr	r0, [pc, #16]	@ (8000fac <read_register+0x40>)
 8000f9a:	f003 ff25 	bl	8004de8 <HAL_I2C_Master_Receive>
}
 8000f9e:	bf00      	nop
 8000fa0:	3708      	adds	r7, #8
 8000fa2:	46bd      	mov	sp, r7
 8000fa4:	bd80      	pop	{r7, pc}
 8000fa6:	bf00      	nop
 8000fa8:	20000ac4 	.word	0x20000ac4
 8000fac:	20000ac8 	.word	0x20000ac8

08000fb0 <CS43_Init>:

//-------------- Public Functions ----------------//
// Function(1): Initialisation
void CS43_Init(I2C_HandleTypeDef i2c_handle, CS43_MODE outputMode)
{
 8000fb0:	b084      	sub	sp, #16
 8000fb2:	b580      	push	{r7, lr}
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	f107 0c08 	add.w	ip, r7, #8
 8000fba:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	__HAL_UNLOCK(&hi2s3);     // THIS IS EXTREMELY IMPORTANT FOR I2S3 TO WORK
 8000fbe:	4b81      	ldr	r3, [pc, #516]	@ (80011c4 <CS43_Init+0x214>)
 8000fc0:	2200      	movs	r2, #0
 8000fc2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
	__HAL_I2S_ENABLE(&hi2s3); // THIS IS EXTREMELY IMPORTANT FOR I2S3 TO WORK
 8000fc6:	4b7f      	ldr	r3, [pc, #508]	@ (80011c4 <CS43_Init+0x214>)
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	69da      	ldr	r2, [r3, #28]
 8000fcc:	4b7d      	ldr	r3, [pc, #500]	@ (80011c4 <CS43_Init+0x214>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000fd4:	61da      	str	r2, [r3, #28]
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_4, GPIO_PIN_SET);
 8000fd6:	2201      	movs	r2, #1
 8000fd8:	2110      	movs	r1, #16
 8000fda:	487b      	ldr	r0, [pc, #492]	@ (80011c8 <CS43_Init+0x218>)
 8000fdc:	f003 fc8e 	bl	80048fc <HAL_GPIO_WritePin>
	//(1): Get the I2C handle
	i2cx = i2c_handle;
 8000fe0:	4b7a      	ldr	r3, [pc, #488]	@ (80011cc <CS43_Init+0x21c>)
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f107 0308 	add.w	r3, r7, #8
 8000fe8:	2254      	movs	r2, #84	@ 0x54
 8000fea:	4619      	mov	r1, r3
 8000fec:	f02c fe2d 	bl	802dc4a <memcpy>
	//(2): Power down
	iData[1] = 0x01;
 8000ff0:	4b77      	ldr	r3, [pc, #476]	@ (80011d0 <CS43_Init+0x220>)
 8000ff2:	2201      	movs	r2, #1
 8000ff4:	705a      	strb	r2, [r3, #1]
	write_register(POWER_CONTROL1,iData);
 8000ff6:	4976      	ldr	r1, [pc, #472]	@ (80011d0 <CS43_Init+0x220>)
 8000ff8:	2002      	movs	r0, #2
 8000ffa:	f7ff ff99 	bl	8000f30 <write_register>
	//(3): Enable Right and Left headphones
	iData[1] =  (2 << 6);  // PDN_HPB[0:1]  = 10 (HP-B always onCon)
 8000ffe:	4b74      	ldr	r3, [pc, #464]	@ (80011d0 <CS43_Init+0x220>)
 8001000:	2280      	movs	r2, #128	@ 0x80
 8001002:	705a      	strb	r2, [r3, #1]
	iData[1] |= (2 << 4);  // PDN_HPA[0:1]  = 10 (HP-A always on)
 8001004:	4b72      	ldr	r3, [pc, #456]	@ (80011d0 <CS43_Init+0x220>)
 8001006:	785b      	ldrb	r3, [r3, #1]
 8001008:	f043 0320 	orr.w	r3, r3, #32
 800100c:	b2da      	uxtb	r2, r3
 800100e:	4b70      	ldr	r3, [pc, #448]	@ (80011d0 <CS43_Init+0x220>)
 8001010:	705a      	strb	r2, [r3, #1]
	iData[1] |= (3 << 2);  // PDN_SPKB[0:1] = 11 (Speaker B always off)
 8001012:	4b6f      	ldr	r3, [pc, #444]	@ (80011d0 <CS43_Init+0x220>)
 8001014:	785b      	ldrb	r3, [r3, #1]
 8001016:	f043 030c 	orr.w	r3, r3, #12
 800101a:	b2da      	uxtb	r2, r3
 800101c:	4b6c      	ldr	r3, [pc, #432]	@ (80011d0 <CS43_Init+0x220>)
 800101e:	705a      	strb	r2, [r3, #1]
	iData[1] |= (3 << 0);  // PDN_SPKA[0:1] = 11 (Speaker A always off)
 8001020:	4b6b      	ldr	r3, [pc, #428]	@ (80011d0 <CS43_Init+0x220>)
 8001022:	785b      	ldrb	r3, [r3, #1]
 8001024:	f043 0303 	orr.w	r3, r3, #3
 8001028:	b2da      	uxtb	r2, r3
 800102a:	4b69      	ldr	r3, [pc, #420]	@ (80011d0 <CS43_Init+0x220>)
 800102c:	705a      	strb	r2, [r3, #1]
	write_register(POWER_CONTROL2,&iData[1]);
 800102e:	4969      	ldr	r1, [pc, #420]	@ (80011d4 <CS43_Init+0x224>)
 8001030:	2004      	movs	r0, #4
 8001032:	f7ff ff7d 	bl	8000f30 <write_register>
	//(4): Automatic clock detection
	iData[1] = (1 << 7);
 8001036:	4b66      	ldr	r3, [pc, #408]	@ (80011d0 <CS43_Init+0x220>)
 8001038:	2280      	movs	r2, #128	@ 0x80
 800103a:	705a      	strb	r2, [r3, #1]
	write_register(CLOCKING_CONTROL,&iData[1]);
 800103c:	4965      	ldr	r1, [pc, #404]	@ (80011d4 <CS43_Init+0x224>)
 800103e:	2005      	movs	r0, #5
 8001040:	f7ff ff76 	bl	8000f30 <write_register>
	//(5): Interface control 1
	read_register(INTERFACE_CONTROL1, iData);
 8001044:	4962      	ldr	r1, [pc, #392]	@ (80011d0 <CS43_Init+0x220>)
 8001046:	2006      	movs	r0, #6
 8001048:	f7ff ff90 	bl	8000f6c <read_register>
	iData[1] &= (1 << 5);   // Clear all bits except bit 5 which is reserved
 800104c:	4b60      	ldr	r3, [pc, #384]	@ (80011d0 <CS43_Init+0x220>)
 800104e:	785b      	ldrb	r3, [r3, #1]
 8001050:	f003 0320 	and.w	r3, r3, #32
 8001054:	b2da      	uxtb	r2, r3
 8001056:	4b5e      	ldr	r3, [pc, #376]	@ (80011d0 <CS43_Init+0x220>)
 8001058:	705a      	strb	r2, [r3, #1]
	iData[1] &= ~(1 << 7);  // Slave
 800105a:	4b5d      	ldr	r3, [pc, #372]	@ (80011d0 <CS43_Init+0x220>)
 800105c:	785b      	ldrb	r3, [r3, #1]
 800105e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001062:	b2da      	uxtb	r2, r3
 8001064:	4b5a      	ldr	r3, [pc, #360]	@ (80011d0 <CS43_Init+0x220>)
 8001066:	705a      	strb	r2, [r3, #1]
	iData[1] &= ~(1 << 6);  // Clock polarity: Not inverted
 8001068:	4b59      	ldr	r3, [pc, #356]	@ (80011d0 <CS43_Init+0x220>)
 800106a:	785b      	ldrb	r3, [r3, #1]
 800106c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001070:	b2da      	uxtb	r2, r3
 8001072:	4b57      	ldr	r3, [pc, #348]	@ (80011d0 <CS43_Init+0x220>)
 8001074:	705a      	strb	r2, [r3, #1]
	iData[1] &= ~(1 << 4);  // No DSP mode
 8001076:	4b56      	ldr	r3, [pc, #344]	@ (80011d0 <CS43_Init+0x220>)
 8001078:	785b      	ldrb	r3, [r3, #1]
 800107a:	f023 0310 	bic.w	r3, r3, #16
 800107e:	b2da      	uxtb	r2, r3
 8001080:	4b53      	ldr	r3, [pc, #332]	@ (80011d0 <CS43_Init+0x220>)
 8001082:	705a      	strb	r2, [r3, #1]
	iData[1] &= ~(1 << 2);  // Left justified, up to 24 bit (default)
 8001084:	4b52      	ldr	r3, [pc, #328]	@ (80011d0 <CS43_Init+0x220>)
 8001086:	785b      	ldrb	r3, [r3, #1]
 8001088:	f023 0304 	bic.w	r3, r3, #4
 800108c:	b2da      	uxtb	r2, r3
 800108e:	4b50      	ldr	r3, [pc, #320]	@ (80011d0 <CS43_Init+0x220>)
 8001090:	705a      	strb	r2, [r3, #1]
	iData[1] |= (1 << 2);
 8001092:	4b4f      	ldr	r3, [pc, #316]	@ (80011d0 <CS43_Init+0x220>)
 8001094:	785b      	ldrb	r3, [r3, #1]
 8001096:	f043 0304 	orr.w	r3, r3, #4
 800109a:	b2da      	uxtb	r2, r3
 800109c:	4b4c      	ldr	r3, [pc, #304]	@ (80011d0 <CS43_Init+0x220>)
 800109e:	705a      	strb	r2, [r3, #1]
	
	iData[1] |=  (3 << 0);  // 16-bit audio word length for I2S interface
 80010a0:	4b4b      	ldr	r3, [pc, #300]	@ (80011d0 <CS43_Init+0x220>)
 80010a2:	785b      	ldrb	r3, [r3, #1]
 80010a4:	f043 0303 	orr.w	r3, r3, #3
 80010a8:	b2da      	uxtb	r2, r3
 80010aa:	4b49      	ldr	r3, [pc, #292]	@ (80011d0 <CS43_Init+0x220>)
 80010ac:	705a      	strb	r2, [r3, #1]
	write_register(INTERFACE_CONTROL1,&iData[1]);
 80010ae:	4949      	ldr	r1, [pc, #292]	@ (80011d4 <CS43_Init+0x224>)
 80010b0:	2006      	movs	r0, #6
 80010b2:	f7ff ff3d 	bl	8000f30 <write_register>
	//(6): Passthrough A settings
	read_register(PASSTHROUGH_A, &iData[1]);
 80010b6:	4947      	ldr	r1, [pc, #284]	@ (80011d4 <CS43_Init+0x224>)
 80010b8:	2008      	movs	r0, #8
 80010ba:	f7ff ff57 	bl	8000f6c <read_register>
	iData[1] &= 0xF0;      // Bits [4-7] are reserved
 80010be:	4b44      	ldr	r3, [pc, #272]	@ (80011d0 <CS43_Init+0x220>)
 80010c0:	785b      	ldrb	r3, [r3, #1]
 80010c2:	f023 030f 	bic.w	r3, r3, #15
 80010c6:	b2da      	uxtb	r2, r3
 80010c8:	4b41      	ldr	r3, [pc, #260]	@ (80011d0 <CS43_Init+0x220>)
 80010ca:	705a      	strb	r2, [r3, #1]
	iData[1] |=  (1 << 0); // Use AIN1A as source for passthrough
 80010cc:	4b40      	ldr	r3, [pc, #256]	@ (80011d0 <CS43_Init+0x220>)
 80010ce:	785b      	ldrb	r3, [r3, #1]
 80010d0:	f043 0301 	orr.w	r3, r3, #1
 80010d4:	b2da      	uxtb	r2, r3
 80010d6:	4b3e      	ldr	r3, [pc, #248]	@ (80011d0 <CS43_Init+0x220>)
 80010d8:	705a      	strb	r2, [r3, #1]
	write_register(PASSTHROUGH_A,&iData[1]);
 80010da:	493e      	ldr	r1, [pc, #248]	@ (80011d4 <CS43_Init+0x224>)
 80010dc:	2008      	movs	r0, #8
 80010de:	f7ff ff27 	bl	8000f30 <write_register>
	//(7): Passthrough B settings
	read_register(PASSTHROUGH_B, &iData[1]);
 80010e2:	493c      	ldr	r1, [pc, #240]	@ (80011d4 <CS43_Init+0x224>)
 80010e4:	2009      	movs	r0, #9
 80010e6:	f7ff ff41 	bl	8000f6c <read_register>
	iData[1] &= 0xF0;      // Bits [4-7] are reserved
 80010ea:	4b39      	ldr	r3, [pc, #228]	@ (80011d0 <CS43_Init+0x220>)
 80010ec:	785b      	ldrb	r3, [r3, #1]
 80010ee:	f023 030f 	bic.w	r3, r3, #15
 80010f2:	b2da      	uxtb	r2, r3
 80010f4:	4b36      	ldr	r3, [pc, #216]	@ (80011d0 <CS43_Init+0x220>)
 80010f6:	705a      	strb	r2, [r3, #1]
	iData[1] |=  (1 << 0); // Use AIN1B as source for passthrough
 80010f8:	4b35      	ldr	r3, [pc, #212]	@ (80011d0 <CS43_Init+0x220>)
 80010fa:	785b      	ldrb	r3, [r3, #1]
 80010fc:	f043 0301 	orr.w	r3, r3, #1
 8001100:	b2da      	uxtb	r2, r3
 8001102:	4b33      	ldr	r3, [pc, #204]	@ (80011d0 <CS43_Init+0x220>)
 8001104:	705a      	strb	r2, [r3, #1]
	write_register(PASSTHROUGH_B,&iData[1]);
 8001106:	4933      	ldr	r1, [pc, #204]	@ (80011d4 <CS43_Init+0x224>)
 8001108:	2009      	movs	r0, #9
 800110a:	f7ff ff11 	bl	8000f30 <write_register>
	//(8): Miscellaneous register settings
	read_register(MISCELLANEOUS_CONTRLS, &iData[1]);
 800110e:	4931      	ldr	r1, [pc, #196]	@ (80011d4 <CS43_Init+0x224>)
 8001110:	200e      	movs	r0, #14
 8001112:	f7ff ff2b 	bl	8000f6c <read_register>
	if(outputMode == MODE_ANLG)
 8001116:	f897 305c 	ldrb.w	r3, [r7, #92]	@ 0x5c
 800111a:	2b01      	cmp	r3, #1
 800111c:	d123      	bne.n	8001166 <CS43_Init+0x1b6>
	{
		iData[1] |=  (1 << 7);   // Enable passthrough for AIN-A
 800111e:	4b2c      	ldr	r3, [pc, #176]	@ (80011d0 <CS43_Init+0x220>)
 8001120:	785b      	ldrb	r3, [r3, #1]
 8001122:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001126:	b2da      	uxtb	r2, r3
 8001128:	4b29      	ldr	r3, [pc, #164]	@ (80011d0 <CS43_Init+0x220>)
 800112a:	705a      	strb	r2, [r3, #1]
		iData[1] |=  (1 << 6);   // Enable passthrough for AIN-B
 800112c:	4b28      	ldr	r3, [pc, #160]	@ (80011d0 <CS43_Init+0x220>)
 800112e:	785b      	ldrb	r3, [r3, #1]
 8001130:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001134:	b2da      	uxtb	r2, r3
 8001136:	4b26      	ldr	r3, [pc, #152]	@ (80011d0 <CS43_Init+0x220>)
 8001138:	705a      	strb	r2, [r3, #1]
		iData[1] &= ~(1 << 5);   // Unmute passthrough on AIN-A
 800113a:	4b25      	ldr	r3, [pc, #148]	@ (80011d0 <CS43_Init+0x220>)
 800113c:	785b      	ldrb	r3, [r3, #1]
 800113e:	f023 0320 	bic.w	r3, r3, #32
 8001142:	b2da      	uxtb	r2, r3
 8001144:	4b22      	ldr	r3, [pc, #136]	@ (80011d0 <CS43_Init+0x220>)
 8001146:	705a      	strb	r2, [r3, #1]
		iData[1] &= ~(1 << 4);   // Unmute passthrough on AIN-B
 8001148:	4b21      	ldr	r3, [pc, #132]	@ (80011d0 <CS43_Init+0x220>)
 800114a:	785b      	ldrb	r3, [r3, #1]
 800114c:	f023 0310 	bic.w	r3, r3, #16
 8001150:	b2da      	uxtb	r2, r3
 8001152:	4b1f      	ldr	r3, [pc, #124]	@ (80011d0 <CS43_Init+0x220>)
 8001154:	705a      	strb	r2, [r3, #1]
		iData[1] &= ~(1 << 3);   // Changed settings take effect immediately
 8001156:	4b1e      	ldr	r3, [pc, #120]	@ (80011d0 <CS43_Init+0x220>)
 8001158:	785b      	ldrb	r3, [r3, #1]
 800115a:	f023 0308 	bic.w	r3, r3, #8
 800115e:	b2da      	uxtb	r2, r3
 8001160:	4b1b      	ldr	r3, [pc, #108]	@ (80011d0 <CS43_Init+0x220>)
 8001162:	705a      	strb	r2, [r3, #1]
 8001164:	e006      	b.n	8001174 <CS43_Init+0x1c4>
	}
	else if(outputMode == MODE_I2S)
 8001166:	f897 305c 	ldrb.w	r3, [r7, #92]	@ 0x5c
 800116a:	2b00      	cmp	r3, #0
 800116c:	d102      	bne.n	8001174 <CS43_Init+0x1c4>
	{
		iData[1] = 0x02;		 // de-emphasis filter and soft ramp
 800116e:	4b18      	ldr	r3, [pc, #96]	@ (80011d0 <CS43_Init+0x220>)
 8001170:	2202      	movs	r2, #2
 8001172:	705a      	strb	r2, [r3, #1]
	}
	write_register(MISCELLANEOUS_CONTRLS,&iData[1]);
 8001174:	4917      	ldr	r1, [pc, #92]	@ (80011d4 <CS43_Init+0x224>)
 8001176:	200e      	movs	r0, #14
 8001178:	f7ff feda 	bl	8000f30 <write_register>
	//(9): Unmute headphone and speaker
	read_register(PLAYBACK_CONTROL, &iData[1]);
 800117c:	4915      	ldr	r1, [pc, #84]	@ (80011d4 <CS43_Init+0x224>)
 800117e:	200f      	movs	r0, #15
 8001180:	f7ff fef4 	bl	8000f6c <read_register>
	iData[1] = 0x00;
 8001184:	4b12      	ldr	r3, [pc, #72]	@ (80011d0 <CS43_Init+0x220>)
 8001186:	2200      	movs	r2, #0
 8001188:	705a      	strb	r2, [r3, #1]
	write_register(PLAYBACK_CONTROL,&iData[1]);
 800118a:	4912      	ldr	r1, [pc, #72]	@ (80011d4 <CS43_Init+0x224>)
 800118c:	200f      	movs	r0, #15
 800118e:	f7ff fecf 	bl	8000f30 <write_register>
	//(10): Set volume to default (0dB)
	iData[1] = 0x00;
 8001192:	4b0f      	ldr	r3, [pc, #60]	@ (80011d0 <CS43_Init+0x220>)
 8001194:	2200      	movs	r2, #0
 8001196:	705a      	strb	r2, [r3, #1]
	write_register(PASSTHROUGH_VOLUME_A,&iData[1]);
 8001198:	490e      	ldr	r1, [pc, #56]	@ (80011d4 <CS43_Init+0x224>)
 800119a:	2014      	movs	r0, #20
 800119c:	f7ff fec8 	bl	8000f30 <write_register>
	write_register(PASSTHROUGH_VOLUME_B,&iData[1]);
 80011a0:	490c      	ldr	r1, [pc, #48]	@ (80011d4 <CS43_Init+0x224>)
 80011a2:	2015      	movs	r0, #21
 80011a4:	f7ff fec4 	bl	8000f30 <write_register>
	write_register(PCM_VOLUME_A,&iData[1]);
 80011a8:	490a      	ldr	r1, [pc, #40]	@ (80011d4 <CS43_Init+0x224>)
 80011aa:	201a      	movs	r0, #26
 80011ac:	f7ff fec0 	bl	8000f30 <write_register>
	write_register(PCM_VOLUME_B,&iData[1]);
 80011b0:	4908      	ldr	r1, [pc, #32]	@ (80011d4 <CS43_Init+0x224>)
 80011b2:	201b      	movs	r0, #27
 80011b4:	f7ff febc 	bl	8000f30 <write_register>
}
 80011b8:	bf00      	nop
 80011ba:	46bd      	mov	sp, r7
 80011bc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80011c0:	b004      	add	sp, #16
 80011c2:	4770      	bx	lr
 80011c4:	20000c60 	.word	0x20000c60
 80011c8:	40020c00 	.word	0x40020c00
 80011cc:	20000ac8 	.word	0x20000ac8
 80011d0:	20000ac4 	.word	0x20000ac4
 80011d4:	20000ac5 	.word	0x20000ac5

080011d8 <CS43_Enable_RightLeft>:

// Function(2): Enable Right and Left headphones
void CS43_Enable_RightLeft(uint8_t side)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b082      	sub	sp, #8
 80011dc:	af00      	add	r7, sp, #0
 80011de:	4603      	mov	r3, r0
 80011e0:	71fb      	strb	r3, [r7, #7]
	switch (side)
 80011e2:	79fb      	ldrb	r3, [r7, #7]
 80011e4:	2b03      	cmp	r3, #3
 80011e6:	d837      	bhi.n	8001258 <CS43_Enable_RightLeft+0x80>
 80011e8:	a201      	add	r2, pc, #4	@ (adr r2, 80011f0 <CS43_Enable_RightLeft+0x18>)
 80011ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011ee:	bf00      	nop
 80011f0:	08001201 	.word	0x08001201
 80011f4:	08001217 	.word	0x08001217
 80011f8:	0800122d 	.word	0x0800122d
 80011fc:	08001243 	.word	0x08001243
	{
		case 0:
			iData[1] =  (3 << 6);  // PDN_HPB[0:1]  = 10 (HP-B always onCon)
 8001200:	4b21      	ldr	r3, [pc, #132]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001202:	22c0      	movs	r2, #192	@ 0xc0
 8001204:	705a      	strb	r2, [r3, #1]
			iData[1] |= (3 << 4);  // PDN_HPA[0:1]  = 10 (HP-A always on)
 8001206:	4b20      	ldr	r3, [pc, #128]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001208:	785b      	ldrb	r3, [r3, #1]
 800120a:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 800120e:	b2da      	uxtb	r2, r3
 8001210:	4b1d      	ldr	r3, [pc, #116]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001212:	705a      	strb	r2, [r3, #1]
			break;
 8001214:	e021      	b.n	800125a <CS43_Enable_RightLeft+0x82>
		case 1:
			iData[1] =  (2 << 6);  // PDN_HPB[0:1]  = 10 (HP-B always onCon)
 8001216:	4b1c      	ldr	r3, [pc, #112]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001218:	2280      	movs	r2, #128	@ 0x80
 800121a:	705a      	strb	r2, [r3, #1]
			iData[1] |= (3 << 4);  // PDN_HPA[0:1]  = 10 (HP-A always on)
 800121c:	4b1a      	ldr	r3, [pc, #104]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800121e:	785b      	ldrb	r3, [r3, #1]
 8001220:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8001224:	b2da      	uxtb	r2, r3
 8001226:	4b18      	ldr	r3, [pc, #96]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001228:	705a      	strb	r2, [r3, #1]
			break;
 800122a:	e016      	b.n	800125a <CS43_Enable_RightLeft+0x82>
		case 2:
			iData[1] =  (3 << 6);  // PDN_HPB[0:1]  = 10 (HP-B always onCon)
 800122c:	4b16      	ldr	r3, [pc, #88]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800122e:	22c0      	movs	r2, #192	@ 0xc0
 8001230:	705a      	strb	r2, [r3, #1]
			iData[1] |= (2 << 4);  // PDN_HPA[0:1]  = 10 (HP-A always on)
 8001232:	4b15      	ldr	r3, [pc, #84]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001234:	785b      	ldrb	r3, [r3, #1]
 8001236:	f043 0320 	orr.w	r3, r3, #32
 800123a:	b2da      	uxtb	r2, r3
 800123c:	4b12      	ldr	r3, [pc, #72]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800123e:	705a      	strb	r2, [r3, #1]
			break;
 8001240:	e00b      	b.n	800125a <CS43_Enable_RightLeft+0x82>
		case 3:
			iData[1] =  (2 << 6);  // PDN_HPB[0:1]  = 10 (HP-B always onCon)
 8001242:	4b11      	ldr	r3, [pc, #68]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001244:	2280      	movs	r2, #128	@ 0x80
 8001246:	705a      	strb	r2, [r3, #1]
			iData[1] |= (2 << 4);  // PDN_HPA[0:1]  = 10 (HP-A always on)
 8001248:	4b0f      	ldr	r3, [pc, #60]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800124a:	785b      	ldrb	r3, [r3, #1]
 800124c:	f043 0320 	orr.w	r3, r3, #32
 8001250:	b2da      	uxtb	r2, r3
 8001252:	4b0d      	ldr	r3, [pc, #52]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001254:	705a      	strb	r2, [r3, #1]
			break;
 8001256:	e000      	b.n	800125a <CS43_Enable_RightLeft+0x82>
		default:
			break;
 8001258:	bf00      	nop
	}
	iData[1] |= (3 << 2);  // PDN_SPKB[0:1] = 11 (Speaker B always off)
 800125a:	4b0b      	ldr	r3, [pc, #44]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800125c:	785b      	ldrb	r3, [r3, #1]
 800125e:	f043 030c 	orr.w	r3, r3, #12
 8001262:	b2da      	uxtb	r2, r3
 8001264:	4b08      	ldr	r3, [pc, #32]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001266:	705a      	strb	r2, [r3, #1]
	iData[1] |= (3 << 0);  // PDN_SPKA[0:1] = 11 (Speaker A always off)
 8001268:	4b07      	ldr	r3, [pc, #28]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 800126a:	785b      	ldrb	r3, [r3, #1]
 800126c:	f043 0303 	orr.w	r3, r3, #3
 8001270:	b2da      	uxtb	r2, r3
 8001272:	4b05      	ldr	r3, [pc, #20]	@ (8001288 <CS43_Enable_RightLeft+0xb0>)
 8001274:	705a      	strb	r2, [r3, #1]
	write_register(POWER_CONTROL2,&iData[1]);
 8001276:	4905      	ldr	r1, [pc, #20]	@ (800128c <CS43_Enable_RightLeft+0xb4>)
 8001278:	2004      	movs	r0, #4
 800127a:	f7ff fe59 	bl	8000f30 <write_register>
}
 800127e:	bf00      	nop
 8001280:	3708      	adds	r7, #8
 8001282:	46bd      	mov	sp, r7
 8001284:	bd80      	pop	{r7, pc}
 8001286:	bf00      	nop
 8001288:	20000ac4 	.word	0x20000ac4
 800128c:	20000ac5 	.word	0x20000ac5

08001290 <CS43_SetVolume>:

// Function(3): Set Volume Level
void CS43_SetVolume(uint8_t volume)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	b084      	sub	sp, #16
 8001294:	af00      	add	r7, sp, #0
 8001296:	4603      	mov	r3, r0
 8001298:	71fb      	strb	r3, [r7, #7]
	int8_t tempVol = volume - 50;
 800129a:	79fb      	ldrb	r3, [r7, #7]
 800129c:	3b32      	subs	r3, #50	@ 0x32
 800129e:	b2db      	uxtb	r3, r3
 80012a0:	73fb      	strb	r3, [r7, #15]
	tempVol = tempVol*(127/50);
 80012a2:	7bfb      	ldrb	r3, [r7, #15]
 80012a4:	005b      	lsls	r3, r3, #1
 80012a6:	b2db      	uxtb	r3, r3
 80012a8:	73fb      	strb	r3, [r7, #15]
	uint8_t myVolume =  (uint8_t )tempVol;
 80012aa:	7bfb      	ldrb	r3, [r7, #15]
 80012ac:	73bb      	strb	r3, [r7, #14]
	iData[1] = myVolume;
 80012ae:	4a16      	ldr	r2, [pc, #88]	@ (8001308 <CS43_SetVolume+0x78>)
 80012b0:	7bbb      	ldrb	r3, [r7, #14]
 80012b2:	7053      	strb	r3, [r2, #1]
	write_register(PASSTHROUGH_VOLUME_A,&iData[1]);
 80012b4:	4915      	ldr	r1, [pc, #84]	@ (800130c <CS43_SetVolume+0x7c>)
 80012b6:	2014      	movs	r0, #20
 80012b8:	f7ff fe3a 	bl	8000f30 <write_register>
	write_register(PASSTHROUGH_VOLUME_B,&iData[1]);
 80012bc:	4913      	ldr	r1, [pc, #76]	@ (800130c <CS43_SetVolume+0x7c>)
 80012be:	2015      	movs	r0, #21
 80012c0:	f7ff fe36 	bl	8000f30 <write_register>
	
	iData[1] = VOLUME_CONVERT_D(volume);
 80012c4:	79fb      	ldrb	r3, [r7, #7]
 80012c6:	2b64      	cmp	r3, #100	@ 0x64
 80012c8:	d80e      	bhi.n	80012e8 <CS43_SetVolume+0x58>
 80012ca:	79fa      	ldrb	r2, [r7, #7]
 80012cc:	4613      	mov	r3, r2
 80012ce:	005b      	lsls	r3, r3, #1
 80012d0:	4413      	add	r3, r2
 80012d2:	011b      	lsls	r3, r3, #4
 80012d4:	4a0e      	ldr	r2, [pc, #56]	@ (8001310 <CS43_SetVolume+0x80>)
 80012d6:	fb82 1203 	smull	r1, r2, r2, r3
 80012da:	1152      	asrs	r2, r2, #5
 80012dc:	17db      	asrs	r3, r3, #31
 80012de:	1ad3      	subs	r3, r2, r3
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	3b18      	subs	r3, #24
 80012e4:	b2db      	uxtb	r3, r3
 80012e6:	e000      	b.n	80012ea <CS43_SetVolume+0x5a>
 80012e8:	2318      	movs	r3, #24
 80012ea:	4a07      	ldr	r2, [pc, #28]	@ (8001308 <CS43_SetVolume+0x78>)
 80012ec:	7053      	strb	r3, [r2, #1]
	
	/* Set the Master volume */ 
	write_register(CS43L22_REG_MASTER_A_VOL,&iData[1]);
 80012ee:	4907      	ldr	r1, [pc, #28]	@ (800130c <CS43_SetVolume+0x7c>)
 80012f0:	2020      	movs	r0, #32
 80012f2:	f7ff fe1d 	bl	8000f30 <write_register>
	write_register(CS43L22_REG_MASTER_B_VOL,&iData[1]);
 80012f6:	4905      	ldr	r1, [pc, #20]	@ (800130c <CS43_SetVolume+0x7c>)
 80012f8:	2021      	movs	r0, #33	@ 0x21
 80012fa:	f7ff fe19 	bl	8000f30 <write_register>
}
 80012fe:	bf00      	nop
 8001300:	3710      	adds	r7, #16
 8001302:	46bd      	mov	sp, r7
 8001304:	bd80      	pop	{r7, pc}
 8001306:	bf00      	nop
 8001308:	20000ac4 	.word	0x20000ac4
 800130c:	20000ac5 	.word	0x20000ac5
 8001310:	51eb851f 	.word	0x51eb851f

08001314 <CS43_Start>:

// Function(4): Start the Audio DAC
void CS43_Start(void)
{
 8001314:	b580      	push	{r7, lr}
 8001316:	af00      	add	r7, sp, #0
	// Write 0x99 to register 0x00.
	iData[1] = 0x99;
 8001318:	4b1d      	ldr	r3, [pc, #116]	@ (8001390 <CS43_Start+0x7c>)
 800131a:	2299      	movs	r2, #153	@ 0x99
 800131c:	705a      	strb	r2, [r3, #1]
	write_register(CONFIG_00,&iData[1]);
 800131e:	491d      	ldr	r1, [pc, #116]	@ (8001394 <CS43_Start+0x80>)
 8001320:	2000      	movs	r0, #0
 8001322:	f7ff fe05 	bl	8000f30 <write_register>
	// Write 0x80 to register 0x47.
	iData[1] = 0x80;
 8001326:	4b1a      	ldr	r3, [pc, #104]	@ (8001390 <CS43_Start+0x7c>)
 8001328:	2280      	movs	r2, #128	@ 0x80
 800132a:	705a      	strb	r2, [r3, #1]
	write_register(CONFIG_47,&iData[1]);
 800132c:	4919      	ldr	r1, [pc, #100]	@ (8001394 <CS43_Start+0x80>)
 800132e:	2047      	movs	r0, #71	@ 0x47
 8001330:	f7ff fdfe 	bl	8000f30 <write_register>
	// Write '1'b to bit 7 in register 0x32.
	read_register(CONFIG_32, &iData[1]);
 8001334:	4917      	ldr	r1, [pc, #92]	@ (8001394 <CS43_Start+0x80>)
 8001336:	2032      	movs	r0, #50	@ 0x32
 8001338:	f7ff fe18 	bl	8000f6c <read_register>
	iData[1] |= 0x80;
 800133c:	4b14      	ldr	r3, [pc, #80]	@ (8001390 <CS43_Start+0x7c>)
 800133e:	785b      	ldrb	r3, [r3, #1]
 8001340:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001344:	b2da      	uxtb	r2, r3
 8001346:	4b12      	ldr	r3, [pc, #72]	@ (8001390 <CS43_Start+0x7c>)
 8001348:	705a      	strb	r2, [r3, #1]
	write_register(CONFIG_32,&iData[1]);
 800134a:	4912      	ldr	r1, [pc, #72]	@ (8001394 <CS43_Start+0x80>)
 800134c:	2032      	movs	r0, #50	@ 0x32
 800134e:	f7ff fdef 	bl	8000f30 <write_register>
	// Write '0'b to bit 7 in register 0x32.
	read_register(CONFIG_32, &iData[1]);
 8001352:	4910      	ldr	r1, [pc, #64]	@ (8001394 <CS43_Start+0x80>)
 8001354:	2032      	movs	r0, #50	@ 0x32
 8001356:	f7ff fe09 	bl	8000f6c <read_register>
	iData[1] &= ~(0x80);
 800135a:	4b0d      	ldr	r3, [pc, #52]	@ (8001390 <CS43_Start+0x7c>)
 800135c:	785b      	ldrb	r3, [r3, #1]
 800135e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001362:	b2da      	uxtb	r2, r3
 8001364:	4b0a      	ldr	r3, [pc, #40]	@ (8001390 <CS43_Start+0x7c>)
 8001366:	705a      	strb	r2, [r3, #1]
	write_register(CONFIG_32,&iData[1]);
 8001368:	490a      	ldr	r1, [pc, #40]	@ (8001394 <CS43_Start+0x80>)
 800136a:	2032      	movs	r0, #50	@ 0x32
 800136c:	f7ff fde0 	bl	8000f30 <write_register>
	// Write 0x00 to register 0x00.
	iData[1] = 0x00;
 8001370:	4b07      	ldr	r3, [pc, #28]	@ (8001390 <CS43_Start+0x7c>)
 8001372:	2200      	movs	r2, #0
 8001374:	705a      	strb	r2, [r3, #1]
	write_register(CONFIG_00,&iData[1]);
 8001376:	4907      	ldr	r1, [pc, #28]	@ (8001394 <CS43_Start+0x80>)
 8001378:	2000      	movs	r0, #0
 800137a:	f7ff fdd9 	bl	8000f30 <write_register>
	//Set the "Power Ctl 1" register (0x02) to 0x9E
	iData[1] = 0x9E;
 800137e:	4b04      	ldr	r3, [pc, #16]	@ (8001390 <CS43_Start+0x7c>)
 8001380:	229e      	movs	r2, #158	@ 0x9e
 8001382:	705a      	strb	r2, [r3, #1]
	write_register(POWER_CONTROL1,&iData[1]);
 8001384:	4903      	ldr	r1, [pc, #12]	@ (8001394 <CS43_Start+0x80>)
 8001386:	2002      	movs	r0, #2
 8001388:	f7ff fdd2 	bl	8000f30 <write_register>
}
 800138c:	bf00      	nop
 800138e:	bd80      	pop	{r7, pc}
 8001390:	20000ac4 	.word	0x20000ac4
 8001394:	20000ac5 	.word	0x20000ac5

08001398 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc2;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8001398:	b580      	push	{r7, lr}
 800139a:	b084      	sub	sp, #16
 800139c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800139e:	463b      	mov	r3, r7
 80013a0:	2200      	movs	r2, #0
 80013a2:	601a      	str	r2, [r3, #0]
 80013a4:	605a      	str	r2, [r3, #4]
 80013a6:	609a      	str	r2, [r3, #8]
 80013a8:	60da      	str	r2, [r3, #12]
  // ADC1 receive input signal from YouTube via DC shifting circuit, at pin PA1
  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80013aa:	4b22      	ldr	r3, [pc, #136]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013ac:	4a22      	ldr	r2, [pc, #136]	@ (8001438 <MX_ADC1_Init+0xa0>)
 80013ae:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80013b0:	4b20      	ldr	r3, [pc, #128]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013b2:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80013b6:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80013b8:	4b1e      	ldr	r3, [pc, #120]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013ba:	2200      	movs	r2, #0
 80013bc:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80013be:	4b1d      	ldr	r3, [pc, #116]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013c0:	2200      	movs	r2, #0
 80013c2:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80013c4:	4b1b      	ldr	r3, [pc, #108]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013c6:	2200      	movs	r2, #0
 80013c8:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013ca:	4b1a      	ldr	r3, [pc, #104]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013cc:	2200      	movs	r2, #0
 80013ce:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013d2:	4b18      	ldr	r3, [pc, #96]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80013d8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 80013da:	4b16      	ldr	r3, [pc, #88]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013dc:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80013e0:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80013e2:	4b14      	ldr	r3, [pc, #80]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 80013e8:	4b12      	ldr	r3, [pc, #72]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013ea:	2201      	movs	r2, #1
 80013ec:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80013ee:	4b11      	ldr	r3, [pc, #68]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013f0:	2201      	movs	r2, #1
 80013f2:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80013f6:	4b0f      	ldr	r3, [pc, #60]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013f8:	2201      	movs	r2, #1
 80013fa:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80013fc:	480d      	ldr	r0, [pc, #52]	@ (8001434 <MX_ADC1_Init+0x9c>)
 80013fe:	f001 fc05 	bl	8002c0c <HAL_ADC_Init>
 8001402:	4603      	mov	r3, r0
 8001404:	2b00      	cmp	r3, #0
 8001406:	d001      	beq.n	800140c <MX_ADC1_Init+0x74>
  {
    Error_Handler();
 8001408:	f000 ff33 	bl	8002272 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800140c:	2301      	movs	r3, #1
 800140e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001410:	2301      	movs	r3, #1
 8001412:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 8001414:	2304      	movs	r3, #4
 8001416:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001418:	463b      	mov	r3, r7
 800141a:	4619      	mov	r1, r3
 800141c:	4805      	ldr	r0, [pc, #20]	@ (8001434 <MX_ADC1_Init+0x9c>)
 800141e:	f001 febf 	bl	80031a0 <HAL_ADC_ConfigChannel>
 8001422:	4603      	mov	r3, r0
 8001424:	2b00      	cmp	r3, #0
 8001426:	d001      	beq.n	800142c <MX_ADC1_Init+0x94>
  {
    Error_Handler();
 8001428:	f000 ff23 	bl	8002272 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800142c:	bf00      	nop
 800142e:	3710      	adds	r7, #16
 8001430:	46bd      	mov	sp, r7
 8001432:	bd80      	pop	{r7, pc}
 8001434:	20000b1c 	.word	0x20000b1c
 8001438:	40012000 	.word	0x40012000

0800143c <MX_ADC2_Init>:
/* ADC2 init function */
void MX_ADC2_Init(void)
{
 800143c:	b580      	push	{r7, lr}
 800143e:	b084      	sub	sp, #16
 8001440:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001442:	463b      	mov	r3, r7
 8001444:	2200      	movs	r2, #0
 8001446:	601a      	str	r2, [r3, #0]
 8001448:	605a      	str	r2, [r3, #4]
 800144a:	609a      	str	r2, [r3, #8]
 800144c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 800144e:	4b33      	ldr	r3, [pc, #204]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001450:	4a33      	ldr	r2, [pc, #204]	@ (8001520 <MX_ADC2_Init+0xe4>)
 8001452:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001454:	4b31      	ldr	r3, [pc, #196]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001456:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800145a:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800145c:	4b2f      	ldr	r3, [pc, #188]	@ (800151c <MX_ADC2_Init+0xe0>)
 800145e:	2200      	movs	r2, #0
 8001460:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8001462:	4b2e      	ldr	r3, [pc, #184]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001464:	2200      	movs	r2, #0
 8001466:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8001468:	4b2c      	ldr	r3, [pc, #176]	@ (800151c <MX_ADC2_Init+0xe0>)
 800146a:	2200      	movs	r2, #0
 800146c:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 800146e:	4b2b      	ldr	r3, [pc, #172]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001470:	2200      	movs	r2, #0
 8001472:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001476:	4b29      	ldr	r3, [pc, #164]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001478:	2200      	movs	r2, #0
 800147a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800147c:	4b27      	ldr	r3, [pc, #156]	@ (800151c <MX_ADC2_Init+0xe0>)
 800147e:	4a29      	ldr	r2, [pc, #164]	@ (8001524 <MX_ADC2_Init+0xe8>)
 8001480:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001482:	4b26      	ldr	r3, [pc, #152]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001484:	2200      	movs	r2, #0
 8001486:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001488:	4b24      	ldr	r3, [pc, #144]	@ (800151c <MX_ADC2_Init+0xe0>)
 800148a:	2201      	movs	r2, #1
 800148c:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800148e:	4b23      	ldr	r3, [pc, #140]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001490:	2200      	movs	r2, #0
 8001492:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001496:	4b21      	ldr	r3, [pc, #132]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001498:	2201      	movs	r2, #1
 800149a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800149c:	481f      	ldr	r0, [pc, #124]	@ (800151c <MX_ADC2_Init+0xe0>)
 800149e:	f001 fbb5 	bl	8002c0c <HAL_ADC_Init>
 80014a2:	4603      	mov	r3, r0
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d001      	beq.n	80014ac <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 80014a8:	f000 fee3 	bl	8002272 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_11;
 80014ac:	230b      	movs	r3, #11
 80014ae:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80014b0:	2301      	movs	r3, #1
 80014b2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 80014b4:	2304      	movs	r3, #4
 80014b6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80014b8:	463b      	mov	r3, r7
 80014ba:	4619      	mov	r1, r3
 80014bc:	4817      	ldr	r0, [pc, #92]	@ (800151c <MX_ADC2_Init+0xe0>)
 80014be:	f001 fe6f 	bl	80031a0 <HAL_ADC_ConfigChannel>
 80014c2:	4603      	mov	r3, r0
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d001      	beq.n	80014cc <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 80014c8:	f000 fed3 	bl	8002272 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */
  // ADC2 Channel 11 is the Scaler1 control
  // 3.3V to 5k resistor to 5k pot to ground
  // PC1 connected between resistor and pot
  sConfig2.Channel = ADC_CHANNEL_11;
 80014cc:	4b16      	ldr	r3, [pc, #88]	@ (8001528 <MX_ADC2_Init+0xec>)
 80014ce:	220b      	movs	r2, #11
 80014d0:	601a      	str	r2, [r3, #0]
  sConfig2.Rank = 1;
 80014d2:	4b15      	ldr	r3, [pc, #84]	@ (8001528 <MX_ADC2_Init+0xec>)
 80014d4:	2201      	movs	r2, #1
 80014d6:	605a      	str	r2, [r3, #4]
  sConfig2.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 80014d8:	4b13      	ldr	r3, [pc, #76]	@ (8001528 <MX_ADC2_Init+0xec>)
 80014da:	2204      	movs	r2, #4
 80014dc:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig2) != HAL_OK)
 80014de:	4912      	ldr	r1, [pc, #72]	@ (8001528 <MX_ADC2_Init+0xec>)
 80014e0:	480e      	ldr	r0, [pc, #56]	@ (800151c <MX_ADC2_Init+0xe0>)
 80014e2:	f001 fe5d 	bl	80031a0 <HAL_ADC_ConfigChannel>
 80014e6:	4603      	mov	r3, r0
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d001      	beq.n	80014f0 <MX_ADC2_Init+0xb4>
  {
    Error_Handler();
 80014ec:	f000 fec1 	bl	8002272 <Error_Handler>
  }
  // ADC2 Channel 12 is the Delay1 control
  // 3.3V to 5k resistor to 5k pot to ground
  // PC2 connected between resistor and pot
  sConfig3.Channel = ADC_CHANNEL_12;
 80014f0:	4b0e      	ldr	r3, [pc, #56]	@ (800152c <MX_ADC2_Init+0xf0>)
 80014f2:	220c      	movs	r2, #12
 80014f4:	601a      	str	r2, [r3, #0]
  sConfig3.Rank = 1;
 80014f6:	4b0d      	ldr	r3, [pc, #52]	@ (800152c <MX_ADC2_Init+0xf0>)
 80014f8:	2201      	movs	r2, #1
 80014fa:	605a      	str	r2, [r3, #4]
  sConfig3.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 80014fc:	4b0b      	ldr	r3, [pc, #44]	@ (800152c <MX_ADC2_Init+0xf0>)
 80014fe:	2204      	movs	r2, #4
 8001500:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig3) != HAL_OK)
 8001502:	490a      	ldr	r1, [pc, #40]	@ (800152c <MX_ADC2_Init+0xf0>)
 8001504:	4805      	ldr	r0, [pc, #20]	@ (800151c <MX_ADC2_Init+0xe0>)
 8001506:	f001 fe4b 	bl	80031a0 <HAL_ADC_ConfigChannel>
 800150a:	4603      	mov	r3, r0
 800150c:	2b00      	cmp	r3, #0
 800150e:	d001      	beq.n	8001514 <MX_ADC2_Init+0xd8>
  {
    Error_Handler();
 8001510:	f000 feaf 	bl	8002272 <Error_Handler>
  }
  /* USER CODE END ADC2_Init 2 */

}
 8001514:	bf00      	nop
 8001516:	3710      	adds	r7, #16
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}
 800151c:	20000b64 	.word	0x20000b64
 8001520:	40012100 	.word	0x40012100
 8001524:	0f000001 	.word	0x0f000001
 8001528:	2000b234 	.word	0x2000b234
 800152c:	2000b244 	.word	0x2000b244

08001530 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001530:	b580      	push	{r7, lr}
 8001532:	b08c      	sub	sp, #48	@ 0x30
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001538:	f107 031c 	add.w	r3, r7, #28
 800153c:	2200      	movs	r2, #0
 800153e:	601a      	str	r2, [r3, #0]
 8001540:	605a      	str	r2, [r3, #4]
 8001542:	609a      	str	r2, [r3, #8]
 8001544:	60da      	str	r2, [r3, #12]
 8001546:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	4a4b      	ldr	r2, [pc, #300]	@ (800167c <HAL_ADC_MspInit+0x14c>)
 800154e:	4293      	cmp	r3, r2
 8001550:	d162      	bne.n	8001618 <HAL_ADC_MspInit+0xe8>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001552:	2300      	movs	r3, #0
 8001554:	61bb      	str	r3, [r7, #24]
 8001556:	4b4a      	ldr	r3, [pc, #296]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001558:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800155a:	4a49      	ldr	r2, [pc, #292]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 800155c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001560:	6453      	str	r3, [r2, #68]	@ 0x44
 8001562:	4b47      	ldr	r3, [pc, #284]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001564:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001566:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800156a:	61bb      	str	r3, [r7, #24]
 800156c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800156e:	2300      	movs	r3, #0
 8001570:	617b      	str	r3, [r7, #20]
 8001572:	4b43      	ldr	r3, [pc, #268]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001574:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001576:	4a42      	ldr	r2, [pc, #264]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001578:	f043 0301 	orr.w	r3, r3, #1
 800157c:	6313      	str	r3, [r2, #48]	@ 0x30
 800157e:	4b40      	ldr	r3, [pc, #256]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001580:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001582:	f003 0301 	and.w	r3, r3, #1
 8001586:	617b      	str	r3, [r7, #20]
 8001588:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PA1     ------> ADC1_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 800158a:	2302      	movs	r3, #2
 800158c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800158e:	2303      	movs	r3, #3
 8001590:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001592:	2300      	movs	r3, #0
 8001594:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001596:	f107 031c 	add.w	r3, r7, #28
 800159a:	4619      	mov	r1, r3
 800159c:	4839      	ldr	r0, [pc, #228]	@ (8001684 <HAL_ADC_MspInit+0x154>)
 800159e:	f002 fff9 	bl	8004594 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 80015a2:	4b39      	ldr	r3, [pc, #228]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015a4:	4a39      	ldr	r2, [pc, #228]	@ (800168c <HAL_ADC_MspInit+0x15c>)
 80015a6:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 80015a8:	4b37      	ldr	r3, [pc, #220]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80015ae:	4b36      	ldr	r3, [pc, #216]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80015b4:	4b34      	ldr	r3, [pc, #208]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 80015ba:	4b33      	ldr	r3, [pc, #204]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015bc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80015c0:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80015c2:	4b31      	ldr	r3, [pc, #196]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015c4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80015c8:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 80015ca:	4b2f      	ldr	r3, [pc, #188]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015cc:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80015d0:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80015d2:	4b2d      	ldr	r3, [pc, #180]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015d4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80015d8:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 80015da:	4b2b      	ldr	r3, [pc, #172]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015dc:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 80015e0:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80015e2:	4b29      	ldr	r3, [pc, #164]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015e4:	2204      	movs	r2, #4
 80015e6:	625a      	str	r2, [r3, #36]	@ 0x24
    hdma_adc1.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80015e8:	4b27      	ldr	r3, [pc, #156]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015ea:	2203      	movs	r2, #3
 80015ec:	629a      	str	r2, [r3, #40]	@ 0x28
    hdma_adc1.Init.MemBurst = DMA_MBURST_SINGLE;
 80015ee:	4b26      	ldr	r3, [pc, #152]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015f0:	2200      	movs	r2, #0
 80015f2:	62da      	str	r2, [r3, #44]	@ 0x2c
    hdma_adc1.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80015f4:	4b24      	ldr	r3, [pc, #144]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015f6:	2200      	movs	r2, #0
 80015f8:	631a      	str	r2, [r3, #48]	@ 0x30
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80015fa:	4823      	ldr	r0, [pc, #140]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 80015fc:	f002 f982 	bl	8003904 <HAL_DMA_Init>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <HAL_ADC_MspInit+0xda>
    {
      Error_Handler();
 8001606:	f000 fe34 	bl	8002272 <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	4a1e      	ldr	r2, [pc, #120]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 800160e:	639a      	str	r2, [r3, #56]	@ 0x38
 8001610:	4a1d      	ldr	r2, [pc, #116]	@ (8001688 <HAL_ADC_MspInit+0x158>)
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }
}
 8001616:	e02c      	b.n	8001672 <HAL_ADC_MspInit+0x142>
  else if(adcHandle->Instance==ADC2)
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	681b      	ldr	r3, [r3, #0]
 800161c:	4a1c      	ldr	r2, [pc, #112]	@ (8001690 <HAL_ADC_MspInit+0x160>)
 800161e:	4293      	cmp	r3, r2
 8001620:	d127      	bne.n	8001672 <HAL_ADC_MspInit+0x142>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001622:	2300      	movs	r3, #0
 8001624:	613b      	str	r3, [r7, #16]
 8001626:	4b16      	ldr	r3, [pc, #88]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001628:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800162a:	4a15      	ldr	r2, [pc, #84]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 800162c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001630:	6453      	str	r3, [r2, #68]	@ 0x44
 8001632:	4b13      	ldr	r3, [pc, #76]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001634:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001636:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800163a:	613b      	str	r3, [r7, #16]
 800163c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800163e:	2300      	movs	r3, #0
 8001640:	60fb      	str	r3, [r7, #12]
 8001642:	4b0f      	ldr	r3, [pc, #60]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001646:	4a0e      	ldr	r2, [pc, #56]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001648:	f043 0304 	orr.w	r3, r3, #4
 800164c:	6313      	str	r3, [r2, #48]	@ 0x30
 800164e:	4b0c      	ldr	r3, [pc, #48]	@ (8001680 <HAL_ADC_MspInit+0x150>)
 8001650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001652:	f003 0304 	and.w	r3, r3, #4
 8001656:	60fb      	str	r3, [r7, #12]
 8001658:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 800165a:	2306      	movs	r3, #6
 800165c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800165e:	2303      	movs	r3, #3
 8001660:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001662:	2300      	movs	r3, #0
 8001664:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001666:	f107 031c 	add.w	r3, r7, #28
 800166a:	4619      	mov	r1, r3
 800166c:	4809      	ldr	r0, [pc, #36]	@ (8001694 <HAL_ADC_MspInit+0x164>)
 800166e:	f002 ff91 	bl	8004594 <HAL_GPIO_Init>
}
 8001672:	bf00      	nop
 8001674:	3730      	adds	r7, #48	@ 0x30
 8001676:	46bd      	mov	sp, r7
 8001678:	bd80      	pop	{r7, pc}
 800167a:	bf00      	nop
 800167c:	40012000 	.word	0x40012000
 8001680:	40023800 	.word	0x40023800
 8001684:	40020000 	.word	0x40020000
 8001688:	20000bac 	.word	0x20000bac
 800168c:	40026410 	.word	0x40026410
 8001690:	40012100 	.word	0x40012100
 8001694:	40020800 	.word	0x40020800

08001698 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	b082      	sub	sp, #8
 800169c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 800169e:	2300      	movs	r3, #0
 80016a0:	607b      	str	r3, [r7, #4]
 80016a2:	4b17      	ldr	r3, [pc, #92]	@ (8001700 <MX_DMA_Init+0x68>)
 80016a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016a6:	4a16      	ldr	r2, [pc, #88]	@ (8001700 <MX_DMA_Init+0x68>)
 80016a8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80016ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80016ae:	4b14      	ldr	r3, [pc, #80]	@ (8001700 <MX_DMA_Init+0x68>)
 80016b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80016b6:	607b      	str	r3, [r7, #4]
 80016b8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 80016ba:	2300      	movs	r3, #0
 80016bc:	603b      	str	r3, [r7, #0]
 80016be:	4b10      	ldr	r3, [pc, #64]	@ (8001700 <MX_DMA_Init+0x68>)
 80016c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016c2:	4a0f      	ldr	r2, [pc, #60]	@ (8001700 <MX_DMA_Init+0x68>)
 80016c4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80016c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80016ca:	4b0d      	ldr	r3, [pc, #52]	@ (8001700 <MX_DMA_Init+0x68>)
 80016cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ce:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80016d2:	603b      	str	r3, [r7, #0]
 80016d4:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 80016d6:	2200      	movs	r2, #0
 80016d8:	2100      	movs	r1, #0
 80016da:	2010      	movs	r0, #16
 80016dc:	f002 f8db 	bl	8003896 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80016e0:	2010      	movs	r0, #16
 80016e2:	f002 f8f4 	bl	80038ce <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80016e6:	2200      	movs	r2, #0
 80016e8:	2100      	movs	r1, #0
 80016ea:	2038      	movs	r0, #56	@ 0x38
 80016ec:	f002 f8d3 	bl	8003896 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80016f0:	2038      	movs	r0, #56	@ 0x38
 80016f2:	f002 f8ec 	bl	80038ce <HAL_NVIC_EnableIRQ>

}
 80016f6:	bf00      	nop
 80016f8:	3708      	adds	r7, #8
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}
 80016fe:	bf00      	nop
 8001700:	40023800 	.word	0x40023800

08001704 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001704:	b580      	push	{r7, lr}
 8001706:	b08a      	sub	sp, #40	@ 0x28
 8001708:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800170a:	f107 0314 	add.w	r3, r7, #20
 800170e:	2200      	movs	r2, #0
 8001710:	601a      	str	r2, [r3, #0]
 8001712:	605a      	str	r2, [r3, #4]
 8001714:	609a      	str	r2, [r3, #8]
 8001716:	60da      	str	r2, [r3, #12]
 8001718:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800171a:	2300      	movs	r3, #0
 800171c:	613b      	str	r3, [r7, #16]
 800171e:	4b34      	ldr	r3, [pc, #208]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001720:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001722:	4a33      	ldr	r2, [pc, #204]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001724:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001728:	6313      	str	r3, [r2, #48]	@ 0x30
 800172a:	4b31      	ldr	r3, [pc, #196]	@ (80017f0 <MX_GPIO_Init+0xec>)
 800172c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800172e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001732:	613b      	str	r3, [r7, #16]
 8001734:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001736:	2300      	movs	r3, #0
 8001738:	60fb      	str	r3, [r7, #12]
 800173a:	4b2d      	ldr	r3, [pc, #180]	@ (80017f0 <MX_GPIO_Init+0xec>)
 800173c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800173e:	4a2c      	ldr	r2, [pc, #176]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001740:	f043 0304 	orr.w	r3, r3, #4
 8001744:	6313      	str	r3, [r2, #48]	@ 0x30
 8001746:	4b2a      	ldr	r3, [pc, #168]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001748:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800174a:	f003 0304 	and.w	r3, r3, #4
 800174e:	60fb      	str	r3, [r7, #12]
 8001750:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001752:	2300      	movs	r3, #0
 8001754:	60bb      	str	r3, [r7, #8]
 8001756:	4b26      	ldr	r3, [pc, #152]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001758:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800175a:	4a25      	ldr	r2, [pc, #148]	@ (80017f0 <MX_GPIO_Init+0xec>)
 800175c:	f043 0301 	orr.w	r3, r3, #1
 8001760:	6313      	str	r3, [r2, #48]	@ 0x30
 8001762:	4b23      	ldr	r3, [pc, #140]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001764:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001766:	f003 0301 	and.w	r3, r3, #1
 800176a:	60bb      	str	r3, [r7, #8]
 800176c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800176e:	2300      	movs	r3, #0
 8001770:	607b      	str	r3, [r7, #4]
 8001772:	4b1f      	ldr	r3, [pc, #124]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001774:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001776:	4a1e      	ldr	r2, [pc, #120]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001778:	f043 0308 	orr.w	r3, r3, #8
 800177c:	6313      	str	r3, [r2, #48]	@ 0x30
 800177e:	4b1c      	ldr	r3, [pc, #112]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001780:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001782:	f003 0308 	and.w	r3, r3, #8
 8001786:	607b      	str	r3, [r7, #4]
 8001788:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800178a:	2300      	movs	r3, #0
 800178c:	603b      	str	r3, [r7, #0]
 800178e:	4b18      	ldr	r3, [pc, #96]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001792:	4a17      	ldr	r2, [pc, #92]	@ (80017f0 <MX_GPIO_Init+0xec>)
 8001794:	f043 0302 	orr.w	r3, r3, #2
 8001798:	6313      	str	r3, [r2, #48]	@ 0x30
 800179a:	4b15      	ldr	r3, [pc, #84]	@ (80017f0 <MX_GPIO_Init+0xec>)
 800179c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800179e:	f003 0302 	and.w	r3, r3, #2
 80017a2:	603b      	str	r3, [r7, #0]
 80017a4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, Orange_LED_Pin|CS43L22_RESET_Pin, GPIO_PIN_RESET);
 80017a6:	2200      	movs	r2, #0
 80017a8:	f242 0110 	movw	r1, #8208	@ 0x2010
 80017ac:	4811      	ldr	r0, [pc, #68]	@ (80017f4 <MX_GPIO_Init+0xf0>)
 80017ae:	f003 f8a5 	bl	80048fc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : UserButton_Pin */
  GPIO_InitStruct.Pin = UserButton_Pin;
 80017b2:	2301      	movs	r3, #1
 80017b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017b6:	2300      	movs	r3, #0
 80017b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ba:	2300      	movs	r3, #0
 80017bc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(UserButton_GPIO_Port, &GPIO_InitStruct);
 80017be:	f107 0314 	add.w	r3, r7, #20
 80017c2:	4619      	mov	r1, r3
 80017c4:	480c      	ldr	r0, [pc, #48]	@ (80017f8 <MX_GPIO_Init+0xf4>)
 80017c6:	f002 fee5 	bl	8004594 <HAL_GPIO_Init>

  /*Configure GPIO pins : Orange_LED_Pin CS43L22_RESET_Pin */
  GPIO_InitStruct.Pin = Orange_LED_Pin|CS43L22_RESET_Pin;
 80017ca:	f242 0310 	movw	r3, #8208	@ 0x2010
 80017ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017d0:	2301      	movs	r3, #1
 80017d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d4:	2300      	movs	r3, #0
 80017d6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017d8:	2300      	movs	r3, #0
 80017da:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017dc:	f107 0314 	add.w	r3, r7, #20
 80017e0:	4619      	mov	r1, r3
 80017e2:	4804      	ldr	r0, [pc, #16]	@ (80017f4 <MX_GPIO_Init+0xf0>)
 80017e4:	f002 fed6 	bl	8004594 <HAL_GPIO_Init>

}
 80017e8:	bf00      	nop
 80017ea:	3728      	adds	r7, #40	@ 0x28
 80017ec:	46bd      	mov	sp, r7
 80017ee:	bd80      	pop	{r7, pc}
 80017f0:	40023800 	.word	0x40023800
 80017f4:	40020c00 	.word	0x40020c00
 80017f8:	40020000 	.word	0x40020000

080017fc <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001800:	4b12      	ldr	r3, [pc, #72]	@ (800184c <MX_I2C1_Init+0x50>)
 8001802:	4a13      	ldr	r2, [pc, #76]	@ (8001850 <MX_I2C1_Init+0x54>)
 8001804:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001806:	4b11      	ldr	r3, [pc, #68]	@ (800184c <MX_I2C1_Init+0x50>)
 8001808:	4a12      	ldr	r2, [pc, #72]	@ (8001854 <MX_I2C1_Init+0x58>)
 800180a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800180c:	4b0f      	ldr	r3, [pc, #60]	@ (800184c <MX_I2C1_Init+0x50>)
 800180e:	2200      	movs	r2, #0
 8001810:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001812:	4b0e      	ldr	r3, [pc, #56]	@ (800184c <MX_I2C1_Init+0x50>)
 8001814:	2200      	movs	r2, #0
 8001816:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001818:	4b0c      	ldr	r3, [pc, #48]	@ (800184c <MX_I2C1_Init+0x50>)
 800181a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800181e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001820:	4b0a      	ldr	r3, [pc, #40]	@ (800184c <MX_I2C1_Init+0x50>)
 8001822:	2200      	movs	r2, #0
 8001824:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001826:	4b09      	ldr	r3, [pc, #36]	@ (800184c <MX_I2C1_Init+0x50>)
 8001828:	2200      	movs	r2, #0
 800182a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800182c:	4b07      	ldr	r3, [pc, #28]	@ (800184c <MX_I2C1_Init+0x50>)
 800182e:	2200      	movs	r2, #0
 8001830:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001832:	4b06      	ldr	r3, [pc, #24]	@ (800184c <MX_I2C1_Init+0x50>)
 8001834:	2200      	movs	r2, #0
 8001836:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001838:	4804      	ldr	r0, [pc, #16]	@ (800184c <MX_I2C1_Init+0x50>)
 800183a:	f003 f893 	bl	8004964 <HAL_I2C_Init>
 800183e:	4603      	mov	r3, r0
 8001840:	2b00      	cmp	r3, #0
 8001842:	d001      	beq.n	8001848 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001844:	f000 fd15 	bl	8002272 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001848:	bf00      	nop
 800184a:	bd80      	pop	{r7, pc}
 800184c:	20000c0c 	.word	0x20000c0c
 8001850:	40005400 	.word	0x40005400
 8001854:	000186a0 	.word	0x000186a0

08001858 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	b08a      	sub	sp, #40	@ 0x28
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001860:	f107 0314 	add.w	r3, r7, #20
 8001864:	2200      	movs	r2, #0
 8001866:	601a      	str	r2, [r3, #0]
 8001868:	605a      	str	r2, [r3, #4]
 800186a:	609a      	str	r2, [r3, #8]
 800186c:	60da      	str	r2, [r3, #12]
 800186e:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	4a19      	ldr	r2, [pc, #100]	@ (80018dc <HAL_I2C_MspInit+0x84>)
 8001876:	4293      	cmp	r3, r2
 8001878:	d12c      	bne.n	80018d4 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800187a:	2300      	movs	r3, #0
 800187c:	613b      	str	r3, [r7, #16]
 800187e:	4b18      	ldr	r3, [pc, #96]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 8001880:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001882:	4a17      	ldr	r2, [pc, #92]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 8001884:	f043 0302 	orr.w	r3, r3, #2
 8001888:	6313      	str	r3, [r2, #48]	@ 0x30
 800188a:	4b15      	ldr	r3, [pc, #84]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 800188c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800188e:	f003 0302 	and.w	r3, r3, #2
 8001892:	613b      	str	r3, [r7, #16]
 8001894:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_9;
 8001896:	f44f 7310 	mov.w	r3, #576	@ 0x240
 800189a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800189c:	2312      	movs	r3, #18
 800189e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018a0:	2300      	movs	r3, #0
 80018a2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018a4:	2303      	movs	r3, #3
 80018a6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80018a8:	2304      	movs	r3, #4
 80018aa:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018ac:	f107 0314 	add.w	r3, r7, #20
 80018b0:	4619      	mov	r1, r3
 80018b2:	480c      	ldr	r0, [pc, #48]	@ (80018e4 <HAL_I2C_MspInit+0x8c>)
 80018b4:	f002 fe6e 	bl	8004594 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80018b8:	2300      	movs	r3, #0
 80018ba:	60fb      	str	r3, [r7, #12]
 80018bc:	4b08      	ldr	r3, [pc, #32]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 80018be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018c0:	4a07      	ldr	r2, [pc, #28]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 80018c2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80018c6:	6413      	str	r3, [r2, #64]	@ 0x40
 80018c8:	4b05      	ldr	r3, [pc, #20]	@ (80018e0 <HAL_I2C_MspInit+0x88>)
 80018ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80018d0:	60fb      	str	r3, [r7, #12]
 80018d2:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 80018d4:	bf00      	nop
 80018d6:	3728      	adds	r7, #40	@ 0x28
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	40005400 	.word	0x40005400
 80018e0:	40023800 	.word	0x40023800
 80018e4:	40020400 	.word	0x40020400

080018e8 <MX_I2S3_Init>:
I2S_HandleTypeDef hi2s3;
DMA_HandleTypeDef hdma_spi3_tx;

/* I2S3 init function */
void MX_I2S3_Init(void)
{
 80018e8:	b580      	push	{r7, lr}
 80018ea:	af00      	add	r7, sp, #0
  /* USER CODE END I2S3_Init 0 */

  /* USER CODE BEGIN I2S3_Init 1 */

  /* USER CODE END I2S3_Init 1 */
  hi2s3.Instance = SPI3;
 80018ec:	4b13      	ldr	r3, [pc, #76]	@ (800193c <MX_I2S3_Init+0x54>)
 80018ee:	4a14      	ldr	r2, [pc, #80]	@ (8001940 <MX_I2S3_Init+0x58>)
 80018f0:	601a      	str	r2, [r3, #0]
  hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 80018f2:	4b12      	ldr	r3, [pc, #72]	@ (800193c <MX_I2S3_Init+0x54>)
 80018f4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80018f8:	605a      	str	r2, [r3, #4]
  hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 80018fa:	4b10      	ldr	r3, [pc, #64]	@ (800193c <MX_I2S3_Init+0x54>)
 80018fc:	2200      	movs	r2, #0
 80018fe:	609a      	str	r2, [r3, #8]
  hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 8001900:	4b0e      	ldr	r3, [pc, #56]	@ (800193c <MX_I2S3_Init+0x54>)
 8001902:	2200      	movs	r2, #0
 8001904:	60da      	str	r2, [r3, #12]
  hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 8001906:	4b0d      	ldr	r3, [pc, #52]	@ (800193c <MX_I2S3_Init+0x54>)
 8001908:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800190c:	611a      	str	r2, [r3, #16]
  hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_48K;
 800190e:	4b0b      	ldr	r3, [pc, #44]	@ (800193c <MX_I2S3_Init+0x54>)
 8001910:	f64b 3280 	movw	r2, #48000	@ 0xbb80
 8001914:	615a      	str	r2, [r3, #20]
  hi2s3.Init.CPOL = I2S_CPOL_LOW;
 8001916:	4b09      	ldr	r3, [pc, #36]	@ (800193c <MX_I2S3_Init+0x54>)
 8001918:	2200      	movs	r2, #0
 800191a:	619a      	str	r2, [r3, #24]
  hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 800191c:	4b07      	ldr	r3, [pc, #28]	@ (800193c <MX_I2S3_Init+0x54>)
 800191e:	2200      	movs	r2, #0
 8001920:	61da      	str	r2, [r3, #28]
  hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 8001922:	4b06      	ldr	r3, [pc, #24]	@ (800193c <MX_I2S3_Init+0x54>)
 8001924:	2200      	movs	r2, #0
 8001926:	621a      	str	r2, [r3, #32]
  if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 8001928:	4804      	ldr	r0, [pc, #16]	@ (800193c <MX_I2S3_Init+0x54>)
 800192a:	f004 f815 	bl	8005958 <HAL_I2S_Init>
 800192e:	4603      	mov	r3, r0
 8001930:	2b00      	cmp	r3, #0
 8001932:	d001      	beq.n	8001938 <MX_I2S3_Init+0x50>
  {
    Error_Handler();
 8001934:	f000 fc9d 	bl	8002272 <Error_Handler>
  }
  /* USER CODE BEGIN I2S3_Init 2 */

  /* USER CODE END I2S3_Init 2 */

}
 8001938:	bf00      	nop
 800193a:	bd80      	pop	{r7, pc}
 800193c:	20000c60 	.word	0x20000c60
 8001940:	40003c00 	.word	0x40003c00

08001944 <HAL_I2S_MspInit>:

void HAL_I2S_MspInit(I2S_HandleTypeDef* i2sHandle)
{
 8001944:	b580      	push	{r7, lr}
 8001946:	b08e      	sub	sp, #56	@ 0x38
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800194c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001950:	2200      	movs	r2, #0
 8001952:	601a      	str	r2, [r3, #0]
 8001954:	605a      	str	r2, [r3, #4]
 8001956:	609a      	str	r2, [r3, #8]
 8001958:	60da      	str	r2, [r3, #12]
 800195a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800195c:	f107 0314 	add.w	r3, r7, #20
 8001960:	2200      	movs	r2, #0
 8001962:	601a      	str	r2, [r3, #0]
 8001964:	605a      	str	r2, [r3, #4]
 8001966:	609a      	str	r2, [r3, #8]
 8001968:	60da      	str	r2, [r3, #12]
  if(i2sHandle->Instance==SPI3)
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	4a4e      	ldr	r2, [pc, #312]	@ (8001aa8 <HAL_I2S_MspInit+0x164>)
 8001970:	4293      	cmp	r3, r2
 8001972:	f040 8094 	bne.w	8001a9e <HAL_I2S_MspInit+0x15a>

  /* USER CODE END SPI3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 8001976:	2301      	movs	r3, #1
 8001978:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 800197a:	2332      	movs	r3, #50	@ 0x32
 800197c:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 800197e:	2302      	movs	r3, #2
 8001980:	61fb      	str	r3, [r7, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001982:	f107 0314 	add.w	r3, r7, #20
 8001986:	4618      	mov	r0, r3
 8001988:	f005 f9f8 	bl	8006d7c <HAL_RCCEx_PeriphCLKConfig>
 800198c:	4603      	mov	r3, r0
 800198e:	2b00      	cmp	r3, #0
 8001990:	d001      	beq.n	8001996 <HAL_I2S_MspInit+0x52>
    {
      Error_Handler();
 8001992:	f000 fc6e 	bl	8002272 <Error_Handler>
    }

    /* I2S3 clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001996:	2300      	movs	r3, #0
 8001998:	613b      	str	r3, [r7, #16]
 800199a:	4b44      	ldr	r3, [pc, #272]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 800199c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800199e:	4a43      	ldr	r2, [pc, #268]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019a0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80019a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80019a6:	4b41      	ldr	r3, [pc, #260]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019aa:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80019ae:	613b      	str	r3, [r7, #16]
 80019b0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019b2:	2300      	movs	r3, #0
 80019b4:	60fb      	str	r3, [r7, #12]
 80019b6:	4b3d      	ldr	r3, [pc, #244]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ba:	4a3c      	ldr	r2, [pc, #240]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019bc:	f043 0301 	orr.w	r3, r3, #1
 80019c0:	6313      	str	r3, [r2, #48]	@ 0x30
 80019c2:	4b3a      	ldr	r3, [pc, #232]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019c6:	f003 0301 	and.w	r3, r3, #1
 80019ca:	60fb      	str	r3, [r7, #12]
 80019cc:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019ce:	2300      	movs	r3, #0
 80019d0:	60bb      	str	r3, [r7, #8]
 80019d2:	4b36      	ldr	r3, [pc, #216]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019d6:	4a35      	ldr	r2, [pc, #212]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019d8:	f043 0304 	orr.w	r3, r3, #4
 80019dc:	6313      	str	r3, [r2, #48]	@ 0x30
 80019de:	4b33      	ldr	r3, [pc, #204]	@ (8001aac <HAL_I2S_MspInit+0x168>)
 80019e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019e2:	f003 0304 	and.w	r3, r3, #4
 80019e6:	60bb      	str	r3, [r7, #8]
 80019e8:	68bb      	ldr	r3, [r7, #8]
    PA4     ------> I2S3_WS
    PC7     ------> I2S3_MCK
    PC10     ------> I2S3_CK
    PC12     ------> I2S3_SD
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80019ea:	2310      	movs	r3, #16
 80019ec:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ee:	2302      	movs	r3, #2
 80019f0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f2:	2300      	movs	r3, #0
 80019f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019f6:	2300      	movs	r3, #0
 80019f8:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 80019fa:	2306      	movs	r3, #6
 80019fc:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019fe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001a02:	4619      	mov	r1, r3
 8001a04:	482a      	ldr	r0, [pc, #168]	@ (8001ab0 <HAL_I2S_MspInit+0x16c>)
 8001a06:	f002 fdc5 	bl	8004594 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_10|GPIO_PIN_12;
 8001a0a:	f44f 53a4 	mov.w	r3, #5248	@ 0x1480
 8001a0e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a10:	2302      	movs	r3, #2
 8001a12:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a14:	2300      	movs	r3, #0
 8001a16:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a18:	2300      	movs	r3, #0
 8001a1a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001a1c:	2306      	movs	r3, #6
 8001a1e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a20:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001a24:	4619      	mov	r1, r3
 8001a26:	4823      	ldr	r0, [pc, #140]	@ (8001ab4 <HAL_I2S_MspInit+0x170>)
 8001a28:	f002 fdb4 	bl	8004594 <HAL_GPIO_Init>

    /* I2S3 DMA Init */
    /* SPI3_TX Init */
    hdma_spi3_tx.Instance = DMA1_Stream5;
 8001a2c:	4b22      	ldr	r3, [pc, #136]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a2e:	4a23      	ldr	r2, [pc, #140]	@ (8001abc <HAL_I2S_MspInit+0x178>)
 8001a30:	601a      	str	r2, [r3, #0]
    hdma_spi3_tx.Init.Channel = DMA_CHANNEL_0;
 8001a32:	4b21      	ldr	r3, [pc, #132]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a34:	2200      	movs	r2, #0
 8001a36:	605a      	str	r2, [r3, #4]
    hdma_spi3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001a38:	4b1f      	ldr	r3, [pc, #124]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a3a:	2240      	movs	r2, #64	@ 0x40
 8001a3c:	609a      	str	r2, [r3, #8]
    hdma_spi3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001a3e:	4b1e      	ldr	r3, [pc, #120]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a40:	2200      	movs	r2, #0
 8001a42:	60da      	str	r2, [r3, #12]
    hdma_spi3_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001a44:	4b1c      	ldr	r3, [pc, #112]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a46:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001a4a:	611a      	str	r2, [r3, #16]
    hdma_spi3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001a4c:	4b1a      	ldr	r3, [pc, #104]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a4e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001a52:	615a      	str	r2, [r3, #20]
    hdma_spi3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001a54:	4b18      	ldr	r3, [pc, #96]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a56:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001a5a:	619a      	str	r2, [r3, #24]
    hdma_spi3_tx.Init.Mode = DMA_CIRCULAR;
 8001a5c:	4b16      	ldr	r3, [pc, #88]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a5e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001a62:	61da      	str	r2, [r3, #28]
    hdma_spi3_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001a64:	4b14      	ldr	r3, [pc, #80]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a66:	2200      	movs	r2, #0
 8001a68:	621a      	str	r2, [r3, #32]
    hdma_spi3_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001a6a:	4b13      	ldr	r3, [pc, #76]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a6c:	2204      	movs	r2, #4
 8001a6e:	625a      	str	r2, [r3, #36]	@ 0x24
    hdma_spi3_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 8001a70:	4b11      	ldr	r3, [pc, #68]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a72:	2203      	movs	r2, #3
 8001a74:	629a      	str	r2, [r3, #40]	@ 0x28
    hdma_spi3_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 8001a76:	4b10      	ldr	r3, [pc, #64]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a78:	2200      	movs	r2, #0
 8001a7a:	62da      	str	r2, [r3, #44]	@ 0x2c
    hdma_spi3_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001a7c:	4b0e      	ldr	r3, [pc, #56]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a7e:	2200      	movs	r2, #0
 8001a80:	631a      	str	r2, [r3, #48]	@ 0x30
    if (HAL_DMA_Init(&hdma_spi3_tx) != HAL_OK)
 8001a82:	480d      	ldr	r0, [pc, #52]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a84:	f001 ff3e 	bl	8003904 <HAL_DMA_Init>
 8001a88:	4603      	mov	r3, r0
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d001      	beq.n	8001a92 <HAL_I2S_MspInit+0x14e>
    {
      Error_Handler();
 8001a8e:	f000 fbf0 	bl	8002272 <Error_Handler>
    }

    __HAL_LINKDMA(i2sHandle,hdmatx,hdma_spi3_tx);
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	4a08      	ldr	r2, [pc, #32]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a96:	639a      	str	r2, [r3, #56]	@ 0x38
 8001a98:	4a07      	ldr	r2, [pc, #28]	@ (8001ab8 <HAL_I2S_MspInit+0x174>)
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }
}
 8001a9e:	bf00      	nop
 8001aa0:	3738      	adds	r7, #56	@ 0x38
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bd80      	pop	{r7, pc}
 8001aa6:	bf00      	nop
 8001aa8:	40003c00 	.word	0x40003c00
 8001aac:	40023800 	.word	0x40023800
 8001ab0:	40020000 	.word	0x40020000
 8001ab4:	40020800 	.word	0x40020800
 8001ab8:	20000ca8 	.word	0x20000ca8
 8001abc:	40026088 	.word	0x40026088

08001ac0 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8001ac0:	b480      	push	{r7}
 8001ac2:	b083      	sub	sp, #12
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001ac8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001acc:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8001ad0:	f003 0301 	and.w	r3, r3, #1
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d013      	beq.n	8001b00 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001ad8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001adc:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 8001ae0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d00b      	beq.n	8001b00 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8001ae8:	e000      	b.n	8001aec <ITM_SendChar+0x2c>
    {
      __NOP();
 8001aea:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8001aec:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001af0:	681b      	ldr	r3, [r3, #0]
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d0f9      	beq.n	8001aea <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8001af6:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001afa:	687a      	ldr	r2, [r7, #4]
 8001afc:	b2d2      	uxtb	r2, r2
 8001afe:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8001b00:	687b      	ldr	r3, [r7, #4]
}
 8001b02:	4618      	mov	r0, r3
 8001b04:	370c      	adds	r7, #12
 8001b06:	46bd      	mov	sp, r7
 8001b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b0c:	4770      	bx	lr
	...

08001b10 <HAL_ADC_ConvHalfCpltCallback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8001b10:	b480      	push	{r7}
 8001b12:	b083      	sub	sp, #12
 8001b14:	af00      	add	r7, sp, #0
 8001b16:	6078      	str	r0, [r7, #4]
	// first half of ADC buffer is full
	adc_callback_state = 1;
 8001b18:	4b04      	ldr	r3, [pc, #16]	@ (8001b2c <HAL_ADC_ConvHalfCpltCallback+0x1c>)
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	701a      	strb	r2, [r3, #0]
}
 8001b1e:	bf00      	nop
 8001b20:	370c      	adds	r7, #12
 8001b22:	46bd      	mov	sp, r7
 8001b24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b28:	4770      	bx	lr
 8001b2a:	bf00      	nop
 8001b2c:	2000ad08 	.word	0x2000ad08

08001b30 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8001b30:	b480      	push	{r7}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	6078      	str	r0, [r7, #4]
	// second half of ADC buffer is full
	adc_callback_state = 2;
 8001b38:	4b04      	ldr	r3, [pc, #16]	@ (8001b4c <HAL_ADC_ConvCpltCallback+0x1c>)
 8001b3a:	2202      	movs	r2, #2
 8001b3c:	701a      	strb	r2, [r3, #0]
}
 8001b3e:	bf00      	nop
 8001b40:	370c      	adds	r7, #12
 8001b42:	46bd      	mov	sp, r7
 8001b44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b48:	4770      	bx	lr
 8001b4a:	bf00      	nop
 8001b4c:	2000ad08 	.word	0x2000ad08

08001b50 <HAL_I2S_TxHalfCpltCallback>:

void HAL_I2S_TxHalfCpltCallback(I2S_HandleTypeDef *hi2s)
{
 8001b50:	b480      	push	{r7}
 8001b52:	b083      	sub	sp, #12
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	6078      	str	r0, [r7, #4]
	// first half of I2S buffer full
	i2s_callback_state = 1;
 8001b58:	4b04      	ldr	r3, [pc, #16]	@ (8001b6c <HAL_I2S_TxHalfCpltCallback+0x1c>)
 8001b5a:	2201      	movs	r2, #1
 8001b5c:	701a      	strb	r2, [r3, #0]
}
 8001b5e:	bf00      	nop
 8001b60:	370c      	adds	r7, #12
 8001b62:	46bd      	mov	sp, r7
 8001b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b68:	4770      	bx	lr
 8001b6a:	bf00      	nop
 8001b6c:	2000ad09 	.word	0x2000ad09

08001b70 <HAL_I2S_TxCpltCallback>:

void HAL_I2S_TxCpltCallback(I2S_HandleTypeDef *hi2s)
{
 8001b70:	b480      	push	{r7}
 8001b72:	b083      	sub	sp, #12
 8001b74:	af00      	add	r7, sp, #0
 8001b76:	6078      	str	r0, [r7, #4]
	// second half of I2S buffer full
	i2s_callback_state = 2;
 8001b78:	4b04      	ldr	r3, [pc, #16]	@ (8001b8c <HAL_I2S_TxCpltCallback+0x1c>)
 8001b7a:	2202      	movs	r2, #2
 8001b7c:	701a      	strb	r2, [r3, #0]
}
 8001b7e:	bf00      	nop
 8001b80:	370c      	adds	r7, #12
 8001b82:	46bd      	mov	sp, r7
 8001b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b88:	4770      	bx	lr
 8001b8a:	bf00      	nop
 8001b8c:	2000ad09 	.word	0x2000ad09

08001b90 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b90:	b590      	push	{r4, r7, lr}
 8001b92:	b097      	sub	sp, #92	@ 0x5c
 8001b94:	af12      	add	r7, sp, #72	@ 0x48
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b96:	f000 ffc7 	bl	8002b28 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b9a:	f000 faf3 	bl	8002184 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001b9e:	f7ff fdb1 	bl	8001704 <MX_GPIO_Init>
  MX_DMA_Init();
 8001ba2:	f7ff fd79 	bl	8001698 <MX_DMA_Init>
  MX_TIM2_Init();
 8001ba6:	f000 ff29 	bl	80029fc <MX_TIM2_Init>
  MX_ADC1_Init();
 8001baa:	f7ff fbf5 	bl	8001398 <MX_ADC1_Init>
  MX_I2C1_Init();
 8001bae:	f7ff fe25 	bl	80017fc <MX_I2C1_Init>
  MX_I2S3_Init();
 8001bb2:	f7ff fe99 	bl	80018e8 <MX_I2S3_Init>
  MX_ADC2_Init();
 8001bb6:	f7ff fc41 	bl	800143c <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */
  AWEInstanceInit();
 8001bba:	f000 fb61 	bl	8002280 <AWEInstanceInit>
  CS43_Init(hi2c1, MODE_I2S);
 8001bbe:	4c9a      	ldr	r4, [pc, #616]	@ (8001e28 <main+0x298>)
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	9311      	str	r3, [sp, #68]	@ 0x44
 8001bc4:	4668      	mov	r0, sp
 8001bc6:	f104 0310 	add.w	r3, r4, #16
 8001bca:	2244      	movs	r2, #68	@ 0x44
 8001bcc:	4619      	mov	r1, r3
 8001bce:	f02c f83c 	bl	802dc4a <memcpy>
 8001bd2:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8001bd6:	f7ff f9eb 	bl	8000fb0 <CS43_Init>
  CS43_SetVolume(40); // 0 - 40
 8001bda:	2028      	movs	r0, #40	@ 0x28
 8001bdc:	f7ff fb58 	bl	8001290 <CS43_SetVolume>
  CS43_Enable_RightLeft(CS43_RIGHT_LEFT);
 8001be0:	2003      	movs	r0, #3
 8001be2:	f7ff faf9 	bl	80011d8 <CS43_Enable_RightLeft>
  CS43_Start();
 8001be6:	f7ff fb95 	bl	8001314 <CS43_Start>

  HAL_TIM_Base_Start(&htim2);
 8001bea:	4890      	ldr	r0, [pc, #576]	@ (8001e2c <main+0x29c>)
 8001bec:	f005 fa58 	bl	80070a0 <HAL_TIM_Base_Start>
  HAL_ADC_Start_DMA(&hadc1, (uint32_t *)adc_val, 2*N);
 8001bf0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001bf4:	498e      	ldr	r1, [pc, #568]	@ (8001e30 <main+0x2a0>)
 8001bf6:	488f      	ldr	r0, [pc, #572]	@ (8001e34 <main+0x2a4>)
 8001bf8:	f001 f9aa 	bl	8002f50 <HAL_ADC_Start_DMA>
  HAL_I2S_Transmit_DMA(&hi2s3, (uint16_t *) audio_buffer_out, 4*N);
 8001bfc:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c00:	498d      	ldr	r1, [pc, #564]	@ (8001e38 <main+0x2a8>)
 8001c02:	488e      	ldr	r0, [pc, #568]	@ (8001e3c <main+0x2ac>)
 8001c04:	f003 ffe8 	bl	8005bd8 <HAL_I2S_Transmit_DMA>

  nResult = awe_loadAWBfromArray(&g_AWEInstance, Instance0_InitCommands, Instance0_InitCommands_Len, &nErrorOffset);
 8001c08:	4b8d      	ldr	r3, [pc, #564]	@ (8001e40 <main+0x2b0>)
 8001c0a:	681a      	ldr	r2, [r3, #0]
 8001c0c:	4b8d      	ldr	r3, [pc, #564]	@ (8001e44 <main+0x2b4>)
 8001c0e:	498e      	ldr	r1, [pc, #568]	@ (8001e48 <main+0x2b8>)
 8001c10:	488e      	ldr	r0, [pc, #568]	@ (8001e4c <main+0x2bc>)
 8001c12:	f013 fde1 	bl	80157d8 <awe_loadAWBfromArray>
 8001c16:	4603      	mov	r3, r0
 8001c18:	4a8d      	ldr	r2, [pc, #564]	@ (8001e50 <main+0x2c0>)
 8001c1a:	6013      	str	r3, [r2, #0]
  if (nResult != E_SUCCESS)
 8001c1c:	4b8c      	ldr	r3, [pc, #560]	@ (8001e50 <main+0x2c0>)
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d002      	beq.n	8001c2a <main+0x9a>
  {
      printf("awe_loadAWBfromArray failed\n");
 8001c24:	488b      	ldr	r0, [pc, #556]	@ (8001e54 <main+0x2c4>)
 8001c26:	f02b feb5 	bl	802d994 <puts>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
      if (g_bBlinkLED4ForBoardAlive)
 8001c2a:	4b8b      	ldr	r3, [pc, #556]	@ (8001e58 <main+0x2c8>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	f000 8096 	beq.w	8001d60 <main+0x1d0>
      {

          nLoopCount++;
 8001c34:	4b89      	ldr	r3, [pc, #548]	@ (8001e5c <main+0x2cc>)
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	3301      	adds	r3, #1
 8001c3a:	4a88      	ldr	r2, [pc, #544]	@ (8001e5c <main+0x2cc>)
 8001c3c:	6013      	str	r3, [r2, #0]

          // total ADC inputs from a pot for averaging to get Scaler1 setting
          // this pot connected to pin PC1 (see adc.c)
          if(nLoopCount >= 1000 && nLoopCount < 1200) {
 8001c3e:	4b87      	ldr	r3, [pc, #540]	@ (8001e5c <main+0x2cc>)
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001c46:	db23      	blt.n	8001c90 <main+0x100>
 8001c48:	4b84      	ldr	r3, [pc, #528]	@ (8001e5c <main+0x2cc>)
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 8001c50:	da1e      	bge.n	8001c90 <main+0x100>
          	HAL_ADC_ConfigChannel(&hadc2, &sConfig2);
 8001c52:	4983      	ldr	r1, [pc, #524]	@ (8001e60 <main+0x2d0>)
 8001c54:	4883      	ldr	r0, [pc, #524]	@ (8001e64 <main+0x2d4>)
 8001c56:	f001 faa3 	bl	80031a0 <HAL_ADC_ConfigChannel>
            HAL_ADC_Start(&hadc2);
 8001c5a:	4882      	ldr	r0, [pc, #520]	@ (8001e64 <main+0x2d4>)
 8001c5c:	f001 f81a 	bl	8002c94 <HAL_ADC_Start>
          	HAL_ADC_PollForConversion(&hadc2,50); //Timeout is 50 msec
 8001c60:	2132      	movs	r1, #50	@ 0x32
 8001c62:	4880      	ldr	r0, [pc, #512]	@ (8001e64 <main+0x2d4>)
 8001c64:	f001 f8e8 	bl	8002e38 <HAL_ADC_PollForConversion>
          	tot += HAL_ADC_GetValue(&hadc2);
 8001c68:	487e      	ldr	r0, [pc, #504]	@ (8001e64 <main+0x2d4>)
 8001c6a:	f001 fa81 	bl	8003170 <HAL_ADC_GetValue>
 8001c6e:	ee07 0a90 	vmov	s15, r0
 8001c72:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001c76:	4b7c      	ldr	r3, [pc, #496]	@ (8001e68 <main+0x2d8>)
 8001c78:	edd3 7a00 	vldr	s15, [r3]
 8001c7c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c80:	4b79      	ldr	r3, [pc, #484]	@ (8001e68 <main+0x2d8>)
 8001c82:	edc3 7a00 	vstr	s15, [r3]
          	num++;
 8001c86:	4b79      	ldr	r3, [pc, #484]	@ (8001e6c <main+0x2dc>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	3301      	adds	r3, #1
 8001c8c:	4a77      	ldr	r2, [pc, #476]	@ (8001e6c <main+0x2dc>)
 8001c8e:	6013      	str	r3, [r2, #0]
          }

          // total ADC inputs from a second pot for averaging to get Delay1 setting
          // this pot connect to pin PC2 (see adc.c)
          if(nLoopCount >= 2000 && nLoopCount < 2200) {
 8001c90:	4b72      	ldr	r3, [pc, #456]	@ (8001e5c <main+0x2cc>)
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8001c98:	db24      	blt.n	8001ce4 <main+0x154>
 8001c9a:	4b70      	ldr	r3, [pc, #448]	@ (8001e5c <main+0x2cc>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	f640 0297 	movw	r2, #2199	@ 0x897
 8001ca2:	4293      	cmp	r3, r2
 8001ca4:	dc1e      	bgt.n	8001ce4 <main+0x154>
          	HAL_ADC_ConfigChannel(&hadc2, &sConfig3);
 8001ca6:	4972      	ldr	r1, [pc, #456]	@ (8001e70 <main+0x2e0>)
 8001ca8:	486e      	ldr	r0, [pc, #440]	@ (8001e64 <main+0x2d4>)
 8001caa:	f001 fa79 	bl	80031a0 <HAL_ADC_ConfigChannel>
            HAL_ADC_Start(&hadc2);
 8001cae:	486d      	ldr	r0, [pc, #436]	@ (8001e64 <main+0x2d4>)
 8001cb0:	f000 fff0 	bl	8002c94 <HAL_ADC_Start>
            HAL_ADC_PollForConversion(&hadc2,50); //Timeout is 50 msec
 8001cb4:	2132      	movs	r1, #50	@ 0x32
 8001cb6:	486b      	ldr	r0, [pc, #428]	@ (8001e64 <main+0x2d4>)
 8001cb8:	f001 f8be 	bl	8002e38 <HAL_ADC_PollForConversion>
          	tot2 += HAL_ADC_GetValue(&hadc2);
 8001cbc:	4869      	ldr	r0, [pc, #420]	@ (8001e64 <main+0x2d4>)
 8001cbe:	f001 fa57 	bl	8003170 <HAL_ADC_GetValue>
 8001cc2:	ee07 0a90 	vmov	s15, r0
 8001cc6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001cca:	4b6a      	ldr	r3, [pc, #424]	@ (8001e74 <main+0x2e4>)
 8001ccc:	edd3 7a00 	vldr	s15, [r3]
 8001cd0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001cd4:	4b67      	ldr	r3, [pc, #412]	@ (8001e74 <main+0x2e4>)
 8001cd6:	edc3 7a00 	vstr	s15, [r3]
          	num2++;
 8001cda:	4b67      	ldr	r3, [pc, #412]	@ (8001e78 <main+0x2e8>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	3301      	adds	r3, #1
 8001ce0:	4a65      	ldr	r2, [pc, #404]	@ (8001e78 <main+0x2e8>)
 8001ce2:	6013      	str	r3, [r2, #0]
          }

          // compute averaged ADC input values
          if (nLoopCount == 62200) //at 168E6 MHz, this count equals approx 1 sec
 8001ce4:	4b5d      	ldr	r3, [pc, #372]	@ (8001e5c <main+0x2cc>)
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f24f 22f8 	movw	r2, #62200	@ 0xf2f8
 8001cec:	4293      	cmp	r3, r2
 8001cee:	d137      	bne.n	8001d60 <main+0x1d0>
          {
        	  potValue = (UINT32)(tot/num);
 8001cf0:	4b5d      	ldr	r3, [pc, #372]	@ (8001e68 <main+0x2d8>)
 8001cf2:	edd3 6a00 	vldr	s13, [r3]
 8001cf6:	4b5d      	ldr	r3, [pc, #372]	@ (8001e6c <main+0x2dc>)
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	ee07 3a90 	vmov	s15, r3
 8001cfe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d02:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d06:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001d0a:	ee17 2a90 	vmov	r2, s15
 8001d0e:	4b5b      	ldr	r3, [pc, #364]	@ (8001e7c <main+0x2ec>)
 8001d10:	601a      	str	r2, [r3, #0]
        	  potValue2 = (UINT32)(tot2/num2);
 8001d12:	4b58      	ldr	r3, [pc, #352]	@ (8001e74 <main+0x2e4>)
 8001d14:	edd3 6a00 	vldr	s13, [r3]
 8001d18:	4b57      	ldr	r3, [pc, #348]	@ (8001e78 <main+0x2e8>)
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	ee07 3a90 	vmov	s15, r3
 8001d20:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d24:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d28:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001d2c:	ee17 2a90 	vmov	r2, s15
 8001d30:	4b53      	ldr	r3, [pc, #332]	@ (8001e80 <main+0x2f0>)
 8001d32:	601a      	str	r2, [r3, #0]
              // Indicate board running by toggling LED4
              HAL_GPIO_TogglePin(Orange_LED_GPIO_Port, Orange_LED_Pin);
 8001d34:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001d38:	4852      	ldr	r0, [pc, #328]	@ (8001e84 <main+0x2f4>)
 8001d3a:	f002 fdf8 	bl	800492e <HAL_GPIO_TogglePin>

              nLoopCount = 0;
 8001d3e:	4b47      	ldr	r3, [pc, #284]	@ (8001e5c <main+0x2cc>)
 8001d40:	2200      	movs	r2, #0
 8001d42:	601a      	str	r2, [r3, #0]
              tot = 0.0;
 8001d44:	4b48      	ldr	r3, [pc, #288]	@ (8001e68 <main+0x2d8>)
 8001d46:	f04f 0200 	mov.w	r2, #0
 8001d4a:	601a      	str	r2, [r3, #0]
              tot2 = 0.0;
 8001d4c:	4b49      	ldr	r3, [pc, #292]	@ (8001e74 <main+0x2e4>)
 8001d4e:	f04f 0200 	mov.w	r2, #0
 8001d52:	601a      	str	r2, [r3, #0]
              num = 0;
 8001d54:	4b45      	ldr	r3, [pc, #276]	@ (8001e6c <main+0x2dc>)
 8001d56:	2200      	movs	r2, #0
 8001d58:	601a      	str	r2, [r3, #0]
              num2 = 0;
 8001d5a:	4b47      	ldr	r3, [pc, #284]	@ (8001e78 <main+0x2e8>)
 8001d5c:	2200      	movs	r2, #0
 8001d5e:	601a      	str	r2, [r3, #0]
          }
      }

      if (awe_ctrlGetModuleClass(&g_AWEInstance, AWE_Scaler1_gain_HANDLE, &classID) == OBJECT_FOUND)
 8001d60:	4a49      	ldr	r2, [pc, #292]	@ (8001e88 <main+0x2f8>)
 8001d62:	494a      	ldr	r1, [pc, #296]	@ (8001e8c <main+0x2fc>)
 8001d64:	4839      	ldr	r0, [pc, #228]	@ (8001e4c <main+0x2bc>)
 8001d66:	f012 ff39 	bl	8014bdc <awe_ctrlGetModuleClass>
 8001d6a:	4603      	mov	r3, r0
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d10f      	bne.n	8001d90 <main+0x200>
      {
        // Check that module assigned this object ID is of module class Scaler1
      	if (classID == AWE_Scaler1_classID)
 8001d70:	4b45      	ldr	r3, [pc, #276]	@ (8001e88 <main+0x2f8>)
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	4a46      	ldr	r2, [pc, #280]	@ (8001e90 <main+0x300>)
 8001d76:	4293      	cmp	r3, r2
 8001d78:	d10a      	bne.n	8001d90 <main+0x200>
      	{
      		// convert ADC value to a scaler1Gain in dB between -24 and 24 as per ControlInterface.h
//            scaler1Gain=potValue/2400.0*48.0-24.0;
//            if(scaler1Gain < -24.0) scaler1Gain = -24.0;
//            if(scaler1Gain > 24.0) scaler1Gain = 24.0;
     		scaler1Gain = -3.0;
 8001d7a:	4b46      	ldr	r3, [pc, #280]	@ (8001e94 <main+0x304>)
 8001d7c:	4a46      	ldr	r2, [pc, #280]	@ (8001e98 <main+0x308>)
 8001d7e:	601a      	str	r2, [r3, #0]
      		awe_ctrlSetValue(&g_AWEInstance, AWE_Scaler1_gain_HANDLE, (void *)&scaler1Gain, 0, 1);
 8001d80:	2301      	movs	r3, #1
 8001d82:	9300      	str	r3, [sp, #0]
 8001d84:	2300      	movs	r3, #0
 8001d86:	4a43      	ldr	r2, [pc, #268]	@ (8001e94 <main+0x304>)
 8001d88:	4940      	ldr	r1, [pc, #256]	@ (8001e8c <main+0x2fc>)
 8001d8a:	4830      	ldr	r0, [pc, #192]	@ (8001e4c <main+0x2bc>)
 8001d8c:	f008 f914 	bl	8009fb8 <awe_ctrlSetValue>
      	}
      }

      if (awe_ctrlGetModuleClass(&g_AWEInstance, AWE_Delay1_currentDelay_HANDLE, &classID) == OBJECT_FOUND)
 8001d90:	4a3d      	ldr	r2, [pc, #244]	@ (8001e88 <main+0x2f8>)
 8001d92:	4942      	ldr	r1, [pc, #264]	@ (8001e9c <main+0x30c>)
 8001d94:	482d      	ldr	r0, [pc, #180]	@ (8001e4c <main+0x2bc>)
 8001d96:	f012 ff21 	bl	8014bdc <awe_ctrlGetModuleClass>
 8001d9a:	4603      	mov	r3, r0
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d110      	bne.n	8001dc2 <main+0x232>
      {
        // Check that module assigned this object ID is of module class SinkInt
        if (classID == AWE_Delay1_classID)
 8001da0:	4b39      	ldr	r3, [pc, #228]	@ (8001e88 <main+0x2f8>)
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	4a3e      	ldr	r2, [pc, #248]	@ (8001ea0 <main+0x310>)
 8001da6:	4293      	cmp	r3, r2
 8001da8:	d10b      	bne.n	8001dc2 <main+0x232>
        {
           // convert ADC value to a Delay1Value between 0 and 3000  per ControlInterface.h
//           delay1Value=(int)(potValue2/2400.0*3000.0);
//           if(delay1Value < 0) delay1Value = 0;
//           if(delay1Value > 3000) delay1Value = 3000;
          delay1Value = 2900;
 8001daa:	4b3e      	ldr	r3, [pc, #248]	@ (8001ea4 <main+0x314>)
 8001dac:	f640 3254 	movw	r2, #2900	@ 0xb54
 8001db0:	601a      	str	r2, [r3, #0]
          awe_ctrlSetValue(&g_AWEInstance, AWE_Delay1_currentDelay_HANDLE, (void *)&delay1Value, 0, 1);
 8001db2:	2301      	movs	r3, #1
 8001db4:	9300      	str	r3, [sp, #0]
 8001db6:	2300      	movs	r3, #0
 8001db8:	4a3a      	ldr	r2, [pc, #232]	@ (8001ea4 <main+0x314>)
 8001dba:	4938      	ldr	r1, [pc, #224]	@ (8001e9c <main+0x30c>)
 8001dbc:	4823      	ldr	r0, [pc, #140]	@ (8001e4c <main+0x2bc>)
 8001dbe:	f008 f8fb 	bl	8009fb8 <awe_ctrlSetValue>
        }
      }

      if (awe_ctrlGetModuleClass(&g_AWEInstance, AWE_Multiplexor1_index_HANDLE, &classID) == OBJECT_FOUND)
 8001dc2:	4a31      	ldr	r2, [pc, #196]	@ (8001e88 <main+0x2f8>)
 8001dc4:	4938      	ldr	r1, [pc, #224]	@ (8001ea8 <main+0x318>)
 8001dc6:	4821      	ldr	r0, [pc, #132]	@ (8001e4c <main+0x2bc>)
 8001dc8:	f012 ff08 	bl	8014bdc <awe_ctrlGetModuleClass>
 8001dcc:	4603      	mov	r3, r0
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	d11a      	bne.n	8001e08 <main+0x278>
      {
      	// Check that module assigned this object ID is of module class SinkInt
      	if (classID == AWE_Multiplexor1_classID)
 8001dd2:	4b2d      	ldr	r3, [pc, #180]	@ (8001e88 <main+0x2f8>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	4a35      	ldr	r2, [pc, #212]	@ (8001eac <main+0x31c>)
 8001dd8:	4293      	cmp	r3, r2
 8001dda:	d115      	bne.n	8001e08 <main+0x278>
      	{
      	   // use this method to provide momentary change to no reverb
      	   // pushed button = 1, unpushed button = 0
           if(HAL_GPIO_ReadPin(UserButton_GPIO_Port, UserButton_Pin)==GPIO_PIN_SET)
 8001ddc:	2101      	movs	r1, #1
 8001dde:	4834      	ldr	r0, [pc, #208]	@ (8001eb0 <main+0x320>)
 8001de0:	f002 fd74 	bl	80048cc <HAL_GPIO_ReadPin>
 8001de4:	4603      	mov	r3, r0
 8001de6:	2b01      	cmp	r3, #1
 8001de8:	d103      	bne.n	8001df2 <main+0x262>
           {
           	  user_button = 1;
 8001dea:	4b32      	ldr	r3, [pc, #200]	@ (8001eb4 <main+0x324>)
 8001dec:	2201      	movs	r2, #1
 8001dee:	601a      	str	r2, [r3, #0]
 8001df0:	e002      	b.n	8001df8 <main+0x268>
           }
           else
           {
              user_button = 0;
 8001df2:	4b30      	ldr	r3, [pc, #192]	@ (8001eb4 <main+0x324>)
 8001df4:	2200      	movs	r2, #0
 8001df6:	601a      	str	r2, [r3, #0]
           }
    	   awe_ctrlSetValue(&g_AWEInstance, AWE_Multiplexor1_index_HANDLE, (void *)&user_button, 0, 1);
 8001df8:	2301      	movs	r3, #1
 8001dfa:	9300      	str	r3, [sp, #0]
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	4a2d      	ldr	r2, [pc, #180]	@ (8001eb4 <main+0x324>)
 8001e00:	4929      	ldr	r1, [pc, #164]	@ (8001ea8 <main+0x318>)
 8001e02:	4812      	ldr	r0, [pc, #72]	@ (8001e4c <main+0x2bc>)
 8001e04:	f008 f8d8 	bl	8009fb8 <awe_ctrlSetValue>
      	}
      }

	  if(adc_callback_state != 0){
 8001e08:	4b2b      	ldr	r3, [pc, #172]	@ (8001eb8 <main+0x328>)
 8001e0a:	781b      	ldrb	r3, [r3, #0]
 8001e0c:	b2db      	uxtb	r3, r3
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	f000 80cd 	beq.w	8001fae <main+0x41e>
		  if (adc_callback_state == 1) { //buffer half full
 8001e14:	4b28      	ldr	r3, [pc, #160]	@ (8001eb8 <main+0x328>)
 8001e16:	781b      	ldrb	r3, [r3, #0]
 8001e18:	b2db      	uxtb	r3, r3
 8001e1a:	2b01      	cmp	r3, #1
 8001e1c:	f040 8085 	bne.w	8001f2a <main+0x39a>
			  for(int i = 0; i < N; i++){
 8001e20:	2300      	movs	r3, #0
 8001e22:	60fb      	str	r3, [r7, #12]
 8001e24:	e07c      	b.n	8001f20 <main+0x390>
 8001e26:	bf00      	nop
 8001e28:	20000c0c 	.word	0x20000c0c
 8001e2c:	2001d83c 	.word	0x2001d83c
 8001e30:	20000d08 	.word	0x20000d08
 8001e34:	20000b1c 	.word	0x20000b1c
 8001e38:	20004d08 	.word	0x20004d08
 8001e3c:	20000c60 	.word	0x20000c60
 8001e40:	0803ae60 	.word	0x0803ae60
 8001e44:	2000b26c 	.word	0x2000b26c
 8001e48:	0803abd0 	.word	0x0803abd0
 8001e4c:	2000ad0c 	.word	0x2000ad0c
 8001e50:	2000b270 	.word	0x2000b270
 8001e54:	08033b30 	.word	0x08033b30
 8001e58:	200000d8 	.word	0x200000d8
 8001e5c:	2000b230 	.word	0x2000b230
 8001e60:	2000b234 	.word	0x2000b234
 8001e64:	20000b64 	.word	0x20000b64
 8001e68:	2000b25c 	.word	0x2000b25c
 8001e6c:	2000b264 	.word	0x2000b264
 8001e70:	2000b244 	.word	0x2000b244
 8001e74:	2000b260 	.word	0x2000b260
 8001e78:	2000b268 	.word	0x2000b268
 8001e7c:	2000b254 	.word	0x2000b254
 8001e80:	2000b258 	.word	0x2000b258
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	2000b274 	.word	0x2000b274
 8001e8c:	07532008 	.word	0x07532008
 8001e90:	beef0813 	.word	0xbeef0813
 8001e94:	200000e4 	.word	0x200000e4
 8001e98:	c0400000 	.word	0xc0400000
 8001e9c:	07535009 	.word	0x07535009
 8001ea0:	beef0800 	.word	0xbeef0800
 8001ea4:	200000e0 	.word	0x200000e0
 8001ea8:	07552008 	.word	0x07552008
 8001eac:	beef0868 	.word	0xbeef0868
 8001eb0:	40020000 	.word	0x40020000
 8001eb4:	200000dc 	.word	0x200000dc
 8001eb8:	2000ad08 	.word	0x2000ad08
	  			  input_buffer[i] = (float) adc_val[i];
 8001ebc:	4aa1      	ldr	r2, [pc, #644]	@ (8002144 <main+0x5b4>)
 8001ebe:	68fb      	ldr	r3, [r7, #12]
 8001ec0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ec4:	ee07 3a90 	vmov	s15, r3
 8001ec8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001ecc:	4a9e      	ldr	r2, [pc, #632]	@ (8002148 <main+0x5b8>)
 8001ece:	68fb      	ldr	r3, [r7, #12]
 8001ed0:	009b      	lsls	r3, r3, #2
 8001ed2:	4413      	add	r3, r2
 8001ed4:	edc3 7a00 	vstr	s15, [r3]
	  			  // send ADC input value
				  send_to_AWE_buffer[2*i] = (fract16)input_buffer[i];
 8001ed8:	4a9b      	ldr	r2, [pc, #620]	@ (8002148 <main+0x5b8>)
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	009b      	lsls	r3, r3, #2
 8001ede:	4413      	add	r3, r2
 8001ee0:	edd3 7a00 	vldr	s15, [r3]
 8001ee4:	68fb      	ldr	r3, [r7, #12]
 8001ee6:	005b      	lsls	r3, r3, #1
 8001ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001eec:	ee17 2a90 	vmov	r2, s15
 8001ef0:	b211      	sxth	r1, r2
 8001ef2:	4a96      	ldr	r2, [pc, #600]	@ (800214c <main+0x5bc>)
 8001ef4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				  send_to_AWE_buffer[2*i+1] = (fract16)input_buffer[i];
 8001ef8:	4a93      	ldr	r2, [pc, #588]	@ (8002148 <main+0x5b8>)
 8001efa:	68fb      	ldr	r3, [r7, #12]
 8001efc:	009b      	lsls	r3, r3, #2
 8001efe:	4413      	add	r3, r2
 8001f00:	edd3 7a00 	vldr	s15, [r3]
 8001f04:	68fb      	ldr	r3, [r7, #12]
 8001f06:	005b      	lsls	r3, r3, #1
 8001f08:	3301      	adds	r3, #1
 8001f0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f0e:	ee17 2a90 	vmov	r2, s15
 8001f12:	b211      	sxth	r1, r2
 8001f14:	4a8d      	ldr	r2, [pc, #564]	@ (800214c <main+0x5bc>)
 8001f16:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			  for(int i = 0; i < N; i++){
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	3301      	adds	r3, #1
 8001f1e:	60fb      	str	r3, [r7, #12]
 8001f20:	68fb      	ldr	r3, [r7, #12]
 8001f22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001f26:	dbc9      	blt.n	8001ebc <main+0x32c>
 8001f28:	e03e      	b.n	8001fa8 <main+0x418>
			  }

		  }
		  else if (adc_callback_state == 2) { //buffer full
 8001f2a:	4b89      	ldr	r3, [pc, #548]	@ (8002150 <main+0x5c0>)
 8001f2c:	781b      	ldrb	r3, [r3, #0]
 8001f2e:	b2db      	uxtb	r3, r3
 8001f30:	2b02      	cmp	r3, #2
 8001f32:	d139      	bne.n	8001fa8 <main+0x418>
			  for(int i = N; i < 2*N; i++){
 8001f34:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001f38:	60bb      	str	r3, [r7, #8]
 8001f3a:	e031      	b.n	8001fa0 <main+0x410>
				  input_buffer[i]= (float) adc_val[i];
 8001f3c:	4a81      	ldr	r2, [pc, #516]	@ (8002144 <main+0x5b4>)
 8001f3e:	68bb      	ldr	r3, [r7, #8]
 8001f40:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001f44:	ee07 3a90 	vmov	s15, r3
 8001f48:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f4c:	4a7e      	ldr	r2, [pc, #504]	@ (8002148 <main+0x5b8>)
 8001f4e:	68bb      	ldr	r3, [r7, #8]
 8001f50:	009b      	lsls	r3, r3, #2
 8001f52:	4413      	add	r3, r2
 8001f54:	edc3 7a00 	vstr	s15, [r3]
				  send_to_AWE_buffer[2*i] = (fract16) input_buffer[i];
 8001f58:	4a7b      	ldr	r2, [pc, #492]	@ (8002148 <main+0x5b8>)
 8001f5a:	68bb      	ldr	r3, [r7, #8]
 8001f5c:	009b      	lsls	r3, r3, #2
 8001f5e:	4413      	add	r3, r2
 8001f60:	edd3 7a00 	vldr	s15, [r3]
 8001f64:	68bb      	ldr	r3, [r7, #8]
 8001f66:	005b      	lsls	r3, r3, #1
 8001f68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f6c:	ee17 2a90 	vmov	r2, s15
 8001f70:	b211      	sxth	r1, r2
 8001f72:	4a76      	ldr	r2, [pc, #472]	@ (800214c <main+0x5bc>)
 8001f74:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				  send_to_AWE_buffer[2*i+1] = (fract16) input_buffer[i];
 8001f78:	4a73      	ldr	r2, [pc, #460]	@ (8002148 <main+0x5b8>)
 8001f7a:	68bb      	ldr	r3, [r7, #8]
 8001f7c:	009b      	lsls	r3, r3, #2
 8001f7e:	4413      	add	r3, r2
 8001f80:	edd3 7a00 	vldr	s15, [r3]
 8001f84:	68bb      	ldr	r3, [r7, #8]
 8001f86:	005b      	lsls	r3, r3, #1
 8001f88:	3301      	adds	r3, #1
 8001f8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f8e:	ee17 2a90 	vmov	r2, s15
 8001f92:	b211      	sxth	r1, r2
 8001f94:	4a6d      	ldr	r2, [pc, #436]	@ (800214c <main+0x5bc>)
 8001f96:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			  for(int i = N; i < 2*N; i++){
 8001f9a:	68bb      	ldr	r3, [r7, #8]
 8001f9c:	3301      	adds	r3, #1
 8001f9e:	60bb      	str	r3, [r7, #8]
 8001fa0:	68bb      	ldr	r3, [r7, #8]
 8001fa2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001fa6:	dbc9      	blt.n	8001f3c <main+0x3ac>
			  }

		  }
		  adc_callback_state = 0;
 8001fa8:	4b69      	ldr	r3, [pc, #420]	@ (8002150 <main+0x5c0>)
 8001faa:	2200      	movs	r2, #0
 8001fac:	701a      	strb	r2, [r3, #0]
	  }

  	  if(i2s_callback_state != 0){
 8001fae:	4b69      	ldr	r3, [pc, #420]	@ (8002154 <main+0x5c4>)
 8001fb0:	781b      	ldrb	r3, [r3, #0]
 8001fb2:	b2db      	uxtb	r3, r3
 8001fb4:	2b00      	cmp	r3, #0
 8001fb6:	f43f ae38 	beq.w	8001c2a <main+0x9a>
  	 	  if(i2s_callback_state == 1){
 8001fba:	4b66      	ldr	r3, [pc, #408]	@ (8002154 <main+0x5c4>)
 8001fbc:	781b      	ldrb	r3, [r3, #0]
 8001fbe:	b2db      	uxtb	r3, r3
 8001fc0:	2b01      	cmp	r3, #1
 8001fc2:	d15a      	bne.n	800207a <main+0x4ea>

			  bAudioIsStarted = awe_audioIsStarted(&g_AWEInstance);
 8001fc4:	4864      	ldr	r0, [pc, #400]	@ (8002158 <main+0x5c8>)
 8001fc6:	f007 fc15 	bl	80097f4 <awe_audioIsStarted>
 8001fca:	4603      	mov	r3, r0
 8001fcc:	4a63      	ldr	r2, [pc, #396]	@ (800215c <main+0x5cc>)
 8001fce:	6013      	str	r3, [r2, #0]
			  bLayoutValid = awe_layoutIsValid(&g_AWEInstance);
 8001fd0:	4861      	ldr	r0, [pc, #388]	@ (8002158 <main+0x5c8>)
 8001fd2:	f007 fc09 	bl	80097e8 <awe_layoutIsValid>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	4a61      	ldr	r2, [pc, #388]	@ (8002160 <main+0x5d0>)
 8001fda:	6013      	str	r3, [r2, #0]

			  if(bAudioIsStarted && bLayoutValid) {
 8001fdc:	4b5f      	ldr	r3, [pc, #380]	@ (800215c <main+0x5cc>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d027      	beq.n	8002034 <main+0x4a4>
 8001fe4:	4b5e      	ldr	r3, [pc, #376]	@ (8002160 <main+0x5d0>)
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d023      	beq.n	8002034 <main+0x4a4>
				  // left and right stereo
				  awe_audioImportSamples(&g_AWEInstance, (fract16 *) &send_to_AWE_buffer[0], STRIDE2, CHANNEL1, Sample16bit);
 8001fec:	2300      	movs	r3, #0
 8001fee:	9300      	str	r3, [sp, #0]
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	2202      	movs	r2, #2
 8001ff4:	4955      	ldr	r1, [pc, #340]	@ (800214c <main+0x5bc>)
 8001ff6:	4858      	ldr	r0, [pc, #352]	@ (8002158 <main+0x5c8>)
 8001ff8:	f008 fd0a 	bl	800aa10 <awe_audioImportSamples>
				  awe_audioImportSamples(&g_AWEInstance, (fract16 *) &send_to_AWE_buffer[1], STRIDE2, CHANNEL2, Sample16bit);
 8001ffc:	2300      	movs	r3, #0
 8001ffe:	9300      	str	r3, [sp, #0]
 8002000:	2301      	movs	r3, #1
 8002002:	2202      	movs	r2, #2
 8002004:	4957      	ldr	r1, [pc, #348]	@ (8002164 <main+0x5d4>)
 8002006:	4854      	ldr	r0, [pc, #336]	@ (8002158 <main+0x5c8>)
 8002008:	f008 fd02 	bl	800aa10 <awe_audioImportSamples>

				  // pump inputs into AWE layout
				  awe_audioPump(&g_AWEInstance, 0);
 800200c:	2100      	movs	r1, #0
 800200e:	4852      	ldr	r0, [pc, #328]	@ (8002158 <main+0x5c8>)
 8002010:	f007 fa22 	bl	8009458 <awe_audioPump>

				  // left and right stereo
				  awe_audioExportSamples(&g_AWEInstance,  (INT16 *) &receive_from_AWE_buffer[0], STRIDE2, CHANNEL1, Sample16bit);
 8002014:	2300      	movs	r3, #0
 8002016:	9300      	str	r3, [sp, #0]
 8002018:	2300      	movs	r3, #0
 800201a:	2202      	movs	r2, #2
 800201c:	4952      	ldr	r1, [pc, #328]	@ (8002168 <main+0x5d8>)
 800201e:	484e      	ldr	r0, [pc, #312]	@ (8002158 <main+0x5c8>)
 8002020:	f008 fd4e 	bl	800aac0 <awe_audioExportSamples>
				  awe_audioExportSamples(&g_AWEInstance,  (INT16 *) &receive_from_AWE_buffer[1], STRIDE2, CHANNEL2, Sample16bit);
 8002024:	2300      	movs	r3, #0
 8002026:	9300      	str	r3, [sp, #0]
 8002028:	2301      	movs	r3, #1
 800202a:	2202      	movs	r2, #2
 800202c:	494f      	ldr	r1, [pc, #316]	@ (800216c <main+0x5dc>)
 800202e:	484a      	ldr	r0, [pc, #296]	@ (8002158 <main+0x5c8>)
 8002030:	f008 fd46 	bl	800aac0 <awe_audioExportSamples>
			  }

  	  		  for(int i = 0; i < N; i++){
 8002034:	2300      	movs	r3, #0
 8002036:	607b      	str	r3, [r7, #4]
 8002038:	e01a      	b.n	8002070 <main+0x4e0>
  	  			// left and right stereo
  	  		  	audio_buffer_out[2*i] = (uint16_t) receive_from_AWE_buffer[2*i];
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	005b      	lsls	r3, r3, #1
 800203e:	4a4a      	ldr	r2, [pc, #296]	@ (8002168 <main+0x5d8>)
 8002040:	f932 2013 	ldrsh.w	r2, [r2, r3, lsl #1]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	005b      	lsls	r3, r3, #1
 8002048:	b291      	uxth	r1, r2
 800204a:	4a49      	ldr	r2, [pc, #292]	@ (8002170 <main+0x5e0>)
 800204c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
  	  		  	audio_buffer_out[2*i+1] = (uint16_t) receive_from_AWE_buffer[2*i+1];
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	005b      	lsls	r3, r3, #1
 8002054:	3301      	adds	r3, #1
 8002056:	4a44      	ldr	r2, [pc, #272]	@ (8002168 <main+0x5d8>)
 8002058:	f932 2013 	ldrsh.w	r2, [r2, r3, lsl #1]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	005b      	lsls	r3, r3, #1
 8002060:	3301      	adds	r3, #1
 8002062:	b291      	uxth	r1, r2
 8002064:	4a42      	ldr	r2, [pc, #264]	@ (8002170 <main+0x5e0>)
 8002066:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
  	  		  for(int i = 0; i < N; i++){
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	3301      	adds	r3, #1
 800206e:	607b      	str	r3, [r7, #4]
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002076:	dbe0      	blt.n	800203a <main+0x4aa>
 8002078:	e05f      	b.n	800213a <main+0x5aa>
  	  		  }

  		  }
  	  	  else if(i2s_callback_state == 2) {
 800207a:	4b36      	ldr	r3, [pc, #216]	@ (8002154 <main+0x5c4>)
 800207c:	781b      	ldrb	r3, [r3, #0]
 800207e:	b2db      	uxtb	r3, r3
 8002080:	2b02      	cmp	r3, #2
 8002082:	d15a      	bne.n	800213a <main+0x5aa>

			  bAudioIsStarted = awe_audioIsStarted(&g_AWEInstance);
 8002084:	4834      	ldr	r0, [pc, #208]	@ (8002158 <main+0x5c8>)
 8002086:	f007 fbb5 	bl	80097f4 <awe_audioIsStarted>
 800208a:	4603      	mov	r3, r0
 800208c:	4a33      	ldr	r2, [pc, #204]	@ (800215c <main+0x5cc>)
 800208e:	6013      	str	r3, [r2, #0]
			  bLayoutValid = awe_layoutIsValid(&g_AWEInstance);
 8002090:	4831      	ldr	r0, [pc, #196]	@ (8002158 <main+0x5c8>)
 8002092:	f007 fba9 	bl	80097e8 <awe_layoutIsValid>
 8002096:	4603      	mov	r3, r0
 8002098:	4a31      	ldr	r2, [pc, #196]	@ (8002160 <main+0x5d0>)
 800209a:	6013      	str	r3, [r2, #0]

			  if(bAudioIsStarted && bLayoutValid) {
 800209c:	4b2f      	ldr	r3, [pc, #188]	@ (800215c <main+0x5cc>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	d027      	beq.n	80020f4 <main+0x564>
 80020a4:	4b2e      	ldr	r3, [pc, #184]	@ (8002160 <main+0x5d0>)
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d023      	beq.n	80020f4 <main+0x564>
				  awe_audioImportSamples(&g_AWEInstance, (fract16 *) &send_to_AWE_buffer[2*AUDIO_BLOCK_SIZE], STRIDE2, CHANNEL1, Sample16bit);
 80020ac:	2300      	movs	r3, #0
 80020ae:	9300      	str	r3, [sp, #0]
 80020b0:	2300      	movs	r3, #0
 80020b2:	2202      	movs	r2, #2
 80020b4:	492f      	ldr	r1, [pc, #188]	@ (8002174 <main+0x5e4>)
 80020b6:	4828      	ldr	r0, [pc, #160]	@ (8002158 <main+0x5c8>)
 80020b8:	f008 fcaa 	bl	800aa10 <awe_audioImportSamples>
				  awe_audioImportSamples(&g_AWEInstance, (fract16 *) &send_to_AWE_buffer[2*AUDIO_BLOCK_SIZE+1], STRIDE2, CHANNEL2, Sample16bit);
 80020bc:	2300      	movs	r3, #0
 80020be:	9300      	str	r3, [sp, #0]
 80020c0:	2301      	movs	r3, #1
 80020c2:	2202      	movs	r2, #2
 80020c4:	492c      	ldr	r1, [pc, #176]	@ (8002178 <main+0x5e8>)
 80020c6:	4824      	ldr	r0, [pc, #144]	@ (8002158 <main+0x5c8>)
 80020c8:	f008 fca2 	bl	800aa10 <awe_audioImportSamples>

				  awe_audioPump(&g_AWEInstance, 0);
 80020cc:	2100      	movs	r1, #0
 80020ce:	4822      	ldr	r0, [pc, #136]	@ (8002158 <main+0x5c8>)
 80020d0:	f007 f9c2 	bl	8009458 <awe_audioPump>

				  awe_audioExportSamples(&g_AWEInstance,  (INT16 *) &receive_from_AWE_buffer[2*AUDIO_BLOCK_SIZE], STRIDE2, CHANNEL1, Sample16bit);
 80020d4:	2300      	movs	r3, #0
 80020d6:	9300      	str	r3, [sp, #0]
 80020d8:	2300      	movs	r3, #0
 80020da:	2202      	movs	r2, #2
 80020dc:	4927      	ldr	r1, [pc, #156]	@ (800217c <main+0x5ec>)
 80020de:	481e      	ldr	r0, [pc, #120]	@ (8002158 <main+0x5c8>)
 80020e0:	f008 fcee 	bl	800aac0 <awe_audioExportSamples>
				  awe_audioExportSamples(&g_AWEInstance,  (INT16 *) &receive_from_AWE_buffer[2*AUDIO_BLOCK_SIZE+1], STRIDE2, CHANNEL2, Sample16bit);
 80020e4:	2300      	movs	r3, #0
 80020e6:	9300      	str	r3, [sp, #0]
 80020e8:	2301      	movs	r3, #1
 80020ea:	2202      	movs	r2, #2
 80020ec:	4924      	ldr	r1, [pc, #144]	@ (8002180 <main+0x5f0>)
 80020ee:	481a      	ldr	r0, [pc, #104]	@ (8002158 <main+0x5c8>)
 80020f0:	f008 fce6 	bl	800aac0 <awe_audioExportSamples>
			  }

  	  		  for(int i = N; i < 2*N; i++){
 80020f4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80020f8:	603b      	str	r3, [r7, #0]
 80020fa:	e01a      	b.n	8002132 <main+0x5a2>
  	  		  		audio_buffer_out[2*i] = (uint16_t) receive_from_AWE_buffer[2*i];
 80020fc:	683b      	ldr	r3, [r7, #0]
 80020fe:	005b      	lsls	r3, r3, #1
 8002100:	4a19      	ldr	r2, [pc, #100]	@ (8002168 <main+0x5d8>)
 8002102:	f932 2013 	ldrsh.w	r2, [r2, r3, lsl #1]
 8002106:	683b      	ldr	r3, [r7, #0]
 8002108:	005b      	lsls	r3, r3, #1
 800210a:	b291      	uxth	r1, r2
 800210c:	4a18      	ldr	r2, [pc, #96]	@ (8002170 <main+0x5e0>)
 800210e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
  	  		  		audio_buffer_out[2*i+1] = (uint16_t) receive_from_AWE_buffer[2*i+1];
 8002112:	683b      	ldr	r3, [r7, #0]
 8002114:	005b      	lsls	r3, r3, #1
 8002116:	3301      	adds	r3, #1
 8002118:	4a13      	ldr	r2, [pc, #76]	@ (8002168 <main+0x5d8>)
 800211a:	f932 2013 	ldrsh.w	r2, [r2, r3, lsl #1]
 800211e:	683b      	ldr	r3, [r7, #0]
 8002120:	005b      	lsls	r3, r3, #1
 8002122:	3301      	adds	r3, #1
 8002124:	b291      	uxth	r1, r2
 8002126:	4a12      	ldr	r2, [pc, #72]	@ (8002170 <main+0x5e0>)
 8002128:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
  	  		  for(int i = N; i < 2*N; i++){
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	3301      	adds	r3, #1
 8002130:	603b      	str	r3, [r7, #0]
 8002132:	683b      	ldr	r3, [r7, #0]
 8002134:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8002138:	dbe0      	blt.n	80020fc <main+0x56c>
  	  		  }

 		  }
  		  i2s_callback_state = 0;
 800213a:	4b06      	ldr	r3, [pc, #24]	@ (8002154 <main+0x5c4>)
 800213c:	2200      	movs	r2, #0
 800213e:	701a      	strb	r2, [r3, #0]
      if (g_bBlinkLED4ForBoardAlive)
 8002140:	e573      	b.n	8001c2a <main+0x9a>
 8002142:	bf00      	nop
 8002144:	20000d08 	.word	0x20000d08
 8002148:	20002d08 	.word	0x20002d08
 800214c:	20006d08 	.word	0x20006d08
 8002150:	2000ad08 	.word	0x2000ad08
 8002154:	2000ad09 	.word	0x2000ad09
 8002158:	2000ad0c 	.word	0x2000ad0c
 800215c:	2000b278 	.word	0x2000b278
 8002160:	2000b27c 	.word	0x2000b27c
 8002164:	20006d0a 	.word	0x20006d0a
 8002168:	20008d08 	.word	0x20008d08
 800216c:	20008d0a 	.word	0x20008d0a
 8002170:	20004d08 	.word	0x20004d08
 8002174:	20007d08 	.word	0x20007d08
 8002178:	20007d0a 	.word	0x20007d0a
 800217c:	20009d08 	.word	0x20009d08
 8002180:	20009d0a 	.word	0x20009d0a

08002184 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002184:	b580      	push	{r7, lr}
 8002186:	b094      	sub	sp, #80	@ 0x50
 8002188:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800218a:	f107 0320 	add.w	r3, r7, #32
 800218e:	2230      	movs	r2, #48	@ 0x30
 8002190:	2100      	movs	r1, #0
 8002192:	4618      	mov	r0, r3
 8002194:	f02b fcde 	bl	802db54 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002198:	f107 030c 	add.w	r3, r7, #12
 800219c:	2200      	movs	r2, #0
 800219e:	601a      	str	r2, [r3, #0]
 80021a0:	605a      	str	r2, [r3, #4]
 80021a2:	609a      	str	r2, [r3, #8]
 80021a4:	60da      	str	r2, [r3, #12]
 80021a6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80021a8:	2300      	movs	r3, #0
 80021aa:	60bb      	str	r3, [r7, #8]
 80021ac:	4b28      	ldr	r3, [pc, #160]	@ (8002250 <SystemClock_Config+0xcc>)
 80021ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021b0:	4a27      	ldr	r2, [pc, #156]	@ (8002250 <SystemClock_Config+0xcc>)
 80021b2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80021b6:	6413      	str	r3, [r2, #64]	@ 0x40
 80021b8:	4b25      	ldr	r3, [pc, #148]	@ (8002250 <SystemClock_Config+0xcc>)
 80021ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021bc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80021c0:	60bb      	str	r3, [r7, #8]
 80021c2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80021c4:	2300      	movs	r3, #0
 80021c6:	607b      	str	r3, [r7, #4]
 80021c8:	4b22      	ldr	r3, [pc, #136]	@ (8002254 <SystemClock_Config+0xd0>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	4a21      	ldr	r2, [pc, #132]	@ (8002254 <SystemClock_Config+0xd0>)
 80021ce:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80021d2:	6013      	str	r3, [r2, #0]
 80021d4:	4b1f      	ldr	r3, [pc, #124]	@ (8002254 <SystemClock_Config+0xd0>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80021dc:	607b      	str	r3, [r7, #4]
 80021de:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80021e0:	2301      	movs	r3, #1
 80021e2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80021e4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80021e8:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80021ea:	2302      	movs	r3, #2
 80021ec:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80021ee:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80021f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80021f4:	2304      	movs	r3, #4
 80021f6:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 80021f8:	23a8      	movs	r3, #168	@ 0xa8
 80021fa:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80021fc:	2302      	movs	r3, #2
 80021fe:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8002200:	2307      	movs	r3, #7
 8002202:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002204:	f107 0320 	add.w	r3, r7, #32
 8002208:	4618      	mov	r0, r3
 800220a:	f004 f933 	bl	8006474 <HAL_RCC_OscConfig>
 800220e:	4603      	mov	r3, r0
 8002210:	2b00      	cmp	r3, #0
 8002212:	d001      	beq.n	8002218 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002214:	f000 f82d 	bl	8002272 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002218:	230f      	movs	r3, #15
 800221a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800221c:	2302      	movs	r3, #2
 800221e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002220:	2300      	movs	r3, #0
 8002222:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002224:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002228:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800222a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800222e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002230:	f107 030c 	add.w	r3, r7, #12
 8002234:	2105      	movs	r1, #5
 8002236:	4618      	mov	r0, r3
 8002238:	f004 fb94 	bl	8006964 <HAL_RCC_ClockConfig>
 800223c:	4603      	mov	r3, r0
 800223e:	2b00      	cmp	r3, #0
 8002240:	d001      	beq.n	8002246 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8002242:	f000 f816 	bl	8002272 <Error_Handler>
  }
}
 8002246:	bf00      	nop
 8002248:	3750      	adds	r7, #80	@ 0x50
 800224a:	46bd      	mov	sp, r7
 800224c:	bd80      	pop	{r7, pc}
 800224e:	bf00      	nop
 8002250:	40023800 	.word	0x40023800
 8002254:	40007000 	.word	0x40007000

08002258 <__io_putchar>:

/* USER CODE BEGIN 4 */
int __io_putchar(int ch){
 8002258:	b580      	push	{r7, lr}
 800225a:	b082      	sub	sp, #8
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	4618      	mov	r0, r3
 8002264:	f7ff fc2c 	bl	8001ac0 <ITM_SendChar>
	return 0;
 8002268:	2300      	movs	r3, #0
}
 800226a:	4618      	mov	r0, r3
 800226c:	3708      	adds	r7, #8
 800226e:	46bd      	mov	sp, r7
 8002270:	bd80      	pop	{r7, pc}

08002272 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002272:	b480      	push	{r7}
 8002274:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002276:	b672      	cpsid	i
}
 8002278:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800227a:	bf00      	nop
 800227c:	e7fd      	b.n	800227a <Error_Handler+0x8>
	...

08002280 <AWEInstanceInit>:
//-----------------------------------------------------------------------------
// METHOD:  AWEInstanceInit
// PURPOSE: Initialize AWE Instance with target details
//-----------------------------------------------------------------------------
void AWEInstanceInit()
{
 8002280:	b580      	push	{r7, lr}
 8002282:	b082      	sub	sp, #8
 8002284:	af00      	add	r7, sp, #0

	int ret;

    memset(&g_AWEInstance, 0, sizeof(AWEInstance) );
 8002286:	f240 5224 	movw	r2, #1316	@ 0x524
 800228a:	2100      	movs	r1, #0
 800228c:	4848      	ldr	r0, [pc, #288]	@ (80023b0 <AWEInstanceInit+0x130>)
 800228e:	f02b fc61 	bl	802db54 <memset>

    g_AWEInstance.pInputPin = &s_InputPin;
 8002292:	4b47      	ldr	r3, [pc, #284]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002294:	4a47      	ldr	r2, [pc, #284]	@ (80023b4 <AWEInstanceInit+0x134>)
 8002296:	629a      	str	r2, [r3, #40]	@ 0x28
    g_AWEInstance.pOutputPin = &s_OutputPin;
 8002298:	4b45      	ldr	r3, [pc, #276]	@ (80023b0 <AWEInstanceInit+0x130>)
 800229a:	4a47      	ldr	r2, [pc, #284]	@ (80023b8 <AWEInstanceInit+0x138>)
 800229c:	62da      	str	r2, [r3, #44]	@ 0x2c

    ret = awe_initPin(&s_InputPin, INPUT_CHANNEL_COUNT, NULL);
 800229e:	2200      	movs	r2, #0
 80022a0:	2102      	movs	r1, #2
 80022a2:	4844      	ldr	r0, [pc, #272]	@ (80023b4 <AWEInstanceInit+0x134>)
 80022a4:	f008 fc8e 	bl	800abc4 <awe_initPin>
 80022a8:	6078      	str	r0, [r7, #4]
    if (ret != 0)
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d002      	beq.n	80022b6 <AWEInstanceInit+0x36>
    {
        printf("awe_initPin inputPin failed\n");
 80022b0:	4842      	ldr	r0, [pc, #264]	@ (80023bc <AWEInstanceInit+0x13c>)
 80022b2:	f02b fb6f 	bl	802d994 <puts>
    }
    ret = awe_initPin(&s_OutputPin, OUTPUT_CHANNEL_COUNT, NULL);
 80022b6:	2200      	movs	r2, #0
 80022b8:	2102      	movs	r1, #2
 80022ba:	483f      	ldr	r0, [pc, #252]	@ (80023b8 <AWEInstanceInit+0x138>)
 80022bc:	f008 fc82 	bl	800abc4 <awe_initPin>
 80022c0:	6078      	str	r0, [r7, #4]
    if (ret != 0)
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d002      	beq.n	80022ce <AWEInstanceInit+0x4e>
    {
        printf("awe_initPin outputPin failed\n");
 80022c8:	483d      	ldr	r0, [pc, #244]	@ (80023c0 <AWEInstanceInit+0x140>)
 80022ca:	f02b fb63 	bl	802d994 <puts>


#if HAS_FLASH_FILESYSTEM

    // Setup the flash file system
    memset(&g_AWEFlashFSInstance, 0, sizeof(AWEFlashFSInstance) );
 80022ce:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80022d2:	2100      	movs	r1, #0
 80022d4:	483b      	ldr	r0, [pc, #236]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022d6:	f02b fc3d 	bl	802db54 <memset>

    g_AWEFlashFSInstance.cbInit = &usrInitFlashFileSystem;
 80022da:	4b3a      	ldr	r3, [pc, #232]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022dc:	4a3a      	ldr	r2, [pc, #232]	@ (80023c8 <AWEInstanceInit+0x148>)
 80022de:	611a      	str	r2, [r3, #16]
    g_AWEFlashFSInstance.cbEraseSector = &usrEraseFlashMemorySector;
 80022e0:	4b38      	ldr	r3, [pc, #224]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022e2:	4a3a      	ldr	r2, [pc, #232]	@ (80023cc <AWEInstanceInit+0x14c>)
 80022e4:	615a      	str	r2, [r3, #20]
    g_AWEFlashFSInstance.cbFlashWrite = &usrWriteFlashMemory;
 80022e6:	4b37      	ldr	r3, [pc, #220]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022e8:	4a39      	ldr	r2, [pc, #228]	@ (80023d0 <AWEInstanceInit+0x150>)
 80022ea:	619a      	str	r2, [r3, #24]
    g_AWEFlashFSInstance.cbFlashRead = &usrReadFlashMemory;
 80022ec:	4b35      	ldr	r3, [pc, #212]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022ee:	4a39      	ldr	r2, [pc, #228]	@ (80023d4 <AWEInstanceInit+0x154>)
 80022f0:	61da      	str	r2, [r3, #28]

    g_AWEFlashFSInstance.flashSizeInBytes = FLASH_MEMORY_SIZE_IN_BYTES;
 80022f2:	4b34      	ldr	r3, [pc, #208]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022f4:	f04f 6201 	mov.w	r2, #135266304	@ 0x8100000
 80022f8:	601a      	str	r2, [r3, #0]
    g_AWEFlashFSInstance.flashErasableBlockSizeInBytes = ERASEABLE_BLOCKSIZE;
 80022fa:	4b32      	ldr	r3, [pc, #200]	@ (80023c4 <AWEInstanceInit+0x144>)
 80022fc:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8002300:	605a      	str	r2, [r3, #4]
    g_AWEFlashFSInstance.flashStartOffsetInBytes = FILE_SYSTEM_START_OFFSET;
 8002302:	4b30      	ldr	r3, [pc, #192]	@ (80023c4 <AWEInstanceInit+0x144>)
 8002304:	4a34      	ldr	r2, [pc, #208]	@ (80023d8 <AWEInstanceInit+0x158>)
 8002306:	609a      	str	r2, [r3, #8]
    g_AWEFlashFSInstance.flashEraseTimeInMs = 0;
 8002308:	4b2e      	ldr	r3, [pc, #184]	@ (80023c4 <AWEInstanceInit+0x144>)
 800230a:	2200      	movs	r2, #0
 800230c:	60da      	str	r2, [r3, #12]

    awe_initFlashFS(&g_AWEInstance, &g_AWEFlashFSInstance);
 800230e:	492d      	ldr	r1, [pc, #180]	@ (80023c4 <AWEInstanceInit+0x144>)
 8002310:	4827      	ldr	r0, [pc, #156]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002312:	f006 fb2d 	bl	8008970 <awe_initFlashFS>

#endif

    // User version word
    g_AWEInstance.userVersion = USER_VER;
 8002316:	4b26      	ldr	r3, [pc, #152]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002318:	4a30      	ldr	r2, [pc, #192]	@ (80023dc <AWEInstanceInit+0x15c>)
 800231a:	645a      	str	r2, [r3, #68]	@ 0x44

    // Initialize board properties
    g_AWEInstance.instanceId = INSTANCE_ID;
 800231c:	4b24      	ldr	r3, [pc, #144]	@ (80023b0 <AWEInstanceInit+0x130>)
 800231e:	2200      	movs	r2, #0
 8002320:	601a      	str	r2, [r3, #0]
    g_AWEInstance.coreSpeed = CORE_SPEED;
 8002322:	4b23      	ldr	r3, [pc, #140]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002324:	4a2e      	ldr	r2, [pc, #184]	@ (80023e0 <AWEInstanceInit+0x160>)
 8002326:	649a      	str	r2, [r3, #72]	@ 0x48
    g_AWEInstance.profileSpeed = CORE_SPEED;
 8002328:	4b21      	ldr	r3, [pc, #132]	@ (80023b0 <AWEInstanceInit+0x130>)
 800232a:	4a2d      	ldr	r2, [pc, #180]	@ (80023e0 <AWEInstanceInit+0x160>)
 800232c:	64da      	str	r2, [r3, #76]	@ 0x4c
    g_AWEInstance.pName = "ST32F407";
 800232e:	4b20      	ldr	r3, [pc, #128]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002330:	4a2c      	ldr	r2, [pc, #176]	@ (80023e4 <AWEInstanceInit+0x164>)
 8002332:	651a      	str	r2, [r3, #80]	@ 0x50
    g_AWEInstance.numThreads = NUM_AUDIO_THREADS;
 8002334:	4b1e      	ldr	r3, [pc, #120]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002336:	2202      	movs	r2, #2
 8002338:	655a      	str	r2, [r3, #84]	@ 0x54
    g_AWEInstance.pModuleDescriptorTable = g_module_descriptor_table;
 800233a:	4b1d      	ldr	r3, [pc, #116]	@ (80023b0 <AWEInstanceInit+0x130>)
 800233c:	4a2a      	ldr	r2, [pc, #168]	@ (80023e8 <AWEInstanceInit+0x168>)
 800233e:	635a      	str	r2, [r3, #52]	@ 0x34
    g_AWEInstance.numModules = g_module_descriptor_table_size;
 8002340:	4b2a      	ldr	r3, [pc, #168]	@ (80023ec <AWEInstanceInit+0x16c>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a1a      	ldr	r2, [pc, #104]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002346:	6313      	str	r3, [r2, #48]	@ 0x30
    g_AWEInstance.sampleRate = AUDIO_SAMPLE_RATE;
 8002348:	4b19      	ldr	r3, [pc, #100]	@ (80023b0 <AWEInstanceInit+0x130>)
 800234a:	4a29      	ldr	r2, [pc, #164]	@ (80023f0 <AWEInstanceInit+0x170>)
 800234c:	659a      	str	r2, [r3, #88]	@ 0x58
    g_AWEInstance.fundamentalBlockSize = AUDIO_BLOCK_SIZE;
 800234e:	4b18      	ldr	r3, [pc, #96]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002350:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002354:	65da      	str	r2, [r3, #92]	@ 0x5c

    // Define the heap sizes
    g_AWEInstance.fastHeapASize = FASTA_HEAP_SIZE;
 8002356:	4b16      	ldr	r3, [pc, #88]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002358:	f44f 5240 	mov.w	r2, #12288	@ 0x3000
 800235c:	611a      	str	r2, [r3, #16]
    g_AWEInstance.fastHeapBSize = FASTB_HEAP_SIZE;
 800235e:	4b14      	ldr	r3, [pc, #80]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002360:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8002364:	615a      	str	r2, [r3, #20]
    g_AWEInstance.slowHeapSize = SLOW_HEAP_SIZE;
 8002366:	4b12      	ldr	r3, [pc, #72]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002368:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 800236c:	619a      	str	r2, [r3, #24]

    // Point to the heaps on this target
    g_AWEInstance.pFastHeapA = g_fastA_heap;
 800236e:	4b10      	ldr	r3, [pc, #64]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002370:	4a20      	ldr	r2, [pc, #128]	@ (80023f4 <AWEInstanceInit+0x174>)
 8002372:	605a      	str	r2, [r3, #4]
    g_AWEInstance.pFastHeapB = g_fastB_heap;
 8002374:	4b0e      	ldr	r3, [pc, #56]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002376:	4a20      	ldr	r2, [pc, #128]	@ (80023f8 <AWEInstanceInit+0x178>)
 8002378:	609a      	str	r2, [r3, #8]
    g_AWEInstance.pSlowHeap = g_slow_heap;
 800237a:	4b0d      	ldr	r3, [pc, #52]	@ (80023b0 <AWEInstanceInit+0x130>)
 800237c:	4a1f      	ldr	r2, [pc, #124]	@ (80023fc <AWEInstanceInit+0x17c>)
 800237e:	60da      	str	r2, [r3, #12]

    // Define storage for the tuning packet buffer
    g_AWEInstance.pPacketBuffer = g_packet_buffer;
 8002380:	4b0b      	ldr	r3, [pc, #44]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002382:	4a1f      	ldr	r2, [pc, #124]	@ (8002400 <AWEInstanceInit+0x180>)
 8002384:	639a      	str	r2, [r3, #56]	@ 0x38
    g_AWEInstance.packetBufferSize = MAX_COMMAND_BUFFER_LEN;
 8002386:	4b0a      	ldr	r3, [pc, #40]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002388:	f44f 7284 	mov.w	r2, #264	@ 0x108
 800238c:	641a      	str	r2, [r3, #64]	@ 0x40

    g_AWEInstance.pReplyBuffer = g_packet_buffer;
 800238e:	4b08      	ldr	r3, [pc, #32]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002390:	4a1b      	ldr	r2, [pc, #108]	@ (8002400 <AWEInstanceInit+0x180>)
 8002392:	63da      	str	r2, [r3, #60]	@ 0x3c

    // Initialize the AWE instance
    ret = awe_init(&g_AWEInstance);
 8002394:	4806      	ldr	r0, [pc, #24]	@ (80023b0 <AWEInstanceInit+0x130>)
 8002396:	f006 fc03 	bl	8008ba0 <awe_init>
 800239a:	6078      	str	r0, [r7, #4]
    if (ret != 0)
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d002      	beq.n	80023a8 <AWEInstanceInit+0x128>
    {
        printf("awe_init failed\n");
 80023a2:	4818      	ldr	r0, [pc, #96]	@ (8002404 <AWEInstanceInit+0x184>)
 80023a4:	f02b faf6 	bl	802d994 <puts>
    }

}   // End AWEInstanceInit
 80023a8:	bf00      	nop
 80023aa:	3708      	adds	r7, #8
 80023ac:	46bd      	mov	sp, r7
 80023ae:	bd80      	pop	{r7, pc}
 80023b0:	2000ad0c 	.word	0x2000ad0c
 80023b4:	2000b390 	.word	0x2000b390
 80023b8:	2000b3d4 	.word	0x2000b3d4
 80023bc:	08033b4c 	.word	0x08033b4c
 80023c0:	08033b68 	.word	0x08033b68
 80023c4:	2000b280 	.word	0x2000b280
 80023c8:	0800243d 	.word	0x0800243d
 80023cc:	08002529 	.word	0x08002529
 80023d0:	0800249f 	.word	0x0800249f
 80023d4:	08002459 	.word	0x08002459
 80023d8:	08080000 	.word	0x08080000
 80023dc:	013416be 	.word	0x013416be
 80023e0:	4d2037a0 	.word	0x4d2037a0
 80023e4:	08033b88 	.word	0x08033b88
 80023e8:	20000788 	.word	0x20000788
 80023ec:	20000a10 	.word	0x20000a10
 80023f0:	473b8000 	.word	0x473b8000
 80023f4:	2000b418 	.word	0x2000b418
 80023f8:	10000000 	.word	0x10000000
 80023fc:	20017418 	.word	0x20017418
 8002400:	2001d418 	.word	0x2001d418
 8002404:	08033b94 	.word	0x08033b94

08002408 <aweuser_getCycleCount>:
//-----------------------------------------------------------------------------
// METHOD:  aweuser_getCycleCount
// PURPOSE: Returns the current value in the counter
//-----------------------------------------------------------------------------
UINT32 aweuser_getCycleCount(void)
{
 8002408:	b480      	push	{r7}
 800240a:	af00      	add	r7, sp, #0
    return *DWT_CYCCNT;
 800240c:	4b03      	ldr	r3, [pc, #12]	@ (800241c <aweuser_getCycleCount+0x14>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	681b      	ldr	r3, [r3, #0]

}   // End aweuser_getCycleCount
 8002412:	4618      	mov	r0, r3
 8002414:	46bd      	mov	sp, r7
 8002416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241a:	4770      	bx	lr
 800241c:	20000a14 	.word	0x20000a14

08002420 <aweuser_getElapsedCycles>:
//-----------------------------------------------------------------------------
// METHOD:  aweuser_getElapsedCycles
// PURPOSE: Returns the cycle count between start time and end time
//-----------------------------------------------------------------------------
UINT32 aweuser_getElapsedCycles(UINT32 nStartTime, UINT32 nEndTime)
{
 8002420:	b480      	push	{r7}
 8002422:	b083      	sub	sp, #12
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	6039      	str	r1, [r7, #0]
	return nEndTime - nStartTime;
 800242a:	683a      	ldr	r2, [r7, #0]
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	1ad3      	subs	r3, r2, r3

}   // End aweuser_getElapsedCycles
 8002430:	4618      	mov	r0, r3
 8002432:	370c      	adds	r7, #12
 8002434:	46bd      	mov	sp, r7
 8002436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243a:	4770      	bx	lr

0800243c <usrInitFlashFileSystem>:
// PURPOSE: This method is here
//-----------------------------------------------------------------------------
AWE_OPTIMIZE_FOR_SPACE
AWE_FW_SLOW_CODE
BOOL usrInitFlashFileSystem(void)
{
 800243c:	b480      	push	{r7}
 800243e:	af00      	add	r7, sp, #0
    // Clear the flash register flags
    __HAL_FLASH_CLEAR_FLAG( (FLASH_FLAG_EOP | \
 8002440:	4b04      	ldr	r3, [pc, #16]	@ (8002454 <usrInitFlashFileSystem+0x18>)
 8002442:	22f3      	movs	r2, #243	@ 0xf3
 8002444:	60da      	str	r2, [r3, #12]
                             FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
                             FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR));

    return SUCCESS;
 8002446:	2301      	movs	r3, #1

}   // End usrInitFlashFileSystem
 8002448:	4618      	mov	r0, r3
 800244a:	46bd      	mov	sp, r7
 800244c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002450:	4770      	bx	lr
 8002452:	bf00      	nop
 8002454:	40023c00 	.word	0x40023c00

08002458 <usrReadFlashMemory>:
// PURPOSE: Read from flash memory device
//-----------------------------------------------------------------------------
AWE_OPTIMIZE_FOR_SPACE
AWE_FW_SLOW_CODE
BOOL usrReadFlashMemory(UINT32 nFlashAddress, UINT32 * pBuffer, UINT32 nDWordsToRead)
{
 8002458:	b480      	push	{r7}
 800245a:	b087      	sub	sp, #28
 800245c:	af00      	add	r7, sp, #0
 800245e:	60f8      	str	r0, [r7, #12]
 8002460:	60b9      	str	r1, [r7, #8]
 8002462:	607a      	str	r2, [r7, #4]
    UINT32 n;
    UINT32 * pSrc = (UINT32 *)nFlashAddress;
 8002464:	68fb      	ldr	r3, [r7, #12]
 8002466:	613b      	str	r3, [r7, #16]

	for (n = 0; n < nDWordsToRead; n++)
 8002468:	2300      	movs	r3, #0
 800246a:	617b      	str	r3, [r7, #20]
 800246c:	e00c      	b.n	8002488 <usrReadFlashMemory+0x30>
	{
		pBuffer[n] = pSrc[n];
 800246e:	697b      	ldr	r3, [r7, #20]
 8002470:	009b      	lsls	r3, r3, #2
 8002472:	693a      	ldr	r2, [r7, #16]
 8002474:	441a      	add	r2, r3
 8002476:	697b      	ldr	r3, [r7, #20]
 8002478:	009b      	lsls	r3, r3, #2
 800247a:	68b9      	ldr	r1, [r7, #8]
 800247c:	440b      	add	r3, r1
 800247e:	6812      	ldr	r2, [r2, #0]
 8002480:	601a      	str	r2, [r3, #0]
	for (n = 0; n < nDWordsToRead; n++)
 8002482:	697b      	ldr	r3, [r7, #20]
 8002484:	3301      	adds	r3, #1
 8002486:	617b      	str	r3, [r7, #20]
 8002488:	697a      	ldr	r2, [r7, #20]
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	429a      	cmp	r2, r3
 800248e:	d3ee      	bcc.n	800246e <usrReadFlashMemory+0x16>
	}

	return SUCCESS;
 8002490:	2301      	movs	r3, #1

}	// End usrReadFlashMemory
 8002492:	4618      	mov	r0, r3
 8002494:	371c      	adds	r7, #28
 8002496:	46bd      	mov	sp, r7
 8002498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800249c:	4770      	bx	lr

0800249e <usrWriteFlashMemory>:
// PURPOSE: Write to flash memory device
//-----------------------------------------------------------------------------
AWE_OPTIMIZE_FOR_SPACE
AWE_FW_SLOW_CODE
BOOL usrWriteFlashMemory(UINT32 nFlashAddress, UINT32 * pBuffer, UINT32 nDWordsToWrite)
{
 800249e:	b5b0      	push	{r4, r5, r7, lr}
 80024a0:	b086      	sub	sp, #24
 80024a2:	af00      	add	r7, sp, #0
 80024a4:	60f8      	str	r0, [r7, #12]
 80024a6:	60b9      	str	r1, [r7, #8]
 80024a8:	607a      	str	r2, [r7, #4]
	UINT32 n = 0;
 80024aa:	2300      	movs	r3, #0
 80024ac:	617b      	str	r3, [r7, #20]

	// Flash address must be on a 4 byte boundary since writing DWords
	if ( (nFlashAddress & 0x00000003) != 0)
 80024ae:	68fb      	ldr	r3, [r7, #12]
 80024b0:	f003 0303 	and.w	r3, r3, #3
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d001      	beq.n	80024bc <usrWriteFlashMemory+0x1e>
	{
		return FAILURE;
 80024b8:	2300      	movs	r3, #0
 80024ba:	e030      	b.n	800251e <usrWriteFlashMemory+0x80>
	}

    HAL_FLASH_Unlock();
 80024bc:	f001 fde6 	bl	800408c <HAL_FLASH_Unlock>

    while (n < nDWordsToWrite)
 80024c0:	e026      	b.n	8002510 <usrWriteFlashMemory+0x72>
    {
        if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, nFlashAddress, pBuffer[n]) == HAL_OK)
 80024c2:	697b      	ldr	r3, [r7, #20]
 80024c4:	009b      	lsls	r3, r3, #2
 80024c6:	68ba      	ldr	r2, [r7, #8]
 80024c8:	4413      	add	r3, r2
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	2200      	movs	r2, #0
 80024ce:	461c      	mov	r4, r3
 80024d0:	4615      	mov	r5, r2
 80024d2:	4622      	mov	r2, r4
 80024d4:	462b      	mov	r3, r5
 80024d6:	68f9      	ldr	r1, [r7, #12]
 80024d8:	2002      	movs	r0, #2
 80024da:	f001 fd83 	bl	8003fe4 <HAL_FLASH_Program>
 80024de:	4603      	mov	r3, r0
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d113      	bne.n	800250c <usrWriteFlashMemory+0x6e>
        {
            // Read back DWORD that was written
            DWORD nDWord;
            nDWord = *(PDWORD)nFlashAddress;
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	613b      	str	r3, [r7, #16]
            if (nDWord != pBuffer[n])
 80024ea:	697b      	ldr	r3, [r7, #20]
 80024ec:	009b      	lsls	r3, r3, #2
 80024ee:	68ba      	ldr	r2, [r7, #8]
 80024f0:	4413      	add	r3, r2
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	693a      	ldr	r2, [r7, #16]
 80024f6:	429a      	cmp	r2, r3
 80024f8:	d001      	beq.n	80024fe <usrWriteFlashMemory+0x60>
            {
                return FAILURE;
 80024fa:	2300      	movs	r3, #0
 80024fc:	e00f      	b.n	800251e <usrWriteFlashMemory+0x80>
            }

            nFlashAddress = nFlashAddress + 4;
 80024fe:	68fb      	ldr	r3, [r7, #12]
 8002500:	3304      	adds	r3, #4
 8002502:	60fb      	str	r3, [r7, #12]
            n++;
 8002504:	697b      	ldr	r3, [r7, #20]
 8002506:	3301      	adds	r3, #1
 8002508:	617b      	str	r3, [r7, #20]
 800250a:	e001      	b.n	8002510 <usrWriteFlashMemory+0x72>
        }
        else
        {
            return FAILURE;
 800250c:	2300      	movs	r3, #0
 800250e:	e006      	b.n	800251e <usrWriteFlashMemory+0x80>
    while (n < nDWordsToWrite)
 8002510:	697a      	ldr	r2, [r7, #20]
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	429a      	cmp	r2, r3
 8002516:	d3d4      	bcc.n	80024c2 <usrWriteFlashMemory+0x24>
        }
    }

    HAL_FLASH_Lock();
 8002518:	f001 fdda 	bl	80040d0 <HAL_FLASH_Lock>

	return SUCCESS;
 800251c:	2301      	movs	r3, #1

}	// End usrWriteFlashMemory
 800251e:	4618      	mov	r0, r3
 8002520:	3718      	adds	r7, #24
 8002522:	46bd      	mov	sp, r7
 8002524:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002528 <usrEraseFlashMemorySector>:
//          starts with flash sector 8. These are actually 128K sectors.
//-----------------------------------------------------------------------------
AWE_OPTIMIZE_FOR_SPACE
AWE_FW_SLOW_CODE
BOOL usrEraseFlashMemorySector(UINT32 nStartingAddress, UINT32 nNumberOfSectors)
{
 8002528:	b580      	push	{r7, lr}
 800252a:	b08a      	sub	sp, #40	@ 0x28
 800252c:	af00      	add	r7, sp, #0
 800252e:	6078      	str	r0, [r7, #4]
 8002530:	6039      	str	r1, [r7, #0]
    FLASH_EraseInitTypeDef EraseInitStruct;
    UINT32 nSector_to_erase = 0;
 8002532:	2300      	movs	r3, #0
 8002534:	627b      	str	r3, [r7, #36]	@ 0x24
    UINT32 SectorError = 0;
 8002536:	2300      	movs	r3, #0
 8002538:	60fb      	str	r3, [r7, #12]

    if (nStartingAddress < ADDR_FLASH_SECTOR_7)
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	4a2e      	ldr	r2, [pc, #184]	@ (80025f8 <usrEraseFlashMemorySector+0xd0>)
 800253e:	4293      	cmp	r3, r2
 8002540:	d802      	bhi.n	8002548 <usrEraseFlashMemorySector+0x20>
    {
        nSector_to_erase = FLASH_SECTOR_6;
 8002542:	2306      	movs	r3, #6
 8002544:	627b      	str	r3, [r7, #36]	@ 0x24
 8002546:	e021      	b.n	800258c <usrEraseFlashMemorySector+0x64>
    }

    else if (nStartingAddress < ADDR_FLASH_SECTOR_8)
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	4a2c      	ldr	r2, [pc, #176]	@ (80025fc <usrEraseFlashMemorySector+0xd4>)
 800254c:	4293      	cmp	r3, r2
 800254e:	d802      	bhi.n	8002556 <usrEraseFlashMemorySector+0x2e>
    {
        nSector_to_erase = FLASH_SECTOR_7;
 8002550:	2307      	movs	r3, #7
 8002552:	627b      	str	r3, [r7, #36]	@ 0x24
 8002554:	e01a      	b.n	800258c <usrEraseFlashMemorySector+0x64>
    }

    else if (nStartingAddress < ADDR_FLASH_SECTOR_9)
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	4a29      	ldr	r2, [pc, #164]	@ (8002600 <usrEraseFlashMemorySector+0xd8>)
 800255a:	4293      	cmp	r3, r2
 800255c:	d802      	bhi.n	8002564 <usrEraseFlashMemorySector+0x3c>
    {
        nSector_to_erase = FLASH_SECTOR_8;
 800255e:	2308      	movs	r3, #8
 8002560:	627b      	str	r3, [r7, #36]	@ 0x24
 8002562:	e013      	b.n	800258c <usrEraseFlashMemorySector+0x64>
    }

    else if (nStartingAddress < ADDR_FLASH_SECTOR_10)
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	4a27      	ldr	r2, [pc, #156]	@ (8002604 <usrEraseFlashMemorySector+0xdc>)
 8002568:	4293      	cmp	r3, r2
 800256a:	d802      	bhi.n	8002572 <usrEraseFlashMemorySector+0x4a>
    {
        nSector_to_erase = FLASH_SECTOR_9;
 800256c:	2309      	movs	r3, #9
 800256e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002570:	e00c      	b.n	800258c <usrEraseFlashMemorySector+0x64>
    }

    else if (nStartingAddress < ADDR_FLASH_SECTOR_11)
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	4a24      	ldr	r2, [pc, #144]	@ (8002608 <usrEraseFlashMemorySector+0xe0>)
 8002576:	4293      	cmp	r3, r2
 8002578:	d802      	bhi.n	8002580 <usrEraseFlashMemorySector+0x58>
    {
        nSector_to_erase = FLASH_SECTOR_10;
 800257a:	230a      	movs	r3, #10
 800257c:	627b      	str	r3, [r7, #36]	@ 0x24
 800257e:	e005      	b.n	800258c <usrEraseFlashMemorySector+0x64>
    }

    else if (nStartingAddress < ((uint32_t)0x08100000))
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	f1b3 6f01 	cmp.w	r3, #135266304	@ 0x8100000
 8002586:	d201      	bcs.n	800258c <usrEraseFlashMemorySector+0x64>
    {
        nSector_to_erase = FLASH_SECTOR_11;
 8002588:	230b      	movs	r3, #11
 800258a:	627b      	str	r3, [r7, #36]	@ 0x24
    }

    HAL_FLASH_Unlock();
 800258c:	f001 fd7e 	bl	800408c <HAL_FLASH_Unlock>

    EraseInitStruct.TypeErase = FLASH_TYPEERASE_SECTORS;
 8002590:	2300      	movs	r3, #0
 8002592:	613b      	str	r3, [r7, #16]
    EraseInitStruct.VoltageRange = FLASH_VOLTAGE_RANGE_3;
 8002594:	2302      	movs	r3, #2
 8002596:	623b      	str	r3, [r7, #32]
    EraseInitStruct.Sector = nSector_to_erase;
 8002598:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800259a:	61bb      	str	r3, [r7, #24]
    EraseInitStruct.NbSectors = nNumberOfSectors;
 800259c:	683b      	ldr	r3, [r7, #0]
 800259e:	61fb      	str	r3, [r7, #28]

    if (HAL_FLASHEx_Erase(&EraseInitStruct, (uint32_t *)&SectorError) != HAL_OK)
 80025a0:	f107 020c 	add.w	r2, r7, #12
 80025a4:	f107 0310 	add.w	r3, r7, #16
 80025a8:	4611      	mov	r1, r2
 80025aa:	4618      	mov	r0, r3
 80025ac:	f001 fed0 	bl	8004350 <HAL_FLASHEx_Erase>
 80025b0:	4603      	mov	r3, r0
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d001      	beq.n	80025ba <usrEraseFlashMemorySector+0x92>
    {
        return FAILURE;
 80025b6:	2300      	movs	r3, #0
 80025b8:	e01a      	b.n	80025f0 <usrEraseFlashMemorySector+0xc8>
    }

    __HAL_FLASH_DATA_CACHE_DISABLE();
 80025ba:	4b14      	ldr	r3, [pc, #80]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	4a13      	ldr	r2, [pc, #76]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025c0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80025c4:	6013      	str	r3, [r2, #0]
    __HAL_FLASH_DATA_CACHE_RESET();
 80025c6:	4b11      	ldr	r3, [pc, #68]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	4a10      	ldr	r2, [pc, #64]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025cc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80025d0:	6013      	str	r3, [r2, #0]
 80025d2:	4b0e      	ldr	r3, [pc, #56]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	4a0d      	ldr	r2, [pc, #52]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80025dc:	6013      	str	r3, [r2, #0]
    __HAL_FLASH_DATA_CACHE_ENABLE();
 80025de:	4b0b      	ldr	r3, [pc, #44]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	4a0a      	ldr	r2, [pc, #40]	@ (800260c <usrEraseFlashMemorySector+0xe4>)
 80025e4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80025e8:	6013      	str	r3, [r2, #0]

    HAL_FLASH_Lock();
 80025ea:	f001 fd71 	bl	80040d0 <HAL_FLASH_Lock>

	return SUCCESS;
 80025ee:	2301      	movs	r3, #1

}	// End usrEraseFlashMemorySector
 80025f0:	4618      	mov	r0, r3
 80025f2:	3728      	adds	r7, #40	@ 0x28
 80025f4:	46bd      	mov	sp, r7
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	0805ffff 	.word	0x0805ffff
 80025fc:	0807ffff 	.word	0x0807ffff
 8002600:	0809ffff 	.word	0x0809ffff
 8002604:	080bffff 	.word	0x080bffff
 8002608:	080dffff 	.word	0x080dffff
 800260c:	40023c00 	.word	0x40023c00

08002610 <awe_pltGPIOSetPinDir>:
//-----------------------------------------------------------------------------
// METHOD:  awe_pltGPIOSetPinDir
// PURPOSE: Set GPIO pin direction
//-----------------------------------------------------------------------------
void awe_pltGPIOSetPinDir(UINT32 nPinNo, UINT32 nPinDir)
{
 8002610:	b580      	push	{r7, lr}
 8002612:	b088      	sub	sp, #32
 8002614:	af00      	add	r7, sp, #0
 8002616:	6078      	str	r0, [r7, #4]
 8002618:	6039      	str	r1, [r7, #0]
    GPIO_InitTypeDef GPIO_InitStruct;
    UINT32 nPinNdx;

    if (nPinNo < 1 || nPinNo > MAX_PINS)
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	2b00      	cmp	r3, #0
 800261e:	d043      	beq.n	80026a8 <awe_pltGPIOSetPinDir+0x98>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	2b35      	cmp	r3, #53	@ 0x35
 8002624:	d840      	bhi.n	80026a8 <awe_pltGPIOSetPinDir+0x98>
    {
        return;
    }

    // If user wants control of LED4 relinquish board alive LED toggle
    if (nPinNo == 3 && nPinDir != GPIO_DIR_INPUT)
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	2b03      	cmp	r3, #3
 800262a:	d105      	bne.n	8002638 <awe_pltGPIOSetPinDir+0x28>
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d002      	beq.n	8002638 <awe_pltGPIOSetPinDir+0x28>
    {
        g_bBlinkLED4ForBoardAlive = FALSE;
 8002632:	4b1f      	ldr	r3, [pc, #124]	@ (80026b0 <awe_pltGPIOSetPinDir+0xa0>)
 8002634:	2200      	movs	r2, #0
 8002636:	601a      	str	r2, [r3, #0]
    }

    nPinNdx = nPinNo - 1;
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	3b01      	subs	r3, #1
 800263c:	61fb      	str	r3, [r7, #28]

    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800263e:	2302      	movs	r3, #2
 8002640:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002642:	2300      	movs	r3, #0
 8002644:	613b      	str	r3, [r7, #16]

    if (nPinDir == GPIO_DIR_INPUT)
 8002646:	683b      	ldr	r3, [r7, #0]
 8002648:	2b00      	cmp	r3, #0
 800264a:	d114      	bne.n	8002676 <awe_pltGPIOSetPinDir+0x66>
    {
        GPIO_InitStruct.Pin = InputPinMap[nPinNdx].GPIO_Pin;
 800264c:	4a19      	ldr	r2, [pc, #100]	@ (80026b4 <awe_pltGPIOSetPinDir+0xa4>)
 800264e:	69fb      	ldr	r3, [r7, #28]
 8002650:	011b      	lsls	r3, r3, #4
 8002652:	4413      	add	r3, r2
 8002654:	3304      	adds	r3, #4
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	60bb      	str	r3, [r7, #8]
        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800265a:	2300      	movs	r3, #0
 800265c:	60fb      	str	r3, [r7, #12]

        // Setup the GPIO pin
        HAL_GPIO_Init(InputPinMap[nPinNdx].GPIOx, &GPIO_InitStruct);
 800265e:	4a15      	ldr	r2, [pc, #84]	@ (80026b4 <awe_pltGPIOSetPinDir+0xa4>)
 8002660:	69fb      	ldr	r3, [r7, #28]
 8002662:	011b      	lsls	r3, r3, #4
 8002664:	4413      	add	r3, r2
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f107 0208 	add.w	r2, r7, #8
 800266c:	4611      	mov	r1, r2
 800266e:	4618      	mov	r0, r3
 8002670:	f001 ff90 	bl	8004594 <HAL_GPIO_Init>
 8002674:	e019      	b.n	80026aa <awe_pltGPIOSetPinDir+0x9a>
    }
    else
    {
        GPIO_InitStruct.Pin = OutputPinMap[nPinNdx].GPIO_Pin;
 8002676:	4a10      	ldr	r2, [pc, #64]	@ (80026b8 <awe_pltGPIOSetPinDir+0xa8>)
 8002678:	69fb      	ldr	r3, [r7, #28]
 800267a:	011b      	lsls	r3, r3, #4
 800267c:	4413      	add	r3, r2
 800267e:	3304      	adds	r3, #4
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	60bb      	str	r3, [r7, #8]
        GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002684:	2301      	movs	r3, #1
 8002686:	60fb      	str	r3, [r7, #12]

        // Setup the GPIO pin
        HAL_GPIO_Init(OutputPinMap[nPinNdx].GPIOx, &GPIO_InitStruct);
 8002688:	4a0b      	ldr	r2, [pc, #44]	@ (80026b8 <awe_pltGPIOSetPinDir+0xa8>)
 800268a:	69fb      	ldr	r3, [r7, #28]
 800268c:	011b      	lsls	r3, r3, #4
 800268e:	4413      	add	r3, r2
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f107 0208 	add.w	r2, r7, #8
 8002696:	4611      	mov	r1, r2
 8002698:	4618      	mov	r0, r3
 800269a:	f001 ff7b 	bl	8004594 <HAL_GPIO_Init>

        // Initialize output pin to 0
        awe_pltGPIOSetPin(nPinNo, 0);
 800269e:	2100      	movs	r1, #0
 80026a0:	6878      	ldr	r0, [r7, #4]
 80026a2:	f000 f80b 	bl	80026bc <awe_pltGPIOSetPin>
 80026a6:	e000      	b.n	80026aa <awe_pltGPIOSetPinDir+0x9a>
        return;
 80026a8:	bf00      	nop
    }

}   // End awe_pltGPIOSetPinDir
 80026aa:	3720      	adds	r7, #32
 80026ac:	46bd      	mov	sp, r7
 80026ae:	bd80      	pop	{r7, pc}
 80026b0:	200000d8 	.word	0x200000d8
 80026b4:	200000e8 	.word	0x200000e8
 80026b8:	20000438 	.word	0x20000438

080026bc <awe_pltGPIOSetPin>:
//-----------------------------------------------------------------------------
// METHOD:  awe_pltGPIOSetPin
// PURPOSE: Set GBPIO pin value
//-----------------------------------------------------------------------------
void awe_pltGPIOSetPin(UINT32 nPinNo, UINT32 nValue)
{
 80026bc:	b580      	push	{r7, lr}
 80026be:	b084      	sub	sp, #16
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
 80026c4:	6039      	str	r1, [r7, #0]
    UINT32 nPinNdx;

    if (nPinNo < 1 || nPinNo > MAX_PINS)
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d02a      	beq.n	8002722 <awe_pltGPIOSetPin+0x66>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	2b35      	cmp	r3, #53	@ 0x35
 80026d0:	d827      	bhi.n	8002722 <awe_pltGPIOSetPin+0x66>
    {
        return;
    }

    nPinNdx = nPinNo - 1;
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	3b01      	subs	r3, #1
 80026d6:	60fb      	str	r3, [r7, #12]

    if (nValue > 0)
 80026d8:	683b      	ldr	r3, [r7, #0]
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d010      	beq.n	8002700 <awe_pltGPIOSetPin+0x44>
    {
        HAL_GPIO_WritePin(OutputPinMap[nPinNdx].GPIOx, OutputPinMap[nPinNdx].GPIO_Pin, GPIO_PIN_SET);
 80026de:	4a13      	ldr	r2, [pc, #76]	@ (800272c <awe_pltGPIOSetPin+0x70>)
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	011b      	lsls	r3, r3, #4
 80026e4:	4413      	add	r3, r2
 80026e6:	6818      	ldr	r0, [r3, #0]
 80026e8:	4a10      	ldr	r2, [pc, #64]	@ (800272c <awe_pltGPIOSetPin+0x70>)
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	011b      	lsls	r3, r3, #4
 80026ee:	4413      	add	r3, r2
 80026f0:	3304      	adds	r3, #4
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	b29b      	uxth	r3, r3
 80026f6:	2201      	movs	r2, #1
 80026f8:	4619      	mov	r1, r3
 80026fa:	f002 f8ff 	bl	80048fc <HAL_GPIO_WritePin>
 80026fe:	e011      	b.n	8002724 <awe_pltGPIOSetPin+0x68>
     }
    else
    {
        HAL_GPIO_WritePin(OutputPinMap[nPinNdx].GPIOx, OutputPinMap[nPinNdx].GPIO_Pin, GPIO_PIN_RESET);
 8002700:	4a0a      	ldr	r2, [pc, #40]	@ (800272c <awe_pltGPIOSetPin+0x70>)
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	011b      	lsls	r3, r3, #4
 8002706:	4413      	add	r3, r2
 8002708:	6818      	ldr	r0, [r3, #0]
 800270a:	4a08      	ldr	r2, [pc, #32]	@ (800272c <awe_pltGPIOSetPin+0x70>)
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	011b      	lsls	r3, r3, #4
 8002710:	4413      	add	r3, r2
 8002712:	3304      	adds	r3, #4
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	b29b      	uxth	r3, r3
 8002718:	2200      	movs	r2, #0
 800271a:	4619      	mov	r1, r3
 800271c:	f002 f8ee 	bl	80048fc <HAL_GPIO_WritePin>
 8002720:	e000      	b.n	8002724 <awe_pltGPIOSetPin+0x68>
        return;
 8002722:	bf00      	nop
    }

}   // End awe_pltGPIOSetPin
 8002724:	3710      	adds	r7, #16
 8002726:	46bd      	mov	sp, r7
 8002728:	bd80      	pop	{r7, pc}
 800272a:	bf00      	nop
 800272c:	20000438 	.word	0x20000438

08002730 <awe_pltGPIOGetPin>:
//-----------------------------------------------------------------------------
// METHOD:  awe_pltGPIOGetPin
// PURPOSE: Get GPIO pin value
//-----------------------------------------------------------------------------
void awe_pltGPIOGetPin(UINT32 nPinNo, UINT32 * nValue)
{
 8002730:	b580      	push	{r7, lr}
 8002732:	b084      	sub	sp, #16
 8002734:	af00      	add	r7, sp, #0
 8002736:	6078      	str	r0, [r7, #4]
 8002738:	6039      	str	r1, [r7, #0]
    UINT32 nPinNdx;

    if (nPinNo < 1 || nPinNo > MAX_PINS)
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	2b00      	cmp	r3, #0
 800273e:	d01a      	beq.n	8002776 <awe_pltGPIOGetPin+0x46>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2b35      	cmp	r3, #53	@ 0x35
 8002744:	d817      	bhi.n	8002776 <awe_pltGPIOGetPin+0x46>
    {
        return;
    }

    nPinNdx = nPinNo - 1;
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	3b01      	subs	r3, #1
 800274a:	60fb      	str	r3, [r7, #12]

    *nValue = HAL_GPIO_ReadPin(InputPinMap[nPinNdx].GPIOx, InputPinMap[nPinNdx].GPIO_Pin);
 800274c:	4a0c      	ldr	r2, [pc, #48]	@ (8002780 <awe_pltGPIOGetPin+0x50>)
 800274e:	68fb      	ldr	r3, [r7, #12]
 8002750:	011b      	lsls	r3, r3, #4
 8002752:	4413      	add	r3, r2
 8002754:	681a      	ldr	r2, [r3, #0]
 8002756:	490a      	ldr	r1, [pc, #40]	@ (8002780 <awe_pltGPIOGetPin+0x50>)
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	011b      	lsls	r3, r3, #4
 800275c:	440b      	add	r3, r1
 800275e:	3304      	adds	r3, #4
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	b29b      	uxth	r3, r3
 8002764:	4619      	mov	r1, r3
 8002766:	4610      	mov	r0, r2
 8002768:	f002 f8b0 	bl	80048cc <HAL_GPIO_ReadPin>
 800276c:	4603      	mov	r3, r0
 800276e:	461a      	mov	r2, r3
 8002770:	683b      	ldr	r3, [r7, #0]
 8002772:	601a      	str	r2, [r3, #0]
 8002774:	e000      	b.n	8002778 <awe_pltGPIOGetPin+0x48>
        return;
 8002776:	bf00      	nop

}   // End awe_pltGPIOGetPin
 8002778:	3710      	adds	r7, #16
 800277a:	46bd      	mov	sp, r7
 800277c:	bd80      	pop	{r7, pc}
 800277e:	bf00      	nop
 8002780:	200000e8 	.word	0x200000e8

08002784 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	b082      	sub	sp, #8
 8002788:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800278a:	2300      	movs	r3, #0
 800278c:	607b      	str	r3, [r7, #4]
 800278e:	4b10      	ldr	r3, [pc, #64]	@ (80027d0 <HAL_MspInit+0x4c>)
 8002790:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002792:	4a0f      	ldr	r2, [pc, #60]	@ (80027d0 <HAL_MspInit+0x4c>)
 8002794:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002798:	6453      	str	r3, [r2, #68]	@ 0x44
 800279a:	4b0d      	ldr	r3, [pc, #52]	@ (80027d0 <HAL_MspInit+0x4c>)
 800279c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800279e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80027a2:	607b      	str	r3, [r7, #4]
 80027a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80027a6:	2300      	movs	r3, #0
 80027a8:	603b      	str	r3, [r7, #0]
 80027aa:	4b09      	ldr	r3, [pc, #36]	@ (80027d0 <HAL_MspInit+0x4c>)
 80027ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027ae:	4a08      	ldr	r2, [pc, #32]	@ (80027d0 <HAL_MspInit+0x4c>)
 80027b0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80027b4:	6413      	str	r3, [r2, #64]	@ 0x40
 80027b6:	4b06      	ldr	r3, [pc, #24]	@ (80027d0 <HAL_MspInit+0x4c>)
 80027b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80027be:	603b      	str	r3, [r7, #0]
 80027c0:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 80027c2:	2007      	movs	r0, #7
 80027c4:	f001 f85c 	bl	8003880 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80027c8:	bf00      	nop
 80027ca:	3708      	adds	r7, #8
 80027cc:	46bd      	mov	sp, r7
 80027ce:	bd80      	pop	{r7, pc}
 80027d0:	40023800 	.word	0x40023800

080027d4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80027d4:	b480      	push	{r7}
 80027d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80027d8:	bf00      	nop
 80027da:	e7fd      	b.n	80027d8 <NMI_Handler+0x4>

080027dc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80027dc:	b480      	push	{r7}
 80027de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80027e0:	bf00      	nop
 80027e2:	e7fd      	b.n	80027e0 <HardFault_Handler+0x4>

080027e4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80027e4:	b480      	push	{r7}
 80027e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80027e8:	bf00      	nop
 80027ea:	e7fd      	b.n	80027e8 <MemManage_Handler+0x4>

080027ec <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80027ec:	b480      	push	{r7}
 80027ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80027f0:	bf00      	nop
 80027f2:	e7fd      	b.n	80027f0 <BusFault_Handler+0x4>

080027f4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80027f4:	b480      	push	{r7}
 80027f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80027f8:	bf00      	nop
 80027fa:	e7fd      	b.n	80027f8 <UsageFault_Handler+0x4>

080027fc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80027fc:	b480      	push	{r7}
 80027fe:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002800:	bf00      	nop
 8002802:	46bd      	mov	sp, r7
 8002804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002808:	4770      	bx	lr

0800280a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800280a:	b480      	push	{r7}
 800280c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800280e:	bf00      	nop
 8002810:	46bd      	mov	sp, r7
 8002812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002816:	4770      	bx	lr

08002818 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002818:	b480      	push	{r7}
 800281a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800281c:	bf00      	nop
 800281e:	46bd      	mov	sp, r7
 8002820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002824:	4770      	bx	lr

08002826 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002826:	b580      	push	{r7, lr}
 8002828:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800282a:	f000 f9cf 	bl	8002bcc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800282e:	bf00      	nop
 8002830:	bd80      	pop	{r7, pc}
	...

08002834 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8002834:	b580      	push	{r7, lr}
 8002836:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi3_tx);
 8002838:	4802      	ldr	r0, [pc, #8]	@ (8002844 <DMA1_Stream5_IRQHandler+0x10>)
 800283a:	f001 f969 	bl	8003b10 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 800283e:	bf00      	nop
 8002840:	bd80      	pop	{r7, pc}
 8002842:	bf00      	nop
 8002844:	20000ca8 	.word	0x20000ca8

08002848 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8002848:	b580      	push	{r7, lr}
 800284a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 800284c:	4802      	ldr	r0, [pc, #8]	@ (8002858 <DMA2_Stream0_IRQHandler+0x10>)
 800284e:	f001 f95f 	bl	8003b10 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8002852:	bf00      	nop
 8002854:	bd80      	pop	{r7, pc}
 8002856:	bf00      	nop
 8002858:	20000bac 	.word	0x20000bac

0800285c <_kill>:
{
  return 1;
}

int _kill(int pid, int sig)
{
 800285c:	b580      	push	{r7, lr}
 800285e:	b082      	sub	sp, #8
 8002860:	af00      	add	r7, sp, #0
 8002862:	6078      	str	r0, [r7, #4]
 8002864:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002866:	f02b f9c3 	bl	802dbf0 <__errno>
 800286a:	4603      	mov	r3, r0
 800286c:	2216      	movs	r2, #22
 800286e:	601a      	str	r2, [r3, #0]
  return -1;
 8002870:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002874:	4618      	mov	r0, r3
 8002876:	3708      	adds	r7, #8
 8002878:	46bd      	mov	sp, r7
 800287a:	bd80      	pop	{r7, pc}

0800287c <_exit>:

void _exit (int status)
{
 800287c:	b580      	push	{r7, lr}
 800287e:	b082      	sub	sp, #8
 8002880:	af00      	add	r7, sp, #0
 8002882:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002884:	f04f 31ff 	mov.w	r1, #4294967295
 8002888:	6878      	ldr	r0, [r7, #4]
 800288a:	f7ff ffe7 	bl	800285c <_kill>
  while (1) {}    /* Make sure we hang here */
 800288e:	bf00      	nop
 8002890:	e7fd      	b.n	800288e <_exit+0x12>

08002892 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002892:	b580      	push	{r7, lr}
 8002894:	b086      	sub	sp, #24
 8002896:	af00      	add	r7, sp, #0
 8002898:	60f8      	str	r0, [r7, #12]
 800289a:	60b9      	str	r1, [r7, #8]
 800289c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800289e:	2300      	movs	r3, #0
 80028a0:	617b      	str	r3, [r7, #20]
 80028a2:	e00a      	b.n	80028ba <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80028a4:	f3af 8000 	nop.w
 80028a8:	4601      	mov	r1, r0
 80028aa:	68bb      	ldr	r3, [r7, #8]
 80028ac:	1c5a      	adds	r2, r3, #1
 80028ae:	60ba      	str	r2, [r7, #8]
 80028b0:	b2ca      	uxtb	r2, r1
 80028b2:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028b4:	697b      	ldr	r3, [r7, #20]
 80028b6:	3301      	adds	r3, #1
 80028b8:	617b      	str	r3, [r7, #20]
 80028ba:	697a      	ldr	r2, [r7, #20]
 80028bc:	687b      	ldr	r3, [r7, #4]
 80028be:	429a      	cmp	r2, r3
 80028c0:	dbf0      	blt.n	80028a4 <_read+0x12>
  }

  return len;
 80028c2:	687b      	ldr	r3, [r7, #4]
}
 80028c4:	4618      	mov	r0, r3
 80028c6:	3718      	adds	r7, #24
 80028c8:	46bd      	mov	sp, r7
 80028ca:	bd80      	pop	{r7, pc}

080028cc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80028cc:	b580      	push	{r7, lr}
 80028ce:	b086      	sub	sp, #24
 80028d0:	af00      	add	r7, sp, #0
 80028d2:	60f8      	str	r0, [r7, #12]
 80028d4:	60b9      	str	r1, [r7, #8]
 80028d6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028d8:	2300      	movs	r3, #0
 80028da:	617b      	str	r3, [r7, #20]
 80028dc:	e009      	b.n	80028f2 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80028de:	68bb      	ldr	r3, [r7, #8]
 80028e0:	1c5a      	adds	r2, r3, #1
 80028e2:	60ba      	str	r2, [r7, #8]
 80028e4:	781b      	ldrb	r3, [r3, #0]
 80028e6:	4618      	mov	r0, r3
 80028e8:	f7ff fcb6 	bl	8002258 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ec:	697b      	ldr	r3, [r7, #20]
 80028ee:	3301      	adds	r3, #1
 80028f0:	617b      	str	r3, [r7, #20]
 80028f2:	697a      	ldr	r2, [r7, #20]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	429a      	cmp	r2, r3
 80028f8:	dbf1      	blt.n	80028de <_write+0x12>
  }
  return len;
 80028fa:	687b      	ldr	r3, [r7, #4]
}
 80028fc:	4618      	mov	r0, r3
 80028fe:	3718      	adds	r7, #24
 8002900:	46bd      	mov	sp, r7
 8002902:	bd80      	pop	{r7, pc}

08002904 <_close>:

int _close(int file)
{
 8002904:	b480      	push	{r7}
 8002906:	b083      	sub	sp, #12
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800290c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002910:	4618      	mov	r0, r3
 8002912:	370c      	adds	r7, #12
 8002914:	46bd      	mov	sp, r7
 8002916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291a:	4770      	bx	lr

0800291c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800291c:	b480      	push	{r7}
 800291e:	b083      	sub	sp, #12
 8002920:	af00      	add	r7, sp, #0
 8002922:	6078      	str	r0, [r7, #4]
 8002924:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002926:	683b      	ldr	r3, [r7, #0]
 8002928:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800292c:	605a      	str	r2, [r3, #4]
  return 0;
 800292e:	2300      	movs	r3, #0
}
 8002930:	4618      	mov	r0, r3
 8002932:	370c      	adds	r7, #12
 8002934:	46bd      	mov	sp, r7
 8002936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800293a:	4770      	bx	lr

0800293c <_isatty>:

int _isatty(int file)
{
 800293c:	b480      	push	{r7}
 800293e:	b083      	sub	sp, #12
 8002940:	af00      	add	r7, sp, #0
 8002942:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002944:	2301      	movs	r3, #1
}
 8002946:	4618      	mov	r0, r3
 8002948:	370c      	adds	r7, #12
 800294a:	46bd      	mov	sp, r7
 800294c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002950:	4770      	bx	lr

08002952 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002952:	b480      	push	{r7}
 8002954:	b085      	sub	sp, #20
 8002956:	af00      	add	r7, sp, #0
 8002958:	60f8      	str	r0, [r7, #12]
 800295a:	60b9      	str	r1, [r7, #8]
 800295c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800295e:	2300      	movs	r3, #0
}
 8002960:	4618      	mov	r0, r3
 8002962:	3714      	adds	r7, #20
 8002964:	46bd      	mov	sp, r7
 8002966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296a:	4770      	bx	lr

0800296c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800296c:	b580      	push	{r7, lr}
 800296e:	b086      	sub	sp, #24
 8002970:	af00      	add	r7, sp, #0
 8002972:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002974:	4a14      	ldr	r2, [pc, #80]	@ (80029c8 <_sbrk+0x5c>)
 8002976:	4b15      	ldr	r3, [pc, #84]	@ (80029cc <_sbrk+0x60>)
 8002978:	1ad3      	subs	r3, r2, r3
 800297a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800297c:	697b      	ldr	r3, [r7, #20]
 800297e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002980:	4b13      	ldr	r3, [pc, #76]	@ (80029d0 <_sbrk+0x64>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	2b00      	cmp	r3, #0
 8002986:	d102      	bne.n	800298e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002988:	4b11      	ldr	r3, [pc, #68]	@ (80029d0 <_sbrk+0x64>)
 800298a:	4a12      	ldr	r2, [pc, #72]	@ (80029d4 <_sbrk+0x68>)
 800298c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800298e:	4b10      	ldr	r3, [pc, #64]	@ (80029d0 <_sbrk+0x64>)
 8002990:	681a      	ldr	r2, [r3, #0]
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	4413      	add	r3, r2
 8002996:	693a      	ldr	r2, [r7, #16]
 8002998:	429a      	cmp	r2, r3
 800299a:	d207      	bcs.n	80029ac <_sbrk+0x40>
  {
    errno = ENOMEM;
 800299c:	f02b f928 	bl	802dbf0 <__errno>
 80029a0:	4603      	mov	r3, r0
 80029a2:	220c      	movs	r2, #12
 80029a4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80029a6:	f04f 33ff 	mov.w	r3, #4294967295
 80029aa:	e009      	b.n	80029c0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80029ac:	4b08      	ldr	r3, [pc, #32]	@ (80029d0 <_sbrk+0x64>)
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80029b2:	4b07      	ldr	r3, [pc, #28]	@ (80029d0 <_sbrk+0x64>)
 80029b4:	681a      	ldr	r2, [r3, #0]
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	4413      	add	r3, r2
 80029ba:	4a05      	ldr	r2, [pc, #20]	@ (80029d0 <_sbrk+0x64>)
 80029bc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80029be:	68fb      	ldr	r3, [r7, #12]
}
 80029c0:	4618      	mov	r0, r3
 80029c2:	3718      	adds	r7, #24
 80029c4:	46bd      	mov	sp, r7
 80029c6:	bd80      	pop	{r7, pc}
 80029c8:	20020000 	.word	0x20020000
 80029cc:	00000400 	.word	0x00000400
 80029d0:	2001d838 	.word	0x2001d838
 80029d4:	2001f080 	.word	0x2001f080

080029d8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80029d8:	b480      	push	{r7}
 80029da:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80029dc:	4b06      	ldr	r3, [pc, #24]	@ (80029f8 <SystemInit+0x20>)
 80029de:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80029e2:	4a05      	ldr	r2, [pc, #20]	@ (80029f8 <SystemInit+0x20>)
 80029e4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80029e8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80029ec:	bf00      	nop
 80029ee:	46bd      	mov	sp, r7
 80029f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f4:	4770      	bx	lr
 80029f6:	bf00      	nop
 80029f8:	e000ed00 	.word	0xe000ed00

080029fc <MX_TIM2_Init>:

TIM_HandleTypeDef htim2;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 80029fc:	b580      	push	{r7, lr}
 80029fe:	b086      	sub	sp, #24
 8002a00:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002a02:	f107 0308 	add.w	r3, r7, #8
 8002a06:	2200      	movs	r2, #0
 8002a08:	601a      	str	r2, [r3, #0]
 8002a0a:	605a      	str	r2, [r3, #4]
 8002a0c:	609a      	str	r2, [r3, #8]
 8002a0e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002a10:	463b      	mov	r3, r7
 8002a12:	2200      	movs	r2, #0
 8002a14:	601a      	str	r2, [r3, #0]
 8002a16:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002a18:	4b1d      	ldr	r3, [pc, #116]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a1a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002a1e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 4;
 8002a20:	4b1b      	ldr	r3, [pc, #108]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a22:	2204      	movs	r2, #4
 8002a24:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002a26:	4b1a      	ldr	r3, [pc, #104]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a28:	2200      	movs	r2, #0
 8002a2a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 343;
 8002a2c:	4b18      	ldr	r3, [pc, #96]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a2e:	f240 1257 	movw	r2, #343	@ 0x157
 8002a32:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002a34:	4b16      	ldr	r3, [pc, #88]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a36:	2200      	movs	r2, #0
 8002a38:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002a3a:	4b15      	ldr	r3, [pc, #84]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a3c:	2200      	movs	r2, #0
 8002a3e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002a40:	4813      	ldr	r0, [pc, #76]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a42:	f004 fadd 	bl	8007000 <HAL_TIM_Base_Init>
 8002a46:	4603      	mov	r3, r0
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d001      	beq.n	8002a50 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002a4c:	f7ff fc11 	bl	8002272 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002a50:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002a54:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002a56:	f107 0308 	add.w	r3, r7, #8
 8002a5a:	4619      	mov	r1, r3
 8002a5c:	480c      	ldr	r0, [pc, #48]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a5e:	f004 fb87 	bl	8007170 <HAL_TIM_ConfigClockSource>
 8002a62:	4603      	mov	r3, r0
 8002a64:	2b00      	cmp	r3, #0
 8002a66:	d001      	beq.n	8002a6c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002a68:	f7ff fc03 	bl	8002272 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8002a6c:	2320      	movs	r3, #32
 8002a6e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002a70:	2300      	movs	r3, #0
 8002a72:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002a74:	463b      	mov	r3, r7
 8002a76:	4619      	mov	r1, r3
 8002a78:	4805      	ldr	r0, [pc, #20]	@ (8002a90 <MX_TIM2_Init+0x94>)
 8002a7a:	f004 fd87 	bl	800758c <HAL_TIMEx_MasterConfigSynchronization>
 8002a7e:	4603      	mov	r3, r0
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d001      	beq.n	8002a88 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002a84:	f7ff fbf5 	bl	8002272 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002a88:	bf00      	nop
 8002a8a:	3718      	adds	r7, #24
 8002a8c:	46bd      	mov	sp, r7
 8002a8e:	bd80      	pop	{r7, pc}
 8002a90:	2001d83c 	.word	0x2001d83c

08002a94 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002a94:	b480      	push	{r7}
 8002a96:	b085      	sub	sp, #20
 8002a98:	af00      	add	r7, sp, #0
 8002a9a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002aa4:	d10d      	bne.n	8002ac2 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002aa6:	2300      	movs	r3, #0
 8002aa8:	60fb      	str	r3, [r7, #12]
 8002aaa:	4b09      	ldr	r3, [pc, #36]	@ (8002ad0 <HAL_TIM_Base_MspInit+0x3c>)
 8002aac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aae:	4a08      	ldr	r2, [pc, #32]	@ (8002ad0 <HAL_TIM_Base_MspInit+0x3c>)
 8002ab0:	f043 0301 	orr.w	r3, r3, #1
 8002ab4:	6413      	str	r3, [r2, #64]	@ 0x40
 8002ab6:	4b06      	ldr	r3, [pc, #24]	@ (8002ad0 <HAL_TIM_Base_MspInit+0x3c>)
 8002ab8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aba:	f003 0301 	and.w	r3, r3, #1
 8002abe:	60fb      	str	r3, [r7, #12]
 8002ac0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8002ac2:	bf00      	nop
 8002ac4:	3714      	adds	r7, #20
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002acc:	4770      	bx	lr
 8002ace:	bf00      	nop
 8002ad0:	40023800 	.word	0x40023800

08002ad4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8002ad4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002b0c <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8002ad8:	f7ff ff7e 	bl	80029d8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002adc:	480c      	ldr	r0, [pc, #48]	@ (8002b10 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8002ade:	490d      	ldr	r1, [pc, #52]	@ (8002b14 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8002ae0:	4a0d      	ldr	r2, [pc, #52]	@ (8002b18 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8002ae2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002ae4:	e002      	b.n	8002aec <LoopCopyDataInit>

08002ae6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002ae6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002ae8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002aea:	3304      	adds	r3, #4

08002aec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002aec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002aee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002af0:	d3f9      	bcc.n	8002ae6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002af2:	4a0a      	ldr	r2, [pc, #40]	@ (8002b1c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8002af4:	4c0a      	ldr	r4, [pc, #40]	@ (8002b20 <LoopFillZerobss+0x22>)
  movs r3, #0
 8002af6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002af8:	e001      	b.n	8002afe <LoopFillZerobss>

08002afa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002afa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002afc:	3204      	adds	r2, #4

08002afe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002afe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002b00:	d3fb      	bcc.n	8002afa <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8002b02:	f02b f87b 	bl	802dbfc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002b06:	f7ff f843 	bl	8001b90 <main>
  bx  lr    
 8002b0a:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8002b0c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002b10:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002b14:	20000aa0 	.word	0x20000aa0
  ldr r2, =_sidata
 8002b18:	0803b598 	.word	0x0803b598
  ldr r2, =_sbss
 8002b1c:	20000aa0 	.word	0x20000aa0
  ldr r4, =_ebss
 8002b20:	2001f080 	.word	0x2001f080

08002b24 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002b24:	e7fe      	b.n	8002b24 <ADC_IRQHandler>
	...

08002b28 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002b28:	b580      	push	{r7, lr}
 8002b2a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002b2c:	4b0e      	ldr	r3, [pc, #56]	@ (8002b68 <HAL_Init+0x40>)
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	4a0d      	ldr	r2, [pc, #52]	@ (8002b68 <HAL_Init+0x40>)
 8002b32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002b36:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002b38:	4b0b      	ldr	r3, [pc, #44]	@ (8002b68 <HAL_Init+0x40>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	4a0a      	ldr	r2, [pc, #40]	@ (8002b68 <HAL_Init+0x40>)
 8002b3e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002b42:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b44:	4b08      	ldr	r3, [pc, #32]	@ (8002b68 <HAL_Init+0x40>)
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	4a07      	ldr	r2, [pc, #28]	@ (8002b68 <HAL_Init+0x40>)
 8002b4a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002b4e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002b50:	2003      	movs	r0, #3
 8002b52:	f000 fe95 	bl	8003880 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002b56:	2000      	movs	r0, #0
 8002b58:	f000 f808 	bl	8002b6c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002b5c:	f7ff fe12 	bl	8002784 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002b60:	2300      	movs	r3, #0
}
 8002b62:	4618      	mov	r0, r3
 8002b64:	bd80      	pop	{r7, pc}
 8002b66:	bf00      	nop
 8002b68:	40023c00 	.word	0x40023c00

08002b6c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b6c:	b580      	push	{r7, lr}
 8002b6e:	b082      	sub	sp, #8
 8002b70:	af00      	add	r7, sp, #0
 8002b72:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002b74:	4b12      	ldr	r3, [pc, #72]	@ (8002bc0 <HAL_InitTick+0x54>)
 8002b76:	681a      	ldr	r2, [r3, #0]
 8002b78:	4b12      	ldr	r3, [pc, #72]	@ (8002bc4 <HAL_InitTick+0x58>)
 8002b7a:	781b      	ldrb	r3, [r3, #0]
 8002b7c:	4619      	mov	r1, r3
 8002b7e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002b82:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b86:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	f000 fead 	bl	80038ea <HAL_SYSTICK_Config>
 8002b90:	4603      	mov	r3, r0
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d001      	beq.n	8002b9a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002b96:	2301      	movs	r3, #1
 8002b98:	e00e      	b.n	8002bb8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2b0f      	cmp	r3, #15
 8002b9e:	d80a      	bhi.n	8002bb6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002ba0:	2200      	movs	r2, #0
 8002ba2:	6879      	ldr	r1, [r7, #4]
 8002ba4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ba8:	f000 fe75 	bl	8003896 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002bac:	4a06      	ldr	r2, [pc, #24]	@ (8002bc8 <HAL_InitTick+0x5c>)
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	e000      	b.n	8002bb8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002bb6:	2301      	movs	r3, #1
}
 8002bb8:	4618      	mov	r0, r3
 8002bba:	3708      	adds	r7, #8
 8002bbc:	46bd      	mov	sp, r7
 8002bbe:	bd80      	pop	{r7, pc}
 8002bc0:	20000a18 	.word	0x20000a18
 8002bc4:	20000a20 	.word	0x20000a20
 8002bc8:	20000a1c 	.word	0x20000a1c

08002bcc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002bcc:	b480      	push	{r7}
 8002bce:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002bd0:	4b06      	ldr	r3, [pc, #24]	@ (8002bec <HAL_IncTick+0x20>)
 8002bd2:	781b      	ldrb	r3, [r3, #0]
 8002bd4:	461a      	mov	r2, r3
 8002bd6:	4b06      	ldr	r3, [pc, #24]	@ (8002bf0 <HAL_IncTick+0x24>)
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	4413      	add	r3, r2
 8002bdc:	4a04      	ldr	r2, [pc, #16]	@ (8002bf0 <HAL_IncTick+0x24>)
 8002bde:	6013      	str	r3, [r2, #0]
}
 8002be0:	bf00      	nop
 8002be2:	46bd      	mov	sp, r7
 8002be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be8:	4770      	bx	lr
 8002bea:	bf00      	nop
 8002bec:	20000a20 	.word	0x20000a20
 8002bf0:	2001d884 	.word	0x2001d884

08002bf4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002bf4:	b480      	push	{r7}
 8002bf6:	af00      	add	r7, sp, #0
  return uwTick;
 8002bf8:	4b03      	ldr	r3, [pc, #12]	@ (8002c08 <HAL_GetTick+0x14>)
 8002bfa:	681b      	ldr	r3, [r3, #0]
}
 8002bfc:	4618      	mov	r0, r3
 8002bfe:	46bd      	mov	sp, r7
 8002c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c04:	4770      	bx	lr
 8002c06:	bf00      	nop
 8002c08:	2001d884 	.word	0x2001d884

08002c0c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b084      	sub	sp, #16
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002c14:	2300      	movs	r3, #0
 8002c16:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d101      	bne.n	8002c22 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002c1e:	2301      	movs	r3, #1
 8002c20:	e033      	b.n	8002c8a <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d109      	bne.n	8002c3e <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002c2a:	6878      	ldr	r0, [r7, #4]
 8002c2c:	f7fe fc80 	bl	8001530 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	2200      	movs	r2, #0
 8002c34:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	2200      	movs	r2, #0
 8002c3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c42:	f003 0310 	and.w	r3, r3, #16
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d118      	bne.n	8002c7c <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c4e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002c52:	f023 0302 	bic.w	r3, r3, #2
 8002c56:	f043 0202 	orr.w	r2, r3, #2
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002c5e:	6878      	ldr	r0, [r7, #4]
 8002c60:	f000 fbc0 	bl	80033e4 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	2200      	movs	r2, #0
 8002c68:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c6e:	f023 0303 	bic.w	r3, r3, #3
 8002c72:	f043 0201 	orr.w	r2, r3, #1
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	641a      	str	r2, [r3, #64]	@ 0x40
 8002c7a:	e001      	b.n	8002c80 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002c7c:	2301      	movs	r3, #1
 8002c7e:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	2200      	movs	r2, #0
 8002c84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002c88:	7bfb      	ldrb	r3, [r7, #15]
}
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	3710      	adds	r7, #16
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	bd80      	pop	{r7, pc}
	...

08002c94 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
{
 8002c94:	b480      	push	{r7}
 8002c96:	b085      	sub	sp, #20
 8002c98:	af00      	add	r7, sp, #0
 8002c9a:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8002c9c:	2300      	movs	r3, #0
 8002c9e:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ca6:	2b01      	cmp	r3, #1
 8002ca8:	d101      	bne.n	8002cae <HAL_ADC_Start+0x1a>
 8002caa:	2302      	movs	r3, #2
 8002cac:	e0b2      	b.n	8002e14 <HAL_ADC_Start+0x180>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	2201      	movs	r2, #1
 8002cb2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	689b      	ldr	r3, [r3, #8]
 8002cbc:	f003 0301 	and.w	r3, r3, #1
 8002cc0:	2b01      	cmp	r3, #1
 8002cc2:	d018      	beq.n	8002cf6 <HAL_ADC_Start+0x62>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	689a      	ldr	r2, [r3, #8]
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	f042 0201 	orr.w	r2, r2, #1
 8002cd2:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002cd4:	4b52      	ldr	r3, [pc, #328]	@ (8002e20 <HAL_ADC_Start+0x18c>)
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	4a52      	ldr	r2, [pc, #328]	@ (8002e24 <HAL_ADC_Start+0x190>)
 8002cda:	fba2 2303 	umull	r2, r3, r2, r3
 8002cde:	0c9a      	lsrs	r2, r3, #18
 8002ce0:	4613      	mov	r3, r2
 8002ce2:	005b      	lsls	r3, r3, #1
 8002ce4:	4413      	add	r3, r2
 8002ce6:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 8002ce8:	e002      	b.n	8002cf0 <HAL_ADC_Start+0x5c>
    {
      counter--;
 8002cea:	68bb      	ldr	r3, [r7, #8]
 8002cec:	3b01      	subs	r3, #1
 8002cee:	60bb      	str	r3, [r7, #8]
    while (counter != 0U)
 8002cf0:	68bb      	ldr	r3, [r7, #8]
 8002cf2:	2b00      	cmp	r3, #0
 8002cf4:	d1f9      	bne.n	8002cea <HAL_ADC_Start+0x56>
    }
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	689b      	ldr	r3, [r3, #8]
 8002cfc:	f003 0301 	and.w	r3, r3, #1
 8002d00:	2b01      	cmp	r3, #1
 8002d02:	d17a      	bne.n	8002dfa <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d08:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002d0c:	f023 0301 	bic.w	r3, r3, #1
 8002d10:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	685b      	ldr	r3, [r3, #4]
 8002d1e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	d007      	beq.n	8002d36 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d2a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d2e:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d3a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002d3e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002d42:	d106      	bne.n	8002d52 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d48:	f023 0206 	bic.w	r2, r3, #6
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d50:	e002      	b.n	8002d58 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	2200      	movs	r2, #0
 8002d56:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002d60:	4b31      	ldr	r3, [pc, #196]	@ (8002e28 <HAL_ADC_Start+0x194>)
 8002d62:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002d6c:	601a      	str	r2, [r3, #0]

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	685b      	ldr	r3, [r3, #4]
 8002d72:	f003 031f 	and.w	r3, r3, #31
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d12a      	bne.n	8002dd0 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	4a2b      	ldr	r2, [pc, #172]	@ (8002e2c <HAL_ADC_Start+0x198>)
 8002d80:	4293      	cmp	r3, r2
 8002d82:	d015      	beq.n	8002db0 <HAL_ADC_Start+0x11c>
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	4a29      	ldr	r2, [pc, #164]	@ (8002e30 <HAL_ADC_Start+0x19c>)
 8002d8a:	4293      	cmp	r3, r2
 8002d8c:	d105      	bne.n	8002d9a <HAL_ADC_Start+0x106>
 8002d8e:	4b26      	ldr	r3, [pc, #152]	@ (8002e28 <HAL_ADC_Start+0x194>)
 8002d90:	685b      	ldr	r3, [r3, #4]
 8002d92:	f003 031f 	and.w	r3, r3, #31
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d00a      	beq.n	8002db0 <HAL_ADC_Start+0x11c>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	4a25      	ldr	r2, [pc, #148]	@ (8002e34 <HAL_ADC_Start+0x1a0>)
 8002da0:	4293      	cmp	r3, r2
 8002da2:	d136      	bne.n	8002e12 <HAL_ADC_Start+0x17e>
 8002da4:	4b20      	ldr	r3, [pc, #128]	@ (8002e28 <HAL_ADC_Start+0x194>)
 8002da6:	685b      	ldr	r3, [r3, #4]
 8002da8:	f003 0310 	and.w	r3, r3, #16
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	d130      	bne.n	8002e12 <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	689b      	ldr	r3, [r3, #8]
 8002db6:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d129      	bne.n	8002e12 <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	689a      	ldr	r2, [r3, #8]
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002dcc:	609a      	str	r2, [r3, #8]
 8002dce:	e020      	b.n	8002e12 <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4a15      	ldr	r2, [pc, #84]	@ (8002e2c <HAL_ADC_Start+0x198>)
 8002dd6:	4293      	cmp	r3, r2
 8002dd8:	d11b      	bne.n	8002e12 <HAL_ADC_Start+0x17e>
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	689b      	ldr	r3, [r3, #8]
 8002de0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d114      	bne.n	8002e12 <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	689a      	ldr	r2, [r3, #8]
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002df6:	609a      	str	r2, [r3, #8]
 8002df8:	e00b      	b.n	8002e12 <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dfe:	f043 0210 	orr.w	r2, r3, #16
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e0a:	f043 0201 	orr.w	r2, r3, #1
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002e12:	2300      	movs	r3, #0
}
 8002e14:	4618      	mov	r0, r3
 8002e16:	3714      	adds	r7, #20
 8002e18:	46bd      	mov	sp, r7
 8002e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e1e:	4770      	bx	lr
 8002e20:	20000a18 	.word	0x20000a18
 8002e24:	431bde83 	.word	0x431bde83
 8002e28:	40012300 	.word	0x40012300
 8002e2c:	40012000 	.word	0x40012000
 8002e30:	40012100 	.word	0x40012100
 8002e34:	40012200 	.word	0x40012200

08002e38 <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
{
 8002e38:	b580      	push	{r7, lr}
 8002e3a:	b084      	sub	sp, #16
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	6078      	str	r0, [r7, #4]
 8002e40:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8002e42:	2300      	movs	r3, #0
 8002e44:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	689b      	ldr	r3, [r3, #8]
 8002e4c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e50:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002e54:	d113      	bne.n	8002e7e <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	689b      	ldr	r3, [r3, #8]
 8002e5c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002e60:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002e64:	d10b      	bne.n	8002e7e <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e6a:	f043 0220 	orr.w	r2, r3, #32
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	2200      	movs	r2, #0
 8002e76:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8002e7a:	2301      	movs	r3, #1
 8002e7c:	e063      	b.n	8002f46 <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */
  tickstart = HAL_GetTick();
 8002e7e:	f7ff feb9 	bl	8002bf4 <HAL_GetTick>
 8002e82:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002e84:	e021      	b.n	8002eca <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if (Timeout != HAL_MAX_DELAY)
 8002e86:	683b      	ldr	r3, [r7, #0]
 8002e88:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e8c:	d01d      	beq.n	8002eca <HAL_ADC_PollForConversion+0x92>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8002e8e:	683b      	ldr	r3, [r7, #0]
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d007      	beq.n	8002ea4 <HAL_ADC_PollForConversion+0x6c>
 8002e94:	f7ff feae 	bl	8002bf4 <HAL_GetTick>
 8002e98:	4602      	mov	r2, r0
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	1ad3      	subs	r3, r2, r3
 8002e9e:	683a      	ldr	r2, [r7, #0]
 8002ea0:	429a      	cmp	r2, r3
 8002ea2:	d212      	bcs.n	8002eca <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	681b      	ldr	r3, [r3, #0]
 8002eaa:	f003 0302 	and.w	r3, r3, #2
 8002eae:	2b02      	cmp	r3, #2
 8002eb0:	d00b      	beq.n	8002eca <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002eb6:	f043 0204 	orr.w	r2, r3, #4
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_TIMEOUT;
 8002ec6:	2303      	movs	r3, #3
 8002ec8:	e03d      	b.n	8002f46 <HAL_ADC_PollForConversion+0x10e>
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f003 0302 	and.w	r3, r3, #2
 8002ed4:	2b02      	cmp	r3, #2
 8002ed6:	d1d6      	bne.n	8002e86 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }

  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f06f 0212 	mvn.w	r2, #18
 8002ee0:	601a      	str	r2, [r3, #0]

  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ee6:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	641a      	str	r2, [r3, #64]	@ 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	689b      	ldr	r3, [r3, #8]
 8002ef4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	d123      	bne.n	8002f44 <HAL_ADC_PollForConversion+0x10c>
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	7e1b      	ldrb	r3, [r3, #24]
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d11f      	bne.n	8002f44 <HAL_ADC_PollForConversion+0x10c>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002f0a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d006      	beq.n	8002f20 <HAL_ADC_PollForConversion+0xe8>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	689b      	ldr	r3, [r3, #8]
 8002f18:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d111      	bne.n	8002f44 <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f24:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	641a      	str	r2, [r3, #64]	@ 0x40

    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f30:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d105      	bne.n	8002f44 <HAL_ADC_PollForConversion+0x10c>
    {
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f3c:	f043 0201 	orr.w	r2, r3, #1
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	641a      	str	r2, [r3, #64]	@ 0x40
    }
  }

  /* Return ADC state */
  return HAL_OK;
 8002f44:	2300      	movs	r3, #0
}
 8002f46:	4618      	mov	r0, r3
 8002f48:	3710      	adds	r7, #16
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	bd80      	pop	{r7, pc}
	...

08002f50 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002f50:	b580      	push	{r7, lr}
 8002f52:	b086      	sub	sp, #24
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	60f8      	str	r0, [r7, #12]
 8002f58:	60b9      	str	r1, [r7, #8]
 8002f5a:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002f5c:	2300      	movs	r3, #0
 8002f5e:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002f66:	2b01      	cmp	r3, #1
 8002f68:	d101      	bne.n	8002f6e <HAL_ADC_Start_DMA+0x1e>
 8002f6a:	2302      	movs	r3, #2
 8002f6c:	e0e9      	b.n	8003142 <HAL_ADC_Start_DMA+0x1f2>
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	2201      	movs	r2, #1
 8002f72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	689b      	ldr	r3, [r3, #8]
 8002f7c:	f003 0301 	and.w	r3, r3, #1
 8002f80:	2b01      	cmp	r3, #1
 8002f82:	d018      	beq.n	8002fb6 <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	689a      	ldr	r2, [r3, #8]
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	f042 0201 	orr.w	r2, r2, #1
 8002f92:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002f94:	4b6d      	ldr	r3, [pc, #436]	@ (800314c <HAL_ADC_Start_DMA+0x1fc>)
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	4a6d      	ldr	r2, [pc, #436]	@ (8003150 <HAL_ADC_Start_DMA+0x200>)
 8002f9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002f9e:	0c9a      	lsrs	r2, r3, #18
 8002fa0:	4613      	mov	r3, r2
 8002fa2:	005b      	lsls	r3, r3, #1
 8002fa4:	4413      	add	r3, r2
 8002fa6:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002fa8:	e002      	b.n	8002fb0 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002faa:	693b      	ldr	r3, [r7, #16]
 8002fac:	3b01      	subs	r3, #1
 8002fae:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002fb0:	693b      	ldr	r3, [r7, #16]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d1f9      	bne.n	8002faa <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002fb6:	68fb      	ldr	r3, [r7, #12]
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	689b      	ldr	r3, [r3, #8]
 8002fbc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fc0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002fc4:	d107      	bne.n	8002fd6 <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	689a      	ldr	r2, [r3, #8]
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002fd4:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002fd6:	68fb      	ldr	r3, [r7, #12]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	689b      	ldr	r3, [r3, #8]
 8002fdc:	f003 0301 	and.w	r3, r3, #1
 8002fe0:	2b01      	cmp	r3, #1
 8002fe2:	f040 80a1 	bne.w	8003128 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002fe6:	68fb      	ldr	r3, [r7, #12]
 8002fe8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fea:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002fee:	f023 0301 	bic.w	r3, r3, #1
 8002ff2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002ff6:	68fb      	ldr	r3, [r7, #12]
 8002ff8:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	685b      	ldr	r3, [r3, #4]
 8003000:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003004:	2b00      	cmp	r3, #0
 8003006:	d007      	beq.n	8003018 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800300c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003010:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003014:	68fb      	ldr	r3, [r7, #12]
 8003016:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800301c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003020:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003024:	d106      	bne.n	8003034 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800302a:	f023 0206 	bic.w	r2, r3, #6
 800302e:	68fb      	ldr	r3, [r7, #12]
 8003030:	645a      	str	r2, [r3, #68]	@ 0x44
 8003032:	e002      	b.n	800303a <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	2200      	movs	r2, #0
 8003038:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	2200      	movs	r2, #0
 800303e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003042:	4b44      	ldr	r3, [pc, #272]	@ (8003154 <HAL_ADC_Start_DMA+0x204>)
 8003044:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8003046:	68fb      	ldr	r3, [r7, #12]
 8003048:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800304a:	4a43      	ldr	r2, [pc, #268]	@ (8003158 <HAL_ADC_Start_DMA+0x208>)
 800304c:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003052:	4a42      	ldr	r2, [pc, #264]	@ (800315c <HAL_ADC_Start_DMA+0x20c>)
 8003054:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800305a:	4a41      	ldr	r2, [pc, #260]	@ (8003160 <HAL_ADC_Start_DMA+0x210>)
 800305c:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800305e:	68fb      	ldr	r3, [r7, #12]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8003066:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	685a      	ldr	r2, [r3, #4]
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8003076:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8003078:	68fb      	ldr	r3, [r7, #12]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	689a      	ldr	r2, [r3, #8]
 800307e:	68fb      	ldr	r3, [r7, #12]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003086:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8003088:	68fb      	ldr	r3, [r7, #12]
 800308a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	334c      	adds	r3, #76	@ 0x4c
 8003092:	4619      	mov	r1, r3
 8003094:	68ba      	ldr	r2, [r7, #8]
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	f000 fce2 	bl	8003a60 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800309c:	697b      	ldr	r3, [r7, #20]
 800309e:	685b      	ldr	r3, [r3, #4]
 80030a0:	f003 031f 	and.w	r3, r3, #31
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d12a      	bne.n	80030fe <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	4a2d      	ldr	r2, [pc, #180]	@ (8003164 <HAL_ADC_Start_DMA+0x214>)
 80030ae:	4293      	cmp	r3, r2
 80030b0:	d015      	beq.n	80030de <HAL_ADC_Start_DMA+0x18e>
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4a2c      	ldr	r2, [pc, #176]	@ (8003168 <HAL_ADC_Start_DMA+0x218>)
 80030b8:	4293      	cmp	r3, r2
 80030ba:	d105      	bne.n	80030c8 <HAL_ADC_Start_DMA+0x178>
 80030bc:	4b25      	ldr	r3, [pc, #148]	@ (8003154 <HAL_ADC_Start_DMA+0x204>)
 80030be:	685b      	ldr	r3, [r3, #4]
 80030c0:	f003 031f 	and.w	r3, r3, #31
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	d00a      	beq.n	80030de <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	4a27      	ldr	r2, [pc, #156]	@ (800316c <HAL_ADC_Start_DMA+0x21c>)
 80030ce:	4293      	cmp	r3, r2
 80030d0:	d136      	bne.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
 80030d2:	4b20      	ldr	r3, [pc, #128]	@ (8003154 <HAL_ADC_Start_DMA+0x204>)
 80030d4:	685b      	ldr	r3, [r3, #4]
 80030d6:	f003 0310 	and.w	r3, r3, #16
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d130      	bne.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	689b      	ldr	r3, [r3, #8]
 80030e4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	d129      	bne.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80030ec:	68fb      	ldr	r3, [r7, #12]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	689a      	ldr	r2, [r3, #8]
 80030f2:	68fb      	ldr	r3, [r7, #12]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80030fa:	609a      	str	r2, [r3, #8]
 80030fc:	e020      	b.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	4a18      	ldr	r2, [pc, #96]	@ (8003164 <HAL_ADC_Start_DMA+0x214>)
 8003104:	4293      	cmp	r3, r2
 8003106:	d11b      	bne.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	689b      	ldr	r3, [r3, #8]
 800310e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003112:	2b00      	cmp	r3, #0
 8003114:	d114      	bne.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	689a      	ldr	r2, [r3, #8]
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8003124:	609a      	str	r2, [r3, #8]
 8003126:	e00b      	b.n	8003140 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800312c:	f043 0210 	orr.w	r2, r3, #16
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003138:	f043 0201 	orr.w	r2, r3, #1
 800313c:	68fb      	ldr	r3, [r7, #12]
 800313e:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8003140:	2300      	movs	r3, #0
}
 8003142:	4618      	mov	r0, r3
 8003144:	3718      	adds	r7, #24
 8003146:	46bd      	mov	sp, r7
 8003148:	bd80      	pop	{r7, pc}
 800314a:	bf00      	nop
 800314c:	20000a18 	.word	0x20000a18
 8003150:	431bde83 	.word	0x431bde83
 8003154:	40012300 	.word	0x40012300
 8003158:	080035dd 	.word	0x080035dd
 800315c:	08003697 	.word	0x08003697
 8003160:	080036b3 	.word	0x080036b3
 8003164:	40012000 	.word	0x40012000
 8003168:	40012100 	.word	0x40012100
 800316c:	40012200 	.word	0x40012200

08003170 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
{
 8003170:	b480      	push	{r7}
 8003172:	b083      	sub	sp, #12
 8003174:	af00      	add	r7, sp, #0
 8003176:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */
  return hadc->Instance->DR;
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 800317e:	4618      	mov	r0, r3
 8003180:	370c      	adds	r7, #12
 8003182:	46bd      	mov	sp, r7
 8003184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003188:	4770      	bx	lr

0800318a <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 800318a:	b480      	push	{r7}
 800318c:	b083      	sub	sp, #12
 800318e:	af00      	add	r7, sp, #0
 8003190:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8003192:	bf00      	nop
 8003194:	370c      	adds	r7, #12
 8003196:	46bd      	mov	sp, r7
 8003198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800319c:	4770      	bx	lr
	...

080031a0 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 80031a0:	b480      	push	{r7}
 80031a2:	b085      	sub	sp, #20
 80031a4:	af00      	add	r7, sp, #0
 80031a6:	6078      	str	r0, [r7, #4]
 80031a8:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 80031aa:	2300      	movs	r3, #0
 80031ac:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80031b4:	2b01      	cmp	r3, #1
 80031b6:	d101      	bne.n	80031bc <HAL_ADC_ConfigChannel+0x1c>
 80031b8:	2302      	movs	r3, #2
 80031ba:	e105      	b.n	80033c8 <HAL_ADC_ConfigChannel+0x228>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	2201      	movs	r2, #1
 80031c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	2b09      	cmp	r3, #9
 80031ca:	d925      	bls.n	8003218 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	68d9      	ldr	r1, [r3, #12]
 80031d2:	683b      	ldr	r3, [r7, #0]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	b29b      	uxth	r3, r3
 80031d8:	461a      	mov	r2, r3
 80031da:	4613      	mov	r3, r2
 80031dc:	005b      	lsls	r3, r3, #1
 80031de:	4413      	add	r3, r2
 80031e0:	3b1e      	subs	r3, #30
 80031e2:	2207      	movs	r2, #7
 80031e4:	fa02 f303 	lsl.w	r3, r2, r3
 80031e8:	43da      	mvns	r2, r3
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	400a      	ands	r2, r1
 80031f0:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	68d9      	ldr	r1, [r3, #12]
 80031f8:	683b      	ldr	r3, [r7, #0]
 80031fa:	689a      	ldr	r2, [r3, #8]
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	b29b      	uxth	r3, r3
 8003202:	4618      	mov	r0, r3
 8003204:	4603      	mov	r3, r0
 8003206:	005b      	lsls	r3, r3, #1
 8003208:	4403      	add	r3, r0
 800320a:	3b1e      	subs	r3, #30
 800320c:	409a      	lsls	r2, r3
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	430a      	orrs	r2, r1
 8003214:	60da      	str	r2, [r3, #12]
 8003216:	e022      	b.n	800325e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	6919      	ldr	r1, [r3, #16]
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	b29b      	uxth	r3, r3
 8003224:	461a      	mov	r2, r3
 8003226:	4613      	mov	r3, r2
 8003228:	005b      	lsls	r3, r3, #1
 800322a:	4413      	add	r3, r2
 800322c:	2207      	movs	r2, #7
 800322e:	fa02 f303 	lsl.w	r3, r2, r3
 8003232:	43da      	mvns	r2, r3
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	400a      	ands	r2, r1
 800323a:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	6919      	ldr	r1, [r3, #16]
 8003242:	683b      	ldr	r3, [r7, #0]
 8003244:	689a      	ldr	r2, [r3, #8]
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	b29b      	uxth	r3, r3
 800324c:	4618      	mov	r0, r3
 800324e:	4603      	mov	r3, r0
 8003250:	005b      	lsls	r3, r3, #1
 8003252:	4403      	add	r3, r0
 8003254:	409a      	lsls	r2, r3
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	681b      	ldr	r3, [r3, #0]
 800325a:	430a      	orrs	r2, r1
 800325c:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800325e:	683b      	ldr	r3, [r7, #0]
 8003260:	685b      	ldr	r3, [r3, #4]
 8003262:	2b06      	cmp	r3, #6
 8003264:	d824      	bhi.n	80032b0 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800326c:	683b      	ldr	r3, [r7, #0]
 800326e:	685a      	ldr	r2, [r3, #4]
 8003270:	4613      	mov	r3, r2
 8003272:	009b      	lsls	r3, r3, #2
 8003274:	4413      	add	r3, r2
 8003276:	3b05      	subs	r3, #5
 8003278:	221f      	movs	r2, #31
 800327a:	fa02 f303 	lsl.w	r3, r2, r3
 800327e:	43da      	mvns	r2, r3
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	400a      	ands	r2, r1
 8003286:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800328e:	683b      	ldr	r3, [r7, #0]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	b29b      	uxth	r3, r3
 8003294:	4618      	mov	r0, r3
 8003296:	683b      	ldr	r3, [r7, #0]
 8003298:	685a      	ldr	r2, [r3, #4]
 800329a:	4613      	mov	r3, r2
 800329c:	009b      	lsls	r3, r3, #2
 800329e:	4413      	add	r3, r2
 80032a0:	3b05      	subs	r3, #5
 80032a2:	fa00 f203 	lsl.w	r2, r0, r3
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	430a      	orrs	r2, r1
 80032ac:	635a      	str	r2, [r3, #52]	@ 0x34
 80032ae:	e04c      	b.n	800334a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	685b      	ldr	r3, [r3, #4]
 80032b4:	2b0c      	cmp	r3, #12
 80032b6:	d824      	bhi.n	8003302 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80032be:	683b      	ldr	r3, [r7, #0]
 80032c0:	685a      	ldr	r2, [r3, #4]
 80032c2:	4613      	mov	r3, r2
 80032c4:	009b      	lsls	r3, r3, #2
 80032c6:	4413      	add	r3, r2
 80032c8:	3b23      	subs	r3, #35	@ 0x23
 80032ca:	221f      	movs	r2, #31
 80032cc:	fa02 f303 	lsl.w	r3, r2, r3
 80032d0:	43da      	mvns	r2, r3
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	400a      	ands	r2, r1
 80032d8:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80032e0:	683b      	ldr	r3, [r7, #0]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	b29b      	uxth	r3, r3
 80032e6:	4618      	mov	r0, r3
 80032e8:	683b      	ldr	r3, [r7, #0]
 80032ea:	685a      	ldr	r2, [r3, #4]
 80032ec:	4613      	mov	r3, r2
 80032ee:	009b      	lsls	r3, r3, #2
 80032f0:	4413      	add	r3, r2
 80032f2:	3b23      	subs	r3, #35	@ 0x23
 80032f4:	fa00 f203 	lsl.w	r2, r0, r3
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	430a      	orrs	r2, r1
 80032fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8003300:	e023      	b.n	800334a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003308:	683b      	ldr	r3, [r7, #0]
 800330a:	685a      	ldr	r2, [r3, #4]
 800330c:	4613      	mov	r3, r2
 800330e:	009b      	lsls	r3, r3, #2
 8003310:	4413      	add	r3, r2
 8003312:	3b41      	subs	r3, #65	@ 0x41
 8003314:	221f      	movs	r2, #31
 8003316:	fa02 f303 	lsl.w	r3, r2, r3
 800331a:	43da      	mvns	r2, r3
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	400a      	ands	r2, r1
 8003322:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800332a:	683b      	ldr	r3, [r7, #0]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	b29b      	uxth	r3, r3
 8003330:	4618      	mov	r0, r3
 8003332:	683b      	ldr	r3, [r7, #0]
 8003334:	685a      	ldr	r2, [r3, #4]
 8003336:	4613      	mov	r3, r2
 8003338:	009b      	lsls	r3, r3, #2
 800333a:	4413      	add	r3, r2
 800333c:	3b41      	subs	r3, #65	@ 0x41
 800333e:	fa00 f203 	lsl.w	r2, r0, r3
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	430a      	orrs	r2, r1
 8003348:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800334a:	4b22      	ldr	r3, [pc, #136]	@ (80033d4 <HAL_ADC_ConfigChannel+0x234>)
 800334c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	4a21      	ldr	r2, [pc, #132]	@ (80033d8 <HAL_ADC_ConfigChannel+0x238>)
 8003354:	4293      	cmp	r3, r2
 8003356:	d109      	bne.n	800336c <HAL_ADC_ConfigChannel+0x1cc>
 8003358:	683b      	ldr	r3, [r7, #0]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	2b12      	cmp	r3, #18
 800335e:	d105      	bne.n	800336c <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	685b      	ldr	r3, [r3, #4]
 8003364:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	4a19      	ldr	r2, [pc, #100]	@ (80033d8 <HAL_ADC_ConfigChannel+0x238>)
 8003372:	4293      	cmp	r3, r2
 8003374:	d123      	bne.n	80033be <HAL_ADC_ConfigChannel+0x21e>
 8003376:	683b      	ldr	r3, [r7, #0]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	2b10      	cmp	r3, #16
 800337c:	d003      	beq.n	8003386 <HAL_ADC_ConfigChannel+0x1e6>
 800337e:	683b      	ldr	r3, [r7, #0]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	2b11      	cmp	r3, #17
 8003384:	d11b      	bne.n	80033be <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	685b      	ldr	r3, [r3, #4]
 800338a:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8003392:	683b      	ldr	r3, [r7, #0]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	2b10      	cmp	r3, #16
 8003398:	d111      	bne.n	80033be <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800339a:	4b10      	ldr	r3, [pc, #64]	@ (80033dc <HAL_ADC_ConfigChannel+0x23c>)
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	4a10      	ldr	r2, [pc, #64]	@ (80033e0 <HAL_ADC_ConfigChannel+0x240>)
 80033a0:	fba2 2303 	umull	r2, r3, r2, r3
 80033a4:	0c9a      	lsrs	r2, r3, #18
 80033a6:	4613      	mov	r3, r2
 80033a8:	009b      	lsls	r3, r3, #2
 80033aa:	4413      	add	r3, r2
 80033ac:	005b      	lsls	r3, r3, #1
 80033ae:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80033b0:	e002      	b.n	80033b8 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 80033b2:	68bb      	ldr	r3, [r7, #8]
 80033b4:	3b01      	subs	r3, #1
 80033b6:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80033b8:	68bb      	ldr	r3, [r7, #8]
 80033ba:	2b00      	cmp	r3, #0
 80033bc:	d1f9      	bne.n	80033b2 <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	2200      	movs	r2, #0
 80033c2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 80033c6:	2300      	movs	r3, #0
}
 80033c8:	4618      	mov	r0, r3
 80033ca:	3714      	adds	r7, #20
 80033cc:	46bd      	mov	sp, r7
 80033ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d2:	4770      	bx	lr
 80033d4:	40012300 	.word	0x40012300
 80033d8:	40012000 	.word	0x40012000
 80033dc:	20000a18 	.word	0x20000a18
 80033e0:	431bde83 	.word	0x431bde83

080033e4 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 80033e4:	b480      	push	{r7}
 80033e6:	b085      	sub	sp, #20
 80033e8:	af00      	add	r7, sp, #0
 80033ea:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80033ec:	4b79      	ldr	r3, [pc, #484]	@ (80035d4 <ADC_Init+0x1f0>)
 80033ee:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	685a      	ldr	r2, [r3, #4]
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	685b      	ldr	r3, [r3, #4]
 8003404:	431a      	orrs	r2, r3
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	685a      	ldr	r2, [r3, #4]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003418:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	6859      	ldr	r1, [r3, #4]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	691b      	ldr	r3, [r3, #16]
 8003424:	021a      	lsls	r2, r3, #8
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	430a      	orrs	r2, r1
 800342c:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	685a      	ldr	r2, [r3, #4]
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800343c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	6859      	ldr	r1, [r3, #4]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	689a      	ldr	r2, [r3, #8]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	430a      	orrs	r2, r1
 800344e:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	689a      	ldr	r2, [r3, #8]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800345e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	6899      	ldr	r1, [r3, #8]
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	68da      	ldr	r2, [r3, #12]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	430a      	orrs	r2, r1
 8003470:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003476:	4a58      	ldr	r2, [pc, #352]	@ (80035d8 <ADC_Init+0x1f4>)
 8003478:	4293      	cmp	r3, r2
 800347a:	d022      	beq.n	80034c2 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	689a      	ldr	r2, [r3, #8]
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800348a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	6899      	ldr	r1, [r3, #8]
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	430a      	orrs	r2, r1
 800349c:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	689a      	ldr	r2, [r3, #8]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80034ac:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	6899      	ldr	r1, [r3, #8]
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	430a      	orrs	r2, r1
 80034be:	609a      	str	r2, [r3, #8]
 80034c0:	e00f      	b.n	80034e2 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	689a      	ldr	r2, [r3, #8]
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80034d0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	689a      	ldr	r2, [r3, #8]
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80034e0:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	681b      	ldr	r3, [r3, #0]
 80034e6:	689a      	ldr	r2, [r3, #8]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	f022 0202 	bic.w	r2, r2, #2
 80034f0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	6899      	ldr	r1, [r3, #8]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	7e1b      	ldrb	r3, [r3, #24]
 80034fc:	005a      	lsls	r2, r3, #1
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	430a      	orrs	r2, r1
 8003504:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	f893 3020 	ldrb.w	r3, [r3, #32]
 800350c:	2b00      	cmp	r3, #0
 800350e:	d01b      	beq.n	8003548 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	685a      	ldr	r2, [r3, #4]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800351e:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	685a      	ldr	r2, [r3, #4]
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800352e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	6859      	ldr	r1, [r3, #4]
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800353a:	3b01      	subs	r3, #1
 800353c:	035a      	lsls	r2, r3, #13
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	430a      	orrs	r2, r1
 8003544:	605a      	str	r2, [r3, #4]
 8003546:	e007      	b.n	8003558 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	685a      	ldr	r2, [r3, #4]
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003556:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8003566:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	69db      	ldr	r3, [r3, #28]
 8003572:	3b01      	subs	r3, #1
 8003574:	051a      	lsls	r2, r3, #20
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	430a      	orrs	r2, r1
 800357c:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	689a      	ldr	r2, [r3, #8]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800358c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	6899      	ldr	r1, [r3, #8]
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800359a:	025a      	lsls	r2, r3, #9
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	430a      	orrs	r2, r1
 80035a2:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	689a      	ldr	r2, [r3, #8]
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80035b2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	6899      	ldr	r1, [r3, #8]
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	695b      	ldr	r3, [r3, #20]
 80035be:	029a      	lsls	r2, r3, #10
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	430a      	orrs	r2, r1
 80035c6:	609a      	str	r2, [r3, #8]
}
 80035c8:	bf00      	nop
 80035ca:	3714      	adds	r7, #20
 80035cc:	46bd      	mov	sp, r7
 80035ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035d2:	4770      	bx	lr
 80035d4:	40012300 	.word	0x40012300
 80035d8:	0f000001 	.word	0x0f000001

080035dc <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 80035dc:	b580      	push	{r7, lr}
 80035de:	b084      	sub	sp, #16
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035e8:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035ee:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80035f2:	2b00      	cmp	r3, #0
 80035f4:	d13c      	bne.n	8003670 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035fa:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003602:	68fb      	ldr	r3, [r7, #12]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	689b      	ldr	r3, [r3, #8]
 8003608:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800360c:	2b00      	cmp	r3, #0
 800360e:	d12b      	bne.n	8003668 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003614:	2b00      	cmp	r3, #0
 8003616:	d127      	bne.n	8003668 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800361e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003622:	2b00      	cmp	r3, #0
 8003624:	d006      	beq.n	8003634 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	689b      	ldr	r3, [r3, #8]
 800362c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003630:	2b00      	cmp	r3, #0
 8003632:	d119      	bne.n	8003668 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	685a      	ldr	r2, [r3, #4]
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	f022 0220 	bic.w	r2, r2, #32
 8003642:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003648:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003654:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003658:	2b00      	cmp	r3, #0
 800365a:	d105      	bne.n	8003668 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003660:	f043 0201 	orr.w	r2, r3, #1
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8003668:	68f8      	ldr	r0, [r7, #12]
 800366a:	f7fe fa61 	bl	8001b30 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 800366e:	e00e      	b.n	800368e <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003674:	f003 0310 	and.w	r3, r3, #16
 8003678:	2b00      	cmp	r3, #0
 800367a:	d003      	beq.n	8003684 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 800367c:	68f8      	ldr	r0, [r7, #12]
 800367e:	f7ff fd84 	bl	800318a <HAL_ADC_ErrorCallback>
}
 8003682:	e004      	b.n	800368e <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8003684:	68fb      	ldr	r3, [r7, #12]
 8003686:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003688:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800368a:	6878      	ldr	r0, [r7, #4]
 800368c:	4798      	blx	r3
}
 800368e:	bf00      	nop
 8003690:	3710      	adds	r7, #16
 8003692:	46bd      	mov	sp, r7
 8003694:	bd80      	pop	{r7, pc}

08003696 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 8003696:	b580      	push	{r7, lr}
 8003698:	b084      	sub	sp, #16
 800369a:	af00      	add	r7, sp, #0
 800369c:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036a2:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80036a4:	68f8      	ldr	r0, [r7, #12]
 80036a6:	f7fe fa33 	bl	8001b10 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80036aa:	bf00      	nop
 80036ac:	3710      	adds	r7, #16
 80036ae:	46bd      	mov	sp, r7
 80036b0:	bd80      	pop	{r7, pc}

080036b2 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80036b2:	b580      	push	{r7, lr}
 80036b4:	b084      	sub	sp, #16
 80036b6:	af00      	add	r7, sp, #0
 80036b8:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80036be:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	2240      	movs	r2, #64	@ 0x40
 80036c4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 80036c6:	68fb      	ldr	r3, [r7, #12]
 80036c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036ca:	f043 0204 	orr.w	r2, r3, #4
 80036ce:	68fb      	ldr	r3, [r7, #12]
 80036d0:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 80036d2:	68f8      	ldr	r0, [r7, #12]
 80036d4:	f7ff fd59 	bl	800318a <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80036d8:	bf00      	nop
 80036da:	3710      	adds	r7, #16
 80036dc:	46bd      	mov	sp, r7
 80036de:	bd80      	pop	{r7, pc}

080036e0 <__NVIC_SetPriorityGrouping>:
{
 80036e0:	b480      	push	{r7}
 80036e2:	b085      	sub	sp, #20
 80036e4:	af00      	add	r7, sp, #0
 80036e6:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	f003 0307 	and.w	r3, r3, #7
 80036ee:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80036f0:	4b0c      	ldr	r3, [pc, #48]	@ (8003724 <__NVIC_SetPriorityGrouping+0x44>)
 80036f2:	68db      	ldr	r3, [r3, #12]
 80036f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80036f6:	68ba      	ldr	r2, [r7, #8]
 80036f8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80036fc:	4013      	ands	r3, r2
 80036fe:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003704:	68bb      	ldr	r3, [r7, #8]
 8003706:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003708:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800370c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003710:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003712:	4a04      	ldr	r2, [pc, #16]	@ (8003724 <__NVIC_SetPriorityGrouping+0x44>)
 8003714:	68bb      	ldr	r3, [r7, #8]
 8003716:	60d3      	str	r3, [r2, #12]
}
 8003718:	bf00      	nop
 800371a:	3714      	adds	r7, #20
 800371c:	46bd      	mov	sp, r7
 800371e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003722:	4770      	bx	lr
 8003724:	e000ed00 	.word	0xe000ed00

08003728 <__NVIC_GetPriorityGrouping>:
{
 8003728:	b480      	push	{r7}
 800372a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800372c:	4b04      	ldr	r3, [pc, #16]	@ (8003740 <__NVIC_GetPriorityGrouping+0x18>)
 800372e:	68db      	ldr	r3, [r3, #12]
 8003730:	0a1b      	lsrs	r3, r3, #8
 8003732:	f003 0307 	and.w	r3, r3, #7
}
 8003736:	4618      	mov	r0, r3
 8003738:	46bd      	mov	sp, r7
 800373a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800373e:	4770      	bx	lr
 8003740:	e000ed00 	.word	0xe000ed00

08003744 <__NVIC_EnableIRQ>:
{
 8003744:	b480      	push	{r7}
 8003746:	b083      	sub	sp, #12
 8003748:	af00      	add	r7, sp, #0
 800374a:	4603      	mov	r3, r0
 800374c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800374e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003752:	2b00      	cmp	r3, #0
 8003754:	db0b      	blt.n	800376e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003756:	79fb      	ldrb	r3, [r7, #7]
 8003758:	f003 021f 	and.w	r2, r3, #31
 800375c:	4907      	ldr	r1, [pc, #28]	@ (800377c <__NVIC_EnableIRQ+0x38>)
 800375e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003762:	095b      	lsrs	r3, r3, #5
 8003764:	2001      	movs	r0, #1
 8003766:	fa00 f202 	lsl.w	r2, r0, r2
 800376a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800376e:	bf00      	nop
 8003770:	370c      	adds	r7, #12
 8003772:	46bd      	mov	sp, r7
 8003774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003778:	4770      	bx	lr
 800377a:	bf00      	nop
 800377c:	e000e100 	.word	0xe000e100

08003780 <__NVIC_SetPriority>:
{
 8003780:	b480      	push	{r7}
 8003782:	b083      	sub	sp, #12
 8003784:	af00      	add	r7, sp, #0
 8003786:	4603      	mov	r3, r0
 8003788:	6039      	str	r1, [r7, #0]
 800378a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800378c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003790:	2b00      	cmp	r3, #0
 8003792:	db0a      	blt.n	80037aa <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003794:	683b      	ldr	r3, [r7, #0]
 8003796:	b2da      	uxtb	r2, r3
 8003798:	490c      	ldr	r1, [pc, #48]	@ (80037cc <__NVIC_SetPriority+0x4c>)
 800379a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800379e:	0112      	lsls	r2, r2, #4
 80037a0:	b2d2      	uxtb	r2, r2
 80037a2:	440b      	add	r3, r1
 80037a4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 80037a8:	e00a      	b.n	80037c0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80037aa:	683b      	ldr	r3, [r7, #0]
 80037ac:	b2da      	uxtb	r2, r3
 80037ae:	4908      	ldr	r1, [pc, #32]	@ (80037d0 <__NVIC_SetPriority+0x50>)
 80037b0:	79fb      	ldrb	r3, [r7, #7]
 80037b2:	f003 030f 	and.w	r3, r3, #15
 80037b6:	3b04      	subs	r3, #4
 80037b8:	0112      	lsls	r2, r2, #4
 80037ba:	b2d2      	uxtb	r2, r2
 80037bc:	440b      	add	r3, r1
 80037be:	761a      	strb	r2, [r3, #24]
}
 80037c0:	bf00      	nop
 80037c2:	370c      	adds	r7, #12
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr
 80037cc:	e000e100 	.word	0xe000e100
 80037d0:	e000ed00 	.word	0xe000ed00

080037d4 <NVIC_EncodePriority>:
{
 80037d4:	b480      	push	{r7}
 80037d6:	b089      	sub	sp, #36	@ 0x24
 80037d8:	af00      	add	r7, sp, #0
 80037da:	60f8      	str	r0, [r7, #12]
 80037dc:	60b9      	str	r1, [r7, #8]
 80037de:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	f003 0307 	and.w	r3, r3, #7
 80037e6:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80037e8:	69fb      	ldr	r3, [r7, #28]
 80037ea:	f1c3 0307 	rsb	r3, r3, #7
 80037ee:	2b04      	cmp	r3, #4
 80037f0:	bf28      	it	cs
 80037f2:	2304      	movcs	r3, #4
 80037f4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80037f6:	69fb      	ldr	r3, [r7, #28]
 80037f8:	3304      	adds	r3, #4
 80037fa:	2b06      	cmp	r3, #6
 80037fc:	d902      	bls.n	8003804 <NVIC_EncodePriority+0x30>
 80037fe:	69fb      	ldr	r3, [r7, #28]
 8003800:	3b03      	subs	r3, #3
 8003802:	e000      	b.n	8003806 <NVIC_EncodePriority+0x32>
 8003804:	2300      	movs	r3, #0
 8003806:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003808:	f04f 32ff 	mov.w	r2, #4294967295
 800380c:	69bb      	ldr	r3, [r7, #24]
 800380e:	fa02 f303 	lsl.w	r3, r2, r3
 8003812:	43da      	mvns	r2, r3
 8003814:	68bb      	ldr	r3, [r7, #8]
 8003816:	401a      	ands	r2, r3
 8003818:	697b      	ldr	r3, [r7, #20]
 800381a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800381c:	f04f 31ff 	mov.w	r1, #4294967295
 8003820:	697b      	ldr	r3, [r7, #20]
 8003822:	fa01 f303 	lsl.w	r3, r1, r3
 8003826:	43d9      	mvns	r1, r3
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800382c:	4313      	orrs	r3, r2
}
 800382e:	4618      	mov	r0, r3
 8003830:	3724      	adds	r7, #36	@ 0x24
 8003832:	46bd      	mov	sp, r7
 8003834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003838:	4770      	bx	lr
	...

0800383c <SysTick_Config>:
{
 800383c:	b580      	push	{r7, lr}
 800383e:	b082      	sub	sp, #8
 8003840:	af00      	add	r7, sp, #0
 8003842:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	3b01      	subs	r3, #1
 8003848:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800384c:	d301      	bcc.n	8003852 <SysTick_Config+0x16>
    return (1UL);                                                   /* Reload value impossible */
 800384e:	2301      	movs	r3, #1
 8003850:	e00f      	b.n	8003872 <SysTick_Config+0x36>
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003852:	4a0a      	ldr	r2, [pc, #40]	@ (800387c <SysTick_Config+0x40>)
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	3b01      	subs	r3, #1
 8003858:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800385a:	210f      	movs	r1, #15
 800385c:	f04f 30ff 	mov.w	r0, #4294967295
 8003860:	f7ff ff8e 	bl	8003780 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003864:	4b05      	ldr	r3, [pc, #20]	@ (800387c <SysTick_Config+0x40>)
 8003866:	2200      	movs	r2, #0
 8003868:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800386a:	4b04      	ldr	r3, [pc, #16]	@ (800387c <SysTick_Config+0x40>)
 800386c:	2207      	movs	r2, #7
 800386e:	601a      	str	r2, [r3, #0]
  return (0UL);                                                     /* Function successful */
 8003870:	2300      	movs	r3, #0
}
 8003872:	4618      	mov	r0, r3
 8003874:	3708      	adds	r7, #8
 8003876:	46bd      	mov	sp, r7
 8003878:	bd80      	pop	{r7, pc}
 800387a:	bf00      	nop
 800387c:	e000e010 	.word	0xe000e010

08003880 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003880:	b580      	push	{r7, lr}
 8003882:	b082      	sub	sp, #8
 8003884:	af00      	add	r7, sp, #0
 8003886:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003888:	6878      	ldr	r0, [r7, #4]
 800388a:	f7ff ff29 	bl	80036e0 <__NVIC_SetPriorityGrouping>
}
 800388e:	bf00      	nop
 8003890:	3708      	adds	r7, #8
 8003892:	46bd      	mov	sp, r7
 8003894:	bd80      	pop	{r7, pc}

08003896 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003896:	b580      	push	{r7, lr}
 8003898:	b086      	sub	sp, #24
 800389a:	af00      	add	r7, sp, #0
 800389c:	4603      	mov	r3, r0
 800389e:	60b9      	str	r1, [r7, #8]
 80038a0:	607a      	str	r2, [r7, #4]
 80038a2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80038a4:	2300      	movs	r3, #0
 80038a6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80038a8:	f7ff ff3e 	bl	8003728 <__NVIC_GetPriorityGrouping>
 80038ac:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80038ae:	687a      	ldr	r2, [r7, #4]
 80038b0:	68b9      	ldr	r1, [r7, #8]
 80038b2:	6978      	ldr	r0, [r7, #20]
 80038b4:	f7ff ff8e 	bl	80037d4 <NVIC_EncodePriority>
 80038b8:	4602      	mov	r2, r0
 80038ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80038be:	4611      	mov	r1, r2
 80038c0:	4618      	mov	r0, r3
 80038c2:	f7ff ff5d 	bl	8003780 <__NVIC_SetPriority>
}
 80038c6:	bf00      	nop
 80038c8:	3718      	adds	r7, #24
 80038ca:	46bd      	mov	sp, r7
 80038cc:	bd80      	pop	{r7, pc}

080038ce <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80038ce:	b580      	push	{r7, lr}
 80038d0:	b082      	sub	sp, #8
 80038d2:	af00      	add	r7, sp, #0
 80038d4:	4603      	mov	r3, r0
 80038d6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80038d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038dc:	4618      	mov	r0, r3
 80038de:	f7ff ff31 	bl	8003744 <__NVIC_EnableIRQ>
}
 80038e2:	bf00      	nop
 80038e4:	3708      	adds	r7, #8
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bd80      	pop	{r7, pc}

080038ea <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80038ea:	b580      	push	{r7, lr}
 80038ec:	b082      	sub	sp, #8
 80038ee:	af00      	add	r7, sp, #0
 80038f0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80038f2:	6878      	ldr	r0, [r7, #4]
 80038f4:	f7ff ffa2 	bl	800383c <SysTick_Config>
 80038f8:	4603      	mov	r3, r0
}
 80038fa:	4618      	mov	r0, r3
 80038fc:	3708      	adds	r7, #8
 80038fe:	46bd      	mov	sp, r7
 8003900:	bd80      	pop	{r7, pc}
	...

08003904 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003904:	b580      	push	{r7, lr}
 8003906:	b086      	sub	sp, #24
 8003908:	af00      	add	r7, sp, #0
 800390a:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 800390c:	2300      	movs	r3, #0
 800390e:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003910:	f7ff f970 	bl	8002bf4 <HAL_GetTick>
 8003914:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	2b00      	cmp	r3, #0
 800391a:	d101      	bne.n	8003920 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 800391c:	2301      	movs	r3, #1
 800391e:	e099      	b.n	8003a54 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	2202      	movs	r2, #2
 8003924:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	2200      	movs	r2, #0
 800392c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	681a      	ldr	r2, [r3, #0]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	f022 0201 	bic.w	r2, r2, #1
 800393e:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003940:	e00f      	b.n	8003962 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003942:	f7ff f957 	bl	8002bf4 <HAL_GetTick>
 8003946:	4602      	mov	r2, r0
 8003948:	693b      	ldr	r3, [r7, #16]
 800394a:	1ad3      	subs	r3, r2, r3
 800394c:	2b05      	cmp	r3, #5
 800394e:	d908      	bls.n	8003962 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	2220      	movs	r2, #32
 8003954:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	2203      	movs	r2, #3
 800395a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 800395e:	2303      	movs	r3, #3
 8003960:	e078      	b.n	8003a54 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	f003 0301 	and.w	r3, r3, #1
 800396c:	2b00      	cmp	r3, #0
 800396e:	d1e8      	bne.n	8003942 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003978:	697a      	ldr	r2, [r7, #20]
 800397a:	4b38      	ldr	r3, [pc, #224]	@ (8003a5c <HAL_DMA_Init+0x158>)
 800397c:	4013      	ands	r3, r2
 800397e:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	685a      	ldr	r2, [r3, #4]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	689b      	ldr	r3, [r3, #8]
 8003988:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800398e:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	691b      	ldr	r3, [r3, #16]
 8003994:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800399a:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	699b      	ldr	r3, [r3, #24]
 80039a0:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80039a6:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	6a1b      	ldr	r3, [r3, #32]
 80039ac:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80039ae:	697a      	ldr	r2, [r7, #20]
 80039b0:	4313      	orrs	r3, r2
 80039b2:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039b8:	2b04      	cmp	r3, #4
 80039ba:	d107      	bne.n	80039cc <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039c4:	4313      	orrs	r3, r2
 80039c6:	697a      	ldr	r2, [r7, #20]
 80039c8:	4313      	orrs	r3, r2
 80039ca:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	697a      	ldr	r2, [r7, #20]
 80039d2:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	695b      	ldr	r3, [r3, #20]
 80039da:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80039dc:	697b      	ldr	r3, [r7, #20]
 80039de:	f023 0307 	bic.w	r3, r3, #7
 80039e2:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039e8:	697a      	ldr	r2, [r7, #20]
 80039ea:	4313      	orrs	r3, r2
 80039ec:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039f2:	2b04      	cmp	r3, #4
 80039f4:	d117      	bne.n	8003a26 <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039fa:	697a      	ldr	r2, [r7, #20]
 80039fc:	4313      	orrs	r3, r2
 80039fe:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a04:	2b00      	cmp	r3, #0
 8003a06:	d00e      	beq.n	8003a26 <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003a08:	6878      	ldr	r0, [r7, #4]
 8003a0a:	f000 fa6f 	bl	8003eec <DMA_CheckFifoParam>
 8003a0e:	4603      	mov	r3, r0
 8003a10:	2b00      	cmp	r3, #0
 8003a12:	d008      	beq.n	8003a26 <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	2240      	movs	r2, #64	@ 0x40
 8003a18:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	2201      	movs	r2, #1
 8003a1e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 8003a22:	2301      	movs	r3, #1
 8003a24:	e016      	b.n	8003a54 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	697a      	ldr	r2, [r7, #20]
 8003a2c:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003a2e:	6878      	ldr	r0, [r7, #4]
 8003a30:	f000 fa26 	bl	8003e80 <DMA_CalcBaseAndBitshift>
 8003a34:	4603      	mov	r3, r0
 8003a36:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a3c:	223f      	movs	r2, #63	@ 0x3f
 8003a3e:	409a      	lsls	r2, r3
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2200      	movs	r2, #0
 8003a48:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	2201      	movs	r2, #1
 8003a4e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 8003a52:	2300      	movs	r3, #0
}
 8003a54:	4618      	mov	r0, r3
 8003a56:	3718      	adds	r7, #24
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}
 8003a5c:	f010803f 	.word	0xf010803f

08003a60 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b086      	sub	sp, #24
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	60f8      	str	r0, [r7, #12]
 8003a68:	60b9      	str	r1, [r7, #8]
 8003a6a:	607a      	str	r2, [r7, #4]
 8003a6c:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003a6e:	2300      	movs	r3, #0
 8003a70:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a76:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003a7e:	2b01      	cmp	r3, #1
 8003a80:	d101      	bne.n	8003a86 <HAL_DMA_Start_IT+0x26>
 8003a82:	2302      	movs	r3, #2
 8003a84:	e040      	b.n	8003b08 <HAL_DMA_Start_IT+0xa8>
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	2201      	movs	r2, #1
 8003a8a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a94:	b2db      	uxtb	r3, r3
 8003a96:	2b01      	cmp	r3, #1
 8003a98:	d12f      	bne.n	8003afa <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	2202      	movs	r2, #2
 8003a9e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	2200      	movs	r2, #0
 8003aa6:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003aa8:	683b      	ldr	r3, [r7, #0]
 8003aaa:	687a      	ldr	r2, [r7, #4]
 8003aac:	68b9      	ldr	r1, [r7, #8]
 8003aae:	68f8      	ldr	r0, [r7, #12]
 8003ab0:	f000 f9b8 	bl	8003e24 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ab8:	223f      	movs	r2, #63	@ 0x3f
 8003aba:	409a      	lsls	r2, r3
 8003abc:	693b      	ldr	r3, [r7, #16]
 8003abe:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	681a      	ldr	r2, [r3, #0]
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	f042 0216 	orr.w	r2, r2, #22
 8003ace:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	d007      	beq.n	8003ae8 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	681a      	ldr	r2, [r3, #0]
 8003ade:	68fb      	ldr	r3, [r7, #12]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	f042 0208 	orr.w	r2, r2, #8
 8003ae6:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	681a      	ldr	r2, [r3, #0]
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	f042 0201 	orr.w	r2, r2, #1
 8003af6:	601a      	str	r2, [r3, #0]
 8003af8:	e005      	b.n	8003b06 <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	2200      	movs	r2, #0
 8003afe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003b02:	2302      	movs	r3, #2
 8003b04:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8003b06:	7dfb      	ldrb	r3, [r7, #23]
}
 8003b08:	4618      	mov	r0, r3
 8003b0a:	3718      	adds	r7, #24
 8003b0c:	46bd      	mov	sp, r7
 8003b0e:	bd80      	pop	{r7, pc}

08003b10 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003b10:	b580      	push	{r7, lr}
 8003b12:	b086      	sub	sp, #24
 8003b14:	af00      	add	r7, sp, #0
 8003b16:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003b18:	2300      	movs	r3, #0
 8003b1a:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003b1c:	4b8e      	ldr	r3, [pc, #568]	@ (8003d58 <HAL_DMA_IRQHandler+0x248>)
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	4a8e      	ldr	r2, [pc, #568]	@ (8003d5c <HAL_DMA_IRQHandler+0x24c>)
 8003b22:	fba2 2303 	umull	r2, r3, r2, r3
 8003b26:	0a9b      	lsrs	r3, r3, #10
 8003b28:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b2e:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003b30:	693b      	ldr	r3, [r7, #16]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b3a:	2208      	movs	r2, #8
 8003b3c:	409a      	lsls	r2, r3
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	4013      	ands	r3, r2
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d01a      	beq.n	8003b7c <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f003 0304 	and.w	r3, r3, #4
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d013      	beq.n	8003b7c <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	681a      	ldr	r2, [r3, #0]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f022 0204 	bic.w	r2, r2, #4
 8003b62:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b68:	2208      	movs	r2, #8
 8003b6a:	409a      	lsls	r2, r3
 8003b6c:	693b      	ldr	r3, [r7, #16]
 8003b6e:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b74:	f043 0201 	orr.w	r2, r3, #1
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b80:	2201      	movs	r2, #1
 8003b82:	409a      	lsls	r2, r3
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	4013      	ands	r3, r2
 8003b88:	2b00      	cmp	r3, #0
 8003b8a:	d012      	beq.n	8003bb2 <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	695b      	ldr	r3, [r3, #20]
 8003b92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d00b      	beq.n	8003bb2 <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b9e:	2201      	movs	r2, #1
 8003ba0:	409a      	lsls	r2, r3
 8003ba2:	693b      	ldr	r3, [r7, #16]
 8003ba4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003baa:	f043 0202 	orr.w	r2, r3, #2
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bb6:	2204      	movs	r2, #4
 8003bb8:	409a      	lsls	r2, r3
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	4013      	ands	r3, r2
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d012      	beq.n	8003be8 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	f003 0302 	and.w	r3, r3, #2
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d00b      	beq.n	8003be8 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bd4:	2204      	movs	r2, #4
 8003bd6:	409a      	lsls	r2, r3
 8003bd8:	693b      	ldr	r3, [r7, #16]
 8003bda:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003be0:	f043 0204 	orr.w	r2, r3, #4
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bec:	2210      	movs	r2, #16
 8003bee:	409a      	lsls	r2, r3
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	4013      	ands	r3, r2
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d043      	beq.n	8003c80 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	f003 0308 	and.w	r3, r3, #8
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d03c      	beq.n	8003c80 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c0a:	2210      	movs	r2, #16
 8003c0c:	409a      	lsls	r2, r3
 8003c0e:	693b      	ldr	r3, [r7, #16]
 8003c10:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	d018      	beq.n	8003c52 <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d108      	bne.n	8003c40 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c32:	2b00      	cmp	r3, #0
 8003c34:	d024      	beq.n	8003c80 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c3a:	6878      	ldr	r0, [r7, #4]
 8003c3c:	4798      	blx	r3
 8003c3e:	e01f      	b.n	8003c80 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d01b      	beq.n	8003c80 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c4c:	6878      	ldr	r0, [r7, #4]
 8003c4e:	4798      	blx	r3
 8003c50:	e016      	b.n	8003c80 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	d107      	bne.n	8003c70 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	681a      	ldr	r2, [r3, #0]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	f022 0208 	bic.w	r2, r2, #8
 8003c6e:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d003      	beq.n	8003c80 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c7c:	6878      	ldr	r0, [r7, #4]
 8003c7e:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c84:	2220      	movs	r2, #32
 8003c86:	409a      	lsls	r2, r3
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	4013      	ands	r3, r2
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	f000 808f 	beq.w	8003db0 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	f003 0310 	and.w	r3, r3, #16
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	f000 8087 	beq.w	8003db0 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ca6:	2220      	movs	r2, #32
 8003ca8:	409a      	lsls	r2, r3
 8003caa:	693b      	ldr	r3, [r7, #16]
 8003cac:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003cb4:	b2db      	uxtb	r3, r3
 8003cb6:	2b05      	cmp	r3, #5
 8003cb8:	d136      	bne.n	8003d28 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	681a      	ldr	r2, [r3, #0]
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	f022 0216 	bic.w	r2, r2, #22
 8003cc8:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	695a      	ldr	r2, [r3, #20]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003cd8:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d103      	bne.n	8003cea <HAL_DMA_IRQHandler+0x1da>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d007      	beq.n	8003cfa <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	681a      	ldr	r2, [r3, #0]
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f022 0208 	bic.w	r2, r2, #8
 8003cf8:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cfe:	223f      	movs	r2, #63	@ 0x3f
 8003d00:	409a      	lsls	r2, r3
 8003d02:	693b      	ldr	r3, [r7, #16]
 8003d04:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	2201      	movs	r2, #1
 8003d0a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	2200      	movs	r2, #0
 8003d12:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003d1a:	2b00      	cmp	r3, #0
 8003d1c:	d07e      	beq.n	8003e1c <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003d22:	6878      	ldr	r0, [r7, #4]
 8003d24:	4798      	blx	r3
        }
        return;
 8003d26:	e079      	b.n	8003e1c <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d01d      	beq.n	8003d72 <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d10d      	bne.n	8003d60 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d031      	beq.n	8003db0 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003d50:	6878      	ldr	r0, [r7, #4]
 8003d52:	4798      	blx	r3
 8003d54:	e02c      	b.n	8003db0 <HAL_DMA_IRQHandler+0x2a0>
 8003d56:	bf00      	nop
 8003d58:	20000a18 	.word	0x20000a18
 8003d5c:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d023      	beq.n	8003db0 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d6c:	6878      	ldr	r0, [r7, #4]
 8003d6e:	4798      	blx	r3
 8003d70:	e01e      	b.n	8003db0 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d10f      	bne.n	8003da0 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	681a      	ldr	r2, [r3, #0]
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	f022 0210 	bic.w	r2, r2, #16
 8003d8e:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2201      	movs	r2, #1
 8003d94:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	2200      	movs	r2, #0
 8003d9c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d003      	beq.n	8003db0 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003dac:	6878      	ldr	r0, [r7, #4]
 8003dae:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d032      	beq.n	8003e1e <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003dbc:	f003 0301 	and.w	r3, r3, #1
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d022      	beq.n	8003e0a <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	2205      	movs	r2, #5
 8003dc8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	681a      	ldr	r2, [r3, #0]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	f022 0201 	bic.w	r2, r2, #1
 8003dda:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003ddc:	68bb      	ldr	r3, [r7, #8]
 8003dde:	3301      	adds	r3, #1
 8003de0:	60bb      	str	r3, [r7, #8]
 8003de2:	697a      	ldr	r2, [r7, #20]
 8003de4:	429a      	cmp	r2, r3
 8003de6:	d307      	bcc.n	8003df8 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	f003 0301 	and.w	r3, r3, #1
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d1f2      	bne.n	8003ddc <HAL_DMA_IRQHandler+0x2cc>
 8003df6:	e000      	b.n	8003dfa <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003df8:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	2201      	movs	r2, #1
 8003dfe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	2200      	movs	r2, #0
 8003e06:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d005      	beq.n	8003e1e <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003e16:	6878      	ldr	r0, [r7, #4]
 8003e18:	4798      	blx	r3
 8003e1a:	e000      	b.n	8003e1e <HAL_DMA_IRQHandler+0x30e>
        return;
 8003e1c:	bf00      	nop
    }
  }
}
 8003e1e:	3718      	adds	r7, #24
 8003e20:	46bd      	mov	sp, r7
 8003e22:	bd80      	pop	{r7, pc}

08003e24 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003e24:	b480      	push	{r7}
 8003e26:	b085      	sub	sp, #20
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	60f8      	str	r0, [r7, #12]
 8003e2c:	60b9      	str	r1, [r7, #8]
 8003e2e:	607a      	str	r2, [r7, #4]
 8003e30:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	681a      	ldr	r2, [r3, #0]
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003e40:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	683a      	ldr	r2, [r7, #0]
 8003e48:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	689b      	ldr	r3, [r3, #8]
 8003e4e:	2b40      	cmp	r3, #64	@ 0x40
 8003e50:	d108      	bne.n	8003e64 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	687a      	ldr	r2, [r7, #4]
 8003e58:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	68ba      	ldr	r2, [r7, #8]
 8003e60:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003e62:	e007      	b.n	8003e74 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	68ba      	ldr	r2, [r7, #8]
 8003e6a:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	687a      	ldr	r2, [r7, #4]
 8003e72:	60da      	str	r2, [r3, #12]
}
 8003e74:	bf00      	nop
 8003e76:	3714      	adds	r7, #20
 8003e78:	46bd      	mov	sp, r7
 8003e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e7e:	4770      	bx	lr

08003e80 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003e80:	b480      	push	{r7}
 8003e82:	b085      	sub	sp, #20
 8003e84:	af00      	add	r7, sp, #0
 8003e86:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	b2db      	uxtb	r3, r3
 8003e8e:	3b10      	subs	r3, #16
 8003e90:	4a14      	ldr	r2, [pc, #80]	@ (8003ee4 <DMA_CalcBaseAndBitshift+0x64>)
 8003e92:	fba2 2303 	umull	r2, r3, r2, r3
 8003e96:	091b      	lsrs	r3, r3, #4
 8003e98:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e9a:	4a13      	ldr	r2, [pc, #76]	@ (8003ee8 <DMA_CalcBaseAndBitshift+0x68>)
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	4413      	add	r3, r2
 8003ea0:	781b      	ldrb	r3, [r3, #0]
 8003ea2:	461a      	mov	r2, r3
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	2b03      	cmp	r3, #3
 8003eac:	d909      	bls.n	8003ec2 <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003eb6:	f023 0303 	bic.w	r3, r3, #3
 8003eba:	1d1a      	adds	r2, r3, #4
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	659a      	str	r2, [r3, #88]	@ 0x58
 8003ec0:	e007      	b.n	8003ed2 <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003eca:	f023 0303 	bic.w	r3, r3, #3
 8003ece:	687a      	ldr	r2, [r7, #4]
 8003ed0:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003ed6:	4618      	mov	r0, r3
 8003ed8:	3714      	adds	r7, #20
 8003eda:	46bd      	mov	sp, r7
 8003edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ee0:	4770      	bx	lr
 8003ee2:	bf00      	nop
 8003ee4:	aaaaaaab 	.word	0xaaaaaaab
 8003ee8:	0803ae7c 	.word	0x0803ae7c

08003eec <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003eec:	b480      	push	{r7}
 8003eee:	b085      	sub	sp, #20
 8003ef0:	af00      	add	r7, sp, #0
 8003ef2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003ef4:	2300      	movs	r3, #0
 8003ef6:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003efc:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	699b      	ldr	r3, [r3, #24]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d11f      	bne.n	8003f46 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003f06:	68bb      	ldr	r3, [r7, #8]
 8003f08:	2b03      	cmp	r3, #3
 8003f0a:	d856      	bhi.n	8003fba <DMA_CheckFifoParam+0xce>
 8003f0c:	a201      	add	r2, pc, #4	@ (adr r2, 8003f14 <DMA_CheckFifoParam+0x28>)
 8003f0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f12:	bf00      	nop
 8003f14:	08003f25 	.word	0x08003f25
 8003f18:	08003f37 	.word	0x08003f37
 8003f1c:	08003f25 	.word	0x08003f25
 8003f20:	08003fbb 	.word	0x08003fbb
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f28:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d046      	beq.n	8003fbe <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003f30:	2301      	movs	r3, #1
 8003f32:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f34:	e043      	b.n	8003fbe <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f3a:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f3e:	d140      	bne.n	8003fc2 <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003f40:	2301      	movs	r3, #1
 8003f42:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f44:	e03d      	b.n	8003fc2 <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	699b      	ldr	r3, [r3, #24]
 8003f4a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003f4e:	d121      	bne.n	8003f94 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003f50:	68bb      	ldr	r3, [r7, #8]
 8003f52:	2b03      	cmp	r3, #3
 8003f54:	d837      	bhi.n	8003fc6 <DMA_CheckFifoParam+0xda>
 8003f56:	a201      	add	r2, pc, #4	@ (adr r2, 8003f5c <DMA_CheckFifoParam+0x70>)
 8003f58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f5c:	08003f6d 	.word	0x08003f6d
 8003f60:	08003f73 	.word	0x08003f73
 8003f64:	08003f6d 	.word	0x08003f6d
 8003f68:	08003f85 	.word	0x08003f85
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003f6c:	2301      	movs	r3, #1
 8003f6e:	73fb      	strb	r3, [r7, #15]
      break;
 8003f70:	e030      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f76:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	d025      	beq.n	8003fca <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003f7e:	2301      	movs	r3, #1
 8003f80:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f82:	e022      	b.n	8003fca <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f88:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f8c:	d11f      	bne.n	8003fce <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003f8e:	2301      	movs	r3, #1
 8003f90:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003f92:	e01c      	b.n	8003fce <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003f94:	68bb      	ldr	r3, [r7, #8]
 8003f96:	2b02      	cmp	r3, #2
 8003f98:	d903      	bls.n	8003fa2 <DMA_CheckFifoParam+0xb6>
 8003f9a:	68bb      	ldr	r3, [r7, #8]
 8003f9c:	2b03      	cmp	r3, #3
 8003f9e:	d003      	beq.n	8003fa8 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003fa0:	e018      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003fa2:	2301      	movs	r3, #1
 8003fa4:	73fb      	strb	r3, [r7, #15]
      break;
 8003fa6:	e015      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fac:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d00e      	beq.n	8003fd2 <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003fb4:	2301      	movs	r3, #1
 8003fb6:	73fb      	strb	r3, [r7, #15]
      break;
 8003fb8:	e00b      	b.n	8003fd2 <DMA_CheckFifoParam+0xe6>
      break;
 8003fba:	bf00      	nop
 8003fbc:	e00a      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;
 8003fbe:	bf00      	nop
 8003fc0:	e008      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;
 8003fc2:	bf00      	nop
 8003fc4:	e006      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;
 8003fc6:	bf00      	nop
 8003fc8:	e004      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;
 8003fca:	bf00      	nop
 8003fcc:	e002      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;   
 8003fce:	bf00      	nop
 8003fd0:	e000      	b.n	8003fd4 <DMA_CheckFifoParam+0xe8>
      break;
 8003fd2:	bf00      	nop
    }
  } 
  
  return status; 
 8003fd4:	7bfb      	ldrb	r3, [r7, #15]
}
 8003fd6:	4618      	mov	r0, r3
 8003fd8:	3714      	adds	r7, #20
 8003fda:	46bd      	mov	sp, r7
 8003fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe0:	4770      	bx	lr
 8003fe2:	bf00      	nop

08003fe4 <HAL_FLASH_Program>:
  * @param  Data specifies the data to be programmed
  *
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
{
 8003fe4:	b580      	push	{r7, lr}
 8003fe6:	b086      	sub	sp, #24
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	60f8      	str	r0, [r7, #12]
 8003fec:	60b9      	str	r1, [r7, #8]
 8003fee:	e9c7 2300 	strd	r2, r3, [r7]
  HAL_StatusTypeDef status = HAL_ERROR;
 8003ff2:	2301      	movs	r3, #1
 8003ff4:	75fb      	strb	r3, [r7, #23]

  /* Process Locked */
  __HAL_LOCK(&pFlash);
 8003ff6:	4b23      	ldr	r3, [pc, #140]	@ (8004084 <HAL_FLASH_Program+0xa0>)
 8003ff8:	7e1b      	ldrb	r3, [r3, #24]
 8003ffa:	2b01      	cmp	r3, #1
 8003ffc:	d101      	bne.n	8004002 <HAL_FLASH_Program+0x1e>
 8003ffe:	2302      	movs	r3, #2
 8004000:	e03b      	b.n	800407a <HAL_FLASH_Program+0x96>
 8004002:	4b20      	ldr	r3, [pc, #128]	@ (8004084 <HAL_FLASH_Program+0xa0>)
 8004004:	2201      	movs	r2, #1
 8004006:	761a      	strb	r2, [r3, #24]

  /* Check the parameters */
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8004008:	f24c 3050 	movw	r0, #50000	@ 0xc350
 800400c:	f000 f870 	bl	80040f0 <FLASH_WaitForLastOperation>
 8004010:	4603      	mov	r3, r0
 8004012:	75fb      	strb	r3, [r7, #23]

  if (status == HAL_OK)
 8004014:	7dfb      	ldrb	r3, [r7, #23]
 8004016:	2b00      	cmp	r3, #0
 8004018:	d12b      	bne.n	8004072 <HAL_FLASH_Program+0x8e>
  {
    if (TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	2b00      	cmp	r3, #0
 800401e:	d105      	bne.n	800402c <HAL_FLASH_Program+0x48>
    {
      /*Program byte (8-bit) at a specified address.*/
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8004020:	783b      	ldrb	r3, [r7, #0]
 8004022:	4619      	mov	r1, r3
 8004024:	68b8      	ldr	r0, [r7, #8]
 8004026:	f000 f91b 	bl	8004260 <FLASH_Program_Byte>
 800402a:	e016      	b.n	800405a <HAL_FLASH_Program+0x76>
    }
    else if (TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	2b01      	cmp	r3, #1
 8004030:	d105      	bne.n	800403e <HAL_FLASH_Program+0x5a>
    {
      /*Program halfword (16-bit) at a specified address.*/
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8004032:	883b      	ldrh	r3, [r7, #0]
 8004034:	4619      	mov	r1, r3
 8004036:	68b8      	ldr	r0, [r7, #8]
 8004038:	f000 f8ee 	bl	8004218 <FLASH_Program_HalfWord>
 800403c:	e00d      	b.n	800405a <HAL_FLASH_Program+0x76>
    }
    else if (TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	2b02      	cmp	r3, #2
 8004042:	d105      	bne.n	8004050 <HAL_FLASH_Program+0x6c>
    {
      /*Program word (32-bit) at a specified address.*/
      FLASH_Program_Word(Address, (uint32_t) Data);
 8004044:	683b      	ldr	r3, [r7, #0]
 8004046:	4619      	mov	r1, r3
 8004048:	68b8      	ldr	r0, [r7, #8]
 800404a:	f000 f8c3 	bl	80041d4 <FLASH_Program_Word>
 800404e:	e004      	b.n	800405a <HAL_FLASH_Program+0x76>
    }
    else
    {
      /*Program double word (64-bit) at a specified address.*/
      FLASH_Program_DoubleWord(Address, Data);
 8004050:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004054:	68b8      	ldr	r0, [r7, #8]
 8004056:	f000 f88b 	bl	8004170 <FLASH_Program_DoubleWord>
    }

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800405a:	f24c 3050 	movw	r0, #50000	@ 0xc350
 800405e:	f000 f847 	bl	80040f0 <FLASH_WaitForLastOperation>
 8004062:	4603      	mov	r3, r0
 8004064:	75fb      	strb	r3, [r7, #23]

    /* If the program operation is completed, disable the PG Bit */
    FLASH->CR &= (~FLASH_CR_PG);
 8004066:	4b08      	ldr	r3, [pc, #32]	@ (8004088 <HAL_FLASH_Program+0xa4>)
 8004068:	691b      	ldr	r3, [r3, #16]
 800406a:	4a07      	ldr	r2, [pc, #28]	@ (8004088 <HAL_FLASH_Program+0xa4>)
 800406c:	f023 0301 	bic.w	r3, r3, #1
 8004070:	6113      	str	r3, [r2, #16]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
 8004072:	4b04      	ldr	r3, [pc, #16]	@ (8004084 <HAL_FLASH_Program+0xa0>)
 8004074:	2200      	movs	r2, #0
 8004076:	761a      	strb	r2, [r3, #24]

  return status;
 8004078:	7dfb      	ldrb	r3, [r7, #23]
}
 800407a:	4618      	mov	r0, r3
 800407c:	3718      	adds	r7, #24
 800407e:	46bd      	mov	sp, r7
 8004080:	bd80      	pop	{r7, pc}
 8004082:	bf00      	nop
 8004084:	2001d888 	.word	0x2001d888
 8004088:	40023c00 	.word	0x40023c00

0800408c <HAL_FLASH_Unlock>:
/**
  * @brief  Unlock the FLASH control register access
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Unlock(void)
{
 800408c:	b480      	push	{r7}
 800408e:	b083      	sub	sp, #12
 8004090:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status = HAL_OK;
 8004092:	2300      	movs	r3, #0
 8004094:	71fb      	strb	r3, [r7, #7]

  if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8004096:	4b0b      	ldr	r3, [pc, #44]	@ (80040c4 <HAL_FLASH_Unlock+0x38>)
 8004098:	691b      	ldr	r3, [r3, #16]
 800409a:	2b00      	cmp	r3, #0
 800409c:	da0b      	bge.n	80040b6 <HAL_FLASH_Unlock+0x2a>
  {
    /* Authorize the FLASH Registers access */
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800409e:	4b09      	ldr	r3, [pc, #36]	@ (80040c4 <HAL_FLASH_Unlock+0x38>)
 80040a0:	4a09      	ldr	r2, [pc, #36]	@ (80040c8 <HAL_FLASH_Unlock+0x3c>)
 80040a2:	605a      	str	r2, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 80040a4:	4b07      	ldr	r3, [pc, #28]	@ (80040c4 <HAL_FLASH_Unlock+0x38>)
 80040a6:	4a09      	ldr	r2, [pc, #36]	@ (80040cc <HAL_FLASH_Unlock+0x40>)
 80040a8:	605a      	str	r2, [r3, #4]

    /* Verify Flash is unlocked */
    if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 80040aa:	4b06      	ldr	r3, [pc, #24]	@ (80040c4 <HAL_FLASH_Unlock+0x38>)
 80040ac:	691b      	ldr	r3, [r3, #16]
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	da01      	bge.n	80040b6 <HAL_FLASH_Unlock+0x2a>
    {
      status = HAL_ERROR;
 80040b2:	2301      	movs	r3, #1
 80040b4:	71fb      	strb	r3, [r7, #7]
    }
  }

  return status;
 80040b6:	79fb      	ldrb	r3, [r7, #7]
}
 80040b8:	4618      	mov	r0, r3
 80040ba:	370c      	adds	r7, #12
 80040bc:	46bd      	mov	sp, r7
 80040be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c2:	4770      	bx	lr
 80040c4:	40023c00 	.word	0x40023c00
 80040c8:	45670123 	.word	0x45670123
 80040cc:	cdef89ab 	.word	0xcdef89ab

080040d0 <HAL_FLASH_Lock>:
/**
  * @brief  Locks the FLASH control register access
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Lock(void)
{
 80040d0:	b480      	push	{r7}
 80040d2:	af00      	add	r7, sp, #0
  /* Set the LOCK Bit to lock the FLASH Registers access */
  FLASH->CR |= FLASH_CR_LOCK;
 80040d4:	4b05      	ldr	r3, [pc, #20]	@ (80040ec <HAL_FLASH_Lock+0x1c>)
 80040d6:	691b      	ldr	r3, [r3, #16]
 80040d8:	4a04      	ldr	r2, [pc, #16]	@ (80040ec <HAL_FLASH_Lock+0x1c>)
 80040da:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80040de:	6113      	str	r3, [r2, #16]

  return HAL_OK;
 80040e0:	2300      	movs	r3, #0
}
 80040e2:	4618      	mov	r0, r3
 80040e4:	46bd      	mov	sp, r7
 80040e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ea:	4770      	bx	lr
 80040ec:	40023c00 	.word	0x40023c00

080040f0 <FLASH_WaitForLastOperation>:
  * @brief  Wait for a FLASH operation to complete.
  * @param  Timeout maximum flash operationtimeout
  * @retval HAL Status
  */
HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
{
 80040f0:	b580      	push	{r7, lr}
 80040f2:	b084      	sub	sp, #16
 80040f4:	af00      	add	r7, sp, #0
 80040f6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80040f8:	2300      	movs	r3, #0
 80040fa:	60fb      	str	r3, [r7, #12]

  /* Clear Error Code */
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80040fc:	4b1a      	ldr	r3, [pc, #104]	@ (8004168 <FLASH_WaitForLastOperation+0x78>)
 80040fe:	2200      	movs	r2, #0
 8004100:	61da      	str	r2, [r3, #28]

  /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
     Even if the FLASH operation fails, the BUSY flag will be reset and an error
     flag will be set */
  /* Get tick */
  tickstart = HAL_GetTick();
 8004102:	f7fe fd77 	bl	8002bf4 <HAL_GetTick>
 8004106:	60f8      	str	r0, [r7, #12]

  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET)
 8004108:	e010      	b.n	800412c <FLASH_WaitForLastOperation+0x3c>
  {
    if (Timeout != HAL_MAX_DELAY)
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004110:	d00c      	beq.n	800412c <FLASH_WaitForLastOperation+0x3c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	2b00      	cmp	r3, #0
 8004116:	d007      	beq.n	8004128 <FLASH_WaitForLastOperation+0x38>
 8004118:	f7fe fd6c 	bl	8002bf4 <HAL_GetTick>
 800411c:	4602      	mov	r2, r0
 800411e:	68fb      	ldr	r3, [r7, #12]
 8004120:	1ad3      	subs	r3, r2, r3
 8004122:	687a      	ldr	r2, [r7, #4]
 8004124:	429a      	cmp	r2, r3
 8004126:	d201      	bcs.n	800412c <FLASH_WaitForLastOperation+0x3c>
      {
        return HAL_TIMEOUT;
 8004128:	2303      	movs	r3, #3
 800412a:	e019      	b.n	8004160 <FLASH_WaitForLastOperation+0x70>
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET)
 800412c:	4b0f      	ldr	r3, [pc, #60]	@ (800416c <FLASH_WaitForLastOperation+0x7c>)
 800412e:	68db      	ldr	r3, [r3, #12]
 8004130:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004134:	2b00      	cmp	r3, #0
 8004136:	d1e8      	bne.n	800410a <FLASH_WaitForLastOperation+0x1a>
      }
    }
  }

  /* Check FLASH End of Operation flag  */
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8004138:	4b0c      	ldr	r3, [pc, #48]	@ (800416c <FLASH_WaitForLastOperation+0x7c>)
 800413a:	68db      	ldr	r3, [r3, #12]
 800413c:	f003 0301 	and.w	r3, r3, #1
 8004140:	2b00      	cmp	r3, #0
 8004142:	d002      	beq.n	800414a <FLASH_WaitForLastOperation+0x5a>
  {
    /* Clear FLASH End of Operation pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8004144:	4b09      	ldr	r3, [pc, #36]	@ (800416c <FLASH_WaitForLastOperation+0x7c>)
 8004146:	2201      	movs	r2, #1
 8004148:	60da      	str	r2, [r3, #12]
  }
#if defined(FLASH_SR_RDERR)
  if (__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
#else
  if (__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800414a:	4b08      	ldr	r3, [pc, #32]	@ (800416c <FLASH_WaitForLastOperation+0x7c>)
 800414c:	68db      	ldr	r3, [r3, #12]
 800414e:	f003 03f2 	and.w	r3, r3, #242	@ 0xf2
 8004152:	2b00      	cmp	r3, #0
 8004154:	d003      	beq.n	800415e <FLASH_WaitForLastOperation+0x6e>
                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR)) != RESET)
#endif /* FLASH_SR_RDERR */
  {
    /*Save the error code*/
    FLASH_SetErrorCode();
 8004156:	f000 f8a5 	bl	80042a4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800415a:	2301      	movs	r3, #1
 800415c:	e000      	b.n	8004160 <FLASH_WaitForLastOperation+0x70>
  }

  /* If there is no error flag set */
  return HAL_OK;
 800415e:	2300      	movs	r3, #0

}
 8004160:	4618      	mov	r0, r3
 8004162:	3710      	adds	r7, #16
 8004164:	46bd      	mov	sp, r7
 8004166:	bd80      	pop	{r7, pc}
 8004168:	2001d888 	.word	0x2001d888
 800416c:	40023c00 	.word	0x40023c00

08004170 <FLASH_Program_DoubleWord>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
{
 8004170:	b480      	push	{r7}
 8004172:	b085      	sub	sp, #20
 8004174:	af00      	add	r7, sp, #0
 8004176:	60f8      	str	r0, [r7, #12]
 8004178:	e9c7 2300 	strd	r2, r3, [r7]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800417c:	4b14      	ldr	r3, [pc, #80]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 800417e:	691b      	ldr	r3, [r3, #16]
 8004180:	4a13      	ldr	r2, [pc, #76]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 8004182:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004186:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8004188:	4b11      	ldr	r3, [pc, #68]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 800418a:	691b      	ldr	r3, [r3, #16]
 800418c:	4a10      	ldr	r2, [pc, #64]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 800418e:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8004192:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004194:	4b0e      	ldr	r3, [pc, #56]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 8004196:	691b      	ldr	r3, [r3, #16]
 8004198:	4a0d      	ldr	r2, [pc, #52]	@ (80041d0 <FLASH_Program_DoubleWord+0x60>)
 800419a:	f043 0301 	orr.w	r3, r3, #1
 800419e:	6113      	str	r3, [r2, #16]

  /* Program first word */
  *(__IO uint32_t *)Address = (uint32_t)Data;
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	683a      	ldr	r2, [r7, #0]
 80041a4:	601a      	str	r2, [r3, #0]
  __ASM volatile ("isb 0xF":::"memory");
 80041a6:	f3bf 8f6f 	isb	sy
}
 80041aa:	bf00      	nop
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(__IO uint32_t *)(Address + 4) = (uint32_t)(Data >> 32);
 80041ac:	e9d7 0100 	ldrd	r0, r1, [r7]
 80041b0:	f04f 0200 	mov.w	r2, #0
 80041b4:	f04f 0300 	mov.w	r3, #0
 80041b8:	000a      	movs	r2, r1
 80041ba:	2300      	movs	r3, #0
 80041bc:	68f9      	ldr	r1, [r7, #12]
 80041be:	3104      	adds	r1, #4
 80041c0:	4613      	mov	r3, r2
 80041c2:	600b      	str	r3, [r1, #0]
}
 80041c4:	bf00      	nop
 80041c6:	3714      	adds	r7, #20
 80041c8:	46bd      	mov	sp, r7
 80041ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ce:	4770      	bx	lr
 80041d0:	40023c00 	.word	0x40023c00

080041d4 <FLASH_Program_Word>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
{
 80041d4:	b480      	push	{r7}
 80041d6:	b083      	sub	sp, #12
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80041de:	4b0d      	ldr	r3, [pc, #52]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041e0:	691b      	ldr	r3, [r3, #16]
 80041e2:	4a0c      	ldr	r2, [pc, #48]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041e4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80041e8:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_WORD;
 80041ea:	4b0a      	ldr	r3, [pc, #40]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041ec:	691b      	ldr	r3, [r3, #16]
 80041ee:	4a09      	ldr	r2, [pc, #36]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041f0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80041f4:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 80041f6:	4b07      	ldr	r3, [pc, #28]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041f8:	691b      	ldr	r3, [r3, #16]
 80041fa:	4a06      	ldr	r2, [pc, #24]	@ (8004214 <FLASH_Program_Word+0x40>)
 80041fc:	f043 0301 	orr.w	r3, r3, #1
 8004200:	6113      	str	r3, [r2, #16]

  *(__IO uint32_t *)Address = Data;
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	683a      	ldr	r2, [r7, #0]
 8004206:	601a      	str	r2, [r3, #0]
}
 8004208:	bf00      	nop
 800420a:	370c      	adds	r7, #12
 800420c:	46bd      	mov	sp, r7
 800420e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004212:	4770      	bx	lr
 8004214:	40023c00 	.word	0x40023c00

08004218 <FLASH_Program_HalfWord>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
{
 8004218:	b480      	push	{r7}
 800421a:	b083      	sub	sp, #12
 800421c:	af00      	add	r7, sp, #0
 800421e:	6078      	str	r0, [r7, #4]
 8004220:	460b      	mov	r3, r1
 8004222:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004224:	4b0d      	ldr	r3, [pc, #52]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 8004226:	691b      	ldr	r3, [r3, #16]
 8004228:	4a0c      	ldr	r2, [pc, #48]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 800422a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800422e:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8004230:	4b0a      	ldr	r3, [pc, #40]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 8004232:	691b      	ldr	r3, [r3, #16]
 8004234:	4a09      	ldr	r2, [pc, #36]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 8004236:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800423a:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 800423c:	4b07      	ldr	r3, [pc, #28]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 800423e:	691b      	ldr	r3, [r3, #16]
 8004240:	4a06      	ldr	r2, [pc, #24]	@ (800425c <FLASH_Program_HalfWord+0x44>)
 8004242:	f043 0301 	orr.w	r3, r3, #1
 8004246:	6113      	str	r3, [r2, #16]

  *(__IO uint16_t *)Address = Data;
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	887a      	ldrh	r2, [r7, #2]
 800424c:	801a      	strh	r2, [r3, #0]
}
 800424e:	bf00      	nop
 8004250:	370c      	adds	r7, #12
 8004252:	46bd      	mov	sp, r7
 8004254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004258:	4770      	bx	lr
 800425a:	bf00      	nop
 800425c:	40023c00 	.word	0x40023c00

08004260 <FLASH_Program_Byte>:
  * @param  Address specifies the address to be programmed.
  * @param  Data specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
{
 8004260:	b480      	push	{r7}
 8004262:	b083      	sub	sp, #12
 8004264:	af00      	add	r7, sp, #0
 8004266:	6078      	str	r0, [r7, #4]
 8004268:	460b      	mov	r3, r1
 800426a:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800426c:	4b0c      	ldr	r3, [pc, #48]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 800426e:	691b      	ldr	r3, [r3, #16]
 8004270:	4a0b      	ldr	r2, [pc, #44]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 8004272:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004276:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8004278:	4b09      	ldr	r3, [pc, #36]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 800427a:	4a09      	ldr	r2, [pc, #36]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 800427c:	691b      	ldr	r3, [r3, #16]
 800427e:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004280:	4b07      	ldr	r3, [pc, #28]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 8004282:	691b      	ldr	r3, [r3, #16]
 8004284:	4a06      	ldr	r2, [pc, #24]	@ (80042a0 <FLASH_Program_Byte+0x40>)
 8004286:	f043 0301 	orr.w	r3, r3, #1
 800428a:	6113      	str	r3, [r2, #16]

  *(__IO uint8_t *)Address = Data;
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	78fa      	ldrb	r2, [r7, #3]
 8004290:	701a      	strb	r2, [r3, #0]
}
 8004292:	bf00      	nop
 8004294:	370c      	adds	r7, #12
 8004296:	46bd      	mov	sp, r7
 8004298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800429c:	4770      	bx	lr
 800429e:	bf00      	nop
 80042a0:	40023c00 	.word	0x40023c00

080042a4 <FLASH_SetErrorCode>:
/**
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{
 80042a4:	b480      	push	{r7}
 80042a6:	af00      	add	r7, sp, #0
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 80042a8:	4b27      	ldr	r3, [pc, #156]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042aa:	68db      	ldr	r3, [r3, #12]
 80042ac:	f003 0310 	and.w	r3, r3, #16
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	d008      	beq.n	80042c6 <FLASH_SetErrorCode+0x22>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 80042b4:	4b25      	ldr	r3, [pc, #148]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042b6:	69db      	ldr	r3, [r3, #28]
 80042b8:	f043 0310 	orr.w	r3, r3, #16
 80042bc:	4a23      	ldr	r2, [pc, #140]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042be:	61d3      	str	r3, [r2, #28]

    /* Clear FLASH write protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 80042c0:	4b21      	ldr	r3, [pc, #132]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042c2:	2210      	movs	r2, #16
 80042c4:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 80042c6:	4b20      	ldr	r3, [pc, #128]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042c8:	68db      	ldr	r3, [r3, #12]
 80042ca:	f003 0320 	and.w	r3, r3, #32
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d008      	beq.n	80042e4 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 80042d2:	4b1e      	ldr	r3, [pc, #120]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042d4:	69db      	ldr	r3, [r3, #28]
 80042d6:	f043 0308 	orr.w	r3, r3, #8
 80042da:	4a1c      	ldr	r2, [pc, #112]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042dc:	61d3      	str	r3, [r2, #28]

    /* Clear FLASH Programming alignment error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 80042de:	4b1a      	ldr	r3, [pc, #104]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042e0:	2220      	movs	r2, #32
 80042e2:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 80042e4:	4b18      	ldr	r3, [pc, #96]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042e6:	68db      	ldr	r3, [r3, #12]
 80042e8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d008      	beq.n	8004302 <FLASH_SetErrorCode+0x5e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 80042f0:	4b16      	ldr	r3, [pc, #88]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042f2:	69db      	ldr	r3, [r3, #28]
 80042f4:	f043 0304 	orr.w	r3, r3, #4
 80042f8:	4a14      	ldr	r2, [pc, #80]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 80042fa:	61d3      	str	r3, [r2, #28]

    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 80042fc:	4b12      	ldr	r3, [pc, #72]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 80042fe:	2240      	movs	r2, #64	@ 0x40
 8004300:	60da      	str	r2, [r3, #12]
  }

  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8004302:	4b11      	ldr	r3, [pc, #68]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 8004304:	68db      	ldr	r3, [r3, #12]
 8004306:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800430a:	2b00      	cmp	r3, #0
 800430c:	d008      	beq.n	8004320 <FLASH_SetErrorCode+0x7c>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800430e:	4b0f      	ldr	r3, [pc, #60]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 8004310:	69db      	ldr	r3, [r3, #28]
 8004312:	f043 0302 	orr.w	r3, r3, #2
 8004316:	4a0d      	ldr	r2, [pc, #52]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 8004318:	61d3      	str	r3, [r2, #28]

    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800431a:	4b0b      	ldr	r3, [pc, #44]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 800431c:	2280      	movs	r2, #128	@ 0x80
 800431e:	60da      	str	r2, [r3, #12]

    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
  }
#endif /* FLASH_SR_RDERR */
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8004320:	4b09      	ldr	r3, [pc, #36]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 8004322:	68db      	ldr	r3, [r3, #12]
 8004324:	f003 0302 	and.w	r3, r3, #2
 8004328:	2b00      	cmp	r3, #0
 800432a:	d008      	beq.n	800433e <FLASH_SetErrorCode+0x9a>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800432c:	4b07      	ldr	r3, [pc, #28]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 800432e:	69db      	ldr	r3, [r3, #28]
 8004330:	f043 0320 	orr.w	r3, r3, #32
 8004334:	4a05      	ldr	r2, [pc, #20]	@ (800434c <FLASH_SetErrorCode+0xa8>)
 8004336:	61d3      	str	r3, [r2, #28]

    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8004338:	4b03      	ldr	r3, [pc, #12]	@ (8004348 <FLASH_SetErrorCode+0xa4>)
 800433a:	2202      	movs	r2, #2
 800433c:	60da      	str	r2, [r3, #12]
  }
}
 800433e:	bf00      	nop
 8004340:	46bd      	mov	sp, r7
 8004342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004346:	4770      	bx	lr
 8004348:	40023c00 	.word	0x40023c00
 800434c:	2001d888 	.word	0x2001d888

08004350 <HAL_FLASHEx_Erase>:
  *         (0xFFFFFFFFU means that all the sectors have been correctly erased)
  *
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
{
 8004350:	b580      	push	{r7, lr}
 8004352:	b084      	sub	sp, #16
 8004354:	af00      	add	r7, sp, #0
 8004356:	6078      	str	r0, [r7, #4]
 8004358:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_ERROR;
 800435a:	2301      	movs	r3, #1
 800435c:	73fb      	strb	r3, [r7, #15]
  uint32_t index = 0U;
 800435e:	2300      	movs	r3, #0
 8004360:	60bb      	str	r3, [r7, #8]

  /* Process Locked */
  __HAL_LOCK(&pFlash);
 8004362:	4b31      	ldr	r3, [pc, #196]	@ (8004428 <HAL_FLASHEx_Erase+0xd8>)
 8004364:	7e1b      	ldrb	r3, [r3, #24]
 8004366:	2b01      	cmp	r3, #1
 8004368:	d101      	bne.n	800436e <HAL_FLASHEx_Erase+0x1e>
 800436a:	2302      	movs	r3, #2
 800436c:	e058      	b.n	8004420 <HAL_FLASHEx_Erase+0xd0>
 800436e:	4b2e      	ldr	r3, [pc, #184]	@ (8004428 <HAL_FLASHEx_Erase+0xd8>)
 8004370:	2201      	movs	r2, #1
 8004372:	761a      	strb	r2, [r3, #24]

  /* Check the parameters */
  assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8004374:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8004378:	f7ff feba 	bl	80040f0 <FLASH_WaitForLastOperation>
 800437c:	4603      	mov	r3, r0
 800437e:	73fb      	strb	r3, [r7, #15]

  if (status == HAL_OK)
 8004380:	7bfb      	ldrb	r3, [r7, #15]
 8004382:	2b00      	cmp	r3, #0
 8004384:	d148      	bne.n	8004418 <HAL_FLASHEx_Erase+0xc8>
  {
    /*Initialization of SectorError variable*/
    *SectorError = 0xFFFFFFFFU;
 8004386:	683b      	ldr	r3, [r7, #0]
 8004388:	f04f 32ff 	mov.w	r2, #4294967295
 800438c:	601a      	str	r2, [r3, #0]

    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	2b01      	cmp	r3, #1
 8004394:	d115      	bne.n	80043c2 <HAL_FLASHEx_Erase+0x72>
    {
      /*Mass erase to be done*/
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	691b      	ldr	r3, [r3, #16]
 800439a:	b2da      	uxtb	r2, r3
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	685b      	ldr	r3, [r3, #4]
 80043a0:	4619      	mov	r1, r3
 80043a2:	4610      	mov	r0, r2
 80043a4:	f000 f844 	bl	8004430 <FLASH_MassErase>

      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80043a8:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80043ac:	f7ff fea0 	bl	80040f0 <FLASH_WaitForLastOperation>
 80043b0:	4603      	mov	r3, r0
 80043b2:	73fb      	strb	r3, [r7, #15]

      /* if the erase operation is completed, disable the MER Bit */
      FLASH->CR &= (~FLASH_MER_BIT);
 80043b4:	4b1d      	ldr	r3, [pc, #116]	@ (800442c <HAL_FLASHEx_Erase+0xdc>)
 80043b6:	691b      	ldr	r3, [r3, #16]
 80043b8:	4a1c      	ldr	r2, [pc, #112]	@ (800442c <HAL_FLASHEx_Erase+0xdc>)
 80043ba:	f023 0304 	bic.w	r3, r3, #4
 80043be:	6113      	str	r3, [r2, #16]
 80043c0:	e028      	b.n	8004414 <HAL_FLASHEx_Erase+0xc4>
    {
      /* Check the parameters */
      assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));

      /* Erase by sector by sector to be done*/
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	689b      	ldr	r3, [r3, #8]
 80043c6:	60bb      	str	r3, [r7, #8]
 80043c8:	e01c      	b.n	8004404 <HAL_FLASHEx_Erase+0xb4>
      {
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	691b      	ldr	r3, [r3, #16]
 80043ce:	b2db      	uxtb	r3, r3
 80043d0:	4619      	mov	r1, r3
 80043d2:	68b8      	ldr	r0, [r7, #8]
 80043d4:	f000 f850 	bl	8004478 <FLASH_Erase_Sector>

        /* Wait for last operation to be completed */
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80043d8:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80043dc:	f7ff fe88 	bl	80040f0 <FLASH_WaitForLastOperation>
 80043e0:	4603      	mov	r3, r0
 80043e2:	73fb      	strb	r3, [r7, #15]

        /* If the erase operation is completed, disable the SER and SNB Bits */
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 80043e4:	4b11      	ldr	r3, [pc, #68]	@ (800442c <HAL_FLASHEx_Erase+0xdc>)
 80043e6:	691b      	ldr	r3, [r3, #16]
 80043e8:	4a10      	ldr	r2, [pc, #64]	@ (800442c <HAL_FLASHEx_Erase+0xdc>)
 80043ea:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 80043ee:	6113      	str	r3, [r2, #16]

        if (status != HAL_OK)
 80043f0:	7bfb      	ldrb	r3, [r7, #15]
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d003      	beq.n	80043fe <HAL_FLASHEx_Erase+0xae>
        {
          /* In case of error, stop erase procedure and return the faulty sector*/
          *SectorError = index;
 80043f6:	683b      	ldr	r3, [r7, #0]
 80043f8:	68ba      	ldr	r2, [r7, #8]
 80043fa:	601a      	str	r2, [r3, #0]
          break;
 80043fc:	e00a      	b.n	8004414 <HAL_FLASHEx_Erase+0xc4>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80043fe:	68bb      	ldr	r3, [r7, #8]
 8004400:	3301      	adds	r3, #1
 8004402:	60bb      	str	r3, [r7, #8]
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	68da      	ldr	r2, [r3, #12]
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	689b      	ldr	r3, [r3, #8]
 800440c:	4413      	add	r3, r2
 800440e:	68ba      	ldr	r2, [r7, #8]
 8004410:	429a      	cmp	r2, r3
 8004412:	d3da      	bcc.n	80043ca <HAL_FLASHEx_Erase+0x7a>
        }
      }
    }
    /* Flush the caches to be sure of the data consistency */
    FLASH_FlushCaches();
 8004414:	f000 f878 	bl	8004508 <FLASH_FlushCaches>
  }

  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
 8004418:	4b03      	ldr	r3, [pc, #12]	@ (8004428 <HAL_FLASHEx_Erase+0xd8>)
 800441a:	2200      	movs	r2, #0
 800441c:	761a      	strb	r2, [r3, #24]

  return status;
 800441e:	7bfb      	ldrb	r3, [r7, #15]
}
 8004420:	4618      	mov	r0, r3
 8004422:	3710      	adds	r7, #16
 8004424:	46bd      	mov	sp, r7
 8004426:	bd80      	pop	{r7, pc}
 8004428:	2001d888 	.word	0x2001d888
 800442c:	40023c00 	.word	0x40023c00

08004430 <FLASH_MassErase>:
  *            @arg FLASH_BANK_1: Bank1 to be erased
  *
  * @retval None
  */
static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
{
 8004430:	b480      	push	{r7}
 8004432:	b083      	sub	sp, #12
 8004434:	af00      	add	r7, sp, #0
 8004436:	4603      	mov	r3, r0
 8004438:	6039      	str	r1, [r7, #0]
 800443a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_VOLTAGERANGE(VoltageRange));
  assert_param(IS_FLASH_BANK(Banks));

  /* If the previous operation is completed, proceed to erase all sectors */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800443c:	4b0d      	ldr	r3, [pc, #52]	@ (8004474 <FLASH_MassErase+0x44>)
 800443e:	691b      	ldr	r3, [r3, #16]
 8004440:	4a0c      	ldr	r2, [pc, #48]	@ (8004474 <FLASH_MassErase+0x44>)
 8004442:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004446:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_MER;
 8004448:	4b0a      	ldr	r3, [pc, #40]	@ (8004474 <FLASH_MassErase+0x44>)
 800444a:	691b      	ldr	r3, [r3, #16]
 800444c:	4a09      	ldr	r2, [pc, #36]	@ (8004474 <FLASH_MassErase+0x44>)
 800444e:	f043 0304 	orr.w	r3, r3, #4
 8004452:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8004454:	4b07      	ldr	r3, [pc, #28]	@ (8004474 <FLASH_MassErase+0x44>)
 8004456:	691a      	ldr	r2, [r3, #16]
 8004458:	79fb      	ldrb	r3, [r7, #7]
 800445a:	021b      	lsls	r3, r3, #8
 800445c:	4313      	orrs	r3, r2
 800445e:	4a05      	ldr	r2, [pc, #20]	@ (8004474 <FLASH_MassErase+0x44>)
 8004460:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004464:	6113      	str	r3, [r2, #16]
}
 8004466:	bf00      	nop
 8004468:	370c      	adds	r7, #12
 800446a:	46bd      	mov	sp, r7
 800446c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004470:	4770      	bx	lr
 8004472:	bf00      	nop
 8004474:	40023c00 	.word	0x40023c00

08004478 <FLASH_Erase_Sector>:
  *                                  the operation will be done by double word (64-bit)
  *
  * @retval None
  */
void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
{
 8004478:	b480      	push	{r7}
 800447a:	b085      	sub	sp, #20
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	460b      	mov	r3, r1
 8004482:	70fb      	strb	r3, [r7, #3]
  uint32_t tmp_psize = 0U;
 8004484:	2300      	movs	r3, #0
 8004486:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_FLASH_SECTOR(Sector));
  assert_param(IS_VOLTAGERANGE(VoltageRange));

  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8004488:	78fb      	ldrb	r3, [r7, #3]
 800448a:	2b00      	cmp	r3, #0
 800448c:	d102      	bne.n	8004494 <FLASH_Erase_Sector+0x1c>
  {
    tmp_psize = FLASH_PSIZE_BYTE;
 800448e:	2300      	movs	r3, #0
 8004490:	60fb      	str	r3, [r7, #12]
 8004492:	e010      	b.n	80044b6 <FLASH_Erase_Sector+0x3e>
  }
  else if (VoltageRange == FLASH_VOLTAGE_RANGE_2)
 8004494:	78fb      	ldrb	r3, [r7, #3]
 8004496:	2b01      	cmp	r3, #1
 8004498:	d103      	bne.n	80044a2 <FLASH_Erase_Sector+0x2a>
  {
    tmp_psize = FLASH_PSIZE_HALF_WORD;
 800449a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800449e:	60fb      	str	r3, [r7, #12]
 80044a0:	e009      	b.n	80044b6 <FLASH_Erase_Sector+0x3e>
  }
  else if (VoltageRange == FLASH_VOLTAGE_RANGE_3)
 80044a2:	78fb      	ldrb	r3, [r7, #3]
 80044a4:	2b02      	cmp	r3, #2
 80044a6:	d103      	bne.n	80044b0 <FLASH_Erase_Sector+0x38>
  {
    tmp_psize = FLASH_PSIZE_WORD;
 80044a8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80044ac:	60fb      	str	r3, [r7, #12]
 80044ae:	e002      	b.n	80044b6 <FLASH_Erase_Sector+0x3e>
  }
  else
  {
    tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 80044b0:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80044b4:	60fb      	str	r3, [r7, #12]
  }

  /* If the previous operation is completed, proceed to erase the sector */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80044b6:	4b13      	ldr	r3, [pc, #76]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044b8:	691b      	ldr	r3, [r3, #16]
 80044ba:	4a12      	ldr	r2, [pc, #72]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044bc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80044c0:	6113      	str	r3, [r2, #16]
  FLASH->CR |= tmp_psize;
 80044c2:	4b10      	ldr	r3, [pc, #64]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044c4:	691a      	ldr	r2, [r3, #16]
 80044c6:	490f      	ldr	r1, [pc, #60]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	4313      	orrs	r3, r2
 80044cc:	610b      	str	r3, [r1, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 80044ce:	4b0d      	ldr	r3, [pc, #52]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044d0:	691b      	ldr	r3, [r3, #16]
 80044d2:	4a0c      	ldr	r2, [pc, #48]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044d4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80044d8:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80044da:	4b0a      	ldr	r3, [pc, #40]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044dc:	691a      	ldr	r2, [r3, #16]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	00db      	lsls	r3, r3, #3
 80044e2:	4313      	orrs	r3, r2
 80044e4:	4a07      	ldr	r2, [pc, #28]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044e6:	f043 0302 	orr.w	r3, r3, #2
 80044ea:	6113      	str	r3, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT;
 80044ec:	4b05      	ldr	r3, [pc, #20]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044ee:	691b      	ldr	r3, [r3, #16]
 80044f0:	4a04      	ldr	r2, [pc, #16]	@ (8004504 <FLASH_Erase_Sector+0x8c>)
 80044f2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80044f6:	6113      	str	r3, [r2, #16]
}
 80044f8:	bf00      	nop
 80044fa:	3714      	adds	r7, #20
 80044fc:	46bd      	mov	sp, r7
 80044fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004502:	4770      	bx	lr
 8004504:	40023c00 	.word	0x40023c00

08004508 <FLASH_FlushCaches>:
/**
  * @brief  Flush the instruction and data caches
  * @retval None
  */
void FLASH_FlushCaches(void)
{
 8004508:	b480      	push	{r7}
 800450a:	af00      	add	r7, sp, #0
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800450c:	4b20      	ldr	r3, [pc, #128]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004514:	2b00      	cmp	r3, #0
 8004516:	d017      	beq.n	8004548 <FLASH_FlushCaches+0x40>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8004518:	4b1d      	ldr	r3, [pc, #116]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	4a1c      	ldr	r2, [pc, #112]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800451e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004522:	6013      	str	r3, [r2, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8004524:	4b1a      	ldr	r3, [pc, #104]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	4a19      	ldr	r2, [pc, #100]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800452a:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800452e:	6013      	str	r3, [r2, #0]
 8004530:	4b17      	ldr	r3, [pc, #92]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4a16      	ldr	r2, [pc, #88]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004536:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800453a:	6013      	str	r3, [r2, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800453c:	4b14      	ldr	r3, [pc, #80]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	4a13      	ldr	r2, [pc, #76]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004542:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004546:	6013      	str	r3, [r2, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8004548:	4b11      	ldr	r3, [pc, #68]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004550:	2b00      	cmp	r3, #0
 8004552:	d017      	beq.n	8004584 <FLASH_FlushCaches+0x7c>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8004554:	4b0e      	ldr	r3, [pc, #56]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	4a0d      	ldr	r2, [pc, #52]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800455a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800455e:	6013      	str	r3, [r2, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8004560:	4b0b      	ldr	r3, [pc, #44]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	4a0a      	ldr	r2, [pc, #40]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004566:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800456a:	6013      	str	r3, [r2, #0]
 800456c:	4b08      	ldr	r3, [pc, #32]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	4a07      	ldr	r2, [pc, #28]	@ (8004590 <FLASH_FlushCaches+0x88>)
 8004572:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004576:	6013      	str	r3, [r2, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8004578:	4b05      	ldr	r3, [pc, #20]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	4a04      	ldr	r2, [pc, #16]	@ (8004590 <FLASH_FlushCaches+0x88>)
 800457e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004582:	6013      	str	r3, [r2, #0]
  }
}
 8004584:	bf00      	nop
 8004586:	46bd      	mov	sp, r7
 8004588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800458c:	4770      	bx	lr
 800458e:	bf00      	nop
 8004590:	40023c00 	.word	0x40023c00

08004594 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004594:	b480      	push	{r7}
 8004596:	b089      	sub	sp, #36	@ 0x24
 8004598:	af00      	add	r7, sp, #0
 800459a:	6078      	str	r0, [r7, #4]
 800459c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800459e:	2300      	movs	r3, #0
 80045a0:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80045a2:	2300      	movs	r3, #0
 80045a4:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80045a6:	2300      	movs	r3, #0
 80045a8:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80045aa:	2300      	movs	r3, #0
 80045ac:	61fb      	str	r3, [r7, #28]
 80045ae:	e16b      	b.n	8004888 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80045b0:	2201      	movs	r2, #1
 80045b2:	69fb      	ldr	r3, [r7, #28]
 80045b4:	fa02 f303 	lsl.w	r3, r2, r3
 80045b8:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80045ba:	683b      	ldr	r3, [r7, #0]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	697a      	ldr	r2, [r7, #20]
 80045c0:	4013      	ands	r3, r2
 80045c2:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80045c4:	693a      	ldr	r2, [r7, #16]
 80045c6:	697b      	ldr	r3, [r7, #20]
 80045c8:	429a      	cmp	r2, r3
 80045ca:	f040 815a 	bne.w	8004882 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045ce:	683b      	ldr	r3, [r7, #0]
 80045d0:	685b      	ldr	r3, [r3, #4]
 80045d2:	f003 0303 	and.w	r3, r3, #3
 80045d6:	2b01      	cmp	r3, #1
 80045d8:	d005      	beq.n	80045e6 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80045da:	683b      	ldr	r3, [r7, #0]
 80045dc:	685b      	ldr	r3, [r3, #4]
 80045de:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045e2:	2b02      	cmp	r3, #2
 80045e4:	d130      	bne.n	8004648 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	689b      	ldr	r3, [r3, #8]
 80045ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045ec:	69fb      	ldr	r3, [r7, #28]
 80045ee:	005b      	lsls	r3, r3, #1
 80045f0:	2203      	movs	r2, #3
 80045f2:	fa02 f303 	lsl.w	r3, r2, r3
 80045f6:	43db      	mvns	r3, r3
 80045f8:	69ba      	ldr	r2, [r7, #24]
 80045fa:	4013      	ands	r3, r2
 80045fc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80045fe:	683b      	ldr	r3, [r7, #0]
 8004600:	68da      	ldr	r2, [r3, #12]
 8004602:	69fb      	ldr	r3, [r7, #28]
 8004604:	005b      	lsls	r3, r3, #1
 8004606:	fa02 f303 	lsl.w	r3, r2, r3
 800460a:	69ba      	ldr	r2, [r7, #24]
 800460c:	4313      	orrs	r3, r2
 800460e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	69ba      	ldr	r2, [r7, #24]
 8004614:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	685b      	ldr	r3, [r3, #4]
 800461a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800461c:	2201      	movs	r2, #1
 800461e:	69fb      	ldr	r3, [r7, #28]
 8004620:	fa02 f303 	lsl.w	r3, r2, r3
 8004624:	43db      	mvns	r3, r3
 8004626:	69ba      	ldr	r2, [r7, #24]
 8004628:	4013      	ands	r3, r2
 800462a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800462c:	683b      	ldr	r3, [r7, #0]
 800462e:	685b      	ldr	r3, [r3, #4]
 8004630:	091b      	lsrs	r3, r3, #4
 8004632:	f003 0201 	and.w	r2, r3, #1
 8004636:	69fb      	ldr	r3, [r7, #28]
 8004638:	fa02 f303 	lsl.w	r3, r2, r3
 800463c:	69ba      	ldr	r2, [r7, #24]
 800463e:	4313      	orrs	r3, r2
 8004640:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	69ba      	ldr	r2, [r7, #24]
 8004646:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004648:	683b      	ldr	r3, [r7, #0]
 800464a:	685b      	ldr	r3, [r3, #4]
 800464c:	f003 0303 	and.w	r3, r3, #3
 8004650:	2b03      	cmp	r3, #3
 8004652:	d017      	beq.n	8004684 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	68db      	ldr	r3, [r3, #12]
 8004658:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800465a:	69fb      	ldr	r3, [r7, #28]
 800465c:	005b      	lsls	r3, r3, #1
 800465e:	2203      	movs	r2, #3
 8004660:	fa02 f303 	lsl.w	r3, r2, r3
 8004664:	43db      	mvns	r3, r3
 8004666:	69ba      	ldr	r2, [r7, #24]
 8004668:	4013      	ands	r3, r2
 800466a:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800466c:	683b      	ldr	r3, [r7, #0]
 800466e:	689a      	ldr	r2, [r3, #8]
 8004670:	69fb      	ldr	r3, [r7, #28]
 8004672:	005b      	lsls	r3, r3, #1
 8004674:	fa02 f303 	lsl.w	r3, r2, r3
 8004678:	69ba      	ldr	r2, [r7, #24]
 800467a:	4313      	orrs	r3, r2
 800467c:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	69ba      	ldr	r2, [r7, #24]
 8004682:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004684:	683b      	ldr	r3, [r7, #0]
 8004686:	685b      	ldr	r3, [r3, #4]
 8004688:	f003 0303 	and.w	r3, r3, #3
 800468c:	2b02      	cmp	r3, #2
 800468e:	d123      	bne.n	80046d8 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004690:	69fb      	ldr	r3, [r7, #28]
 8004692:	08da      	lsrs	r2, r3, #3
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	3208      	adds	r2, #8
 8004698:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800469c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800469e:	69fb      	ldr	r3, [r7, #28]
 80046a0:	f003 0307 	and.w	r3, r3, #7
 80046a4:	009b      	lsls	r3, r3, #2
 80046a6:	220f      	movs	r2, #15
 80046a8:	fa02 f303 	lsl.w	r3, r2, r3
 80046ac:	43db      	mvns	r3, r3
 80046ae:	69ba      	ldr	r2, [r7, #24]
 80046b0:	4013      	ands	r3, r2
 80046b2:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80046b4:	683b      	ldr	r3, [r7, #0]
 80046b6:	691a      	ldr	r2, [r3, #16]
 80046b8:	69fb      	ldr	r3, [r7, #28]
 80046ba:	f003 0307 	and.w	r3, r3, #7
 80046be:	009b      	lsls	r3, r3, #2
 80046c0:	fa02 f303 	lsl.w	r3, r2, r3
 80046c4:	69ba      	ldr	r2, [r7, #24]
 80046c6:	4313      	orrs	r3, r2
 80046c8:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80046ca:	69fb      	ldr	r3, [r7, #28]
 80046cc:	08da      	lsrs	r2, r3, #3
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	3208      	adds	r2, #8
 80046d2:	69b9      	ldr	r1, [r7, #24]
 80046d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80046de:	69fb      	ldr	r3, [r7, #28]
 80046e0:	005b      	lsls	r3, r3, #1
 80046e2:	2203      	movs	r2, #3
 80046e4:	fa02 f303 	lsl.w	r3, r2, r3
 80046e8:	43db      	mvns	r3, r3
 80046ea:	69ba      	ldr	r2, [r7, #24]
 80046ec:	4013      	ands	r3, r2
 80046ee:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80046f0:	683b      	ldr	r3, [r7, #0]
 80046f2:	685b      	ldr	r3, [r3, #4]
 80046f4:	f003 0203 	and.w	r2, r3, #3
 80046f8:	69fb      	ldr	r3, [r7, #28]
 80046fa:	005b      	lsls	r3, r3, #1
 80046fc:	fa02 f303 	lsl.w	r3, r2, r3
 8004700:	69ba      	ldr	r2, [r7, #24]
 8004702:	4313      	orrs	r3, r2
 8004704:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	69ba      	ldr	r2, [r7, #24]
 800470a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800470c:	683b      	ldr	r3, [r7, #0]
 800470e:	685b      	ldr	r3, [r3, #4]
 8004710:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004714:	2b00      	cmp	r3, #0
 8004716:	f000 80b4 	beq.w	8004882 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800471a:	2300      	movs	r3, #0
 800471c:	60fb      	str	r3, [r7, #12]
 800471e:	4b60      	ldr	r3, [pc, #384]	@ (80048a0 <HAL_GPIO_Init+0x30c>)
 8004720:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004722:	4a5f      	ldr	r2, [pc, #380]	@ (80048a0 <HAL_GPIO_Init+0x30c>)
 8004724:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004728:	6453      	str	r3, [r2, #68]	@ 0x44
 800472a:	4b5d      	ldr	r3, [pc, #372]	@ (80048a0 <HAL_GPIO_Init+0x30c>)
 800472c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800472e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004732:	60fb      	str	r3, [r7, #12]
 8004734:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004736:	4a5b      	ldr	r2, [pc, #364]	@ (80048a4 <HAL_GPIO_Init+0x310>)
 8004738:	69fb      	ldr	r3, [r7, #28]
 800473a:	089b      	lsrs	r3, r3, #2
 800473c:	3302      	adds	r3, #2
 800473e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004742:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004744:	69fb      	ldr	r3, [r7, #28]
 8004746:	f003 0303 	and.w	r3, r3, #3
 800474a:	009b      	lsls	r3, r3, #2
 800474c:	220f      	movs	r2, #15
 800474e:	fa02 f303 	lsl.w	r3, r2, r3
 8004752:	43db      	mvns	r3, r3
 8004754:	69ba      	ldr	r2, [r7, #24]
 8004756:	4013      	ands	r3, r2
 8004758:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	4a52      	ldr	r2, [pc, #328]	@ (80048a8 <HAL_GPIO_Init+0x314>)
 800475e:	4293      	cmp	r3, r2
 8004760:	d02b      	beq.n	80047ba <HAL_GPIO_Init+0x226>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	4a51      	ldr	r2, [pc, #324]	@ (80048ac <HAL_GPIO_Init+0x318>)
 8004766:	4293      	cmp	r3, r2
 8004768:	d025      	beq.n	80047b6 <HAL_GPIO_Init+0x222>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	4a50      	ldr	r2, [pc, #320]	@ (80048b0 <HAL_GPIO_Init+0x31c>)
 800476e:	4293      	cmp	r3, r2
 8004770:	d01f      	beq.n	80047b2 <HAL_GPIO_Init+0x21e>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	4a4f      	ldr	r2, [pc, #316]	@ (80048b4 <HAL_GPIO_Init+0x320>)
 8004776:	4293      	cmp	r3, r2
 8004778:	d019      	beq.n	80047ae <HAL_GPIO_Init+0x21a>
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	4a4e      	ldr	r2, [pc, #312]	@ (80048b8 <HAL_GPIO_Init+0x324>)
 800477e:	4293      	cmp	r3, r2
 8004780:	d013      	beq.n	80047aa <HAL_GPIO_Init+0x216>
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	4a4d      	ldr	r2, [pc, #308]	@ (80048bc <HAL_GPIO_Init+0x328>)
 8004786:	4293      	cmp	r3, r2
 8004788:	d00d      	beq.n	80047a6 <HAL_GPIO_Init+0x212>
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	4a4c      	ldr	r2, [pc, #304]	@ (80048c0 <HAL_GPIO_Init+0x32c>)
 800478e:	4293      	cmp	r3, r2
 8004790:	d007      	beq.n	80047a2 <HAL_GPIO_Init+0x20e>
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	4a4b      	ldr	r2, [pc, #300]	@ (80048c4 <HAL_GPIO_Init+0x330>)
 8004796:	4293      	cmp	r3, r2
 8004798:	d101      	bne.n	800479e <HAL_GPIO_Init+0x20a>
 800479a:	2307      	movs	r3, #7
 800479c:	e00e      	b.n	80047bc <HAL_GPIO_Init+0x228>
 800479e:	2308      	movs	r3, #8
 80047a0:	e00c      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047a2:	2306      	movs	r3, #6
 80047a4:	e00a      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047a6:	2305      	movs	r3, #5
 80047a8:	e008      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047aa:	2304      	movs	r3, #4
 80047ac:	e006      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047ae:	2303      	movs	r3, #3
 80047b0:	e004      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047b2:	2302      	movs	r3, #2
 80047b4:	e002      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047b6:	2301      	movs	r3, #1
 80047b8:	e000      	b.n	80047bc <HAL_GPIO_Init+0x228>
 80047ba:	2300      	movs	r3, #0
 80047bc:	69fa      	ldr	r2, [r7, #28]
 80047be:	f002 0203 	and.w	r2, r2, #3
 80047c2:	0092      	lsls	r2, r2, #2
 80047c4:	4093      	lsls	r3, r2
 80047c6:	69ba      	ldr	r2, [r7, #24]
 80047c8:	4313      	orrs	r3, r2
 80047ca:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80047cc:	4935      	ldr	r1, [pc, #212]	@ (80048a4 <HAL_GPIO_Init+0x310>)
 80047ce:	69fb      	ldr	r3, [r7, #28]
 80047d0:	089b      	lsrs	r3, r3, #2
 80047d2:	3302      	adds	r3, #2
 80047d4:	69ba      	ldr	r2, [r7, #24]
 80047d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80047da:	4b3b      	ldr	r3, [pc, #236]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 80047dc:	689b      	ldr	r3, [r3, #8]
 80047de:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80047e0:	693b      	ldr	r3, [r7, #16]
 80047e2:	43db      	mvns	r3, r3
 80047e4:	69ba      	ldr	r2, [r7, #24]
 80047e6:	4013      	ands	r3, r2
 80047e8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d003      	beq.n	80047fe <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 80047f6:	69ba      	ldr	r2, [r7, #24]
 80047f8:	693b      	ldr	r3, [r7, #16]
 80047fa:	4313      	orrs	r3, r2
 80047fc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80047fe:	4a32      	ldr	r2, [pc, #200]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 8004800:	69bb      	ldr	r3, [r7, #24]
 8004802:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004804:	4b30      	ldr	r3, [pc, #192]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 8004806:	68db      	ldr	r3, [r3, #12]
 8004808:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800480a:	693b      	ldr	r3, [r7, #16]
 800480c:	43db      	mvns	r3, r3
 800480e:	69ba      	ldr	r2, [r7, #24]
 8004810:	4013      	ands	r3, r2
 8004812:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004814:	683b      	ldr	r3, [r7, #0]
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800481c:	2b00      	cmp	r3, #0
 800481e:	d003      	beq.n	8004828 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8004820:	69ba      	ldr	r2, [r7, #24]
 8004822:	693b      	ldr	r3, [r7, #16]
 8004824:	4313      	orrs	r3, r2
 8004826:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004828:	4a27      	ldr	r2, [pc, #156]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 800482a:	69bb      	ldr	r3, [r7, #24]
 800482c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 800482e:	4b26      	ldr	r3, [pc, #152]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 8004830:	685b      	ldr	r3, [r3, #4]
 8004832:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004834:	693b      	ldr	r3, [r7, #16]
 8004836:	43db      	mvns	r3, r3
 8004838:	69ba      	ldr	r2, [r7, #24]
 800483a:	4013      	ands	r3, r2
 800483c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	685b      	ldr	r3, [r3, #4]
 8004842:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004846:	2b00      	cmp	r3, #0
 8004848:	d003      	beq.n	8004852 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 800484a:	69ba      	ldr	r2, [r7, #24]
 800484c:	693b      	ldr	r3, [r7, #16]
 800484e:	4313      	orrs	r3, r2
 8004850:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004852:	4a1d      	ldr	r2, [pc, #116]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 8004854:	69bb      	ldr	r3, [r7, #24]
 8004856:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004858:	4b1b      	ldr	r3, [pc, #108]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800485e:	693b      	ldr	r3, [r7, #16]
 8004860:	43db      	mvns	r3, r3
 8004862:	69ba      	ldr	r2, [r7, #24]
 8004864:	4013      	ands	r3, r2
 8004866:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004868:	683b      	ldr	r3, [r7, #0]
 800486a:	685b      	ldr	r3, [r3, #4]
 800486c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004870:	2b00      	cmp	r3, #0
 8004872:	d003      	beq.n	800487c <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8004874:	69ba      	ldr	r2, [r7, #24]
 8004876:	693b      	ldr	r3, [r7, #16]
 8004878:	4313      	orrs	r3, r2
 800487a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800487c:	4a12      	ldr	r2, [pc, #72]	@ (80048c8 <HAL_GPIO_Init+0x334>)
 800487e:	69bb      	ldr	r3, [r7, #24]
 8004880:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004882:	69fb      	ldr	r3, [r7, #28]
 8004884:	3301      	adds	r3, #1
 8004886:	61fb      	str	r3, [r7, #28]
 8004888:	69fb      	ldr	r3, [r7, #28]
 800488a:	2b0f      	cmp	r3, #15
 800488c:	f67f ae90 	bls.w	80045b0 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004890:	bf00      	nop
 8004892:	bf00      	nop
 8004894:	3724      	adds	r7, #36	@ 0x24
 8004896:	46bd      	mov	sp, r7
 8004898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800489c:	4770      	bx	lr
 800489e:	bf00      	nop
 80048a0:	40023800 	.word	0x40023800
 80048a4:	40013800 	.word	0x40013800
 80048a8:	40020000 	.word	0x40020000
 80048ac:	40020400 	.word	0x40020400
 80048b0:	40020800 	.word	0x40020800
 80048b4:	40020c00 	.word	0x40020c00
 80048b8:	40021000 	.word	0x40021000
 80048bc:	40021400 	.word	0x40021400
 80048c0:	40021800 	.word	0x40021800
 80048c4:	40021c00 	.word	0x40021c00
 80048c8:	40013c00 	.word	0x40013c00

080048cc <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80048cc:	b480      	push	{r7}
 80048ce:	b085      	sub	sp, #20
 80048d0:	af00      	add	r7, sp, #0
 80048d2:	6078      	str	r0, [r7, #4]
 80048d4:	460b      	mov	r3, r1
 80048d6:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	691a      	ldr	r2, [r3, #16]
 80048dc:	887b      	ldrh	r3, [r7, #2]
 80048de:	4013      	ands	r3, r2
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	d002      	beq.n	80048ea <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80048e4:	2301      	movs	r3, #1
 80048e6:	73fb      	strb	r3, [r7, #15]
 80048e8:	e001      	b.n	80048ee <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80048ea:	2300      	movs	r3, #0
 80048ec:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80048ee:	7bfb      	ldrb	r3, [r7, #15]
}
 80048f0:	4618      	mov	r0, r3
 80048f2:	3714      	adds	r7, #20
 80048f4:	46bd      	mov	sp, r7
 80048f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048fa:	4770      	bx	lr

080048fc <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80048fc:	b480      	push	{r7}
 80048fe:	b083      	sub	sp, #12
 8004900:	af00      	add	r7, sp, #0
 8004902:	6078      	str	r0, [r7, #4]
 8004904:	460b      	mov	r3, r1
 8004906:	807b      	strh	r3, [r7, #2]
 8004908:	4613      	mov	r3, r2
 800490a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800490c:	787b      	ldrb	r3, [r7, #1]
 800490e:	2b00      	cmp	r3, #0
 8004910:	d003      	beq.n	800491a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004912:	887a      	ldrh	r2, [r7, #2]
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004918:	e003      	b.n	8004922 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800491a:	887b      	ldrh	r3, [r7, #2]
 800491c:	041a      	lsls	r2, r3, #16
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	619a      	str	r2, [r3, #24]
}
 8004922:	bf00      	nop
 8004924:	370c      	adds	r7, #12
 8004926:	46bd      	mov	sp, r7
 8004928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800492c:	4770      	bx	lr

0800492e <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800492e:	b480      	push	{r7}
 8004930:	b085      	sub	sp, #20
 8004932:	af00      	add	r7, sp, #0
 8004934:	6078      	str	r0, [r7, #4]
 8004936:	460b      	mov	r3, r1
 8004938:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	695b      	ldr	r3, [r3, #20]
 800493e:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004940:	887a      	ldrh	r2, [r7, #2]
 8004942:	68fb      	ldr	r3, [r7, #12]
 8004944:	4013      	ands	r3, r2
 8004946:	041a      	lsls	r2, r3, #16
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	43d9      	mvns	r1, r3
 800494c:	887b      	ldrh	r3, [r7, #2]
 800494e:	400b      	ands	r3, r1
 8004950:	431a      	orrs	r2, r3
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	619a      	str	r2, [r3, #24]
}
 8004956:	bf00      	nop
 8004958:	3714      	adds	r7, #20
 800495a:	46bd      	mov	sp, r7
 800495c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004960:	4770      	bx	lr
	...

08004964 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004964:	b580      	push	{r7, lr}
 8004966:	b084      	sub	sp, #16
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	2b00      	cmp	r3, #0
 8004970:	d101      	bne.n	8004976 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004972:	2301      	movs	r3, #1
 8004974:	e12b      	b.n	8004bce <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800497c:	b2db      	uxtb	r3, r3
 800497e:	2b00      	cmp	r3, #0
 8004980:	d106      	bne.n	8004990 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	2200      	movs	r2, #0
 8004986:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 800498a:	6878      	ldr	r0, [r7, #4]
 800498c:	f7fc ff64 	bl	8001858 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	2224      	movs	r2, #36	@ 0x24
 8004994:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	681a      	ldr	r2, [r3, #0]
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	f022 0201 	bic.w	r2, r2, #1
 80049a6:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	681a      	ldr	r2, [r3, #0]
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	681b      	ldr	r3, [r3, #0]
 80049b2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80049b6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	681a      	ldr	r2, [r3, #0]
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80049c6:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80049c8:	f002 f9c4 	bl	8006d54 <HAL_RCC_GetPCLK1Freq>
 80049cc:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	685b      	ldr	r3, [r3, #4]
 80049d2:	4a81      	ldr	r2, [pc, #516]	@ (8004bd8 <HAL_I2C_Init+0x274>)
 80049d4:	4293      	cmp	r3, r2
 80049d6:	d807      	bhi.n	80049e8 <HAL_I2C_Init+0x84>
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	4a80      	ldr	r2, [pc, #512]	@ (8004bdc <HAL_I2C_Init+0x278>)
 80049dc:	4293      	cmp	r3, r2
 80049de:	bf94      	ite	ls
 80049e0:	2301      	movls	r3, #1
 80049e2:	2300      	movhi	r3, #0
 80049e4:	b2db      	uxtb	r3, r3
 80049e6:	e006      	b.n	80049f6 <HAL_I2C_Init+0x92>
 80049e8:	68fb      	ldr	r3, [r7, #12]
 80049ea:	4a7d      	ldr	r2, [pc, #500]	@ (8004be0 <HAL_I2C_Init+0x27c>)
 80049ec:	4293      	cmp	r3, r2
 80049ee:	bf94      	ite	ls
 80049f0:	2301      	movls	r3, #1
 80049f2:	2300      	movhi	r3, #0
 80049f4:	b2db      	uxtb	r3, r3
 80049f6:	2b00      	cmp	r3, #0
 80049f8:	d001      	beq.n	80049fe <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80049fa:	2301      	movs	r3, #1
 80049fc:	e0e7      	b.n	8004bce <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	4a78      	ldr	r2, [pc, #480]	@ (8004be4 <HAL_I2C_Init+0x280>)
 8004a02:	fba2 2303 	umull	r2, r3, r2, r3
 8004a06:	0c9b      	lsrs	r3, r3, #18
 8004a08:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	685b      	ldr	r3, [r3, #4]
 8004a10:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	68ba      	ldr	r2, [r7, #8]
 8004a1a:	430a      	orrs	r2, r1
 8004a1c:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	6a1b      	ldr	r3, [r3, #32]
 8004a24:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	685b      	ldr	r3, [r3, #4]
 8004a2c:	4a6a      	ldr	r2, [pc, #424]	@ (8004bd8 <HAL_I2C_Init+0x274>)
 8004a2e:	4293      	cmp	r3, r2
 8004a30:	d802      	bhi.n	8004a38 <HAL_I2C_Init+0xd4>
 8004a32:	68bb      	ldr	r3, [r7, #8]
 8004a34:	3301      	adds	r3, #1
 8004a36:	e009      	b.n	8004a4c <HAL_I2C_Init+0xe8>
 8004a38:	68bb      	ldr	r3, [r7, #8]
 8004a3a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8004a3e:	fb02 f303 	mul.w	r3, r2, r3
 8004a42:	4a69      	ldr	r2, [pc, #420]	@ (8004be8 <HAL_I2C_Init+0x284>)
 8004a44:	fba2 2303 	umull	r2, r3, r2, r3
 8004a48:	099b      	lsrs	r3, r3, #6
 8004a4a:	3301      	adds	r3, #1
 8004a4c:	687a      	ldr	r2, [r7, #4]
 8004a4e:	6812      	ldr	r2, [r2, #0]
 8004a50:	430b      	orrs	r3, r1
 8004a52:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	69db      	ldr	r3, [r3, #28]
 8004a5a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8004a5e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	685b      	ldr	r3, [r3, #4]
 8004a66:	495c      	ldr	r1, [pc, #368]	@ (8004bd8 <HAL_I2C_Init+0x274>)
 8004a68:	428b      	cmp	r3, r1
 8004a6a:	d819      	bhi.n	8004aa0 <HAL_I2C_Init+0x13c>
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	1e59      	subs	r1, r3, #1
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	685b      	ldr	r3, [r3, #4]
 8004a74:	005b      	lsls	r3, r3, #1
 8004a76:	fbb1 f3f3 	udiv	r3, r1, r3
 8004a7a:	1c59      	adds	r1, r3, #1
 8004a7c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004a80:	400b      	ands	r3, r1
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	d00a      	beq.n	8004a9c <HAL_I2C_Init+0x138>
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	1e59      	subs	r1, r3, #1
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	685b      	ldr	r3, [r3, #4]
 8004a8e:	005b      	lsls	r3, r3, #1
 8004a90:	fbb1 f3f3 	udiv	r3, r1, r3
 8004a94:	3301      	adds	r3, #1
 8004a96:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a9a:	e051      	b.n	8004b40 <HAL_I2C_Init+0x1dc>
 8004a9c:	2304      	movs	r3, #4
 8004a9e:	e04f      	b.n	8004b40 <HAL_I2C_Init+0x1dc>
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	689b      	ldr	r3, [r3, #8]
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	d111      	bne.n	8004acc <HAL_I2C_Init+0x168>
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	1e58      	subs	r0, r3, #1
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	6859      	ldr	r1, [r3, #4]
 8004ab0:	460b      	mov	r3, r1
 8004ab2:	005b      	lsls	r3, r3, #1
 8004ab4:	440b      	add	r3, r1
 8004ab6:	fbb0 f3f3 	udiv	r3, r0, r3
 8004aba:	3301      	adds	r3, #1
 8004abc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ac0:	2b00      	cmp	r3, #0
 8004ac2:	bf0c      	ite	eq
 8004ac4:	2301      	moveq	r3, #1
 8004ac6:	2300      	movne	r3, #0
 8004ac8:	b2db      	uxtb	r3, r3
 8004aca:	e012      	b.n	8004af2 <HAL_I2C_Init+0x18e>
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	1e58      	subs	r0, r3, #1
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	6859      	ldr	r1, [r3, #4]
 8004ad4:	460b      	mov	r3, r1
 8004ad6:	009b      	lsls	r3, r3, #2
 8004ad8:	440b      	add	r3, r1
 8004ada:	0099      	lsls	r1, r3, #2
 8004adc:	440b      	add	r3, r1
 8004ade:	fbb0 f3f3 	udiv	r3, r0, r3
 8004ae2:	3301      	adds	r3, #1
 8004ae4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	bf0c      	ite	eq
 8004aec:	2301      	moveq	r3, #1
 8004aee:	2300      	movne	r3, #0
 8004af0:	b2db      	uxtb	r3, r3
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d001      	beq.n	8004afa <HAL_I2C_Init+0x196>
 8004af6:	2301      	movs	r3, #1
 8004af8:	e022      	b.n	8004b40 <HAL_I2C_Init+0x1dc>
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	689b      	ldr	r3, [r3, #8]
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	d10e      	bne.n	8004b20 <HAL_I2C_Init+0x1bc>
 8004b02:	68fb      	ldr	r3, [r7, #12]
 8004b04:	1e58      	subs	r0, r3, #1
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	6859      	ldr	r1, [r3, #4]
 8004b0a:	460b      	mov	r3, r1
 8004b0c:	005b      	lsls	r3, r3, #1
 8004b0e:	440b      	add	r3, r1
 8004b10:	fbb0 f3f3 	udiv	r3, r0, r3
 8004b14:	3301      	adds	r3, #1
 8004b16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b1a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004b1e:	e00f      	b.n	8004b40 <HAL_I2C_Init+0x1dc>
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	1e58      	subs	r0, r3, #1
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	6859      	ldr	r1, [r3, #4]
 8004b28:	460b      	mov	r3, r1
 8004b2a:	009b      	lsls	r3, r3, #2
 8004b2c:	440b      	add	r3, r1
 8004b2e:	0099      	lsls	r1, r3, #2
 8004b30:	440b      	add	r3, r1
 8004b32:	fbb0 f3f3 	udiv	r3, r0, r3
 8004b36:	3301      	adds	r3, #1
 8004b38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b3c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004b40:	6879      	ldr	r1, [r7, #4]
 8004b42:	6809      	ldr	r1, [r1, #0]
 8004b44:	4313      	orrs	r3, r2
 8004b46:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	69da      	ldr	r2, [r3, #28]
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	6a1b      	ldr	r3, [r3, #32]
 8004b5a:	431a      	orrs	r2, r3
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	430a      	orrs	r2, r1
 8004b62:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	689b      	ldr	r3, [r3, #8]
 8004b6a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8004b6e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8004b72:	687a      	ldr	r2, [r7, #4]
 8004b74:	6911      	ldr	r1, [r2, #16]
 8004b76:	687a      	ldr	r2, [r7, #4]
 8004b78:	68d2      	ldr	r2, [r2, #12]
 8004b7a:	4311      	orrs	r1, r2
 8004b7c:	687a      	ldr	r2, [r7, #4]
 8004b7e:	6812      	ldr	r2, [r2, #0]
 8004b80:	430b      	orrs	r3, r1
 8004b82:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	68db      	ldr	r3, [r3, #12]
 8004b8a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	695a      	ldr	r2, [r3, #20]
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	699b      	ldr	r3, [r3, #24]
 8004b96:	431a      	orrs	r2, r3
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	430a      	orrs	r2, r1
 8004b9e:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	681a      	ldr	r2, [r3, #0]
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	f042 0201 	orr.w	r2, r2, #1
 8004bae:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	2200      	movs	r2, #0
 8004bb4:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	2220      	movs	r2, #32
 8004bba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	2200      	movs	r2, #0
 8004bc2:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 8004bcc:	2300      	movs	r3, #0
}
 8004bce:	4618      	mov	r0, r3
 8004bd0:	3710      	adds	r7, #16
 8004bd2:	46bd      	mov	sp, r7
 8004bd4:	bd80      	pop	{r7, pc}
 8004bd6:	bf00      	nop
 8004bd8:	000186a0 	.word	0x000186a0
 8004bdc:	001e847f 	.word	0x001e847f
 8004be0:	003d08ff 	.word	0x003d08ff
 8004be4:	431bde83 	.word	0x431bde83
 8004be8:	10624dd3 	.word	0x10624dd3

08004bec <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004bec:	b580      	push	{r7, lr}
 8004bee:	b088      	sub	sp, #32
 8004bf0:	af02      	add	r7, sp, #8
 8004bf2:	60f8      	str	r0, [r7, #12]
 8004bf4:	607a      	str	r2, [r7, #4]
 8004bf6:	461a      	mov	r2, r3
 8004bf8:	460b      	mov	r3, r1
 8004bfa:	817b      	strh	r3, [r7, #10]
 8004bfc:	4613      	mov	r3, r2
 8004bfe:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004c00:	f7fd fff8 	bl	8002bf4 <HAL_GetTick>
 8004c04:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004c0c:	b2db      	uxtb	r3, r3
 8004c0e:	2b20      	cmp	r3, #32
 8004c10:	f040 80e0 	bne.w	8004dd4 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004c14:	697b      	ldr	r3, [r7, #20]
 8004c16:	9300      	str	r3, [sp, #0]
 8004c18:	2319      	movs	r3, #25
 8004c1a:	2201      	movs	r2, #1
 8004c1c:	4970      	ldr	r1, [pc, #448]	@ (8004de0 <HAL_I2C_Master_Transmit+0x1f4>)
 8004c1e:	68f8      	ldr	r0, [r7, #12]
 8004c20:	f000 fc64 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 8004c24:	4603      	mov	r3, r0
 8004c26:	2b00      	cmp	r3, #0
 8004c28:	d001      	beq.n	8004c2e <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8004c2a:	2302      	movs	r3, #2
 8004c2c:	e0d3      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004c34:	2b01      	cmp	r3, #1
 8004c36:	d101      	bne.n	8004c3c <HAL_I2C_Master_Transmit+0x50>
 8004c38:	2302      	movs	r3, #2
 8004c3a:	e0cc      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
 8004c3c:	68fb      	ldr	r3, [r7, #12]
 8004c3e:	2201      	movs	r2, #1
 8004c40:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c44:	68fb      	ldr	r3, [r7, #12]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	f003 0301 	and.w	r3, r3, #1
 8004c4e:	2b01      	cmp	r3, #1
 8004c50:	d007      	beq.n	8004c62 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	681a      	ldr	r2, [r3, #0]
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	f042 0201 	orr.w	r2, r2, #1
 8004c60:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	681a      	ldr	r2, [r3, #0]
 8004c68:	68fb      	ldr	r3, [r7, #12]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004c70:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	2221      	movs	r2, #33	@ 0x21
 8004c76:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	2210      	movs	r2, #16
 8004c7e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	2200      	movs	r2, #0
 8004c86:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	687a      	ldr	r2, [r7, #4]
 8004c8c:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	893a      	ldrh	r2, [r7, #8]
 8004c92:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c98:	b29a      	uxth	r2, r3
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004c9e:	68fb      	ldr	r3, [r7, #12]
 8004ca0:	4a50      	ldr	r2, [pc, #320]	@ (8004de4 <HAL_I2C_Master_Transmit+0x1f8>)
 8004ca2:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8004ca4:	8979      	ldrh	r1, [r7, #10]
 8004ca6:	697b      	ldr	r3, [r7, #20]
 8004ca8:	6a3a      	ldr	r2, [r7, #32]
 8004caa:	68f8      	ldr	r0, [r7, #12]
 8004cac:	f000 face 	bl	800524c <I2C_MasterRequestWrite>
 8004cb0:	4603      	mov	r3, r0
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	d001      	beq.n	8004cba <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 8004cb6:	2301      	movs	r3, #1
 8004cb8:	e08d      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cba:	2300      	movs	r3, #0
 8004cbc:	613b      	str	r3, [r7, #16]
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	695b      	ldr	r3, [r3, #20]
 8004cc4:	613b      	str	r3, [r7, #16]
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	699b      	ldr	r3, [r3, #24]
 8004ccc:	613b      	str	r3, [r7, #16]
 8004cce:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8004cd0:	e066      	b.n	8004da0 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004cd2:	697a      	ldr	r2, [r7, #20]
 8004cd4:	6a39      	ldr	r1, [r7, #32]
 8004cd6:	68f8      	ldr	r0, [r7, #12]
 8004cd8:	f000 fd22 	bl	8005720 <I2C_WaitOnTXEFlagUntilTimeout>
 8004cdc:	4603      	mov	r3, r0
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	d00d      	beq.n	8004cfe <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ce6:	2b04      	cmp	r3, #4
 8004ce8:	d107      	bne.n	8004cfa <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cea:	68fb      	ldr	r3, [r7, #12]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	681a      	ldr	r2, [r3, #0]
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004cf8:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004cfa:	2301      	movs	r3, #1
 8004cfc:	e06b      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d02:	781a      	ldrb	r2, [r3, #0]
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004d0a:	68fb      	ldr	r3, [r7, #12]
 8004d0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d0e:	1c5a      	adds	r2, r3, #1
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 8004d14:	68fb      	ldr	r3, [r7, #12]
 8004d16:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004d18:	b29b      	uxth	r3, r3
 8004d1a:	3b01      	subs	r3, #1
 8004d1c:	b29a      	uxth	r2, r3
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8004d22:	68fb      	ldr	r3, [r7, #12]
 8004d24:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d26:	3b01      	subs	r3, #1
 8004d28:	b29a      	uxth	r2, r3
 8004d2a:	68fb      	ldr	r3, [r7, #12]
 8004d2c:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	695b      	ldr	r3, [r3, #20]
 8004d34:	f003 0304 	and.w	r3, r3, #4
 8004d38:	2b04      	cmp	r3, #4
 8004d3a:	d11b      	bne.n	8004d74 <HAL_I2C_Master_Transmit+0x188>
 8004d3c:	68fb      	ldr	r3, [r7, #12]
 8004d3e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d40:	2b00      	cmp	r3, #0
 8004d42:	d017      	beq.n	8004d74 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004d44:	68fb      	ldr	r3, [r7, #12]
 8004d46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d48:	781a      	ldrb	r2, [r3, #0]
 8004d4a:	68fb      	ldr	r3, [r7, #12]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004d50:	68fb      	ldr	r3, [r7, #12]
 8004d52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d54:	1c5a      	adds	r2, r3, #1
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004d5e:	b29b      	uxth	r3, r3
 8004d60:	3b01      	subs	r3, #1
 8004d62:	b29a      	uxth	r2, r3
 8004d64:	68fb      	ldr	r3, [r7, #12]
 8004d66:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d6c:	3b01      	subs	r3, #1
 8004d6e:	b29a      	uxth	r2, r3
 8004d70:	68fb      	ldr	r3, [r7, #12]
 8004d72:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d74:	697a      	ldr	r2, [r7, #20]
 8004d76:	6a39      	ldr	r1, [r7, #32]
 8004d78:	68f8      	ldr	r0, [r7, #12]
 8004d7a:	f000 fd19 	bl	80057b0 <I2C_WaitOnBTFFlagUntilTimeout>
 8004d7e:	4603      	mov	r3, r0
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d00d      	beq.n	8004da0 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d88:	2b04      	cmp	r3, #4
 8004d8a:	d107      	bne.n	8004d9c <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	681a      	ldr	r2, [r3, #0]
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d9a:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004d9c:	2301      	movs	r3, #1
 8004d9e:	e01a      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	d194      	bne.n	8004cd2 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	681a      	ldr	r2, [r3, #0]
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004db6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	2220      	movs	r2, #32
 8004dbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	2200      	movs	r2, #0
 8004dcc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004dd0:	2300      	movs	r3, #0
 8004dd2:	e000      	b.n	8004dd6 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8004dd4:	2302      	movs	r3, #2
  }
}
 8004dd6:	4618      	mov	r0, r3
 8004dd8:	3718      	adds	r7, #24
 8004dda:	46bd      	mov	sp, r7
 8004ddc:	bd80      	pop	{r7, pc}
 8004dde:	bf00      	nop
 8004de0:	00100002 	.word	0x00100002
 8004de4:	ffff0000 	.word	0xffff0000

08004de8 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004de8:	b580      	push	{r7, lr}
 8004dea:	b08c      	sub	sp, #48	@ 0x30
 8004dec:	af02      	add	r7, sp, #8
 8004dee:	60f8      	str	r0, [r7, #12]
 8004df0:	607a      	str	r2, [r7, #4]
 8004df2:	461a      	mov	r2, r3
 8004df4:	460b      	mov	r3, r1
 8004df6:	817b      	strh	r3, [r7, #10]
 8004df8:	4613      	mov	r3, r2
 8004dfa:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004dfc:	f7fd fefa 	bl	8002bf4 <HAL_GetTick>
 8004e00:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e02:	68fb      	ldr	r3, [r7, #12]
 8004e04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004e08:	b2db      	uxtb	r3, r3
 8004e0a:	2b20      	cmp	r3, #32
 8004e0c:	f040 8217 	bne.w	800523e <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004e10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e12:	9300      	str	r3, [sp, #0]
 8004e14:	2319      	movs	r3, #25
 8004e16:	2201      	movs	r2, #1
 8004e18:	497c      	ldr	r1, [pc, #496]	@ (800500c <HAL_I2C_Master_Receive+0x224>)
 8004e1a:	68f8      	ldr	r0, [r7, #12]
 8004e1c:	f000 fb66 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 8004e20:	4603      	mov	r3, r0
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d001      	beq.n	8004e2a <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8004e26:	2302      	movs	r3, #2
 8004e28:	e20a      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004e30:	2b01      	cmp	r3, #1
 8004e32:	d101      	bne.n	8004e38 <HAL_I2C_Master_Receive+0x50>
 8004e34:	2302      	movs	r3, #2
 8004e36:	e203      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	2201      	movs	r2, #1
 8004e3c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	681b      	ldr	r3, [r3, #0]
 8004e46:	f003 0301 	and.w	r3, r3, #1
 8004e4a:	2b01      	cmp	r3, #1
 8004e4c:	d007      	beq.n	8004e5e <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004e4e:	68fb      	ldr	r3, [r7, #12]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	681a      	ldr	r2, [r3, #0]
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	f042 0201 	orr.w	r2, r2, #1
 8004e5c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e5e:	68fb      	ldr	r3, [r7, #12]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	681a      	ldr	r2, [r3, #0]
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004e6c:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	2222      	movs	r2, #34	@ 0x22
 8004e72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004e76:	68fb      	ldr	r3, [r7, #12]
 8004e78:	2210      	movs	r2, #16
 8004e7a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	2200      	movs	r2, #0
 8004e82:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	687a      	ldr	r2, [r7, #4]
 8004e88:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	893a      	ldrh	r2, [r7, #8]
 8004e8e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004e94:	b29a      	uxth	r2, r3
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004e9a:	68fb      	ldr	r3, [r7, #12]
 8004e9c:	4a5c      	ldr	r2, [pc, #368]	@ (8005010 <HAL_I2C_Master_Receive+0x228>)
 8004e9e:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8004ea0:	8979      	ldrh	r1, [r7, #10]
 8004ea2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ea4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004ea6:	68f8      	ldr	r0, [r7, #12]
 8004ea8:	f000 fa52 	bl	8005350 <I2C_MasterRequestRead>
 8004eac:	4603      	mov	r3, r0
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d001      	beq.n	8004eb6 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 8004eb2:	2301      	movs	r3, #1
 8004eb4:	e1c4      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004eba:	2b00      	cmp	r3, #0
 8004ebc:	d113      	bne.n	8004ee6 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ebe:	2300      	movs	r3, #0
 8004ec0:	623b      	str	r3, [r7, #32]
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	695b      	ldr	r3, [r3, #20]
 8004ec8:	623b      	str	r3, [r7, #32]
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	699b      	ldr	r3, [r3, #24]
 8004ed0:	623b      	str	r3, [r7, #32]
 8004ed2:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	681a      	ldr	r2, [r3, #0]
 8004eda:	68fb      	ldr	r3, [r7, #12]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004ee2:	601a      	str	r2, [r3, #0]
 8004ee4:	e198      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004eea:	2b01      	cmp	r3, #1
 8004eec:	d11b      	bne.n	8004f26 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	681a      	ldr	r2, [r3, #0]
 8004ef4:	68fb      	ldr	r3, [r7, #12]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004efc:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004efe:	2300      	movs	r3, #0
 8004f00:	61fb      	str	r3, [r7, #28]
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	695b      	ldr	r3, [r3, #20]
 8004f08:	61fb      	str	r3, [r7, #28]
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	699b      	ldr	r3, [r3, #24]
 8004f10:	61fb      	str	r3, [r7, #28]
 8004f12:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	681a      	ldr	r2, [r3, #0]
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004f22:	601a      	str	r2, [r3, #0]
 8004f24:	e178      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8004f26:	68fb      	ldr	r3, [r7, #12]
 8004f28:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004f2a:	2b02      	cmp	r3, #2
 8004f2c:	d11b      	bne.n	8004f66 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004f2e:	68fb      	ldr	r3, [r7, #12]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	681a      	ldr	r2, [r3, #0]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004f3c:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	681a      	ldr	r2, [r3, #0]
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004f4c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004f4e:	2300      	movs	r3, #0
 8004f50:	61bb      	str	r3, [r7, #24]
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	695b      	ldr	r3, [r3, #20]
 8004f58:	61bb      	str	r3, [r7, #24]
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	699b      	ldr	r3, [r3, #24]
 8004f60:	61bb      	str	r3, [r7, #24]
 8004f62:	69bb      	ldr	r3, [r7, #24]
 8004f64:	e158      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	681a      	ldr	r2, [r3, #0]
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004f74:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004f76:	2300      	movs	r3, #0
 8004f78:	617b      	str	r3, [r7, #20]
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	695b      	ldr	r3, [r3, #20]
 8004f80:	617b      	str	r3, [r7, #20]
 8004f82:	68fb      	ldr	r3, [r7, #12]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	699b      	ldr	r3, [r3, #24]
 8004f88:	617b      	str	r3, [r7, #20]
 8004f8a:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004f8c:	e144      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004f92:	2b03      	cmp	r3, #3
 8004f94:	f200 80f1 	bhi.w	800517a <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004f9c:	2b01      	cmp	r3, #1
 8004f9e:	d123      	bne.n	8004fe8 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fa0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004fa2:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004fa4:	68f8      	ldr	r0, [r7, #12]
 8004fa6:	f000 fc4b 	bl	8005840 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004faa:	4603      	mov	r3, r0
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d001      	beq.n	8004fb4 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8004fb0:	2301      	movs	r3, #1
 8004fb2:	e145      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	691a      	ldr	r2, [r3, #16]
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fbe:	b2d2      	uxtb	r2, r2
 8004fc0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fc6:	1c5a      	adds	r2, r3, #1
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004fd0:	3b01      	subs	r3, #1
 8004fd2:	b29a      	uxth	r2, r3
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004fd8:	68fb      	ldr	r3, [r7, #12]
 8004fda:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004fdc:	b29b      	uxth	r3, r3
 8004fde:	3b01      	subs	r3, #1
 8004fe0:	b29a      	uxth	r2, r3
 8004fe2:	68fb      	ldr	r3, [r7, #12]
 8004fe4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004fe6:	e117      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004fec:	2b02      	cmp	r3, #2
 8004fee:	d14e      	bne.n	800508e <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ff0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ff2:	9300      	str	r3, [sp, #0]
 8004ff4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	4906      	ldr	r1, [pc, #24]	@ (8005014 <HAL_I2C_Master_Receive+0x22c>)
 8004ffa:	68f8      	ldr	r0, [r7, #12]
 8004ffc:	f000 fa76 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 8005000:	4603      	mov	r3, r0
 8005002:	2b00      	cmp	r3, #0
 8005004:	d008      	beq.n	8005018 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8005006:	2301      	movs	r3, #1
 8005008:	e11a      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
 800500a:	bf00      	nop
 800500c:	00100002 	.word	0x00100002
 8005010:	ffff0000 	.word	0xffff0000
 8005014:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	681a      	ldr	r2, [r3, #0]
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005026:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	691a      	ldr	r2, [r3, #16]
 800502e:	68fb      	ldr	r3, [r7, #12]
 8005030:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005032:	b2d2      	uxtb	r2, r2
 8005034:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800503a:	1c5a      	adds	r2, r3, #1
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005044:	3b01      	subs	r3, #1
 8005046:	b29a      	uxth	r2, r3
 8005048:	68fb      	ldr	r3, [r7, #12]
 800504a:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005050:	b29b      	uxth	r3, r3
 8005052:	3b01      	subs	r3, #1
 8005054:	b29a      	uxth	r2, r3
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	691a      	ldr	r2, [r3, #16]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005064:	b2d2      	uxtb	r2, r2
 8005066:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800506c:	1c5a      	adds	r2, r3, #1
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005076:	3b01      	subs	r3, #1
 8005078:	b29a      	uxth	r2, r3
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 800507e:	68fb      	ldr	r3, [r7, #12]
 8005080:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005082:	b29b      	uxth	r3, r3
 8005084:	3b01      	subs	r3, #1
 8005086:	b29a      	uxth	r2, r3
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800508c:	e0c4      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800508e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005090:	9300      	str	r3, [sp, #0]
 8005092:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005094:	2200      	movs	r2, #0
 8005096:	496c      	ldr	r1, [pc, #432]	@ (8005248 <HAL_I2C_Master_Receive+0x460>)
 8005098:	68f8      	ldr	r0, [r7, #12]
 800509a:	f000 fa27 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 800509e:	4603      	mov	r3, r0
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d001      	beq.n	80050a8 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80050a4:	2301      	movs	r3, #1
 80050a6:	e0cb      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	681a      	ldr	r2, [r3, #0]
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80050b6:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	691a      	ldr	r2, [r3, #16]
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050c2:	b2d2      	uxtb	r2, r2
 80050c4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050ca:	1c5a      	adds	r2, r3, #1
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80050d4:	3b01      	subs	r3, #1
 80050d6:	b29a      	uxth	r2, r3
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80050e0:	b29b      	uxth	r3, r3
 80050e2:	3b01      	subs	r3, #1
 80050e4:	b29a      	uxth	r2, r3
 80050e6:	68fb      	ldr	r3, [r7, #12]
 80050e8:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050ec:	9300      	str	r3, [sp, #0]
 80050ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80050f0:	2200      	movs	r2, #0
 80050f2:	4955      	ldr	r1, [pc, #340]	@ (8005248 <HAL_I2C_Master_Receive+0x460>)
 80050f4:	68f8      	ldr	r0, [r7, #12]
 80050f6:	f000 f9f9 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 80050fa:	4603      	mov	r3, r0
 80050fc:	2b00      	cmp	r3, #0
 80050fe:	d001      	beq.n	8005104 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8005100:	2301      	movs	r3, #1
 8005102:	e09d      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	681a      	ldr	r2, [r3, #0]
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005112:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005114:	68fb      	ldr	r3, [r7, #12]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	691a      	ldr	r2, [r3, #16]
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800511e:	b2d2      	uxtb	r2, r2
 8005120:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005122:	68fb      	ldr	r3, [r7, #12]
 8005124:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005126:	1c5a      	adds	r2, r3, #1
 8005128:	68fb      	ldr	r3, [r7, #12]
 800512a:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 800512c:	68fb      	ldr	r3, [r7, #12]
 800512e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005130:	3b01      	subs	r3, #1
 8005132:	b29a      	uxth	r2, r3
 8005134:	68fb      	ldr	r3, [r7, #12]
 8005136:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800513c:	b29b      	uxth	r3, r3
 800513e:	3b01      	subs	r3, #1
 8005140:	b29a      	uxth	r2, r3
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	691a      	ldr	r2, [r3, #16]
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005150:	b2d2      	uxtb	r2, r2
 8005152:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005158:	1c5a      	adds	r2, r3, #1
 800515a:	68fb      	ldr	r3, [r7, #12]
 800515c:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005162:	3b01      	subs	r3, #1
 8005164:	b29a      	uxth	r2, r3
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800516e:	b29b      	uxth	r3, r3
 8005170:	3b01      	subs	r3, #1
 8005172:	b29a      	uxth	r2, r3
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005178:	e04e      	b.n	8005218 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800517a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800517c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800517e:	68f8      	ldr	r0, [r7, #12]
 8005180:	f000 fb5e 	bl	8005840 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005184:	4603      	mov	r3, r0
 8005186:	2b00      	cmp	r3, #0
 8005188:	d001      	beq.n	800518e <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 800518a:	2301      	movs	r3, #1
 800518c:	e058      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800518e:	68fb      	ldr	r3, [r7, #12]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	691a      	ldr	r2, [r3, #16]
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005198:	b2d2      	uxtb	r2, r2
 800519a:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051a0:	1c5a      	adds	r2, r3, #1
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 80051a6:	68fb      	ldr	r3, [r7, #12]
 80051a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80051aa:	3b01      	subs	r3, #1
 80051ac:	b29a      	uxth	r2, r3
 80051ae:	68fb      	ldr	r3, [r7, #12]
 80051b0:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 80051b2:	68fb      	ldr	r3, [r7, #12]
 80051b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80051b6:	b29b      	uxth	r3, r3
 80051b8:	3b01      	subs	r3, #1
 80051ba:	b29a      	uxth	r2, r3
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	695b      	ldr	r3, [r3, #20]
 80051c6:	f003 0304 	and.w	r3, r3, #4
 80051ca:	2b04      	cmp	r3, #4
 80051cc:	d124      	bne.n	8005218 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80051d2:	2b03      	cmp	r3, #3
 80051d4:	d107      	bne.n	80051e6 <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80051d6:	68fb      	ldr	r3, [r7, #12]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	681a      	ldr	r2, [r3, #0]
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80051e4:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	691a      	ldr	r2, [r3, #16]
 80051ec:	68fb      	ldr	r3, [r7, #12]
 80051ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051f0:	b2d2      	uxtb	r2, r2
 80051f2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80051f4:	68fb      	ldr	r3, [r7, #12]
 80051f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051f8:	1c5a      	adds	r2, r3, #1
 80051fa:	68fb      	ldr	r3, [r7, #12]
 80051fc:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80051fe:	68fb      	ldr	r3, [r7, #12]
 8005200:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005202:	3b01      	subs	r3, #1
 8005204:	b29a      	uxth	r2, r3
 8005206:	68fb      	ldr	r3, [r7, #12]
 8005208:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800520e:	b29b      	uxth	r3, r3
 8005210:	3b01      	subs	r3, #1
 8005212:	b29a      	uxth	r2, r3
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800521c:	2b00      	cmp	r3, #0
 800521e:	f47f aeb6 	bne.w	8004f8e <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8005222:	68fb      	ldr	r3, [r7, #12]
 8005224:	2220      	movs	r2, #32
 8005226:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	2200      	movs	r2, #0
 800522e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	2200      	movs	r2, #0
 8005236:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 800523a:	2300      	movs	r3, #0
 800523c:	e000      	b.n	8005240 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 800523e:	2302      	movs	r3, #2
  }
}
 8005240:	4618      	mov	r0, r3
 8005242:	3728      	adds	r7, #40	@ 0x28
 8005244:	46bd      	mov	sp, r7
 8005246:	bd80      	pop	{r7, pc}
 8005248:	00010004 	.word	0x00010004

0800524c <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 800524c:	b580      	push	{r7, lr}
 800524e:	b088      	sub	sp, #32
 8005250:	af02      	add	r7, sp, #8
 8005252:	60f8      	str	r0, [r7, #12]
 8005254:	607a      	str	r2, [r7, #4]
 8005256:	603b      	str	r3, [r7, #0]
 8005258:	460b      	mov	r3, r1
 800525a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005260:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005262:	697b      	ldr	r3, [r7, #20]
 8005264:	2b08      	cmp	r3, #8
 8005266:	d006      	beq.n	8005276 <I2C_MasterRequestWrite+0x2a>
 8005268:	697b      	ldr	r3, [r7, #20]
 800526a:	2b01      	cmp	r3, #1
 800526c:	d003      	beq.n	8005276 <I2C_MasterRequestWrite+0x2a>
 800526e:	697b      	ldr	r3, [r7, #20]
 8005270:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005274:	d108      	bne.n	8005288 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	681a      	ldr	r2, [r3, #0]
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005284:	601a      	str	r2, [r3, #0]
 8005286:	e00b      	b.n	80052a0 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800528c:	2b12      	cmp	r3, #18
 800528e:	d107      	bne.n	80052a0 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	681b      	ldr	r3, [r3, #0]
 8005294:	681a      	ldr	r2, [r3, #0]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800529e:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80052a0:	683b      	ldr	r3, [r7, #0]
 80052a2:	9300      	str	r3, [sp, #0]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	2200      	movs	r2, #0
 80052a8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80052ac:	68f8      	ldr	r0, [r7, #12]
 80052ae:	f000 f91d 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 80052b2:	4603      	mov	r3, r0
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	d00d      	beq.n	80052d4 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80052b8:	68fb      	ldr	r3, [r7, #12]
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80052c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80052c6:	d103      	bne.n	80052d0 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80052ce:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 80052d0:	2303      	movs	r3, #3
 80052d2:	e035      	b.n	8005340 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	691b      	ldr	r3, [r3, #16]
 80052d8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80052dc:	d108      	bne.n	80052f0 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80052de:	897b      	ldrh	r3, [r7, #10]
 80052e0:	b2db      	uxtb	r3, r3
 80052e2:	461a      	mov	r2, r3
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80052ec:	611a      	str	r2, [r3, #16]
 80052ee:	e01b      	b.n	8005328 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 80052f0:	897b      	ldrh	r3, [r7, #10]
 80052f2:	11db      	asrs	r3, r3, #7
 80052f4:	b2db      	uxtb	r3, r3
 80052f6:	f003 0306 	and.w	r3, r3, #6
 80052fa:	b2db      	uxtb	r3, r3
 80052fc:	f063 030f 	orn	r3, r3, #15
 8005300:	b2da      	uxtb	r2, r3
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005308:	683b      	ldr	r3, [r7, #0]
 800530a:	687a      	ldr	r2, [r7, #4]
 800530c:	490e      	ldr	r1, [pc, #56]	@ (8005348 <I2C_MasterRequestWrite+0xfc>)
 800530e:	68f8      	ldr	r0, [r7, #12]
 8005310:	f000 f966 	bl	80055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005314:	4603      	mov	r3, r0
 8005316:	2b00      	cmp	r3, #0
 8005318:	d001      	beq.n	800531e <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 800531a:	2301      	movs	r3, #1
 800531c:	e010      	b.n	8005340 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 800531e:	897b      	ldrh	r3, [r7, #10]
 8005320:	b2da      	uxtb	r2, r3
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005328:	683b      	ldr	r3, [r7, #0]
 800532a:	687a      	ldr	r2, [r7, #4]
 800532c:	4907      	ldr	r1, [pc, #28]	@ (800534c <I2C_MasterRequestWrite+0x100>)
 800532e:	68f8      	ldr	r0, [r7, #12]
 8005330:	f000 f956 	bl	80055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005334:	4603      	mov	r3, r0
 8005336:	2b00      	cmp	r3, #0
 8005338:	d001      	beq.n	800533e <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 800533a:	2301      	movs	r3, #1
 800533c:	e000      	b.n	8005340 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 800533e:	2300      	movs	r3, #0
}
 8005340:	4618      	mov	r0, r3
 8005342:	3718      	adds	r7, #24
 8005344:	46bd      	mov	sp, r7
 8005346:	bd80      	pop	{r7, pc}
 8005348:	00010008 	.word	0x00010008
 800534c:	00010002 	.word	0x00010002

08005350 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005350:	b580      	push	{r7, lr}
 8005352:	b088      	sub	sp, #32
 8005354:	af02      	add	r7, sp, #8
 8005356:	60f8      	str	r0, [r7, #12]
 8005358:	607a      	str	r2, [r7, #4]
 800535a:	603b      	str	r3, [r7, #0]
 800535c:	460b      	mov	r3, r1
 800535e:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005360:	68fb      	ldr	r3, [r7, #12]
 8005362:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005364:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	681b      	ldr	r3, [r3, #0]
 800536a:	681a      	ldr	r2, [r3, #0]
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005374:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005376:	697b      	ldr	r3, [r7, #20]
 8005378:	2b08      	cmp	r3, #8
 800537a:	d006      	beq.n	800538a <I2C_MasterRequestRead+0x3a>
 800537c:	697b      	ldr	r3, [r7, #20]
 800537e:	2b01      	cmp	r3, #1
 8005380:	d003      	beq.n	800538a <I2C_MasterRequestRead+0x3a>
 8005382:	697b      	ldr	r3, [r7, #20]
 8005384:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005388:	d108      	bne.n	800539c <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	681b      	ldr	r3, [r3, #0]
 800538e:	681a      	ldr	r2, [r3, #0]
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005398:	601a      	str	r2, [r3, #0]
 800539a:	e00b      	b.n	80053b4 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 800539c:	68fb      	ldr	r3, [r7, #12]
 800539e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053a0:	2b11      	cmp	r3, #17
 80053a2:	d107      	bne.n	80053b4 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	681a      	ldr	r2, [r3, #0]
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80053b2:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80053b4:	683b      	ldr	r3, [r7, #0]
 80053b6:	9300      	str	r3, [sp, #0]
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	2200      	movs	r2, #0
 80053bc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80053c0:	68f8      	ldr	r0, [r7, #12]
 80053c2:	f000 f893 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 80053c6:	4603      	mov	r3, r0
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d00d      	beq.n	80053e8 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80053d6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80053da:	d103      	bne.n	80053e4 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80053e2:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 80053e4:	2303      	movs	r3, #3
 80053e6:	e079      	b.n	80054dc <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	691b      	ldr	r3, [r3, #16]
 80053ec:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80053f0:	d108      	bne.n	8005404 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80053f2:	897b      	ldrh	r3, [r7, #10]
 80053f4:	b2db      	uxtb	r3, r3
 80053f6:	f043 0301 	orr.w	r3, r3, #1
 80053fa:	b2da      	uxtb	r2, r3
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	611a      	str	r2, [r3, #16]
 8005402:	e05f      	b.n	80054c4 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005404:	897b      	ldrh	r3, [r7, #10]
 8005406:	11db      	asrs	r3, r3, #7
 8005408:	b2db      	uxtb	r3, r3
 800540a:	f003 0306 	and.w	r3, r3, #6
 800540e:	b2db      	uxtb	r3, r3
 8005410:	f063 030f 	orn	r3, r3, #15
 8005414:	b2da      	uxtb	r2, r3
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 800541c:	683b      	ldr	r3, [r7, #0]
 800541e:	687a      	ldr	r2, [r7, #4]
 8005420:	4930      	ldr	r1, [pc, #192]	@ (80054e4 <I2C_MasterRequestRead+0x194>)
 8005422:	68f8      	ldr	r0, [r7, #12]
 8005424:	f000 f8dc 	bl	80055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005428:	4603      	mov	r3, r0
 800542a:	2b00      	cmp	r3, #0
 800542c:	d001      	beq.n	8005432 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 800542e:	2301      	movs	r3, #1
 8005430:	e054      	b.n	80054dc <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005432:	897b      	ldrh	r3, [r7, #10]
 8005434:	b2da      	uxtb	r2, r3
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	687a      	ldr	r2, [r7, #4]
 8005440:	4929      	ldr	r1, [pc, #164]	@ (80054e8 <I2C_MasterRequestRead+0x198>)
 8005442:	68f8      	ldr	r0, [r7, #12]
 8005444:	f000 f8cc 	bl	80055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005448:	4603      	mov	r3, r0
 800544a:	2b00      	cmp	r3, #0
 800544c:	d001      	beq.n	8005452 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 800544e:	2301      	movs	r3, #1
 8005450:	e044      	b.n	80054dc <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005452:	2300      	movs	r3, #0
 8005454:	613b      	str	r3, [r7, #16]
 8005456:	68fb      	ldr	r3, [r7, #12]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	695b      	ldr	r3, [r3, #20]
 800545c:	613b      	str	r3, [r7, #16]
 800545e:	68fb      	ldr	r3, [r7, #12]
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	699b      	ldr	r3, [r3, #24]
 8005464:	613b      	str	r3, [r7, #16]
 8005466:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	681a      	ldr	r2, [r3, #0]
 800546e:	68fb      	ldr	r3, [r7, #12]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005476:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005478:	683b      	ldr	r3, [r7, #0]
 800547a:	9300      	str	r3, [sp, #0]
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	2200      	movs	r2, #0
 8005480:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005484:	68f8      	ldr	r0, [r7, #12]
 8005486:	f000 f831 	bl	80054ec <I2C_WaitOnFlagUntilTimeout>
 800548a:	4603      	mov	r3, r0
 800548c:	2b00      	cmp	r3, #0
 800548e:	d00d      	beq.n	80054ac <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800549a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800549e:	d103      	bne.n	80054a8 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80054a6:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 80054a8:	2303      	movs	r3, #3
 80054aa:	e017      	b.n	80054dc <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 80054ac:	897b      	ldrh	r3, [r7, #10]
 80054ae:	11db      	asrs	r3, r3, #7
 80054b0:	b2db      	uxtb	r3, r3
 80054b2:	f003 0306 	and.w	r3, r3, #6
 80054b6:	b2db      	uxtb	r3, r3
 80054b8:	f063 030e 	orn	r3, r3, #14
 80054bc:	b2da      	uxtb	r2, r3
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80054c4:	683b      	ldr	r3, [r7, #0]
 80054c6:	687a      	ldr	r2, [r7, #4]
 80054c8:	4907      	ldr	r1, [pc, #28]	@ (80054e8 <I2C_MasterRequestRead+0x198>)
 80054ca:	68f8      	ldr	r0, [r7, #12]
 80054cc:	f000 f888 	bl	80055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80054d0:	4603      	mov	r3, r0
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d001      	beq.n	80054da <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 80054d6:	2301      	movs	r3, #1
 80054d8:	e000      	b.n	80054dc <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 80054da:	2300      	movs	r3, #0
}
 80054dc:	4618      	mov	r0, r3
 80054de:	3718      	adds	r7, #24
 80054e0:	46bd      	mov	sp, r7
 80054e2:	bd80      	pop	{r7, pc}
 80054e4:	00010008 	.word	0x00010008
 80054e8:	00010002 	.word	0x00010002

080054ec <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 80054ec:	b580      	push	{r7, lr}
 80054ee:	b084      	sub	sp, #16
 80054f0:	af00      	add	r7, sp, #0
 80054f2:	60f8      	str	r0, [r7, #12]
 80054f4:	60b9      	str	r1, [r7, #8]
 80054f6:	603b      	str	r3, [r7, #0]
 80054f8:	4613      	mov	r3, r2
 80054fa:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80054fc:	e048      	b.n	8005590 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80054fe:	683b      	ldr	r3, [r7, #0]
 8005500:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005504:	d044      	beq.n	8005590 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005506:	f7fd fb75 	bl	8002bf4 <HAL_GetTick>
 800550a:	4602      	mov	r2, r0
 800550c:	69bb      	ldr	r3, [r7, #24]
 800550e:	1ad3      	subs	r3, r2, r3
 8005510:	683a      	ldr	r2, [r7, #0]
 8005512:	429a      	cmp	r2, r3
 8005514:	d302      	bcc.n	800551c <I2C_WaitOnFlagUntilTimeout+0x30>
 8005516:	683b      	ldr	r3, [r7, #0]
 8005518:	2b00      	cmp	r3, #0
 800551a:	d139      	bne.n	8005590 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800551c:	68bb      	ldr	r3, [r7, #8]
 800551e:	0c1b      	lsrs	r3, r3, #16
 8005520:	b2db      	uxtb	r3, r3
 8005522:	2b01      	cmp	r3, #1
 8005524:	d10d      	bne.n	8005542 <I2C_WaitOnFlagUntilTimeout+0x56>
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	695b      	ldr	r3, [r3, #20]
 800552c:	43da      	mvns	r2, r3
 800552e:	68bb      	ldr	r3, [r7, #8]
 8005530:	4013      	ands	r3, r2
 8005532:	b29b      	uxth	r3, r3
 8005534:	2b00      	cmp	r3, #0
 8005536:	bf0c      	ite	eq
 8005538:	2301      	moveq	r3, #1
 800553a:	2300      	movne	r3, #0
 800553c:	b2db      	uxtb	r3, r3
 800553e:	461a      	mov	r2, r3
 8005540:	e00c      	b.n	800555c <I2C_WaitOnFlagUntilTimeout+0x70>
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	699b      	ldr	r3, [r3, #24]
 8005548:	43da      	mvns	r2, r3
 800554a:	68bb      	ldr	r3, [r7, #8]
 800554c:	4013      	ands	r3, r2
 800554e:	b29b      	uxth	r3, r3
 8005550:	2b00      	cmp	r3, #0
 8005552:	bf0c      	ite	eq
 8005554:	2301      	moveq	r3, #1
 8005556:	2300      	movne	r3, #0
 8005558:	b2db      	uxtb	r3, r3
 800555a:	461a      	mov	r2, r3
 800555c:	79fb      	ldrb	r3, [r7, #7]
 800555e:	429a      	cmp	r2, r3
 8005560:	d116      	bne.n	8005590 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	2200      	movs	r2, #0
 8005566:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	2220      	movs	r2, #32
 800556c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	2200      	movs	r2, #0
 8005574:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800557c:	f043 0220 	orr.w	r2, r3, #32
 8005580:	68fb      	ldr	r3, [r7, #12]
 8005582:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	2200      	movs	r2, #0
 8005588:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 800558c:	2301      	movs	r3, #1
 800558e:	e023      	b.n	80055d8 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005590:	68bb      	ldr	r3, [r7, #8]
 8005592:	0c1b      	lsrs	r3, r3, #16
 8005594:	b2db      	uxtb	r3, r3
 8005596:	2b01      	cmp	r3, #1
 8005598:	d10d      	bne.n	80055b6 <I2C_WaitOnFlagUntilTimeout+0xca>
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	695b      	ldr	r3, [r3, #20]
 80055a0:	43da      	mvns	r2, r3
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	4013      	ands	r3, r2
 80055a6:	b29b      	uxth	r3, r3
 80055a8:	2b00      	cmp	r3, #0
 80055aa:	bf0c      	ite	eq
 80055ac:	2301      	moveq	r3, #1
 80055ae:	2300      	movne	r3, #0
 80055b0:	b2db      	uxtb	r3, r3
 80055b2:	461a      	mov	r2, r3
 80055b4:	e00c      	b.n	80055d0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	699b      	ldr	r3, [r3, #24]
 80055bc:	43da      	mvns	r2, r3
 80055be:	68bb      	ldr	r3, [r7, #8]
 80055c0:	4013      	ands	r3, r2
 80055c2:	b29b      	uxth	r3, r3
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	bf0c      	ite	eq
 80055c8:	2301      	moveq	r3, #1
 80055ca:	2300      	movne	r3, #0
 80055cc:	b2db      	uxtb	r3, r3
 80055ce:	461a      	mov	r2, r3
 80055d0:	79fb      	ldrb	r3, [r7, #7]
 80055d2:	429a      	cmp	r2, r3
 80055d4:	d093      	beq.n	80054fe <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80055d6:	2300      	movs	r3, #0
}
 80055d8:	4618      	mov	r0, r3
 80055da:	3710      	adds	r7, #16
 80055dc:	46bd      	mov	sp, r7
 80055de:	bd80      	pop	{r7, pc}

080055e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 80055e0:	b580      	push	{r7, lr}
 80055e2:	b084      	sub	sp, #16
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	60f8      	str	r0, [r7, #12]
 80055e8:	60b9      	str	r1, [r7, #8]
 80055ea:	607a      	str	r2, [r7, #4]
 80055ec:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80055ee:	e071      	b.n	80056d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	695b      	ldr	r3, [r3, #20]
 80055f6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80055fa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80055fe:	d123      	bne.n	8005648 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	681a      	ldr	r2, [r3, #0]
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800560e:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005618:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	2200      	movs	r2, #0
 800561e:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	2220      	movs	r2, #32
 8005624:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	2200      	movs	r2, #0
 800562c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005634:	f043 0204 	orr.w	r2, r3, #4
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	2200      	movs	r2, #0
 8005640:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005644:	2301      	movs	r3, #1
 8005646:	e067      	b.n	8005718 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800564e:	d041      	beq.n	80056d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005650:	f7fd fad0 	bl	8002bf4 <HAL_GetTick>
 8005654:	4602      	mov	r2, r0
 8005656:	683b      	ldr	r3, [r7, #0]
 8005658:	1ad3      	subs	r3, r2, r3
 800565a:	687a      	ldr	r2, [r7, #4]
 800565c:	429a      	cmp	r2, r3
 800565e:	d302      	bcc.n	8005666 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	2b00      	cmp	r3, #0
 8005664:	d136      	bne.n	80056d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8005666:	68bb      	ldr	r3, [r7, #8]
 8005668:	0c1b      	lsrs	r3, r3, #16
 800566a:	b2db      	uxtb	r3, r3
 800566c:	2b01      	cmp	r3, #1
 800566e:	d10c      	bne.n	800568a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	695b      	ldr	r3, [r3, #20]
 8005676:	43da      	mvns	r2, r3
 8005678:	68bb      	ldr	r3, [r7, #8]
 800567a:	4013      	ands	r3, r2
 800567c:	b29b      	uxth	r3, r3
 800567e:	2b00      	cmp	r3, #0
 8005680:	bf14      	ite	ne
 8005682:	2301      	movne	r3, #1
 8005684:	2300      	moveq	r3, #0
 8005686:	b2db      	uxtb	r3, r3
 8005688:	e00b      	b.n	80056a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	699b      	ldr	r3, [r3, #24]
 8005690:	43da      	mvns	r2, r3
 8005692:	68bb      	ldr	r3, [r7, #8]
 8005694:	4013      	ands	r3, r2
 8005696:	b29b      	uxth	r3, r3
 8005698:	2b00      	cmp	r3, #0
 800569a:	bf14      	ite	ne
 800569c:	2301      	movne	r3, #1
 800569e:	2300      	moveq	r3, #0
 80056a0:	b2db      	uxtb	r3, r3
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d016      	beq.n	80056d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	2200      	movs	r2, #0
 80056aa:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	2220      	movs	r2, #32
 80056b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	2200      	movs	r2, #0
 80056b8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80056bc:	68fb      	ldr	r3, [r7, #12]
 80056be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80056c0:	f043 0220 	orr.w	r2, r3, #32
 80056c4:	68fb      	ldr	r3, [r7, #12]
 80056c6:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	2200      	movs	r2, #0
 80056cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80056d0:	2301      	movs	r3, #1
 80056d2:	e021      	b.n	8005718 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80056d4:	68bb      	ldr	r3, [r7, #8]
 80056d6:	0c1b      	lsrs	r3, r3, #16
 80056d8:	b2db      	uxtb	r3, r3
 80056da:	2b01      	cmp	r3, #1
 80056dc:	d10c      	bne.n	80056f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	695b      	ldr	r3, [r3, #20]
 80056e4:	43da      	mvns	r2, r3
 80056e6:	68bb      	ldr	r3, [r7, #8]
 80056e8:	4013      	ands	r3, r2
 80056ea:	b29b      	uxth	r3, r3
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	bf14      	ite	ne
 80056f0:	2301      	movne	r3, #1
 80056f2:	2300      	moveq	r3, #0
 80056f4:	b2db      	uxtb	r3, r3
 80056f6:	e00b      	b.n	8005710 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80056f8:	68fb      	ldr	r3, [r7, #12]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	699b      	ldr	r3, [r3, #24]
 80056fe:	43da      	mvns	r2, r3
 8005700:	68bb      	ldr	r3, [r7, #8]
 8005702:	4013      	ands	r3, r2
 8005704:	b29b      	uxth	r3, r3
 8005706:	2b00      	cmp	r3, #0
 8005708:	bf14      	ite	ne
 800570a:	2301      	movne	r3, #1
 800570c:	2300      	moveq	r3, #0
 800570e:	b2db      	uxtb	r3, r3
 8005710:	2b00      	cmp	r3, #0
 8005712:	f47f af6d 	bne.w	80055f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8005716:	2300      	movs	r3, #0
}
 8005718:	4618      	mov	r0, r3
 800571a:	3710      	adds	r7, #16
 800571c:	46bd      	mov	sp, r7
 800571e:	bd80      	pop	{r7, pc}

08005720 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005720:	b580      	push	{r7, lr}
 8005722:	b084      	sub	sp, #16
 8005724:	af00      	add	r7, sp, #0
 8005726:	60f8      	str	r0, [r7, #12]
 8005728:	60b9      	str	r1, [r7, #8]
 800572a:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800572c:	e034      	b.n	8005798 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800572e:	68f8      	ldr	r0, [r7, #12]
 8005730:	f000 f8e3 	bl	80058fa <I2C_IsAcknowledgeFailed>
 8005734:	4603      	mov	r3, r0
 8005736:	2b00      	cmp	r3, #0
 8005738:	d001      	beq.n	800573e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800573a:	2301      	movs	r3, #1
 800573c:	e034      	b.n	80057a8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800573e:	68bb      	ldr	r3, [r7, #8]
 8005740:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005744:	d028      	beq.n	8005798 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005746:	f7fd fa55 	bl	8002bf4 <HAL_GetTick>
 800574a:	4602      	mov	r2, r0
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	1ad3      	subs	r3, r2, r3
 8005750:	68ba      	ldr	r2, [r7, #8]
 8005752:	429a      	cmp	r2, r3
 8005754:	d302      	bcc.n	800575c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8005756:	68bb      	ldr	r3, [r7, #8]
 8005758:	2b00      	cmp	r3, #0
 800575a:	d11d      	bne.n	8005798 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	695b      	ldr	r3, [r3, #20]
 8005762:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005766:	2b80      	cmp	r3, #128	@ 0x80
 8005768:	d016      	beq.n	8005798 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2200      	movs	r2, #0
 800576e:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	2220      	movs	r2, #32
 8005774:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	2200      	movs	r2, #0
 800577c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005780:	68fb      	ldr	r3, [r7, #12]
 8005782:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005784:	f043 0220 	orr.w	r2, r3, #32
 8005788:	68fb      	ldr	r3, [r7, #12]
 800578a:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	2200      	movs	r2, #0
 8005790:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005794:	2301      	movs	r3, #1
 8005796:	e007      	b.n	80057a8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	681b      	ldr	r3, [r3, #0]
 800579c:	695b      	ldr	r3, [r3, #20]
 800579e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80057a2:	2b80      	cmp	r3, #128	@ 0x80
 80057a4:	d1c3      	bne.n	800572e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80057a6:	2300      	movs	r3, #0
}
 80057a8:	4618      	mov	r0, r3
 80057aa:	3710      	adds	r7, #16
 80057ac:	46bd      	mov	sp, r7
 80057ae:	bd80      	pop	{r7, pc}

080057b0 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80057b0:	b580      	push	{r7, lr}
 80057b2:	b084      	sub	sp, #16
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	60f8      	str	r0, [r7, #12]
 80057b8:	60b9      	str	r1, [r7, #8]
 80057ba:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80057bc:	e034      	b.n	8005828 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80057be:	68f8      	ldr	r0, [r7, #12]
 80057c0:	f000 f89b 	bl	80058fa <I2C_IsAcknowledgeFailed>
 80057c4:	4603      	mov	r3, r0
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	d001      	beq.n	80057ce <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80057ca:	2301      	movs	r3, #1
 80057cc:	e034      	b.n	8005838 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80057ce:	68bb      	ldr	r3, [r7, #8]
 80057d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057d4:	d028      	beq.n	8005828 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057d6:	f7fd fa0d 	bl	8002bf4 <HAL_GetTick>
 80057da:	4602      	mov	r2, r0
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	1ad3      	subs	r3, r2, r3
 80057e0:	68ba      	ldr	r2, [r7, #8]
 80057e2:	429a      	cmp	r2, r3
 80057e4:	d302      	bcc.n	80057ec <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80057e6:	68bb      	ldr	r3, [r7, #8]
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d11d      	bne.n	8005828 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80057ec:	68fb      	ldr	r3, [r7, #12]
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	695b      	ldr	r3, [r3, #20]
 80057f2:	f003 0304 	and.w	r3, r3, #4
 80057f6:	2b04      	cmp	r3, #4
 80057f8:	d016      	beq.n	8005828 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	2200      	movs	r2, #0
 80057fe:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	2220      	movs	r2, #32
 8005804:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	2200      	movs	r2, #0
 800580c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005814:	f043 0220 	orr.w	r2, r3, #32
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 800581c:	68fb      	ldr	r3, [r7, #12]
 800581e:	2200      	movs	r2, #0
 8005820:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005824:	2301      	movs	r3, #1
 8005826:	e007      	b.n	8005838 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	695b      	ldr	r3, [r3, #20]
 800582e:	f003 0304 	and.w	r3, r3, #4
 8005832:	2b04      	cmp	r3, #4
 8005834:	d1c3      	bne.n	80057be <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8005836:	2300      	movs	r3, #0
}
 8005838:	4618      	mov	r0, r3
 800583a:	3710      	adds	r7, #16
 800583c:	46bd      	mov	sp, r7
 800583e:	bd80      	pop	{r7, pc}

08005840 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005840:	b580      	push	{r7, lr}
 8005842:	b084      	sub	sp, #16
 8005844:	af00      	add	r7, sp, #0
 8005846:	60f8      	str	r0, [r7, #12]
 8005848:	60b9      	str	r1, [r7, #8]
 800584a:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800584c:	e049      	b.n	80058e2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800584e:	68fb      	ldr	r3, [r7, #12]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	695b      	ldr	r3, [r3, #20]
 8005854:	f003 0310 	and.w	r3, r3, #16
 8005858:	2b10      	cmp	r3, #16
 800585a:	d119      	bne.n	8005890 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	681b      	ldr	r3, [r3, #0]
 8005860:	f06f 0210 	mvn.w	r2, #16
 8005864:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	2200      	movs	r2, #0
 800586a:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	2220      	movs	r2, #32
 8005870:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	2200      	movs	r2, #0
 8005878:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	2200      	movs	r2, #0
 8005888:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 800588c:	2301      	movs	r3, #1
 800588e:	e030      	b.n	80058f2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005890:	f7fd f9b0 	bl	8002bf4 <HAL_GetTick>
 8005894:	4602      	mov	r2, r0
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	1ad3      	subs	r3, r2, r3
 800589a:	68ba      	ldr	r2, [r7, #8]
 800589c:	429a      	cmp	r2, r3
 800589e:	d302      	bcc.n	80058a6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80058a0:	68bb      	ldr	r3, [r7, #8]
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d11d      	bne.n	80058e2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	695b      	ldr	r3, [r3, #20]
 80058ac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058b0:	2b40      	cmp	r3, #64	@ 0x40
 80058b2:	d016      	beq.n	80058e2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	2200      	movs	r2, #0
 80058b8:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	2220      	movs	r2, #32
 80058be:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	2200      	movs	r2, #0
 80058c6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80058ce:	f043 0220 	orr.w	r2, r3, #32
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	2200      	movs	r2, #0
 80058da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 80058de:	2301      	movs	r3, #1
 80058e0:	e007      	b.n	80058f2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	695b      	ldr	r3, [r3, #20]
 80058e8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058ec:	2b40      	cmp	r3, #64	@ 0x40
 80058ee:	d1ae      	bne.n	800584e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80058f0:	2300      	movs	r3, #0
}
 80058f2:	4618      	mov	r0, r3
 80058f4:	3710      	adds	r7, #16
 80058f6:	46bd      	mov	sp, r7
 80058f8:	bd80      	pop	{r7, pc}

080058fa <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80058fa:	b480      	push	{r7}
 80058fc:	b083      	sub	sp, #12
 80058fe:	af00      	add	r7, sp, #0
 8005900:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	695b      	ldr	r3, [r3, #20]
 8005908:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800590c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005910:	d11b      	bne.n	800594a <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800591a:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	2200      	movs	r2, #0
 8005920:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	2220      	movs	r2, #32
 8005926:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	2200      	movs	r2, #0
 800592e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005936:	f043 0204 	orr.w	r2, r3, #4
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	2200      	movs	r2, #0
 8005942:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8005946:	2301      	movs	r3, #1
 8005948:	e000      	b.n	800594c <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 800594a:	2300      	movs	r3, #0
}
 800594c:	4618      	mov	r0, r3
 800594e:	370c      	adds	r7, #12
 8005950:	46bd      	mov	sp, r7
 8005952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005956:	4770      	bx	lr

08005958 <HAL_I2S_Init>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_Init(I2S_HandleTypeDef *hi2s)
{
 8005958:	b580      	push	{r7, lr}
 800595a:	b088      	sub	sp, #32
 800595c:	af00      	add	r7, sp, #0
 800595e:	6078      	str	r0, [r7, #4]
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)
  uint16_t tmpreg;
#endif

  /* Check the I2S handle allocation */
  if (hi2s == NULL)
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	2b00      	cmp	r3, #0
 8005964:	d101      	bne.n	800596a <HAL_I2S_Init+0x12>
  {
    return HAL_ERROR;
 8005966:	2301      	movs	r3, #1
 8005968:	e128      	b.n	8005bbc <HAL_I2S_Init+0x264>
  assert_param(IS_I2S_MCLK_OUTPUT(hi2s->Init.MCLKOutput));
  assert_param(IS_I2S_AUDIO_FREQ(hi2s->Init.AudioFreq));
  assert_param(IS_I2S_CPOL(hi2s->Init.CPOL));
  assert_param(IS_I2S_CLOCKSOURCE(hi2s->Init.ClockSource));

  if (hi2s->State == HAL_I2S_STATE_RESET)
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005970:	b2db      	uxtb	r3, r3
 8005972:	2b00      	cmp	r3, #0
 8005974:	d109      	bne.n	800598a <HAL_I2S_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hi2s->Lock = HAL_UNLOCKED;
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	2200      	movs	r2, #0
 800597a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Initialize Default I2S IrqHandler ISR */
    hi2s->IrqHandlerISR = I2S_IRQHandler;
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	4a90      	ldr	r2, [pc, #576]	@ (8005bc4 <HAL_I2S_Init+0x26c>)
 8005982:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hi2s->MspInitCallback(hi2s);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2S_MspInit(hi2s);
 8005984:	6878      	ldr	r0, [r7, #4]
 8005986:	f7fb ffdd 	bl	8001944 <HAL_I2S_MspInit>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }

  hi2s->State = HAL_I2S_STATE_BUSY;
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	2202      	movs	r2, #2
 800598e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /*----------------------- SPIx I2SCFGR & I2SPR Configuration ----------------*/
  /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
  CLEAR_BIT(hi2s->Instance->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CKPOL | \
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	69db      	ldr	r3, [r3, #28]
 8005998:	687a      	ldr	r2, [r7, #4]
 800599a:	6812      	ldr	r2, [r2, #0]
 800599c:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 80059a0:	f023 030f 	bic.w	r3, r3, #15
 80059a4:	61d3      	str	r3, [r2, #28]
                                      SPI_I2SCFGR_I2SSTD | SPI_I2SCFGR_PCMSYNC | SPI_I2SCFGR_I2SCFG | \
                                      SPI_I2SCFGR_I2SE | SPI_I2SCFGR_I2SMOD));
  hi2s->Instance->I2SPR = 0x0002U;
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	2202      	movs	r2, #2
 80059ac:	621a      	str	r2, [r3, #32]

  /*----------------------- I2SPR: I2SDIV and ODD Calculation -----------------*/
  /* If the requested audio frequency is not the default, compute the prescaler */
  if (hi2s->Init.AudioFreq != I2S_AUDIOFREQ_DEFAULT)
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	695b      	ldr	r3, [r3, #20]
 80059b2:	2b02      	cmp	r3, #2
 80059b4:	d060      	beq.n	8005a78 <HAL_I2S_Init+0x120>
  {
    /* Check the frame length (For the Prescaler computing) ********************/
    if (hi2s->Init.DataFormat == I2S_DATAFORMAT_16B)
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	68db      	ldr	r3, [r3, #12]
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	d102      	bne.n	80059c4 <HAL_I2S_Init+0x6c>
    {
      /* Packet length is 16 bits */
      packetlength = 16U;
 80059be:	2310      	movs	r3, #16
 80059c0:	617b      	str	r3, [r7, #20]
 80059c2:	e001      	b.n	80059c8 <HAL_I2S_Init+0x70>
    }
    else
    {
      /* Packet length is 32 bits */
      packetlength = 32U;
 80059c4:	2320      	movs	r3, #32
 80059c6:	617b      	str	r3, [r7, #20]
    }

    /* I2S standard */
    if (hi2s->Init.Standard <= I2S_STANDARD_LSB)
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	689b      	ldr	r3, [r3, #8]
 80059cc:	2b20      	cmp	r3, #32
 80059ce:	d802      	bhi.n	80059d6 <HAL_I2S_Init+0x7e>
    {
      /* In I2S standard packet length is multiplied by 2 */
      packetlength = packetlength * 2U;
 80059d0:	697b      	ldr	r3, [r7, #20]
 80059d2:	005b      	lsls	r3, r3, #1
 80059d4:	617b      	str	r3, [r7, #20]
    else
    {
      i2sclk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_I2S_APB2);
    }
#else
    i2sclk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_I2S);
 80059d6:	2001      	movs	r0, #1
 80059d8:	f001 fab2 	bl	8006f40 <HAL_RCCEx_GetPeriphCLKFreq>
 80059dc:	60f8      	str	r0, [r7, #12]
#endif /* I2S_APB1_APB2_FEATURE */

    /* Compute the Real divider depending on the MCLK output state, with a floating point */
    if (hi2s->Init.MCLKOutput == I2S_MCLKOUTPUT_ENABLE)
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	691b      	ldr	r3, [r3, #16]
 80059e2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80059e6:	d125      	bne.n	8005a34 <HAL_I2S_Init+0xdc>
    {
      /* MCLK output is enabled */
      if (hi2s->Init.DataFormat != I2S_DATAFORMAT_16B)
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	68db      	ldr	r3, [r3, #12]
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d010      	beq.n	8005a12 <HAL_I2S_Init+0xba>
      {
        tmp = (uint32_t)(((((i2sclk / (packetlength * 4U)) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 80059f0:	697b      	ldr	r3, [r7, #20]
 80059f2:	009b      	lsls	r3, r3, #2
 80059f4:	68fa      	ldr	r2, [r7, #12]
 80059f6:	fbb2 f2f3 	udiv	r2, r2, r3
 80059fa:	4613      	mov	r3, r2
 80059fc:	009b      	lsls	r3, r3, #2
 80059fe:	4413      	add	r3, r2
 8005a00:	005b      	lsls	r3, r3, #1
 8005a02:	461a      	mov	r2, r3
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	695b      	ldr	r3, [r3, #20]
 8005a08:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a0c:	3305      	adds	r3, #5
 8005a0e:	613b      	str	r3, [r7, #16]
 8005a10:	e01f      	b.n	8005a52 <HAL_I2S_Init+0xfa>
      }
      else
      {
        tmp = (uint32_t)(((((i2sclk / (packetlength * 8U)) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 8005a12:	697b      	ldr	r3, [r7, #20]
 8005a14:	00db      	lsls	r3, r3, #3
 8005a16:	68fa      	ldr	r2, [r7, #12]
 8005a18:	fbb2 f2f3 	udiv	r2, r2, r3
 8005a1c:	4613      	mov	r3, r2
 8005a1e:	009b      	lsls	r3, r3, #2
 8005a20:	4413      	add	r3, r2
 8005a22:	005b      	lsls	r3, r3, #1
 8005a24:	461a      	mov	r2, r3
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	695b      	ldr	r3, [r3, #20]
 8005a2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a2e:	3305      	adds	r3, #5
 8005a30:	613b      	str	r3, [r7, #16]
 8005a32:	e00e      	b.n	8005a52 <HAL_I2S_Init+0xfa>
      }
    }
    else
    {
      /* MCLK output is disabled */
      tmp = (uint32_t)(((((i2sclk / packetlength) * 10U) / hi2s->Init.AudioFreq)) + 5U);
 8005a34:	68fa      	ldr	r2, [r7, #12]
 8005a36:	697b      	ldr	r3, [r7, #20]
 8005a38:	fbb2 f2f3 	udiv	r2, r2, r3
 8005a3c:	4613      	mov	r3, r2
 8005a3e:	009b      	lsls	r3, r3, #2
 8005a40:	4413      	add	r3, r2
 8005a42:	005b      	lsls	r3, r3, #1
 8005a44:	461a      	mov	r2, r3
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	695b      	ldr	r3, [r3, #20]
 8005a4a:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a4e:	3305      	adds	r3, #5
 8005a50:	613b      	str	r3, [r7, #16]
    }

    /* Remove the flatting point */
    tmp = tmp / 10U;
 8005a52:	693b      	ldr	r3, [r7, #16]
 8005a54:	4a5c      	ldr	r2, [pc, #368]	@ (8005bc8 <HAL_I2S_Init+0x270>)
 8005a56:	fba2 2303 	umull	r2, r3, r2, r3
 8005a5a:	08db      	lsrs	r3, r3, #3
 8005a5c:	613b      	str	r3, [r7, #16]

    /* Check the parity of the divider */
    i2sodd = (uint32_t)(tmp & (uint32_t)1U);
 8005a5e:	693b      	ldr	r3, [r7, #16]
 8005a60:	f003 0301 	and.w	r3, r3, #1
 8005a64:	61bb      	str	r3, [r7, #24]

    /* Compute the i2sdiv prescaler */
    i2sdiv = (uint32_t)((tmp - i2sodd) / 2U);
 8005a66:	693a      	ldr	r2, [r7, #16]
 8005a68:	69bb      	ldr	r3, [r7, #24]
 8005a6a:	1ad3      	subs	r3, r2, r3
 8005a6c:	085b      	lsrs	r3, r3, #1
 8005a6e:	61fb      	str	r3, [r7, #28]

    /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
    i2sodd = (uint32_t)(i2sodd << 8U);
 8005a70:	69bb      	ldr	r3, [r7, #24]
 8005a72:	021b      	lsls	r3, r3, #8
 8005a74:	61bb      	str	r3, [r7, #24]
 8005a76:	e003      	b.n	8005a80 <HAL_I2S_Init+0x128>
  }
  else
  {
    /* Set the default values */
    i2sdiv = 2U;
 8005a78:	2302      	movs	r3, #2
 8005a7a:	61fb      	str	r3, [r7, #28]
    i2sodd = 0U;
 8005a7c:	2300      	movs	r3, #0
 8005a7e:	61bb      	str	r3, [r7, #24]
  }

  /* Test if the divider is 1 or 0 or greater than 0xFF */
  if ((i2sdiv < 2U) || (i2sdiv > 0xFFU))
 8005a80:	69fb      	ldr	r3, [r7, #28]
 8005a82:	2b01      	cmp	r3, #1
 8005a84:	d902      	bls.n	8005a8c <HAL_I2S_Init+0x134>
 8005a86:	69fb      	ldr	r3, [r7, #28]
 8005a88:	2bff      	cmp	r3, #255	@ 0xff
 8005a8a:	d907      	bls.n	8005a9c <HAL_I2S_Init+0x144>
  {
    /* Set the error code and execute error callback*/
    SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_PRESCALER);
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a90:	f043 0210 	orr.w	r2, r3, #16
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	645a      	str	r2, [r3, #68]	@ 0x44
    return  HAL_ERROR;
 8005a98:	2301      	movs	r3, #1
 8005a9a:	e08f      	b.n	8005bbc <HAL_I2S_Init+0x264>
  }

  /*----------------------- SPIx I2SCFGR & I2SPR Configuration ----------------*/

  /* Write to SPIx I2SPR register the computed value */
  hi2s->Instance->I2SPR = (uint32_t)((uint32_t)i2sdiv | (uint32_t)(i2sodd | (uint32_t)hi2s->Init.MCLKOutput));
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	691a      	ldr	r2, [r3, #16]
 8005aa0:	69bb      	ldr	r3, [r7, #24]
 8005aa2:	ea42 0103 	orr.w	r1, r2, r3
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	69fa      	ldr	r2, [r7, #28]
 8005aac:	430a      	orrs	r2, r1
 8005aae:	621a      	str	r2, [r3, #32]

  /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
  /* And configure the I2S with the I2S_InitStruct values                      */
  MODIFY_REG(hi2s->Instance->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | \
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	69db      	ldr	r3, [r3, #28]
 8005ab6:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 8005aba:	f023 030f 	bic.w	r3, r3, #15
 8005abe:	687a      	ldr	r2, [r7, #4]
 8005ac0:	6851      	ldr	r1, [r2, #4]
 8005ac2:	687a      	ldr	r2, [r7, #4]
 8005ac4:	6892      	ldr	r2, [r2, #8]
 8005ac6:	4311      	orrs	r1, r2
 8005ac8:	687a      	ldr	r2, [r7, #4]
 8005aca:	68d2      	ldr	r2, [r2, #12]
 8005acc:	4311      	orrs	r1, r2
 8005ace:	687a      	ldr	r2, [r7, #4]
 8005ad0:	6992      	ldr	r2, [r2, #24]
 8005ad2:	430a      	orrs	r2, r1
 8005ad4:	431a      	orrs	r2, r3
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005ade:	61da      	str	r2, [r3, #28]
#if defined (SPI_I2S_FULLDUPLEX_SUPPORT)

  /* Configure the I2S extended if the full duplex mode is enabled */
  assert_param(IS_I2S_FULLDUPLEX_MODE(hi2s->Init.FullDuplexMode));

  if (hi2s->Init.FullDuplexMode == I2S_FULLDUPLEXMODE_ENABLE)
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	6a1b      	ldr	r3, [r3, #32]
 8005ae4:	2b01      	cmp	r3, #1
 8005ae6:	d161      	bne.n	8005bac <HAL_I2S_Init+0x254>
  {
    /* Set FullDuplex I2S IrqHandler ISR if FULLDUPLEXMODE is enabled */
    hi2s->IrqHandlerISR = HAL_I2SEx_FullDuplex_IRQHandler;
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	4a38      	ldr	r2, [pc, #224]	@ (8005bcc <HAL_I2S_Init+0x274>)
 8005aec:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
    CLEAR_BIT(I2SxEXT(hi2s->Instance)->I2SCFGR, (SPI_I2SCFGR_CHLEN | SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CKPOL | \
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	4a37      	ldr	r2, [pc, #220]	@ (8005bd0 <HAL_I2S_Init+0x278>)
 8005af4:	4293      	cmp	r3, r2
 8005af6:	d101      	bne.n	8005afc <HAL_I2S_Init+0x1a4>
 8005af8:	4b36      	ldr	r3, [pc, #216]	@ (8005bd4 <HAL_I2S_Init+0x27c>)
 8005afa:	e001      	b.n	8005b00 <HAL_I2S_Init+0x1a8>
 8005afc:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8005b00:	69db      	ldr	r3, [r3, #28]
 8005b02:	687a      	ldr	r2, [r7, #4]
 8005b04:	6812      	ldr	r2, [r2, #0]
 8005b06:	4932      	ldr	r1, [pc, #200]	@ (8005bd0 <HAL_I2S_Init+0x278>)
 8005b08:	428a      	cmp	r2, r1
 8005b0a:	d101      	bne.n	8005b10 <HAL_I2S_Init+0x1b8>
 8005b0c:	4a31      	ldr	r2, [pc, #196]	@ (8005bd4 <HAL_I2S_Init+0x27c>)
 8005b0e:	e001      	b.n	8005b14 <HAL_I2S_Init+0x1bc>
 8005b10:	f04f 2240 	mov.w	r2, #1073758208	@ 0x40004000
 8005b14:	f423 637b 	bic.w	r3, r3, #4016	@ 0xfb0
 8005b18:	f023 030f 	bic.w	r3, r3, #15
 8005b1c:	61d3      	str	r3, [r2, #28]
                                                 SPI_I2SCFGR_I2SSTD | SPI_I2SCFGR_PCMSYNC | SPI_I2SCFGR_I2SCFG | \
                                                 SPI_I2SCFGR_I2SE | SPI_I2SCFGR_I2SMOD));
    I2SxEXT(hi2s->Instance)->I2SPR = 2U;
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	4a2b      	ldr	r2, [pc, #172]	@ (8005bd0 <HAL_I2S_Init+0x278>)
 8005b24:	4293      	cmp	r3, r2
 8005b26:	d101      	bne.n	8005b2c <HAL_I2S_Init+0x1d4>
 8005b28:	4b2a      	ldr	r3, [pc, #168]	@ (8005bd4 <HAL_I2S_Init+0x27c>)
 8005b2a:	e001      	b.n	8005b30 <HAL_I2S_Init+0x1d8>
 8005b2c:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8005b30:	2202      	movs	r2, #2
 8005b32:	621a      	str	r2, [r3, #32]

    /* Get the I2SCFGR register value */
    tmpreg = I2SxEXT(hi2s->Instance)->I2SCFGR;
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	4a25      	ldr	r2, [pc, #148]	@ (8005bd0 <HAL_I2S_Init+0x278>)
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d101      	bne.n	8005b42 <HAL_I2S_Init+0x1ea>
 8005b3e:	4b25      	ldr	r3, [pc, #148]	@ (8005bd4 <HAL_I2S_Init+0x27c>)
 8005b40:	e001      	b.n	8005b46 <HAL_I2S_Init+0x1ee>
 8005b42:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8005b46:	69db      	ldr	r3, [r3, #28]
 8005b48:	817b      	strh	r3, [r7, #10]

    /* Get the mode to be configured for the extended I2S */
    if ((hi2s->Init.Mode == I2S_MODE_MASTER_TX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_TX))
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	685b      	ldr	r3, [r3, #4]
 8005b4e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005b52:	d003      	beq.n	8005b5c <HAL_I2S_Init+0x204>
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	685b      	ldr	r3, [r3, #4]
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	d103      	bne.n	8005b64 <HAL_I2S_Init+0x20c>
    {
      tmp = I2S_MODE_SLAVE_RX;
 8005b5c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005b60:	613b      	str	r3, [r7, #16]
 8005b62:	e001      	b.n	8005b68 <HAL_I2S_Init+0x210>
    }
    else /* I2S_MODE_MASTER_RX ||  I2S_MODE_SLAVE_RX */
    {
      tmp = I2S_MODE_SLAVE_TX;
 8005b64:	2300      	movs	r3, #0
 8005b66:	613b      	str	r3, [r7, #16]
    }

    /* Configure the I2S Slave with the I2S Master parameter values */
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
                         (uint16_t)tmp                   | \
 8005b68:	693b      	ldr	r3, [r7, #16]
 8005b6a:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.Standard   | \
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	689b      	ldr	r3, [r3, #8]
 8005b70:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8005b72:	4313      	orrs	r3, r2
 8005b74:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.DataFormat | \
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	68db      	ldr	r3, [r3, #12]
 8005b7a:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8005b7c:	4313      	orrs	r3, r2
 8005b7e:	b29a      	uxth	r2, r3
                         (uint16_t)hi2s->Init.CPOL);
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	699b      	ldr	r3, [r3, #24]
 8005b84:	b29b      	uxth	r3, r3
    tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD    | \
 8005b86:	4313      	orrs	r3, r2
 8005b88:	b29a      	uxth	r2, r3
 8005b8a:	897b      	ldrh	r3, [r7, #10]
 8005b8c:	4313      	orrs	r3, r2
 8005b8e:	b29b      	uxth	r3, r3
 8005b90:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005b94:	817b      	strh	r3, [r7, #10]

    /* Write to SPIx I2SCFGR */
    WRITE_REG(I2SxEXT(hi2s->Instance)->I2SCFGR, tmpreg);
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	4a0d      	ldr	r2, [pc, #52]	@ (8005bd0 <HAL_I2S_Init+0x278>)
 8005b9c:	4293      	cmp	r3, r2
 8005b9e:	d101      	bne.n	8005ba4 <HAL_I2S_Init+0x24c>
 8005ba0:	4b0c      	ldr	r3, [pc, #48]	@ (8005bd4 <HAL_I2S_Init+0x27c>)
 8005ba2:	e001      	b.n	8005ba8 <HAL_I2S_Init+0x250>
 8005ba4:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8005ba8:	897a      	ldrh	r2, [r7, #10]
 8005baa:	61da      	str	r2, [r3, #28]
  }
#endif /* SPI_I2S_FULLDUPLEX_SUPPORT */

  hi2s->ErrorCode = HAL_I2S_ERROR_NONE;
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	2200      	movs	r2, #0
 8005bb0:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2s->State     = HAL_I2S_STATE_READY;
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	2201      	movs	r2, #1
 8005bb6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  return HAL_OK;
 8005bba:	2300      	movs	r3, #0
}
 8005bbc:	4618      	mov	r0, r3
 8005bbe:	3720      	adds	r7, #32
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	bd80      	pop	{r7, pc}
 8005bc4:	08005ead 	.word	0x08005ead
 8005bc8:	cccccccd 	.word	0xcccccccd
 8005bcc:	08005fc1 	.word	0x08005fc1
 8005bd0:	40003800 	.word	0x40003800
 8005bd4:	40003400 	.word	0x40003400

08005bd8 <HAL_I2S_Transmit_DMA>:
  * @note   The I2S is kept enabled at the end of transaction to avoid the clock de-synchronization
  *         between Master and Slave(example: audio streaming).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2S_Transmit_DMA(I2S_HandleTypeDef *hi2s, uint16_t *pData, uint16_t Size)
{
 8005bd8:	b580      	push	{r7, lr}
 8005bda:	b086      	sub	sp, #24
 8005bdc:	af00      	add	r7, sp, #0
 8005bde:	60f8      	str	r0, [r7, #12]
 8005be0:	60b9      	str	r1, [r7, #8]
 8005be2:	4613      	mov	r3, r2
 8005be4:	80fb      	strh	r3, [r7, #6]
  uint32_t tmpreg_cfgr;

  if ((pData == NULL) || (Size == 0U))
 8005be6:	68bb      	ldr	r3, [r7, #8]
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	d002      	beq.n	8005bf2 <HAL_I2S_Transmit_DMA+0x1a>
 8005bec:	88fb      	ldrh	r3, [r7, #6]
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d101      	bne.n	8005bf6 <HAL_I2S_Transmit_DMA+0x1e>
  {
    return  HAL_ERROR;
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	e08a      	b.n	8005d0c <HAL_I2S_Transmit_DMA+0x134>
  }

  if (hi2s->State != HAL_I2S_STATE_READY)
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005bfc:	b2db      	uxtb	r3, r3
 8005bfe:	2b01      	cmp	r3, #1
 8005c00:	d001      	beq.n	8005c06 <HAL_I2S_Transmit_DMA+0x2e>
  {
    return HAL_BUSY;
 8005c02:	2302      	movs	r3, #2
 8005c04:	e082      	b.n	8005d0c <HAL_I2S_Transmit_DMA+0x134>
  }

  /* Process Locked */
  __HAL_LOCK(hi2s);
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005c0c:	b2db      	uxtb	r3, r3
 8005c0e:	2b01      	cmp	r3, #1
 8005c10:	d101      	bne.n	8005c16 <HAL_I2S_Transmit_DMA+0x3e>
 8005c12:	2302      	movs	r3, #2
 8005c14:	e07a      	b.n	8005d0c <HAL_I2S_Transmit_DMA+0x134>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	2201      	movs	r2, #1
 8005c1a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Set state and reset error code */
  hi2s->State = HAL_I2S_STATE_BUSY_TX;
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	2203      	movs	r2, #3
 8005c22:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2s->ErrorCode = HAL_I2S_ERROR_NONE;
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	2200      	movs	r2, #0
 8005c2a:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2s->pTxBuffPtr = pData;
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	68ba      	ldr	r2, [r7, #8]
 8005c30:	625a      	str	r2, [r3, #36]	@ 0x24

  tmpreg_cfgr = hi2s->Instance->I2SCFGR & (SPI_I2SCFGR_DATLEN | SPI_I2SCFGR_CHLEN);
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	69db      	ldr	r3, [r3, #28]
 8005c38:	f003 0307 	and.w	r3, r3, #7
 8005c3c:	617b      	str	r3, [r7, #20]

  if ((tmpreg_cfgr == I2S_DATAFORMAT_24B) || (tmpreg_cfgr == I2S_DATAFORMAT_32B))
 8005c3e:	697b      	ldr	r3, [r7, #20]
 8005c40:	2b03      	cmp	r3, #3
 8005c42:	d002      	beq.n	8005c4a <HAL_I2S_Transmit_DMA+0x72>
 8005c44:	697b      	ldr	r3, [r7, #20]
 8005c46:	2b05      	cmp	r3, #5
 8005c48:	d10a      	bne.n	8005c60 <HAL_I2S_Transmit_DMA+0x88>
  {
    hi2s->TxXferSize = (Size << 1U);
 8005c4a:	88fb      	ldrh	r3, [r7, #6]
 8005c4c:	005b      	lsls	r3, r3, #1
 8005c4e:	b29a      	uxth	r2, r3
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2s->TxXferCount = (Size << 1U);
 8005c54:	88fb      	ldrh	r3, [r7, #6]
 8005c56:	005b      	lsls	r3, r3, #1
 8005c58:	b29a      	uxth	r2, r3
 8005c5a:	68fb      	ldr	r3, [r7, #12]
 8005c5c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005c5e:	e005      	b.n	8005c6c <HAL_I2S_Transmit_DMA+0x94>
  }
  else
  {
    hi2s->TxXferSize = Size;
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	88fa      	ldrh	r2, [r7, #6]
 8005c64:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2s->TxXferCount = Size;
 8005c66:	68fb      	ldr	r3, [r7, #12]
 8005c68:	88fa      	ldrh	r2, [r7, #6]
 8005c6a:	855a      	strh	r2, [r3, #42]	@ 0x2a
  }

  /* Set the I2S Tx DMA Half transfer complete callback */
  hi2s->hdmatx->XferHalfCpltCallback = I2S_DMATxHalfCplt;
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c70:	4a28      	ldr	r2, [pc, #160]	@ (8005d14 <HAL_I2S_Transmit_DMA+0x13c>)
 8005c72:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the I2S Tx DMA transfer complete callback */
  hi2s->hdmatx->XferCpltCallback = I2S_DMATxCplt;
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c78:	4a27      	ldr	r2, [pc, #156]	@ (8005d18 <HAL_I2S_Transmit_DMA+0x140>)
 8005c7a:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hi2s->hdmatx->XferErrorCallback = I2S_DMAError;
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c80:	4a26      	ldr	r2, [pc, #152]	@ (8005d1c <HAL_I2S_Transmit_DMA+0x144>)
 8005c82:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	6b98      	ldr	r0, [r3, #56]	@ 0x38
                                 (uint32_t)hi2s->pTxBuffPtr,
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8005c8c:	4619      	mov	r1, r3
                                 (uint32_t)&hi2s->Instance->DR,
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	330c      	adds	r3, #12
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8005c94:	461a      	mov	r2, r3
                                 hi2s->TxXferSize))
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c9a:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hi2s->hdmatx,
 8005c9c:	f7fd fee0 	bl	8003a60 <HAL_DMA_Start_IT>
 8005ca0:	4603      	mov	r3, r0
 8005ca2:	2b00      	cmp	r3, #0
 8005ca4:	d00f      	beq.n	8005cc6 <HAL_I2S_Transmit_DMA+0xee>
  {
    /* Update SPI error code */
    SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005caa:	f043 0208 	orr.w	r2, r3, #8
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	645a      	str	r2, [r3, #68]	@ 0x44
    hi2s->State = HAL_I2S_STATE_READY;
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	2201      	movs	r2, #1
 8005cb6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    __HAL_UNLOCK(hi2s);
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	2200      	movs	r2, #0
 8005cbe:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    return HAL_ERROR;
 8005cc2:	2301      	movs	r3, #1
 8005cc4:	e022      	b.n	8005d0c <HAL_I2S_Transmit_DMA+0x134>
  }

  __HAL_UNLOCK(hi2s);
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	2200      	movs	r2, #0
 8005cca:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Check if the I2S Tx request is already enabled */
  if (HAL_IS_BIT_CLR(hi2s->Instance->CR2, SPI_CR2_TXDMAEN))
 8005cce:	68fb      	ldr	r3, [r7, #12]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	685b      	ldr	r3, [r3, #4]
 8005cd4:	f003 0302 	and.w	r3, r3, #2
 8005cd8:	2b00      	cmp	r3, #0
 8005cda:	d107      	bne.n	8005cec <HAL_I2S_Transmit_DMA+0x114>
  {
    /* Enable Tx DMA Request */
    SET_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	685a      	ldr	r2, [r3, #4]
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	f042 0202 	orr.w	r2, r2, #2
 8005cea:	605a      	str	r2, [r3, #4]
  }

  /* Check if the I2S is already enabled */
  if (HAL_IS_BIT_CLR(hi2s->Instance->I2SCFGR, SPI_I2SCFGR_I2SE))
 8005cec:	68fb      	ldr	r3, [r7, #12]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	69db      	ldr	r3, [r3, #28]
 8005cf2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	d107      	bne.n	8005d0a <HAL_I2S_Transmit_DMA+0x132>
  {
    /* Enable I2S peripheral */
    __HAL_I2S_ENABLE(hi2s);
 8005cfa:	68fb      	ldr	r3, [r7, #12]
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	69da      	ldr	r2, [r3, #28]
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005d08:	61da      	str	r2, [r3, #28]
  }

  return HAL_OK;
 8005d0a:	2300      	movs	r3, #0
}
 8005d0c:	4618      	mov	r0, r3
 8005d0e:	3718      	adds	r7, #24
 8005d10:	46bd      	mov	sp, r7
 8005d12:	bd80      	pop	{r7, pc}
 8005d14:	08005d8b 	.word	0x08005d8b
 8005d18:	08005d49 	.word	0x08005d49
 8005d1c:	08005da7 	.word	0x08005da7

08005d20 <HAL_I2S_RxCpltCallback>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
__weak void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s)
{
 8005d20:	b480      	push	{r7}
 8005d22:	b083      	sub	sp, #12
 8005d24:	af00      	add	r7, sp, #0
 8005d26:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_I2S_RxCpltCallback could be implemented in the user file
   */
}
 8005d28:	bf00      	nop
 8005d2a:	370c      	adds	r7, #12
 8005d2c:	46bd      	mov	sp, r7
 8005d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d32:	4770      	bx	lr

08005d34 <HAL_I2S_ErrorCallback>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
__weak void HAL_I2S_ErrorCallback(I2S_HandleTypeDef *hi2s)
{
 8005d34:	b480      	push	{r7}
 8005d36:	b083      	sub	sp, #12
 8005d38:	af00      	add	r7, sp, #0
 8005d3a:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_I2S_ErrorCallback could be implemented in the user file
   */
}
 8005d3c:	bf00      	nop
 8005d3e:	370c      	adds	r7, #12
 8005d40:	46bd      	mov	sp, r7
 8005d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d46:	4770      	bx	lr

08005d48 <I2S_DMATxCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMATxCplt(DMA_HandleTypeDef *hdma)
{
 8005d48:	b580      	push	{r7, lr}
 8005d4a:	b084      	sub	sp, #16
 8005d4c:	af00      	add	r7, sp, #0
 8005d4e:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005d54:	60fb      	str	r3, [r7, #12]

  /* if DMA is configured in DMA_NORMAL Mode */
  if (hdma->Init.Mode == DMA_NORMAL)
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	69db      	ldr	r3, [r3, #28]
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d10e      	bne.n	8005d7c <I2S_DMATxCplt+0x34>
  {
    /* Disable Tx DMA Request */
    CLEAR_BIT(hi2s->Instance->CR2, SPI_CR2_TXDMAEN);
 8005d5e:	68fb      	ldr	r3, [r7, #12]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	685a      	ldr	r2, [r3, #4]
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	f022 0202 	bic.w	r2, r2, #2
 8005d6c:	605a      	str	r2, [r3, #4]

    hi2s->TxXferCount = 0U;
 8005d6e:	68fb      	ldr	r3, [r7, #12]
 8005d70:	2200      	movs	r2, #0
 8005d72:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2s->State = HAL_I2S_STATE_READY;
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	2201      	movs	r2, #1
 8005d78:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  }
  /* Call user Tx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->TxCpltCallback(hi2s);
#else
  HAL_I2S_TxCpltCallback(hi2s);
 8005d7c:	68f8      	ldr	r0, [r7, #12]
 8005d7e:	f7fb fef7 	bl	8001b70 <HAL_I2S_TxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 8005d82:	bf00      	nop
 8005d84:	3710      	adds	r7, #16
 8005d86:	46bd      	mov	sp, r7
 8005d88:	bd80      	pop	{r7, pc}

08005d8a <I2S_DMATxHalfCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 8005d8a:	b580      	push	{r7, lr}
 8005d8c:	b084      	sub	sp, #16
 8005d8e:	af00      	add	r7, sp, #0
 8005d90:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005d96:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->TxHalfCpltCallback(hi2s);
#else
  HAL_I2S_TxHalfCpltCallback(hi2s);
 8005d98:	68f8      	ldr	r0, [r7, #12]
 8005d9a:	f7fb fed9 	bl	8001b50 <HAL_I2S_TxHalfCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 8005d9e:	bf00      	nop
 8005da0:	3710      	adds	r7, #16
 8005da2:	46bd      	mov	sp, r7
 8005da4:	bd80      	pop	{r7, pc}

08005da6 <I2S_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void I2S_DMAError(DMA_HandleTypeDef *hdma)
{
 8005da6:	b580      	push	{r7, lr}
 8005da8:	b084      	sub	sp, #16
 8005daa:	af00      	add	r7, sp, #0
 8005dac:	6078      	str	r0, [r7, #4]
  I2S_HandleTypeDef *hi2s = (I2S_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005db2:	60fb      	str	r3, [r7, #12]

  /* Disable Rx and Tx DMA Request */
  CLEAR_BIT(hi2s->Instance->CR2, (SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN));
 8005db4:	68fb      	ldr	r3, [r7, #12]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	685a      	ldr	r2, [r3, #4]
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	f022 0203 	bic.w	r2, r2, #3
 8005dc2:	605a      	str	r2, [r3, #4]
  hi2s->TxXferCount = 0U;
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	2200      	movs	r2, #0
 8005dc8:	855a      	strh	r2, [r3, #42]	@ 0x2a
  hi2s->RxXferCount = 0U;
 8005dca:	68fb      	ldr	r3, [r7, #12]
 8005dcc:	2200      	movs	r2, #0
 8005dce:	865a      	strh	r2, [r3, #50]	@ 0x32

  hi2s->State = HAL_I2S_STATE_READY;
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	2201      	movs	r2, #1
 8005dd4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Set the error code and execute error callback*/
  SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_DMA);
 8005dd8:	68fb      	ldr	r3, [r7, #12]
 8005dda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ddc:	f043 0208 	orr.w	r2, r3, #8
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
  hi2s->ErrorCallback(hi2s);
#else
  HAL_I2S_ErrorCallback(hi2s);
 8005de4:	68f8      	ldr	r0, [r7, #12]
 8005de6:	f7ff ffa5 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
}
 8005dea:	bf00      	nop
 8005dec:	3710      	adds	r7, #16
 8005dee:	46bd      	mov	sp, r7
 8005df0:	bd80      	pop	{r7, pc}

08005df2 <I2S_Transmit_IT>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_Transmit_IT(I2S_HandleTypeDef *hi2s)
{
 8005df2:	b580      	push	{r7, lr}
 8005df4:	b082      	sub	sp, #8
 8005df6:	af00      	add	r7, sp, #0
 8005df8:	6078      	str	r0, [r7, #4]
  /* Transmit data */
  hi2s->Instance->DR = (*hi2s->pTxBuffPtr);
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005dfe:	881a      	ldrh	r2, [r3, #0]
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	681b      	ldr	r3, [r3, #0]
 8005e04:	60da      	str	r2, [r3, #12]
  hi2s->pTxBuffPtr++;
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e0a:	1c9a      	adds	r2, r3, #2
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	625a      	str	r2, [r3, #36]	@ 0x24
  hi2s->TxXferCount--;
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005e14:	b29b      	uxth	r3, r3
 8005e16:	3b01      	subs	r3, #1
 8005e18:	b29a      	uxth	r2, r3
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	855a      	strh	r2, [r3, #42]	@ 0x2a

  if (hi2s->TxXferCount == 0U)
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005e22:	b29b      	uxth	r3, r3
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d10e      	bne.n	8005e46 <I2S_Transmit_IT+0x54>
  {
    /* Disable TXE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	685a      	ldr	r2, [r3, #4]
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 8005e36:	605a      	str	r2, [r3, #4]

    hi2s->State = HAL_I2S_STATE_READY;
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	2201      	movs	r2, #1
 8005e3c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    /* Call user Tx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
    hi2s->TxCpltCallback(hi2s);
#else
    HAL_I2S_TxCpltCallback(hi2s);
 8005e40:	6878      	ldr	r0, [r7, #4]
 8005e42:	f7fb fe95 	bl	8001b70 <HAL_I2S_TxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }
}
 8005e46:	bf00      	nop
 8005e48:	3708      	adds	r7, #8
 8005e4a:	46bd      	mov	sp, r7
 8005e4c:	bd80      	pop	{r7, pc}

08005e4e <I2S_Receive_IT>:
  * @param  hi2s pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_Receive_IT(I2S_HandleTypeDef *hi2s)
{
 8005e4e:	b580      	push	{r7, lr}
 8005e50:	b082      	sub	sp, #8
 8005e52:	af00      	add	r7, sp, #0
 8005e54:	6078      	str	r0, [r7, #4]
  /* Receive data */
  (*hi2s->pRxBuffPtr) = (uint16_t)hi2s->Instance->DR;
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	68da      	ldr	r2, [r3, #12]
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005e60:	b292      	uxth	r2, r2
 8005e62:	801a      	strh	r2, [r3, #0]
  hi2s->pRxBuffPtr++;
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005e68:	1c9a      	adds	r2, r3, #2
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hi2s->RxXferCount--;
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8005e72:	b29b      	uxth	r3, r3
 8005e74:	3b01      	subs	r3, #1
 8005e76:	b29a      	uxth	r2, r3
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	865a      	strh	r2, [r3, #50]	@ 0x32

  if (hi2s->RxXferCount == 0U)
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8005e80:	b29b      	uxth	r3, r3
 8005e82:	2b00      	cmp	r3, #0
 8005e84:	d10e      	bne.n	8005ea4 <I2S_Receive_IT+0x56>
  {
    /* Disable RXNE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	681b      	ldr	r3, [r3, #0]
 8005e8a:	685a      	ldr	r2, [r3, #4]
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	681b      	ldr	r3, [r3, #0]
 8005e90:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8005e94:	605a      	str	r2, [r3, #4]

    hi2s->State = HAL_I2S_STATE_READY;
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	2201      	movs	r2, #1
 8005e9a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    /* Call user Rx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
    hi2s->RxCpltCallback(hi2s);
#else
    HAL_I2S_RxCpltCallback(hi2s);
 8005e9e:	6878      	ldr	r0, [r7, #4]
 8005ea0:	f7ff ff3e 	bl	8005d20 <HAL_I2S_RxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
  }
}
 8005ea4:	bf00      	nop
 8005ea6:	3708      	adds	r7, #8
 8005ea8:	46bd      	mov	sp, r7
 8005eaa:	bd80      	pop	{r7, pc}

08005eac <I2S_IRQHandler>:
  * @param  hi2s: pointer to a I2S_HandleTypeDef structure that contains
  *         the configuration information for I2S module
  * @retval None
  */
static void I2S_IRQHandler(I2S_HandleTypeDef *hi2s)
{
 8005eac:	b580      	push	{r7, lr}
 8005eae:	b086      	sub	sp, #24
 8005eb0:	af00      	add	r7, sp, #0
 8005eb2:	6078      	str	r0, [r7, #4]
  __IO uint32_t i2ssr = hi2s->Instance->SR;
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	681b      	ldr	r3, [r3, #0]
 8005eb8:	689b      	ldr	r3, [r3, #8]
 8005eba:	617b      	str	r3, [r7, #20]

  if (hi2s->State == HAL_I2S_STATE_BUSY_RX)
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005ec2:	b2db      	uxtb	r3, r3
 8005ec4:	2b04      	cmp	r3, #4
 8005ec6:	d13a      	bne.n	8005f3e <I2S_IRQHandler+0x92>
  {
    /* I2S in mode Receiver ------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_RXNE) != RESET))
 8005ec8:	697b      	ldr	r3, [r7, #20]
 8005eca:	f003 0301 	and.w	r3, r3, #1
 8005ece:	2b01      	cmp	r3, #1
 8005ed0:	d109      	bne.n	8005ee6 <I2S_IRQHandler+0x3a>
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	685b      	ldr	r3, [r3, #4]
 8005ed8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005edc:	2b40      	cmp	r3, #64	@ 0x40
 8005ede:	d102      	bne.n	8005ee6 <I2S_IRQHandler+0x3a>
    {
      I2S_Receive_IT(hi2s);
 8005ee0:	6878      	ldr	r0, [r7, #4]
 8005ee2:	f7ff ffb4 	bl	8005e4e <I2S_Receive_IT>
    }

    /* I2S Overrun error interrupt occurred -------------------------------------*/
    if (((i2ssr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_ERR) != RESET))
 8005ee6:	697b      	ldr	r3, [r7, #20]
 8005ee8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005eec:	2b40      	cmp	r3, #64	@ 0x40
 8005eee:	d126      	bne.n	8005f3e <I2S_IRQHandler+0x92>
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	685b      	ldr	r3, [r3, #4]
 8005ef6:	f003 0320 	and.w	r3, r3, #32
 8005efa:	2b20      	cmp	r3, #32
 8005efc:	d11f      	bne.n	8005f3e <I2S_IRQHandler+0x92>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	685a      	ldr	r2, [r3, #4]
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	681b      	ldr	r3, [r3, #0]
 8005f08:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8005f0c:	605a      	str	r2, [r3, #4]

      /* Clear Overrun flag */
      __HAL_I2S_CLEAR_OVRFLAG(hi2s);
 8005f0e:	2300      	movs	r3, #0
 8005f10:	613b      	str	r3, [r7, #16]
 8005f12:	687b      	ldr	r3, [r7, #4]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	68db      	ldr	r3, [r3, #12]
 8005f18:	613b      	str	r3, [r7, #16]
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	689b      	ldr	r3, [r3, #8]
 8005f20:	613b      	str	r3, [r7, #16]
 8005f22:	693b      	ldr	r3, [r7, #16]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	2201      	movs	r2, #1
 8005f28:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41


      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f30:	f043 0202 	orr.w	r2, r3, #2
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 8005f38:	6878      	ldr	r0, [r7, #4]
 8005f3a:	f7ff fefb 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }

  if (hi2s->State == HAL_I2S_STATE_BUSY_TX)
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005f44:	b2db      	uxtb	r3, r3
 8005f46:	2b03      	cmp	r3, #3
 8005f48:	d136      	bne.n	8005fb8 <I2S_IRQHandler+0x10c>
  {
    /* I2S in mode Transmitter -----------------------------------------------*/
    if (((i2ssr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_TXE) != RESET))
 8005f4a:	697b      	ldr	r3, [r7, #20]
 8005f4c:	f003 0302 	and.w	r3, r3, #2
 8005f50:	2b02      	cmp	r3, #2
 8005f52:	d109      	bne.n	8005f68 <I2S_IRQHandler+0xbc>
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	681b      	ldr	r3, [r3, #0]
 8005f58:	685b      	ldr	r3, [r3, #4]
 8005f5a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f5e:	2b80      	cmp	r3, #128	@ 0x80
 8005f60:	d102      	bne.n	8005f68 <I2S_IRQHandler+0xbc>
    {
      I2S_Transmit_IT(hi2s);
 8005f62:	6878      	ldr	r0, [r7, #4]
 8005f64:	f7ff ff45 	bl	8005df2 <I2S_Transmit_IT>
    }

    /* I2S Underrun error interrupt occurred --------------------------------*/
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && (__HAL_I2S_GET_IT_SOURCE(hi2s, I2S_IT_ERR) != RESET))
 8005f68:	697b      	ldr	r3, [r7, #20]
 8005f6a:	f003 0308 	and.w	r3, r3, #8
 8005f6e:	2b08      	cmp	r3, #8
 8005f70:	d122      	bne.n	8005fb8 <I2S_IRQHandler+0x10c>
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	685b      	ldr	r3, [r3, #4]
 8005f78:	f003 0320 	and.w	r3, r3, #32
 8005f7c:	2b20      	cmp	r3, #32
 8005f7e:	d11b      	bne.n	8005fb8 <I2S_IRQHandler+0x10c>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	685a      	ldr	r2, [r3, #4]
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 8005f8e:	605a      	str	r2, [r3, #4]

      /* Clear Underrun flag */
      __HAL_I2S_CLEAR_UDRFLAG(hi2s);
 8005f90:	2300      	movs	r3, #0
 8005f92:	60fb      	str	r3, [r7, #12]
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	689b      	ldr	r3, [r3, #8]
 8005f9a:	60fb      	str	r3, [r7, #12]
 8005f9c:	68fb      	ldr	r3, [r7, #12]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	2201      	movs	r2, #1
 8005fa2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005faa:	f043 0204 	orr.w	r2, r3, #4
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 8005fb2:	6878      	ldr	r0, [r7, #4]
 8005fb4:	f7ff febe 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8005fb8:	bf00      	nop
 8005fba:	3718      	adds	r7, #24
 8005fbc:	46bd      	mov	sp, r7
 8005fbe:	bd80      	pop	{r7, pc}

08005fc0 <HAL_I2SEx_FullDuplex_IRQHandler>:
  * @brief  This function handles I2S/I2Sext interrupt requests in full-duplex mode.
  * @param  hi2s I2S handle
  * @retval HAL status
  */
void HAL_I2SEx_FullDuplex_IRQHandler(I2S_HandleTypeDef *hi2s)
{
 8005fc0:	b580      	push	{r7, lr}
 8005fc2:	b088      	sub	sp, #32
 8005fc4:	af00      	add	r7, sp, #0
 8005fc6:	6078      	str	r0, [r7, #4]
  __IO uint32_t i2ssr     = hi2s->Instance->SR;
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	689b      	ldr	r3, [r3, #8]
 8005fce:	61fb      	str	r3, [r7, #28]
  __IO uint32_t i2sextsr  = I2SxEXT(hi2s->Instance)->SR;
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	4a92      	ldr	r2, [pc, #584]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005fd6:	4293      	cmp	r3, r2
 8005fd8:	d101      	bne.n	8005fde <HAL_I2SEx_FullDuplex_IRQHandler+0x1e>
 8005fda:	4b92      	ldr	r3, [pc, #584]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005fdc:	e001      	b.n	8005fe2 <HAL_I2SEx_FullDuplex_IRQHandler+0x22>
 8005fde:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8005fe2:	689b      	ldr	r3, [r3, #8]
 8005fe4:	61bb      	str	r3, [r7, #24]
  __IO uint32_t i2scr2    = hi2s->Instance->CR2;
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	685b      	ldr	r3, [r3, #4]
 8005fec:	617b      	str	r3, [r7, #20]
  __IO uint32_t i2sextcr2 = I2SxEXT(hi2s->Instance)->CR2;
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	4a8b      	ldr	r2, [pc, #556]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8005ff4:	4293      	cmp	r3, r2
 8005ff6:	d101      	bne.n	8005ffc <HAL_I2SEx_FullDuplex_IRQHandler+0x3c>
 8005ff8:	4b8a      	ldr	r3, [pc, #552]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8005ffa:	e001      	b.n	8006000 <HAL_I2SEx_FullDuplex_IRQHandler+0x40>
 8005ffc:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006000:	685b      	ldr	r3, [r3, #4]
 8006002:	613b      	str	r3, [r7, #16]

  /* Check if the I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX Mode is selected */
  if ((hi2s->Init.Mode == I2S_MODE_MASTER_TX) || (hi2s->Init.Mode == I2S_MODE_SLAVE_TX))
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	685b      	ldr	r3, [r3, #4]
 8006008:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800600c:	d004      	beq.n	8006018 <HAL_I2SEx_FullDuplex_IRQHandler+0x58>
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	685b      	ldr	r3, [r3, #4]
 8006012:	2b00      	cmp	r3, #0
 8006014:	f040 8099 	bne.w	800614a <HAL_I2SEx_FullDuplex_IRQHandler+0x18a>
  {
    /* I2S in mode Transmitter -------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && ((i2scr2 & I2S_IT_TXE) != RESET))
 8006018:	69fb      	ldr	r3, [r7, #28]
 800601a:	f003 0302 	and.w	r3, r3, #2
 800601e:	2b02      	cmp	r3, #2
 8006020:	d107      	bne.n	8006032 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
 8006022:	697b      	ldr	r3, [r7, #20]
 8006024:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006028:	2b00      	cmp	r3, #0
 800602a:	d002      	beq.n	8006032 <HAL_I2SEx_FullDuplex_IRQHandler+0x72>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX,
      the I2S TXE interrupt will be generated to manage the full-duplex transmit phase. */
      I2SEx_TxISR_I2S(hi2s);
 800602c:	6878      	ldr	r0, [r7, #4]
 800602e:	f000 f925 	bl	800627c <I2SEx_TxISR_I2S>
    }

    /* I2Sext in mode Receiver -----------------------------------------------*/
    if (((i2sextsr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && ((i2sextcr2 & I2S_IT_RXNE) != RESET))
 8006032:	69bb      	ldr	r3, [r7, #24]
 8006034:	f003 0301 	and.w	r3, r3, #1
 8006038:	2b01      	cmp	r3, #1
 800603a:	d107      	bne.n	800604c <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
 800603c:	693b      	ldr	r3, [r7, #16]
 800603e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006042:	2b00      	cmp	r3, #0
 8006044:	d002      	beq.n	800604c <HAL_I2SEx_FullDuplex_IRQHandler+0x8c>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_TX or I2S_MODE_SLAVE_TX,
      the I2Sext RXNE interrupt will be generated to manage the full-duplex receive phase. */
      I2SEx_RxISR_I2SExt(hi2s);
 8006046:	6878      	ldr	r0, [r7, #4]
 8006048:	f000 f9c8 	bl	80063dc <I2SEx_RxISR_I2SExt>
    }

    /* I2Sext Overrun error interrupt occurred --------------------------------*/
    if (((i2sextsr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && ((i2sextcr2 & I2S_IT_ERR) != RESET))
 800604c:	69bb      	ldr	r3, [r7, #24]
 800604e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006052:	2b40      	cmp	r3, #64	@ 0x40
 8006054:	d13a      	bne.n	80060cc <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
 8006056:	693b      	ldr	r3, [r7, #16]
 8006058:	f003 0320 	and.w	r3, r3, #32
 800605c:	2b00      	cmp	r3, #0
 800605e:	d035      	beq.n	80060cc <HAL_I2SEx_FullDuplex_IRQHandler+0x10c>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	4a6e      	ldr	r2, [pc, #440]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006066:	4293      	cmp	r3, r2
 8006068:	d101      	bne.n	800606e <HAL_I2SEx_FullDuplex_IRQHandler+0xae>
 800606a:	4b6e      	ldr	r3, [pc, #440]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800606c:	e001      	b.n	8006072 <HAL_I2SEx_FullDuplex_IRQHandler+0xb2>
 800606e:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006072:	685a      	ldr	r2, [r3, #4]
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	4969      	ldr	r1, [pc, #420]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800607a:	428b      	cmp	r3, r1
 800607c:	d101      	bne.n	8006082 <HAL_I2SEx_FullDuplex_IRQHandler+0xc2>
 800607e:	4b69      	ldr	r3, [pc, #420]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006080:	e001      	b.n	8006086 <HAL_I2SEx_FullDuplex_IRQHandler+0xc6>
 8006082:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006086:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800608a:	605a      	str	r2, [r3, #4]

      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	685a      	ldr	r2, [r3, #4]
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	681b      	ldr	r3, [r3, #0]
 8006096:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800609a:	605a      	str	r2, [r3, #4]

      /* Clear Overrun flag */
      __HAL_I2S_CLEAR_OVRFLAG(hi2s);
 800609c:	2300      	movs	r3, #0
 800609e:	60fb      	str	r3, [r7, #12]
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	68db      	ldr	r3, [r3, #12]
 80060a6:	60fb      	str	r3, [r7, #12]
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	689b      	ldr	r3, [r3, #8]
 80060ae:	60fb      	str	r3, [r7, #12]
 80060b0:	68fb      	ldr	r3, [r7, #12]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	2201      	movs	r2, #1
 80060b6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 80060ba:	687b      	ldr	r3, [r7, #4]
 80060bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80060be:	f043 0202 	orr.w	r2, r3, #2
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 80060c6:	6878      	ldr	r0, [r7, #4]
 80060c8:	f7ff fe34 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }

    /* I2S Underrun error interrupt occurred ----------------------------------*/
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 80060cc:	69fb      	ldr	r3, [r7, #28]
 80060ce:	f003 0308 	and.w	r3, r3, #8
 80060d2:	2b08      	cmp	r3, #8
 80060d4:	f040 80c3 	bne.w	800625e <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
 80060d8:	697b      	ldr	r3, [r7, #20]
 80060da:	f003 0320 	and.w	r3, r3, #32
 80060de:	2b00      	cmp	r3, #0
 80060e0:	f000 80bd 	beq.w	800625e <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	685a      	ldr	r2, [r3, #4]
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	681b      	ldr	r3, [r3, #0]
 80060ee:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80060f2:	605a      	str	r2, [r3, #4]

      /* Disable RXNE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	681b      	ldr	r3, [r3, #0]
 80060f8:	4a49      	ldr	r2, [pc, #292]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80060fa:	4293      	cmp	r3, r2
 80060fc:	d101      	bne.n	8006102 <HAL_I2SEx_FullDuplex_IRQHandler+0x142>
 80060fe:	4b49      	ldr	r3, [pc, #292]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006100:	e001      	b.n	8006106 <HAL_I2SEx_FullDuplex_IRQHandler+0x146>
 8006102:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006106:	685a      	ldr	r2, [r3, #4]
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	681b      	ldr	r3, [r3, #0]
 800610c:	4944      	ldr	r1, [pc, #272]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 800610e:	428b      	cmp	r3, r1
 8006110:	d101      	bne.n	8006116 <HAL_I2SEx_FullDuplex_IRQHandler+0x156>
 8006112:	4b44      	ldr	r3, [pc, #272]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006114:	e001      	b.n	800611a <HAL_I2SEx_FullDuplex_IRQHandler+0x15a>
 8006116:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 800611a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800611e:	605a      	str	r2, [r3, #4]

      /* Clear underrun flag */
      __HAL_I2S_CLEAR_UDRFLAG(hi2s);
 8006120:	2300      	movs	r3, #0
 8006122:	60bb      	str	r3, [r7, #8]
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	689b      	ldr	r3, [r3, #8]
 800612a:	60bb      	str	r3, [r7, #8]
 800612c:	68bb      	ldr	r3, [r7, #8]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	2201      	movs	r2, #1
 8006132:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800613a:	f043 0204 	orr.w	r2, r3, #4
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 8006142:	6878      	ldr	r0, [r7, #4]
 8006144:	f7ff fdf6 	bl	8005d34 <HAL_I2S_ErrorCallback>
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 8006148:	e089      	b.n	800625e <HAL_I2SEx_FullDuplex_IRQHandler+0x29e>
  }
  /* The I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX Mode is selected */
  else
  {
    /* I2Sext in mode Transmitter ----------------------------------------------*/
    if (((i2sextsr & I2S_FLAG_TXE) == I2S_FLAG_TXE) && ((i2sextcr2 & I2S_IT_TXE) != RESET))
 800614a:	69bb      	ldr	r3, [r7, #24]
 800614c:	f003 0302 	and.w	r3, r3, #2
 8006150:	2b02      	cmp	r3, #2
 8006152:	d107      	bne.n	8006164 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
 8006154:	693b      	ldr	r3, [r7, #16]
 8006156:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800615a:	2b00      	cmp	r3, #0
 800615c:	d002      	beq.n	8006164 <HAL_I2SEx_FullDuplex_IRQHandler+0x1a4>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX,
      the I2Sext TXE interrupt will be generated to manage the full-duplex transmit phase. */
      I2SEx_TxISR_I2SExt(hi2s);
 800615e:	6878      	ldr	r0, [r7, #4]
 8006160:	f000 f8be 	bl	80062e0 <I2SEx_TxISR_I2SExt>
    }

    /* I2S in mode Receiver --------------------------------------------------*/
    if (((i2ssr & I2S_FLAG_RXNE) == I2S_FLAG_RXNE) && ((i2scr2 & I2S_IT_RXNE) != RESET))
 8006164:	69fb      	ldr	r3, [r7, #28]
 8006166:	f003 0301 	and.w	r3, r3, #1
 800616a:	2b01      	cmp	r3, #1
 800616c:	d107      	bne.n	800617e <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
 800616e:	697b      	ldr	r3, [r7, #20]
 8006170:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006174:	2b00      	cmp	r3, #0
 8006176:	d002      	beq.n	800617e <HAL_I2SEx_FullDuplex_IRQHandler+0x1be>
    {
      /* When the I2S mode is configured as I2S_MODE_MASTER_RX or I2S_MODE_SLAVE_RX,
      the I2S RXNE interrupt will be generated to manage the full-duplex receive phase. */
      I2SEx_RxISR_I2S(hi2s);
 8006178:	6878      	ldr	r0, [r7, #4]
 800617a:	f000 f8fd 	bl	8006378 <I2SEx_RxISR_I2S>
    }

    /* I2S Overrun error interrupt occurred -------------------------------------*/
    if (((i2ssr & I2S_FLAG_OVR) == I2S_FLAG_OVR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 800617e:	69fb      	ldr	r3, [r7, #28]
 8006180:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006184:	2b40      	cmp	r3, #64	@ 0x40
 8006186:	d12f      	bne.n	80061e8 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
 8006188:	697b      	ldr	r3, [r7, #20]
 800618a:	f003 0320 	and.w	r3, r3, #32
 800618e:	2b00      	cmp	r3, #0
 8006190:	d02a      	beq.n	80061e8 <HAL_I2SEx_FullDuplex_IRQHandler+0x228>
    {
      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	685a      	ldr	r2, [r3, #4]
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80061a0:	605a      	str	r2, [r3, #4]

      /* Disable TXE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	4a1e      	ldr	r2, [pc, #120]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80061a8:	4293      	cmp	r3, r2
 80061aa:	d101      	bne.n	80061b0 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f0>
 80061ac:	4b1d      	ldr	r3, [pc, #116]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80061ae:	e001      	b.n	80061b4 <HAL_I2SEx_FullDuplex_IRQHandler+0x1f4>
 80061b0:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80061b4:	685a      	ldr	r2, [r3, #4]
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	4919      	ldr	r1, [pc, #100]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 80061bc:	428b      	cmp	r3, r1
 80061be:	d101      	bne.n	80061c4 <HAL_I2SEx_FullDuplex_IRQHandler+0x204>
 80061c0:	4b18      	ldr	r3, [pc, #96]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 80061c2:	e001      	b.n	80061c8 <HAL_I2SEx_FullDuplex_IRQHandler+0x208>
 80061c4:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80061c8:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80061cc:	605a      	str	r2, [r3, #4]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	2201      	movs	r2, #1
 80061d2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_OVR);
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061da:	f043 0202 	orr.w	r2, r3, #2
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 80061e2:	6878      	ldr	r0, [r7, #4]
 80061e4:	f7ff fda6 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }

    /* I2Sext Underrun error interrupt occurred -------------------------------*/
    if (((i2sextsr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2sextcr2 & I2S_IT_ERR) != RESET))
 80061e8:	69bb      	ldr	r3, [r7, #24]
 80061ea:	f003 0308 	and.w	r3, r3, #8
 80061ee:	2b08      	cmp	r3, #8
 80061f0:	d136      	bne.n	8006260 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
 80061f2:	693b      	ldr	r3, [r7, #16]
 80061f4:	f003 0320 	and.w	r3, r3, #32
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d031      	beq.n	8006260 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
    {
      /* Disable TXE and ERR interrupt */
      __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	4a07      	ldr	r2, [pc, #28]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006202:	4293      	cmp	r3, r2
 8006204:	d101      	bne.n	800620a <HAL_I2SEx_FullDuplex_IRQHandler+0x24a>
 8006206:	4b07      	ldr	r3, [pc, #28]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 8006208:	e001      	b.n	800620e <HAL_I2SEx_FullDuplex_IRQHandler+0x24e>
 800620a:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 800620e:	685a      	ldr	r2, [r3, #4]
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	4902      	ldr	r1, [pc, #8]	@ (8006220 <HAL_I2SEx_FullDuplex_IRQHandler+0x260>)
 8006216:	428b      	cmp	r3, r1
 8006218:	d106      	bne.n	8006228 <HAL_I2SEx_FullDuplex_IRQHandler+0x268>
 800621a:	4b02      	ldr	r3, [pc, #8]	@ (8006224 <HAL_I2SEx_FullDuplex_IRQHandler+0x264>)
 800621c:	e006      	b.n	800622c <HAL_I2SEx_FullDuplex_IRQHandler+0x26c>
 800621e:	bf00      	nop
 8006220:	40003800 	.word	0x40003800
 8006224:	40003400 	.word	0x40003400
 8006228:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 800622c:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 8006230:	605a      	str	r2, [r3, #4]

      /* Disable RXNE and ERR interrupt */
      __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	685a      	ldr	r2, [r3, #4]
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	681b      	ldr	r3, [r3, #0]
 800623c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8006240:	605a      	str	r2, [r3, #4]

      /* Set the I2S State ready */
      hi2s->State = HAL_I2S_STATE_READY;
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	2201      	movs	r2, #1
 8006246:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Set the error code and execute error callback*/
      SET_BIT(hi2s->ErrorCode, HAL_I2S_ERROR_UDR);
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800624e:	f043 0204 	orr.w	r2, r3, #4
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	645a      	str	r2, [r3, #68]	@ 0x44
      /* Call user error callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->ErrorCallback(hi2s);
#else
      HAL_I2S_ErrorCallback(hi2s);
 8006256:	6878      	ldr	r0, [r7, #4]
 8006258:	f7ff fd6c 	bl	8005d34 <HAL_I2S_ErrorCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 800625c:	e000      	b.n	8006260 <HAL_I2SEx_FullDuplex_IRQHandler+0x2a0>
    if (((i2ssr & I2S_FLAG_UDR) == I2S_FLAG_UDR) && ((i2scr2 & I2S_IT_ERR) != RESET))
 800625e:	bf00      	nop
}
 8006260:	bf00      	nop
 8006262:	3720      	adds	r7, #32
 8006264:	46bd      	mov	sp, r7
 8006266:	bd80      	pop	{r7, pc}

08006268 <HAL_I2SEx_TxRxCpltCallback>:
  * @brief  Tx and Rx Transfer completed callback
  * @param  hi2s I2S handle
  * @retval None
  */
__weak void HAL_I2SEx_TxRxCpltCallback(I2S_HandleTypeDef *hi2s)
{
 8006268:	b480      	push	{r7}
 800626a:	b083      	sub	sp, #12
 800626c:	af00      	add	r7, sp, #0
 800626e:	6078      	str	r0, [r7, #4]
  UNUSED(hi2s);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2SEx_TxRxCpltCallback could be implemented in the user file
   */
}
 8006270:	bf00      	nop
 8006272:	370c      	adds	r7, #12
 8006274:	46bd      	mov	sp, r7
 8006276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800627a:	4770      	bx	lr

0800627c <I2SEx_TxISR_I2S>:
  * @brief  I2S Full-Duplex IT handler transmit function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_TxISR_I2S(I2S_HandleTypeDef *hi2s)
{
 800627c:	b580      	push	{r7, lr}
 800627e:	b082      	sub	sp, #8
 8006280:	af00      	add	r7, sp, #0
 8006282:	6078      	str	r0, [r7, #4]
  /* Write Data on DR register */
  hi2s->Instance->DR = (*hi2s->pTxBuffPtr++);
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006288:	1c99      	adds	r1, r3, #2
 800628a:	687a      	ldr	r2, [r7, #4]
 800628c:	6251      	str	r1, [r2, #36]	@ 0x24
 800628e:	881a      	ldrh	r2, [r3, #0]
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	60da      	str	r2, [r3, #12]
  hi2s->TxXferCount--;
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800629a:	b29b      	uxth	r3, r3
 800629c:	3b01      	subs	r3, #1
 800629e:	b29a      	uxth	r2, r3
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	855a      	strh	r2, [r3, #42]	@ 0x2a

  if (hi2s->TxXferCount == 0U)
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80062a8:	b29b      	uxth	r3, r3
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d113      	bne.n	80062d6 <I2SEx_TxISR_I2S+0x5a>
  {
    /* Disable TXE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 80062ae:	687b      	ldr	r3, [r7, #4]
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	685a      	ldr	r2, [r3, #4]
 80062b4:	687b      	ldr	r3, [r7, #4]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 80062bc:	605a      	str	r2, [r3, #4]

    if (hi2s->RxXferCount == 0U)
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 80062c2:	b29b      	uxth	r3, r3
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d106      	bne.n	80062d6 <I2SEx_TxISR_I2S+0x5a>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	2201      	movs	r2, #1
 80062cc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 80062d0:	6878      	ldr	r0, [r7, #4]
 80062d2:	f7ff ffc9 	bl	8006268 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 80062d6:	bf00      	nop
 80062d8:	3708      	adds	r7, #8
 80062da:	46bd      	mov	sp, r7
 80062dc:	bd80      	pop	{r7, pc}
	...

080062e0 <I2SEx_TxISR_I2SExt>:
  * @brief  I2SExt Full-Duplex IT handler transmit function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_TxISR_I2SExt(I2S_HandleTypeDef *hi2s)
{
 80062e0:	b580      	push	{r7, lr}
 80062e2:	b082      	sub	sp, #8
 80062e4:	af00      	add	r7, sp, #0
 80062e6:	6078      	str	r0, [r7, #4]
  /* Write Data on DR register */
  I2SxEXT(hi2s->Instance)->DR = (*hi2s->pTxBuffPtr++);
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80062ec:	1c99      	adds	r1, r3, #2
 80062ee:	687a      	ldr	r2, [r7, #4]
 80062f0:	6251      	str	r1, [r2, #36]	@ 0x24
 80062f2:	8819      	ldrh	r1, [r3, #0]
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	4a1d      	ldr	r2, [pc, #116]	@ (8006370 <I2SEx_TxISR_I2SExt+0x90>)
 80062fa:	4293      	cmp	r3, r2
 80062fc:	d101      	bne.n	8006302 <I2SEx_TxISR_I2SExt+0x22>
 80062fe:	4b1d      	ldr	r3, [pc, #116]	@ (8006374 <I2SEx_TxISR_I2SExt+0x94>)
 8006300:	e001      	b.n	8006306 <I2SEx_TxISR_I2SExt+0x26>
 8006302:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006306:	460a      	mov	r2, r1
 8006308:	60da      	str	r2, [r3, #12]
  hi2s->TxXferCount--;
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800630e:	b29b      	uxth	r3, r3
 8006310:	3b01      	subs	r3, #1
 8006312:	b29a      	uxth	r2, r3
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	855a      	strh	r2, [r3, #42]	@ 0x2a

  if (hi2s->TxXferCount == 0U)
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800631c:	b29b      	uxth	r3, r3
 800631e:	2b00      	cmp	r3, #0
 8006320:	d121      	bne.n	8006366 <I2SEx_TxISR_I2SExt+0x86>
  {
    /* Disable I2Sext TXE and ERR interrupt */
    __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_TXE | I2S_IT_ERR));
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	4a12      	ldr	r2, [pc, #72]	@ (8006370 <I2SEx_TxISR_I2SExt+0x90>)
 8006328:	4293      	cmp	r3, r2
 800632a:	d101      	bne.n	8006330 <I2SEx_TxISR_I2SExt+0x50>
 800632c:	4b11      	ldr	r3, [pc, #68]	@ (8006374 <I2SEx_TxISR_I2SExt+0x94>)
 800632e:	e001      	b.n	8006334 <I2SEx_TxISR_I2SExt+0x54>
 8006330:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006334:	685a      	ldr	r2, [r3, #4]
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	681b      	ldr	r3, [r3, #0]
 800633a:	490d      	ldr	r1, [pc, #52]	@ (8006370 <I2SEx_TxISR_I2SExt+0x90>)
 800633c:	428b      	cmp	r3, r1
 800633e:	d101      	bne.n	8006344 <I2SEx_TxISR_I2SExt+0x64>
 8006340:	4b0c      	ldr	r3, [pc, #48]	@ (8006374 <I2SEx_TxISR_I2SExt+0x94>)
 8006342:	e001      	b.n	8006348 <I2SEx_TxISR_I2SExt+0x68>
 8006344:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006348:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800634c:	605a      	str	r2, [r3, #4]

    if (hi2s->RxXferCount == 0U)
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006352:	b29b      	uxth	r3, r3
 8006354:	2b00      	cmp	r3, #0
 8006356:	d106      	bne.n	8006366 <I2SEx_TxISR_I2SExt+0x86>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	2201      	movs	r2, #1
 800635c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 8006360:	6878      	ldr	r0, [r7, #4]
 8006362:	f7ff ff81 	bl	8006268 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8006366:	bf00      	nop
 8006368:	3708      	adds	r7, #8
 800636a:	46bd      	mov	sp, r7
 800636c:	bd80      	pop	{r7, pc}
 800636e:	bf00      	nop
 8006370:	40003800 	.word	0x40003800
 8006374:	40003400 	.word	0x40003400

08006378 <I2SEx_RxISR_I2S>:
  * @brief  I2S Full-Duplex IT handler receive function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_RxISR_I2S(I2S_HandleTypeDef *hi2s)
{
 8006378:	b580      	push	{r7, lr}
 800637a:	b082      	sub	sp, #8
 800637c:	af00      	add	r7, sp, #0
 800637e:	6078      	str	r0, [r7, #4]
  /* Read Data from DR register */
  (*hi2s->pRxBuffPtr++) = hi2s->Instance->DR;
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	68d8      	ldr	r0, [r3, #12]
 8006386:	687b      	ldr	r3, [r7, #4]
 8006388:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800638a:	1c99      	adds	r1, r3, #2
 800638c:	687a      	ldr	r2, [r7, #4]
 800638e:	62d1      	str	r1, [r2, #44]	@ 0x2c
 8006390:	b282      	uxth	r2, r0
 8006392:	801a      	strh	r2, [r3, #0]
  hi2s->RxXferCount--;
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006398:	b29b      	uxth	r3, r3
 800639a:	3b01      	subs	r3, #1
 800639c:	b29a      	uxth	r2, r3
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	865a      	strh	r2, [r3, #50]	@ 0x32

  if (hi2s->RxXferCount == 0U)
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 80063a6:	b29b      	uxth	r3, r3
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d113      	bne.n	80063d4 <I2SEx_RxISR_I2S+0x5c>
  {
    /* Disable RXNE and ERR interrupt */
    __HAL_I2S_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	685a      	ldr	r2, [r3, #4]
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80063ba:	605a      	str	r2, [r3, #4]

    if (hi2s->TxXferCount == 0U)
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80063c0:	b29b      	uxth	r3, r3
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d106      	bne.n	80063d4 <I2SEx_RxISR_I2S+0x5c>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	2201      	movs	r2, #1
 80063ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 80063ce:	6878      	ldr	r0, [r7, #4]
 80063d0:	f7ff ff4a 	bl	8006268 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 80063d4:	bf00      	nop
 80063d6:	3708      	adds	r7, #8
 80063d8:	46bd      	mov	sp, r7
 80063da:	bd80      	pop	{r7, pc}

080063dc <I2SEx_RxISR_I2SExt>:
  * @brief  I2SExt Full-Duplex IT handler receive function
  * @param  hi2s I2S handle
  * @retval None
  */
static void I2SEx_RxISR_I2SExt(I2S_HandleTypeDef *hi2s)
{
 80063dc:	b580      	push	{r7, lr}
 80063de:	b082      	sub	sp, #8
 80063e0:	af00      	add	r7, sp, #0
 80063e2:	6078      	str	r0, [r7, #4]
  /* Read Data from DR register */
  (*hi2s->pRxBuffPtr++) = I2SxEXT(hi2s->Instance)->DR;
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	4a20      	ldr	r2, [pc, #128]	@ (800646c <I2SEx_RxISR_I2SExt+0x90>)
 80063ea:	4293      	cmp	r3, r2
 80063ec:	d101      	bne.n	80063f2 <I2SEx_RxISR_I2SExt+0x16>
 80063ee:	4b20      	ldr	r3, [pc, #128]	@ (8006470 <I2SEx_RxISR_I2SExt+0x94>)
 80063f0:	e001      	b.n	80063f6 <I2SEx_RxISR_I2SExt+0x1a>
 80063f2:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80063f6:	68d8      	ldr	r0, [r3, #12]
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80063fc:	1c99      	adds	r1, r3, #2
 80063fe:	687a      	ldr	r2, [r7, #4]
 8006400:	62d1      	str	r1, [r2, #44]	@ 0x2c
 8006402:	b282      	uxth	r2, r0
 8006404:	801a      	strh	r2, [r3, #0]
  hi2s->RxXferCount--;
 8006406:	687b      	ldr	r3, [r7, #4]
 8006408:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800640a:	b29b      	uxth	r3, r3
 800640c:	3b01      	subs	r3, #1
 800640e:	b29a      	uxth	r2, r3
 8006410:	687b      	ldr	r3, [r7, #4]
 8006412:	865a      	strh	r2, [r3, #50]	@ 0x32

  if (hi2s->RxXferCount == 0U)
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 8006418:	b29b      	uxth	r3, r3
 800641a:	2b00      	cmp	r3, #0
 800641c:	d121      	bne.n	8006462 <I2SEx_RxISR_I2SExt+0x86>
  {
    /* Disable I2Sext RXNE and ERR interrupt */
    __HAL_I2SEXT_DISABLE_IT(hi2s, (I2S_IT_RXNE | I2S_IT_ERR));
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	4a12      	ldr	r2, [pc, #72]	@ (800646c <I2SEx_RxISR_I2SExt+0x90>)
 8006424:	4293      	cmp	r3, r2
 8006426:	d101      	bne.n	800642c <I2SEx_RxISR_I2SExt+0x50>
 8006428:	4b11      	ldr	r3, [pc, #68]	@ (8006470 <I2SEx_RxISR_I2SExt+0x94>)
 800642a:	e001      	b.n	8006430 <I2SEx_RxISR_I2SExt+0x54>
 800642c:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006430:	685a      	ldr	r2, [r3, #4]
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	490d      	ldr	r1, [pc, #52]	@ (800646c <I2SEx_RxISR_I2SExt+0x90>)
 8006438:	428b      	cmp	r3, r1
 800643a:	d101      	bne.n	8006440 <I2SEx_RxISR_I2SExt+0x64>
 800643c:	4b0c      	ldr	r3, [pc, #48]	@ (8006470 <I2SEx_RxISR_I2SExt+0x94>)
 800643e:	e001      	b.n	8006444 <I2SEx_RxISR_I2SExt+0x68>
 8006440:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8006444:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8006448:	605a      	str	r2, [r3, #4]

    if (hi2s->TxXferCount == 0U)
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800644e:	b29b      	uxth	r3, r3
 8006450:	2b00      	cmp	r3, #0
 8006452:	d106      	bne.n	8006462 <I2SEx_RxISR_I2SExt+0x86>
    {
      hi2s->State = HAL_I2S_STATE_READY;
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	2201      	movs	r2, #1
 8006458:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
      /* Call user TxRx complete callback */
#if (USE_HAL_I2S_REGISTER_CALLBACKS == 1U)
      hi2s->TxRxCpltCallback(hi2s);
#else
      HAL_I2SEx_TxRxCpltCallback(hi2s);
 800645c:	6878      	ldr	r0, [r7, #4]
 800645e:	f7ff ff03 	bl	8006268 <HAL_I2SEx_TxRxCpltCallback>
#endif /* USE_HAL_I2S_REGISTER_CALLBACKS */
    }
  }
}
 8006462:	bf00      	nop
 8006464:	3708      	adds	r7, #8
 8006466:	46bd      	mov	sp, r7
 8006468:	bd80      	pop	{r7, pc}
 800646a:	bf00      	nop
 800646c:	40003800 	.word	0x40003800
 8006470:	40003400 	.word	0x40003400

08006474 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006474:	b580      	push	{r7, lr}
 8006476:	b086      	sub	sp, #24
 8006478:	af00      	add	r7, sp, #0
 800647a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	2b00      	cmp	r3, #0
 8006480:	d101      	bne.n	8006486 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006482:	2301      	movs	r3, #1
 8006484:	e267      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	f003 0301 	and.w	r3, r3, #1
 800648e:	2b00      	cmp	r3, #0
 8006490:	d075      	beq.n	800657e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8006492:	4b88      	ldr	r3, [pc, #544]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006494:	689b      	ldr	r3, [r3, #8]
 8006496:	f003 030c 	and.w	r3, r3, #12
 800649a:	2b04      	cmp	r3, #4
 800649c:	d00c      	beq.n	80064b8 <HAL_RCC_OscConfig+0x44>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800649e:	4b85      	ldr	r3, [pc, #532]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064a0:	689b      	ldr	r3, [r3, #8]
 80064a2:	f003 030c 	and.w	r3, r3, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80064a6:	2b08      	cmp	r3, #8
 80064a8:	d112      	bne.n	80064d0 <HAL_RCC_OscConfig+0x5c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80064aa:	4b82      	ldr	r3, [pc, #520]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064ac:	685b      	ldr	r3, [r3, #4]
 80064ae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80064b2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80064b6:	d10b      	bne.n	80064d0 <HAL_RCC_OscConfig+0x5c>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80064b8:	4b7e      	ldr	r3, [pc, #504]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80064c0:	2b00      	cmp	r3, #0
 80064c2:	d05b      	beq.n	800657c <HAL_RCC_OscConfig+0x108>
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	685b      	ldr	r3, [r3, #4]
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	d157      	bne.n	800657c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 80064cc:	2301      	movs	r3, #1
 80064ce:	e242      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	685b      	ldr	r3, [r3, #4]
 80064d4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80064d8:	d106      	bne.n	80064e8 <HAL_RCC_OscConfig+0x74>
 80064da:	4b76      	ldr	r3, [pc, #472]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064dc:	681b      	ldr	r3, [r3, #0]
 80064de:	4a75      	ldr	r2, [pc, #468]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064e0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80064e4:	6013      	str	r3, [r2, #0]
 80064e6:	e01d      	b.n	8006524 <HAL_RCC_OscConfig+0xb0>
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	685b      	ldr	r3, [r3, #4]
 80064ec:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80064f0:	d10c      	bne.n	800650c <HAL_RCC_OscConfig+0x98>
 80064f2:	4b70      	ldr	r3, [pc, #448]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	4a6f      	ldr	r2, [pc, #444]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80064f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80064fc:	6013      	str	r3, [r2, #0]
 80064fe:	4b6d      	ldr	r3, [pc, #436]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006500:	681b      	ldr	r3, [r3, #0]
 8006502:	4a6c      	ldr	r2, [pc, #432]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006504:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006508:	6013      	str	r3, [r2, #0]
 800650a:	e00b      	b.n	8006524 <HAL_RCC_OscConfig+0xb0>
 800650c:	4b69      	ldr	r3, [pc, #420]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 800650e:	681b      	ldr	r3, [r3, #0]
 8006510:	4a68      	ldr	r2, [pc, #416]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006512:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006516:	6013      	str	r3, [r2, #0]
 8006518:	4b66      	ldr	r3, [pc, #408]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	4a65      	ldr	r2, [pc, #404]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 800651e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006522:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006524:	687b      	ldr	r3, [r7, #4]
 8006526:	685b      	ldr	r3, [r3, #4]
 8006528:	2b00      	cmp	r3, #0
 800652a:	d013      	beq.n	8006554 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800652c:	f7fc fb62 	bl	8002bf4 <HAL_GetTick>
 8006530:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006532:	e008      	b.n	8006546 <HAL_RCC_OscConfig+0xd2>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006534:	f7fc fb5e 	bl	8002bf4 <HAL_GetTick>
 8006538:	4602      	mov	r2, r0
 800653a:	693b      	ldr	r3, [r7, #16]
 800653c:	1ad3      	subs	r3, r2, r3
 800653e:	2b64      	cmp	r3, #100	@ 0x64
 8006540:	d901      	bls.n	8006546 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8006542:	2303      	movs	r3, #3
 8006544:	e207      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006546:	4b5b      	ldr	r3, [pc, #364]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006548:	681b      	ldr	r3, [r3, #0]
 800654a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800654e:	2b00      	cmp	r3, #0
 8006550:	d0f0      	beq.n	8006534 <HAL_RCC_OscConfig+0xc0>
 8006552:	e014      	b.n	800657e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006554:	f7fc fb4e 	bl	8002bf4 <HAL_GetTick>
 8006558:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800655a:	e008      	b.n	800656e <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800655c:	f7fc fb4a 	bl	8002bf4 <HAL_GetTick>
 8006560:	4602      	mov	r2, r0
 8006562:	693b      	ldr	r3, [r7, #16]
 8006564:	1ad3      	subs	r3, r2, r3
 8006566:	2b64      	cmp	r3, #100	@ 0x64
 8006568:	d901      	bls.n	800656e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800656a:	2303      	movs	r3, #3
 800656c:	e1f3      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800656e:	4b51      	ldr	r3, [pc, #324]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006576:	2b00      	cmp	r3, #0
 8006578:	d1f0      	bne.n	800655c <HAL_RCC_OscConfig+0xe8>
 800657a:	e000      	b.n	800657e <HAL_RCC_OscConfig+0x10a>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800657c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	f003 0302 	and.w	r3, r3, #2
 8006586:	2b00      	cmp	r3, #0
 8006588:	d063      	beq.n	8006652 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800658a:	4b4a      	ldr	r3, [pc, #296]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 800658c:	689b      	ldr	r3, [r3, #8]
 800658e:	f003 030c 	and.w	r3, r3, #12
 8006592:	2b00      	cmp	r3, #0
 8006594:	d00b      	beq.n	80065ae <HAL_RCC_OscConfig+0x13a>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006596:	4b47      	ldr	r3, [pc, #284]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006598:	689b      	ldr	r3, [r3, #8]
 800659a:	f003 030c 	and.w	r3, r3, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800659e:	2b08      	cmp	r3, #8
 80065a0:	d11c      	bne.n	80065dc <HAL_RCC_OscConfig+0x168>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80065a2:	4b44      	ldr	r3, [pc, #272]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80065a4:	685b      	ldr	r3, [r3, #4]
 80065a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80065aa:	2b00      	cmp	r3, #0
 80065ac:	d116      	bne.n	80065dc <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80065ae:	4b41      	ldr	r3, [pc, #260]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	f003 0302 	and.w	r3, r3, #2
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d005      	beq.n	80065c6 <HAL_RCC_OscConfig+0x152>
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	68db      	ldr	r3, [r3, #12]
 80065be:	2b01      	cmp	r3, #1
 80065c0:	d001      	beq.n	80065c6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 80065c2:	2301      	movs	r3, #1
 80065c4:	e1c7      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80065c6:	4b3b      	ldr	r3, [pc, #236]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	691b      	ldr	r3, [r3, #16]
 80065d2:	00db      	lsls	r3, r3, #3
 80065d4:	4937      	ldr	r1, [pc, #220]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 80065d6:	4313      	orrs	r3, r2
 80065d8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80065da:	e03a      	b.n	8006652 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	68db      	ldr	r3, [r3, #12]
 80065e0:	2b00      	cmp	r3, #0
 80065e2:	d020      	beq.n	8006626 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80065e4:	4b34      	ldr	r3, [pc, #208]	@ (80066b8 <HAL_RCC_OscConfig+0x244>)
 80065e6:	2201      	movs	r2, #1
 80065e8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80065ea:	f7fc fb03 	bl	8002bf4 <HAL_GetTick>
 80065ee:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80065f0:	e008      	b.n	8006604 <HAL_RCC_OscConfig+0x190>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80065f2:	f7fc faff 	bl	8002bf4 <HAL_GetTick>
 80065f6:	4602      	mov	r2, r0
 80065f8:	693b      	ldr	r3, [r7, #16]
 80065fa:	1ad3      	subs	r3, r2, r3
 80065fc:	2b02      	cmp	r3, #2
 80065fe:	d901      	bls.n	8006604 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8006600:	2303      	movs	r3, #3
 8006602:	e1a8      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006604:	4b2b      	ldr	r3, [pc, #172]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006606:	681b      	ldr	r3, [r3, #0]
 8006608:	f003 0302 	and.w	r3, r3, #2
 800660c:	2b00      	cmp	r3, #0
 800660e:	d0f0      	beq.n	80065f2 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006610:	4b28      	ldr	r3, [pc, #160]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006612:	681b      	ldr	r3, [r3, #0]
 8006614:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	691b      	ldr	r3, [r3, #16]
 800661c:	00db      	lsls	r3, r3, #3
 800661e:	4925      	ldr	r1, [pc, #148]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006620:	4313      	orrs	r3, r2
 8006622:	600b      	str	r3, [r1, #0]
 8006624:	e015      	b.n	8006652 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006626:	4b24      	ldr	r3, [pc, #144]	@ (80066b8 <HAL_RCC_OscConfig+0x244>)
 8006628:	2200      	movs	r2, #0
 800662a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800662c:	f7fc fae2 	bl	8002bf4 <HAL_GetTick>
 8006630:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006632:	e008      	b.n	8006646 <HAL_RCC_OscConfig+0x1d2>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006634:	f7fc fade 	bl	8002bf4 <HAL_GetTick>
 8006638:	4602      	mov	r2, r0
 800663a:	693b      	ldr	r3, [r7, #16]
 800663c:	1ad3      	subs	r3, r2, r3
 800663e:	2b02      	cmp	r3, #2
 8006640:	d901      	bls.n	8006646 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8006642:	2303      	movs	r3, #3
 8006644:	e187      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006646:	4b1b      	ldr	r3, [pc, #108]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	f003 0302 	and.w	r3, r3, #2
 800664e:	2b00      	cmp	r3, #0
 8006650:	d1f0      	bne.n	8006634 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006652:	687b      	ldr	r3, [r7, #4]
 8006654:	681b      	ldr	r3, [r3, #0]
 8006656:	f003 0308 	and.w	r3, r3, #8
 800665a:	2b00      	cmp	r3, #0
 800665c:	d036      	beq.n	80066cc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	695b      	ldr	r3, [r3, #20]
 8006662:	2b00      	cmp	r3, #0
 8006664:	d016      	beq.n	8006694 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8006666:	4b15      	ldr	r3, [pc, #84]	@ (80066bc <HAL_RCC_OscConfig+0x248>)
 8006668:	2201      	movs	r2, #1
 800666a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800666c:	f7fc fac2 	bl	8002bf4 <HAL_GetTick>
 8006670:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006672:	e008      	b.n	8006686 <HAL_RCC_OscConfig+0x212>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006674:	f7fc fabe 	bl	8002bf4 <HAL_GetTick>
 8006678:	4602      	mov	r2, r0
 800667a:	693b      	ldr	r3, [r7, #16]
 800667c:	1ad3      	subs	r3, r2, r3
 800667e:	2b02      	cmp	r3, #2
 8006680:	d901      	bls.n	8006686 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8006682:	2303      	movs	r3, #3
 8006684:	e167      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006686:	4b0b      	ldr	r3, [pc, #44]	@ (80066b4 <HAL_RCC_OscConfig+0x240>)
 8006688:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800668a:	f003 0302 	and.w	r3, r3, #2
 800668e:	2b00      	cmp	r3, #0
 8006690:	d0f0      	beq.n	8006674 <HAL_RCC_OscConfig+0x200>
 8006692:	e01b      	b.n	80066cc <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8006694:	4b09      	ldr	r3, [pc, #36]	@ (80066bc <HAL_RCC_OscConfig+0x248>)
 8006696:	2200      	movs	r2, #0
 8006698:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800669a:	f7fc faab 	bl	8002bf4 <HAL_GetTick>
 800669e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066a0:	e00e      	b.n	80066c0 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80066a2:	f7fc faa7 	bl	8002bf4 <HAL_GetTick>
 80066a6:	4602      	mov	r2, r0
 80066a8:	693b      	ldr	r3, [r7, #16]
 80066aa:	1ad3      	subs	r3, r2, r3
 80066ac:	2b02      	cmp	r3, #2
 80066ae:	d907      	bls.n	80066c0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80066b0:	2303      	movs	r3, #3
 80066b2:	e150      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
 80066b4:	40023800 	.word	0x40023800
 80066b8:	42470000 	.word	0x42470000
 80066bc:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066c0:	4b88      	ldr	r3, [pc, #544]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80066c2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80066c4:	f003 0302 	and.w	r3, r3, #2
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	d1ea      	bne.n	80066a2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	f003 0304 	and.w	r3, r3, #4
 80066d4:	2b00      	cmp	r3, #0
 80066d6:	f000 8097 	beq.w	8006808 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 80066da:	2300      	movs	r3, #0
 80066dc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80066de:	4b81      	ldr	r3, [pc, #516]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80066e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80066e2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	d10f      	bne.n	800670a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80066ea:	2300      	movs	r3, #0
 80066ec:	60bb      	str	r3, [r7, #8]
 80066ee:	4b7d      	ldr	r3, [pc, #500]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80066f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80066f2:	4a7c      	ldr	r2, [pc, #496]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80066f4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80066f8:	6413      	str	r3, [r2, #64]	@ 0x40
 80066fa:	4b7a      	ldr	r3, [pc, #488]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80066fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80066fe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006702:	60bb      	str	r3, [r7, #8]
 8006704:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8006706:	2301      	movs	r3, #1
 8006708:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800670a:	4b77      	ldr	r3, [pc, #476]	@ (80068e8 <HAL_RCC_OscConfig+0x474>)
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006712:	2b00      	cmp	r3, #0
 8006714:	d118      	bne.n	8006748 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006716:	4b74      	ldr	r3, [pc, #464]	@ (80068e8 <HAL_RCC_OscConfig+0x474>)
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	4a73      	ldr	r2, [pc, #460]	@ (80068e8 <HAL_RCC_OscConfig+0x474>)
 800671c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006720:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8006722:	f7fc fa67 	bl	8002bf4 <HAL_GetTick>
 8006726:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006728:	e008      	b.n	800673c <HAL_RCC_OscConfig+0x2c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800672a:	f7fc fa63 	bl	8002bf4 <HAL_GetTick>
 800672e:	4602      	mov	r2, r0
 8006730:	693b      	ldr	r3, [r7, #16]
 8006732:	1ad3      	subs	r3, r2, r3
 8006734:	2b02      	cmp	r3, #2
 8006736:	d901      	bls.n	800673c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8006738:	2303      	movs	r3, #3
 800673a:	e10c      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800673c:	4b6a      	ldr	r3, [pc, #424]	@ (80068e8 <HAL_RCC_OscConfig+0x474>)
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006744:	2b00      	cmp	r3, #0
 8006746:	d0f0      	beq.n	800672a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	689b      	ldr	r3, [r3, #8]
 800674c:	2b01      	cmp	r3, #1
 800674e:	d106      	bne.n	800675e <HAL_RCC_OscConfig+0x2ea>
 8006750:	4b64      	ldr	r3, [pc, #400]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006752:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006754:	4a63      	ldr	r2, [pc, #396]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006756:	f043 0301 	orr.w	r3, r3, #1
 800675a:	6713      	str	r3, [r2, #112]	@ 0x70
 800675c:	e01c      	b.n	8006798 <HAL_RCC_OscConfig+0x324>
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	689b      	ldr	r3, [r3, #8]
 8006762:	2b05      	cmp	r3, #5
 8006764:	d10c      	bne.n	8006780 <HAL_RCC_OscConfig+0x30c>
 8006766:	4b5f      	ldr	r3, [pc, #380]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006768:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800676a:	4a5e      	ldr	r2, [pc, #376]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 800676c:	f043 0304 	orr.w	r3, r3, #4
 8006770:	6713      	str	r3, [r2, #112]	@ 0x70
 8006772:	4b5c      	ldr	r3, [pc, #368]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006774:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006776:	4a5b      	ldr	r2, [pc, #364]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006778:	f043 0301 	orr.w	r3, r3, #1
 800677c:	6713      	str	r3, [r2, #112]	@ 0x70
 800677e:	e00b      	b.n	8006798 <HAL_RCC_OscConfig+0x324>
 8006780:	4b58      	ldr	r3, [pc, #352]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006782:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006784:	4a57      	ldr	r2, [pc, #348]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006786:	f023 0301 	bic.w	r3, r3, #1
 800678a:	6713      	str	r3, [r2, #112]	@ 0x70
 800678c:	4b55      	ldr	r3, [pc, #340]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 800678e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006790:	4a54      	ldr	r2, [pc, #336]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006792:	f023 0304 	bic.w	r3, r3, #4
 8006796:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	689b      	ldr	r3, [r3, #8]
 800679c:	2b00      	cmp	r3, #0
 800679e:	d015      	beq.n	80067cc <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80067a0:	f7fc fa28 	bl	8002bf4 <HAL_GetTick>
 80067a4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067a6:	e00a      	b.n	80067be <HAL_RCC_OscConfig+0x34a>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80067a8:	f7fc fa24 	bl	8002bf4 <HAL_GetTick>
 80067ac:	4602      	mov	r2, r0
 80067ae:	693b      	ldr	r3, [r7, #16]
 80067b0:	1ad3      	subs	r3, r2, r3
 80067b2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80067b6:	4293      	cmp	r3, r2
 80067b8:	d901      	bls.n	80067be <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 80067ba:	2303      	movs	r3, #3
 80067bc:	e0cb      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067be:	4b49      	ldr	r3, [pc, #292]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80067c0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80067c2:	f003 0302 	and.w	r3, r3, #2
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	d0ee      	beq.n	80067a8 <HAL_RCC_OscConfig+0x334>
 80067ca:	e014      	b.n	80067f6 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80067cc:	f7fc fa12 	bl	8002bf4 <HAL_GetTick>
 80067d0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80067d2:	e00a      	b.n	80067ea <HAL_RCC_OscConfig+0x376>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80067d4:	f7fc fa0e 	bl	8002bf4 <HAL_GetTick>
 80067d8:	4602      	mov	r2, r0
 80067da:	693b      	ldr	r3, [r7, #16]
 80067dc:	1ad3      	subs	r3, r2, r3
 80067de:	f241 3288 	movw	r2, #5000	@ 0x1388
 80067e2:	4293      	cmp	r3, r2
 80067e4:	d901      	bls.n	80067ea <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 80067e6:	2303      	movs	r3, #3
 80067e8:	e0b5      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80067ea:	4b3e      	ldr	r3, [pc, #248]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80067ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80067ee:	f003 0302 	and.w	r3, r3, #2
 80067f2:	2b00      	cmp	r3, #0
 80067f4:	d1ee      	bne.n	80067d4 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80067f6:	7dfb      	ldrb	r3, [r7, #23]
 80067f8:	2b01      	cmp	r3, #1
 80067fa:	d105      	bne.n	8006808 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80067fc:	4b39      	ldr	r3, [pc, #228]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80067fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006800:	4a38      	ldr	r2, [pc, #224]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006802:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006806:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	699b      	ldr	r3, [r3, #24]
 800680c:	2b00      	cmp	r3, #0
 800680e:	f000 80a1 	beq.w	8006954 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006812:	4b34      	ldr	r3, [pc, #208]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006814:	689b      	ldr	r3, [r3, #8]
 8006816:	f003 030c 	and.w	r3, r3, #12
 800681a:	2b08      	cmp	r3, #8
 800681c:	d05c      	beq.n	80068d8 <HAL_RCC_OscConfig+0x464>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	699b      	ldr	r3, [r3, #24]
 8006822:	2b02      	cmp	r3, #2
 8006824:	d141      	bne.n	80068aa <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006826:	4b31      	ldr	r3, [pc, #196]	@ (80068ec <HAL_RCC_OscConfig+0x478>)
 8006828:	2200      	movs	r2, #0
 800682a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800682c:	f7fc f9e2 	bl	8002bf4 <HAL_GetTick>
 8006830:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006832:	e008      	b.n	8006846 <HAL_RCC_OscConfig+0x3d2>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006834:	f7fc f9de 	bl	8002bf4 <HAL_GetTick>
 8006838:	4602      	mov	r2, r0
 800683a:	693b      	ldr	r3, [r7, #16]
 800683c:	1ad3      	subs	r3, r2, r3
 800683e:	2b02      	cmp	r3, #2
 8006840:	d901      	bls.n	8006846 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8006842:	2303      	movs	r3, #3
 8006844:	e087      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006846:	4b27      	ldr	r3, [pc, #156]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800684e:	2b00      	cmp	r3, #0
 8006850:	d1f0      	bne.n	8006834 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	69da      	ldr	r2, [r3, #28]
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	6a1b      	ldr	r3, [r3, #32]
 800685a:	431a      	orrs	r2, r3
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006860:	019b      	lsls	r3, r3, #6
 8006862:	431a      	orrs	r2, r3
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006868:	085b      	lsrs	r3, r3, #1
 800686a:	3b01      	subs	r3, #1
 800686c:	041b      	lsls	r3, r3, #16
 800686e:	431a      	orrs	r2, r3
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006874:	061b      	lsls	r3, r3, #24
 8006876:	491b      	ldr	r1, [pc, #108]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 8006878:	4313      	orrs	r3, r2
 800687a:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800687c:	4b1b      	ldr	r3, [pc, #108]	@ (80068ec <HAL_RCC_OscConfig+0x478>)
 800687e:	2201      	movs	r2, #1
 8006880:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006882:	f7fc f9b7 	bl	8002bf4 <HAL_GetTick>
 8006886:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006888:	e008      	b.n	800689c <HAL_RCC_OscConfig+0x428>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800688a:	f7fc f9b3 	bl	8002bf4 <HAL_GetTick>
 800688e:	4602      	mov	r2, r0
 8006890:	693b      	ldr	r3, [r7, #16]
 8006892:	1ad3      	subs	r3, r2, r3
 8006894:	2b02      	cmp	r3, #2
 8006896:	d901      	bls.n	800689c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8006898:	2303      	movs	r3, #3
 800689a:	e05c      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800689c:	4b11      	ldr	r3, [pc, #68]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d0f0      	beq.n	800688a <HAL_RCC_OscConfig+0x416>
 80068a8:	e054      	b.n	8006954 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80068aa:	4b10      	ldr	r3, [pc, #64]	@ (80068ec <HAL_RCC_OscConfig+0x478>)
 80068ac:	2200      	movs	r2, #0
 80068ae:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80068b0:	f7fc f9a0 	bl	8002bf4 <HAL_GetTick>
 80068b4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80068b6:	e008      	b.n	80068ca <HAL_RCC_OscConfig+0x456>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80068b8:	f7fc f99c 	bl	8002bf4 <HAL_GetTick>
 80068bc:	4602      	mov	r2, r0
 80068be:	693b      	ldr	r3, [r7, #16]
 80068c0:	1ad3      	subs	r3, r2, r3
 80068c2:	2b02      	cmp	r3, #2
 80068c4:	d901      	bls.n	80068ca <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 80068c6:	2303      	movs	r3, #3
 80068c8:	e045      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80068ca:	4b06      	ldr	r3, [pc, #24]	@ (80068e4 <HAL_RCC_OscConfig+0x470>)
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80068d2:	2b00      	cmp	r3, #0
 80068d4:	d1f0      	bne.n	80068b8 <HAL_RCC_OscConfig+0x444>
 80068d6:	e03d      	b.n	8006954 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	699b      	ldr	r3, [r3, #24]
 80068dc:	2b01      	cmp	r3, #1
 80068de:	d107      	bne.n	80068f0 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 80068e0:	2301      	movs	r3, #1
 80068e2:	e038      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
 80068e4:	40023800 	.word	0x40023800
 80068e8:	40007000 	.word	0x40007000
 80068ec:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 80068f0:	4b1b      	ldr	r3, [pc, #108]	@ (8006960 <HAL_RCC_OscConfig+0x4ec>)
 80068f2:	685b      	ldr	r3, [r3, #4]
 80068f4:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	699b      	ldr	r3, [r3, #24]
 80068fa:	2b01      	cmp	r3, #1
 80068fc:	d028      	beq.n	8006950 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068fe:	68fb      	ldr	r3, [r7, #12]
 8006900:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006908:	429a      	cmp	r2, r3
 800690a:	d121      	bne.n	8006950 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800690c:	68fb      	ldr	r3, [r7, #12]
 800690e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006916:	429a      	cmp	r2, r3
 8006918:	d11a      	bne.n	8006950 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800691a:	68fa      	ldr	r2, [r7, #12]
 800691c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8006920:	4013      	ands	r3, r2
 8006922:	687a      	ldr	r2, [r7, #4]
 8006924:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006926:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006928:	4293      	cmp	r3, r2
 800692a:	d111      	bne.n	8006950 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006936:	085b      	lsrs	r3, r3, #1
 8006938:	3b01      	subs	r3, #1
 800693a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800693c:	429a      	cmp	r2, r3
 800693e:	d107      	bne.n	8006950 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800694a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800694c:	429a      	cmp	r2, r3
 800694e:	d001      	beq.n	8006954 <HAL_RCC_OscConfig+0x4e0>
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8006950:	2301      	movs	r3, #1
 8006952:	e000      	b.n	8006956 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8006954:	2300      	movs	r3, #0
}
 8006956:	4618      	mov	r0, r3
 8006958:	3718      	adds	r7, #24
 800695a:	46bd      	mov	sp, r7
 800695c:	bd80      	pop	{r7, pc}
 800695e:	bf00      	nop
 8006960:	40023800 	.word	0x40023800

08006964 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006964:	b580      	push	{r7, lr}
 8006966:	b084      	sub	sp, #16
 8006968:	af00      	add	r7, sp, #0
 800696a:	6078      	str	r0, [r7, #4]
 800696c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	2b00      	cmp	r3, #0
 8006972:	d101      	bne.n	8006978 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006974:	2301      	movs	r3, #1
 8006976:	e0cc      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006978:	4b68      	ldr	r3, [pc, #416]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	f003 0307 	and.w	r3, r3, #7
 8006980:	683a      	ldr	r2, [r7, #0]
 8006982:	429a      	cmp	r2, r3
 8006984:	d90c      	bls.n	80069a0 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006986:	4b65      	ldr	r3, [pc, #404]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 8006988:	683a      	ldr	r2, [r7, #0]
 800698a:	b2d2      	uxtb	r2, r2
 800698c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800698e:	4b63      	ldr	r3, [pc, #396]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 8006990:	681b      	ldr	r3, [r3, #0]
 8006992:	f003 0307 	and.w	r3, r3, #7
 8006996:	683a      	ldr	r2, [r7, #0]
 8006998:	429a      	cmp	r2, r3
 800699a:	d001      	beq.n	80069a0 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800699c:	2301      	movs	r3, #1
 800699e:	e0b8      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	f003 0302 	and.w	r3, r3, #2
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d020      	beq.n	80069ee <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	f003 0304 	and.w	r3, r3, #4
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	d005      	beq.n	80069c4 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80069b8:	4b59      	ldr	r3, [pc, #356]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069ba:	689b      	ldr	r3, [r3, #8]
 80069bc:	4a58      	ldr	r2, [pc, #352]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069be:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80069c2:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f003 0308 	and.w	r3, r3, #8
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d005      	beq.n	80069dc <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80069d0:	4b53      	ldr	r3, [pc, #332]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069d2:	689b      	ldr	r3, [r3, #8]
 80069d4:	4a52      	ldr	r2, [pc, #328]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069d6:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80069da:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80069dc:	4b50      	ldr	r3, [pc, #320]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069de:	689b      	ldr	r3, [r3, #8]
 80069e0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	689b      	ldr	r3, [r3, #8]
 80069e8:	494d      	ldr	r1, [pc, #308]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 80069ea:	4313      	orrs	r3, r2
 80069ec:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f003 0301 	and.w	r3, r3, #1
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d044      	beq.n	8006a84 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	685b      	ldr	r3, [r3, #4]
 80069fe:	2b01      	cmp	r3, #1
 8006a00:	d107      	bne.n	8006a12 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006a02:	4b47      	ldr	r3, [pc, #284]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006a0a:	2b00      	cmp	r3, #0
 8006a0c:	d119      	bne.n	8006a42 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006a0e:	2301      	movs	r3, #1
 8006a10:	e07f      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	685b      	ldr	r3, [r3, #4]
 8006a16:	2b02      	cmp	r3, #2
 8006a18:	d003      	beq.n	8006a22 <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006a1e:	2b03      	cmp	r3, #3
 8006a20:	d107      	bne.n	8006a32 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a22:	4b3f      	ldr	r3, [pc, #252]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a24:	681b      	ldr	r3, [r3, #0]
 8006a26:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006a2a:	2b00      	cmp	r3, #0
 8006a2c:	d109      	bne.n	8006a42 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006a2e:	2301      	movs	r3, #1
 8006a30:	e06f      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006a32:	4b3b      	ldr	r3, [pc, #236]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	f003 0302 	and.w	r3, r3, #2
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d101      	bne.n	8006a42 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006a3e:	2301      	movs	r3, #1
 8006a40:	e067      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006a42:	4b37      	ldr	r3, [pc, #220]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a44:	689b      	ldr	r3, [r3, #8]
 8006a46:	f023 0203 	bic.w	r2, r3, #3
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	685b      	ldr	r3, [r3, #4]
 8006a4e:	4934      	ldr	r1, [pc, #208]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a50:	4313      	orrs	r3, r2
 8006a52:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006a54:	f7fc f8ce 	bl	8002bf4 <HAL_GetTick>
 8006a58:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006a5a:	e00a      	b.n	8006a72 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a5c:	f7fc f8ca 	bl	8002bf4 <HAL_GetTick>
 8006a60:	4602      	mov	r2, r0
 8006a62:	68fb      	ldr	r3, [r7, #12]
 8006a64:	1ad3      	subs	r3, r2, r3
 8006a66:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006a6a:	4293      	cmp	r3, r2
 8006a6c:	d901      	bls.n	8006a72 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8006a6e:	2303      	movs	r3, #3
 8006a70:	e04f      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006a72:	4b2b      	ldr	r3, [pc, #172]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006a74:	689b      	ldr	r3, [r3, #8]
 8006a76:	f003 020c 	and.w	r2, r3, #12
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	685b      	ldr	r3, [r3, #4]
 8006a7e:	009b      	lsls	r3, r3, #2
 8006a80:	429a      	cmp	r2, r3
 8006a82:	d1eb      	bne.n	8006a5c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006a84:	4b25      	ldr	r3, [pc, #148]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	f003 0307 	and.w	r3, r3, #7
 8006a8c:	683a      	ldr	r2, [r7, #0]
 8006a8e:	429a      	cmp	r2, r3
 8006a90:	d20c      	bcs.n	8006aac <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a92:	4b22      	ldr	r3, [pc, #136]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 8006a94:	683a      	ldr	r2, [r7, #0]
 8006a96:	b2d2      	uxtb	r2, r2
 8006a98:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a9a:	4b20      	ldr	r3, [pc, #128]	@ (8006b1c <HAL_RCC_ClockConfig+0x1b8>)
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	f003 0307 	and.w	r3, r3, #7
 8006aa2:	683a      	ldr	r2, [r7, #0]
 8006aa4:	429a      	cmp	r2, r3
 8006aa6:	d001      	beq.n	8006aac <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006aa8:	2301      	movs	r3, #1
 8006aaa:	e032      	b.n	8006b12 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	f003 0304 	and.w	r3, r3, #4
 8006ab4:	2b00      	cmp	r3, #0
 8006ab6:	d008      	beq.n	8006aca <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006ab8:	4b19      	ldr	r3, [pc, #100]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006aba:	689b      	ldr	r3, [r3, #8]
 8006abc:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	68db      	ldr	r3, [r3, #12]
 8006ac4:	4916      	ldr	r1, [pc, #88]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006ac6:	4313      	orrs	r3, r2
 8006ac8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	681b      	ldr	r3, [r3, #0]
 8006ace:	f003 0308 	and.w	r3, r3, #8
 8006ad2:	2b00      	cmp	r3, #0
 8006ad4:	d009      	beq.n	8006aea <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006ad6:	4b12      	ldr	r3, [pc, #72]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006ad8:	689b      	ldr	r3, [r3, #8]
 8006ada:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	691b      	ldr	r3, [r3, #16]
 8006ae2:	00db      	lsls	r3, r3, #3
 8006ae4:	490e      	ldr	r1, [pc, #56]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006ae6:	4313      	orrs	r3, r2
 8006ae8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006aea:	f000 f821 	bl	8006b30 <HAL_RCC_GetSysClockFreq>
 8006aee:	4602      	mov	r2, r0
 8006af0:	4b0b      	ldr	r3, [pc, #44]	@ (8006b20 <HAL_RCC_ClockConfig+0x1bc>)
 8006af2:	689b      	ldr	r3, [r3, #8]
 8006af4:	091b      	lsrs	r3, r3, #4
 8006af6:	f003 030f 	and.w	r3, r3, #15
 8006afa:	490a      	ldr	r1, [pc, #40]	@ (8006b24 <HAL_RCC_ClockConfig+0x1c0>)
 8006afc:	5ccb      	ldrb	r3, [r1, r3]
 8006afe:	fa22 f303 	lsr.w	r3, r2, r3
 8006b02:	4a09      	ldr	r2, [pc, #36]	@ (8006b28 <HAL_RCC_ClockConfig+0x1c4>)
 8006b04:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 8006b06:	4b09      	ldr	r3, [pc, #36]	@ (8006b2c <HAL_RCC_ClockConfig+0x1c8>)
 8006b08:	681b      	ldr	r3, [r3, #0]
 8006b0a:	4618      	mov	r0, r3
 8006b0c:	f7fc f82e 	bl	8002b6c <HAL_InitTick>

  return HAL_OK;
 8006b10:	2300      	movs	r3, #0
}
 8006b12:	4618      	mov	r0, r3
 8006b14:	3710      	adds	r7, #16
 8006b16:	46bd      	mov	sp, r7
 8006b18:	bd80      	pop	{r7, pc}
 8006b1a:	bf00      	nop
 8006b1c:	40023c00 	.word	0x40023c00
 8006b20:	40023800 	.word	0x40023800
 8006b24:	0803ae64 	.word	0x0803ae64
 8006b28:	20000a18 	.word	0x20000a18
 8006b2c:	20000a1c 	.word	0x20000a1c

08006b30 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006b30:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006b34:	b094      	sub	sp, #80	@ 0x50
 8006b36:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8006b38:	2300      	movs	r3, #0
 8006b3a:	647b      	str	r3, [r7, #68]	@ 0x44
  uint32_t pllvco = 0U;
 8006b3c:	2300      	movs	r3, #0
 8006b3e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  uint32_t pllp = 0U;
 8006b40:	2300      	movs	r3, #0
 8006b42:	643b      	str	r3, [r7, #64]	@ 0x40
  uint32_t sysclockfreq = 0U;
 8006b44:	2300      	movs	r3, #0
 8006b46:	64bb      	str	r3, [r7, #72]	@ 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006b48:	4b79      	ldr	r3, [pc, #484]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006b4a:	689b      	ldr	r3, [r3, #8]
 8006b4c:	f003 030c 	and.w	r3, r3, #12
 8006b50:	2b08      	cmp	r3, #8
 8006b52:	d00d      	beq.n	8006b70 <HAL_RCC_GetSysClockFreq+0x40>
 8006b54:	2b08      	cmp	r3, #8
 8006b56:	f200 80e1 	bhi.w	8006d1c <HAL_RCC_GetSysClockFreq+0x1ec>
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d002      	beq.n	8006b64 <HAL_RCC_GetSysClockFreq+0x34>
 8006b5e:	2b04      	cmp	r3, #4
 8006b60:	d003      	beq.n	8006b6a <HAL_RCC_GetSysClockFreq+0x3a>
 8006b62:	e0db      	b.n	8006d1c <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006b64:	4b73      	ldr	r3, [pc, #460]	@ (8006d34 <HAL_RCC_GetSysClockFreq+0x204>)
 8006b66:	64bb      	str	r3, [r7, #72]	@ 0x48
      break;
 8006b68:	e0db      	b.n	8006d22 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006b6a:	4b73      	ldr	r3, [pc, #460]	@ (8006d38 <HAL_RCC_GetSysClockFreq+0x208>)
 8006b6c:	64bb      	str	r3, [r7, #72]	@ 0x48
      break;
 8006b6e:	e0d8      	b.n	8006d22 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006b70:	4b6f      	ldr	r3, [pc, #444]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006b72:	685b      	ldr	r3, [r3, #4]
 8006b74:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006b78:	647b      	str	r3, [r7, #68]	@ 0x44
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006b7a:	4b6d      	ldr	r3, [pc, #436]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006b7c:	685b      	ldr	r3, [r3, #4]
 8006b7e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006b82:	2b00      	cmp	r3, #0
 8006b84:	d063      	beq.n	8006c4e <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006b86:	4b6a      	ldr	r3, [pc, #424]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006b88:	685b      	ldr	r3, [r3, #4]
 8006b8a:	099b      	lsrs	r3, r3, #6
 8006b8c:	2200      	movs	r2, #0
 8006b8e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006b90:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8006b92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006b94:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006b98:	633b      	str	r3, [r7, #48]	@ 0x30
 8006b9a:	2300      	movs	r3, #0
 8006b9c:	637b      	str	r3, [r7, #52]	@ 0x34
 8006b9e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8006ba2:	4622      	mov	r2, r4
 8006ba4:	462b      	mov	r3, r5
 8006ba6:	f04f 0000 	mov.w	r0, #0
 8006baa:	f04f 0100 	mov.w	r1, #0
 8006bae:	0159      	lsls	r1, r3, #5
 8006bb0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006bb4:	0150      	lsls	r0, r2, #5
 8006bb6:	4602      	mov	r2, r0
 8006bb8:	460b      	mov	r3, r1
 8006bba:	4621      	mov	r1, r4
 8006bbc:	1a51      	subs	r1, r2, r1
 8006bbe:	6139      	str	r1, [r7, #16]
 8006bc0:	4629      	mov	r1, r5
 8006bc2:	eb63 0301 	sbc.w	r3, r3, r1
 8006bc6:	617b      	str	r3, [r7, #20]
 8006bc8:	f04f 0200 	mov.w	r2, #0
 8006bcc:	f04f 0300 	mov.w	r3, #0
 8006bd0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006bd4:	4659      	mov	r1, fp
 8006bd6:	018b      	lsls	r3, r1, #6
 8006bd8:	4651      	mov	r1, sl
 8006bda:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006bde:	4651      	mov	r1, sl
 8006be0:	018a      	lsls	r2, r1, #6
 8006be2:	4651      	mov	r1, sl
 8006be4:	ebb2 0801 	subs.w	r8, r2, r1
 8006be8:	4659      	mov	r1, fp
 8006bea:	eb63 0901 	sbc.w	r9, r3, r1
 8006bee:	f04f 0200 	mov.w	r2, #0
 8006bf2:	f04f 0300 	mov.w	r3, #0
 8006bf6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006bfa:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006bfe:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006c02:	4690      	mov	r8, r2
 8006c04:	4699      	mov	r9, r3
 8006c06:	4623      	mov	r3, r4
 8006c08:	eb18 0303 	adds.w	r3, r8, r3
 8006c0c:	60bb      	str	r3, [r7, #8]
 8006c0e:	462b      	mov	r3, r5
 8006c10:	eb49 0303 	adc.w	r3, r9, r3
 8006c14:	60fb      	str	r3, [r7, #12]
 8006c16:	f04f 0200 	mov.w	r2, #0
 8006c1a:	f04f 0300 	mov.w	r3, #0
 8006c1e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8006c22:	4629      	mov	r1, r5
 8006c24:	024b      	lsls	r3, r1, #9
 8006c26:	4621      	mov	r1, r4
 8006c28:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8006c2c:	4621      	mov	r1, r4
 8006c2e:	024a      	lsls	r2, r1, #9
 8006c30:	4610      	mov	r0, r2
 8006c32:	4619      	mov	r1, r3
 8006c34:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006c36:	2200      	movs	r2, #0
 8006c38:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006c3a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006c3c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006c40:	f7f9 fffe 	bl	8000c40 <__aeabi_uldivmod>
 8006c44:	4602      	mov	r2, r0
 8006c46:	460b      	mov	r3, r1
 8006c48:	4613      	mov	r3, r2
 8006c4a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006c4c:	e058      	b.n	8006d00 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006c4e:	4b38      	ldr	r3, [pc, #224]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006c50:	685b      	ldr	r3, [r3, #4]
 8006c52:	099b      	lsrs	r3, r3, #6
 8006c54:	2200      	movs	r2, #0
 8006c56:	4618      	mov	r0, r3
 8006c58:	4611      	mov	r1, r2
 8006c5a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8006c5e:	623b      	str	r3, [r7, #32]
 8006c60:	2300      	movs	r3, #0
 8006c62:	627b      	str	r3, [r7, #36]	@ 0x24
 8006c64:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8006c68:	4642      	mov	r2, r8
 8006c6a:	464b      	mov	r3, r9
 8006c6c:	f04f 0000 	mov.w	r0, #0
 8006c70:	f04f 0100 	mov.w	r1, #0
 8006c74:	0159      	lsls	r1, r3, #5
 8006c76:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006c7a:	0150      	lsls	r0, r2, #5
 8006c7c:	4602      	mov	r2, r0
 8006c7e:	460b      	mov	r3, r1
 8006c80:	4641      	mov	r1, r8
 8006c82:	ebb2 0a01 	subs.w	sl, r2, r1
 8006c86:	4649      	mov	r1, r9
 8006c88:	eb63 0b01 	sbc.w	fp, r3, r1
 8006c8c:	f04f 0200 	mov.w	r2, #0
 8006c90:	f04f 0300 	mov.w	r3, #0
 8006c94:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8006c98:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8006c9c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8006ca0:	ebb2 040a 	subs.w	r4, r2, sl
 8006ca4:	eb63 050b 	sbc.w	r5, r3, fp
 8006ca8:	f04f 0200 	mov.w	r2, #0
 8006cac:	f04f 0300 	mov.w	r3, #0
 8006cb0:	00eb      	lsls	r3, r5, #3
 8006cb2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006cb6:	00e2      	lsls	r2, r4, #3
 8006cb8:	4614      	mov	r4, r2
 8006cba:	461d      	mov	r5, r3
 8006cbc:	4643      	mov	r3, r8
 8006cbe:	18e3      	adds	r3, r4, r3
 8006cc0:	603b      	str	r3, [r7, #0]
 8006cc2:	464b      	mov	r3, r9
 8006cc4:	eb45 0303 	adc.w	r3, r5, r3
 8006cc8:	607b      	str	r3, [r7, #4]
 8006cca:	f04f 0200 	mov.w	r2, #0
 8006cce:	f04f 0300 	mov.w	r3, #0
 8006cd2:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006cd6:	4629      	mov	r1, r5
 8006cd8:	028b      	lsls	r3, r1, #10
 8006cda:	4621      	mov	r1, r4
 8006cdc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006ce0:	4621      	mov	r1, r4
 8006ce2:	028a      	lsls	r2, r1, #10
 8006ce4:	4610      	mov	r0, r2
 8006ce6:	4619      	mov	r1, r3
 8006ce8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006cea:	2200      	movs	r2, #0
 8006cec:	61bb      	str	r3, [r7, #24]
 8006cee:	61fa      	str	r2, [r7, #28]
 8006cf0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006cf4:	f7f9 ffa4 	bl	8000c40 <__aeabi_uldivmod>
 8006cf8:	4602      	mov	r2, r0
 8006cfa:	460b      	mov	r3, r1
 8006cfc:	4613      	mov	r3, r2
 8006cfe:	64fb      	str	r3, [r7, #76]	@ 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8006d00:	4b0b      	ldr	r3, [pc, #44]	@ (8006d30 <HAL_RCC_GetSysClockFreq+0x200>)
 8006d02:	685b      	ldr	r3, [r3, #4]
 8006d04:	0c1b      	lsrs	r3, r3, #16
 8006d06:	f003 0303 	and.w	r3, r3, #3
 8006d0a:	3301      	adds	r3, #1
 8006d0c:	005b      	lsls	r3, r3, #1
 8006d0e:	643b      	str	r3, [r7, #64]	@ 0x40

      sysclockfreq = pllvco / pllp;
 8006d10:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006d12:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006d14:	fbb2 f3f3 	udiv	r3, r2, r3
 8006d18:	64bb      	str	r3, [r7, #72]	@ 0x48
      break;
 8006d1a:	e002      	b.n	8006d22 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8006d1c:	4b05      	ldr	r3, [pc, #20]	@ (8006d34 <HAL_RCC_GetSysClockFreq+0x204>)
 8006d1e:	64bb      	str	r3, [r7, #72]	@ 0x48
      break;
 8006d20:	bf00      	nop
    }
  }
  return sysclockfreq;
 8006d22:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
}
 8006d24:	4618      	mov	r0, r3
 8006d26:	3750      	adds	r7, #80	@ 0x50
 8006d28:	46bd      	mov	sp, r7
 8006d2a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006d2e:	bf00      	nop
 8006d30:	40023800 	.word	0x40023800
 8006d34:	00f42400 	.word	0x00f42400
 8006d38:	007a1200 	.word	0x007a1200

08006d3c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006d3c:	b480      	push	{r7}
 8006d3e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8006d40:	4b03      	ldr	r3, [pc, #12]	@ (8006d50 <HAL_RCC_GetHCLKFreq+0x14>)
 8006d42:	681b      	ldr	r3, [r3, #0]
}
 8006d44:	4618      	mov	r0, r3
 8006d46:	46bd      	mov	sp, r7
 8006d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d4c:	4770      	bx	lr
 8006d4e:	bf00      	nop
 8006d50:	20000a18 	.word	0x20000a18

08006d54 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006d54:	b580      	push	{r7, lr}
 8006d56:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006d58:	f7ff fff0 	bl	8006d3c <HAL_RCC_GetHCLKFreq>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	4b05      	ldr	r3, [pc, #20]	@ (8006d74 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006d60:	689b      	ldr	r3, [r3, #8]
 8006d62:	0a9b      	lsrs	r3, r3, #10
 8006d64:	f003 0307 	and.w	r3, r3, #7
 8006d68:	4903      	ldr	r1, [pc, #12]	@ (8006d78 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006d6a:	5ccb      	ldrb	r3, [r1, r3]
 8006d6c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006d70:	4618      	mov	r0, r3
 8006d72:	bd80      	pop	{r7, pc}
 8006d74:	40023800 	.word	0x40023800
 8006d78:	0803ae74 	.word	0x0803ae74

08006d7c <HAL_RCCEx_PeriphCLKConfig>:
  *        domain (RTC and RCC_BDCR register expect BKPSRAM) will be reset
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006d7c:	b580      	push	{r7, lr}
 8006d7e:	b086      	sub	sp, #24
 8006d80:	af00      	add	r7, sp, #0
 8006d82:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8006d84:	2300      	movs	r3, #0
 8006d86:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8006d88:	2300      	movs	r3, #0
 8006d8a:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*---------------------------- I2S configuration ---------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f003 0301 	and.w	r3, r3, #1
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d105      	bne.n	8006da4 <HAL_RCCEx_PeriphCLKConfig+0x28>
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	681b      	ldr	r3, [r3, #0]
 8006d9c:	f003 0304 	and.w	r3, r3, #4
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d035      	beq.n	8006e10 <HAL_RCCEx_PeriphCLKConfig+0x94>
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));
#if defined(STM32F411xE)
    assert_param(IS_RCC_PLLI2SM_VALUE(PeriphClkInit->PLLI2S.PLLI2SM));
#endif /* STM32F411xE */
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8006da4:	4b62      	ldr	r3, [pc, #392]	@ (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8006da6:	2200      	movs	r2, #0
 8006da8:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006daa:	f7fb ff23 	bl	8002bf4 <HAL_GetTick>
 8006dae:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006db0:	e008      	b.n	8006dc4 <HAL_RCCEx_PeriphCLKConfig+0x48>
    {
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006db2:	f7fb ff1f 	bl	8002bf4 <HAL_GetTick>
 8006db6:	4602      	mov	r2, r0
 8006db8:	697b      	ldr	r3, [r7, #20]
 8006dba:	1ad3      	subs	r3, r2, r3
 8006dbc:	2b02      	cmp	r3, #2
 8006dbe:	d901      	bls.n	8006dc4 <HAL_RCCEx_PeriphCLKConfig+0x48>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006dc0:	2303      	movs	r3, #3
 8006dc2:	e0b0      	b.n	8006f26 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006dc4:	4b5b      	ldr	r3, [pc, #364]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006dcc:	2b00      	cmp	r3, #0
 8006dce:	d1f0      	bne.n	8006db2 <HAL_RCCEx_PeriphCLKConfig+0x36>
                                   PeriphClkInit->PLLI2S.PLLI2SR);
#else
    /* Configure the PLLI2S division factors */
    /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
    /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
    __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	685b      	ldr	r3, [r3, #4]
 8006dd4:	019a      	lsls	r2, r3, #6
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	689b      	ldr	r3, [r3, #8]
 8006dda:	071b      	lsls	r3, r3, #28
 8006ddc:	4955      	ldr	r1, [pc, #340]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006dde:	4313      	orrs	r3, r2
 8006de0:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
#endif /* STM32F411xE */

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8006de4:	4b52      	ldr	r3, [pc, #328]	@ (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8006de6:	2201      	movs	r2, #1
 8006de8:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006dea:	f7fb ff03 	bl	8002bf4 <HAL_GetTick>
 8006dee:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006df0:	e008      	b.n	8006e04 <HAL_RCCEx_PeriphCLKConfig+0x88>
    {
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006df2:	f7fb feff 	bl	8002bf4 <HAL_GetTick>
 8006df6:	4602      	mov	r2, r0
 8006df8:	697b      	ldr	r3, [r7, #20]
 8006dfa:	1ad3      	subs	r3, r2, r3
 8006dfc:	2b02      	cmp	r3, #2
 8006dfe:	d901      	bls.n	8006e04 <HAL_RCCEx_PeriphCLKConfig+0x88>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006e00:	2303      	movs	r3, #3
 8006e02:	e090      	b.n	8006f26 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e04:	4b4b      	ldr	r3, [pc, #300]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006e0c:	2b00      	cmp	r3, #0
 8006e0e:	d0f0      	beq.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x76>
      }
    }
  }

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	f003 0302 	and.w	r3, r3, #2
 8006e18:	2b00      	cmp	r3, #0
 8006e1a:	f000 8083 	beq.w	8006f24 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006e1e:	2300      	movs	r3, #0
 8006e20:	60fb      	str	r3, [r7, #12]
 8006e22:	4b44      	ldr	r3, [pc, #272]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006e26:	4a43      	ldr	r2, [pc, #268]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e28:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006e2c:	6413      	str	r3, [r2, #64]	@ 0x40
 8006e2e:	4b41      	ldr	r3, [pc, #260]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006e32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006e36:	60fb      	str	r3, [r7, #12]
 8006e38:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006e3a:	4b3f      	ldr	r3, [pc, #252]	@ (8006f38 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006e3c:	681b      	ldr	r3, [r3, #0]
 8006e3e:	4a3e      	ldr	r2, [pc, #248]	@ (8006f38 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006e40:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006e44:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006e46:	f7fb fed5 	bl	8002bf4 <HAL_GetTick>
 8006e4a:	6178      	str	r0, [r7, #20]

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8006e4c:	e008      	b.n	8006e60 <HAL_RCCEx_PeriphCLKConfig+0xe4>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006e4e:	f7fb fed1 	bl	8002bf4 <HAL_GetTick>
 8006e52:	4602      	mov	r2, r0
 8006e54:	697b      	ldr	r3, [r7, #20]
 8006e56:	1ad3      	subs	r3, r2, r3
 8006e58:	2b02      	cmp	r3, #2
 8006e5a:	d901      	bls.n	8006e60 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      {
        return HAL_TIMEOUT;
 8006e5c:	2303      	movs	r3, #3
 8006e5e:	e062      	b.n	8006f26 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8006e60:	4b35      	ldr	r3, [pc, #212]	@ (8006f38 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006e68:	2b00      	cmp	r3, #0
 8006e6a:	d0f0      	beq.n	8006e4e <HAL_RCCEx_PeriphCLKConfig+0xd2>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006e6c:	4b31      	ldr	r3, [pc, #196]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e6e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006e70:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e74:	613b      	str	r3, [r7, #16]
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006e76:	693b      	ldr	r3, [r7, #16]
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	d02f      	beq.n	8006edc <HAL_RCCEx_PeriphCLKConfig+0x160>
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	68db      	ldr	r3, [r3, #12]
 8006e80:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e84:	693a      	ldr	r2, [r7, #16]
 8006e86:	429a      	cmp	r2, r3
 8006e88:	d028      	beq.n	8006edc <HAL_RCCEx_PeriphCLKConfig+0x160>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006e8a:	4b2a      	ldr	r3, [pc, #168]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006e8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006e8e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006e92:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8006e94:	4b29      	ldr	r3, [pc, #164]	@ (8006f3c <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8006e96:	2201      	movs	r2, #1
 8006e98:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006e9a:	4b28      	ldr	r3, [pc, #160]	@ (8006f3c <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8006e9c:	2200      	movs	r2, #0
 8006e9e:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8006ea0:	4a24      	ldr	r2, [pc, #144]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ea2:	693b      	ldr	r3, [r7, #16]
 8006ea4:	6713      	str	r3, [r2, #112]	@ 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006ea6:	4b23      	ldr	r3, [pc, #140]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ea8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006eaa:	f003 0301 	and.w	r3, r3, #1
 8006eae:	2b01      	cmp	r3, #1
 8006eb0:	d114      	bne.n	8006edc <HAL_RCCEx_PeriphCLKConfig+0x160>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8006eb2:	f7fb fe9f 	bl	8002bf4 <HAL_GetTick>
 8006eb6:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006eb8:	e00a      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x154>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006eba:	f7fb fe9b 	bl	8002bf4 <HAL_GetTick>
 8006ebe:	4602      	mov	r2, r0
 8006ec0:	697b      	ldr	r3, [r7, #20]
 8006ec2:	1ad3      	subs	r3, r2, r3
 8006ec4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006ec8:	4293      	cmp	r3, r2
 8006eca:	d901      	bls.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x154>
          {
            return HAL_TIMEOUT;
 8006ecc:	2303      	movs	r3, #3
 8006ece:	e02a      	b.n	8006f26 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006ed0:	4b18      	ldr	r3, [pc, #96]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ed2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006ed4:	f003 0302 	and.w	r3, r3, #2
 8006ed8:	2b00      	cmp	r3, #0
 8006eda:	d0ee      	beq.n	8006eba <HAL_RCCEx_PeriphCLKConfig+0x13e>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	68db      	ldr	r3, [r3, #12]
 8006ee0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006ee4:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8006ee8:	d10d      	bne.n	8006f06 <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8006eea:	4b12      	ldr	r3, [pc, #72]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006eec:	689b      	ldr	r3, [r3, #8]
 8006eee:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	68db      	ldr	r3, [r3, #12]
 8006ef6:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006efa:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006efe:	490d      	ldr	r1, [pc, #52]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006f00:	4313      	orrs	r3, r2
 8006f02:	608b      	str	r3, [r1, #8]
 8006f04:	e005      	b.n	8006f12 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8006f06:	4b0b      	ldr	r3, [pc, #44]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006f08:	689b      	ldr	r3, [r3, #8]
 8006f0a:	4a0a      	ldr	r2, [pc, #40]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006f0c:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006f10:	6093      	str	r3, [r2, #8]
 8006f12:	4b08      	ldr	r3, [pc, #32]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006f14:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	68db      	ldr	r3, [r3, #12]
 8006f1a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006f1e:	4905      	ldr	r1, [pc, #20]	@ (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006f20:	4313      	orrs	r3, r2
 8006f22:	670b      	str	r3, [r1, #112]	@ 0x70
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
#endif /* STM32F401xC || STM32F401xE || STM32F411xE */
  return HAL_OK;
 8006f24:	2300      	movs	r3, #0
}
 8006f26:	4618      	mov	r0, r3
 8006f28:	3718      	adds	r7, #24
 8006f2a:	46bd      	mov	sp, r7
 8006f2c:	bd80      	pop	{r7, pc}
 8006f2e:	bf00      	nop
 8006f30:	42470068 	.word	0x42470068
 8006f34:	40023800 	.word	0x40023800
 8006f38:	40007000 	.word	0x40007000
 8006f3c:	42470e40 	.word	0x42470e40

08006f40 <HAL_RCCEx_GetPeriphCLKFreq>:
  *         This parameter can be one of the following values:
  *            @arg RCC_PERIPHCLK_I2S: I2S peripheral clock
  * @retval Frequency in KHz
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
{
 8006f40:	b480      	push	{r7}
 8006f42:	b087      	sub	sp, #28
 8006f44:	af00      	add	r7, sp, #0
 8006f46:	6078      	str	r0, [r7, #4]
  /* This variable used to store the I2S clock frequency (value in Hz) */
  uint32_t frequency = 0U;
 8006f48:	2300      	movs	r3, #0
 8006f4a:	617b      	str	r3, [r7, #20]
  /* This variable used to store the VCO Input (value in Hz) */
  uint32_t vcoinput = 0U;
 8006f4c:	2300      	movs	r3, #0
 8006f4e:	613b      	str	r3, [r7, #16]
  uint32_t srcclk = 0U;
 8006f50:	2300      	movs	r3, #0
 8006f52:	60fb      	str	r3, [r7, #12]
  /* This variable used to store the VCO Output (value in Hz) */
  uint32_t vcooutput = 0U;
 8006f54:	2300      	movs	r3, #0
 8006f56:	60bb      	str	r3, [r7, #8]
  switch (PeriphClk)
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	2b01      	cmp	r3, #1
 8006f5c:	d13f      	bne.n	8006fde <HAL_RCCEx_GetPeriphCLKFreq+0x9e>
  {
    case RCC_PERIPHCLK_I2S:
    {
      /* Get the current I2S source */
      srcclk = __HAL_RCC_GET_I2S_SOURCE();
 8006f5e:	4b24      	ldr	r3, [pc, #144]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006f60:	689b      	ldr	r3, [r3, #8]
 8006f62:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006f66:	60fb      	str	r3, [r7, #12]
 8006f68:	68fb      	ldr	r3, [r7, #12]
 8006f6a:	2b00      	cmp	r3, #0
 8006f6c:	d006      	beq.n	8006f7c <HAL_RCCEx_GetPeriphCLKFreq+0x3c>
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8006f74:	d12f      	bne.n	8006fd6 <HAL_RCCEx_GetPeriphCLKFreq+0x96>
      {
        /* Check if I2S clock selection is External clock mapped on the I2S_CKIN pin used as I2S clock */
        case RCC_I2SCLKSOURCE_EXT:
        {
          /* Set the I2S clock to the external clock  value */
          frequency = EXTERNAL_CLOCK_VALUE;
 8006f76:	4b1f      	ldr	r3, [pc, #124]	@ (8006ff4 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>)
 8006f78:	617b      	str	r3, [r7, #20]
          break;
 8006f7a:	e02f      	b.n	8006fdc <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
            vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SM));
          }
#else
          /* Configure the PLLI2S division factor */
          /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
          if ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8006f7c:	4b1c      	ldr	r3, [pc, #112]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006f7e:	685b      	ldr	r3, [r3, #4]
 8006f80:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f84:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006f88:	d108      	bne.n	8006f9c <HAL_RCCEx_GetPeriphCLKFreq+0x5c>
          {
            /* Get the I2S source clock value */
            vcoinput = (uint32_t)(HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8006f8a:	4b19      	ldr	r3, [pc, #100]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006f8c:	685b      	ldr	r3, [r3, #4]
 8006f8e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006f92:	4a19      	ldr	r2, [pc, #100]	@ (8006ff8 <HAL_RCCEx_GetPeriphCLKFreq+0xb8>)
 8006f94:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f98:	613b      	str	r3, [r7, #16]
 8006f9a:	e007      	b.n	8006fac <HAL_RCCEx_GetPeriphCLKFreq+0x6c>
          }
          else
          {
            /* Get the I2S source clock value */
            vcoinput = (uint32_t)(HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8006f9c:	4b14      	ldr	r3, [pc, #80]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006f9e:	685b      	ldr	r3, [r3, #4]
 8006fa0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006fa4:	4a15      	ldr	r2, [pc, #84]	@ (8006ffc <HAL_RCCEx_GetPeriphCLKFreq+0xbc>)
 8006fa6:	fbb2 f3f3 	udiv	r3, r2, r3
 8006faa:	613b      	str	r3, [r7, #16]
          }
#endif /* STM32F411xE */
          /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
          vcooutput = (uint32_t)(vcoinput * (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6U) & (RCC_PLLI2SCFGR_PLLI2SN >> 6U)));
 8006fac:	4b10      	ldr	r3, [pc, #64]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006fae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006fb2:	099b      	lsrs	r3, r3, #6
 8006fb4:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8006fb8:	693b      	ldr	r3, [r7, #16]
 8006fba:	fb02 f303 	mul.w	r3, r2, r3
 8006fbe:	60bb      	str	r3, [r7, #8]
          /* I2S_CLK = PLLI2S_VCO Output/PLLI2SR */
          frequency = (uint32_t)(vcooutput / (((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28U) & (RCC_PLLI2SCFGR_PLLI2SR >> 28U)));
 8006fc0:	4b0b      	ldr	r3, [pc, #44]	@ (8006ff0 <HAL_RCCEx_GetPeriphCLKFreq+0xb0>)
 8006fc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006fc6:	0f1b      	lsrs	r3, r3, #28
 8006fc8:	f003 0307 	and.w	r3, r3, #7
 8006fcc:	68ba      	ldr	r2, [r7, #8]
 8006fce:	fbb2 f3f3 	udiv	r3, r2, r3
 8006fd2:	617b      	str	r3, [r7, #20]
          break;
 8006fd4:	e002      	b.n	8006fdc <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
        }
        /* Clock not enabled for I2S*/
        default:
        {
          frequency = 0U;
 8006fd6:	2300      	movs	r3, #0
 8006fd8:	617b      	str	r3, [r7, #20]
          break;
 8006fda:	bf00      	nop
        }
      }
      break;
 8006fdc:	e000      	b.n	8006fe0 <HAL_RCCEx_GetPeriphCLKFreq+0xa0>
    }
    default:
    {
      break;
 8006fde:	bf00      	nop
    }
  }
  return frequency;
 8006fe0:	697b      	ldr	r3, [r7, #20]
}
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	371c      	adds	r7, #28
 8006fe6:	46bd      	mov	sp, r7
 8006fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fec:	4770      	bx	lr
 8006fee:	bf00      	nop
 8006ff0:	40023800 	.word	0x40023800
 8006ff4:	00bb8000 	.word	0x00bb8000
 8006ff8:	007a1200 	.word	0x007a1200
 8006ffc:	00f42400 	.word	0x00f42400

08007000 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007000:	b580      	push	{r7, lr}
 8007002:	b082      	sub	sp, #8
 8007004:	af00      	add	r7, sp, #0
 8007006:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	2b00      	cmp	r3, #0
 800700c:	d101      	bne.n	8007012 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800700e:	2301      	movs	r3, #1
 8007010:	e041      	b.n	8007096 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007018:	b2db      	uxtb	r3, r3
 800701a:	2b00      	cmp	r3, #0
 800701c:	d106      	bne.n	800702c <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	2200      	movs	r2, #0
 8007022:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8007026:	6878      	ldr	r0, [r7, #4]
 8007028:	f7fb fd34 	bl	8002a94 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800702c:	687b      	ldr	r3, [r7, #4]
 800702e:	2202      	movs	r2, #2
 8007030:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	681a      	ldr	r2, [r3, #0]
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	3304      	adds	r3, #4
 800703c:	4619      	mov	r1, r3
 800703e:	4610      	mov	r0, r2
 8007040:	f000 f95e 	bl	8007300 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	2201      	movs	r2, #1
 8007048:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	2201      	movs	r2, #1
 8007050:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	2201      	movs	r2, #1
 8007058:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	2201      	movs	r2, #1
 8007060:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	2201      	movs	r2, #1
 8007068:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	2201      	movs	r2, #1
 8007070:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	2201      	movs	r2, #1
 8007078:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	2201      	movs	r2, #1
 8007080:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	2201      	movs	r2, #1
 8007088:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	2201      	movs	r2, #1
 8007090:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007094:	2300      	movs	r3, #0
}
 8007096:	4618      	mov	r0, r3
 8007098:	3708      	adds	r7, #8
 800709a:	46bd      	mov	sp, r7
 800709c:	bd80      	pop	{r7, pc}
	...

080070a0 <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 80070a0:	b480      	push	{r7}
 80070a2:	b085      	sub	sp, #20
 80070a4:	af00      	add	r7, sp, #0
 80070a6:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80070ae:	b2db      	uxtb	r3, r3
 80070b0:	2b01      	cmp	r3, #1
 80070b2:	d001      	beq.n	80070b8 <HAL_TIM_Base_Start+0x18>
  {
    return HAL_ERROR;
 80070b4:	2301      	movs	r3, #1
 80070b6:	e046      	b.n	8007146 <HAL_TIM_Base_Start+0xa6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	2202      	movs	r2, #2
 80070bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	4a23      	ldr	r2, [pc, #140]	@ (8007154 <HAL_TIM_Base_Start+0xb4>)
 80070c6:	4293      	cmp	r3, r2
 80070c8:	d022      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070d2:	d01d      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	4a1f      	ldr	r2, [pc, #124]	@ (8007158 <HAL_TIM_Base_Start+0xb8>)
 80070da:	4293      	cmp	r3, r2
 80070dc:	d018      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	4a1e      	ldr	r2, [pc, #120]	@ (800715c <HAL_TIM_Base_Start+0xbc>)
 80070e4:	4293      	cmp	r3, r2
 80070e6:	d013      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	4a1c      	ldr	r2, [pc, #112]	@ (8007160 <HAL_TIM_Base_Start+0xc0>)
 80070ee:	4293      	cmp	r3, r2
 80070f0:	d00e      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070f2:	687b      	ldr	r3, [r7, #4]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	4a1b      	ldr	r2, [pc, #108]	@ (8007164 <HAL_TIM_Base_Start+0xc4>)
 80070f8:	4293      	cmp	r3, r2
 80070fa:	d009      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	4a19      	ldr	r2, [pc, #100]	@ (8007168 <HAL_TIM_Base_Start+0xc8>)
 8007102:	4293      	cmp	r3, r2
 8007104:	d004      	beq.n	8007110 <HAL_TIM_Base_Start+0x70>
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	4a18      	ldr	r2, [pc, #96]	@ (800716c <HAL_TIM_Base_Start+0xcc>)
 800710c:	4293      	cmp	r3, r2
 800710e:	d111      	bne.n	8007134 <HAL_TIM_Base_Start+0x94>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	689b      	ldr	r3, [r3, #8]
 8007116:	f003 0307 	and.w	r3, r3, #7
 800711a:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800711c:	68fb      	ldr	r3, [r7, #12]
 800711e:	2b06      	cmp	r3, #6
 8007120:	d010      	beq.n	8007144 <HAL_TIM_Base_Start+0xa4>
    {
      __HAL_TIM_ENABLE(htim);
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	681a      	ldr	r2, [r3, #0]
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	f042 0201 	orr.w	r2, r2, #1
 8007130:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007132:	e007      	b.n	8007144 <HAL_TIM_Base_Start+0xa4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	681b      	ldr	r3, [r3, #0]
 8007138:	681a      	ldr	r2, [r3, #0]
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	f042 0201 	orr.w	r2, r2, #1
 8007142:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007144:	2300      	movs	r3, #0
}
 8007146:	4618      	mov	r0, r3
 8007148:	3714      	adds	r7, #20
 800714a:	46bd      	mov	sp, r7
 800714c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007150:	4770      	bx	lr
 8007152:	bf00      	nop
 8007154:	40010000 	.word	0x40010000
 8007158:	40000400 	.word	0x40000400
 800715c:	40000800 	.word	0x40000800
 8007160:	40000c00 	.word	0x40000c00
 8007164:	40010400 	.word	0x40010400
 8007168:	40014000 	.word	0x40014000
 800716c:	40001800 	.word	0x40001800

08007170 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8007170:	b580      	push	{r7, lr}
 8007172:	b084      	sub	sp, #16
 8007174:	af00      	add	r7, sp, #0
 8007176:	6078      	str	r0, [r7, #4]
 8007178:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800717a:	2300      	movs	r3, #0
 800717c:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007184:	2b01      	cmp	r3, #1
 8007186:	d101      	bne.n	800718c <HAL_TIM_ConfigClockSource+0x1c>
 8007188:	2302      	movs	r3, #2
 800718a:	e0b4      	b.n	80072f6 <HAL_TIM_ConfigClockSource+0x186>
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	2201      	movs	r2, #1
 8007190:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007194:	687b      	ldr	r3, [r7, #4]
 8007196:	2202      	movs	r2, #2
 8007198:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	689b      	ldr	r3, [r3, #8]
 80071a2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80071a4:	68bb      	ldr	r3, [r7, #8]
 80071a6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80071aa:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80071ac:	68bb      	ldr	r3, [r7, #8]
 80071ae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80071b2:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	68ba      	ldr	r2, [r7, #8]
 80071ba:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	681b      	ldr	r3, [r3, #0]
 80071c0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80071c4:	d03e      	beq.n	8007244 <HAL_TIM_ConfigClockSource+0xd4>
 80071c6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80071ca:	f200 8087 	bhi.w	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071ce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80071d2:	f000 8086 	beq.w	80072e2 <HAL_TIM_ConfigClockSource+0x172>
 80071d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80071da:	d87f      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071dc:	2b70      	cmp	r3, #112	@ 0x70
 80071de:	d01a      	beq.n	8007216 <HAL_TIM_ConfigClockSource+0xa6>
 80071e0:	2b70      	cmp	r3, #112	@ 0x70
 80071e2:	d87b      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071e4:	2b60      	cmp	r3, #96	@ 0x60
 80071e6:	d050      	beq.n	800728a <HAL_TIM_ConfigClockSource+0x11a>
 80071e8:	2b60      	cmp	r3, #96	@ 0x60
 80071ea:	d877      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071ec:	2b50      	cmp	r3, #80	@ 0x50
 80071ee:	d03c      	beq.n	800726a <HAL_TIM_ConfigClockSource+0xfa>
 80071f0:	2b50      	cmp	r3, #80	@ 0x50
 80071f2:	d873      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071f4:	2b40      	cmp	r3, #64	@ 0x40
 80071f6:	d058      	beq.n	80072aa <HAL_TIM_ConfigClockSource+0x13a>
 80071f8:	2b40      	cmp	r3, #64	@ 0x40
 80071fa:	d86f      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 80071fc:	2b30      	cmp	r3, #48	@ 0x30
 80071fe:	d064      	beq.n	80072ca <HAL_TIM_ConfigClockSource+0x15a>
 8007200:	2b30      	cmp	r3, #48	@ 0x30
 8007202:	d86b      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 8007204:	2b20      	cmp	r3, #32
 8007206:	d060      	beq.n	80072ca <HAL_TIM_ConfigClockSource+0x15a>
 8007208:	2b20      	cmp	r3, #32
 800720a:	d867      	bhi.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
 800720c:	2b00      	cmp	r3, #0
 800720e:	d05c      	beq.n	80072ca <HAL_TIM_ConfigClockSource+0x15a>
 8007210:	2b10      	cmp	r3, #16
 8007212:	d05a      	beq.n	80072ca <HAL_TIM_ConfigClockSource+0x15a>
 8007214:	e062      	b.n	80072dc <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800721a:	683b      	ldr	r3, [r7, #0]
 800721c:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800721e:	683b      	ldr	r3, [r7, #0]
 8007220:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007222:	683b      	ldr	r3, [r7, #0]
 8007224:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007226:	f000 f991 	bl	800754c <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	681b      	ldr	r3, [r3, #0]
 800722e:	689b      	ldr	r3, [r3, #8]
 8007230:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007232:	68bb      	ldr	r3, [r7, #8]
 8007234:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8007238:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	68ba      	ldr	r2, [r7, #8]
 8007240:	609a      	str	r2, [r3, #8]
      break;
 8007242:	e04f      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007248:	683b      	ldr	r3, [r7, #0]
 800724a:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800724c:	683b      	ldr	r3, [r7, #0]
 800724e:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007250:	683b      	ldr	r3, [r7, #0]
 8007252:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007254:	f000 f97a 	bl	800754c <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	689a      	ldr	r2, [r3, #8]
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007266:	609a      	str	r2, [r3, #8]
      break;
 8007268:	e03c      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800726e:	683b      	ldr	r3, [r7, #0]
 8007270:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007272:	683b      	ldr	r3, [r7, #0]
 8007274:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007276:	461a      	mov	r2, r3
 8007278:	f000 f8ee 	bl	8007458 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	2150      	movs	r1, #80	@ 0x50
 8007282:	4618      	mov	r0, r3
 8007284:	f000 f947 	bl	8007516 <TIM_ITRx_SetConfig>
      break;
 8007288:	e02c      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800728e:	683b      	ldr	r3, [r7, #0]
 8007290:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007292:	683b      	ldr	r3, [r7, #0]
 8007294:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007296:	461a      	mov	r2, r3
 8007298:	f000 f90d 	bl	80074b6 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	2160      	movs	r1, #96	@ 0x60
 80072a2:	4618      	mov	r0, r3
 80072a4:	f000 f937 	bl	8007516 <TIM_ITRx_SetConfig>
      break;
 80072a8:	e01c      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80072ae:	683b      	ldr	r3, [r7, #0]
 80072b0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80072b2:	683b      	ldr	r3, [r7, #0]
 80072b4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80072b6:	461a      	mov	r2, r3
 80072b8:	f000 f8ce 	bl	8007458 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	2140      	movs	r1, #64	@ 0x40
 80072c2:	4618      	mov	r0, r3
 80072c4:	f000 f927 	bl	8007516 <TIM_ITRx_SetConfig>
      break;
 80072c8:	e00c      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	681a      	ldr	r2, [r3, #0]
 80072ce:	683b      	ldr	r3, [r7, #0]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	4619      	mov	r1, r3
 80072d4:	4610      	mov	r0, r2
 80072d6:	f000 f91e 	bl	8007516 <TIM_ITRx_SetConfig>
      break;
 80072da:	e003      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80072dc:	2301      	movs	r3, #1
 80072de:	73fb      	strb	r3, [r7, #15]
      break;
 80072e0:	e000      	b.n	80072e4 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80072e2:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	2201      	movs	r2, #1
 80072e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	2200      	movs	r2, #0
 80072f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80072f4:	7bfb      	ldrb	r3, [r7, #15]
}
 80072f6:	4618      	mov	r0, r3
 80072f8:	3710      	adds	r7, #16
 80072fa:	46bd      	mov	sp, r7
 80072fc:	bd80      	pop	{r7, pc}
	...

08007300 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007300:	b480      	push	{r7}
 8007302:	b085      	sub	sp, #20
 8007304:	af00      	add	r7, sp, #0
 8007306:	6078      	str	r0, [r7, #4]
 8007308:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	4a46      	ldr	r2, [pc, #280]	@ (800742c <TIM_Base_SetConfig+0x12c>)
 8007314:	4293      	cmp	r3, r2
 8007316:	d013      	beq.n	8007340 <TIM_Base_SetConfig+0x40>
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800731e:	d00f      	beq.n	8007340 <TIM_Base_SetConfig+0x40>
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	4a43      	ldr	r2, [pc, #268]	@ (8007430 <TIM_Base_SetConfig+0x130>)
 8007324:	4293      	cmp	r3, r2
 8007326:	d00b      	beq.n	8007340 <TIM_Base_SetConfig+0x40>
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	4a42      	ldr	r2, [pc, #264]	@ (8007434 <TIM_Base_SetConfig+0x134>)
 800732c:	4293      	cmp	r3, r2
 800732e:	d007      	beq.n	8007340 <TIM_Base_SetConfig+0x40>
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	4a41      	ldr	r2, [pc, #260]	@ (8007438 <TIM_Base_SetConfig+0x138>)
 8007334:	4293      	cmp	r3, r2
 8007336:	d003      	beq.n	8007340 <TIM_Base_SetConfig+0x40>
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	4a40      	ldr	r2, [pc, #256]	@ (800743c <TIM_Base_SetConfig+0x13c>)
 800733c:	4293      	cmp	r3, r2
 800733e:	d108      	bne.n	8007352 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007346:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007348:	683b      	ldr	r3, [r7, #0]
 800734a:	685b      	ldr	r3, [r3, #4]
 800734c:	68fa      	ldr	r2, [r7, #12]
 800734e:	4313      	orrs	r3, r2
 8007350:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	4a35      	ldr	r2, [pc, #212]	@ (800742c <TIM_Base_SetConfig+0x12c>)
 8007356:	4293      	cmp	r3, r2
 8007358:	d02b      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007360:	d027      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	4a32      	ldr	r2, [pc, #200]	@ (8007430 <TIM_Base_SetConfig+0x130>)
 8007366:	4293      	cmp	r3, r2
 8007368:	d023      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 800736a:	687b      	ldr	r3, [r7, #4]
 800736c:	4a31      	ldr	r2, [pc, #196]	@ (8007434 <TIM_Base_SetConfig+0x134>)
 800736e:	4293      	cmp	r3, r2
 8007370:	d01f      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	4a30      	ldr	r2, [pc, #192]	@ (8007438 <TIM_Base_SetConfig+0x138>)
 8007376:	4293      	cmp	r3, r2
 8007378:	d01b      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	4a2f      	ldr	r2, [pc, #188]	@ (800743c <TIM_Base_SetConfig+0x13c>)
 800737e:	4293      	cmp	r3, r2
 8007380:	d017      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	4a2e      	ldr	r2, [pc, #184]	@ (8007440 <TIM_Base_SetConfig+0x140>)
 8007386:	4293      	cmp	r3, r2
 8007388:	d013      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 800738a:	687b      	ldr	r3, [r7, #4]
 800738c:	4a2d      	ldr	r2, [pc, #180]	@ (8007444 <TIM_Base_SetConfig+0x144>)
 800738e:	4293      	cmp	r3, r2
 8007390:	d00f      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	4a2c      	ldr	r2, [pc, #176]	@ (8007448 <TIM_Base_SetConfig+0x148>)
 8007396:	4293      	cmp	r3, r2
 8007398:	d00b      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	4a2b      	ldr	r2, [pc, #172]	@ (800744c <TIM_Base_SetConfig+0x14c>)
 800739e:	4293      	cmp	r3, r2
 80073a0:	d007      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	4a2a      	ldr	r2, [pc, #168]	@ (8007450 <TIM_Base_SetConfig+0x150>)
 80073a6:	4293      	cmp	r3, r2
 80073a8:	d003      	beq.n	80073b2 <TIM_Base_SetConfig+0xb2>
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	4a29      	ldr	r2, [pc, #164]	@ (8007454 <TIM_Base_SetConfig+0x154>)
 80073ae:	4293      	cmp	r3, r2
 80073b0:	d108      	bne.n	80073c4 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80073b8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80073ba:	683b      	ldr	r3, [r7, #0]
 80073bc:	68db      	ldr	r3, [r3, #12]
 80073be:	68fa      	ldr	r2, [r7, #12]
 80073c0:	4313      	orrs	r3, r2
 80073c2:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80073c4:	68fb      	ldr	r3, [r7, #12]
 80073c6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80073ca:	683b      	ldr	r3, [r7, #0]
 80073cc:	695b      	ldr	r3, [r3, #20]
 80073ce:	4313      	orrs	r3, r2
 80073d0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	68fa      	ldr	r2, [r7, #12]
 80073d6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80073d8:	683b      	ldr	r3, [r7, #0]
 80073da:	689a      	ldr	r2, [r3, #8]
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80073e0:	683b      	ldr	r3, [r7, #0]
 80073e2:	681a      	ldr	r2, [r3, #0]
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	4a10      	ldr	r2, [pc, #64]	@ (800742c <TIM_Base_SetConfig+0x12c>)
 80073ec:	4293      	cmp	r3, r2
 80073ee:	d003      	beq.n	80073f8 <TIM_Base_SetConfig+0xf8>
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	4a12      	ldr	r2, [pc, #72]	@ (800743c <TIM_Base_SetConfig+0x13c>)
 80073f4:	4293      	cmp	r3, r2
 80073f6:	d103      	bne.n	8007400 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80073f8:	683b      	ldr	r3, [r7, #0]
 80073fa:	691a      	ldr	r2, [r3, #16]
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	2201      	movs	r2, #1
 8007404:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	691b      	ldr	r3, [r3, #16]
 800740a:	f003 0301 	and.w	r3, r3, #1
 800740e:	2b01      	cmp	r3, #1
 8007410:	d105      	bne.n	800741e <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	691b      	ldr	r3, [r3, #16]
 8007416:	f023 0201 	bic.w	r2, r3, #1
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	611a      	str	r2, [r3, #16]
  }
}
 800741e:	bf00      	nop
 8007420:	3714      	adds	r7, #20
 8007422:	46bd      	mov	sp, r7
 8007424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007428:	4770      	bx	lr
 800742a:	bf00      	nop
 800742c:	40010000 	.word	0x40010000
 8007430:	40000400 	.word	0x40000400
 8007434:	40000800 	.word	0x40000800
 8007438:	40000c00 	.word	0x40000c00
 800743c:	40010400 	.word	0x40010400
 8007440:	40014000 	.word	0x40014000
 8007444:	40014400 	.word	0x40014400
 8007448:	40014800 	.word	0x40014800
 800744c:	40001800 	.word	0x40001800
 8007450:	40001c00 	.word	0x40001c00
 8007454:	40002000 	.word	0x40002000

08007458 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007458:	b480      	push	{r7}
 800745a:	b087      	sub	sp, #28
 800745c:	af00      	add	r7, sp, #0
 800745e:	60f8      	str	r0, [r7, #12]
 8007460:	60b9      	str	r1, [r7, #8]
 8007462:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	6a1b      	ldr	r3, [r3, #32]
 8007468:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800746a:	68fb      	ldr	r3, [r7, #12]
 800746c:	6a1b      	ldr	r3, [r3, #32]
 800746e:	f023 0201 	bic.w	r2, r3, #1
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	699b      	ldr	r3, [r3, #24]
 800747a:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800747c:	693b      	ldr	r3, [r7, #16]
 800747e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007482:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	011b      	lsls	r3, r3, #4
 8007488:	693a      	ldr	r2, [r7, #16]
 800748a:	4313      	orrs	r3, r2
 800748c:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800748e:	697b      	ldr	r3, [r7, #20]
 8007490:	f023 030a 	bic.w	r3, r3, #10
 8007494:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007496:	697a      	ldr	r2, [r7, #20]
 8007498:	68bb      	ldr	r3, [r7, #8]
 800749a:	4313      	orrs	r3, r2
 800749c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	693a      	ldr	r2, [r7, #16]
 80074a2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	697a      	ldr	r2, [r7, #20]
 80074a8:	621a      	str	r2, [r3, #32]
}
 80074aa:	bf00      	nop
 80074ac:	371c      	adds	r7, #28
 80074ae:	46bd      	mov	sp, r7
 80074b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074b4:	4770      	bx	lr

080074b6 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80074b6:	b480      	push	{r7}
 80074b8:	b087      	sub	sp, #28
 80074ba:	af00      	add	r7, sp, #0
 80074bc:	60f8      	str	r0, [r7, #12]
 80074be:	60b9      	str	r1, [r7, #8]
 80074c0:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 80074c2:	68fb      	ldr	r3, [r7, #12]
 80074c4:	6a1b      	ldr	r3, [r3, #32]
 80074c6:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	6a1b      	ldr	r3, [r3, #32]
 80074cc:	f023 0210 	bic.w	r2, r3, #16
 80074d0:	68fb      	ldr	r3, [r7, #12]
 80074d2:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074d4:	68fb      	ldr	r3, [r7, #12]
 80074d6:	699b      	ldr	r3, [r3, #24]
 80074d8:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80074da:	693b      	ldr	r3, [r7, #16]
 80074dc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80074e0:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	031b      	lsls	r3, r3, #12
 80074e6:	693a      	ldr	r2, [r7, #16]
 80074e8:	4313      	orrs	r3, r2
 80074ea:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80074ec:	697b      	ldr	r3, [r7, #20]
 80074ee:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80074f2:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 80074f4:	68bb      	ldr	r3, [r7, #8]
 80074f6:	011b      	lsls	r3, r3, #4
 80074f8:	697a      	ldr	r2, [r7, #20]
 80074fa:	4313      	orrs	r3, r2
 80074fc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	693a      	ldr	r2, [r7, #16]
 8007502:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	697a      	ldr	r2, [r7, #20]
 8007508:	621a      	str	r2, [r3, #32]
}
 800750a:	bf00      	nop
 800750c:	371c      	adds	r7, #28
 800750e:	46bd      	mov	sp, r7
 8007510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007514:	4770      	bx	lr

08007516 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007516:	b480      	push	{r7}
 8007518:	b085      	sub	sp, #20
 800751a:	af00      	add	r7, sp, #0
 800751c:	6078      	str	r0, [r7, #4]
 800751e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007520:	687b      	ldr	r3, [r7, #4]
 8007522:	689b      	ldr	r3, [r3, #8]
 8007524:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800752c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800752e:	683a      	ldr	r2, [r7, #0]
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	4313      	orrs	r3, r2
 8007534:	f043 0307 	orr.w	r3, r3, #7
 8007538:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	68fa      	ldr	r2, [r7, #12]
 800753e:	609a      	str	r2, [r3, #8]
}
 8007540:	bf00      	nop
 8007542:	3714      	adds	r7, #20
 8007544:	46bd      	mov	sp, r7
 8007546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800754a:	4770      	bx	lr

0800754c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800754c:	b480      	push	{r7}
 800754e:	b087      	sub	sp, #28
 8007550:	af00      	add	r7, sp, #0
 8007552:	60f8      	str	r0, [r7, #12]
 8007554:	60b9      	str	r1, [r7, #8]
 8007556:	607a      	str	r2, [r7, #4]
 8007558:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800755a:	68fb      	ldr	r3, [r7, #12]
 800755c:	689b      	ldr	r3, [r3, #8]
 800755e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007560:	697b      	ldr	r3, [r7, #20]
 8007562:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007566:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007568:	683b      	ldr	r3, [r7, #0]
 800756a:	021a      	lsls	r2, r3, #8
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	431a      	orrs	r2, r3
 8007570:	68bb      	ldr	r3, [r7, #8]
 8007572:	4313      	orrs	r3, r2
 8007574:	697a      	ldr	r2, [r7, #20]
 8007576:	4313      	orrs	r3, r2
 8007578:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800757a:	68fb      	ldr	r3, [r7, #12]
 800757c:	697a      	ldr	r2, [r7, #20]
 800757e:	609a      	str	r2, [r3, #8]
}
 8007580:	bf00      	nop
 8007582:	371c      	adds	r7, #28
 8007584:	46bd      	mov	sp, r7
 8007586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800758a:	4770      	bx	lr

0800758c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800758c:	b480      	push	{r7}
 800758e:	b085      	sub	sp, #20
 8007590:	af00      	add	r7, sp, #0
 8007592:	6078      	str	r0, [r7, #4]
 8007594:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800759c:	2b01      	cmp	r3, #1
 800759e:	d101      	bne.n	80075a4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80075a0:	2302      	movs	r3, #2
 80075a2:	e05a      	b.n	800765a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	2201      	movs	r2, #1
 80075a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	2202      	movs	r2, #2
 80075b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	681b      	ldr	r3, [r3, #0]
 80075b8:	685b      	ldr	r3, [r3, #4]
 80075ba:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	681b      	ldr	r3, [r3, #0]
 80075c0:	689b      	ldr	r3, [r3, #8]
 80075c2:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 80075c4:	68fb      	ldr	r3, [r7, #12]
 80075c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80075ca:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80075cc:	683b      	ldr	r3, [r7, #0]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	68fa      	ldr	r2, [r7, #12]
 80075d2:	4313      	orrs	r3, r2
 80075d4:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	68fa      	ldr	r2, [r7, #12]
 80075dc:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	4a21      	ldr	r2, [pc, #132]	@ (8007668 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80075e4:	4293      	cmp	r3, r2
 80075e6:	d022      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80075f0:	d01d      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	4a1d      	ldr	r2, [pc, #116]	@ (800766c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80075f8:	4293      	cmp	r3, r2
 80075fa:	d018      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	4a1b      	ldr	r2, [pc, #108]	@ (8007670 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007602:	4293      	cmp	r3, r2
 8007604:	d013      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	681b      	ldr	r3, [r3, #0]
 800760a:	4a1a      	ldr	r2, [pc, #104]	@ (8007674 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800760c:	4293      	cmp	r3, r2
 800760e:	d00e      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	681b      	ldr	r3, [r3, #0]
 8007614:	4a18      	ldr	r2, [pc, #96]	@ (8007678 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007616:	4293      	cmp	r3, r2
 8007618:	d009      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800761a:	687b      	ldr	r3, [r7, #4]
 800761c:	681b      	ldr	r3, [r3, #0]
 800761e:	4a17      	ldr	r2, [pc, #92]	@ (800767c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007620:	4293      	cmp	r3, r2
 8007622:	d004      	beq.n	800762e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	4a15      	ldr	r2, [pc, #84]	@ (8007680 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800762a:	4293      	cmp	r3, r2
 800762c:	d10c      	bne.n	8007648 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800762e:	68bb      	ldr	r3, [r7, #8]
 8007630:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007634:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007636:	683b      	ldr	r3, [r7, #0]
 8007638:	685b      	ldr	r3, [r3, #4]
 800763a:	68ba      	ldr	r2, [r7, #8]
 800763c:	4313      	orrs	r3, r2
 800763e:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	68ba      	ldr	r2, [r7, #8]
 8007646:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	2201      	movs	r2, #1
 800764c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	2200      	movs	r2, #0
 8007654:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007658:	2300      	movs	r3, #0
}
 800765a:	4618      	mov	r0, r3
 800765c:	3714      	adds	r7, #20
 800765e:	46bd      	mov	sp, r7
 8007660:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007664:	4770      	bx	lr
 8007666:	bf00      	nop
 8007668:	40010000 	.word	0x40010000
 800766c:	40000400 	.word	0x40000400
 8007670:	40000800 	.word	0x40000800
 8007674:	40000c00 	.word	0x40000c00
 8007678:	40010400 	.word	0x40010400
 800767c:	40014000 	.word	0x40014000
 8007680:	40001800 	.word	0x40001800

08007684 <awe_fwInitFlashFileSystem>:
 8007684:	1e43      	subs	r3, r0, #1
 8007686:	3303      	adds	r3, #3
 8007688:	d815      	bhi.n	80076b6 <awe_fwInitFlashFileSystem+0x32>
 800768a:	6903      	ldr	r3, [r0, #16]
 800768c:	b19b      	cbz	r3, 80076b6 <awe_fwInitFlashFileSystem+0x32>
 800768e:	6943      	ldr	r3, [r0, #20]
 8007690:	b18b      	cbz	r3, 80076b6 <awe_fwInitFlashFileSystem+0x32>
 8007692:	6983      	ldr	r3, [r0, #24]
 8007694:	b17b      	cbz	r3, 80076b6 <awe_fwInitFlashFileSystem+0x32>
 8007696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800769a:	69c5      	ldr	r5, [r0, #28]
 800769c:	b092      	sub	sp, #72	@ 0x48
 800769e:	b135      	cbz	r5, 80076ae <awe_fwInitFlashFileSystem+0x2a>
 80076a0:	6807      	ldr	r7, [r0, #0]
 80076a2:	b127      	cbz	r7, 80076ae <awe_fwInitFlashFileSystem+0x2a>
 80076a4:	f8d0 8004 	ldr.w	r8, [r0, #4]
 80076a8:	f1b8 0f00 	cmp.w	r8, #0
 80076ac:	d105      	bne.n	80076ba <awe_fwInitFlashFileSystem+0x36>
 80076ae:	2000      	movs	r0, #0
 80076b0:	b012      	add	sp, #72	@ 0x48
 80076b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80076b6:	2000      	movs	r0, #0
 80076b8:	4770      	bx	lr
 80076ba:	4e8d      	ldr	r6, [pc, #564]	@ (80078f0 <awe_fwInitFlashFileSystem+0x26c>)
 80076bc:	4604      	mov	r4, r0
 80076be:	22cc      	movs	r2, #204	@ 0xcc
 80076c0:	2100      	movs	r1, #0
 80076c2:	3024      	adds	r0, #36	@ 0x24
 80076c4:	f026 fa46 	bl	802db54 <memset>
 80076c8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80076ca:	f8c4 00f0 	str.w	r0, [r4, #240]	@ 0xf0
 80076ce:	f8c4 10f4 	str.w	r1, [r4, #244]	@ 0xf4
 80076d2:	f8c4 20f8 	str.w	r2, [r4, #248]	@ 0xf8
 80076d6:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
 80076da:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80076dc:	f8c4 0100 	str.w	r0, [r4, #256]	@ 0x100
 80076e0:	f8c4 1104 	str.w	r1, [r4, #260]	@ 0x104
 80076e4:	f8c4 2108 	str.w	r2, [r4, #264]	@ 0x108
 80076e8:	2110      	movs	r1, #16
 80076ea:	2240      	movs	r2, #64	@ 0x40
 80076ec:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
 80076f0:	68a0      	ldr	r0, [r4, #8]
 80076f2:	6367      	str	r7, [r4, #52]	@ 0x34
 80076f4:	f04f 33ff 	mov.w	r3, #4294967295
 80076f8:	e9c4 120a 	strd	r1, r2, [r4, #40]	@ 0x28
 80076fc:	f8c4 8038 	str.w	r8, [r4, #56]	@ 0x38
 8007700:	6420      	str	r0, [r4, #64]	@ 0x40
 8007702:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8007706:	a902      	add	r1, sp, #8
 8007708:	2205      	movs	r2, #5
 800770a:	47a8      	blx	r5
 800770c:	2800      	cmp	r0, #0
 800770e:	d0ce      	beq.n	80076ae <awe_fwInitFlashFileSystem+0x2a>
 8007710:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8007714:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8007716:	f244 1357 	movw	r3, #16727	@ 0x4157
 800771a:	2100      	movs	r1, #0
 800771c:	429a      	cmp	r2, r3
 800771e:	6461      	str	r1, [r4, #68]	@ 0x44
 8007720:	d050      	beq.n	80077c4 <awe_fwInitFlashFileSystem+0x140>
 8007722:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8007724:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
 8007728:	1b9b      	subs	r3, r3, r6
 800772a:	089b      	lsrs	r3, r3, #2
 800772c:	fbb3 f0f2 	udiv	r0, r3, r2
 8007730:	fb02 3010 	mls	r0, r2, r0, r3
 8007734:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8007738:	f023 071f 	bic.w	r7, r3, #31
 800773c:	eb00 0c01 	add.w	ip, r0, r1
 8007740:	fbb7 f5f2 	udiv	r5, r7, r2
 8007744:	096d      	lsrs	r5, r5, #5
 8007746:	fbb5 f5f2 	udiv	r5, r5, r2
 800774a:	fb02 2505 	mla	r5, r2, r5, r2
 800774e:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
 8007752:	f3c3 060b 	ubfx	r6, r3, #0, #12
 8007756:	6420      	str	r0, [r4, #64]	@ 0x40
 8007758:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
 800775c:	6323      	str	r3, [r4, #48]	@ 0x30
 800775e:	b146      	cbz	r6, 8007772 <awe_fwInitFlashFileSystem+0xee>
 8007760:	f5c6 5680 	rsb	r6, r6, #4096	@ 0x1000
 8007764:	fbb6 fef1 	udiv	lr, r6, r1
 8007768:	fb0e 3301 	mla	r3, lr, r1, r3
 800776c:	6323      	str	r3, [r4, #48]	@ 0x30
 800776e:	f8c4 e044 	str.w	lr, [r4, #68]	@ 0x44
 8007772:	4960      	ldr	r1, [pc, #384]	@ (80078f4 <awe_fwInitFlashFileSystem+0x270>)
 8007774:	9106      	str	r1, [sp, #24]
 8007776:	e9cd 3004 	strd	r3, r0, [sp, #16]
 800777a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 800777e:	69a3      	ldr	r3, [r4, #24]
 8007780:	2205      	movs	r2, #5
 8007782:	a902      	add	r1, sp, #8
 8007784:	4798      	blx	r3
 8007786:	2800      	cmp	r0, #0
 8007788:	d091      	beq.n	80076ae <awe_fwInitFlashFileSystem+0x2a>
 800778a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800778c:	fbb5 f3f3 	udiv	r3, r5, r3
 8007790:	3301      	adds	r3, #1
 8007792:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 8007794:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007796:	fbb6 f6f5 	udiv	r6, r6, r5
 800779a:	4433      	add	r3, r6
 800779c:	2100      	movs	r1, #0
 800779e:	6463      	str	r3, [r4, #68]	@ 0x44
 80077a0:	095b      	lsrs	r3, r3, #5
 80077a2:	4415      	add	r5, r2
 80077a4:	9102      	str	r1, [sp, #8]
 80077a6:	d045      	beq.n	8007834 <awe_fwInitFlashFileSystem+0x1b0>
 80077a8:	eb05 0683 	add.w	r6, r5, r3, lsl #2
 80077ac:	e001      	b.n	80077b2 <awe_fwInitFlashFileSystem+0x12e>
 80077ae:	42b5      	cmp	r5, r6
 80077b0:	d041      	beq.n	8007836 <awe_fwInitFlashFileSystem+0x1b2>
 80077b2:	4628      	mov	r0, r5
 80077b4:	69a3      	ldr	r3, [r4, #24]
 80077b6:	2201      	movs	r2, #1
 80077b8:	a902      	add	r1, sp, #8
 80077ba:	4798      	blx	r3
 80077bc:	3504      	adds	r5, #4
 80077be:	2800      	cmp	r0, #0
 80077c0:	d1f5      	bne.n	80077ae <awe_fwInitFlashFileSystem+0x12a>
 80077c2:	e774      	b.n	80076ae <awe_fwInitFlashFileSystem+0x2a>
 80077c4:	e9dd 3504 	ldrd	r3, r5, [sp, #16]
 80077c8:	9a02      	ldr	r2, [sp, #8]
 80077ca:	62a2      	str	r2, [r4, #40]	@ 0x28
 80077cc:	0091      	lsls	r1, r2, #2
 80077ce:	1b5b      	subs	r3, r3, r5
 80077d0:	199d      	adds	r5, r3, r6
 80077d2:	440e      	add	r6, r1
 80077d4:	62e1      	str	r1, [r4, #44]	@ 0x2c
 80077d6:	6266      	str	r6, [r4, #36]	@ 0x24
 80077d8:	6325      	str	r5, [r4, #48]	@ 0x30
 80077da:	69e3      	ldr	r3, [r4, #28]
 80077dc:	a902      	add	r1, sp, #8
 80077de:	4628      	mov	r0, r5
 80077e0:	4798      	blx	r3
 80077e2:	2800      	cmp	r0, #0
 80077e4:	f43f af63 	beq.w	80076ae <awe_fwInitFlashFileSystem+0x2a>
 80077e8:	9b02      	ldr	r3, [sp, #8]
 80077ea:	1c5a      	adds	r2, r3, #1
 80077ec:	d056      	beq.n	800789c <awe_fwInitFlashFileSystem+0x218>
 80077ee:	2b00      	cmp	r3, #0
 80077f0:	9903      	ldr	r1, [sp, #12]
 80077f2:	db14      	blt.n	800781e <awe_fwInitFlashFileSystem+0x19a>
 80077f4:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 80077f8:	fbb1 f3f2 	udiv	r3, r1, r2
 80077fc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8007800:	fb02 1313 	mls	r3, r2, r3, r1
 8007804:	1ad1      	subs	r1, r2, r3
 8007806:	4405      	add	r5, r0
 8007808:	2b00      	cmp	r3, #0
 800780a:	d0e6      	beq.n	80077da <awe_fwInitFlashFileSystem+0x156>
 800780c:	eb05 0581 	add.w	r5, r5, r1, lsl #2
 8007810:	69e3      	ldr	r3, [r4, #28]
 8007812:	a902      	add	r1, sp, #8
 8007814:	4628      	mov	r0, r5
 8007816:	4798      	blx	r3
 8007818:	2800      	cmp	r0, #0
 800781a:	d1e5      	bne.n	80077e8 <awe_fwInitFlashFileSystem+0x164>
 800781c:	e747      	b.n	80076ae <awe_fwInitFlashFileSystem+0x2a>
 800781e:	1c4b      	adds	r3, r1, #1
 8007820:	d0e8      	beq.n	80077f4 <awe_fwInitFlashFileSystem+0x170>
 8007822:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8007824:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
 8007828:	3201      	adds	r2, #1
 800782a:	440b      	add	r3, r1
 800782c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800782e:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
 8007832:	e7df      	b.n	80077f4 <awe_fwInitFlashFileSystem+0x170>
 8007834:	462e      	mov	r6, r5
 8007836:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8007838:	f013 021f 	ands.w	r2, r3, #31
 800783c:	d00c      	beq.n	8007858 <awe_fwInitFlashFileSystem+0x1d4>
 800783e:	f04f 33ff 	mov.w	r3, #4294967295
 8007842:	40d3      	lsrs	r3, r2
 8007844:	9302      	str	r3, [sp, #8]
 8007846:	a902      	add	r1, sp, #8
 8007848:	4630      	mov	r0, r6
 800784a:	69a3      	ldr	r3, [r4, #24]
 800784c:	2201      	movs	r2, #1
 800784e:	4798      	blx	r3
 8007850:	2800      	cmp	r0, #0
 8007852:	f43f af2c 	beq.w	80076ae <awe_fwInitFlashFileSystem+0x2a>
 8007856:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8007858:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800785a:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800785c:	2200      	movs	r2, #0
 800785e:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
 8007862:	4694      	mov	ip, r2
 8007864:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007866:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8007868:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 800786a:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
 800786e:	fb03 f301 	mul.w	r3, r3, r1
 8007872:	fb05 f501 	mul.w	r5, r5, r1
 8007876:	4419      	add	r1, r3
 8007878:	1ab2      	subs	r2, r6, r2
 800787a:	4429      	add	r1, r5
 800787c:	0880      	lsrs	r0, r0, #2
 800787e:	eba3 030c 	sub.w	r3, r3, ip
 8007882:	1a7f      	subs	r7, r7, r1
 8007884:	eb05 0292 	add.w	r2, r5, r2, lsr #2
 8007888:	f8c4 00f4 	str.w	r0, [r4, #244]	@ 0xf4
 800788c:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
 8007890:	f8c4 7108 	str.w	r7, [r4, #264]	@ 0x108
 8007894:	f8c4 20fc 	str.w	r2, [r4, #252]	@ 0xfc
 8007898:	2001      	movs	r0, #1
 800789a:	e709      	b.n	80076b0 <awe_fwInitFlashFileSystem+0x2c>
 800789c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800789e:	e009      	b.n	80078b4 <awe_fwInitFlashFileSystem+0x230>
 80078a0:	9901      	ldr	r1, [sp, #4]
 80078a2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80078a4:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 80078a6:	2900      	cmp	r1, #0
 80078a8:	f103 0020 	add.w	r0, r3, #32
 80078ac:	d10b      	bne.n	80078c6 <awe_fwInitFlashFileSystem+0x242>
 80078ae:	42b5      	cmp	r5, r6
 80078b0:	6460      	str	r0, [r4, #68]	@ 0x44
 80078b2:	d01b      	beq.n	80078ec <awe_fwInitFlashFileSystem+0x268>
 80078b4:	4628      	mov	r0, r5
 80078b6:	69e3      	ldr	r3, [r4, #28]
 80078b8:	2201      	movs	r2, #1
 80078ba:	a901      	add	r1, sp, #4
 80078bc:	4798      	blx	r3
 80078be:	3504      	adds	r5, #4
 80078c0:	2800      	cmp	r0, #0
 80078c2:	d1ed      	bne.n	80078a0 <awe_fwInitFlashFileSystem+0x21c>
 80078c4:	e6f3      	b.n	80076ae <awe_fwInitFlashFileSystem+0x2a>
 80078c6:	db0a      	blt.n	80078de <awe_fwInitFlashFileSystem+0x25a>
 80078c8:	3301      	adds	r3, #1
 80078ca:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 80078ce:	e000      	b.n	80078d2 <awe_fwInitFlashFileSystem+0x24e>
 80078d0:	4613      	mov	r3, r2
 80078d2:	0840      	lsrs	r0, r0, #1
 80078d4:	4201      	tst	r1, r0
 80078d6:	f103 0201 	add.w	r2, r3, #1
 80078da:	d0f9      	beq.n	80078d0 <awe_fwInitFlashFileSystem+0x24c>
 80078dc:	6463      	str	r3, [r4, #68]	@ 0x44
 80078de:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80078e0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80078e2:	f8d4 c104 	ldr.w	ip, [r4, #260]	@ 0x104
 80078e6:	1a87      	subs	r7, r0, r2
 80078e8:	08bf      	lsrs	r7, r7, #2
 80078ea:	e7bc      	b.n	8007866 <awe_fwInitFlashFileSystem+0x1e2>
 80078ec:	4603      	mov	r3, r0
 80078ee:	e7f6      	b.n	80078de <awe_fwInitFlashFileSystem+0x25a>
 80078f0:	20000000 	.word	0x20000000
 80078f4:	41570001 	.word	0x41570001

080078f8 <awe_fwResetFlashFileSystem>:
 80078f8:	1e43      	subs	r3, r0, #1
 80078fa:	3303      	adds	r3, #3
 80078fc:	d80c      	bhi.n	8007918 <awe_fwResetFlashFileSystem+0x20>
 80078fe:	2300      	movs	r3, #0
 8007900:	e9c0 3323 	strd	r3, r3, [r0, #140]	@ 0x8c
 8007904:	e9c0 3325 	strd	r3, r3, [r0, #148]	@ 0x94
 8007908:	f04f 32ff 	mov.w	r2, #4294967295
 800790c:	f8c0 30ec 	str.w	r3, [r0, #236]	@ 0xec
 8007910:	f8c0 20a0 	str.w	r2, [r0, #160]	@ 0xa0
 8007914:	4618      	mov	r0, r3
 8007916:	4770      	bx	lr
 8007918:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 800791c:	e7fa      	b.n	8007914 <awe_fwResetFlashFileSystem+0x1c>
 800791e:	bf00      	nop

08007920 <awe_fwGetFirstFile>:
 8007920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007922:	4604      	mov	r4, r0
 8007924:	2300      	movs	r3, #0
 8007926:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8007928:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800792a:	600b      	str	r3, [r1, #0]
 800792c:	460e      	mov	r6, r1
 800792e:	f104 0548 	add.w	r5, r4, #72	@ 0x48
 8007932:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007936:	69e3      	ldr	r3, [r4, #28]
 8007938:	4629      	mov	r1, r5
 800793a:	4798      	blx	r3
 800793c:	b338      	cbz	r0, 800798e <awe_fwGetFirstFile+0x6e>
 800793e:	6ca7      	ldr	r7, [r4, #72]	@ 0x48
 8007940:	1c79      	adds	r1, r7, #1
 8007942:	d027      	beq.n	8007994 <awe_fwGetFirstFile+0x74>
 8007944:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8007946:	1c5a      	adds	r2, r3, #1
 8007948:	d021      	beq.n	800798e <awe_fwGetFirstFile+0x6e>
 800794a:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 800794e:	f8d4 c088 	ldr.w	ip, [r4, #136]	@ 0x88
 8007952:	fbb3 f1f2 	udiv	r1, r3, r2
 8007956:	4460      	add	r0, ip
 8007958:	2f00      	cmp	r7, #0
 800795a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800795e:	fb02 3311 	mls	r3, r2, r1, r3
 8007962:	da0a      	bge.n	800797a <awe_fwGetFirstFile+0x5a>
 8007964:	f8c4 c0a8 	str.w	ip, [r4, #168]	@ 0xa8
 8007968:	b113      	cbz	r3, 8007970 <awe_fwGetFirstFile+0x50>
 800796a:	1ad2      	subs	r2, r2, r3
 800796c:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007970:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007974:	6035      	str	r5, [r6, #0]
 8007976:	2000      	movs	r0, #0
 8007978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800797a:	1ad1      	subs	r1, r2, r3
 800797c:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007980:	2b00      	cmp	r3, #0
 8007982:	d0d8      	beq.n	8007936 <awe_fwGetFirstFile+0x16>
 8007984:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8007988:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800798c:	e7d3      	b.n	8007936 <awe_fwGetFirstFile+0x16>
 800798e:	f06f 0037 	mvn.w	r0, #55	@ 0x37
 8007992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007994:	f06f 002e 	mvn.w	r0, #46	@ 0x2e
 8007998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800799a:	bf00      	nop

0800799c <awe_fwExecuteFlashFiles>:
 800799c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079a0:	b091      	sub	sp, #68	@ 0x44
 80079a2:	ab10      	add	r3, sp, #64	@ 0x40
 80079a4:	2200      	movs	r2, #0
 80079a6:	f843 2d3c 	str.w	r2, [r3, #-60]!
 80079aa:	460c      	mov	r4, r1
 80079ac:	4681      	mov	r9, r0
 80079ae:	4619      	mov	r1, r3
 80079b0:	4620      	mov	r0, r4
 80079b2:	f7ff ffb5 	bl	8007920 <awe_fwGetFirstFile>
 80079b6:	2800      	cmp	r0, #0
 80079b8:	d168      	bne.n	8007a8c <awe_fwExecuteFlashFiles+0xf0>
 80079ba:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80079be:	f8d8 3000 	ldr.w	r3, [r8]
 80079c2:	43db      	mvns	r3, r3
 80079c4:	0e1b      	lsrs	r3, r3, #24
 80079c6:	f003 020a 	and.w	r2, r3, #10
 80079ca:	2a0a      	cmp	r2, #10
 80079cc:	4606      	mov	r6, r0
 80079ce:	f104 0548 	add.w	r5, r4, #72	@ 0x48
 80079d2:	d02b      	beq.n	8007a2c <awe_fwExecuteFlashFiles+0x90>
 80079d4:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80079d6:	9601      	str	r6, [sp, #4]
 80079d8:	3301      	adds	r3, #1
 80079da:	d073      	beq.n	8007ac4 <awe_fwExecuteFlashFiles+0x128>
 80079dc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80079e0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80079e2:	46a8      	mov	r8, r5
 80079e4:	69e3      	ldr	r3, [r4, #28]
 80079e6:	4629      	mov	r1, r5
 80079e8:	4798      	blx	r3
 80079ea:	2800      	cmp	r0, #0
 80079ec:	d065      	beq.n	8007aba <awe_fwExecuteFlashFiles+0x11e>
 80079ee:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80079f0:	1c59      	adds	r1, r3, #1
 80079f2:	d067      	beq.n	8007ac4 <awe_fwExecuteFlashFiles+0x128>
 80079f4:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 80079f6:	1c4a      	adds	r2, r1, #1
 80079f8:	d05f      	beq.n	8007aba <awe_fwExecuteFlashFiles+0x11e>
 80079fa:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 80079fe:	f8d4 7088 	ldr.w	r7, [r4, #136]	@ 0x88
 8007a02:	fbb1 fcf2 	udiv	ip, r1, r2
 8007a06:	4438      	add	r0, r7
 8007a08:	43db      	mvns	r3, r3
 8007a0a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8007a0e:	fb02 111c 	mls	r1, r2, ip, r1
 8007a12:	d444      	bmi.n	8007a9e <awe_fwExecuteFlashFiles+0x102>
 8007a14:	f8c4 70a8 	str.w	r7, [r4, #168]	@ 0xa8
 8007a18:	2900      	cmp	r1, #0
 8007a1a:	d13a      	bne.n	8007a92 <awe_fwExecuteFlashFiles+0xf6>
 8007a1c:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007a20:	0e1b      	lsrs	r3, r3, #24
 8007a22:	f003 020a 	and.w	r2, r3, #10
 8007a26:	2a0a      	cmp	r2, #10
 8007a28:	9501      	str	r5, [sp, #4]
 8007a2a:	d1d3      	bne.n	80079d4 <awe_fwExecuteFlashFiles+0x38>
 8007a2c:	f013 0f30 	tst.w	r3, #48	@ 0x30
 8007a30:	d0d0      	beq.n	80079d4 <awe_fwExecuteFlashFiles+0x38>
 8007a32:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
 8007a36:	f8d8 1010 	ldr.w	r1, [r8, #16]
 8007a3a:	9302      	str	r3, [sp, #8]
 8007a3c:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8007a40:	9203      	str	r2, [sp, #12]
 8007a42:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8007a46:	9104      	str	r1, [sp, #16]
 8007a48:	f8d8 101c 	ldr.w	r1, [r8, #28]
 8007a4c:	9305      	str	r3, [sp, #20]
 8007a4e:	f8d8 3020 	ldr.w	r3, [r8, #32]
 8007a52:	9206      	str	r2, [sp, #24]
 8007a54:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
 8007a58:	9107      	str	r1, [sp, #28]
 8007a5a:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8007a5e:	9308      	str	r3, [sp, #32]
 8007a60:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8007a64:	9209      	str	r2, [sp, #36]	@ 0x24
 8007a66:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8007a6a:	910a      	str	r1, [sp, #40]	@ 0x28
 8007a6c:	f8d8 1034 	ldr.w	r1, [r8, #52]	@ 0x34
 8007a70:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007a72:	e9d8 030e 	ldrd	r0, r3, [r8, #56]	@ 0x38
 8007a76:	920c      	str	r2, [sp, #48]	@ 0x30
 8007a78:	910d      	str	r1, [sp, #52]	@ 0x34
 8007a7a:	900e      	str	r0, [sp, #56]	@ 0x38
 8007a7c:	2200      	movs	r2, #0
 8007a7e:	a902      	add	r1, sp, #8
 8007a80:	4648      	mov	r0, r9
 8007a82:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007a84:	f00d ff40 	bl	8015908 <awe_loadAWBfromFlash>
 8007a88:	2800      	cmp	r0, #0
 8007a8a:	daa3      	bge.n	80079d4 <awe_fwExecuteFlashFiles+0x38>
 8007a8c:	b011      	add	sp, #68	@ 0x44
 8007a8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a92:	1a52      	subs	r2, r2, r1
 8007a94:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007a98:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 8007a9c:	e7c0      	b.n	8007a20 <awe_fwExecuteFlashFiles+0x84>
 8007a9e:	1a53      	subs	r3, r2, r1
 8007aa0:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007aa4:	2900      	cmp	r1, #0
 8007aa6:	d09d      	beq.n	80079e4 <awe_fwExecuteFlashFiles+0x48>
 8007aa8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8007aac:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007ab0:	69e3      	ldr	r3, [r4, #28]
 8007ab2:	4629      	mov	r1, r5
 8007ab4:	4798      	blx	r3
 8007ab6:	2800      	cmp	r0, #0
 8007ab8:	d199      	bne.n	80079ee <awe_fwExecuteFlashFiles+0x52>
 8007aba:	f06f 0037 	mvn.w	r0, #55	@ 0x37
 8007abe:	b011      	add	sp, #68	@ 0x44
 8007ac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007ac4:	f06f 002e 	mvn.w	r0, #46	@ 0x2e
 8007ac8:	b011      	add	sp, #68	@ 0x44
 8007aca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007ace:	bf00      	nop

08007ad0 <awe_fwGetNextFile>:
 8007ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ad2:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8007ad4:	2200      	movs	r2, #0
 8007ad6:	3301      	adds	r3, #1
 8007ad8:	600a      	str	r2, [r1, #0]
 8007ada:	d035      	beq.n	8007b48 <awe_fwGetNextFile+0x78>
 8007adc:	4604      	mov	r4, r0
 8007ade:	f8d0 0088 	ldr.w	r0, [r0, #136]	@ 0x88
 8007ae2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007ae4:	460d      	mov	r5, r1
 8007ae6:	f104 0648 	add.w	r6, r4, #72	@ 0x48
 8007aea:	69e3      	ldr	r3, [r4, #28]
 8007aec:	4631      	mov	r1, r6
 8007aee:	4798      	blx	r3
 8007af0:	b338      	cbz	r0, 8007b42 <awe_fwGetNextFile+0x72>
 8007af2:	6ca7      	ldr	r7, [r4, #72]	@ 0x48
 8007af4:	1c79      	adds	r1, r7, #1
 8007af6:	d027      	beq.n	8007b48 <awe_fwGetNextFile+0x78>
 8007af8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8007afa:	1c5a      	adds	r2, r3, #1
 8007afc:	d021      	beq.n	8007b42 <awe_fwGetNextFile+0x72>
 8007afe:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 8007b02:	f8d4 c088 	ldr.w	ip, [r4, #136]	@ 0x88
 8007b06:	fbb3 f1f2 	udiv	r1, r3, r2
 8007b0a:	4460      	add	r0, ip
 8007b0c:	2f00      	cmp	r7, #0
 8007b0e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8007b12:	fb02 3311 	mls	r3, r2, r1, r3
 8007b16:	da0a      	bge.n	8007b2e <awe_fwGetNextFile+0x5e>
 8007b18:	f8c4 c0a8 	str.w	ip, [r4, #168]	@ 0xa8
 8007b1c:	b113      	cbz	r3, 8007b24 <awe_fwGetNextFile+0x54>
 8007b1e:	1ad2      	subs	r2, r2, r3
 8007b20:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007b24:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007b28:	602e      	str	r6, [r5, #0]
 8007b2a:	2000      	movs	r0, #0
 8007b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b2e:	1ad1      	subs	r1, r2, r3
 8007b30:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d0d8      	beq.n	8007aea <awe_fwGetNextFile+0x1a>
 8007b38:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8007b3c:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8007b40:	e7d3      	b.n	8007aea <awe_fwGetNextFile+0x1a>
 8007b42:	f06f 0037 	mvn.w	r0, #55	@ 0x37
 8007b46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b48:	f06f 002e 	mvn.w	r0, #46	@ 0x2e
 8007b4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b4e:	bf00      	nop

08007b50 <awe_fwCloseFile>:
 8007b50:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d07d      	beq.n	8007c54 <awe_fwCloseFile+0x104>
 8007b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007b5c:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8007b60:	3301      	adds	r3, #1
 8007b62:	b082      	sub	sp, #8
 8007b64:	4604      	mov	r4, r0
 8007b66:	d02d      	beq.n	8007bc4 <awe_fwCloseFile+0x74>
 8007b68:	f8d0 30ec 	ldr.w	r3, [r0, #236]	@ 0xec
 8007b6c:	bb93      	cbnz	r3, 8007bd4 <awe_fwCloseFile+0x84>
 8007b6e:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
 8007b72:	69a3      	ldr	r3, [r4, #24]
 8007b74:	3004      	adds	r0, #4
 8007b76:	2201      	movs	r2, #1
 8007b78:	f104 0194 	add.w	r1, r4, #148	@ 0x94
 8007b7c:	4798      	blx	r3
 8007b7e:	2800      	cmp	r0, #0
 8007b80:	d06b      	beq.n	8007c5a <awe_fwCloseFile+0x10a>
 8007b82:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
 8007b86:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007b88:	fbb1 f3f2 	udiv	r3, r1, r2
 8007b8c:	fb02 1313 	mls	r3, r2, r3, r1
 8007b90:	b9f3      	cbnz	r3, 8007bd0 <awe_fwCloseFile+0x80>
 8007b92:	f8d4 2108 	ldr.w	r2, [r4, #264]	@ 0x108
 8007b96:	f8d4 5104 	ldr.w	r5, [r4, #260]	@ 0x104
 8007b9a:	f8d4 0100 	ldr.w	r0, [r4, #256]	@ 0x100
 8007b9e:	1a52      	subs	r2, r2, r1
 8007ba0:	1ad2      	subs	r2, r2, r3
 8007ba2:	4429      	add	r1, r5
 8007ba4:	4403      	add	r3, r0
 8007ba6:	f04f 35ff 	mov.w	r5, #4294967295
 8007baa:	2000      	movs	r0, #0
 8007bac:	f8c4 2108 	str.w	r2, [r4, #264]	@ 0x108
 8007bb0:	f8c4 1104 	str.w	r1, [r4, #260]	@ 0x104
 8007bb4:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
 8007bb8:	f8c4 0094 	str.w	r0, [r4, #148]	@ 0x94
 8007bbc:	f8c4 00ec 	str.w	r0, [r4, #236]	@ 0xec
 8007bc0:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8007bc4:	2000      	movs	r0, #0
 8007bc6:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 8007bca:	b002      	add	sp, #8
 8007bcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007bd0:	1ad3      	subs	r3, r2, r3
 8007bd2:	e7de      	b.n	8007b92 <awe_fwCloseFile+0x42>
 8007bd4:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8007bd8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8007bda:	69e6      	ldr	r6, [r4, #28]
 8007bdc:	e9d0 0209 	ldrd	r0, r2, [r0, #36]	@ 0x24
 8007be0:	1b5d      	subs	r5, r3, r5
 8007be2:	af02      	add	r7, sp, #8
 8007be4:	08ad      	lsrs	r5, r5, #2
 8007be6:	fbb5 f5f2 	udiv	r5, r5, r2
 8007bea:	096b      	lsrs	r3, r5, #5
 8007bec:	f847 3d04 	str.w	r3, [r7, #-4]!
 8007bf0:	eb00 0883 	add.w	r8, r0, r3, lsl #2
 8007bf4:	4639      	mov	r1, r7
 8007bf6:	4640      	mov	r0, r8
 8007bf8:	2201      	movs	r2, #1
 8007bfa:	47b0      	blx	r6
 8007bfc:	b338      	cbz	r0, 8007c4e <awe_fwCloseFile+0xfe>
 8007bfe:	f005 051f 	and.w	r5, r5, #31
 8007c02:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007c06:	9a01      	ldr	r2, [sp, #4]
 8007c08:	fa23 f505 	lsr.w	r5, r3, r5
 8007c0c:	4215      	tst	r5, r2
 8007c0e:	d01e      	beq.n	8007c4e <awe_fwCloseFile+0xfe>
 8007c10:	ea22 0505 	bic.w	r5, r2, r5
 8007c14:	9501      	str	r5, [sp, #4]
 8007c16:	4639      	mov	r1, r7
 8007c18:	4640      	mov	r0, r8
 8007c1a:	69a3      	ldr	r3, [r4, #24]
 8007c1c:	2201      	movs	r2, #1
 8007c1e:	4798      	blx	r3
 8007c20:	b1a8      	cbz	r0, 8007c4e <awe_fwCloseFile+0xfe>
 8007c22:	69a3      	ldr	r3, [r4, #24]
 8007c24:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007c26:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8007c2a:	f104 01ac 	add.w	r1, r4, #172	@ 0xac
 8007c2e:	4798      	blx	r3
 8007c30:	b198      	cbz	r0, 8007c5a <awe_fwCloseFile+0x10a>
 8007c32:	f8d4 2088 	ldr.w	r2, [r4, #136]	@ 0x88
 8007c36:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 8007c3a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8007c3c:	f8d4 10ec 	ldr.w	r1, [r4, #236]	@ 0xec
 8007c40:	4402      	add	r2, r0
 8007c42:	440b      	add	r3, r1
 8007c44:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 8007c48:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8007c4c:	e78f      	b.n	8007b6e <awe_fwCloseFile+0x1e>
 8007c4e:	f06f 0035 	mvn.w	r0, #53	@ 0x35
 8007c52:	e7ba      	b.n	8007bca <awe_fwCloseFile+0x7a>
 8007c54:	f06f 0034 	mvn.w	r0, #52	@ 0x34
 8007c58:	4770      	bx	lr
 8007c5a:	f06f 0038 	mvn.w	r0, #56	@ 0x38
 8007c5e:	e7b4      	b.n	8007bca <awe_fwCloseFile+0x7a>

08007c60 <awe_fwWriteFile>:
 8007c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c64:	4688      	mov	r8, r1
 8007c66:	b085      	sub	sp, #20
 8007c68:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
 8007c6c:	9301      	str	r3, [sp, #4]
 8007c6e:	2900      	cmp	r1, #0
 8007c70:	f000 8269 	beq.w	8008146 <awe_fwWriteFile+0x4e6>
 8007c74:	4617      	mov	r7, r2
 8007c76:	f8d0 20ec 	ldr.w	r2, [r0, #236]	@ 0xec
 8007c7a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007c7c:	4605      	mov	r5, r0
 8007c7e:	2a00      	cmp	r2, #0
 8007c80:	f000 8115 	beq.w	8007eae <awe_fwWriteFile+0x24e>
 8007c84:	1c53      	adds	r3, r2, #1
 8007c86:	f8c0 30ec 	str.w	r3, [r0, #236]	@ 0xec
 8007c8a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007c8e:	6839      	ldr	r1, [r7, #0]
 8007c90:	f8c0 10ac 	str.w	r1, [r0, #172]	@ 0xac
 8007c94:	f1b8 0001 	subs.w	r0, r8, #1
 8007c98:	f107 0104 	add.w	r1, r7, #4
 8007c9c:	f000 815b 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007ca0:	429c      	cmp	r4, r3
 8007ca2:	f000 8163 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007ca6:	1c93      	adds	r3, r2, #2
 8007ca8:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007cac:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007cb0:	6878      	ldr	r0, [r7, #4]
 8007cb2:	f8c1 00b0 	str.w	r0, [r1, #176]	@ 0xb0
 8007cb6:	f1b8 0002 	subs.w	r0, r8, #2
 8007cba:	f107 0108 	add.w	r1, r7, #8
 8007cbe:	f000 814a 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007cc2:	429c      	cmp	r4, r3
 8007cc4:	f000 8152 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007cc8:	1cd3      	adds	r3, r2, #3
 8007cca:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007cce:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 8007cd2:	68b9      	ldr	r1, [r7, #8]
 8007cd4:	f8c0 10b4 	str.w	r1, [r0, #180]	@ 0xb4
 8007cd8:	f1b8 0003 	subs.w	r0, r8, #3
 8007cdc:	f107 010c 	add.w	r1, r7, #12
 8007ce0:	f000 8139 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007ce4:	429c      	cmp	r4, r3
 8007ce6:	f000 8141 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007cea:	1d10      	adds	r0, r2, #4
 8007cec:	f8c5 00ec 	str.w	r0, [r5, #236]	@ 0xec
 8007cf0:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007cf4:	68fb      	ldr	r3, [r7, #12]
 8007cf6:	f8c1 30b8 	str.w	r3, [r1, #184]	@ 0xb8
 8007cfa:	f1b8 0304 	subs.w	r3, r8, #4
 8007cfe:	f107 0110 	add.w	r1, r7, #16
 8007d02:	f000 8127 	beq.w	8007f54 <awe_fwWriteFile+0x2f4>
 8007d06:	4284      	cmp	r4, r0
 8007d08:	f000 8215 	beq.w	8008136 <awe_fwWriteFile+0x4d6>
 8007d0c:	1d53      	adds	r3, r2, #5
 8007d0e:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8007d12:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007d16:	6939      	ldr	r1, [r7, #16]
 8007d18:	f8c0 10ac 	str.w	r1, [r0, #172]	@ 0xac
 8007d1c:	f1b8 0005 	subs.w	r0, r8, #5
 8007d20:	f107 0114 	add.w	r1, r7, #20
 8007d24:	f000 8117 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007d28:	429c      	cmp	r4, r3
 8007d2a:	f000 811f 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007d2e:	1d93      	adds	r3, r2, #6
 8007d30:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007d34:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007d38:	6978      	ldr	r0, [r7, #20]
 8007d3a:	f8c1 00c0 	str.w	r0, [r1, #192]	@ 0xc0
 8007d3e:	f1b8 0006 	subs.w	r0, r8, #6
 8007d42:	f107 0118 	add.w	r1, r7, #24
 8007d46:	f000 8106 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007d4a:	429c      	cmp	r4, r3
 8007d4c:	f000 810e 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007d50:	1dd3      	adds	r3, r2, #7
 8007d52:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007d56:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 8007d5a:	69b9      	ldr	r1, [r7, #24]
 8007d5c:	f8c0 10c4 	str.w	r1, [r0, #196]	@ 0xc4
 8007d60:	f1b8 0007 	subs.w	r0, r8, #7
 8007d64:	f107 011c 	add.w	r1, r7, #28
 8007d68:	f000 80f5 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007d6c:	429c      	cmp	r4, r3
 8007d6e:	f000 80fd 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007d72:	f102 0308 	add.w	r3, r2, #8
 8007d76:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007d7a:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007d7e:	69f8      	ldr	r0, [r7, #28]
 8007d80:	f8c1 00c8 	str.w	r0, [r1, #200]	@ 0xc8
 8007d84:	f1b8 0008 	subs.w	r0, r8, #8
 8007d88:	f107 0120 	add.w	r1, r7, #32
 8007d8c:	f000 80e3 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007d90:	429c      	cmp	r4, r3
 8007d92:	f000 80eb 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007d96:	f102 0309 	add.w	r3, r2, #9
 8007d9a:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007d9e:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 8007da2:	6a39      	ldr	r1, [r7, #32]
 8007da4:	f8c0 10cc 	str.w	r1, [r0, #204]	@ 0xcc
 8007da8:	f1b8 0009 	subs.w	r0, r8, #9
 8007dac:	f107 0124 	add.w	r1, r7, #36	@ 0x24
 8007db0:	f000 80d1 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007db4:	429c      	cmp	r4, r3
 8007db6:	f000 80d9 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007dba:	f102 000a 	add.w	r0, r2, #10
 8007dbe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8007dc2:	f8c5 00ec 	str.w	r0, [r5, #236]	@ 0xec
 8007dc6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007dc8:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
 8007dcc:	f1b8 030a 	subs.w	r3, r8, #10
 8007dd0:	f107 0128 	add.w	r1, r7, #40	@ 0x28
 8007dd4:	f000 80be 	beq.w	8007f54 <awe_fwWriteFile+0x2f4>
 8007dd8:	4284      	cmp	r4, r0
 8007dda:	f000 81ac 	beq.w	8008136 <awe_fwWriteFile+0x4d6>
 8007dde:	f102 030b 	add.w	r3, r2, #11
 8007de2:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007de6:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 8007dea:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007dec:	f8c0 10d4 	str.w	r1, [r0, #212]	@ 0xd4
 8007df0:	f1b8 000b 	subs.w	r0, r8, #11
 8007df4:	f107 012c 	add.w	r1, r7, #44	@ 0x2c
 8007df8:	f000 80ad 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007dfc:	429c      	cmp	r4, r3
 8007dfe:	f000 80b5 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007e02:	f102 030c 	add.w	r3, r2, #12
 8007e06:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007e0a:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007e0e:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8007e10:	f8c1 00d8 	str.w	r0, [r1, #216]	@ 0xd8
 8007e14:	f1b8 000c 	subs.w	r0, r8, #12
 8007e18:	f107 0130 	add.w	r1, r7, #48	@ 0x30
 8007e1c:	f000 809b 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007e20:	429c      	cmp	r4, r3
 8007e22:	f000 80a3 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007e26:	f102 030d 	add.w	r3, r2, #13
 8007e2a:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007e2e:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 8007e32:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007e34:	f8c0 10dc 	str.w	r1, [r0, #220]	@ 0xdc
 8007e38:	f1b8 000d 	subs.w	r0, r8, #13
 8007e3c:	f107 0134 	add.w	r1, r7, #52	@ 0x34
 8007e40:	f000 8089 	beq.w	8007f56 <awe_fwWriteFile+0x2f6>
 8007e44:	429c      	cmp	r4, r3
 8007e46:	f000 8091 	beq.w	8007f6c <awe_fwWriteFile+0x30c>
 8007e4a:	f102 000e 	add.w	r0, r2, #14
 8007e4e:	f8c5 00ec 	str.w	r0, [r5, #236]	@ 0xec
 8007e52:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 8007e56:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007e58:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 8007e5c:	f1b8 030e 	subs.w	r3, r8, #14
 8007e60:	f107 0138 	add.w	r1, r7, #56	@ 0x38
 8007e64:	d076      	beq.n	8007f54 <awe_fwWriteFile+0x2f4>
 8007e66:	4284      	cmp	r4, r0
 8007e68:	f000 8165 	beq.w	8008136 <awe_fwWriteFile+0x4d6>
 8007e6c:	f102 030f 	add.w	r3, r2, #15
 8007e70:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8007e74:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007e78:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8007e7a:	f8c0 10ac 	str.w	r1, [r0, #172]	@ 0xac
 8007e7e:	f1b8 000f 	subs.w	r0, r8, #15
 8007e82:	f107 013c 	add.w	r1, r7, #60	@ 0x3c
 8007e86:	d066      	beq.n	8007f56 <awe_fwWriteFile+0x2f6>
 8007e88:	429c      	cmp	r4, r3
 8007e8a:	d06f      	beq.n	8007f6c <awe_fwWriteFile+0x30c>
 8007e8c:	f102 0310 	add.w	r3, r2, #16
 8007e90:	f8c5 30ec 	str.w	r3, [r5, #236]	@ 0xec
 8007e94:	eb05 0282 	add.w	r2, r5, r2, lsl #2
 8007e98:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007e9a:	f8c2 10e8 	str.w	r1, [r2, #232]	@ 0xe8
 8007e9e:	f1b8 0810 	subs.w	r8, r8, #16
 8007ea2:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 8007ea6:	d056      	beq.n	8007f56 <awe_fwWriteFile+0x2f6>
 8007ea8:	460f      	mov	r7, r1
 8007eaa:	461c      	mov	r4, r3
 8007eac:	e060      	b.n	8007f70 <awe_fwWriteFile+0x310>
 8007eae:	2c00      	cmp	r4, #0
 8007eb0:	d05e      	beq.n	8007f70 <awe_fwWriteFile+0x310>
 8007eb2:	f1b8 0f00 	cmp.w	r8, #0
 8007eb6:	d051      	beq.n	8007f5c <awe_fwWriteFile+0x2fc>
 8007eb8:	fbb8 faf4 	udiv	sl, r8, r4
 8007ebc:	f1ba 0f00 	cmp.w	sl, #0
 8007ec0:	f000 813c 	beq.w	800813c <awe_fwWriteFile+0x4dc>
 8007ec4:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8007ec8:	2600      	movs	r6, #0
 8007eca:	f10d 090c 	add.w	r9, sp, #12
 8007ece:	e023      	b.n	8007f18 <awe_fwWriteFile+0x2b8>
 8007ed0:	9b03      	ldr	r3, [sp, #12]
 8007ed2:	421c      	tst	r4, r3
 8007ed4:	4658      	mov	r0, fp
 8007ed6:	ea23 0c04 	bic.w	ip, r3, r4
 8007eda:	d036      	beq.n	8007f4a <awe_fwWriteFile+0x2ea>
 8007edc:	f8cd c00c 	str.w	ip, [sp, #12]
 8007ee0:	69ab      	ldr	r3, [r5, #24]
 8007ee2:	4798      	blx	r3
 8007ee4:	b388      	cbz	r0, 8007f4a <awe_fwWriteFile+0x2ea>
 8007ee6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8007ee8:	69ab      	ldr	r3, [r5, #24]
 8007eea:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8007eee:	0091      	lsls	r1, r2, #2
 8007ef0:	fb06 7101 	mla	r1, r6, r1, r7
 8007ef4:	4798      	blx	r3
 8007ef6:	3601      	adds	r6, #1
 8007ef8:	2800      	cmp	r0, #0
 8007efa:	d07a      	beq.n	8007ff2 <awe_fwWriteFile+0x392>
 8007efc:	e9d5 420a 	ldrd	r4, r2, [r5, #40]	@ 0x28
 8007f00:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8007f04:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007f08:	4410      	add	r0, r2
 8007f0a:	4423      	add	r3, r4
 8007f0c:	45b2      	cmp	sl, r6
 8007f0e:	f8c5 0088 	str.w	r0, [r5, #136]	@ 0x88
 8007f12:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007f16:	d071      	beq.n	8007ffc <awe_fwWriteFile+0x39c>
 8007f18:	6c29      	ldr	r1, [r5, #64]	@ 0x40
 8007f1a:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 8007f1c:	69eb      	ldr	r3, [r5, #28]
 8007f1e:	1a40      	subs	r0, r0, r1
 8007f20:	0880      	lsrs	r0, r0, #2
 8007f22:	fbb0 f4f4 	udiv	r4, r0, r4
 8007f26:	0961      	lsrs	r1, r4, #5
 8007f28:	eb02 0b81 	add.w	fp, r2, r1, lsl #2
 8007f2c:	9103      	str	r1, [sp, #12]
 8007f2e:	2201      	movs	r2, #1
 8007f30:	4649      	mov	r1, r9
 8007f32:	4658      	mov	r0, fp
 8007f34:	4798      	blx	r3
 8007f36:	f004 041f 	and.w	r4, r4, #31
 8007f3a:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007f3e:	2201      	movs	r2, #1
 8007f40:	4649      	mov	r1, r9
 8007f42:	fa23 f404 	lsr.w	r4, r3, r4
 8007f46:	2800      	cmp	r0, #0
 8007f48:	d1c2      	bne.n	8007ed0 <awe_fwWriteFile+0x270>
 8007f4a:	f06f 0035 	mvn.w	r0, #53	@ 0x35
 8007f4e:	b005      	add	sp, #20
 8007f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f54:	4603      	mov	r3, r0
 8007f56:	42a3      	cmp	r3, r4
 8007f58:	f000 80f8 	beq.w	800814c <awe_fwWriteFile+0x4ec>
 8007f5c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007f60:	9a01      	ldr	r2, [sp, #4]
 8007f62:	2000      	movs	r0, #0
 8007f64:	6013      	str	r3, [r2, #0]
 8007f66:	b005      	add	sp, #20
 8007f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f6c:	4680      	mov	r8, r0
 8007f6e:	460f      	mov	r7, r1
 8007f70:	6c28      	ldr	r0, [r5, #64]	@ 0x40
 8007f72:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
 8007f76:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 8007f78:	69eb      	ldr	r3, [r5, #28]
 8007f7a:	1a12      	subs	r2, r2, r0
 8007f7c:	f10d 0910 	add.w	r9, sp, #16
 8007f80:	0892      	lsrs	r2, r2, #2
 8007f82:	fbb2 f4f4 	udiv	r4, r2, r4
 8007f86:	0966      	lsrs	r6, r4, #5
 8007f88:	f849 6d04 	str.w	r6, [r9, #-4]!
 8007f8c:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8007f90:	4630      	mov	r0, r6
 8007f92:	4649      	mov	r1, r9
 8007f94:	2201      	movs	r2, #1
 8007f96:	4798      	blx	r3
 8007f98:	2800      	cmp	r0, #0
 8007f9a:	d0d6      	beq.n	8007f4a <awe_fwWriteFile+0x2ea>
 8007f9c:	f004 041f 	and.w	r4, r4, #31
 8007fa0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007fa4:	9a03      	ldr	r2, [sp, #12]
 8007fa6:	fa23 f404 	lsr.w	r4, r3, r4
 8007faa:	4214      	tst	r4, r2
 8007fac:	d0cd      	beq.n	8007f4a <awe_fwWriteFile+0x2ea>
 8007fae:	ea22 0404 	bic.w	r4, r2, r4
 8007fb2:	9403      	str	r4, [sp, #12]
 8007fb4:	4649      	mov	r1, r9
 8007fb6:	4630      	mov	r0, r6
 8007fb8:	69ab      	ldr	r3, [r5, #24]
 8007fba:	2201      	movs	r2, #1
 8007fbc:	4798      	blx	r3
 8007fbe:	2800      	cmp	r0, #0
 8007fc0:	d0c3      	beq.n	8007f4a <awe_fwWriteFile+0x2ea>
 8007fc2:	69ab      	ldr	r3, [r5, #24]
 8007fc4:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8007fc6:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 8007fca:	f105 01ac 	add.w	r1, r5, #172	@ 0xac
 8007fce:	4798      	blx	r3
 8007fd0:	b178      	cbz	r0, 8007ff2 <awe_fwWriteFile+0x392>
 8007fd2:	e9d5 410a 	ldrd	r4, r1, [r5, #40]	@ 0x28
 8007fd6:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
 8007fda:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007fde:	440a      	add	r2, r1
 8007fe0:	4423      	add	r3, r4
 8007fe2:	f8c5 2088 	str.w	r2, [r5, #136]	@ 0x88
 8007fe6:	2200      	movs	r2, #0
 8007fe8:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007fec:	f8c5 20ec 	str.w	r2, [r5, #236]	@ 0xec
 8007ff0:	e75f      	b.n	8007eb2 <awe_fwWriteFile+0x252>
 8007ff2:	f06f 0038 	mvn.w	r0, #56	@ 0x38
 8007ff6:	b005      	add	sp, #20
 8007ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ffc:	fb0a fa04 	mul.w	sl, sl, r4
 8008000:	eba8 080a 	sub.w	r8, r8, sl
 8008004:	f8c5 80ec 	str.w	r8, [r5, #236]	@ 0xec
 8008008:	f1b8 0f00 	cmp.w	r8, #0
 800800c:	f000 808c 	beq.w	8008128 <awe_fwWriteFile+0x4c8>
 8008010:	f857 202a 	ldr.w	r2, [r7, sl, lsl #2]
 8008014:	f8c5 20ac 	str.w	r2, [r5, #172]	@ 0xac
 8008018:	f1b8 0f01 	cmp.w	r8, #1
 800801c:	f000 8084 	beq.w	8008128 <awe_fwWriteFile+0x4c8>
 8008020:	f10a 0201 	add.w	r2, sl, #1
 8008024:	f1b8 0f02 	cmp.w	r8, #2
 8008028:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800802c:	f8c5 20b0 	str.w	r2, [r5, #176]	@ 0xb0
 8008030:	d07a      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 8008032:	f10a 0202 	add.w	r2, sl, #2
 8008036:	f1b8 0f03 	cmp.w	r8, #3
 800803a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800803e:	f8c5 20b4 	str.w	r2, [r5, #180]	@ 0xb4
 8008042:	d071      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 8008044:	f10a 0203 	add.w	r2, sl, #3
 8008048:	f1b8 0f04 	cmp.w	r8, #4
 800804c:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008050:	f8c5 20b8 	str.w	r2, [r5, #184]	@ 0xb8
 8008054:	d068      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 8008056:	f10a 0204 	add.w	r2, sl, #4
 800805a:	f1b8 0f05 	cmp.w	r8, #5
 800805e:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008062:	f8c5 20bc 	str.w	r2, [r5, #188]	@ 0xbc
 8008066:	d05f      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 8008068:	f10a 0205 	add.w	r2, sl, #5
 800806c:	f1b8 0f06 	cmp.w	r8, #6
 8008070:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008074:	f8c5 20c0 	str.w	r2, [r5, #192]	@ 0xc0
 8008078:	d056      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 800807a:	f10a 0206 	add.w	r2, sl, #6
 800807e:	f1b8 0f07 	cmp.w	r8, #7
 8008082:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008086:	f8c5 20c4 	str.w	r2, [r5, #196]	@ 0xc4
 800808a:	d04d      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 800808c:	f10a 0207 	add.w	r2, sl, #7
 8008090:	f1b8 0f08 	cmp.w	r8, #8
 8008094:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008098:	f8c5 20c8 	str.w	r2, [r5, #200]	@ 0xc8
 800809c:	d044      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 800809e:	f10a 0208 	add.w	r2, sl, #8
 80080a2:	f1b8 0f09 	cmp.w	r8, #9
 80080a6:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80080aa:	f8c5 20cc 	str.w	r2, [r5, #204]	@ 0xcc
 80080ae:	d03b      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 80080b0:	f10a 0209 	add.w	r2, sl, #9
 80080b4:	f1b8 0f0a 	cmp.w	r8, #10
 80080b8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80080bc:	f8c5 20d0 	str.w	r2, [r5, #208]	@ 0xd0
 80080c0:	d032      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 80080c2:	f10a 020a 	add.w	r2, sl, #10
 80080c6:	f1b8 0f0b 	cmp.w	r8, #11
 80080ca:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80080ce:	f8c5 20d4 	str.w	r2, [r5, #212]	@ 0xd4
 80080d2:	d029      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 80080d4:	f10a 020b 	add.w	r2, sl, #11
 80080d8:	f1b8 0f0c 	cmp.w	r8, #12
 80080dc:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80080e0:	f8c5 20d8 	str.w	r2, [r5, #216]	@ 0xd8
 80080e4:	d020      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 80080e6:	f10a 020c 	add.w	r2, sl, #12
 80080ea:	f1b8 0f0d 	cmp.w	r8, #13
 80080ee:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80080f2:	f8c5 20dc 	str.w	r2, [r5, #220]	@ 0xdc
 80080f6:	d017      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 80080f8:	f10a 020d 	add.w	r2, sl, #13
 80080fc:	f1b8 0f0e 	cmp.w	r8, #14
 8008100:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008104:	f8c5 20e0 	str.w	r2, [r5, #224]	@ 0xe0
 8008108:	d00e      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 800810a:	f10a 020e 	add.w	r2, sl, #14
 800810e:	f1b8 0f0f 	cmp.w	r8, #15
 8008112:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8008116:	f8c5 20e4 	str.w	r2, [r5, #228]	@ 0xe4
 800811a:	d005      	beq.n	8008128 <awe_fwWriteFile+0x4c8>
 800811c:	f10a 0a0f 	add.w	sl, sl, #15
 8008120:	f857 202a 	ldr.w	r2, [r7, sl, lsl #2]
 8008124:	f8c5 20e8 	str.w	r2, [r5, #232]	@ 0xe8
 8008128:	9a01      	ldr	r2, [sp, #4]
 800812a:	4443      	add	r3, r8
 800812c:	2000      	movs	r0, #0
 800812e:	6013      	str	r3, [r2, #0]
 8008130:	b005      	add	sp, #20
 8008132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008136:	4698      	mov	r8, r3
 8008138:	460f      	mov	r7, r1
 800813a:	e719      	b.n	8007f70 <awe_fwWriteFile+0x310>
 800813c:	f8c5 80ec 	str.w	r8, [r5, #236]	@ 0xec
 8008140:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008144:	e764      	b.n	8008010 <awe_fwWriteFile+0x3b0>
 8008146:	f06f 0034 	mvn.w	r0, #52	@ 0x34
 800814a:	e700      	b.n	8007f4e <awe_fwWriteFile+0x2ee>
 800814c:	460f      	mov	r7, r1
 800814e:	f04f 0800 	mov.w	r8, #0
 8008152:	e70d      	b.n	8007f70 <awe_fwWriteFile+0x310>

08008154 <awe_fwReadFile>:
 8008154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008156:	460d      	mov	r5, r1
 8008158:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
 800815c:	b351      	cbz	r1, 80081b4 <awe_fwReadFile+0x60>
 800815e:	461e      	mov	r6, r3
 8008160:	f8d0 3090 	ldr.w	r3, [r0, #144]	@ 0x90
 8008164:	4617      	mov	r7, r2
 8008166:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
 8008168:	1959      	adds	r1, r3, r5
 800816a:	4291      	cmp	r1, r2
 800816c:	4604      	mov	r4, r0
 800816e:	d909      	bls.n	8008184 <awe_fwReadFile+0x30>
 8008170:	b13d      	cbz	r5, 8008182 <awe_fwReadFile+0x2e>
 8008172:	00aa      	lsls	r2, r5, #2
 8008174:	2100      	movs	r1, #0
 8008176:	4638      	mov	r0, r7
 8008178:	f025 fcec 	bl	802db54 <memset>
 800817c:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
 800817e:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8008182:	1ad5      	subs	r5, r2, r3
 8008184:	4639      	mov	r1, r7
 8008186:	69e3      	ldr	r3, [r4, #28]
 8008188:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
 800818c:	462a      	mov	r2, r5
 800818e:	4798      	blx	r3
 8008190:	b198      	cbz	r0, 80081ba <awe_fwReadFile+0x66>
 8008192:	f8d4 2098 	ldr.w	r2, [r4, #152]	@ 0x98
 8008196:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 800819a:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 800819e:	442b      	add	r3, r5
 80081a0:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 80081a4:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 80081a8:	b116      	cbz	r6, 80081b0 <awe_fwReadFile+0x5c>
 80081aa:	6035      	str	r5, [r6, #0]
 80081ac:	2000      	movs	r0, #0
 80081ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081b0:	4630      	mov	r0, r6
 80081b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081b4:	f06f 0034 	mvn.w	r0, #52	@ 0x34
 80081b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081ba:	f06f 0037 	mvn.w	r0, #55	@ 0x37
 80081be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080081c0 <awe_fwFindFile>:
 80081c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80081c4:	b083      	sub	sp, #12
 80081c6:	ab02      	add	r3, sp, #8
 80081c8:	2200      	movs	r2, #0
 80081ca:	f843 2d04 	str.w	r2, [r3, #-4]!
 80081ce:	460e      	mov	r6, r1
 80081d0:	4619      	mov	r1, r3
 80081d2:	4604      	mov	r4, r0
 80081d4:	f7ff fba4 	bl	8007920 <awe_fwGetFirstFile>
 80081d8:	2800      	cmp	r0, #0
 80081da:	f040 80c4 	bne.w	8008366 <awe_fwFindFile+0x1a6>
 80081de:	6833      	ldr	r3, [r6, #0]
 80081e0:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80081e4:	f000 80d4 	beq.w	8008390 <awe_fwFindFile+0x1d0>
 80081e8:	6872      	ldr	r2, [r6, #4]
 80081ea:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 80081ee:	f000 80d1 	beq.w	8008394 <awe_fwFindFile+0x1d4>
 80081f2:	68b2      	ldr	r2, [r6, #8]
 80081f4:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 80081f8:	f000 80ce 	beq.w	8008398 <awe_fwFindFile+0x1d8>
 80081fc:	68f2      	ldr	r2, [r6, #12]
 80081fe:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008202:	f000 80cb 	beq.w	800839c <awe_fwFindFile+0x1dc>
 8008206:	6932      	ldr	r2, [r6, #16]
 8008208:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 800820c:	f000 80c8 	beq.w	80083a0 <awe_fwFindFile+0x1e0>
 8008210:	6972      	ldr	r2, [r6, #20]
 8008212:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008216:	f000 80c7 	beq.w	80083a8 <awe_fwFindFile+0x1e8>
 800821a:	69b2      	ldr	r2, [r6, #24]
 800821c:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008220:	f000 80c4 	beq.w	80083ac <awe_fwFindFile+0x1ec>
 8008224:	69f2      	ldr	r2, [r6, #28]
 8008226:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 800822a:	f000 80bb 	beq.w	80083a4 <awe_fwFindFile+0x1e4>
 800822e:	6a32      	ldr	r2, [r6, #32]
 8008230:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008234:	f000 80be 	beq.w	80083b4 <awe_fwFindFile+0x1f4>
 8008238:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 800823a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 800823e:	f000 80b7 	beq.w	80083b0 <awe_fwFindFile+0x1f0>
 8008242:	6ab2      	ldr	r2, [r6, #40]	@ 0x28
 8008244:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008248:	f000 80b8 	beq.w	80083bc <awe_fwFindFile+0x1fc>
 800824c:	6af2      	ldr	r2, [r6, #44]	@ 0x2c
 800824e:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8008252:	f000 80b1 	beq.w	80083b8 <awe_fwFindFile+0x1f8>
 8008256:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 8008258:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 800825c:	f000 80b0 	beq.w	80083c0 <awe_fwFindFile+0x200>
 8008260:	270e      	movs	r7, #14
 8008262:	9d01      	ldr	r5, [sp, #4]
 8008264:	f04f 0800 	mov.w	r8, #0
 8008268:	f104 0948 	add.w	r9, r4, #72	@ 0x48
 800826c:	68aa      	ldr	r2, [r5, #8]
 800826e:	4293      	cmp	r3, r2
 8008270:	d14d      	bne.n	800830e <awe_fwFindFile+0x14e>
 8008272:	2f01      	cmp	r7, #1
 8008274:	d078      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 8008276:	6872      	ldr	r2, [r6, #4]
 8008278:	68eb      	ldr	r3, [r5, #12]
 800827a:	429a      	cmp	r2, r3
 800827c:	d147      	bne.n	800830e <awe_fwFindFile+0x14e>
 800827e:	2f02      	cmp	r7, #2
 8008280:	d072      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 8008282:	68b2      	ldr	r2, [r6, #8]
 8008284:	692b      	ldr	r3, [r5, #16]
 8008286:	429a      	cmp	r2, r3
 8008288:	d141      	bne.n	800830e <awe_fwFindFile+0x14e>
 800828a:	2f03      	cmp	r7, #3
 800828c:	d06c      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 800828e:	68f2      	ldr	r2, [r6, #12]
 8008290:	696b      	ldr	r3, [r5, #20]
 8008292:	429a      	cmp	r2, r3
 8008294:	d13b      	bne.n	800830e <awe_fwFindFile+0x14e>
 8008296:	2f04      	cmp	r7, #4
 8008298:	d066      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 800829a:	6932      	ldr	r2, [r6, #16]
 800829c:	69ab      	ldr	r3, [r5, #24]
 800829e:	429a      	cmp	r2, r3
 80082a0:	d135      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082a2:	2f05      	cmp	r7, #5
 80082a4:	d060      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082a6:	6972      	ldr	r2, [r6, #20]
 80082a8:	69eb      	ldr	r3, [r5, #28]
 80082aa:	429a      	cmp	r2, r3
 80082ac:	d12f      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082ae:	2f06      	cmp	r7, #6
 80082b0:	d05a      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082b2:	69b2      	ldr	r2, [r6, #24]
 80082b4:	6a2b      	ldr	r3, [r5, #32]
 80082b6:	429a      	cmp	r2, r3
 80082b8:	d129      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082ba:	2f07      	cmp	r7, #7
 80082bc:	d054      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082be:	69f2      	ldr	r2, [r6, #28]
 80082c0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80082c2:	429a      	cmp	r2, r3
 80082c4:	d123      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082c6:	2f08      	cmp	r7, #8
 80082c8:	d04e      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082ca:	6a32      	ldr	r2, [r6, #32]
 80082cc:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80082ce:	429a      	cmp	r2, r3
 80082d0:	d11d      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082d2:	2f09      	cmp	r7, #9
 80082d4:	d048      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082d6:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 80082d8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 80082da:	429a      	cmp	r2, r3
 80082dc:	d117      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082de:	2f0a      	cmp	r7, #10
 80082e0:	d042      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082e2:	6ab2      	ldr	r2, [r6, #40]	@ 0x28
 80082e4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80082e6:	429a      	cmp	r2, r3
 80082e8:	d111      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082ea:	2f0b      	cmp	r7, #11
 80082ec:	d03c      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082ee:	6af2      	ldr	r2, [r6, #44]	@ 0x2c
 80082f0:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80082f2:	429a      	cmp	r2, r3
 80082f4:	d10b      	bne.n	800830e <awe_fwFindFile+0x14e>
 80082f6:	2f0c      	cmp	r7, #12
 80082f8:	d036      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 80082fa:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80082fc:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80082fe:	429a      	cmp	r2, r3
 8008300:	d105      	bne.n	800830e <awe_fwFindFile+0x14e>
 8008302:	2f0e      	cmp	r7, #14
 8008304:	d130      	bne.n	8008368 <awe_fwFindFile+0x1a8>
 8008306:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 8008308:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 800830a:	429a      	cmp	r2, r3
 800830c:	d02c      	beq.n	8008368 <awe_fwFindFile+0x1a8>
 800830e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008310:	f8cd 8004 	str.w	r8, [sp, #4]
 8008314:	3301      	adds	r3, #1
 8008316:	d026      	beq.n	8008366 <awe_fwFindFile+0x1a6>
 8008318:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 800831c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800831e:	464d      	mov	r5, r9
 8008320:	69e3      	ldr	r3, [r4, #28]
 8008322:	4649      	mov	r1, r9
 8008324:	4798      	blx	r3
 8008326:	b1f0      	cbz	r0, 8008366 <awe_fwFindFile+0x1a6>
 8008328:	f8d4 c048 	ldr.w	ip, [r4, #72]	@ 0x48
 800832c:	f1bc 3fff 	cmp.w	ip, #4294967295
 8008330:	d019      	beq.n	8008366 <awe_fwFindFile+0x1a6>
 8008332:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8008334:	1c5a      	adds	r2, r3, #1
 8008336:	d016      	beq.n	8008366 <awe_fwFindFile+0x1a6>
 8008338:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 800833c:	f8d4 e088 	ldr.w	lr, [r4, #136]	@ 0x88
 8008340:	fbb3 f1f2 	udiv	r1, r3, r2
 8008344:	4470      	add	r0, lr
 8008346:	f1bc 0f00 	cmp.w	ip, #0
 800834a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800834e:	fb02 3311 	mls	r3, r2, r1, r3
 8008352:	da13      	bge.n	800837c <awe_fwFindFile+0x1bc>
 8008354:	f8c4 e0a8 	str.w	lr, [r4, #168]	@ 0xa8
 8008358:	b953      	cbnz	r3, 8008370 <awe_fwFindFile+0x1b0>
 800835a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800835e:	6833      	ldr	r3, [r6, #0]
 8008360:	f8cd 9004 	str.w	r9, [sp, #4]
 8008364:	e782      	b.n	800826c <awe_fwFindFile+0xac>
 8008366:	2500      	movs	r5, #0
 8008368:	4628      	mov	r0, r5
 800836a:	b003      	add	sp, #12
 800836c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008370:	1ad2      	subs	r2, r2, r3
 8008372:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8008376:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800837a:	e7f0      	b.n	800835e <awe_fwFindFile+0x19e>
 800837c:	1ad1      	subs	r1, r2, r3
 800837e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8008382:	2b00      	cmp	r3, #0
 8008384:	d0cc      	beq.n	8008320 <awe_fwFindFile+0x160>
 8008386:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800838a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800838e:	e7c7      	b.n	8008320 <awe_fwFindFile+0x160>
 8008390:	2701      	movs	r7, #1
 8008392:	e766      	b.n	8008262 <awe_fwFindFile+0xa2>
 8008394:	2702      	movs	r7, #2
 8008396:	e764      	b.n	8008262 <awe_fwFindFile+0xa2>
 8008398:	2703      	movs	r7, #3
 800839a:	e762      	b.n	8008262 <awe_fwFindFile+0xa2>
 800839c:	2704      	movs	r7, #4
 800839e:	e760      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083a0:	2705      	movs	r7, #5
 80083a2:	e75e      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083a4:	2708      	movs	r7, #8
 80083a6:	e75c      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083a8:	2706      	movs	r7, #6
 80083aa:	e75a      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083ac:	2707      	movs	r7, #7
 80083ae:	e758      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083b0:	270a      	movs	r7, #10
 80083b2:	e756      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083b4:	2709      	movs	r7, #9
 80083b6:	e754      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083b8:	270c      	movs	r7, #12
 80083ba:	e752      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083bc:	270b      	movs	r7, #11
 80083be:	e750      	b.n	8008262 <awe_fwFindFile+0xa2>
 80083c0:	270d      	movs	r7, #13
 80083c2:	e74e      	b.n	8008262 <awe_fwFindFile+0xa2>

080083c4 <awe_fwOpenFile>:
 80083c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083c8:	f8d0 708c 	ldr.w	r7, [r0, #140]	@ 0x8c
 80083cc:	b083      	sub	sp, #12
 80083ce:	2f00      	cmp	r7, #0
 80083d0:	f040 80d5 	bne.w	800857e <awe_fwOpenFile+0x1ba>
 80083d4:	460d      	mov	r5, r1
 80083d6:	4611      	mov	r1, r2
 80083d8:	4604      	mov	r4, r0
 80083da:	4698      	mov	r8, r3
 80083dc:	4616      	mov	r6, r2
 80083de:	f7ff feef 	bl	80081c0 <awe_fwFindFile>
 80083e2:	bb0d      	cbnz	r5, 8008428 <awe_fwOpenFile+0x64>
 80083e4:	2800      	cmp	r0, #0
 80083e6:	f000 80cd 	beq.w	8008584 <awe_fwOpenFile+0x1c0>
 80083ea:	6803      	ldr	r3, [r0, #0]
 80083ec:	3301      	adds	r3, #1
 80083ee:	f000 80c9 	beq.w	8008584 <awe_fwOpenFile+0x1c0>
 80083f2:	6842      	ldr	r2, [r0, #4]
 80083f4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80083f6:	fbb2 f1f3 	udiv	r1, r2, r3
 80083fa:	fb03 2111 	mls	r1, r3, r1, r2
 80083fe:	b329      	cbz	r1, 800844c <awe_fwOpenFile+0x88>
 8008400:	4413      	add	r3, r2
 8008402:	1a5b      	subs	r3, r3, r1
 8008404:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
 8008408:	eba1 0383 	sub.w	r3, r1, r3, lsl #2
 800840c:	2100      	movs	r1, #0
 800840e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8008412:	f8c8 2000 	str.w	r2, [r8]
 8008416:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800841a:	2301      	movs	r3, #1
 800841c:	4638      	mov	r0, r7
 800841e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8008422:	b003      	add	sp, #12
 8008424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008428:	b140      	cbz	r0, 800843c <awe_fwOpenFile+0x78>
 800842a:	6803      	ldr	r3, [r0, #0]
 800842c:	3301      	adds	r3, #1
 800842e:	d005      	beq.n	800843c <awe_fwOpenFile+0x78>
 8008430:	f06f 0733 	mvn.w	r7, #51	@ 0x33
 8008434:	4638      	mov	r0, r7
 8008436:	b003      	add	sp, #12
 8008438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800843c:	062b      	lsls	r3, r5, #24
 800843e:	d507      	bpl.n	8008450 <awe_fwOpenFile+0x8c>
 8008440:	f06f 0732 	mvn.w	r7, #50	@ 0x32
 8008444:	4638      	mov	r0, r7
 8008446:	b003      	add	sp, #12
 8008448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800844c:	4613      	mov	r3, r2
 800844e:	e7d9      	b.n	8008404 <awe_fwOpenFile+0x40>
 8008450:	e9d4 3209 	ldrd	r3, r2, [r4, #36]	@ 0x24
 8008454:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8008458:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800845a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
 800845e:	eba0 0a01 	sub.w	sl, r0, r1
 8008462:	f10d 0908 	add.w	r9, sp, #8
 8008466:	ea4f 0a9a 	mov.w	sl, sl, lsr #2
 800846a:	fbba faf2 	udiv	sl, sl, r2
 800846e:	ea4f 125a 	mov.w	r2, sl, lsr #5
 8008472:	f849 2d04 	str.w	r2, [r9, #-4]!
 8008476:	eb03 0b82 	add.w	fp, r3, r2, lsl #2
 800847a:	062d      	lsls	r5, r5, #24
 800847c:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8008480:	4649      	mov	r1, r9
 8008482:	4658      	mov	r0, fp
 8008484:	69e3      	ldr	r3, [r4, #28]
 8008486:	2201      	movs	r2, #1
 8008488:	4798      	blx	r3
 800848a:	2800      	cmp	r0, #0
 800848c:	d071      	beq.n	8008572 <awe_fwOpenFile+0x1ae>
 800848e:	f00a 0a1f 	and.w	sl, sl, #31
 8008492:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8008496:	9a01      	ldr	r2, [sp, #4]
 8008498:	fa23 fa0a 	lsr.w	sl, r3, sl
 800849c:	ea1a 0f02 	tst.w	sl, r2
 80084a0:	d067      	beq.n	8008572 <awe_fwOpenFile+0x1ae>
 80084a2:	ea22 020a 	bic.w	r2, r2, sl
 80084a6:	9201      	str	r2, [sp, #4]
 80084a8:	4658      	mov	r0, fp
 80084aa:	69a3      	ldr	r3, [r4, #24]
 80084ac:	2201      	movs	r2, #1
 80084ae:	4649      	mov	r1, r9
 80084b0:	4798      	blx	r3
 80084b2:	2800      	cmp	r0, #0
 80084b4:	d05d      	beq.n	8008572 <awe_fwOpenFile+0x1ae>
 80084b6:	f8d4 50a0 	ldr.w	r5, [r4, #160]	@ 0xa0
 80084ba:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80084be:	69a3      	ldr	r3, [r4, #24]
 80084c0:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 80084c4:	43ed      	mvns	r5, r5
 80084c6:	f005 457f 	and.w	r5, r5, #4278190080	@ 0xff000000
 80084ca:	1a82      	subs	r2, r0, r2
 80084cc:	fbb2 f2f1 	udiv	r2, r2, r1
 80084d0:	442a      	add	r2, r5
 80084d2:	9201      	str	r2, [sp, #4]
 80084d4:	4649      	mov	r1, r9
 80084d6:	2201      	movs	r2, #1
 80084d8:	4798      	blx	r3
 80084da:	2800      	cmp	r0, #0
 80084dc:	d04c      	beq.n	8008578 <awe_fwOpenFile+0x1b4>
 80084de:	6833      	ldr	r3, [r6, #0]
 80084e0:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80084e4:	d051      	beq.n	800858a <awe_fwOpenFile+0x1c6>
 80084e6:	6873      	ldr	r3, [r6, #4]
 80084e8:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80084ec:	d04f      	beq.n	800858e <awe_fwOpenFile+0x1ca>
 80084ee:	68b3      	ldr	r3, [r6, #8]
 80084f0:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80084f4:	d04d      	beq.n	8008592 <awe_fwOpenFile+0x1ce>
 80084f6:	68f3      	ldr	r3, [r6, #12]
 80084f8:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80084fc:	d04b      	beq.n	8008596 <awe_fwOpenFile+0x1d2>
 80084fe:	6933      	ldr	r3, [r6, #16]
 8008500:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8008504:	d049      	beq.n	800859a <awe_fwOpenFile+0x1d6>
 8008506:	6973      	ldr	r3, [r6, #20]
 8008508:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800850c:	d047      	beq.n	800859e <awe_fwOpenFile+0x1da>
 800850e:	69b3      	ldr	r3, [r6, #24]
 8008510:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8008514:	d045      	beq.n	80085a2 <awe_fwOpenFile+0x1de>
 8008516:	69f3      	ldr	r3, [r6, #28]
 8008518:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800851c:	d043      	beq.n	80085a6 <awe_fwOpenFile+0x1e2>
 800851e:	6a33      	ldr	r3, [r6, #32]
 8008520:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8008524:	d041      	beq.n	80085aa <awe_fwOpenFile+0x1e6>
 8008526:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 8008528:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800852c:	d03f      	beq.n	80085ae <awe_fwOpenFile+0x1ea>
 800852e:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 8008530:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8008534:	d03d      	beq.n	80085b2 <awe_fwOpenFile+0x1ee>
 8008536:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 8008538:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800853c:	d03b      	beq.n	80085b6 <awe_fwOpenFile+0x1f2>
 800853e:	6b33      	ldr	r3, [r6, #48]	@ 0x30
 8008540:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8008544:	d039      	beq.n	80085ba <awe_fwOpenFile+0x1f6>
 8008546:	220e      	movs	r2, #14
 8008548:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 800854c:	69a3      	ldr	r3, [r4, #24]
 800854e:	4631      	mov	r1, r6
 8008550:	3008      	adds	r0, #8
 8008552:	4798      	blx	r3
 8008554:	b180      	cbz	r0, 8008578 <awe_fwOpenFile+0x1b4>
 8008556:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800855a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800855c:	441a      	add	r2, r3
 800855e:	2300      	movs	r3, #0
 8008560:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 8008564:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8008568:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
 800856c:	f8c8 3000 	str.w	r3, [r8]
 8008570:	e753      	b.n	800841a <awe_fwOpenFile+0x56>
 8008572:	f06f 0735 	mvn.w	r7, #53	@ 0x35
 8008576:	e75d      	b.n	8008434 <awe_fwOpenFile+0x70>
 8008578:	f06f 0738 	mvn.w	r7, #56	@ 0x38
 800857c:	e75a      	b.n	8008434 <awe_fwOpenFile+0x70>
 800857e:	f06f 0730 	mvn.w	r7, #48	@ 0x30
 8008582:	e757      	b.n	8008434 <awe_fwOpenFile+0x70>
 8008584:	f06f 0731 	mvn.w	r7, #49	@ 0x31
 8008588:	e754      	b.n	8008434 <awe_fwOpenFile+0x70>
 800858a:	2201      	movs	r2, #1
 800858c:	e7dc      	b.n	8008548 <awe_fwOpenFile+0x184>
 800858e:	2202      	movs	r2, #2
 8008590:	e7da      	b.n	8008548 <awe_fwOpenFile+0x184>
 8008592:	2203      	movs	r2, #3
 8008594:	e7d8      	b.n	8008548 <awe_fwOpenFile+0x184>
 8008596:	2204      	movs	r2, #4
 8008598:	e7d6      	b.n	8008548 <awe_fwOpenFile+0x184>
 800859a:	2205      	movs	r2, #5
 800859c:	e7d4      	b.n	8008548 <awe_fwOpenFile+0x184>
 800859e:	2206      	movs	r2, #6
 80085a0:	e7d2      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085a2:	2207      	movs	r2, #7
 80085a4:	e7d0      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085a6:	2208      	movs	r2, #8
 80085a8:	e7ce      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085aa:	2209      	movs	r2, #9
 80085ac:	e7cc      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085ae:	220a      	movs	r2, #10
 80085b0:	e7ca      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085b2:	220b      	movs	r2, #11
 80085b4:	e7c8      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085b6:	220c      	movs	r2, #12
 80085b8:	e7c6      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085ba:	220d      	movs	r2, #13
 80085bc:	e7c4      	b.n	8008548 <awe_fwOpenFile+0x184>
 80085be:	bf00      	nop

080085c0 <awe_fwDeleteFile>:
 80085c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80085c2:	f8d0 708c 	ldr.w	r7, [r0, #140]	@ 0x8c
 80085c6:	bb6f      	cbnz	r7, 8008624 <awe_fwDeleteFile+0x64>
 80085c8:	4604      	mov	r4, r0
 80085ca:	f7ff fdf9 	bl	80081c0 <awe_fwFindFile>
 80085ce:	b360      	cbz	r0, 800862a <awe_fwDeleteFile+0x6a>
 80085d0:	6803      	ldr	r3, [r0, #0]
 80085d2:	3301      	adds	r3, #1
 80085d4:	d029      	beq.n	800862a <awe_fwDeleteFile+0x6a>
 80085d6:	f104 0548 	add.w	r5, r4, #72	@ 0x48
 80085da:	4629      	mov	r1, r5
 80085dc:	69e3      	ldr	r3, [r4, #28]
 80085de:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
 80085e2:	2201      	movs	r2, #1
 80085e4:	4798      	blx	r3
 80085e6:	b330      	cbz	r0, 8008636 <awe_fwDeleteFile+0x76>
 80085e8:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80085ea:	69a6      	ldr	r6, [r4, #24]
 80085ec:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
 80085f0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80085f4:	64a3      	str	r3, [r4, #72]	@ 0x48
 80085f6:	2201      	movs	r2, #1
 80085f8:	4629      	mov	r1, r5
 80085fa:	47b0      	blx	r6
 80085fc:	b1c0      	cbz	r0, 8008630 <awe_fwDeleteFile+0x70>
 80085fe:	4629      	mov	r1, r5
 8008600:	69e3      	ldr	r3, [r4, #28]
 8008602:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
 8008606:	2201      	movs	r2, #1
 8008608:	4798      	blx	r3
 800860a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 800860c:	f8d4 2104 	ldr.w	r2, [r4, #260]	@ 0x104
 8008610:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
 8008614:	1a52      	subs	r2, r2, r1
 8008616:	440b      	add	r3, r1
 8008618:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
 800861c:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
 8008620:	4638      	mov	r0, r7
 8008622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008624:	f06f 0730 	mvn.w	r7, #48	@ 0x30
 8008628:	e7fa      	b.n	8008620 <awe_fwDeleteFile+0x60>
 800862a:	f06f 0731 	mvn.w	r7, #49	@ 0x31
 800862e:	e7f7      	b.n	8008620 <awe_fwDeleteFile+0x60>
 8008630:	f06f 0738 	mvn.w	r7, #56	@ 0x38
 8008634:	e7f4      	b.n	8008620 <awe_fwDeleteFile+0x60>
 8008636:	f06f 0737 	mvn.w	r7, #55	@ 0x37
 800863a:	e7f1      	b.n	8008620 <awe_fwDeleteFile+0x60>

0800863c <awe_fwEraseFlash>:
 800863c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008640:	4604      	mov	r4, r0
 8008642:	e9d4 310d 	ldrd	r3, r1, [r4, #52]	@ 0x34
 8008646:	1e45      	subs	r5, r0, #1
 8008648:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 800864a:	1cee      	adds	r6, r5, #3
 800864c:	eba3 0300 	sub.w	r3, r3, r0
 8008650:	b092      	sub	sp, #72	@ 0x48
 8008652:	fbb3 f1f1 	udiv	r1, r3, r1
 8008656:	d80a      	bhi.n	800866e <awe_fwEraseFlash+0x32>
 8008658:	2300      	movs	r3, #0
 800865a:	e9c4 3323 	strd	r3, r3, [r4, #140]	@ 0x8c
 800865e:	e9c4 3325 	strd	r3, r3, [r4, #148]	@ 0x94
 8008662:	f04f 32ff 	mov.w	r2, #4294967295
 8008666:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
 800866a:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 800866e:	6963      	ldr	r3, [r4, #20]
 8008670:	4798      	blx	r3
 8008672:	b198      	cbz	r0, 800869c <awe_fwEraseFlash+0x60>
 8008674:	6923      	ldr	r3, [r4, #16]
 8008676:	4798      	blx	r3
 8008678:	b180      	cbz	r0, 800869c <awe_fwEraseFlash+0x60>
 800867a:	3503      	adds	r5, #3
 800867c:	d80e      	bhi.n	800869c <awe_fwEraseFlash+0x60>
 800867e:	6923      	ldr	r3, [r4, #16]
 8008680:	b163      	cbz	r3, 800869c <awe_fwEraseFlash+0x60>
 8008682:	6963      	ldr	r3, [r4, #20]
 8008684:	b153      	cbz	r3, 800869c <awe_fwEraseFlash+0x60>
 8008686:	69a3      	ldr	r3, [r4, #24]
 8008688:	b143      	cbz	r3, 800869c <awe_fwEraseFlash+0x60>
 800868a:	69e5      	ldr	r5, [r4, #28]
 800868c:	b135      	cbz	r5, 800869c <awe_fwEraseFlash+0x60>
 800868e:	6827      	ldr	r7, [r4, #0]
 8008690:	b127      	cbz	r7, 800869c <awe_fwEraseFlash+0x60>
 8008692:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8008696:	f1b8 0f00 	cmp.w	r8, #0
 800869a:	d104      	bne.n	80086a6 <awe_fwEraseFlash+0x6a>
 800869c:	f06f 0039 	mvn.w	r0, #57	@ 0x39
 80086a0:	b012      	add	sp, #72	@ 0x48
 80086a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80086a6:	4e8f      	ldr	r6, [pc, #572]	@ (80088e4 <awe_fwEraseFlash+0x2a8>)
 80086a8:	22cc      	movs	r2, #204	@ 0xcc
 80086aa:	2100      	movs	r1, #0
 80086ac:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80086b0:	f025 fa50 	bl	802db54 <memset>
 80086b4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80086b6:	f8c4 00f0 	str.w	r0, [r4, #240]	@ 0xf0
 80086ba:	f8c4 10f4 	str.w	r1, [r4, #244]	@ 0xf4
 80086be:	f8c4 20f8 	str.w	r2, [r4, #248]	@ 0xf8
 80086c2:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
 80086c6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80086c8:	f8c4 0100 	str.w	r0, [r4, #256]	@ 0x100
 80086cc:	f8c4 1104 	str.w	r1, [r4, #260]	@ 0x104
 80086d0:	f8c4 2108 	str.w	r2, [r4, #264]	@ 0x108
 80086d4:	2110      	movs	r1, #16
 80086d6:	2240      	movs	r2, #64	@ 0x40
 80086d8:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
 80086dc:	68a0      	ldr	r0, [r4, #8]
 80086de:	6367      	str	r7, [r4, #52]	@ 0x34
 80086e0:	f04f 33ff 	mov.w	r3, #4294967295
 80086e4:	e9c4 120a 	strd	r1, r2, [r4, #40]	@ 0x28
 80086e8:	f8c4 8038 	str.w	r8, [r4, #56]	@ 0x38
 80086ec:	6420      	str	r0, [r4, #64]	@ 0x40
 80086ee:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 80086f2:	a902      	add	r1, sp, #8
 80086f4:	2205      	movs	r2, #5
 80086f6:	47a8      	blx	r5
 80086f8:	2800      	cmp	r0, #0
 80086fa:	d0cf      	beq.n	800869c <awe_fwEraseFlash+0x60>
 80086fc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8008700:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8008702:	f244 1357 	movw	r3, #16727	@ 0x4157
 8008706:	2100      	movs	r1, #0
 8008708:	429a      	cmp	r2, r3
 800870a:	6461      	str	r1, [r4, #68]	@ 0x44
 800870c:	d050      	beq.n	80087b0 <awe_fwEraseFlash+0x174>
 800870e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008710:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
 8008714:	1b9d      	subs	r5, r3, r6
 8008716:	08ad      	lsrs	r5, r5, #2
 8008718:	fbb5 f0f2 	udiv	r0, r5, r2
 800871c:	fb02 5010 	mls	r0, r2, r0, r5
 8008720:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8008724:	eb00 0c01 	add.w	ip, r0, r1
 8008728:	f025 051f 	bic.w	r5, r5, #31
 800872c:	fbb5 f6f2 	udiv	r6, r5, r2
 8008730:	0976      	lsrs	r6, r6, #5
 8008732:	fbb6 f6f2 	udiv	r6, r6, r2
 8008736:	fb02 2606 	mla	r6, r2, r6, r2
 800873a:	eb0c 0386 	add.w	r3, ip, r6, lsl #2
 800873e:	f3c3 070b 	ubfx	r7, r3, #0, #12
 8008742:	6420      	str	r0, [r4, #64]	@ 0x40
 8008744:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
 8008748:	6323      	str	r3, [r4, #48]	@ 0x30
 800874a:	b147      	cbz	r7, 800875e <awe_fwEraseFlash+0x122>
 800874c:	f5c7 5780 	rsb	r7, r7, #4096	@ 0x1000
 8008750:	fbb7 fef1 	udiv	lr, r7, r1
 8008754:	fb0e 3301 	mla	r3, lr, r1, r3
 8008758:	6323      	str	r3, [r4, #48]	@ 0x30
 800875a:	f8c4 e044 	str.w	lr, [r4, #68]	@ 0x44
 800875e:	4962      	ldr	r1, [pc, #392]	@ (80088e8 <awe_fwEraseFlash+0x2ac>)
 8008760:	9106      	str	r1, [sp, #24]
 8008762:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8008766:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 800876a:	69a3      	ldr	r3, [r4, #24]
 800876c:	2205      	movs	r2, #5
 800876e:	a902      	add	r1, sp, #8
 8008770:	4798      	blx	r3
 8008772:	2800      	cmp	r0, #0
 8008774:	d092      	beq.n	800869c <awe_fwEraseFlash+0x60>
 8008776:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008778:	fbb6 f2f2 	udiv	r2, r6, r2
 800877c:	3201      	adds	r2, #1
 800877e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008780:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8008782:	fbb7 f7f3 	udiv	r7, r7, r3
 8008786:	443a      	add	r2, r7
 8008788:	2100      	movs	r1, #0
 800878a:	6462      	str	r2, [r4, #68]	@ 0x44
 800878c:	0952      	lsrs	r2, r2, #5
 800878e:	441e      	add	r6, r3
 8008790:	9102      	str	r1, [sp, #8]
 8008792:	d045      	beq.n	8008820 <awe_fwEraseFlash+0x1e4>
 8008794:	eb06 0782 	add.w	r7, r6, r2, lsl #2
 8008798:	e001      	b.n	800879e <awe_fwEraseFlash+0x162>
 800879a:	42be      	cmp	r6, r7
 800879c:	d041      	beq.n	8008822 <awe_fwEraseFlash+0x1e6>
 800879e:	4630      	mov	r0, r6
 80087a0:	69a3      	ldr	r3, [r4, #24]
 80087a2:	2201      	movs	r2, #1
 80087a4:	a902      	add	r1, sp, #8
 80087a6:	4798      	blx	r3
 80087a8:	3604      	adds	r6, #4
 80087aa:	2800      	cmp	r0, #0
 80087ac:	d1f5      	bne.n	800879a <awe_fwEraseFlash+0x15e>
 80087ae:	e775      	b.n	800869c <awe_fwEraseFlash+0x60>
 80087b0:	e9dd 3504 	ldrd	r3, r5, [sp, #16]
 80087b4:	9a02      	ldr	r2, [sp, #8]
 80087b6:	62a2      	str	r2, [r4, #40]	@ 0x28
 80087b8:	0091      	lsls	r1, r2, #2
 80087ba:	1b5b      	subs	r3, r3, r5
 80087bc:	199d      	adds	r5, r3, r6
 80087be:	440e      	add	r6, r1
 80087c0:	62e1      	str	r1, [r4, #44]	@ 0x2c
 80087c2:	6266      	str	r6, [r4, #36]	@ 0x24
 80087c4:	6325      	str	r5, [r4, #48]	@ 0x30
 80087c6:	69e3      	ldr	r3, [r4, #28]
 80087c8:	a902      	add	r1, sp, #8
 80087ca:	4628      	mov	r0, r5
 80087cc:	4798      	blx	r3
 80087ce:	2800      	cmp	r0, #0
 80087d0:	f43f af64 	beq.w	800869c <awe_fwEraseFlash+0x60>
 80087d4:	9b02      	ldr	r3, [sp, #8]
 80087d6:	1c5a      	adds	r2, r3, #1
 80087d8:	d058      	beq.n	800888c <awe_fwEraseFlash+0x250>
 80087da:	2b00      	cmp	r3, #0
 80087dc:	9903      	ldr	r1, [sp, #12]
 80087de:	db14      	blt.n	800880a <awe_fwEraseFlash+0x1ce>
 80087e0:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 80087e4:	fbb1 f3f2 	udiv	r3, r1, r2
 80087e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80087ec:	fb02 1313 	mls	r3, r2, r3, r1
 80087f0:	1ad1      	subs	r1, r2, r3
 80087f2:	4405      	add	r5, r0
 80087f4:	2b00      	cmp	r3, #0
 80087f6:	d0e6      	beq.n	80087c6 <awe_fwEraseFlash+0x18a>
 80087f8:	eb05 0581 	add.w	r5, r5, r1, lsl #2
 80087fc:	69e3      	ldr	r3, [r4, #28]
 80087fe:	a902      	add	r1, sp, #8
 8008800:	4628      	mov	r0, r5
 8008802:	4798      	blx	r3
 8008804:	2800      	cmp	r0, #0
 8008806:	d1e5      	bne.n	80087d4 <awe_fwEraseFlash+0x198>
 8008808:	e748      	b.n	800869c <awe_fwEraseFlash+0x60>
 800880a:	1c4b      	adds	r3, r1, #1
 800880c:	d0e8      	beq.n	80087e0 <awe_fwEraseFlash+0x1a4>
 800880e:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8008810:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
 8008814:	3201      	adds	r2, #1
 8008816:	440b      	add	r3, r1
 8008818:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800881a:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
 800881e:	e7df      	b.n	80087e0 <awe_fwEraseFlash+0x1a4>
 8008820:	4637      	mov	r7, r6
 8008822:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8008824:	f012 011f 	ands.w	r1, r2, #31
 8008828:	d00c      	beq.n	8008844 <awe_fwEraseFlash+0x208>
 800882a:	f04f 33ff 	mov.w	r3, #4294967295
 800882e:	40cb      	lsrs	r3, r1
 8008830:	9302      	str	r3, [sp, #8]
 8008832:	a902      	add	r1, sp, #8
 8008834:	4638      	mov	r0, r7
 8008836:	69a3      	ldr	r3, [r4, #24]
 8008838:	2201      	movs	r2, #1
 800883a:	4798      	blx	r3
 800883c:	2800      	cmp	r0, #0
 800883e:	f43f af2d 	beq.w	800869c <awe_fwEraseFlash+0x60>
 8008842:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8008844:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8008846:	f8d4 c040 	ldr.w	ip, [r4, #64]	@ 0x40
 800884a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800884c:	2700      	movs	r7, #0
 800884e:	f8c4 7104 	str.w	r7, [r4, #260]	@ 0x104
 8008852:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008854:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8008856:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
 800885a:	fb02 f203 	mul.w	r2, r2, r3
 800885e:	fb01 f103 	mul.w	r1, r1, r3
 8008862:	4413      	add	r3, r2
 8008864:	eba0 000c 	sub.w	r0, r0, ip
 8008868:	440b      	add	r3, r1
 800886a:	08b6      	lsrs	r6, r6, #2
 800886c:	eb01 0190 	add.w	r1, r1, r0, lsr #2
 8008870:	1bd2      	subs	r2, r2, r7
 8008872:	1aeb      	subs	r3, r5, r3
 8008874:	2000      	movs	r0, #0
 8008876:	f8c4 60f4 	str.w	r6, [r4, #244]	@ 0xf4
 800887a:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 800887e:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
 8008882:	f8c4 10fc 	str.w	r1, [r4, #252]	@ 0xfc
 8008886:	b012      	add	sp, #72	@ 0x48
 8008888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800888c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800888e:	e009      	b.n	80088a4 <awe_fwEraseFlash+0x268>
 8008890:	9b01      	ldr	r3, [sp, #4]
 8008892:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8008894:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008896:	2b00      	cmp	r3, #0
 8008898:	f102 0120 	add.w	r1, r2, #32
 800889c:	d10b      	bne.n	80088b6 <awe_fwEraseFlash+0x27a>
 800889e:	4285      	cmp	r5, r0
 80088a0:	6461      	str	r1, [r4, #68]	@ 0x44
 80088a2:	d01d      	beq.n	80088e0 <awe_fwEraseFlash+0x2a4>
 80088a4:	4628      	mov	r0, r5
 80088a6:	69e3      	ldr	r3, [r4, #28]
 80088a8:	2201      	movs	r2, #1
 80088aa:	a901      	add	r1, sp, #4
 80088ac:	4798      	blx	r3
 80088ae:	3504      	adds	r5, #4
 80088b0:	2800      	cmp	r0, #0
 80088b2:	d1ed      	bne.n	8008890 <awe_fwEraseFlash+0x254>
 80088b4:	e6f2      	b.n	800869c <awe_fwEraseFlash+0x60>
 80088b6:	db0a      	blt.n	80088ce <awe_fwEraseFlash+0x292>
 80088b8:	3201      	adds	r2, #1
 80088ba:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 80088be:	e000      	b.n	80088c2 <awe_fwEraseFlash+0x286>
 80088c0:	462a      	mov	r2, r5
 80088c2:	0849      	lsrs	r1, r1, #1
 80088c4:	420b      	tst	r3, r1
 80088c6:	f102 0501 	add.w	r5, r2, #1
 80088ca:	d0f9      	beq.n	80088c0 <awe_fwEraseFlash+0x284>
 80088cc:	6462      	str	r2, [r4, #68]	@ 0x44
 80088ce:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 80088d0:	f8d4 c040 	ldr.w	ip, [r4, #64]	@ 0x40
 80088d4:	f8d4 7104 	ldr.w	r7, [r4, #260]	@ 0x104
 80088d8:	eba6 050c 	sub.w	r5, r6, ip
 80088dc:	08ad      	lsrs	r5, r5, #2
 80088de:	e7b8      	b.n	8008852 <awe_fwEraseFlash+0x216>
 80088e0:	460a      	mov	r2, r1
 80088e2:	e7f4      	b.n	80088ce <awe_fwEraseFlash+0x292>
 80088e4:	20000000 	.word	0x20000000
 80088e8:	41570001 	.word	0x41570001

080088ec <awe_fwExecuteFile>:
 80088ec:	4611      	mov	r1, r2
 80088ee:	2200      	movs	r2, #0
 80088f0:	f00d b80a 	b.w	8015908 <awe_loadAWBfromFlash>

080088f4 <awe_fwGetFileSystemInfo>:
 80088f4:	b1a9      	cbz	r1, 8008922 <awe_fwGetFileSystemInfo+0x2e>
 80088f6:	b470      	push	{r4, r5, r6}
 80088f8:	4603      	mov	r3, r0
 80088fa:	2000      	movs	r0, #0
 80088fc:	f853 5ff0 	ldr.w	r5, [r3, #240]!
 8008900:	685c      	ldr	r4, [r3, #4]
 8008902:	689a      	ldr	r2, [r3, #8]
 8008904:	68de      	ldr	r6, [r3, #12]
 8008906:	60ce      	str	r6, [r1, #12]
 8008908:	600d      	str	r5, [r1, #0]
 800890a:	604c      	str	r4, [r1, #4]
 800890c:	608a      	str	r2, [r1, #8]
 800890e:	691d      	ldr	r5, [r3, #16]
 8008910:	695c      	ldr	r4, [r3, #20]
 8008912:	69de      	ldr	r6, [r3, #28]
 8008914:	699a      	ldr	r2, [r3, #24]
 8008916:	618a      	str	r2, [r1, #24]
 8008918:	61ce      	str	r6, [r1, #28]
 800891a:	610d      	str	r5, [r1, #16]
 800891c:	614c      	str	r4, [r1, #20]
 800891e:	bc70      	pop	{r4, r5, r6}
 8008920:	4770      	bx	lr
 8008922:	f06f 0010 	mvn.w	r0, #16
 8008926:	4770      	bx	lr

08008928 <awe_fwGetFileAttribute>:
 8008928:	78c0      	ldrb	r0, [r0, #3]
 800892a:	f080 00ff 	eor.w	r0, r0, #255	@ 0xff
 800892e:	4770      	bx	lr

08008930 <awe_fwInitFFS>:
 8008930:	b1a8      	cbz	r0, 800895e <awe_fwInitFFS+0x2e>
 8008932:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8008934:	b18b      	cbz	r3, 800895a <awe_fwInitFFS+0x2a>
 8008936:	691b      	ldr	r3, [r3, #16]
 8008938:	b1bb      	cbz	r3, 800896a <awe_fwInitFFS+0x3a>
 800893a:	b510      	push	{r4, lr}
 800893c:	4604      	mov	r4, r0
 800893e:	4798      	blx	r3
 8008940:	b180      	cbz	r0, 8008964 <awe_fwInitFFS+0x34>
 8008942:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
 8008946:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8008948:	4798      	blx	r3
 800894a:	b158      	cbz	r0, 8008964 <awe_fwInitFFS+0x34>
 800894c:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 8008950:	6e21      	ldr	r1, [r4, #96]	@ 0x60
 8008952:	4620      	mov	r0, r4
 8008954:	4798      	blx	r3
 8008956:	2000      	movs	r0, #0
 8008958:	bd10      	pop	{r4, pc}
 800895a:	4618      	mov	r0, r3
 800895c:	4770      	bx	lr
 800895e:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 8008962:	4770      	bx	lr
 8008964:	f06f 0049 	mvn.w	r0, #73	@ 0x49
 8008968:	bd10      	pop	{r4, pc}
 800896a:	f06f 0049 	mvn.w	r0, #73	@ 0x49
 800896e:	4770      	bx	lr

08008970 <awe_initFlashFS>:
 8008970:	b410      	push	{r4}
 8008972:	4a06      	ldr	r2, [pc, #24]	@ (800898c <awe_initFlashFS+0x1c>)
 8008974:	4c06      	ldr	r4, [pc, #24]	@ (8008990 <awe_initFlashFS+0x20>)
 8008976:	4b07      	ldr	r3, [pc, #28]	@ (8008994 <awe_initFlashFS+0x24>)
 8008978:	f8c0 4104 	str.w	r4, [r0, #260]	@ 0x104
 800897c:	6601      	str	r1, [r0, #96]	@ 0x60
 800897e:	f8c0 2108 	str.w	r2, [r0, #264]	@ 0x108
 8008982:	f8c0 310c 	str.w	r3, [r0, #268]	@ 0x10c
 8008986:	f85d 4b04 	ldr.w	r4, [sp], #4
 800898a:	4770      	bx	lr
 800898c:	0800799d 	.word	0x0800799d
 8008990:	08007685 	.word	0x08007685
 8008994:	08008999 	.word	0x08008999

08008998 <awe_fwFlashFileSystemCommandHandler>:
 8008998:	b570      	push	{r4, r5, r6, lr}
 800899a:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 800899c:	6801      	ldr	r1, [r0, #0]
 800899e:	682b      	ldr	r3, [r5, #0]
 80089a0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80089a4:	4291      	cmp	r1, r2
 80089a6:	b082      	sub	sp, #8
 80089a8:	f040 80f7 	bne.w	8008b9a <awe_fwFlashFileSystemCommandHandler+0x202>
 80089ac:	b2db      	uxtb	r3, r3
 80089ae:	3b20      	subs	r3, #32
 80089b0:	4604      	mov	r4, r0
 80089b2:	2b37      	cmp	r3, #55	@ 0x37
 80089b4:	f200 80f1 	bhi.w	8008b9a <awe_fwFlashFileSystemCommandHandler+0x202>
 80089b8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80089bc:	00570045 	.word	0x00570045
 80089c0:	00980083 	.word	0x00980083
 80089c4:	00bf00ab 	.word	0x00bf00ab
 80089c8:	00c900c3 	.word	0x00c900c3
 80089cc:	00ef00cf 	.word	0x00ef00cf
 80089d0:	00ef00d3 	.word	0x00ef00d3
 80089d4:	00ef00e2 	.word	0x00ef00e2
 80089d8:	00ef00ef 	.word	0x00ef00ef
 80089dc:	00ef00ef 	.word	0x00ef00ef
 80089e0:	00ef00ef 	.word	0x00ef00ef
 80089e4:	00ef00ef 	.word	0x00ef00ef
 80089e8:	00ef00ef 	.word	0x00ef00ef
 80089ec:	00ef00ef 	.word	0x00ef00ef
 80089f0:	00ef00ef 	.word	0x00ef00ef
 80089f4:	00ef00ef 	.word	0x00ef00ef
 80089f8:	00ef00ef 	.word	0x00ef00ef
 80089fc:	00ef00ef 	.word	0x00ef00ef
 8008a00:	00ef00ef 	.word	0x00ef00ef
 8008a04:	00ef00ef 	.word	0x00ef00ef
 8008a08:	00ef00ef 	.word	0x00ef00ef
 8008a0c:	00ef00ef 	.word	0x00ef00ef
 8008a10:	00ef00ef 	.word	0x00ef00ef
 8008a14:	00ef00ef 	.word	0x00ef00ef
 8008a18:	00ef00ef 	.word	0x00ef00ef
 8008a1c:	00ef00ef 	.word	0x00ef00ef
 8008a20:	00ef00ef 	.word	0x00ef00ef
 8008a24:	00ef00ef 	.word	0x00ef00ef
 8008a28:	003800ef 	.word	0x003800ef
 8008a2c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8008a2e:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8008a30:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8008a34:	6002      	str	r2, [r0, #0]
 8008a36:	68db      	ldr	r3, [r3, #12]
 8008a38:	6043      	str	r3, [r0, #4]
 8008a3a:	f00c ffdf 	bl	80159fc <ComputeCheckSum>
 8008a3e:	2600      	movs	r6, #0
 8008a40:	4630      	mov	r0, r6
 8008a42:	b002      	add	sp, #8
 8008a44:	bd70      	pop	{r4, r5, r6, pc}
 8008a46:	a901      	add	r1, sp, #4
 8008a48:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008a4a:	f7fe ff69 	bl	8007920 <awe_fwGetFirstFile>
 8008a4e:	4605      	mov	r5, r0
 8008a50:	b190      	cbz	r0, 8008a78 <awe_fwFlashFileSystemCommandHandler+0xe0>
 8008a52:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a54:	605d      	str	r5, [r3, #4]
 8008a56:	f44f 1298 	mov.w	r2, #1245184	@ 0x130000
 8008a5a:	4618      	mov	r0, r3
 8008a5c:	601a      	str	r2, [r3, #0]
 8008a5e:	f00c ffcd 	bl	80159fc <ComputeCheckSum>
 8008a62:	2600      	movs	r6, #0
 8008a64:	4630      	mov	r0, r6
 8008a66:	b002      	add	sp, #8
 8008a68:	bd70      	pop	{r4, r5, r6, pc}
 8008a6a:	a901      	add	r1, sp, #4
 8008a6c:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008a6e:	f7ff f82f 	bl	8007ad0 <awe_fwGetNextFile>
 8008a72:	4605      	mov	r5, r0
 8008a74:	2800      	cmp	r0, #0
 8008a76:	d1ec      	bne.n	8008a52 <awe_fwFlashFileSystemCommandHandler+0xba>
 8008a78:	9801      	ldr	r0, [sp, #4]
 8008a7a:	f7ff ff55 	bl	8008928 <awe_fwGetFileAttribute>
 8008a7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a80:	9a01      	ldr	r2, [sp, #4]
 8008a82:	6098      	str	r0, [r3, #8]
 8008a84:	6851      	ldr	r1, [r2, #4]
 8008a86:	60d9      	str	r1, [r3, #12]
 8008a88:	6891      	ldr	r1, [r2, #8]
 8008a8a:	6119      	str	r1, [r3, #16]
 8008a8c:	68d1      	ldr	r1, [r2, #12]
 8008a8e:	6159      	str	r1, [r3, #20]
 8008a90:	6911      	ldr	r1, [r2, #16]
 8008a92:	6199      	str	r1, [r3, #24]
 8008a94:	6951      	ldr	r1, [r2, #20]
 8008a96:	61d9      	str	r1, [r3, #28]
 8008a98:	6991      	ldr	r1, [r2, #24]
 8008a9a:	6219      	str	r1, [r3, #32]
 8008a9c:	69d1      	ldr	r1, [r2, #28]
 8008a9e:	6259      	str	r1, [r3, #36]	@ 0x24
 8008aa0:	6a11      	ldr	r1, [r2, #32]
 8008aa2:	6299      	str	r1, [r3, #40]	@ 0x28
 8008aa4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8008aa6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8008aa8:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8008aaa:	6319      	str	r1, [r3, #48]	@ 0x30
 8008aac:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8008aae:	6359      	str	r1, [r3, #52]	@ 0x34
 8008ab0:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8008ab2:	6399      	str	r1, [r3, #56]	@ 0x38
 8008ab4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8008ab6:	63d9      	str	r1, [r3, #60]	@ 0x3c
 8008ab8:	6b91      	ldr	r1, [r2, #56]	@ 0x38
 8008aba:	6419      	str	r1, [r3, #64]	@ 0x40
 8008abc:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8008abe:	645a      	str	r2, [r3, #68]	@ 0x44
 8008ac0:	e7c8      	b.n	8008a54 <awe_fwFlashFileSystemCommandHandler+0xbc>
 8008ac2:	ab02      	add	r3, sp, #8
 8008ac4:	2600      	movs	r6, #0
 8008ac6:	f843 6d04 	str.w	r6, [r3, #-4]!
 8008aca:	f105 0208 	add.w	r2, r5, #8
 8008ace:	7929      	ldrb	r1, [r5, #4]
 8008ad0:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008ad2:	f7ff fc77 	bl	80083c4 <awe_fwOpenFile>
 8008ad6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008ad8:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8008adc:	e9c3 2000 	strd	r2, r0, [r3]
 8008ae0:	9a01      	ldr	r2, [sp, #4]
 8008ae2:	609a      	str	r2, [r3, #8]
 8008ae4:	4618      	mov	r0, r3
 8008ae6:	f00c ff89 	bl	80159fc <ComputeCheckSum>
 8008aea:	e7a9      	b.n	8008a40 <awe_fwFlashFileSystemCommandHandler+0xa8>
 8008aec:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8008aee:	6869      	ldr	r1, [r5, #4]
 8008af0:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008af2:	f102 0308 	add.w	r3, r2, #8
 8008af6:	320c      	adds	r2, #12
 8008af8:	f7ff fb2c 	bl	8008154 <awe_fwReadFile>
 8008afc:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8008afe:	6893      	ldr	r3, [r2, #8]
 8008b00:	6050      	str	r0, [r2, #4]
 8008b02:	3304      	adds	r3, #4
 8008b04:	041b      	lsls	r3, r3, #16
 8008b06:	6013      	str	r3, [r2, #0]
 8008b08:	4610      	mov	r0, r2
 8008b0a:	f00c ff77 	bl	80159fc <ComputeCheckSum>
 8008b0e:	2600      	movs	r6, #0
 8008b10:	e796      	b.n	8008a40 <awe_fwFlashFileSystemCommandHandler+0xa8>
 8008b12:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8008b14:	6869      	ldr	r1, [r5, #4]
 8008b16:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b18:	3308      	adds	r3, #8
 8008b1a:	f105 0208 	add.w	r2, r5, #8
 8008b1e:	f7ff f89f 	bl	8007c60 <awe_fwWriteFile>
 8008b22:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008b24:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8008b28:	e9c3 2000 	strd	r2, r0, [r3]
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	f00c ff65 	bl	80159fc <ComputeCheckSum>
 8008b32:	2600      	movs	r6, #0
 8008b34:	4630      	mov	r0, r6
 8008b36:	b002      	add	sp, #8
 8008b38:	bd70      	pop	{r4, r5, r6, pc}
 8008b3a:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b3c:	f7ff f808 	bl	8007b50 <awe_fwCloseFile>
 8008b40:	e7ef      	b.n	8008b22 <awe_fwFlashFileSystemCommandHandler+0x18a>
 8008b42:	f105 0108 	add.w	r1, r5, #8
 8008b46:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b48:	f7ff fd3a 	bl	80085c0 <awe_fwDeleteFile>
 8008b4c:	e7e9      	b.n	8008b22 <awe_fwFlashFileSystemCommandHandler+0x18a>
 8008b4e:	f105 0208 	add.w	r2, r5, #8
 8008b52:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8008b54:	f7ff feca 	bl	80088ec <awe_fwExecuteFile>
 8008b58:	e7e3      	b.n	8008b22 <awe_fwFlashFileSystemCommandHandler+0x18a>
 8008b5a:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b5c:	f7ff fd6e 	bl	800863c <awe_fwEraseFlash>
 8008b60:	e7df      	b.n	8008b22 <awe_fwFlashFileSystemCommandHandler+0x18a>
 8008b62:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
 8008b64:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b66:	f44f 2330 	mov.w	r3, #720896	@ 0xb0000
 8008b6a:	f841 3b08 	str.w	r3, [r1], #8
 8008b6e:	f7ff fec1 	bl	80088f4 <awe_fwGetFileSystemInfo>
 8008b72:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008b74:	6058      	str	r0, [r3, #4]
 8008b76:	4618      	mov	r0, r3
 8008b78:	f00c ff40 	bl	80159fc <ComputeCheckSum>
 8008b7c:	2600      	movs	r6, #0
 8008b7e:	e75f      	b.n	8008a40 <awe_fwFlashFileSystemCommandHandler+0xa8>
 8008b80:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8008b82:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8008b84:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8008b88:	601a      	str	r2, [r3, #0]
 8008b8a:	f7fe feb5 	bl	80078f8 <awe_fwResetFlashFileSystem>
 8008b8e:	4606      	mov	r6, r0
 8008b90:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8008b92:	6046      	str	r6, [r0, #4]
 8008b94:	f00c ff32 	bl	80159fc <ComputeCheckSum>
 8008b98:	e752      	b.n	8008a40 <awe_fwFlashFileSystemCommandHandler+0xa8>
 8008b9a:	f06f 063a 	mvn.w	r6, #58	@ 0x3a
 8008b9e:	e74f      	b.n	8008a40 <awe_fwFlashFileSystemCommandHandler+0xa8>

08008ba0 <awe_init>:
 8008ba0:	b570      	push	{r4, r5, r6, lr}
 8008ba2:	2800      	cmp	r0, #0
 8008ba4:	d067      	beq.n	8008c76 <awe_init+0xd6>
 8008ba6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	d058      	beq.n	8008c5e <awe_init+0xbe>
 8008bac:	4604      	mov	r4, r0
 8008bae:	f016 fd4f 	bl	801f650 <awe_fwInitHeapAlignment>
 8008bb2:	4605      	mov	r5, r0
 8008bb4:	2000      	movs	r0, #0
 8008bb6:	f00d ff33 	bl	8016a20 <awe_fwSetPackedVersionInit>
 8008bba:	4a30      	ldr	r2, [pc, #192]	@ (8008c7c <awe_init+0xdc>)
 8008bbc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008bbe:	6811      	ldr	r1, [r2, #0]
 8008bc0:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8008bc2:	f8c4 10b4 	str.w	r1, [r4, #180]	@ 0xb4
 8008bc6:	f8c4 20ac 	str.w	r2, [r4, #172]	@ 0xac
 8008bca:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	@ 0x3c
 8008bce:	2b00      	cmp	r3, #0
 8008bd0:	d03e      	beq.n	8008c50 <awe_init+0xb0>
 8008bd2:	b389      	cbz	r1, 8008c38 <awe_init+0x98>
 8008bd4:	b392      	cbz	r2, 8008c3c <awe_init+0x9c>
 8008bd6:	bb9d      	cbnz	r5, 8008c40 <awe_init+0xa0>
 8008bd8:	2304      	movs	r3, #4
 8008bda:	2601      	movs	r6, #1
 8008bdc:	f8c4 50f0 	str.w	r5, [r4, #240]	@ 0xf0
 8008be0:	e9c4 363a 	strd	r3, r6, [r4, #232]	@ 0xe8
 8008be4:	4631      	mov	r1, r6
 8008be6:	4620      	mov	r0, r4
 8008be8:	f000 fdc6 	bl	8009778 <awe_fwSetOverFlowDetectionStatus>
 8008bec:	4605      	mov	r5, r0
 8008bee:	bb38      	cbnz	r0, 8008c40 <awe_init+0xa0>
 8008bf0:	4631      	mov	r1, r6
 8008bf2:	4620      	mov	r0, r4
 8008bf4:	f000 fddc 	bl	80097b0 <awe_fwSetAutoResetFeatureStatus>
 8008bf8:	4605      	mov	r5, r0
 8008bfa:	bb08      	cbnz	r0, 8008c40 <awe_init+0xa0>
 8008bfc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008bfe:	b3bb      	cbz	r3, 8008c70 <awe_init+0xd0>
 8008c00:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
 8008c04:	b90b      	cbnz	r3, 8008c0a <awe_init+0x6a>
 8008c06:	f8c4 60e0 	str.w	r6, [r4, #224]	@ 0xe0
 8008c0a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008c0c:	b36b      	cbz	r3, 8008c6a <awe_init+0xca>
 8008c0e:	f8d4 30e4 	ldr.w	r3, [r4, #228]	@ 0xe4
 8008c12:	b913      	cbnz	r3, 8008c1a <awe_init+0x7a>
 8008c14:	2301      	movs	r3, #1
 8008c16:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
 8008c1a:	4620      	mov	r0, r4
 8008c1c:	f001 fd58 	bl	800a6d0 <awe_fwInitIoPins>
 8008c20:	4605      	mov	r5, r0
 8008c22:	b968      	cbnz	r0, 8008c40 <awe_init+0xa0>
 8008c24:	4620      	mov	r0, r4
 8008c26:	f017 fa39 	bl	802009c <awe_fwInitSharedHeap>
 8008c2a:	4605      	mov	r5, r0
 8008c2c:	b940      	cbnz	r0, 8008c40 <awe_init+0xa0>
 8008c2e:	4620      	mov	r0, r4
 8008c30:	f7ff fe7e 	bl	8008930 <awe_fwInitFFS>
 8008c34:	4605      	mov	r5, r0
 8008c36:	e003      	b.n	8008c40 <awe_init+0xa0>
 8008c38:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8008c3a:	b99a      	cbnz	r2, 8008c64 <awe_init+0xc4>
 8008c3c:	f06f 0564 	mvn.w	r5, #100	@ 0x64
 8008c40:	2307      	movs	r3, #7
 8008c42:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 8008c46:	4620      	mov	r0, r4
 8008c48:	f017 f956 	bl	801fef8 <awe_heapPad>
 8008c4c:	4628      	mov	r0, r5
 8008c4e:	bd70      	pop	{r4, r5, r6, pc}
 8008c50:	2900      	cmp	r1, #0
 8008c52:	d0f1      	beq.n	8008c38 <awe_init+0x98>
 8008c54:	2a00      	cmp	r2, #0
 8008c56:	d0f1      	beq.n	8008c3c <awe_init+0x9c>
 8008c58:	f06f 0562 	mvn.w	r5, #98	@ 0x62
 8008c5c:	e7f0      	b.n	8008c40 <awe_init+0xa0>
 8008c5e:	4b08      	ldr	r3, [pc, #32]	@ (8008c80 <awe_init+0xe0>)
 8008c60:	6503      	str	r3, [r0, #80]	@ 0x50
 8008c62:	e7a3      	b.n	8008bac <awe_init+0xc>
 8008c64:	f06f 0563 	mvn.w	r5, #99	@ 0x63
 8008c68:	e7ea      	b.n	8008c40 <awe_init+0xa0>
 8008c6a:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
 8008c6e:	e7d4      	b.n	8008c1a <awe_init+0x7a>
 8008c70:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 8008c74:	e7c9      	b.n	8008c0a <awe_init+0x6a>
 8008c76:	f06f 0550 	mvn.w	r5, #80	@ 0x50
 8008c7a:	e7e7      	b.n	8008c4c <awe_init+0xac>
 8008c7c:	20000020 	.word	0x20000020
 8008c80:	0803ae84 	.word	0x0803ae84

08008c84 <awe_fwGetTargetInfo>:
 8008c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c86:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 8008c88:	b08d      	sub	sp, #52	@ 0x34
 8008c8a:	2a00      	cmp	r2, #0
 8008c8c:	f000 80a2 	beq.w	8008dd4 <awe_fwGetTargetInfo+0x150>
 8008c90:	6992      	ldr	r2, [r2, #24]
 8008c92:	f3c2 0c09 	ubfx	ip, r2, #0, #10
 8008c96:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8008c98:	b117      	cbz	r7, 8008ca0 <awe_fwGetTargetInfo+0x1c>
 8008c9a:	69bf      	ldr	r7, [r7, #24]
 8008c9c:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8008ca0:	2900      	cmp	r1, #0
 8008ca2:	f000 8099 	beq.w	8008dd8 <awe_fwGetTargetInfo+0x154>
 8008ca6:	f8d0 40ec 	ldr.w	r4, [r0, #236]	@ 0xec
 8008caa:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8008cac:	f8d0 20e8 	ldr.w	r2, [r0, #232]	@ 0xe8
 8008cb0:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
 8008cb4:	f8d0 50e0 	ldr.w	r5, [r0, #224]	@ 0xe0
 8008cb8:	3300      	adds	r3, #0
 8008cba:	ea4f 1444 	mov.w	r4, r4, lsl #5
 8008cbe:	bf18      	it	ne
 8008cc0:	2301      	movne	r3, #1
 8008cc2:	f004 0420 	and.w	r4, r4, #32
 8008cc6:	ea44 1403 	orr.w	r4, r4, r3, lsl #4
 8008cca:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008ccc:	3b01      	subs	r3, #1
 8008cce:	3e01      	subs	r6, #1
 8008cd0:	0612      	lsls	r2, r2, #24
 8008cd2:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008cd6:	f044 0444 	orr.w	r4, r4, #68	@ 0x44
 8008cda:	ea43 6386 	orr.w	r3, r3, r6, lsl #26
 8008cde:	3d01      	subs	r5, #1
 8008ce0:	f8d0 60f0 	ldr.w	r6, [r0, #240]	@ 0xf0
 8008ce4:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
 8008ce8:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8008cec:	4322      	orrs	r2, r4
 8008cee:	052d      	lsls	r5, r5, #20
 8008cf0:	fa1f fc8c 	uxth.w	ip, ip
 8008cf4:	043f      	lsls	r7, r7, #16
 8008cf6:	6d44      	ldr	r4, [r0, #84]	@ 0x54
 8008cf8:	f005 757c 	and.w	r5, r5, #66060288	@ 0x3f00000
 8008cfc:	ea4f 4ec6 	mov.w	lr, r6, lsl #19
 8008d00:	f407 077f 	and.w	r7, r7, #16711680	@ 0xff0000
 8008d04:	ea42 020c 	orr.w	r2, r2, ip
 8008d08:	6dc6      	ldr	r6, [r0, #92]	@ 0x5c
 8008d0a:	433a      	orrs	r2, r7
 8008d0c:	432b      	orrs	r3, r5
 8008d0e:	0324      	lsls	r4, r4, #12
 8008d10:	f40e 2500 	and.w	r5, lr, #524288	@ 0x80000
 8008d14:	432b      	orrs	r3, r5
 8008d16:	b2a4      	uxth	r4, r4
 8008d18:	6cc5      	ldr	r5, [r0, #76]	@ 0x4c
 8008d1a:	9204      	str	r2, [sp, #16]
 8008d1c:	f3c6 060b 	ubfx	r6, r6, #0, #12
 8008d20:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8008d22:	6d87      	ldr	r7, [r0, #88]	@ 0x58
 8008d24:	9306      	str	r3, [sp, #24]
 8008d26:	4326      	orrs	r6, r4
 8008d28:	2300      	movs	r3, #0
 8008d2a:	9502      	str	r5, [sp, #8]
 8008d2c:	4c2c      	ldr	r4, [pc, #176]	@ (8008de0 <awe_fwGetTargetInfo+0x15c>)
 8008d2e:	4d2d      	ldr	r5, [pc, #180]	@ (8008de4 <awe_fwGetTargetInfo+0x160>)
 8008d30:	950b      	str	r5, [sp, #44]	@ 0x2c
 8008d32:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8008d36:	9603      	str	r6, [sp, #12]
 8008d38:	9701      	str	r7, [sp, #4]
 8008d3a:	9405      	str	r4, [sp, #20]
 8008d3c:	6803      	ldr	r3, [r0, #0]
 8008d3e:	6c85      	ldr	r5, [r0, #72]	@ 0x48
 8008d40:	b1fa      	cbz	r2, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d42:	7814      	ldrb	r4, [r2, #0]
 8008d44:	b1ec      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d46:	f88d 401c 	strb.w	r4, [sp, #28]
 8008d4a:	7854      	ldrb	r4, [r2, #1]
 8008d4c:	b1cc      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d4e:	f88d 401d 	strb.w	r4, [sp, #29]
 8008d52:	7894      	ldrb	r4, [r2, #2]
 8008d54:	b1ac      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d56:	f88d 401e 	strb.w	r4, [sp, #30]
 8008d5a:	78d4      	ldrb	r4, [r2, #3]
 8008d5c:	b18c      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d5e:	f88d 401f 	strb.w	r4, [sp, #31]
 8008d62:	7914      	ldrb	r4, [r2, #4]
 8008d64:	b16c      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d66:	f88d 4020 	strb.w	r4, [sp, #32]
 8008d6a:	7954      	ldrb	r4, [r2, #5]
 8008d6c:	b14c      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d6e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8008d72:	7994      	ldrb	r4, [r2, #6]
 8008d74:	b12c      	cbz	r4, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d76:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8008d7a:	79d2      	ldrb	r2, [r2, #7]
 8008d7c:	b10a      	cbz	r2, 8008d82 <awe_fwGetTargetInfo+0xfe>
 8008d7e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8008d82:	4606      	mov	r6, r0
 8008d84:	a801      	add	r0, sp, #4
 8008d86:	460c      	mov	r4, r1
 8008d88:	930a      	str	r3, [sp, #40]	@ 0x28
 8008d8a:	9509      	str	r5, [sp, #36]	@ 0x24
 8008d8c:	f00d fe48 	bl	8016a20 <awe_fwSetPackedVersionInit>
 8008d90:	4630      	mov	r0, r6
 8008d92:	f016 fc59 	bl	801f648 <awe_fwGetHeapAlignment>
 8008d96:	2804      	cmp	r0, #4
 8008d98:	d018      	beq.n	8008dcc <awe_fwGetTargetInfo+0x148>
 8008d9a:	9b03      	ldr	r3, [sp, #12]
 8008d9c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8008da0:	9303      	str	r3, [sp, #12]
 8008da2:	ad01      	add	r5, sp, #4
 8008da4:	af09      	add	r7, sp, #36	@ 0x24
 8008da6:	462e      	mov	r6, r5
 8008da8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008daa:	42be      	cmp	r6, r7
 8008dac:	6020      	str	r0, [r4, #0]
 8008dae:	6061      	str	r1, [r4, #4]
 8008db0:	60a2      	str	r2, [r4, #8]
 8008db2:	60e3      	str	r3, [r4, #12]
 8008db4:	4635      	mov	r5, r6
 8008db6:	f104 0410 	add.w	r4, r4, #16
 8008dba:	d1f4      	bne.n	8008da6 <awe_fwGetTargetInfo+0x122>
 8008dbc:	cd07      	ldmia	r5!, {r0, r1, r2}
 8008dbe:	2300      	movs	r3, #0
 8008dc0:	6020      	str	r0, [r4, #0]
 8008dc2:	6061      	str	r1, [r4, #4]
 8008dc4:	60a2      	str	r2, [r4, #8]
 8008dc6:	4618      	mov	r0, r3
 8008dc8:	b00d      	add	sp, #52	@ 0x34
 8008dca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008dcc:	9b03      	ldr	r3, [sp, #12]
 8008dce:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8008dd2:	e7e3      	b.n	8008d9c <awe_fwGetTargetInfo+0x118>
 8008dd4:	4694      	mov	ip, r2
 8008dd6:	e75e      	b.n	8008c96 <awe_fwGetTargetInfo+0x12>
 8008dd8:	f06f 0310 	mvn.w	r3, #16
 8008ddc:	e7f3      	b.n	8008dc6 <awe_fwGetTargetInfo+0x142>
 8008dde:	bf00      	nop
 8008de0:	0844080d 	.word	0x0844080d
 8008de4:	7a6b5c4d 	.word	0x7a6b5c4d

08008de8 <awe_fwSetPackedName>:
 8008de8:	b1d8      	cbz	r0, 8008e22 <awe_fwSetPackedName+0x3a>
 8008dea:	2300      	movs	r3, #0
 8008dec:	e9c0 3300 	strd	r3, r3, [r0]
 8008df0:	b1b9      	cbz	r1, 8008e22 <awe_fwSetPackedName+0x3a>
 8008df2:	780b      	ldrb	r3, [r1, #0]
 8008df4:	b1ab      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008df6:	7003      	strb	r3, [r0, #0]
 8008df8:	784b      	ldrb	r3, [r1, #1]
 8008dfa:	b193      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008dfc:	7043      	strb	r3, [r0, #1]
 8008dfe:	788b      	ldrb	r3, [r1, #2]
 8008e00:	b17b      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e02:	7083      	strb	r3, [r0, #2]
 8008e04:	78cb      	ldrb	r3, [r1, #3]
 8008e06:	b163      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e08:	70c3      	strb	r3, [r0, #3]
 8008e0a:	790b      	ldrb	r3, [r1, #4]
 8008e0c:	b14b      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e0e:	7103      	strb	r3, [r0, #4]
 8008e10:	794b      	ldrb	r3, [r1, #5]
 8008e12:	b133      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e14:	7143      	strb	r3, [r0, #5]
 8008e16:	798b      	ldrb	r3, [r1, #6]
 8008e18:	b11b      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e1a:	7183      	strb	r3, [r0, #6]
 8008e1c:	79cb      	ldrb	r3, [r1, #7]
 8008e1e:	b103      	cbz	r3, 8008e22 <awe_fwSetPackedName+0x3a>
 8008e20:	71c3      	strb	r3, [r0, #7]
 8008e22:	4770      	bx	lr

08008e24 <awe_fwGetAweInstanceModuleCount>:
 8008e24:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008e26:	4770      	bx	lr

08008e28 <awe_fwGetAweInstanceModuleInfo>:
 8008e28:	b410      	push	{r4}
 8008e2a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8008e2c:	428c      	cmp	r4, r1
 8008e2e:	d90a      	bls.n	8008e46 <awe_fwGetAweInstanceModuleInfo+0x1e>
 8008e30:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8008e32:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8008e36:	6848      	ldr	r0, [r1, #4]
 8008e38:	6010      	str	r0, [r2, #0]
 8008e3a:	69c9      	ldr	r1, [r1, #28]
 8008e3c:	6019      	str	r1, [r3, #0]
 8008e3e:	6810      	ldr	r0, [r2, #0]
 8008e40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008e44:	4770      	bx	lr
 8008e46:	f06f 0004 	mvn.w	r0, #4
 8008e4a:	e7f9      	b.n	8008e40 <awe_fwGetAweInstanceModuleInfo+0x18>

08008e4c <awe_fwGetAweInstanceModuleClass>:
 8008e4c:	b430      	push	{r4, r5}
 8008e4e:	6b05      	ldr	r5, [r0, #48]	@ 0x30
 8008e50:	b18d      	cbz	r5, 8008e76 <awe_fwGetAweInstanceModuleClass+0x2a>
 8008e52:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 8008e54:	6810      	ldr	r0, [r2, #0]
 8008e56:	6843      	ldr	r3, [r0, #4]
 8008e58:	4299      	cmp	r1, r3
 8008e5a:	d00a      	beq.n	8008e72 <awe_fwGetAweInstanceModuleClass+0x26>
 8008e5c:	2300      	movs	r3, #0
 8008e5e:	e004      	b.n	8008e6a <awe_fwGetAweInstanceModuleClass+0x1e>
 8008e60:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8008e64:	6844      	ldr	r4, [r0, #4]
 8008e66:	428c      	cmp	r4, r1
 8008e68:	d003      	beq.n	8008e72 <awe_fwGetAweInstanceModuleClass+0x26>
 8008e6a:	3301      	adds	r3, #1
 8008e6c:	42ab      	cmp	r3, r5
 8008e6e:	d1f7      	bne.n	8008e60 <awe_fwGetAweInstanceModuleClass+0x14>
 8008e70:	2000      	movs	r0, #0
 8008e72:	bc30      	pop	{r4, r5}
 8008e74:	4770      	bx	lr
 8008e76:	4628      	mov	r0, r5
 8008e78:	e7fb      	b.n	8008e72 <awe_fwGetAweInstanceModuleClass+0x26>
 8008e7a:	bf00      	nop

08008e7c <awe_fwDemoTimeoutTick.part.1>:
 8008e7c:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
 8008e7e:	b12b      	cbz	r3, 8008e8c <awe_fwDemoTimeoutTick.part.1+0x10>
 8008e80:	681a      	ldr	r2, [r3, #0]
 8008e82:	2a00      	cmp	r2, #0
 8008e84:	dd03      	ble.n	8008e8e <awe_fwDemoTimeoutTick.part.1+0x12>
 8008e86:	3a01      	subs	r2, #1
 8008e88:	601a      	str	r2, [r3, #0]
 8008e8a:	b152      	cbz	r2, 8008ea2 <awe_fwDemoTimeoutTick.part.1+0x26>
 8008e8c:	4770      	bx	lr
 8008e8e:	d1fd      	bne.n	8008e8c <awe_fwDemoTimeoutTick.part.1+0x10>
 8008e90:	6859      	ldr	r1, [r3, #4]
 8008e92:	07ca      	lsls	r2, r1, #31
 8008e94:	d54a      	bpl.n	8008f2c <awe_fwDemoTimeoutTick.part.1+0xb0>
 8008e96:	689a      	ldr	r2, [r3, #8]
 8008e98:	2a00      	cmp	r2, #0
 8008e9a:	dd35      	ble.n	8008f08 <awe_fwDemoTimeoutTick.part.1+0x8c>
 8008e9c:	3a01      	subs	r2, #1
 8008e9e:	609a      	str	r2, [r3, #8]
 8008ea0:	4770      	bx	lr
 8008ea2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8008ea6:	68d9      	ldr	r1, [r3, #12]
 8008ea8:	605a      	str	r2, [r3, #4]
 8008eaa:	2218      	movs	r2, #24
 8008eac:	6099      	str	r1, [r3, #8]
 8008eae:	611a      	str	r2, [r3, #16]
 8008eb0:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8008eb2:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8008eb4:	b4f0      	push	{r4, r5, r6, r7}
 8008eb6:	b301      	cbz	r1, 8008efa <awe_fwDemoTimeoutTick.part.1+0x7e>
 8008eb8:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8008eba:	e9d2 6505 	ldrd	r6, r5, [r2, #20]
 8008ebe:	f3c5 0510 	ubfx	r5, r5, #0, #17
 8008ec2:	68d2      	ldr	r2, [r2, #12]
 8008ec4:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8008ec8:	b1bd      	cbz	r5, 8008efa <awe_fwDemoTimeoutTick.part.1+0x7e>
 8008eca:	00b7      	lsls	r7, r6, #2
 8008ecc:	2400      	movs	r4, #0
 8008ece:	6919      	ldr	r1, [r3, #16]
 8008ed0:	292f      	cmp	r1, #47	@ 0x2f
 8008ed2:	bfd4      	ite	le
 8008ed4:	f1a1 0018 	suble.w	r0, r1, #24
 8008ed8:	f1c1 0048 	rsbgt	r0, r1, #72	@ 0x48
 8008edc:	3101      	adds	r1, #1
 8008ede:	2960      	cmp	r1, #96	@ 0x60
 8008ee0:	bfa8      	it	ge
 8008ee2:	2100      	movge	r1, #0
 8008ee4:	05c0      	lsls	r0, r0, #23
 8008ee6:	6119      	str	r1, [r3, #16]
 8008ee8:	b126      	cbz	r6, 8008ef4 <awe_fwDemoTimeoutTick.part.1+0x78>
 8008eea:	19d1      	adds	r1, r2, r7
 8008eec:	f842 0b04 	str.w	r0, [r2], #4
 8008ef0:	428a      	cmp	r2, r1
 8008ef2:	d1fb      	bne.n	8008eec <awe_fwDemoTimeoutTick.part.1+0x70>
 8008ef4:	3401      	adds	r4, #1
 8008ef6:	42a5      	cmp	r5, r4
 8008ef8:	d1e9      	bne.n	8008ece <awe_fwDemoTimeoutTick.part.1+0x52>
 8008efa:	689a      	ldr	r2, [r3, #8]
 8008efc:	2a00      	cmp	r2, #0
 8008efe:	dd0d      	ble.n	8008f1c <awe_fwDemoTimeoutTick.part.1+0xa0>
 8008f00:	3a01      	subs	r2, #1
 8008f02:	609a      	str	r2, [r3, #8]
 8008f04:	bcf0      	pop	{r4, r5, r6, r7}
 8008f06:	4770      	bx	lr
 8008f08:	f031 0101 	bics.w	r1, r1, #1
 8008f0c:	68da      	ldr	r2, [r3, #12]
 8008f0e:	609a      	str	r2, [r3, #8]
 8008f10:	bf18      	it	ne
 8008f12:	3902      	subne	r1, #2
 8008f14:	2218      	movs	r2, #24
 8008f16:	6059      	str	r1, [r3, #4]
 8008f18:	611a      	str	r2, [r3, #16]
 8008f1a:	4770      	bx	lr
 8008f1c:	6859      	ldr	r1, [r3, #4]
 8008f1e:	68da      	ldr	r2, [r3, #12]
 8008f20:	f041 0101 	orr.w	r1, r1, #1
 8008f24:	0052      	lsls	r2, r2, #1
 8008f26:	e9c3 1201 	strd	r1, r2, [r3, #4]
 8008f2a:	e7eb      	b.n	8008f04 <awe_fwDemoTimeoutTick.part.1+0x88>
 8008f2c:	f031 0201 	bics.w	r2, r1, #1
 8008f30:	d0b1      	beq.n	8008e96 <awe_fwDemoTimeoutTick.part.1+0x1a>
 8008f32:	e7bd      	b.n	8008eb0 <awe_fwDemoTimeoutTick.part.1+0x34>

08008f34 <awe_fwLayoutConstructor>:
 8008f34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f38:	b085      	sub	sp, #20
 8008f3a:	2800      	cmp	r0, #0
 8008f3c:	f000 80e4 	beq.w	8009108 <awe_fwLayoutConstructor+0x1d4>
 8008f40:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
 8008f44:	2d00      	cmp	r5, #0
 8008f46:	f000 80d7 	beq.w	80090f8 <awe_fwLayoutConstructor+0x1c4>
 8008f4a:	2600      	movs	r6, #0
 8008f4c:	68ed      	ldr	r5, [r5, #12]
 8008f4e:	3601      	adds	r6, #1
 8008f50:	2d00      	cmp	r5, #0
 8008f52:	d1fb      	bne.n	8008f4c <awe_fwLayoutConstructor+0x18>
 8008f54:	6d44      	ldr	r4, [r0, #84]	@ 0x54
 8008f56:	42b4      	cmp	r4, r6
 8008f58:	f240 80c6 	bls.w	80090e8 <awe_fwLayoutConstructor+0x1b4>
 8008f5c:	9100      	str	r1, [sp, #0]
 8008f5e:	4698      	mov	r8, r3
 8008f60:	4617      	mov	r7, r2
 8008f62:	460d      	mov	r5, r1
 8008f64:	f240 2331 	movw	r3, #561	@ 0x231
 8008f68:	2204      	movs	r2, #4
 8008f6a:	2154      	movs	r1, #84	@ 0x54
 8008f6c:	4606      	mov	r6, r0
 8008f6e:	f016 febf 	bl	801fcf0 <awe_fwMallocCommon>
 8008f72:	4604      	mov	r4, r0
 8008f74:	2800      	cmp	r0, #0
 8008f76:	d07f      	beq.n	8009078 <awe_fwLayoutConstructor+0x144>
 8008f78:	9500      	str	r5, [sp, #0]
 8008f7a:	f240 2331 	movw	r3, #561	@ 0x231
 8008f7e:	2204      	movs	r2, #4
 8008f80:	00b9      	lsls	r1, r7, #2
 8008f82:	4630      	mov	r0, r6
 8008f84:	f016 feb4 	bl	801fcf0 <awe_fwMallocCommon>
 8008f88:	6520      	str	r0, [r4, #80]	@ 0x50
 8008f8a:	2800      	cmp	r0, #0
 8008f8c:	d074      	beq.n	8009078 <awe_fwLayoutConstructor+0x144>
 8008f8e:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 8008f90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008f92:	f04f 0900 	mov.w	r9, #0
 8008f96:	f8cd 900c 	str.w	r9, [sp, #12]
 8008f9a:	2b00      	cmp	r3, #0
 8008f9c:	d15e      	bne.n	800905c <awe_fwLayoutConstructor+0x128>
 8008f9e:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
 8008fa2:	4630      	mov	r0, r6
 8008fa4:	f000 fca8 	bl	80098f8 <awe_fwGetNextAvailableObjectID>
 8008fa8:	4622      	mov	r2, r4
 8008faa:	4601      	mov	r1, r0
 8008fac:	60a0      	str	r0, [r4, #8]
 8008fae:	4630      	mov	r0, r6
 8008fb0:	f000 fcd4 	bl	800995c <awe_fwSetIDPointer>
 8008fb4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008fb6:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
 8008fba:	4856      	ldr	r0, [pc, #344]	@ (8009114 <awe_fwLayoutConstructor+0x1e0>)
 8008fbc:	f8c4 8010 	str.w	r8, [r4, #16]
 8008fc0:	f043 0208 	orr.w	r2, r3, #8
 8008fc4:	f04f 0c00 	mov.w	ip, #0
 8008fc8:	2300      	movs	r3, #0
 8008fca:	6327      	str	r7, [r4, #48]	@ 0x30
 8008fcc:	6422      	str	r2, [r4, #64]	@ 0x40
 8008fce:	f8c4 c02c 	str.w	ip, [r4, #44]	@ 0x2c
 8008fd2:	6060      	str	r0, [r4, #4]
 8008fd4:	6163      	str	r3, [r4, #20]
 8008fd6:	6363      	str	r3, [r4, #52]	@ 0x34
 8008fd8:	6223      	str	r3, [r4, #32]
 8008fda:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
 8008fde:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8008fe0:	2900      	cmp	r1, #0
 8008fe2:	d07e      	beq.n	80090e2 <awe_fwLayoutConstructor+0x1ae>
 8008fe4:	60cc      	str	r4, [r1, #12]
 8008fe6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8008fe8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8008fec:	2b00      	cmp	r3, #0
 8008fee:	d076      	beq.n	80090de <awe_fwLayoutConstructor+0x1aa>
 8008ff0:	601c      	str	r4, [r3, #0]
 8008ff2:	2300      	movs	r3, #0
 8008ff4:	602b      	str	r3, [r5, #0]
 8008ff6:	4628      	mov	r0, r5
 8008ff8:	f00d fd36 	bl	8016a68 <awe_fwSetPackedVersion>
 8008ffc:	682b      	ldr	r3, [r5, #0]
 8008ffe:	2b00      	cmp	r3, #0
 8009000:	d13a      	bne.n	8009078 <awe_fwLayoutConstructor+0x144>
 8009002:	6e75      	ldr	r5, [r6, #100]	@ 0x64
 8009004:	6774      	str	r4, [r6, #116]	@ 0x74
 8009006:	2d00      	cmp	r5, #0
 8009008:	d037      	beq.n	800907a <awe_fwLayoutConstructor+0x146>
 800900a:	6837      	ldr	r7, [r6, #0]
 800900c:	6ef3      	ldr	r3, [r6, #108]	@ 0x6c
 800900e:	429f      	cmp	r7, r3
 8009010:	d233      	bcs.n	800907a <awe_fwLayoutConstructor+0x146>
 8009012:	f8d6 3080 	ldr.w	r3, [r6, #128]	@ 0x80
 8009016:	e9d3 0203 	ldrd	r0, r2, [r3, #12]
 800901a:	4613      	mov	r3, r2
 800901c:	b178      	cbz	r0, 800903e <awe_fwLayoutConstructor+0x10a>
 800901e:	2b00      	cmp	r3, #0
 8009020:	e9d0 0103 	ldrd	r0, r1, [r0, #12]
 8009024:	dd04      	ble.n	8009030 <awe_fwLayoutConstructor+0xfc>
 8009026:	2900      	cmp	r1, #0
 8009028:	dc2b      	bgt.n	8009082 <awe_fwLayoutConstructor+0x14e>
 800902a:	2800      	cmp	r0, #0
 800902c:	d066      	beq.n	80090fc <awe_fwLayoutConstructor+0x1c8>
 800902e:	68c0      	ldr	r0, [r0, #12]
 8009030:	2800      	cmp	r0, #0
 8009032:	d063      	beq.n	80090fc <awe_fwLayoutConstructor+0x1c8>
 8009034:	68c0      	ldr	r0, [r0, #12]
 8009036:	2300      	movs	r3, #0
 8009038:	2800      	cmp	r0, #0
 800903a:	d1f0      	bne.n	800901e <awe_fwLayoutConstructor+0xea>
 800903c:	461a      	mov	r2, r3
 800903e:	3707      	adds	r7, #7
 8009040:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8009044:	f845 2027 	str.w	r2, [r5, r7, lsl #2]
 8009048:	6ef3      	ldr	r3, [r6, #108]	@ 0x6c
 800904a:	6832      	ldr	r2, [r6, #0]
 800904c:	4413      	add	r3, r2
 800904e:	3307      	adds	r3, #7
 8009050:	4620      	mov	r0, r4
 8009052:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
 8009056:	b005      	add	sp, #20
 8009058:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800905c:	ab03      	add	r3, sp, #12
 800905e:	9300      	str	r3, [sp, #0]
 8009060:	2201      	movs	r2, #1
 8009062:	f240 2331 	movw	r3, #561	@ 0x231
 8009066:	2114      	movs	r1, #20
 8009068:	4630      	mov	r0, r6
 800906a:	f016 fe41 	bl	801fcf0 <awe_fwMallocCommon>
 800906e:	b9c8      	cbnz	r0, 80090a4 <awe_fwLayoutConstructor+0x170>
 8009070:	9903      	ldr	r1, [sp, #12]
 8009072:	2900      	cmp	r1, #0
 8009074:	d095      	beq.n	8008fa2 <awe_fwLayoutConstructor+0x6e>
 8009076:	6029      	str	r1, [r5, #0]
 8009078:	2400      	movs	r4, #0
 800907a:	4620      	mov	r0, r4
 800907c:	b005      	add	sp, #20
 800907e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009082:	fb93 f2f1 	sdiv	r2, r3, r1
 8009086:	fb01 3312 	mls	r3, r1, r2, r3
 800908a:	b90b      	cbnz	r3, 8009090 <awe_fwLayoutConstructor+0x15c>
 800908c:	e038      	b.n	8009100 <awe_fwLayoutConstructor+0x1cc>
 800908e:	4613      	mov	r3, r2
 8009090:	fb91 f2f3 	sdiv	r2, r1, r3
 8009094:	fb03 1212 	mls	r2, r3, r2, r1
 8009098:	4619      	mov	r1, r3
 800909a:	2a00      	cmp	r2, #0
 800909c:	d1f7      	bne.n	800908e <awe_fwLayoutConstructor+0x15a>
 800909e:	2800      	cmp	r0, #0
 80090a0:	d1bd      	bne.n	800901e <awe_fwLayoutConstructor+0xea>
 80090a2:	e7cb      	b.n	800903c <awe_fwLayoutConstructor+0x108>
 80090a4:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 80090a6:	9903      	ldr	r1, [sp, #12]
 80090a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80090aa:	63a0      	str	r0, [r4, #56]	@ 0x38
 80090ac:	6993      	ldr	r3, [r2, #24]
 80090ae:	edd2 6a04 	vldr	s13, [r2, #16]
 80090b2:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
 80090b6:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80090ba:	ee07 3a90 	vmov	s15, r3
 80090be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090c2:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 80090c6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80090ca:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80090ce:	ee17 3a90 	vmov	r3, s15
 80090d2:	fb02 f203 	mul.w	r2, r2, r3
 80090d6:	edc0 7a03 	vstr	s15, [r0, #12]
 80090da:	6002      	str	r2, [r0, #0]
 80090dc:	e7c9      	b.n	8009072 <awe_fwLayoutConstructor+0x13e>
 80090de:	6734      	str	r4, [r6, #112]	@ 0x70
 80090e0:	e787      	b.n	8008ff2 <awe_fwLayoutConstructor+0xbe>
 80090e2:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 80090e6:	e77e      	b.n	8008fe6 <awe_fwLayoutConstructor+0xb2>
 80090e8:	2400      	movs	r4, #0
 80090ea:	f06f 036c 	mvn.w	r3, #108	@ 0x6c
 80090ee:	4620      	mov	r0, r4
 80090f0:	600b      	str	r3, [r1, #0]
 80090f2:	b005      	add	sp, #20
 80090f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80090f8:	462e      	mov	r6, r5
 80090fa:	e72b      	b.n	8008f54 <awe_fwLayoutConstructor+0x20>
 80090fc:	4602      	mov	r2, r0
 80090fe:	e79e      	b.n	800903e <awe_fwLayoutConstructor+0x10a>
 8009100:	460b      	mov	r3, r1
 8009102:	2800      	cmp	r0, #0
 8009104:	d18b      	bne.n	800901e <awe_fwLayoutConstructor+0xea>
 8009106:	e799      	b.n	800903c <awe_fwLayoutConstructor+0x108>
 8009108:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 800910c:	4604      	mov	r4, r0
 800910e:	600b      	str	r3, [r1, #0]
 8009110:	e7b3      	b.n	800907a <awe_fwLayoutConstructor+0x146>
 8009112:	bf00      	nop
 8009114:	08033ba4 	.word	0x08033ba4

08009118 <awe_fwAddModuleToLayout>:
 8009118:	2800      	cmp	r0, #0
 800911a:	d053      	beq.n	80091c4 <awe_fwAddModuleToLayout+0xac>
 800911c:	2902      	cmp	r1, #2
 800911e:	d94e      	bls.n	80091be <awe_fwAddModuleToLayout+0xa6>
 8009120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009124:	4614      	mov	r4, r2
 8009126:	b083      	sub	sp, #12
 8009128:	460e      	mov	r6, r1
 800912a:	ab01      	add	r3, sp, #4
 800912c:	466a      	mov	r2, sp
 800912e:	6821      	ldr	r1, [r4, #0]
 8009130:	4680      	mov	r8, r0
 8009132:	f000 fb97 	bl	8009864 <awe_fwGetObjectByID>
 8009136:	bb80      	cbnz	r0, 800919a <awe_fwAddModuleToLayout+0x82>
 8009138:	4b24      	ldr	r3, [pc, #144]	@ (80091cc <awe_fwAddModuleToLayout+0xb4>)
 800913a:	9a01      	ldr	r2, [sp, #4]
 800913c:	429a      	cmp	r2, r3
 800913e:	d13b      	bne.n	80091b8 <awe_fwAddModuleToLayout+0xa0>
 8009140:	6861      	ldr	r1, [r4, #4]
 8009142:	f8dd a000 	ldr.w	sl, [sp]
 8009146:	1e8b      	subs	r3, r1, #2
 8009148:	f8da 2030 	ldr.w	r2, [sl, #48]	@ 0x30
 800914c:	4433      	add	r3, r6
 800914e:	4293      	cmp	r3, r2
 8009150:	d832      	bhi.n	80091b8 <awe_fwAddModuleToLayout+0xa0>
 8009152:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 80091d0 <awe_fwAddModuleToLayout+0xb8>
 8009156:	ebc4 0981 	rsb	r9, r4, r1, lsl #2
 800915a:	3e02      	subs	r6, #2
 800915c:	3404      	adds	r4, #4
 800915e:	4605      	mov	r5, r0
 8009160:	ab01      	add	r3, sp, #4
 8009162:	466a      	mov	r2, sp
 8009164:	6861      	ldr	r1, [r4, #4]
 8009166:	4640      	mov	r0, r8
 8009168:	f000 fb7c 	bl	8009864 <awe_fwGetObjectByID>
 800916c:	1d27      	adds	r7, r4, #4
 800916e:	3501      	adds	r5, #1
 8009170:	b998      	cbnz	r0, 800919a <awe_fwAddModuleToLayout+0x82>
 8009172:	e9dd 1300 	ldrd	r1, r3, [sp]
 8009176:	445b      	add	r3, fp
 8009178:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800917c:	d212      	bcs.n	80091a4 <awe_fwAddModuleToLayout+0x8c>
 800917e:	68c8      	ldr	r0, [r1, #12]
 8009180:	b9a8      	cbnz	r0, 80091ae <awe_fwAddModuleToLayout+0x96>
 8009182:	f8da 2050 	ldr.w	r2, [sl, #80]	@ 0x50
 8009186:	4422      	add	r2, r4
 8009188:	444a      	add	r2, r9
 800918a:	42b5      	cmp	r5, r6
 800918c:	463c      	mov	r4, r7
 800918e:	f842 1c04 	str.w	r1, [r2, #-4]
 8009192:	d1e5      	bne.n	8009160 <awe_fwAddModuleToLayout+0x48>
 8009194:	b003      	add	sp, #12
 8009196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800919a:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 800919e:	b003      	add	sp, #12
 80091a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091a4:	f06f 000e 	mvn.w	r0, #14
 80091a8:	b003      	add	sp, #12
 80091aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091ae:	f06f 0006 	mvn.w	r0, #6
 80091b2:	b003      	add	sp, #12
 80091b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091b8:	f06f 0010 	mvn.w	r0, #16
 80091bc:	e7ea      	b.n	8009194 <awe_fwAddModuleToLayout+0x7c>
 80091be:	f06f 0003 	mvn.w	r0, #3
 80091c2:	4770      	bx	lr
 80091c4:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 80091c8:	4770      	bx	lr
 80091ca:	bf00      	nop
 80091cc:	beef0004 	.word	0xbeef0004
 80091d0:	4110f800 	.word	0x4110f800

080091d4 <awe_fwLayoutProcess>:
 80091d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091d8:	4f9d      	ldr	r7, [pc, #628]	@ (8009450 <awe_fwLayoutProcess+0x27c>)
 80091da:	f8d0 60a0 	ldr.w	r6, [r0, #160]	@ 0xa0
 80091de:	f8d0 80f4 	ldr.w	r8, [r0, #244]	@ 0xf4
 80091e2:	b087      	sub	sp, #28
 80091e4:	460c      	mov	r4, r1
 80091e6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80091e8:	9303      	str	r3, [sp, #12]
 80091ea:	683b      	ldr	r3, [r7, #0]
 80091ec:	9302      	str	r3, [sp, #8]
 80091ee:	0709      	lsls	r1, r1, #28
 80091f0:	f006 0320 	and.w	r3, r6, #32
 80091f4:	9005      	str	r0, [sp, #20]
 80091f6:	4691      	mov	r9, r2
 80091f8:	6038      	str	r0, [r7, #0]
 80091fa:	9300      	str	r3, [sp, #0]
 80091fc:	bf52      	itee	pl
 80091fe:	f1c8 0a08 	rsbpl	sl, r8, #8
 8009202:	f04f 0a08 	movmi.w	sl, #8
 8009206:	f04f 0800 	movmi.w	r8, #0
 800920a:	2a00      	cmp	r2, #0
 800920c:	f000 8091 	beq.w	8009332 <awe_fwLayoutProcess+0x15e>
 8009210:	b672      	cpsid	i
 8009212:	f7f9 f8f9 	bl	8002408 <aweuser_getCycleCount>
 8009216:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009218:	9001      	str	r0, [sp, #4]
 800921a:	f043 0304 	orr.w	r3, r3, #4
 800921e:	2200      	movs	r2, #0
 8009220:	6423      	str	r3, [r4, #64]	@ 0x40
 8009222:	64a2      	str	r2, [r4, #72]	@ 0x48
 8009224:	b662      	cpsie	i
 8009226:	9b00      	ldr	r3, [sp, #0]
 8009228:	b92b      	cbnz	r3, 8009236 <awe_fwLayoutProcess+0x62>
 800922a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800922c:	2800      	cmp	r0, #0
 800922e:	f040 80e8 	bne.w	8009402 <awe_fwLayoutProcess+0x22e>
 8009232:	9b01      	ldr	r3, [sp, #4]
 8009234:	6363      	str	r3, [r4, #52]	@ 0x34
 8009236:	9905      	ldr	r1, [sp, #20]
 8009238:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 800923c:	429c      	cmp	r4, r3
 800923e:	f000 80bd 	beq.w	80093bc <awe_fwLayoutProcess+0x1e8>
 8009242:	f016 0610 	ands.w	r6, r6, #16
 8009246:	d078      	beq.n	800933a <awe_fwLayoutProcess+0x166>
 8009248:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800924a:	b192      	cbz	r2, 8009272 <awe_fwLayoutProcess+0x9e>
 800924c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 800924e:	6810      	ldr	r0, [r2, #0]
 8009250:	b178      	cbz	r0, 8009272 <awe_fwLayoutProcess+0x9e>
 8009252:	2500      	movs	r5, #0
 8009254:	e003      	b.n	800925e <awe_fwLayoutProcess+0x8a>
 8009256:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009258:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800925c:	b130      	cbz	r0, 800926c <awe_fwLayoutProcess+0x98>
 800925e:	6943      	ldr	r3, [r0, #20]
 8009260:	60c4      	str	r4, [r0, #12]
 8009262:	4798      	blx	r3
 8009264:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009266:	3501      	adds	r5, #1
 8009268:	42ab      	cmp	r3, r5
 800926a:	d8f4      	bhi.n	8009256 <awe_fwLayoutProcess+0x82>
 800926c:	9905      	ldr	r1, [sp, #20]
 800926e:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 8009272:	429c      	cmp	r4, r3
 8009274:	f000 809d 	beq.w	80093b2 <awe_fwLayoutProcess+0x1de>
 8009278:	9b00      	ldr	r3, [sp, #0]
 800927a:	2b00      	cmp	r3, #0
 800927c:	d136      	bne.n	80092ec <awe_fwLayoutProcess+0x118>
 800927e:	f1b9 0f00 	cmp.w	r9, #0
 8009282:	f000 80b7 	beq.w	80093f4 <awe_fwLayoutProcess+0x220>
 8009286:	b672      	cpsid	i
 8009288:	f7f9 f8be 	bl	8002408 <aweuser_getCycleCount>
 800928c:	4601      	mov	r1, r0
 800928e:	9801      	ldr	r0, [sp, #4]
 8009290:	f7f9 f8c6 	bl	8002420 <aweuser_getElapsedCycles>
 8009294:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8009296:	1ac0      	subs	r0, r0, r3
 8009298:	b662      	cpsie	i
 800929a:	9a03      	ldr	r2, [sp, #12]
 800929c:	0203      	lsls	r3, r0, #8
 800929e:	6263      	str	r3, [r4, #36]	@ 0x24
 80092a0:	b10a      	cbz	r2, 80092a6 <awe_fwLayoutProcess+0xd2>
 80092a2:	6013      	str	r3, [r2, #0]
 80092a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80092a6:	69e2      	ldr	r2, [r4, #28]
 80092a8:	429a      	cmp	r2, r3
 80092aa:	bf38      	it	cc
 80092ac:	61e3      	strcc	r3, [r4, #28]
 80092ae:	69a3      	ldr	r3, [r4, #24]
 80092b0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80092b2:	fa23 f808 	lsr.w	r8, r3, r8
 80092b6:	fa00 fa0a 	lsl.w	sl, r0, sl
 80092ba:	eba3 0808 	sub.w	r8, r3, r8
 80092be:	eb08 030a 	add.w	r3, r8, sl
 80092c2:	61a3      	str	r3, [r4, #24]
 80092c4:	b17a      	cbz	r2, 80092e6 <awe_fwLayoutProcess+0x112>
 80092c6:	ee07 3a90 	vmov	s15, r3
 80092ca:	ed9f 7a62 	vldr	s14, [pc, #392]	@ 8009454 <awe_fwLayoutProcess+0x280>
 80092ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80092d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80092d6:	ee07 2a10 	vmov	s14, r2
 80092da:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80092de:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80092e2:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 80092e6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80092e8:	b103      	cbz	r3, 80092ec <awe_fwLayoutProcess+0x118>
 80092ea:	601a      	str	r2, [r3, #0]
 80092ec:	f1b9 0f00 	cmp.w	r9, #0
 80092f0:	d013      	beq.n	800931a <awe_fwLayoutProcess+0x146>
 80092f2:	b672      	cpsid	i
 80092f4:	9a05      	ldr	r2, [sp, #20]
 80092f6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80092f8:	f8d2 1114 	ldr.w	r1, [r2, #276]	@ 0x114
 80092fc:	f023 0304 	bic.w	r3, r3, #4
 8009300:	2900      	cmp	r1, #0
 8009302:	6423      	str	r3, [r4, #64]	@ 0x40
 8009304:	9b01      	ldr	r3, [sp, #4]
 8009306:	f340 808b 	ble.w	8009420 <awe_fwLayoutProcess+0x24c>
 800930a:	f8d2 0110 	ldr.w	r0, [r2, #272]	@ 0x110
 800930e:	4622      	mov	r2, r4
 8009310:	f000 fcdc 	bl	8009ccc <awe_fwCalcPreemptionOverhead>
 8009314:	2300      	movs	r3, #0
 8009316:	64a3      	str	r3, [r4, #72]	@ 0x48
 8009318:	b662      	cpsie	i
 800931a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800931c:	6a23      	ldr	r3, [r4, #32]
 800931e:	9902      	ldr	r1, [sp, #8]
 8009320:	6039      	str	r1, [r7, #0]
 8009322:	f022 0208 	bic.w	r2, r2, #8
 8009326:	3301      	adds	r3, #1
 8009328:	6422      	str	r2, [r4, #64]	@ 0x40
 800932a:	6223      	str	r3, [r4, #32]
 800932c:	b007      	add	sp, #28
 800932e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009332:	f7f9 f869 	bl	8002408 <aweuser_getCycleCount>
 8009336:	9001      	str	r0, [sp, #4]
 8009338:	e775      	b.n	8009226 <awe_fwLayoutProcess+0x52>
 800933a:	f1b9 0f00 	cmp.w	r9, #0
 800933e:	d168      	bne.n	8009412 <awe_fwLayoutProcess+0x23e>
 8009340:	f7f9 f862 	bl	8002408 <aweuser_getCycleCount>
 8009344:	4683      	mov	fp, r0
 8009346:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009348:	9905      	ldr	r1, [sp, #20]
 800934a:	2b00      	cmp	r3, #0
 800934c:	d08f      	beq.n	800926e <awe_fwLayoutProcess+0x9a>
 800934e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009350:	681d      	ldr	r5, [r3, #0]
 8009352:	2d00      	cmp	r5, #0
 8009354:	d08b      	beq.n	800926e <awe_fwLayoutProcess+0x9a>
 8009356:	f8cd 9010 	str.w	r9, [sp, #16]
 800935a:	46d9      	mov	r9, fp
 800935c:	e006      	b.n	800936c <awe_fwLayoutProcess+0x198>
 800935e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009360:	9905      	ldr	r1, [sp, #20]
 8009362:	f853 5026 	ldr.w	r5, [r3, r6, lsl #2]
 8009366:	46d9      	mov	r9, fp
 8009368:	2d00      	cmp	r5, #0
 800936a:	d05f      	beq.n	800942c <awe_fwLayoutProcess+0x258>
 800936c:	696b      	ldr	r3, [r5, #20]
 800936e:	6039      	str	r1, [r7, #0]
 8009370:	4628      	mov	r0, r5
 8009372:	60ec      	str	r4, [r5, #12]
 8009374:	4798      	blx	r3
 8009376:	f7f9 f847 	bl	8002408 <aweuser_getCycleCount>
 800937a:	4601      	mov	r1, r0
 800937c:	4683      	mov	fp, r0
 800937e:	4648      	mov	r0, r9
 8009380:	f7f9 f84e 	bl	8002420 <aweuser_getElapsedCycles>
 8009384:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8009386:	69ea      	ldr	r2, [r5, #28]
 8009388:	2100      	movs	r1, #0
 800938a:	1ac3      	subs	r3, r0, r3
 800938c:	6461      	str	r1, [r4, #68]	@ 0x44
 800938e:	fa03 f30a 	lsl.w	r3, r3, sl
 8009392:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8009394:	4413      	add	r3, r2
 8009396:	3601      	adds	r6, #1
 8009398:	fa22 f208 	lsr.w	r2, r2, r8
 800939c:	1a9b      	subs	r3, r3, r2
 800939e:	42b1      	cmp	r1, r6
 80093a0:	61eb      	str	r3, [r5, #28]
 80093a2:	d8dc      	bhi.n	800935e <awe_fwLayoutProcess+0x18a>
 80093a4:	e9dd 9104 	ldrd	r9, r1, [sp, #16]
 80093a8:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80093ac:	429c      	cmp	r4, r3
 80093ae:	f47f af63 	bne.w	8009278 <awe_fwLayoutProcess+0xa4>
 80093b2:	4608      	mov	r0, r1
 80093b4:	4621      	mov	r1, r4
 80093b6:	f7ff fd61 	bl	8008e7c <awe_fwDemoTimeoutTick.part.1>
 80093ba:	e75d      	b.n	8009278 <awe_fwLayoutProcess+0xa4>
 80093bc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80093be:	2a00      	cmp	r2, #0
 80093c0:	f43f af3f 	beq.w	8009242 <awe_fwLayoutProcess+0x6e>
 80093c4:	6815      	ldr	r5, [r2, #0]
 80093c6:	2d00      	cmp	r5, #0
 80093c8:	f47f af3b 	bne.w	8009242 <awe_fwLayoutProcess+0x6e>
 80093cc:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80093ce:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80093d0:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 80093d4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80093d8:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80093dc:	fb02 f203 	mul.w	r2, r2, r3
 80093e0:	68c8      	ldr	r0, [r1, #12]
 80093e2:	0092      	lsls	r2, r2, #2
 80093e4:	4629      	mov	r1, r5
 80093e6:	f024 fbb5 	bl	802db54 <memset>
 80093ea:	9905      	ldr	r1, [sp, #20]
 80093ec:	6325      	str	r5, [r4, #48]	@ 0x30
 80093ee:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80093f2:	e73e      	b.n	8009272 <awe_fwLayoutProcess+0x9e>
 80093f4:	f7f9 f808 	bl	8002408 <aweuser_getCycleCount>
 80093f8:	4601      	mov	r1, r0
 80093fa:	9801      	ldr	r0, [sp, #4]
 80093fc:	f7f9 f810 	bl	8002420 <aweuser_getElapsedCycles>
 8009400:	e74b      	b.n	800929a <awe_fwLayoutProcess+0xc6>
 8009402:	9901      	ldr	r1, [sp, #4]
 8009404:	f7f9 f80c 	bl	8002420 <aweuser_getElapsedCycles>
 8009408:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800940a:	b9a3      	cbnz	r3, 8009436 <awe_fwLayoutProcess+0x262>
 800940c:	0200      	lsls	r0, r0, #8
 800940e:	62a0      	str	r0, [r4, #40]	@ 0x28
 8009410:	e70f      	b.n	8009232 <awe_fwLayoutProcess+0x5e>
 8009412:	b672      	cpsid	i
 8009414:	6466      	str	r6, [r4, #68]	@ 0x44
 8009416:	f7f8 fff7 	bl	8002408 <aweuser_getCycleCount>
 800941a:	4683      	mov	fp, r0
 800941c:	b662      	cpsie	i
 800941e:	e792      	b.n	8009346 <awe_fwLayoutProcess+0x172>
 8009420:	4622      	mov	r2, r4
 8009422:	2101      	movs	r1, #1
 8009424:	a805      	add	r0, sp, #20
 8009426:	f000 fc51 	bl	8009ccc <awe_fwCalcPreemptionOverhead>
 800942a:	e773      	b.n	8009314 <awe_fwLayoutProcess+0x140>
 800942c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8009430:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 8009434:	e71d      	b.n	8009272 <awe_fwLayoutProcess+0x9e>
 8009436:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009438:	06d2      	lsls	r2, r2, #27
 800943a:	f53f aefa 	bmi.w	8009232 <awe_fwLayoutProcess+0x5e>
 800943e:	fa23 f208 	lsr.w	r2, r3, r8
 8009442:	fa00 f00a 	lsl.w	r0, r0, sl
 8009446:	1a9b      	subs	r3, r3, r2
 8009448:	4403      	add	r3, r0
 800944a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800944c:	e6f1      	b.n	8009232 <awe_fwLayoutProcess+0x5e>
 800944e:	bf00      	nop
 8009450:	20000ac0 	.word	0x20000ac0
 8009454:	42c80000 	.word	0x42c80000

08009458 <awe_audioPump>:
 8009458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800945c:	4606      	mov	r6, r0
 800945e:	b089      	sub	sp, #36	@ 0x24
 8009460:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
 8009464:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 8009468:	b121      	cbz	r1, 8009474 <awe_audioPump+0x1c>
 800946a:	2c00      	cmp	r4, #0
 800946c:	d07a      	beq.n	8009564 <awe_audioPump+0x10c>
 800946e:	3901      	subs	r1, #1
 8009470:	68e4      	ldr	r4, [r4, #12]
 8009472:	d1fa      	bne.n	800946a <awe_audioPump+0x12>
 8009474:	2c00      	cmp	r4, #0
 8009476:	d075      	beq.n	8009564 <awe_audioPump+0x10c>
 8009478:	f3c5 0380 	ubfx	r3, r5, #2, #1
 800947c:	461a      	mov	r2, r3
 800947e:	9302      	str	r3, [sp, #8]
 8009480:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009482:	b112      	cbz	r2, 800948a <awe_audioPump+0x32>
 8009484:	f043 0301 	orr.w	r3, r3, #1
 8009488:	6423      	str	r3, [r4, #64]	@ 0x40
 800948a:	f8df 8258 	ldr.w	r8, [pc, #600]	@ 80096e4 <awe_audioPump+0x28c>
 800948e:	f8d6 90f4 	ldr.w	r9, [r6, #244]	@ 0xf4
 8009492:	f8d8 2000 	ldr.w	r2, [r8]
 8009496:	9203      	str	r2, [sp, #12]
 8009498:	0719      	lsls	r1, r3, #28
 800949a:	f005 0220 	and.w	r2, r5, #32
 800949e:	9607      	str	r6, [sp, #28]
 80094a0:	f8c8 6000 	str.w	r6, [r8]
 80094a4:	9201      	str	r2, [sp, #4]
 80094a6:	bf52      	itee	pl
 80094a8:	f1c9 0b08 	rsbpl	fp, r9, #8
 80094ac:	f04f 0b08 	movmi.w	fp, #8
 80094b0:	f04f 0900 	movmi.w	r9, #0
 80094b4:	b672      	cpsid	i
 80094b6:	f7f8 ffa7 	bl	8002408 <aweuser_getCycleCount>
 80094ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80094bc:	2200      	movs	r2, #0
 80094be:	f043 0304 	orr.w	r3, r3, #4
 80094c2:	4682      	mov	sl, r0
 80094c4:	6423      	str	r3, [r4, #64]	@ 0x40
 80094c6:	64a2      	str	r2, [r4, #72]	@ 0x48
 80094c8:	b662      	cpsie	i
 80094ca:	9b01      	ldr	r3, [sp, #4]
 80094cc:	b92b      	cbnz	r3, 80094da <awe_audioPump+0x82>
 80094ce:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80094d0:	2800      	cmp	r0, #0
 80094d2:	f040 80eb 	bne.w	80096ac <awe_audioPump+0x254>
 80094d6:	f8c4 a034 	str.w	sl, [r4, #52]	@ 0x34
 80094da:	9907      	ldr	r1, [sp, #28]
 80094dc:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80094e0:	42a3      	cmp	r3, r4
 80094e2:	f000 80c2 	beq.w	800966a <awe_audioPump+0x212>
 80094e6:	f015 0510 	ands.w	r5, r5, #16
 80094ea:	d147      	bne.n	800957c <awe_audioPump+0x124>
 80094ec:	b672      	cpsid	i
 80094ee:	6465      	str	r5, [r4, #68]	@ 0x44
 80094f0:	f7f8 ff8a 	bl	8002408 <aweuser_getCycleCount>
 80094f4:	b662      	cpsie	i
 80094f6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80094f8:	2b00      	cmp	r3, #0
 80094fa:	d051      	beq.n	80095a0 <awe_audioPump+0x148>
 80094fc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80094fe:	9907      	ldr	r1, [sp, #28]
 8009500:	681f      	ldr	r7, [r3, #0]
 8009502:	2f00      	cmp	r7, #0
 8009504:	d04d      	beq.n	80095a2 <awe_audioPump+0x14a>
 8009506:	e9cd a604 	strd	sl, r6, [sp, #16]
 800950a:	4606      	mov	r6, r0
 800950c:	e007      	b.n	800951e <awe_audioPump+0xc6>
 800950e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009510:	9907      	ldr	r1, [sp, #28]
 8009512:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
 8009516:	4656      	mov	r6, sl
 8009518:	2f00      	cmp	r7, #0
 800951a:	f000 80db 	beq.w	80096d4 <awe_audioPump+0x27c>
 800951e:	697a      	ldr	r2, [r7, #20]
 8009520:	f8c8 1000 	str.w	r1, [r8]
 8009524:	4638      	mov	r0, r7
 8009526:	60fc      	str	r4, [r7, #12]
 8009528:	4790      	blx	r2
 800952a:	f7f8 ff6d 	bl	8002408 <aweuser_getCycleCount>
 800952e:	4601      	mov	r1, r0
 8009530:	4682      	mov	sl, r0
 8009532:	4630      	mov	r0, r6
 8009534:	f7f8 ff74 	bl	8002420 <aweuser_getElapsedCycles>
 8009538:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800953a:	69f9      	ldr	r1, [r7, #28]
 800953c:	1ac3      	subs	r3, r0, r3
 800953e:	fa03 f30b 	lsl.w	r3, r3, fp
 8009542:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8009544:	440b      	add	r3, r1
 8009546:	3501      	adds	r5, #1
 8009548:	fa21 f109 	lsr.w	r1, r1, r9
 800954c:	2200      	movs	r2, #0
 800954e:	1a5b      	subs	r3, r3, r1
 8009550:	4285      	cmp	r5, r0
 8009552:	6462      	str	r2, [r4, #68]	@ 0x44
 8009554:	61fb      	str	r3, [r7, #28]
 8009556:	d3da      	bcc.n	800950e <awe_audioPump+0xb6>
 8009558:	9907      	ldr	r1, [sp, #28]
 800955a:	e9dd a604 	ldrd	sl, r6, [sp, #16]
 800955e:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 8009562:	e020      	b.n	80095a6 <awe_audioPump+0x14e>
 8009564:	f06f 0019 	mvn.w	r0, #25
 8009568:	062b      	lsls	r3, r5, #24
 800956a:	d504      	bpl.n	8009576 <awe_audioPump+0x11e>
 800956c:	f025 0580 	bic.w	r5, r5, #128	@ 0x80
 8009570:	f8c6 50a0 	str.w	r5, [r6, #160]	@ 0xa0
 8009574:	2001      	movs	r0, #1
 8009576:	b009      	add	sp, #36	@ 0x24
 8009578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800957c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800957e:	b192      	cbz	r2, 80095a6 <awe_audioPump+0x14e>
 8009580:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8009582:	6810      	ldr	r0, [r2, #0]
 8009584:	b178      	cbz	r0, 80095a6 <awe_audioPump+0x14e>
 8009586:	2500      	movs	r5, #0
 8009588:	e003      	b.n	8009592 <awe_audioPump+0x13a>
 800958a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800958c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009590:	b130      	cbz	r0, 80095a0 <awe_audioPump+0x148>
 8009592:	6943      	ldr	r3, [r0, #20]
 8009594:	60c4      	str	r4, [r0, #12]
 8009596:	4798      	blx	r3
 8009598:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800959a:	3501      	adds	r5, #1
 800959c:	429d      	cmp	r5, r3
 800959e:	d3f4      	bcc.n	800958a <awe_audioPump+0x132>
 80095a0:	9907      	ldr	r1, [sp, #28]
 80095a2:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80095a6:	42a3      	cmp	r3, r4
 80095a8:	d07b      	beq.n	80096a2 <awe_audioPump+0x24a>
 80095aa:	9b01      	ldr	r3, [sp, #4]
 80095ac:	bb5b      	cbnz	r3, 8009606 <awe_audioPump+0x1ae>
 80095ae:	b672      	cpsid	i
 80095b0:	f7f8 ff2a 	bl	8002408 <aweuser_getCycleCount>
 80095b4:	4601      	mov	r1, r0
 80095b6:	4650      	mov	r0, sl
 80095b8:	f7f8 ff32 	bl	8002420 <aweuser_getElapsedCycles>
 80095bc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80095be:	1ac0      	subs	r0, r0, r3
 80095c0:	b662      	cpsie	i
 80095c2:	69e2      	ldr	r2, [r4, #28]
 80095c4:	0203      	lsls	r3, r0, #8
 80095c6:	4293      	cmp	r3, r2
 80095c8:	6263      	str	r3, [r4, #36]	@ 0x24
 80095ca:	bf88      	it	hi
 80095cc:	61e3      	strhi	r3, [r4, #28]
 80095ce:	69a3      	ldr	r3, [r4, #24]
 80095d0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80095d2:	fa23 f909 	lsr.w	r9, r3, r9
 80095d6:	fa00 fb0b 	lsl.w	fp, r0, fp
 80095da:	eba3 0909 	sub.w	r9, r3, r9
 80095de:	eb09 030b 	add.w	r3, r9, fp
 80095e2:	61a3      	str	r3, [r4, #24]
 80095e4:	b17a      	cbz	r2, 8009606 <awe_audioPump+0x1ae>
 80095e6:	ee07 3a90 	vmov	s15, r3
 80095ea:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80096e0 <awe_audioPump+0x288>
 80095ee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80095f2:	ee07 2a10 	vmov	s14, r2
 80095f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80095fa:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80095fe:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8009602:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 8009606:	b672      	cpsid	i
 8009608:	9a07      	ldr	r2, [sp, #28]
 800960a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800960c:	f8d2 1114 	ldr.w	r1, [r2, #276]	@ 0x114
 8009610:	f023 0304 	bic.w	r3, r3, #4
 8009614:	2900      	cmp	r1, #0
 8009616:	6423      	str	r3, [r4, #64]	@ 0x40
 8009618:	4653      	mov	r3, sl
 800961a:	dd20      	ble.n	800965e <awe_audioPump+0x206>
 800961c:	f8d2 0110 	ldr.w	r0, [r2, #272]	@ 0x110
 8009620:	4622      	mov	r2, r4
 8009622:	f000 fb53 	bl	8009ccc <awe_fwCalcPreemptionOverhead>
 8009626:	2300      	movs	r3, #0
 8009628:	64a3      	str	r3, [r4, #72]	@ 0x48
 800962a:	b662      	cpsie	i
 800962c:	6a23      	ldr	r3, [r4, #32]
 800962e:	9a03      	ldr	r2, [sp, #12]
 8009630:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009632:	f8c8 2000 	str.w	r2, [r8]
 8009636:	1c5a      	adds	r2, r3, #1
 8009638:	6222      	str	r2, [r4, #32]
 800963a:	9a02      	ldr	r2, [sp, #8]
 800963c:	f021 0308 	bic.w	r3, r1, #8
 8009640:	6423      	str	r3, [r4, #64]	@ 0x40
 8009642:	b10a      	cbz	r2, 8009648 <awe_audioPump+0x1f0>
 8009644:	f021 0309 	bic.w	r3, r1, #9
 8009648:	f8d6 50a0 	ldr.w	r5, [r6, #160]	@ 0xa0
 800964c:	f023 0310 	bic.w	r3, r3, #16
 8009650:	f025 0501 	bic.w	r5, r5, #1
 8009654:	6423      	str	r3, [r4, #64]	@ 0x40
 8009656:	2000      	movs	r0, #0
 8009658:	f8c6 50a0 	str.w	r5, [r6, #160]	@ 0xa0
 800965c:	e784      	b.n	8009568 <awe_audioPump+0x110>
 800965e:	4622      	mov	r2, r4
 8009660:	2101      	movs	r1, #1
 8009662:	a807      	add	r0, sp, #28
 8009664:	f000 fb32 	bl	8009ccc <awe_fwCalcPreemptionOverhead>
 8009668:	e7dd      	b.n	8009626 <awe_audioPump+0x1ce>
 800966a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800966c:	2a00      	cmp	r2, #0
 800966e:	f43f af3a 	beq.w	80094e6 <awe_audioPump+0x8e>
 8009672:	6817      	ldr	r7, [r2, #0]
 8009674:	2f00      	cmp	r7, #0
 8009676:	f47f af36 	bne.w	80094e6 <awe_audioPump+0x8e>
 800967a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800967c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800967e:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 8009682:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8009686:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800968a:	fb02 f203 	mul.w	r2, r2, r3
 800968e:	68c8      	ldr	r0, [r1, #12]
 8009690:	0092      	lsls	r2, r2, #2
 8009692:	4639      	mov	r1, r7
 8009694:	f024 fa5e 	bl	802db54 <memset>
 8009698:	9907      	ldr	r1, [sp, #28]
 800969a:	6327      	str	r7, [r4, #48]	@ 0x30
 800969c:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80096a0:	e781      	b.n	80095a6 <awe_audioPump+0x14e>
 80096a2:	4608      	mov	r0, r1
 80096a4:	4621      	mov	r1, r4
 80096a6:	f7ff fbe9 	bl	8008e7c <awe_fwDemoTimeoutTick.part.1>
 80096aa:	e77e      	b.n	80095aa <awe_audioPump+0x152>
 80096ac:	4651      	mov	r1, sl
 80096ae:	f7f8 feb7 	bl	8002420 <aweuser_getElapsedCycles>
 80096b2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80096b4:	b15b      	cbz	r3, 80096ce <awe_audioPump+0x276>
 80096b6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80096b8:	06d2      	lsls	r2, r2, #27
 80096ba:	f53f af0c 	bmi.w	80094d6 <awe_audioPump+0x7e>
 80096be:	fa23 f209 	lsr.w	r2, r3, r9
 80096c2:	fa00 f00b 	lsl.w	r0, r0, fp
 80096c6:	1a9b      	subs	r3, r3, r2
 80096c8:	4403      	add	r3, r0
 80096ca:	62a3      	str	r3, [r4, #40]	@ 0x28
 80096cc:	e703      	b.n	80094d6 <awe_audioPump+0x7e>
 80096ce:	0200      	lsls	r0, r0, #8
 80096d0:	62a0      	str	r0, [r4, #40]	@ 0x28
 80096d2:	e700      	b.n	80094d6 <awe_audioPump+0x7e>
 80096d4:	e9dd a604 	ldrd	sl, r6, [sp, #16]
 80096d8:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 80096dc:	e763      	b.n	80095a6 <awe_audioPump+0x14e>
 80096de:	bf00      	nop
 80096e0:	42c80000 	.word	0x42c80000
 80096e4:	20000ac0 	.word	0x20000ac0

080096e8 <awe_fwTick>:
 80096e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096ec:	b083      	sub	sp, #12
 80096ee:	2300      	movs	r3, #0
 80096f0:	9300      	str	r3, [sp, #0]
 80096f2:	4605      	mov	r5, r0
 80096f4:	2800      	cmp	r0, #0
 80096f6:	d034      	beq.n	8009762 <awe_fwTick+0x7a>
 80096f8:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80096fc:	4f1c      	ldr	r7, [pc, #112]	@ (8009770 <awe_fwTick+0x88>)
 80096fe:	f043 0301 	orr.w	r3, r3, #1
 8009702:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
 8009706:	aa01      	add	r2, sp, #4
 8009708:	4669      	mov	r1, sp
 800970a:	f8d7 8000 	ldr.w	r8, [r7]
 800970e:	6038      	str	r0, [r7, #0]
 8009710:	f000 f896 	bl	8009840 <awe_fwGetFirstLayoutObject>
 8009714:	bb10      	cbnz	r0, 800975c <awe_fwTick+0x74>
 8009716:	9c00      	ldr	r4, [sp, #0]
 8009718:	b304      	cbz	r4, 800975c <awe_fwTick+0x74>
 800971a:	6fee      	ldr	r6, [r5, #124]	@ 0x7c
 800971c:	f8df 9054 	ldr.w	r9, [pc, #84]	@ 8009774 <awe_fwTick+0x8c>
 8009720:	4630      	mov	r0, r6
 8009722:	aa01      	add	r2, sp, #4
 8009724:	4669      	mov	r1, sp
 8009726:	b11e      	cbz	r6, 8009730 <awe_fwTick+0x48>
 8009728:	f000 f870 	bl	800980c <awe_fwGetNextObject>
 800972c:	b9e0      	cbnz	r0, 8009768 <awe_fwTick+0x80>
 800972e:	9c00      	ldr	r4, [sp, #0]
 8009730:	9b01      	ldr	r3, [sp, #4]
 8009732:	67ec      	str	r4, [r5, #124]	@ 0x7c
 8009734:	444b      	add	r3, r9
 8009736:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800973a:	4626      	mov	r6, r4
 800973c:	d2f0      	bcs.n	8009720 <awe_fwTick+0x38>
 800973e:	b16c      	cbz	r4, 800975c <awe_fwTick+0x74>
 8009740:	69a3      	ldr	r3, [r4, #24]
 8009742:	011b      	lsls	r3, r3, #4
 8009744:	d5ec      	bpl.n	8009720 <awe_fwTick+0x38>
 8009746:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800974a:	4620      	mov	r0, r4
 800974c:	f000 fe5c 	bl	800a408 <ClassModule_Set>
 8009750:	69a3      	ldr	r3, [r4, #24]
 8009752:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8009756:	61a3      	str	r3, [r4, #24]
 8009758:	2001      	movs	r0, #1
 800975a:	e000      	b.n	800975e <awe_fwTick+0x76>
 800975c:	2000      	movs	r0, #0
 800975e:	f8c7 8000 	str.w	r8, [r7]
 8009762:	b003      	add	sp, #12
 8009764:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009768:	2000      	movs	r0, #0
 800976a:	67e8      	str	r0, [r5, #124]	@ 0x7c
 800976c:	e7f7      	b.n	800975e <awe_fwTick+0x76>
 800976e:	bf00      	nop
 8009770:	20000ac0 	.word	0x20000ac0
 8009774:	4110f800 	.word	0x4110f800

08009778 <awe_fwSetOverFlowDetectionStatus>:
 8009778:	b1b0      	cbz	r0, 80097a8 <awe_fwSetOverFlowDetectionStatus+0x30>
 800977a:	b151      	cbz	r1, 8009792 <awe_fwSetOverFlowDetectionStatus+0x1a>
 800977c:	2901      	cmp	r1, #1
 800977e:	d110      	bne.n	80097a2 <awe_fwSetOverFlowDetectionStatus+0x2a>
 8009780:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8009784:	f043 0304 	orr.w	r3, r3, #4
 8009788:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
 800978c:	2100      	movs	r1, #0
 800978e:	4608      	mov	r0, r1
 8009790:	4770      	bx	lr
 8009792:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8009796:	f023 0304 	bic.w	r3, r3, #4
 800979a:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
 800979e:	4608      	mov	r0, r1
 80097a0:	4770      	bx	lr
 80097a2:	f06f 0110 	mvn.w	r1, #16
 80097a6:	e7f2      	b.n	800978e <awe_fwSetOverFlowDetectionStatus+0x16>
 80097a8:	f06f 015a 	mvn.w	r1, #90	@ 0x5a
 80097ac:	e7ef      	b.n	800978e <awe_fwSetOverFlowDetectionStatus+0x16>
 80097ae:	bf00      	nop

080097b0 <awe_fwSetAutoResetFeatureStatus>:
 80097b0:	b1b0      	cbz	r0, 80097e0 <awe_fwSetAutoResetFeatureStatus+0x30>
 80097b2:	b151      	cbz	r1, 80097ca <awe_fwSetAutoResetFeatureStatus+0x1a>
 80097b4:	2901      	cmp	r1, #1
 80097b6:	d110      	bne.n	80097da <awe_fwSetAutoResetFeatureStatus+0x2a>
 80097b8:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80097bc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80097c0:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
 80097c4:	2100      	movs	r1, #0
 80097c6:	4608      	mov	r0, r1
 80097c8:	4770      	bx	lr
 80097ca:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80097ce:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80097d2:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
 80097d6:	4608      	mov	r0, r1
 80097d8:	4770      	bx	lr
 80097da:	f06f 0110 	mvn.w	r1, #16
 80097de:	e7f2      	b.n	80097c6 <awe_fwSetAutoResetFeatureStatus+0x16>
 80097e0:	f06f 015a 	mvn.w	r1, #90	@ 0x5a
 80097e4:	e7ef      	b.n	80097c6 <awe_fwSetAutoResetFeatureStatus+0x16>
 80097e6:	bf00      	nop

080097e8 <awe_layoutIsValid>:
 80097e8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80097ec:	3000      	adds	r0, #0
 80097ee:	bf18      	it	ne
 80097f0:	2001      	movne	r0, #1
 80097f2:	4770      	bx	lr

080097f4 <awe_audioIsStarted>:
 80097f4:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80097f6:	b10b      	cbz	r3, 80097fc <awe_audioIsStarted+0x8>
 80097f8:	685b      	ldr	r3, [r3, #4]
 80097fa:	b923      	cbnz	r3, 8009806 <awe_audioIsStarted+0x12>
 80097fc:	f8d0 00a0 	ldr.w	r0, [r0, #160]	@ 0xa0
 8009800:	f3c0 1080 	ubfx	r0, r0, #6, #1
 8009804:	4770      	bx	lr
 8009806:	2001      	movs	r0, #1
 8009808:	4770      	bx	lr
 800980a:	bf00      	nop

0800980c <awe_fwGetNextObject>:
 800980c:	b190      	cbz	r0, 8009834 <awe_fwGetNextObject+0x28>
 800980e:	6843      	ldr	r3, [r0, #4]
 8009810:	b183      	cbz	r3, 8009834 <awe_fwGetNextObject+0x28>
 8009812:	685b      	ldr	r3, [r3, #4]
 8009814:	f103 4382 	add.w	r3, r3, #1090519040	@ 0x41000000
 8009818:	f503 1388 	add.w	r3, r3, #1114112	@ 0x110000
 800981c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009820:	d208      	bcs.n	8009834 <awe_fwGetNextObject+0x28>
 8009822:	6803      	ldr	r3, [r0, #0]
 8009824:	600b      	str	r3, [r1, #0]
 8009826:	b143      	cbz	r3, 800983a <awe_fwGetNextObject+0x2e>
 8009828:	685b      	ldr	r3, [r3, #4]
 800982a:	b103      	cbz	r3, 800982e <awe_fwGetNextObject+0x22>
 800982c:	685b      	ldr	r3, [r3, #4]
 800982e:	6013      	str	r3, [r2, #0]
 8009830:	2000      	movs	r0, #0
 8009832:	4770      	bx	lr
 8009834:	f06f 0012 	mvn.w	r0, #18
 8009838:	4770      	bx	lr
 800983a:	f06f 0011 	mvn.w	r0, #17
 800983e:	4770      	bx	lr

08009840 <awe_fwGetFirstLayoutObject>:
 8009840:	b150      	cbz	r0, 8009858 <awe_fwGetFirstLayoutObject+0x18>
 8009842:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8009844:	b15b      	cbz	r3, 800985e <awe_fwGetFirstLayoutObject+0x1e>
 8009846:	600b      	str	r3, [r1, #0]
 8009848:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 800984a:	b113      	cbz	r3, 8009852 <awe_fwGetFirstLayoutObject+0x12>
 800984c:	685b      	ldr	r3, [r3, #4]
 800984e:	b103      	cbz	r3, 8009852 <awe_fwGetFirstLayoutObject+0x12>
 8009850:	685b      	ldr	r3, [r3, #4]
 8009852:	6013      	str	r3, [r2, #0]
 8009854:	2000      	movs	r0, #0
 8009856:	4770      	bx	lr
 8009858:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 800985c:	4770      	bx	lr
 800985e:	f06f 0011 	mvn.w	r0, #17
 8009862:	4770      	bx	lr

08009864 <awe_fwGetObjectByID>:
 8009864:	2800      	cmp	r0, #0
 8009866:	d044      	beq.n	80098f2 <awe_fwGetObjectByID+0x8e>
 8009868:	b470      	push	{r4, r5, r6}
 800986a:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
 800986e:	b1f5      	cbz	r5, 80098ae <awe_fwGetObjectByID+0x4a>
 8009870:	f247 542f 	movw	r4, #29999	@ 0x752f
 8009874:	42a1      	cmp	r1, r4
 8009876:	d912      	bls.n	800989e <awe_fwGetObjectByID+0x3a>
 8009878:	f5a1 44ea 	sub.w	r4, r1, #29952	@ 0x7500
 800987c:	3c2f      	subs	r4, #47	@ 0x2f
 800987e:	2c63      	cmp	r4, #99	@ 0x63
 8009880:	d815      	bhi.n	80098ae <awe_fwGetObjectByID+0x4a>
 8009882:	f8d0 609c 	ldr.w	r6, [r0, #156]	@ 0x9c
 8009886:	4434      	add	r4, r6
 8009888:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800988c:	b17c      	cbz	r4, 80098ae <awe_fwGetObjectByID+0x4a>
 800988e:	6861      	ldr	r1, [r4, #4]
 8009890:	6014      	str	r4, [r2, #0]
 8009892:	b101      	cbz	r1, 8009896 <awe_fwGetObjectByID+0x32>
 8009894:	6849      	ldr	r1, [r1, #4]
 8009896:	6019      	str	r1, [r3, #0]
 8009898:	2000      	movs	r0, #0
 800989a:	bc70      	pop	{r4, r5, r6}
 800989c:	4770      	bx	lr
 800989e:	f8d0 409c 	ldr.w	r4, [r0, #156]	@ 0x9c
 80098a2:	42a1      	cmp	r1, r4
 80098a4:	d803      	bhi.n	80098ae <awe_fwGetObjectByID+0x4a>
 80098a6:	f855 4021 	ldr.w	r4, [r5, r1, lsl #2]
 80098aa:	2c00      	cmp	r4, #0
 80098ac:	d1ef      	bne.n	800988e <awe_fwGetObjectByID+0x2a>
 80098ae:	6f04      	ldr	r4, [r0, #112]	@ 0x70
 80098b0:	6014      	str	r4, [r2, #0]
 80098b2:	b18c      	cbz	r4, 80098d8 <awe_fwGetObjectByID+0x74>
 80098b4:	f8d0 6098 	ldr.w	r6, [r0, #152]	@ 0x98
 80098b8:	b196      	cbz	r6, 80098e0 <awe_fwGetObjectByID+0x7c>
 80098ba:	68a0      	ldr	r0, [r4, #8]
 80098bc:	4281      	cmp	r1, r0
 80098be:	d012      	beq.n	80098e6 <awe_fwGetObjectByID+0x82>
 80098c0:	2001      	movs	r0, #1
 80098c2:	e004      	b.n	80098ce <awe_fwGetObjectByID+0x6a>
 80098c4:	42b0      	cmp	r0, r6
 80098c6:	d80b      	bhi.n	80098e0 <awe_fwGetObjectByID+0x7c>
 80098c8:	68a5      	ldr	r5, [r4, #8]
 80098ca:	42a9      	cmp	r1, r5
 80098cc:	d00b      	beq.n	80098e6 <awe_fwGetObjectByID+0x82>
 80098ce:	6824      	ldr	r4, [r4, #0]
 80098d0:	6014      	str	r4, [r2, #0]
 80098d2:	3001      	adds	r0, #1
 80098d4:	2c00      	cmp	r4, #0
 80098d6:	d1f5      	bne.n	80098c4 <awe_fwGetObjectByID+0x60>
 80098d8:	f06f 0011 	mvn.w	r0, #17
 80098dc:	bc70      	pop	{r4, r5, r6}
 80098de:	4770      	bx	lr
 80098e0:	f06f 005d 	mvn.w	r0, #93	@ 0x5d
 80098e4:	e7d9      	b.n	800989a <awe_fwGetObjectByID+0x36>
 80098e6:	6862      	ldr	r2, [r4, #4]
 80098e8:	b102      	cbz	r2, 80098ec <awe_fwGetObjectByID+0x88>
 80098ea:	6852      	ldr	r2, [r2, #4]
 80098ec:	601a      	str	r2, [r3, #0]
 80098ee:	2000      	movs	r0, #0
 80098f0:	e7d3      	b.n	800989a <awe_fwGetObjectByID+0x36>
 80098f2:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 80098f6:	4770      	bx	lr

080098f8 <awe_fwGetNextAvailableObjectID>:
 80098f8:	f8d0 3098 	ldr.w	r3, [r0, #152]	@ 0x98
 80098fc:	3301      	adds	r3, #1
 80098fe:	f8c0 3098 	str.w	r3, [r0, #152]	@ 0x98
 8009902:	4618      	mov	r0, r3
 8009904:	4770      	bx	lr
 8009906:	bf00      	nop

08009908 <awe_fwGetClassType>:
 8009908:	b110      	cbz	r0, 8009910 <awe_fwGetClassType+0x8>
 800990a:	6840      	ldr	r0, [r0, #4]
 800990c:	b100      	cbz	r0, 8009910 <awe_fwGetClassType+0x8>
 800990e:	6840      	ldr	r0, [r0, #4]
 8009910:	4770      	bx	lr
 8009912:	bf00      	nop

08009914 <awe_fwcreateLookupTable>:
 8009914:	b530      	push	{r4, r5, lr}
 8009916:	b085      	sub	sp, #20
 8009918:	2500      	movs	r5, #0
 800991a:	9503      	str	r5, [sp, #12]
 800991c:	b1c0      	cbz	r0, 8009950 <awe_fwcreateLookupTable+0x3c>
 800991e:	f101 0265 	add.w	r2, r1, #101	@ 0x65
 8009922:	ab03      	add	r3, sp, #12
 8009924:	f8c0 109c 	str.w	r1, [r0, #156]	@ 0x9c
 8009928:	0091      	lsls	r1, r2, #2
 800992a:	9300      	str	r3, [sp, #0]
 800992c:	2204      	movs	r2, #4
 800992e:	2302      	movs	r3, #2
 8009930:	4604      	mov	r4, r0
 8009932:	f016 f9dd 	bl	801fcf0 <awe_fwMallocCommon>
 8009936:	9b03      	ldr	r3, [sp, #12]
 8009938:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800993c:	42ab      	cmp	r3, r5
 800993e:	db02      	blt.n	8009946 <awe_fwcreateLookupTable+0x32>
 8009940:	4618      	mov	r0, r3
 8009942:	b005      	add	sp, #20
 8009944:	bd30      	pop	{r4, r5, pc}
 8009946:	4618      	mov	r0, r3
 8009948:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 800994c:	b005      	add	sp, #20
 800994e:	bd30      	pop	{r4, r5, pc}
 8009950:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 8009954:	4618      	mov	r0, r3
 8009956:	b005      	add	sp, #20
 8009958:	bd30      	pop	{r4, r5, pc}
 800995a:	bf00      	nop

0800995c <awe_fwSetIDPointer>:
 800995c:	b1e8      	cbz	r0, 800999a <awe_fwSetIDPointer+0x3e>
 800995e:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8009962:	b1d3      	cbz	r3, 800999a <awe_fwSetIDPointer+0x3e>
 8009964:	b410      	push	{r4}
 8009966:	f247 542f 	movw	r4, #29999	@ 0x752f
 800996a:	42a1      	cmp	r1, r4
 800996c:	d808      	bhi.n	8009980 <awe_fwSetIDPointer+0x24>
 800996e:	f8d0 009c 	ldr.w	r0, [r0, #156]	@ 0x9c
 8009972:	4288      	cmp	r0, r1
 8009974:	bf28      	it	cs
 8009976:	f843 2021 	strcs.w	r2, [r3, r1, lsl #2]
 800997a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800997e:	4770      	bx	lr
 8009980:	f5a1 41ea 	sub.w	r1, r1, #29952	@ 0x7500
 8009984:	392f      	subs	r1, #47	@ 0x2f
 8009986:	2963      	cmp	r1, #99	@ 0x63
 8009988:	d8f7      	bhi.n	800997a <awe_fwSetIDPointer+0x1e>
 800998a:	f8d0 009c 	ldr.w	r0, [r0, #156]	@ 0x9c
 800998e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009992:	4401      	add	r1, r0
 8009994:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8009998:	4770      	bx	lr
 800999a:	4770      	bx	lr

0800999c <awe_fwSetObjectID>:
 800999c:	2800      	cmp	r0, #0
 800999e:	f000 80ad 	beq.w	8009afc <awe_fwSetObjectID+0x160>
 80099a2:	b4f0      	push	{r4, r5, r6, r7}
 80099a4:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
 80099a8:	b1e5      	cbz	r5, 80099e4 <awe_fwSetObjectID+0x48>
 80099aa:	f247 542f 	movw	r4, #29999	@ 0x752f
 80099ae:	42a2      	cmp	r2, r4
 80099b0:	d90f      	bls.n	80099d2 <awe_fwSetObjectID+0x36>
 80099b2:	f5a2 43ea 	sub.w	r3, r2, #29952	@ 0x7500
 80099b6:	3b2f      	subs	r3, #47	@ 0x2f
 80099b8:	2b63      	cmp	r3, #99	@ 0x63
 80099ba:	f200 8081 	bhi.w	8009ac0 <awe_fwSetObjectID+0x124>
 80099be:	f8d0 409c 	ldr.w	r4, [r0, #156]	@ 0x9c
 80099c2:	4423      	add	r3, r4
 80099c4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80099c8:	b163      	cbz	r3, 80099e4 <awe_fwSetObjectID+0x48>
 80099ca:	f06f 0043 	mvn.w	r0, #67	@ 0x43
 80099ce:	bcf0      	pop	{r4, r5, r6, r7}
 80099d0:	4770      	bx	lr
 80099d2:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
 80099d6:	429a      	cmp	r2, r3
 80099d8:	f200 8085 	bhi.w	8009ae6 <awe_fwSetObjectID+0x14a>
 80099dc:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d1f2      	bne.n	80099ca <awe_fwSetObjectID+0x2e>
 80099e4:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80099e6:	b19b      	cbz	r3, 8009a10 <awe_fwSetObjectID+0x74>
 80099e8:	f8d0 c098 	ldr.w	ip, [r0, #152]	@ 0x98
 80099ec:	f1bc 0f00 	cmp.w	ip, #0
 80099f0:	d00e      	beq.n	8009a10 <awe_fwSetObjectID+0x74>
 80099f2:	689c      	ldr	r4, [r3, #8]
 80099f4:	42a2      	cmp	r2, r4
 80099f6:	d0e8      	beq.n	80099ca <awe_fwSetObjectID+0x2e>
 80099f8:	461c      	mov	r4, r3
 80099fa:	2601      	movs	r6, #1
 80099fc:	e004      	b.n	8009a08 <awe_fwSetObjectID+0x6c>
 80099fe:	4566      	cmp	r6, ip
 8009a00:	d806      	bhi.n	8009a10 <awe_fwSetObjectID+0x74>
 8009a02:	68a7      	ldr	r7, [r4, #8]
 8009a04:	42ba      	cmp	r2, r7
 8009a06:	d0e0      	beq.n	80099ca <awe_fwSetObjectID+0x2e>
 8009a08:	6824      	ldr	r4, [r4, #0]
 8009a0a:	3601      	adds	r6, #1
 8009a0c:	2c00      	cmp	r4, #0
 8009a0e:	d1f6      	bne.n	80099fe <awe_fwSetObjectID+0x62>
 8009a10:	f247 542f 	movw	r4, #29999	@ 0x752f
 8009a14:	42a2      	cmp	r2, r4
 8009a16:	d96e      	bls.n	8009af6 <awe_fwSetObjectID+0x15a>
 8009a18:	b37d      	cbz	r5, 8009a7a <awe_fwSetObjectID+0xde>
 8009a1a:	42a1      	cmp	r1, r4
 8009a1c:	d920      	bls.n	8009a60 <awe_fwSetObjectID+0xc4>
 8009a1e:	f5a1 46ea 	sub.w	r6, r1, #29952	@ 0x7500
 8009a22:	f1a6 042f 	sub.w	r4, r6, #47	@ 0x2f
 8009a26:	2c63      	cmp	r4, #99	@ 0x63
 8009a28:	d827      	bhi.n	8009a7a <awe_fwSetObjectID+0xde>
 8009a2a:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
 8009a2e:	443c      	add	r4, r7
 8009a30:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8009a34:	b30c      	cbz	r4, 8009a7a <awe_fwSetObjectID+0xde>
 8009a36:	3e2f      	subs	r6, #47	@ 0x2f
 8009a38:	2e63      	cmp	r6, #99	@ 0x63
 8009a3a:	d934      	bls.n	8009aa6 <awe_fwSetObjectID+0x10a>
 8009a3c:	60a2      	str	r2, [r4, #8]
 8009a3e:	b165      	cbz	r5, 8009a5a <awe_fwSetObjectID+0xbe>
 8009a40:	f5a2 42ea 	sub.w	r2, r2, #29952	@ 0x7500
 8009a44:	3a2f      	subs	r2, #47	@ 0x2f
 8009a46:	2a63      	cmp	r2, #99	@ 0x63
 8009a48:	d807      	bhi.n	8009a5a <awe_fwSetObjectID+0xbe>
 8009a4a:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
 8009a4e:	441a      	add	r2, r3
 8009a50:	2000      	movs	r0, #0
 8009a52:	f845 4022 	str.w	r4, [r5, r2, lsl #2]
 8009a56:	bcf0      	pop	{r4, r5, r6, r7}
 8009a58:	4770      	bx	lr
 8009a5a:	2000      	movs	r0, #0
 8009a5c:	bcf0      	pop	{r4, r5, r6, r7}
 8009a5e:	4770      	bx	lr
 8009a60:	f8d0 409c 	ldr.w	r4, [r0, #156]	@ 0x9c
 8009a64:	42a1      	cmp	r1, r4
 8009a66:	d808      	bhi.n	8009a7a <awe_fwSetObjectID+0xde>
 8009a68:	f855 4021 	ldr.w	r4, [r5, r1, lsl #2]
 8009a6c:	b12c      	cbz	r4, 8009a7a <awe_fwSetObjectID+0xde>
 8009a6e:	2300      	movs	r3, #0
 8009a70:	f845 3021 	str.w	r3, [r5, r1, lsl #2]
 8009a74:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
 8009a78:	e7e0      	b.n	8009a3c <awe_fwSetObjectID+0xa0>
 8009a7a:	b183      	cbz	r3, 8009a9e <awe_fwSetObjectID+0x102>
 8009a7c:	f8d0 7098 	ldr.w	r7, [r0, #152]	@ 0x98
 8009a80:	b16f      	cbz	r7, 8009a9e <awe_fwSetObjectID+0x102>
 8009a82:	689c      	ldr	r4, [r3, #8]
 8009a84:	42a1      	cmp	r1, r4
 8009a86:	d017      	beq.n	8009ab8 <awe_fwSetObjectID+0x11c>
 8009a88:	2401      	movs	r4, #1
 8009a8a:	e004      	b.n	8009a96 <awe_fwSetObjectID+0xfa>
 8009a8c:	42bc      	cmp	r4, r7
 8009a8e:	d806      	bhi.n	8009a9e <awe_fwSetObjectID+0x102>
 8009a90:	689e      	ldr	r6, [r3, #8]
 8009a92:	42b1      	cmp	r1, r6
 8009a94:	d010      	beq.n	8009ab8 <awe_fwSetObjectID+0x11c>
 8009a96:	681b      	ldr	r3, [r3, #0]
 8009a98:	3401      	adds	r4, #1
 8009a9a:	2b00      	cmp	r3, #0
 8009a9c:	d1f6      	bne.n	8009a8c <awe_fwSetObjectID+0xf0>
 8009a9e:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 8009aa2:	bcf0      	pop	{r4, r5, r6, r7}
 8009aa4:	4770      	bx	lr
 8009aa6:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
 8009aaa:	441e      	add	r6, r3
 8009aac:	2300      	movs	r3, #0
 8009aae:	f845 3026 	str.w	r3, [r5, r6, lsl #2]
 8009ab2:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
 8009ab6:	e7c1      	b.n	8009a3c <awe_fwSetObjectID+0xa0>
 8009ab8:	bb4d      	cbnz	r5, 8009b0e <awe_fwSetObjectID+0x172>
 8009aba:	609a      	str	r2, [r3, #8]
 8009abc:	4628      	mov	r0, r5
 8009abe:	e786      	b.n	80099ce <awe_fwSetObjectID+0x32>
 8009ac0:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8009ac2:	2b00      	cmp	r3, #0
 8009ac4:	d190      	bne.n	80099e8 <awe_fwSetObjectID+0x4c>
 8009ac6:	42a1      	cmp	r1, r4
 8009ac8:	d9ca      	bls.n	8009a60 <awe_fwSetObjectID+0xc4>
 8009aca:	f5a1 46ea 	sub.w	r6, r1, #29952	@ 0x7500
 8009ace:	f1a6 032f 	sub.w	r3, r6, #47	@ 0x2f
 8009ad2:	2b63      	cmp	r3, #99	@ 0x63
 8009ad4:	d8e3      	bhi.n	8009a9e <awe_fwSetObjectID+0x102>
 8009ad6:	f8d0 109c 	ldr.w	r1, [r0, #156]	@ 0x9c
 8009ada:	440b      	add	r3, r1
 8009adc:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8009ae0:	2c00      	cmp	r4, #0
 8009ae2:	d1a8      	bne.n	8009a36 <awe_fwSetObjectID+0x9a>
 8009ae4:	e7db      	b.n	8009a9e <awe_fwSetObjectID+0x102>
 8009ae6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8009ae8:	b12b      	cbz	r3, 8009af6 <awe_fwSetObjectID+0x15a>
 8009aea:	f8d0 c098 	ldr.w	ip, [r0, #152]	@ 0x98
 8009aee:	f1bc 0f00 	cmp.w	ip, #0
 8009af2:	f47f af7e 	bne.w	80099f2 <awe_fwSetObjectID+0x56>
 8009af6:	f06f 0044 	mvn.w	r0, #68	@ 0x44
 8009afa:	e768      	b.n	80099ce <awe_fwSetObjectID+0x32>
 8009afc:	f247 532f 	movw	r3, #29999	@ 0x752f
 8009b00:	429a      	cmp	r2, r3
 8009b02:	bf8c      	ite	hi
 8009b04:	f06f 004e 	mvnhi.w	r0, #78	@ 0x4e
 8009b08:	f06f 0044 	mvnls.w	r0, #68	@ 0x44
 8009b0c:	4770      	bx	lr
 8009b0e:	f247 542f 	movw	r4, #29999	@ 0x752f
 8009b12:	42a1      	cmp	r1, r4
 8009b14:	d805      	bhi.n	8009b22 <awe_fwSetObjectID+0x186>
 8009b16:	f8d0 409c 	ldr.w	r4, [r0, #156]	@ 0x9c
 8009b1a:	42a1      	cmp	r1, r4
 8009b1c:	d805      	bhi.n	8009b2a <awe_fwSetObjectID+0x18e>
 8009b1e:	461c      	mov	r4, r3
 8009b20:	e7a5      	b.n	8009a6e <awe_fwSetObjectID+0xd2>
 8009b22:	461c      	mov	r4, r3
 8009b24:	f5a1 46ea 	sub.w	r6, r1, #29952	@ 0x7500
 8009b28:	e785      	b.n	8009a36 <awe_fwSetObjectID+0x9a>
 8009b2a:	609a      	str	r2, [r3, #8]
 8009b2c:	461c      	mov	r4, r3
 8009b2e:	e787      	b.n	8009a40 <awe_fwSetObjectID+0xa4>

08009b30 <awe_fwGetProfileValues>:
 8009b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b34:	9f08      	ldr	r7, [sp, #32]
 8009b36:	2800      	cmp	r0, #0
 8009b38:	f000 80c2 	beq.w	8009cc0 <awe_fwGetProfileValues+0x190>
 8009b3c:	4690      	mov	r8, r2
 8009b3e:	2a00      	cmp	r2, #0
 8009b40:	f000 80bb 	beq.w	8009cba <awe_fwGetProfileValues+0x18a>
 8009b44:	4699      	mov	r9, r3
 8009b46:	2b00      	cmp	r3, #0
 8009b48:	f000 80b7 	beq.w	8009cba <awe_fwGetProfileValues+0x18a>
 8009b4c:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
 8009b50:	f8d0 a0a0 	ldr.w	sl, [r0, #160]	@ 0xa0
 8009b54:	4606      	mov	r6, r0
 8009b56:	b18c      	cbz	r4, 8009b7c <awe_fwGetProfileValues+0x4c>
 8009b58:	460d      	mov	r5, r1
 8009b5a:	f7ff fe4b 	bl	80097f4 <awe_audioIsStarted>
 8009b5e:	2800      	cmp	r0, #0
 8009b60:	d050      	beq.n	8009c04 <awe_fwGetProfileValues+0xd4>
 8009b62:	b9a7      	cbnz	r7, 8009b8e <awe_fwGetProfileValues+0x5e>
 8009b64:	463a      	mov	r2, r7
 8009b66:	2d00      	cmp	r5, #0
 8009b68:	f3ca 0380 	ubfx	r3, sl, #2, #1
 8009b6c:	db28      	blt.n	8009bc0 <awe_fwGetProfileValues+0x90>
 8009b6e:	d102      	bne.n	8009b76 <awe_fwGetProfileValues+0x46>
 8009b70:	e04e      	b.n	8009c10 <awe_fwGetProfileValues+0xe0>
 8009b72:	3d01      	subs	r5, #1
 8009b74:	d04c      	beq.n	8009c10 <awe_fwGetProfileValues+0xe0>
 8009b76:	68e4      	ldr	r4, [r4, #12]
 8009b78:	2c00      	cmp	r4, #0
 8009b7a:	d1fa      	bne.n	8009b72 <awe_fwGetProfileValues+0x42>
 8009b7c:	2300      	movs	r3, #0
 8009b7e:	f8c8 3000 	str.w	r3, [r8]
 8009b82:	f06f 0019 	mvn.w	r0, #25
 8009b86:	f8c9 3000 	str.w	r3, [r9]
 8009b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b8e:	6e73      	ldr	r3, [r6, #100]	@ 0x64
 8009b90:	2b00      	cmp	r3, #0
 8009b92:	d058      	beq.n	8009c46 <awe_fwGetProfileValues+0x116>
 8009b94:	ed93 7a04 	vldr	s14, [r3, #16]
 8009b98:	ed96 6a16 	vldr	s12, [r6, #88]	@ 0x58
 8009b9c:	edd6 6a13 	vldr	s13, [r6, #76]	@ 0x4c
 8009ba0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8009ba4:	eec7 7a06 	vdiv.f32	s15, s14, s12
 8009ba8:	2d00      	cmp	r5, #0
 8009baa:	f3ca 0380 	ubfx	r3, sl, #2, #1
 8009bae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8009bb2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009bb6:	ee17 2a90 	vmov	r2, s15
 8009bba:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8009bbe:	dad6      	bge.n	8009b6e <awe_fwGetProfileValues+0x3e>
 8009bc0:	f8d6 c080 	ldr.w	ip, [r6, #128]	@ 0x80
 8009bc4:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
 8009bc8:	2b00      	cmp	r3, #0
 8009bca:	d04b      	beq.n	8009c64 <awe_fwGetProfileValues+0x134>
 8009bcc:	2600      	movs	r6, #0
 8009bce:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009bd0:	f021 0002 	bic.w	r0, r1, #2
 8009bd4:	0789      	lsls	r1, r1, #30
 8009bd6:	d509      	bpl.n	8009bec <awe_fwGetProfileValues+0xbc>
 8009bd8:	6420      	str	r0, [r4, #64]	@ 0x40
 8009bda:	68e4      	ldr	r4, [r4, #12]
 8009bdc:	2c00      	cmp	r4, #0
 8009bde:	d05a      	beq.n	8009c96 <awe_fwGetProfileValues+0x166>
 8009be0:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009be2:	f021 0002 	bic.w	r0, r1, #2
 8009be6:	0789      	lsls	r1, r1, #30
 8009be8:	461e      	mov	r6, r3
 8009bea:	d4f5      	bmi.n	8009bd8 <awe_fwGetProfileValues+0xa8>
 8009bec:	68e4      	ldr	r4, [r4, #12]
 8009bee:	2c00      	cmp	r4, #0
 8009bf0:	d1ed      	bne.n	8009bce <awe_fwGetProfileValues+0x9e>
 8009bf2:	2f00      	cmp	r7, #0
 8009bf4:	d151      	bne.n	8009c9a <awe_fwGetProfileValues+0x16a>
 8009bf6:	2e00      	cmp	r6, #0
 8009bf8:	d065      	beq.n	8009cc6 <awe_fwGetProfileValues+0x196>
 8009bfa:	f04f 33ff 	mov.w	r3, #4294967295
 8009bfe:	f8c8 3000 	str.w	r3, [r8]
 8009c02:	e043      	b.n	8009c8c <awe_fwGetProfileValues+0x15c>
 8009c04:	f8c8 0000 	str.w	r0, [r8]
 8009c08:	f8c9 0000 	str.w	r0, [r9]
 8009c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c10:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8009c12:	b183      	cbz	r3, 8009c36 <awe_fwGetProfileValues+0x106>
 8009c14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009c16:	0798      	lsls	r0, r3, #30
 8009c18:	d50d      	bpl.n	8009c36 <awe_fwGetProfileValues+0x106>
 8009c1a:	f023 0302 	bic.w	r3, r3, #2
 8009c1e:	6423      	str	r3, [r4, #64]	@ 0x40
 8009c20:	2f00      	cmp	r7, #0
 8009c22:	d041      	beq.n	8009ca8 <awe_fwGetProfileValues+0x178>
 8009c24:	b95a      	cbnz	r2, 8009c3e <awe_fwGetProfileValues+0x10e>
 8009c26:	69a3      	ldr	r3, [r4, #24]
 8009c28:	f8c8 3000 	str.w	r3, [r8]
 8009c2c:	2000      	movs	r0, #0
 8009c2e:	f8c9 1000 	str.w	r1, [r9]
 8009c32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c36:	2f00      	cmp	r7, #0
 8009c38:	d0f5      	beq.n	8009c26 <awe_fwGetProfileValues+0xf6>
 8009c3a:	2a00      	cmp	r2, #0
 8009c3c:	d0f3      	beq.n	8009c26 <awe_fwGetProfileValues+0xf6>
 8009c3e:	6921      	ldr	r1, [r4, #16]
 8009c40:	fb01 f102 	mul.w	r1, r1, r2
 8009c44:	e7ef      	b.n	8009c26 <awe_fwGetProfileValues+0xf6>
 8009c46:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 8009c48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009c4a:	b382      	cbz	r2, 8009cae <awe_fwGetProfileValues+0x17e>
 8009c4c:	6993      	ldr	r3, [r2, #24]
 8009c4e:	ed96 6a16 	vldr	s12, [r6, #88]	@ 0x58
 8009c52:	edd6 6a13 	vldr	s13, [r6, #76]	@ 0x4c
 8009c56:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8009c5a:	ee07 3a90 	vmov	s15, r3
 8009c5e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8009c62:	e79f      	b.n	8009ba4 <awe_fwGetProfileValues+0x74>
 8009c64:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8009c68:	b9cf      	cbnz	r7, 8009c9e <awe_fwGetProfileValues+0x16e>
 8009c6a:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8009c6e:	f8dc 3018 	ldr.w	r3, [ip, #24]
 8009c72:	b149      	cbz	r1, 8009c88 <awe_fwGetProfileValues+0x158>
 8009c74:	690c      	ldr	r4, [r1, #16]
 8009c76:	6988      	ldr	r0, [r1, #24]
 8009c78:	68c9      	ldr	r1, [r1, #12]
 8009c7a:	fbb4 f4f6 	udiv	r4, r4, r6
 8009c7e:	fbb0 f0f4 	udiv	r0, r0, r4
 8009c82:	4403      	add	r3, r0
 8009c84:	2900      	cmp	r1, #0
 8009c86:	d1f5      	bne.n	8009c74 <awe_fwGetProfileValues+0x144>
 8009c88:	f8c8 3000 	str.w	r3, [r8]
 8009c8c:	f8c9 5000 	str.w	r5, [r9]
 8009c90:	2000      	movs	r0, #0
 8009c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c96:	2f00      	cmp	r7, #0
 8009c98:	d0af      	beq.n	8009bfa <awe_fwGetProfileValues+0xca>
 8009c9a:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8009c9e:	2a00      	cmp	r2, #0
 8009ca0:	d0e3      	beq.n	8009c6a <awe_fwGetProfileValues+0x13a>
 8009ca2:	fb06 f502 	mul.w	r5, r6, r2
 8009ca6:	e7e0      	b.n	8009c6a <awe_fwGetProfileValues+0x13a>
 8009ca8:	f04f 33ff 	mov.w	r3, #4294967295
 8009cac:	e7bc      	b.n	8009c28 <awe_fwGetProfileValues+0xf8>
 8009cae:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 8009cb0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009cb2:	2a00      	cmp	r2, #0
 8009cb4:	f43f af57 	beq.w	8009b66 <awe_fwGetProfileValues+0x36>
 8009cb8:	e7c8      	b.n	8009c4c <awe_fwGetProfileValues+0x11c>
 8009cba:	f06f 0010 	mvn.w	r0, #16
 8009cbe:	e7a5      	b.n	8009c0c <awe_fwGetProfileValues+0xdc>
 8009cc0:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 8009cc4:	e7a2      	b.n	8009c0c <awe_fwGetProfileValues+0xdc>
 8009cc6:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8009cca:	e7ce      	b.n	8009c6a <awe_fwGetProfileValues+0x13a>

08009ccc <awe_fwCalcPreemptionOverhead>:
 8009ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009cd0:	4604      	mov	r4, r0
 8009cd2:	460e      	mov	r6, r1
 8009cd4:	4698      	mov	r8, r3
 8009cd6:	b342      	cbz	r2, 8009d2a <awe_fwCalcPreemptionOverhead+0x5e>
 8009cd8:	e9d2 7512 	ldrd	r7, r5, [r2, #72]	@ 0x48
 8009cdc:	f7f8 fb94 	bl	8002408 <aweuser_getCycleCount>
 8009ce0:	4601      	mov	r1, r0
 8009ce2:	4640      	mov	r0, r8
 8009ce4:	f7f8 fb9c 	bl	8002420 <aweuser_getElapsedCycles>
 8009ce8:	1bc0      	subs	r0, r0, r7
 8009cea:	b1e4      	cbz	r4, 8009d26 <awe_fwCalcPreemptionOverhead+0x5a>
 8009cec:	2e00      	cmp	r6, #0
 8009cee:	dd1a      	ble.n	8009d26 <awe_fwCalcPreemptionOverhead+0x5a>
 8009cf0:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8009cf4:	3e04      	subs	r6, #4
 8009cf6:	1f21      	subs	r1, r4, #4
 8009cf8:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8009cfc:	b18b      	cbz	r3, 8009d22 <awe_fwCalcPreemptionOverhead+0x56>
 8009cfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009d02:	b173      	cbz	r3, 8009d22 <awe_fwCalcPreemptionOverhead+0x56>
 8009d04:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009d06:	0752      	lsls	r2, r2, #29
 8009d08:	d508      	bpl.n	8009d1c <awe_fwCalcPreemptionOverhead+0x50>
 8009d0a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009d0c:	42aa      	cmp	r2, r5
 8009d0e:	d105      	bne.n	8009d1c <awe_fwCalcPreemptionOverhead+0x50>
 8009d10:	e9d3 2411 	ldrd	r2, r4, [r3, #68]	@ 0x44
 8009d14:	4404      	add	r4, r0
 8009d16:	4402      	add	r2, r0
 8009d18:	e9c3 2411 	strd	r2, r4, [r3, #68]	@ 0x44
 8009d1c:	68db      	ldr	r3, [r3, #12]
 8009d1e:	2b00      	cmp	r3, #0
 8009d20:	d1f0      	bne.n	8009d04 <awe_fwCalcPreemptionOverhead+0x38>
 8009d22:	42b1      	cmp	r1, r6
 8009d24:	d1e8      	bne.n	8009cf8 <awe_fwCalcPreemptionOverhead+0x2c>
 8009d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d2a:	4617      	mov	r7, r2
 8009d2c:	4615      	mov	r5, r2
 8009d2e:	e7d5      	b.n	8009cdc <awe_fwCalcPreemptionOverhead+0x10>

08009d30 <awe_fwGetLayoutCoreAffinity>:
 8009d30:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 8009d34:	b119      	cbz	r1, 8009d3e <awe_fwGetLayoutCoreAffinity+0xe>
 8009d36:	b12b      	cbz	r3, 8009d44 <awe_fwGetLayoutCoreAffinity+0x14>
 8009d38:	3901      	subs	r1, #1
 8009d3a:	68db      	ldr	r3, [r3, #12]
 8009d3c:	d1fb      	bne.n	8009d36 <awe_fwGetLayoutCoreAffinity+0x6>
 8009d3e:	b10b      	cbz	r3, 8009d44 <awe_fwGetLayoutCoreAffinity+0x14>
 8009d40:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8009d42:	4770      	bx	lr
 8009d44:	f06f 0075 	mvn.w	r0, #117	@ 0x75
 8009d48:	4770      	bx	lr
 8009d4a:	bf00      	nop

08009d4c <awe_fwGetCall>:
 8009d4c:	6843      	ldr	r3, [r0, #4]
 8009d4e:	695b      	ldr	r3, [r3, #20]
 8009d50:	b103      	cbz	r3, 8009d54 <awe_fwGetCall+0x8>
 8009d52:	4718      	bx	r3
 8009d54:	4618      	mov	r0, r3
 8009d56:	4770      	bx	lr

08009d58 <awe_fwSetCallModID>:
 8009d58:	b510      	push	{r4, lr}
 8009d5a:	b082      	sub	sp, #8
 8009d5c:	4614      	mov	r4, r2
 8009d5e:	ab01      	add	r3, sp, #4
 8009d60:	466a      	mov	r2, sp
 8009d62:	f7ff fd7f 	bl	8009864 <awe_fwGetObjectByID>
 8009d66:	b978      	cbnz	r0, 8009d88 <awe_fwSetCallModID+0x30>
 8009d68:	9a01      	ldr	r2, [sp, #4]
 8009d6a:	4b0a      	ldr	r3, [pc, #40]	@ (8009d94 <awe_fwSetCallModID+0x3c>)
 8009d6c:	4413      	add	r3, r2
 8009d6e:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 8009d72:	d20c      	bcs.n	8009d8e <awe_fwSetCallModID+0x36>
 8009d74:	9800      	ldr	r0, [sp, #0]
 8009d76:	6843      	ldr	r3, [r0, #4]
 8009d78:	691b      	ldr	r3, [r3, #16]
 8009d7a:	b11b      	cbz	r3, 8009d84 <awe_fwSetCallModID+0x2c>
 8009d7c:	4621      	mov	r1, r4
 8009d7e:	4798      	blx	r3
 8009d80:	b002      	add	sp, #8
 8009d82:	bd10      	pop	{r4, pc}
 8009d84:	4618      	mov	r0, r3
 8009d86:	e7fb      	b.n	8009d80 <awe_fwSetCallModID+0x28>
 8009d88:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 8009d8c:	e7f8      	b.n	8009d80 <awe_fwSetCallModID+0x28>
 8009d8e:	f06f 000e 	mvn.w	r0, #14
 8009d92:	e7f5      	b.n	8009d80 <awe_fwSetCallModID+0x28>
 8009d94:	4110f800 	.word	0x4110f800

08009d98 <awe_fwGetCallModID>:
 8009d98:	b510      	push	{r4, lr}
 8009d9a:	b082      	sub	sp, #8
 8009d9c:	4614      	mov	r4, r2
 8009d9e:	ab01      	add	r3, sp, #4
 8009da0:	466a      	mov	r2, sp
 8009da2:	f7ff fd5f 	bl	8009864 <awe_fwGetObjectByID>
 8009da6:	b978      	cbnz	r0, 8009dc8 <awe_fwGetCallModID+0x30>
 8009da8:	9a01      	ldr	r2, [sp, #4]
 8009daa:	4b0a      	ldr	r3, [pc, #40]	@ (8009dd4 <awe_fwGetCallModID+0x3c>)
 8009dac:	4413      	add	r3, r2
 8009dae:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 8009db2:	d20c      	bcs.n	8009dce <awe_fwGetCallModID+0x36>
 8009db4:	9800      	ldr	r0, [sp, #0]
 8009db6:	6843      	ldr	r3, [r0, #4]
 8009db8:	695b      	ldr	r3, [r3, #20]
 8009dba:	b11b      	cbz	r3, 8009dc4 <awe_fwGetCallModID+0x2c>
 8009dbc:	4621      	mov	r1, r4
 8009dbe:	4798      	blx	r3
 8009dc0:	b002      	add	sp, #8
 8009dc2:	bd10      	pop	{r4, pc}
 8009dc4:	4618      	mov	r0, r3
 8009dc6:	e7fb      	b.n	8009dc0 <awe_fwGetCallModID+0x28>
 8009dc8:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 8009dcc:	e7f8      	b.n	8009dc0 <awe_fwGetCallModID+0x28>
 8009dce:	f06f 000e 	mvn.w	r0, #14
 8009dd2:	e7f5      	b.n	8009dc0 <awe_fwGetCallModID+0x28>
 8009dd4:	4110f800 	.word	0x4110f800

08009dd8 <awe_fwModuleClassGetCommon>:
 8009dd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ddc:	b083      	sub	sp, #12
 8009dde:	460d      	mov	r5, r1
 8009de0:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8009de2:	4617      	mov	r7, r2
 8009de4:	4699      	mov	r9, r3
 8009de6:	bb46      	cbnz	r6, 8009e3a <awe_fwModuleClassGetCommon+0x62>
 8009de8:	f401 6800 	and.w	r8, r1, #2048	@ 0x800
 8009dec:	0b29      	lsrs	r1, r5, #12
 8009dee:	ab01      	add	r3, sp, #4
 8009df0:	466a      	mov	r2, sp
 8009df2:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8009df6:	f7ff fd35 	bl	8009864 <awe_fwGetObjectByID>
 8009dfa:	b9d8      	cbnz	r0, 8009e34 <awe_fwModuleClassGetCommon+0x5c>
 8009dfc:	9b00      	ldr	r3, [sp, #0]
 8009dfe:	4a19      	ldr	r2, [pc, #100]	@ (8009e64 <awe_fwModuleClassGetCommon+0x8c>)
 8009e00:	9801      	ldr	r0, [sp, #4]
 8009e02:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8009e06:	4290      	cmp	r0, r2
 8009e08:	bf8c      	ite	hi
 8009e0a:	4618      	movhi	r0, r3
 8009e0c:	2000      	movls	r0, #0
 8009e0e:	f1b8 0f00 	cmp.w	r8, #0
 8009e12:	d117      	bne.n	8009e44 <awe_fwModuleClassGetCommon+0x6c>
 8009e14:	b1d4      	cbz	r4, 8009e4c <awe_fwModuleClassGetCommon+0x74>
 8009e16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009e18:	b12b      	cbz	r3, 8009e26 <awe_fwModuleClassGetCommon+0x4e>
 8009e1a:	b120      	cbz	r0, 8009e26 <awe_fwModuleClassGetCommon+0x4e>
 8009e1c:	6843      	ldr	r3, [r0, #4]
 8009e1e:	695b      	ldr	r3, [r3, #20]
 8009e20:	b10b      	cbz	r3, 8009e26 <awe_fwModuleClassGetCommon+0x4e>
 8009e22:	4649      	mov	r1, r9
 8009e24:	4798      	blx	r3
 8009e26:	00bb      	lsls	r3, r7, #2
 8009e28:	b9a6      	cbnz	r6, 8009e54 <awe_fwModuleClassGetCommon+0x7c>
 8009e2a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009e2c:	f854 3027 	ldr.w	r3, [r4, r7, lsl #2]
 8009e30:	6013      	str	r3, [r2, #0]
 8009e32:	4630      	mov	r0, r6
 8009e34:	b003      	add	sp, #12
 8009e36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e3a:	f421 6500 	bic.w	r5, r1, #2048	@ 0x800
 8009e3e:	f04f 0800 	mov.w	r8, #0
 8009e42:	e7d3      	b.n	8009dec <awe_fwModuleClassGetCommon+0x14>
 8009e44:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 8009e48:	2c00      	cmp	r4, #0
 8009e4a:	d1e4      	bne.n	8009e16 <awe_fwModuleClassGetCommon+0x3e>
 8009e4c:	2000      	movs	r0, #0
 8009e4e:	b003      	add	sp, #12
 8009e50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e54:	6821      	ldr	r1, [r4, #0]
 8009e56:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009e58:	00b2      	lsls	r2, r6, #2
 8009e5a:	4419      	add	r1, r3
 8009e5c:	f023 fef5 	bl	802dc4a <memcpy>
 8009e60:	2000      	movs	r0, #0
 8009e62:	e7f4      	b.n	8009e4e <awe_fwModuleClassGetCommon+0x76>
 8009e64:	beef07ff 	.word	0xbeef07ff

08009e68 <awe_fwModuleClassSetCommon>:
 8009e68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e6c:	b083      	sub	sp, #12
 8009e6e:	460c      	mov	r4, r1
 8009e70:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009e72:	4617      	mov	r7, r2
 8009e74:	4698      	mov	r8, r3
 8009e76:	bb1d      	cbnz	r5, 8009ec0 <awe_fwModuleClassSetCommon+0x58>
 8009e78:	f401 6600 	and.w	r6, r1, #2048	@ 0x800
 8009e7c:	0b21      	lsrs	r1, r4, #12
 8009e7e:	ab01      	add	r3, sp, #4
 8009e80:	466a      	mov	r2, sp
 8009e82:	f3c4 040a 	ubfx	r4, r4, #0, #11
 8009e86:	f7ff fced 	bl	8009864 <awe_fwGetObjectByID>
 8009e8a:	b9b0      	cbnz	r0, 8009eba <awe_fwModuleClassSetCommon+0x52>
 8009e8c:	9b00      	ldr	r3, [sp, #0]
 8009e8e:	4a19      	ldr	r2, [pc, #100]	@ (8009ef4 <awe_fwModuleClassSetCommon+0x8c>)
 8009e90:	9801      	ldr	r0, [sp, #4]
 8009e92:	4290      	cmp	r0, r2
 8009e94:	bf8c      	ite	hi
 8009e96:	4699      	movhi	r9, r3
 8009e98:	f04f 0900 	movls.w	r9, #0
 8009e9c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
 8009ea0:	b996      	cbnz	r6, 8009ec8 <awe_fwModuleClassSetCommon+0x60>
 8009ea2:	b14a      	cbz	r2, 8009eb8 <awe_fwModuleClassSetCommon+0x50>
 8009ea4:	00b8      	lsls	r0, r7, #2
 8009ea6:	b995      	cbnz	r5, 8009ece <awe_fwModuleClassSetCommon+0x66>
 8009ea8:	b672      	cpsid	i
 8009eaa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009eac:	681b      	ldr	r3, [r3, #0]
 8009eae:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8009eb2:	b662      	cpsie	i
 8009eb4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009eb6:	b9ab      	cbnz	r3, 8009ee4 <awe_fwModuleClassSetCommon+0x7c>
 8009eb8:	2000      	movs	r0, #0
 8009eba:	b003      	add	sp, #12
 8009ebc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ec0:	f421 6400 	bic.w	r4, r1, #2048	@ 0x800
 8009ec4:	2600      	movs	r6, #0
 8009ec6:	e7d9      	b.n	8009e7c <awe_fwModuleClassSetCommon+0x14>
 8009ec8:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 8009ecc:	e7e9      	b.n	8009ea2 <awe_fwModuleClassSetCommon+0x3a>
 8009ece:	6813      	ldr	r3, [r2, #0]
 8009ed0:	4418      	add	r0, r3
 8009ed2:	b672      	cpsid	i
 8009ed4:	00aa      	lsls	r2, r5, #2
 8009ed6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009ed8:	f023 feb7 	bl	802dc4a <memcpy>
 8009edc:	b662      	cpsie	i
 8009ede:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	d0e9      	beq.n	8009eb8 <awe_fwModuleClassSetCommon+0x50>
 8009ee4:	4641      	mov	r1, r8
 8009ee6:	4648      	mov	r0, r9
 8009ee8:	f000 fa8e 	bl	800a408 <ClassModule_Set>
 8009eec:	b003      	add	sp, #12
 8009eee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ef2:	bf00      	nop
 8009ef4:	beef07ff 	.word	0xbeef07ff

08009ef8 <awe_ctrlSetValueMask>:
 8009ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009efa:	460c      	mov	r4, r1
 8009efc:	2c00      	cmp	r4, #0
 8009efe:	f021 4140 	bic.w	r1, r1, #3221225472	@ 0xc0000000
 8009f02:	b083      	sub	sp, #12
 8009f04:	4615      	mov	r5, r2
 8009f06:	461e      	mov	r6, r3
 8009f08:	f421 6178 	bic.w	r1, r1, #3968	@ 0xf80
 8009f0c:	db23      	blt.n	8009f56 <awe_ctrlSetValueMask+0x5e>
 8009f0e:	9b08      	ldr	r3, [sp, #32]
 8009f10:	2b01      	cmp	r3, #1
 8009f12:	d140      	bne.n	8009f96 <awe_ctrlSetValueMask+0x9e>
 8009f14:	2e00      	cmp	r6, #0
 8009f16:	d13e      	bne.n	8009f96 <awe_ctrlSetValueMask+0x9e>
 8009f18:	0b09      	lsrs	r1, r1, #12
 8009f1a:	ab01      	add	r3, sp, #4
 8009f1c:	466a      	mov	r2, sp
 8009f1e:	f004 047f 	and.w	r4, r4, #127	@ 0x7f
 8009f22:	f7ff fc9f 	bl	8009864 <awe_fwGetObjectByID>
 8009f26:	b988      	cbnz	r0, 8009f4c <awe_ctrlSetValueMask+0x54>
 8009f28:	9b00      	ldr	r3, [sp, #0]
 8009f2a:	4922      	ldr	r1, [pc, #136]	@ (8009fb4 <awe_ctrlSetValueMask+0xbc>)
 8009f2c:	9801      	ldr	r0, [sp, #4]
 8009f2e:	eb03 0284 	add.w	r2, r3, r4, lsl #2
 8009f32:	4288      	cmp	r0, r1
 8009f34:	bf8c      	ite	hi
 8009f36:	4618      	movhi	r0, r3
 8009f38:	2000      	movls	r0, #0
 8009f3a:	b14a      	cbz	r2, 8009f50 <awe_ctrlSetValueMask+0x58>
 8009f3c:	b672      	cpsid	i
 8009f3e:	682a      	ldr	r2, [r5, #0]
 8009f40:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8009f44:	b662      	cpsie	i
 8009f46:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009f48:	f000 fa5e 	bl	800a408 <ClassModule_Set>
 8009f4c:	b003      	add	sp, #12
 8009f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f50:	2000      	movs	r0, #0
 8009f52:	b003      	add	sp, #12
 8009f54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f56:	0b09      	lsrs	r1, r1, #12
 8009f58:	ab01      	add	r3, sp, #4
 8009f5a:	466a      	mov	r2, sp
 8009f5c:	f004 047f 	and.w	r4, r4, #127	@ 0x7f
 8009f60:	f7ff fc80 	bl	8009864 <awe_fwGetObjectByID>
 8009f64:	2800      	cmp	r0, #0
 8009f66:	d1f1      	bne.n	8009f4c <awe_ctrlSetValueMask+0x54>
 8009f68:	9b00      	ldr	r3, [sp, #0]
 8009f6a:	4f12      	ldr	r7, [pc, #72]	@ (8009fb4 <awe_ctrlSetValueMask+0xbc>)
 8009f6c:	9801      	ldr	r0, [sp, #4]
 8009f6e:	42b8      	cmp	r0, r7
 8009f70:	bf8c      	ite	hi
 8009f72:	461f      	movhi	r7, r3
 8009f74:	2700      	movls	r7, #0
 8009f76:	eb13 0284 	adds.w	r2, r3, r4, lsl #2
 8009f7a:	d0e9      	beq.n	8009f50 <awe_ctrlSetValueMask+0x58>
 8009f7c:	9908      	ldr	r1, [sp, #32]
 8009f7e:	00b0      	lsls	r0, r6, #2
 8009f80:	b961      	cbnz	r1, 8009f9c <awe_ctrlSetValueMask+0xa4>
 8009f82:	b672      	cpsid	i
 8009f84:	682b      	ldr	r3, [r5, #0]
 8009f86:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8009f8a:	b662      	cpsie	i
 8009f8c:	4638      	mov	r0, r7
 8009f8e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009f90:	f000 fa3a 	bl	800a408 <ClassModule_Set>
 8009f94:	e7da      	b.n	8009f4c <awe_ctrlSetValueMask+0x54>
 8009f96:	f06f 0042 	mvn.w	r0, #66	@ 0x42
 8009f9a:	e7d7      	b.n	8009f4c <awe_ctrlSetValueMask+0x54>
 8009f9c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8009fa0:	4418      	add	r0, r3
 8009fa2:	b672      	cpsid	i
 8009fa4:	9b08      	ldr	r3, [sp, #32]
 8009fa6:	4629      	mov	r1, r5
 8009fa8:	009a      	lsls	r2, r3, #2
 8009faa:	f023 fe4e 	bl	802dc4a <memcpy>
 8009fae:	b662      	cpsie	i
 8009fb0:	e7ec      	b.n	8009f8c <awe_ctrlSetValueMask+0x94>
 8009fb2:	bf00      	nop
 8009fb4:	beef07ff 	.word	0xbeef07ff

08009fb8 <awe_ctrlSetValue>:
 8009fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009fbc:	2900      	cmp	r1, #0
 8009fbe:	f001 067f 	and.w	r6, r1, #127	@ 0x7f
 8009fc2:	f04f 0501 	mov.w	r5, #1
 8009fc6:	f021 4440 	bic.w	r4, r1, #3221225472	@ 0xc0000000
 8009fca:	b082      	sub	sp, #8
 8009fcc:	4617      	mov	r7, r2
 8009fce:	4698      	mov	r8, r3
 8009fd0:	fa05 f506 	lsl.w	r5, r5, r6
 8009fd4:	f424 6478 	bic.w	r4, r4, #3968	@ 0xf80
 8009fd8:	db24      	blt.n	800a024 <awe_ctrlSetValue+0x6c>
 8009fda:	9b08      	ldr	r3, [sp, #32]
 8009fdc:	2b01      	cmp	r3, #1
 8009fde:	d140      	bne.n	800a062 <awe_ctrlSetValue+0xaa>
 8009fe0:	f1b8 0f00 	cmp.w	r8, #0
 8009fe4:	d13d      	bne.n	800a062 <awe_ctrlSetValue+0xaa>
 8009fe6:	0b21      	lsrs	r1, r4, #12
 8009fe8:	ab01      	add	r3, sp, #4
 8009fea:	466a      	mov	r2, sp
 8009fec:	f7ff fc3a 	bl	8009864 <awe_fwGetObjectByID>
 8009ff0:	b988      	cbnz	r0, 800a016 <awe_ctrlSetValue+0x5e>
 8009ff2:	9b00      	ldr	r3, [sp, #0]
 8009ff4:	4922      	ldr	r1, [pc, #136]	@ (800a080 <awe_ctrlSetValue+0xc8>)
 8009ff6:	9801      	ldr	r0, [sp, #4]
 8009ff8:	eb03 0286 	add.w	r2, r3, r6, lsl #2
 8009ffc:	4288      	cmp	r0, r1
 8009ffe:	bf8c      	ite	hi
 800a000:	4618      	movhi	r0, r3
 800a002:	2000      	movls	r0, #0
 800a004:	b152      	cbz	r2, 800a01c <awe_ctrlSetValue+0x64>
 800a006:	b672      	cpsid	i
 800a008:	683a      	ldr	r2, [r7, #0]
 800a00a:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800a00e:	b662      	cpsie	i
 800a010:	4629      	mov	r1, r5
 800a012:	f000 f9f9 	bl	800a408 <ClassModule_Set>
 800a016:	b002      	add	sp, #8
 800a018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a01c:	2000      	movs	r0, #0
 800a01e:	b002      	add	sp, #8
 800a020:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a024:	0b21      	lsrs	r1, r4, #12
 800a026:	ab01      	add	r3, sp, #4
 800a028:	466a      	mov	r2, sp
 800a02a:	f7ff fc1b 	bl	8009864 <awe_fwGetObjectByID>
 800a02e:	2800      	cmp	r0, #0
 800a030:	d1f1      	bne.n	800a016 <awe_ctrlSetValue+0x5e>
 800a032:	9b00      	ldr	r3, [sp, #0]
 800a034:	4c12      	ldr	r4, [pc, #72]	@ (800a080 <awe_ctrlSetValue+0xc8>)
 800a036:	9801      	ldr	r0, [sp, #4]
 800a038:	42a0      	cmp	r0, r4
 800a03a:	bf8c      	ite	hi
 800a03c:	461c      	movhi	r4, r3
 800a03e:	2400      	movls	r4, #0
 800a040:	eb13 0286 	adds.w	r2, r3, r6, lsl #2
 800a044:	d0ea      	beq.n	800a01c <awe_ctrlSetValue+0x64>
 800a046:	9908      	ldr	r1, [sp, #32]
 800a048:	ea4f 0088 	mov.w	r0, r8, lsl #2
 800a04c:	b961      	cbnz	r1, 800a068 <awe_ctrlSetValue+0xb0>
 800a04e:	b672      	cpsid	i
 800a050:	683b      	ldr	r3, [r7, #0]
 800a052:	f842 3028 	str.w	r3, [r2, r8, lsl #2]
 800a056:	b662      	cpsie	i
 800a058:	4629      	mov	r1, r5
 800a05a:	4620      	mov	r0, r4
 800a05c:	f000 f9d4 	bl	800a408 <ClassModule_Set>
 800a060:	e7d9      	b.n	800a016 <awe_ctrlSetValue+0x5e>
 800a062:	f06f 0042 	mvn.w	r0, #66	@ 0x42
 800a066:	e7d6      	b.n	800a016 <awe_ctrlSetValue+0x5e>
 800a068:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 800a06c:	4418      	add	r0, r3
 800a06e:	b672      	cpsid	i
 800a070:	9b08      	ldr	r3, [sp, #32]
 800a072:	4639      	mov	r1, r7
 800a074:	009a      	lsls	r2, r3, #2
 800a076:	f023 fde8 	bl	802dc4a <memcpy>
 800a07a:	b662      	cpsie	i
 800a07c:	e7ec      	b.n	800a058 <awe_ctrlSetValue+0xa0>
 800a07e:	bf00      	nop
 800a080:	beef07ff 	.word	0xbeef07ff

0800a084 <awe_ctrlGetValueMask>:
 800a084:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a088:	460c      	mov	r4, r1
 800a08a:	b083      	sub	sp, #12
 800a08c:	f021 4140 	bic.w	r1, r1, #3221225472	@ 0xc0000000
 800a090:	2c00      	cmp	r4, #0
 800a092:	4616      	mov	r6, r2
 800a094:	461f      	mov	r7, r3
 800a096:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800a098:	f421 6178 	bic.w	r1, r1, #3968	@ 0xf80
 800a09c:	db24      	blt.n	800a0e8 <awe_ctrlGetValueMask+0x64>
 800a09e:	2d01      	cmp	r5, #1
 800a0a0:	d14c      	bne.n	800a13c <awe_ctrlGetValueMask+0xb8>
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	d14a      	bne.n	800a13c <awe_ctrlGetValueMask+0xb8>
 800a0a6:	0b09      	lsrs	r1, r1, #12
 800a0a8:	ab01      	add	r3, sp, #4
 800a0aa:	466a      	mov	r2, sp
 800a0ac:	f004 047f 	and.w	r4, r4, #127	@ 0x7f
 800a0b0:	f7ff fbd8 	bl	8009864 <awe_fwGetObjectByID>
 800a0b4:	b990      	cbnz	r0, 800a0dc <awe_ctrlGetValueMask+0x58>
 800a0b6:	4a27      	ldr	r2, [pc, #156]	@ (800a154 <awe_ctrlGetValueMask+0xd0>)
 800a0b8:	9901      	ldr	r1, [sp, #4]
 800a0ba:	9d00      	ldr	r5, [sp, #0]
 800a0bc:	4291      	cmp	r1, r2
 800a0be:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a0c2:	d90e      	bls.n	800a0e2 <awe_ctrlGetValueMask+0x5e>
 800a0c4:	b14b      	cbz	r3, 800a0da <awe_ctrlGetValueMask+0x56>
 800a0c6:	b12d      	cbz	r5, 800a0d4 <awe_ctrlGetValueMask+0x50>
 800a0c8:	686b      	ldr	r3, [r5, #4]
 800a0ca:	695b      	ldr	r3, [r3, #20]
 800a0cc:	b113      	cbz	r3, 800a0d4 <awe_ctrlGetValueMask+0x50>
 800a0ce:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a0d0:	4628      	mov	r0, r5
 800a0d2:	4798      	blx	r3
 800a0d4:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800a0d8:	6033      	str	r3, [r6, #0]
 800a0da:	2000      	movs	r0, #0
 800a0dc:	b003      	add	sp, #12
 800a0de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a0e2:	2b00      	cmp	r3, #0
 800a0e4:	d1f6      	bne.n	800a0d4 <awe_ctrlGetValueMask+0x50>
 800a0e6:	e7f8      	b.n	800a0da <awe_ctrlGetValueMask+0x56>
 800a0e8:	0b09      	lsrs	r1, r1, #12
 800a0ea:	ab01      	add	r3, sp, #4
 800a0ec:	466a      	mov	r2, sp
 800a0ee:	f004 047f 	and.w	r4, r4, #127	@ 0x7f
 800a0f2:	f7ff fbb7 	bl	8009864 <awe_fwGetObjectByID>
 800a0f6:	2800      	cmp	r0, #0
 800a0f8:	d1f0      	bne.n	800a0dc <awe_ctrlGetValueMask+0x58>
 800a0fa:	4b16      	ldr	r3, [pc, #88]	@ (800a154 <awe_ctrlGetValueMask+0xd0>)
 800a0fc:	9a01      	ldr	r2, [sp, #4]
 800a0fe:	f8dd 8000 	ldr.w	r8, [sp]
 800a102:	429a      	cmp	r2, r3
 800a104:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a108:	d809      	bhi.n	800a11e <awe_ctrlGetValueMask+0x9a>
 800a10a:	f1b9 0f00 	cmp.w	r9, #0
 800a10e:	d0e4      	beq.n	800a0da <awe_ctrlGetValueMask+0x56>
 800a110:	00bb      	lsls	r3, r7, #2
 800a112:	b9b5      	cbnz	r5, 800a142 <awe_ctrlGetValueMask+0xbe>
 800a114:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800a118:	6033      	str	r3, [r6, #0]
 800a11a:	4628      	mov	r0, r5
 800a11c:	e7de      	b.n	800a0dc <awe_ctrlGetValueMask+0x58>
 800a11e:	f1b9 0f00 	cmp.w	r9, #0
 800a122:	d0da      	beq.n	800a0da <awe_ctrlGetValueMask+0x56>
 800a124:	f1b8 0f00 	cmp.w	r8, #0
 800a128:	d0f2      	beq.n	800a110 <awe_ctrlGetValueMask+0x8c>
 800a12a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800a12e:	695b      	ldr	r3, [r3, #20]
 800a130:	2b00      	cmp	r3, #0
 800a132:	d0ed      	beq.n	800a110 <awe_ctrlGetValueMask+0x8c>
 800a134:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a136:	4640      	mov	r0, r8
 800a138:	4798      	blx	r3
 800a13a:	e7e9      	b.n	800a110 <awe_ctrlGetValueMask+0x8c>
 800a13c:	f06f 0042 	mvn.w	r0, #66	@ 0x42
 800a140:	e7cc      	b.n	800a0dc <awe_ctrlGetValueMask+0x58>
 800a142:	f858 1024 	ldr.w	r1, [r8, r4, lsl #2]
 800a146:	00aa      	lsls	r2, r5, #2
 800a148:	4419      	add	r1, r3
 800a14a:	4630      	mov	r0, r6
 800a14c:	f023 fd7d 	bl	802dc4a <memcpy>
 800a150:	2000      	movs	r0, #0
 800a152:	e7c3      	b.n	800a0dc <awe_ctrlGetValueMask+0x58>
 800a154:	beef07ff 	.word	0xbeef07ff

0800a158 <awe_ctrlGetValue>:
 800a158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a15a:	f04f 0c01 	mov.w	ip, #1
 800a15e:	f001 057f 	and.w	r5, r1, #127	@ 0x7f
 800a162:	f021 4440 	bic.w	r4, r1, #3221225472	@ 0xc0000000
 800a166:	2900      	cmp	r1, #0
 800a168:	4616      	mov	r6, r2
 800a16a:	b087      	sub	sp, #28
 800a16c:	461a      	mov	r2, r3
 800a16e:	fa0c f705 	lsl.w	r7, ip, r5
 800a172:	f424 6478 	bic.w	r4, r4, #3968	@ 0xf80
 800a176:	db21      	blt.n	800a1bc <awe_ctrlGetValue+0x64>
 800a178:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a17a:	2b01      	cmp	r3, #1
 800a17c:	d12b      	bne.n	800a1d6 <awe_ctrlGetValue+0x7e>
 800a17e:	bb52      	cbnz	r2, 800a1d6 <awe_ctrlGetValue+0x7e>
 800a180:	0b21      	lsrs	r1, r4, #12
 800a182:	ab05      	add	r3, sp, #20
 800a184:	aa04      	add	r2, sp, #16
 800a186:	f7ff fb6d 	bl	8009864 <awe_fwGetObjectByID>
 800a18a:	b990      	cbnz	r0, 800a1b2 <awe_ctrlGetValue+0x5a>
 800a18c:	4a13      	ldr	r2, [pc, #76]	@ (800a1dc <awe_ctrlGetValue+0x84>)
 800a18e:	9905      	ldr	r1, [sp, #20]
 800a190:	9c04      	ldr	r4, [sp, #16]
 800a192:	4291      	cmp	r1, r2
 800a194:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800a198:	d90d      	bls.n	800a1b6 <awe_ctrlGetValue+0x5e>
 800a19a:	b14b      	cbz	r3, 800a1b0 <awe_ctrlGetValue+0x58>
 800a19c:	b12c      	cbz	r4, 800a1aa <awe_ctrlGetValue+0x52>
 800a19e:	6863      	ldr	r3, [r4, #4]
 800a1a0:	695b      	ldr	r3, [r3, #20]
 800a1a2:	b113      	cbz	r3, 800a1aa <awe_ctrlGetValue+0x52>
 800a1a4:	4639      	mov	r1, r7
 800a1a6:	4620      	mov	r0, r4
 800a1a8:	4798      	blx	r3
 800a1aa:	f854 3025 	ldr.w	r3, [r4, r5, lsl #2]
 800a1ae:	6033      	str	r3, [r6, #0]
 800a1b0:	2000      	movs	r0, #0
 800a1b2:	b007      	add	sp, #28
 800a1b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1b6:	2b00      	cmp	r3, #0
 800a1b8:	d1f7      	bne.n	800a1aa <awe_ctrlGetValue+0x52>
 800a1ba:	e7f9      	b.n	800a1b0 <awe_ctrlGetValue+0x58>
 800a1bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a1be:	9300      	str	r3, [sp, #0]
 800a1c0:	f001 4180 	and.w	r1, r1, #1073741824	@ 0x40000000
 800a1c4:	e9cd 1c02 	strd	r1, ip, [sp, #8]
 800a1c8:	9601      	str	r6, [sp, #4]
 800a1ca:	463b      	mov	r3, r7
 800a1cc:	4621      	mov	r1, r4
 800a1ce:	f7ff fe03 	bl	8009dd8 <awe_fwModuleClassGetCommon>
 800a1d2:	b007      	add	sp, #28
 800a1d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1d6:	f06f 0042 	mvn.w	r0, #66	@ 0x42
 800a1da:	e7ea      	b.n	800a1b2 <awe_ctrlGetValue+0x5a>
 800a1dc:	beef07ff 	.word	0xbeef07ff

0800a1e0 <awe_fwSetModuleState>:
 800a1e0:	b538      	push	{r3, r4, r5, lr}
 800a1e2:	460c      	mov	r4, r1
 800a1e4:	4605      	mov	r5, r0
 800a1e6:	f7ff fb8f 	bl	8009908 <awe_fwGetClassType>
 800a1ea:	4b15      	ldr	r3, [pc, #84]	@ (800a240 <awe_fwSetModuleState+0x60>)
 800a1ec:	4403      	add	r3, r0
 800a1ee:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800a1f2:	d222      	bcs.n	800a23a <awe_fwSetModuleState+0x5a>
 800a1f4:	69ab      	ldr	r3, [r5, #24]
 800a1f6:	686a      	ldr	r2, [r5, #4]
 800a1f8:	2c01      	cmp	r4, #1
 800a1fa:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 800a1fe:	d015      	beq.n	800a22c <awe_fwSetModuleState+0x4c>
 800a200:	2c02      	cmp	r4, #2
 800a202:	d007      	beq.n	800a214 <awe_fwSetModuleState+0x34>
 800a204:	b16c      	cbz	r4, 800a222 <awe_fwSetModuleState+0x42>
 800a206:	4a0f      	ldr	r2, [pc, #60]	@ (800a244 <awe_fwSetModuleState+0x64>)
 800a208:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
 800a20c:	e9c5 2305 	strd	r2, r3, [r5, #20]
 800a210:	2000      	movs	r0, #0
 800a212:	bd38      	pop	{r3, r4, r5, pc}
 800a214:	4a0c      	ldr	r2, [pc, #48]	@ (800a248 <awe_fwSetModuleState+0x68>)
 800a216:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800a21a:	e9c5 2305 	strd	r2, r3, [r5, #20]
 800a21e:	2000      	movs	r0, #0
 800a220:	bd38      	pop	{r3, r4, r5, pc}
 800a222:	6892      	ldr	r2, [r2, #8]
 800a224:	4620      	mov	r0, r4
 800a226:	e9c5 2305 	strd	r2, r3, [r5, #20]
 800a22a:	bd38      	pop	{r3, r4, r5, pc}
 800a22c:	68d2      	ldr	r2, [r2, #12]
 800a22e:	616a      	str	r2, [r5, #20]
 800a230:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800a234:	61ab      	str	r3, [r5, #24]
 800a236:	2000      	movs	r0, #0
 800a238:	bd38      	pop	{r3, r4, r5, pc}
 800a23a:	f06f 000e 	mvn.w	r0, #14
 800a23e:	bd38      	pop	{r3, r4, r5, pc}
 800a240:	4110f800 	.word	0x4110f800
 800a244:	0800a691 	.word	0x0800a691
 800a248:	0800a655 	.word	0x0800a655

0800a24c <awe_fwGetModuleState>:
 800a24c:	b510      	push	{r4, lr}
 800a24e:	4604      	mov	r4, r0
 800a250:	f7ff fb5a 	bl	8009908 <awe_fwGetClassType>
 800a254:	4b05      	ldr	r3, [pc, #20]	@ (800a26c <awe_fwGetModuleState+0x20>)
 800a256:	4403      	add	r3, r0
 800a258:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800a25c:	bf36      	itet	cc
 800a25e:	7ee0      	ldrbcc	r0, [r4, #27]
 800a260:	f06f 000e 	mvncs.w	r0, #14
 800a264:	f000 0003 	andcc.w	r0, r0, #3
 800a268:	bd10      	pop	{r4, pc}
 800a26a:	bf00      	nop
 800a26c:	4110f800 	.word	0x4110f800

0800a270 <awe_ctrlSetStatus>:
 800a270:	b530      	push	{r4, r5, lr}
 800a272:	b083      	sub	sp, #12
 800a274:	4615      	mov	r5, r2
 800a276:	f3c1 3111 	ubfx	r1, r1, #12, #18
 800a27a:	ab01      	add	r3, sp, #4
 800a27c:	466a      	mov	r2, sp
 800a27e:	f7ff faf1 	bl	8009864 <awe_fwGetObjectByID>
 800a282:	2800      	cmp	r0, #0
 800a284:	db17      	blt.n	800a2b6 <awe_ctrlSetStatus+0x46>
 800a286:	9c00      	ldr	r4, [sp, #0]
 800a288:	4620      	mov	r0, r4
 800a28a:	f7ff fb3d 	bl	8009908 <awe_fwGetClassType>
 800a28e:	4b17      	ldr	r3, [pc, #92]	@ (800a2ec <awe_ctrlSetStatus+0x7c>)
 800a290:	4403      	add	r3, r0
 800a292:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800a296:	d226      	bcs.n	800a2e6 <awe_ctrlSetStatus+0x76>
 800a298:	69a3      	ldr	r3, [r4, #24]
 800a29a:	6862      	ldr	r2, [r4, #4]
 800a29c:	2d01      	cmp	r5, #1
 800a29e:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 800a2a2:	d018      	beq.n	800a2d6 <awe_ctrlSetStatus+0x66>
 800a2a4:	d311      	bcc.n	800a2ca <awe_ctrlSetStatus+0x5a>
 800a2a6:	2d02      	cmp	r5, #2
 800a2a8:	d107      	bne.n	800a2ba <awe_ctrlSetStatus+0x4a>
 800a2aa:	4a11      	ldr	r2, [pc, #68]	@ (800a2f0 <awe_ctrlSetStatus+0x80>)
 800a2ac:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800a2b0:	e9c4 2305 	strd	r2, r3, [r4, #20]
 800a2b4:	2000      	movs	r0, #0
 800a2b6:	b003      	add	sp, #12
 800a2b8:	bd30      	pop	{r4, r5, pc}
 800a2ba:	4a0e      	ldr	r2, [pc, #56]	@ (800a2f4 <awe_ctrlSetStatus+0x84>)
 800a2bc:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
 800a2c0:	2000      	movs	r0, #0
 800a2c2:	e9c4 2305 	strd	r2, r3, [r4, #20]
 800a2c6:	b003      	add	sp, #12
 800a2c8:	bd30      	pop	{r4, r5, pc}
 800a2ca:	6892      	ldr	r2, [r2, #8]
 800a2cc:	2000      	movs	r0, #0
 800a2ce:	e9c4 2305 	strd	r2, r3, [r4, #20]
 800a2d2:	b003      	add	sp, #12
 800a2d4:	bd30      	pop	{r4, r5, pc}
 800a2d6:	68d2      	ldr	r2, [r2, #12]
 800a2d8:	6162      	str	r2, [r4, #20]
 800a2da:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800a2de:	2000      	movs	r0, #0
 800a2e0:	61a3      	str	r3, [r4, #24]
 800a2e2:	b003      	add	sp, #12
 800a2e4:	bd30      	pop	{r4, r5, pc}
 800a2e6:	f06f 000e 	mvn.w	r0, #14
 800a2ea:	e7e4      	b.n	800a2b6 <awe_ctrlSetStatus+0x46>
 800a2ec:	4110f800 	.word	0x4110f800
 800a2f0:	0800a655 	.word	0x0800a655
 800a2f4:	0800a691 	.word	0x0800a691

0800a2f8 <awe_ctrlGetStatus>:
 800a2f8:	b570      	push	{r4, r5, r6, lr}
 800a2fa:	b082      	sub	sp, #8
 800a2fc:	b1d2      	cbz	r2, 800a334 <awe_ctrlGetStatus+0x3c>
 800a2fe:	4614      	mov	r4, r2
 800a300:	f3c1 3111 	ubfx	r1, r1, #12, #18
 800a304:	ab01      	add	r3, sp, #4
 800a306:	466a      	mov	r2, sp
 800a308:	f7ff faac 	bl	8009864 <awe_fwGetObjectByID>
 800a30c:	1e05      	subs	r5, r0, #0
 800a30e:	db0e      	blt.n	800a32e <awe_ctrlGetStatus+0x36>
 800a310:	9e00      	ldr	r6, [sp, #0]
 800a312:	4630      	mov	r0, r6
 800a314:	f7ff faf8 	bl	8009908 <awe_fwGetClassType>
 800a318:	4b08      	ldr	r3, [pc, #32]	@ (800a33c <awe_ctrlGetStatus+0x44>)
 800a31a:	4403      	add	r3, r0
 800a31c:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800a320:	bf36      	itet	cc
 800a322:	7ef3      	ldrbcc	r3, [r6, #27]
 800a324:	f06f 030e 	mvncs.w	r3, #14
 800a328:	f003 0303 	andcc.w	r3, r3, #3
 800a32c:	6023      	str	r3, [r4, #0]
 800a32e:	4628      	mov	r0, r5
 800a330:	b002      	add	sp, #8
 800a332:	bd70      	pop	{r4, r5, r6, pc}
 800a334:	f06f 0510 	mvn.w	r5, #16
 800a338:	e7f9      	b.n	800a32e <awe_ctrlGetStatus+0x36>
 800a33a:	bf00      	nop
 800a33c:	4110f800 	.word	0x4110f800

0800a340 <awe_fwSetPointer>:
 800a340:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a344:	b083      	sub	sp, #12
 800a346:	4614      	mov	r4, r2
 800a348:	460d      	mov	r5, r1
 800a34a:	4698      	mov	r8, r3
 800a34c:	0b11      	lsrs	r1, r2, #12
 800a34e:	ab01      	add	r3, sp, #4
 800a350:	466a      	mov	r2, sp
 800a352:	f3c4 070a 	ubfx	r7, r4, #0, #11
 800a356:	4681      	mov	r9, r0
 800a358:	f7ff fa84 	bl	8009864 <awe_fwGetObjectByID>
 800a35c:	b9d0      	cbnz	r0, 800a394 <awe_fwSetPointer+0x54>
 800a35e:	9b00      	ldr	r3, [sp, #0]
 800a360:	f404 6400 	and.w	r4, r4, #2048	@ 0x800
 800a364:	eb03 0687 	add.w	r6, r3, r7, lsl #2
 800a368:	b9bc      	cbnz	r4, 800a39a <awe_fwSetPointer+0x5a>
 800a36a:	b196      	cbz	r6, 800a392 <awe_fwSetPointer+0x52>
 800a36c:	466a      	mov	r2, sp
 800a36e:	0b29      	lsrs	r1, r5, #12
 800a370:	ab01      	add	r3, sp, #4
 800a372:	4648      	mov	r0, r9
 800a374:	f7ff fa76 	bl	8009864 <awe_fwGetObjectByID>
 800a378:	f3c5 020a 	ubfx	r2, r5, #0, #11
 800a37c:	f405 6500 	and.w	r5, r5, #2048	@ 0x800
 800a380:	b940      	cbnz	r0, 800a394 <awe_fwSetPointer+0x54>
 800a382:	9900      	ldr	r1, [sp, #0]
 800a384:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 800a388:	b955      	cbnz	r5, 800a3a0 <awe_fwSetPointer+0x60>
 800a38a:	b113      	cbz	r3, 800a392 <awe_fwSetPointer+0x52>
 800a38c:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800a390:	601e      	str	r6, [r3, #0]
 800a392:	2000      	movs	r0, #0
 800a394:	b003      	add	sp, #12
 800a396:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a39a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800a39e:	e7e4      	b.n	800a36a <awe_fwSetPointer+0x2a>
 800a3a0:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800a3a4:	2b00      	cmp	r3, #0
 800a3a6:	d1f1      	bne.n	800a38c <awe_fwSetPointer+0x4c>
 800a3a8:	e7f3      	b.n	800a392 <awe_fwSetPointer+0x52>
 800a3aa:	bf00      	nop

0800a3ac <awe_fwDerefPointer>:
 800a3ac:	b530      	push	{r4, r5, lr}
 800a3ae:	b083      	sub	sp, #12
 800a3b0:	460c      	mov	r4, r1
 800a3b2:	4615      	mov	r5, r2
 800a3b4:	ab01      	add	r3, sp, #4
 800a3b6:	0b09      	lsrs	r1, r1, #12
 800a3b8:	466a      	mov	r2, sp
 800a3ba:	f7ff fa53 	bl	8009864 <awe_fwGetObjectByID>
 800a3be:	2300      	movs	r3, #0
 800a3c0:	f3c4 040a 	ubfx	r4, r4, #0, #11
 800a3c4:	602b      	str	r3, [r5, #0]
 800a3c6:	b930      	cbnz	r0, 800a3d6 <awe_fwDerefPointer+0x2a>
 800a3c8:	9b00      	ldr	r3, [sp, #0]
 800a3ca:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800a3ce:	b100      	cbz	r0, 800a3d2 <awe_fwDerefPointer+0x26>
 800a3d0:	6880      	ldr	r0, [r0, #8]
 800a3d2:	b003      	add	sp, #12
 800a3d4:	bd30      	pop	{r4, r5, pc}
 800a3d6:	6028      	str	r0, [r5, #0]
 800a3d8:	681b      	ldr	r3, [r3, #0]
 800a3da:	deff      	udf	#255	@ 0xff

0800a3dc <awe_modSetDeferredSet>:
 800a3dc:	4b09      	ldr	r3, [pc, #36]	@ (800a404 <awe_modSetDeferredSet+0x28>)
 800a3de:	b410      	push	{r4}
 800a3e0:	681c      	ldr	r4, [r3, #0]
 800a3e2:	6983      	ldr	r3, [r0, #24]
 800a3e4:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 800a3e8:	06c9      	lsls	r1, r1, #27
 800a3ea:	f001 6100 	and.w	r1, r1, #134217728	@ 0x8000000
 800a3ee:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800a3f2:	430b      	orrs	r3, r1
 800a3f4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800a3f8:	6183      	str	r3, [r0, #24]
 800a3fa:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 800a3fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a402:	4770      	bx	lr
 800a404:	20000ac0 	.word	0x20000ac0

0800a408 <ClassModule_Set>:
 800a408:	b118      	cbz	r0, 800a412 <ClassModule_Set+0xa>
 800a40a:	6843      	ldr	r3, [r0, #4]
 800a40c:	691b      	ldr	r3, [r3, #16]
 800a40e:	b103      	cbz	r3, 800a412 <ClassModule_Set+0xa>
 800a410:	4718      	bx	r3
 800a412:	2000      	movs	r0, #0
 800a414:	4770      	bx	lr
 800a416:	bf00      	nop

0800a418 <IOAcrossModule_Bypass>:
 800a418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a41c:	6903      	ldr	r3, [r0, #16]
 800a41e:	e9d3 3100 	ldrd	r3, r1, [r3]
 800a422:	ed2d 8b02 	vpush	{d8}
 800a426:	e9d3 2005 	ldrd	r2, r0, [r3, #20]
 800a42a:	694e      	ldr	r6, [r1, #20]
 800a42c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 800a430:	f8d1 800c 	ldr.w	r8, [r1, #12]
 800a434:	b08b      	sub	sp, #44	@ 0x2c
 800a436:	f3c0 0310 	ubfx	r3, r0, #0, #17
 800a43a:	f3c2 0a09 	ubfx	sl, r2, #0, #10
 800a43e:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800a442:	f3c2 62c0 	ubfx	r2, r2, #27, #1
 800a446:	9305      	str	r3, [sp, #20]
 800a448:	9203      	str	r2, [sp, #12]
 800a44a:	2e00      	cmp	r6, #0
 800a44c:	d044      	beq.n	800a4d8 <IOAcrossModule_Bypass+0xc0>
 800a44e:	105b      	asrs	r3, r3, #1
 800a450:	9307      	str	r3, [sp, #28]
 800a452:	ea4f 034a 	mov.w	r3, sl, lsl #1
 800a456:	ea4f 0946 	mov.w	r9, r6, lsl #1
 800a45a:	9306      	str	r3, [sp, #24]
 800a45c:	4654      	mov	r4, sl
 800a45e:	f1ba 0f00 	cmp.w	sl, #0
 800a462:	d146      	bne.n	800a4f2 <IOAcrossModule_Bypass+0xda>
 800a464:	f8cd b018 	str.w	fp, [sp, #24]
 800a468:	ed9f 8a49 	vldr	s16, [pc, #292]	@ 800a590 <IOAcrossModule_Bypass+0x178>
 800a46c:	9604      	str	r6, [sp, #16]
 800a46e:	eb08 05c4 	add.w	r5, r8, r4, lsl #3
 800a472:	00a7      	lsls	r7, r4, #2
 800a474:	f8dd b01c 	ldr.w	fp, [sp, #28]
 800a478:	e010      	b.n	800a49c <IOAcrossModule_Bypass+0x84>
 800a47a:	f011 f873 	bl	801b564 <awe_vecFill>
 800a47e:	465a      	mov	r2, fp
 800a480:	eeb0 0a48 	vmov.f32	s0, s16
 800a484:	4649      	mov	r1, r9
 800a486:	1d28      	adds	r0, r5, #4
 800a488:	f011 f86c 	bl	801b564 <awe_vecFill>
 800a48c:	9b04      	ldr	r3, [sp, #16]
 800a48e:	3401      	adds	r4, #1
 800a490:	42a3      	cmp	r3, r4
 800a492:	f105 0508 	add.w	r5, r5, #8
 800a496:	f107 0704 	add.w	r7, r7, #4
 800a49a:	d91d      	bls.n	800a4d8 <IOAcrossModule_Bypass+0xc0>
 800a49c:	9b03      	ldr	r3, [sp, #12]
 800a49e:	4628      	mov	r0, r5
 800a4a0:	465a      	mov	r2, fp
 800a4a2:	eeb0 0a48 	vmov.f32	s0, s16
 800a4a6:	4649      	mov	r1, r9
 800a4a8:	2b00      	cmp	r3, #0
 800a4aa:	d1e6      	bne.n	800a47a <IOAcrossModule_Bypass+0x62>
 800a4ac:	45a2      	cmp	sl, r4
 800a4ae:	d918      	bls.n	800a4e2 <IOAcrossModule_Bypass+0xca>
 800a4b0:	9806      	ldr	r0, [sp, #24]
 800a4b2:	9b04      	ldr	r3, [sp, #16]
 800a4b4:	4540      	cmp	r0, r8
 800a4b6:	eb08 0207 	add.w	r2, r8, r7
 800a4ba:	4651      	mov	r1, sl
 800a4bc:	4438      	add	r0, r7
 800a4be:	d0e6      	beq.n	800a48e <IOAcrossModule_Bypass+0x76>
 800a4c0:	9e05      	ldr	r6, [sp, #20]
 800a4c2:	9600      	str	r6, [sp, #0]
 800a4c4:	f010 fdce 	bl	801b064 <awe_vecCopy32>
 800a4c8:	9b04      	ldr	r3, [sp, #16]
 800a4ca:	3401      	adds	r4, #1
 800a4cc:	42a3      	cmp	r3, r4
 800a4ce:	f105 0508 	add.w	r5, r5, #8
 800a4d2:	f107 0704 	add.w	r7, r7, #4
 800a4d6:	d8e1      	bhi.n	800a49c <IOAcrossModule_Bypass+0x84>
 800a4d8:	b00b      	add	sp, #44	@ 0x2c
 800a4da:	ecbd 8b02 	vpop	{d8}
 800a4de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4e2:	9a05      	ldr	r2, [sp, #20]
 800a4e4:	9904      	ldr	r1, [sp, #16]
 800a4e6:	eb08 0007 	add.w	r0, r8, r7
 800a4ea:	f011 f83b 	bl	801b564 <awe_vecFill>
 800a4ee:	9b04      	ldr	r3, [sp, #16]
 800a4f0:	e7cd      	b.n	800a48e <IOAcrossModule_Bypass+0x76>
 800a4f2:	f108 0304 	add.w	r3, r8, #4
 800a4f6:	45b2      	cmp	sl, r6
 800a4f8:	9308      	str	r3, [sp, #32]
 800a4fa:	f10b 0304 	add.w	r3, fp, #4
 800a4fe:	4657      	mov	r7, sl
 800a500:	ed9f 8a23 	vldr	s16, [pc, #140]	@ 800a590 <IOAcrossModule_Bypass+0x178>
 800a504:	9309      	str	r3, [sp, #36]	@ 0x24
 800a506:	bf28      	it	cs
 800a508:	4637      	movcs	r7, r6
 800a50a:	2400      	movs	r4, #0
 800a50c:	9604      	str	r6, [sp, #16]
 800a50e:	e018      	b.n	800a542 <IOAcrossModule_Bypass+0x12a>
 800a510:	00e5      	lsls	r5, r4, #3
 800a512:	45c3      	cmp	fp, r8
 800a514:	464b      	mov	r3, r9
 800a516:	eb08 0205 	add.w	r2, r8, r5
 800a51a:	9906      	ldr	r1, [sp, #24]
 800a51c:	eb0b 0005 	add.w	r0, fp, r5
 800a520:	d00c      	beq.n	800a53c <IOAcrossModule_Bypass+0x124>
 800a522:	9e07      	ldr	r6, [sp, #28]
 800a524:	9600      	str	r6, [sp, #0]
 800a526:	f010 fd9d 	bl	801b064 <awe_vecCopy32>
 800a52a:	9a08      	ldr	r2, [sp, #32]
 800a52c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800a52e:	9600      	str	r6, [sp, #0]
 800a530:	464b      	mov	r3, r9
 800a532:	442a      	add	r2, r5
 800a534:	4428      	add	r0, r5
 800a536:	9906      	ldr	r1, [sp, #24]
 800a538:	f010 fd94 	bl	801b064 <awe_vecCopy32>
 800a53c:	3401      	adds	r4, #1
 800a53e:	42bc      	cmp	r4, r7
 800a540:	d213      	bcs.n	800a56a <IOAcrossModule_Bypass+0x152>
 800a542:	9b03      	ldr	r3, [sp, #12]
 800a544:	2b00      	cmp	r3, #0
 800a546:	d1e3      	bne.n	800a510 <IOAcrossModule_Bypass+0xf8>
 800a548:	45a2      	cmp	sl, r4
 800a54a:	d917      	bls.n	800a57c <IOAcrossModule_Bypass+0x164>
 800a54c:	00a0      	lsls	r0, r4, #2
 800a54e:	45c3      	cmp	fp, r8
 800a550:	eb08 0200 	add.w	r2, r8, r0
 800a554:	9b04      	ldr	r3, [sp, #16]
 800a556:	4651      	mov	r1, sl
 800a558:	4458      	add	r0, fp
 800a55a:	d0ef      	beq.n	800a53c <IOAcrossModule_Bypass+0x124>
 800a55c:	9d05      	ldr	r5, [sp, #20]
 800a55e:	9500      	str	r5, [sp, #0]
 800a560:	3401      	adds	r4, #1
 800a562:	f010 fd7f 	bl	801b064 <awe_vecCopy32>
 800a566:	42bc      	cmp	r4, r7
 800a568:	d3eb      	bcc.n	800a542 <IOAcrossModule_Bypass+0x12a>
 800a56a:	9e04      	ldr	r6, [sp, #16]
 800a56c:	42a6      	cmp	r6, r4
 800a56e:	f63f af79 	bhi.w	800a464 <IOAcrossModule_Bypass+0x4c>
 800a572:	b00b      	add	sp, #44	@ 0x2c
 800a574:	ecbd 8b02 	vpop	{d8}
 800a578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a57c:	9a05      	ldr	r2, [sp, #20]
 800a57e:	9904      	ldr	r1, [sp, #16]
 800a580:	eeb0 0a48 	vmov.f32	s0, s16
 800a584:	eb08 0084 	add.w	r0, r8, r4, lsl #2
 800a588:	f010 ffec 	bl	801b564 <awe_vecFill>
 800a58c:	e7d6      	b.n	800a53c <IOAcrossModule_Bypass+0x124>
 800a58e:	bf00      	nop
 800a590:	00000000 	.word	0x00000000

0800a594 <IOMatchUpModule_Bypass>:
 800a594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a598:	6985      	ldr	r5, [r0, #24]
 800a59a:	6906      	ldr	r6, [r0, #16]
 800a59c:	ed2d 8b02 	vpush	{d8}
 800a5a0:	f3c5 2407 	ubfx	r4, r5, #8, #8
 800a5a4:	f015 05ff 	ands.w	r5, r5, #255	@ 0xff
 800a5a8:	f2ad 4d0c 	subw	sp, sp, #1036	@ 0x40c
 800a5ac:	d004      	beq.n	800a5b8 <IOMatchUpModule_Bypass+0x24>
 800a5ae:	00aa      	lsls	r2, r5, #2
 800a5b0:	2100      	movs	r1, #0
 800a5b2:	a803      	add	r0, sp, #12
 800a5b4:	f023 face 	bl	802db54 <memset>
 800a5b8:	b3cc      	cbz	r4, 800a62e <IOMatchUpModule_Bypass+0x9a>
 800a5ba:	442c      	add	r4, r5
 800a5bc:	ed9f 8a24 	vldr	s16, [pc, #144]	@ 800a650 <IOMatchUpModule_Bypass+0xbc>
 800a5c0:	eb06 0884 	add.w	r8, r6, r4, lsl #2
 800a5c4:	eb06 0785 	add.w	r7, r6, r5, lsl #2
 800a5c8:	f04f 0a01 	mov.w	sl, #1
 800a5cc:	f10d 090c 	add.w	r9, sp, #12
 800a5d0:	f857 eb04 	ldr.w	lr, [r7], #4
 800a5d4:	e9de 3205 	ldrd	r3, r2, [lr, #20]
 800a5d8:	f3c3 0c09 	ubfx	ip, r3, #0, #10
 800a5dc:	f3c2 0b10 	ubfx	fp, r2, #0, #17
 800a5e0:	b35d      	cbz	r5, 800a63a <IOMatchUpModule_Bypass+0xa6>
 800a5e2:	4649      	mov	r1, r9
 800a5e4:	2400      	movs	r4, #0
 800a5e6:	e002      	b.n	800a5ee <IOMatchUpModule_Bypass+0x5a>
 800a5e8:	3401      	adds	r4, #1
 800a5ea:	42a5      	cmp	r5, r4
 800a5ec:	d025      	beq.n	800a63a <IOMatchUpModule_Bypass+0xa6>
 800a5ee:	f851 3b04 	ldr.w	r3, [r1], #4
 800a5f2:	2b01      	cmp	r3, #1
 800a5f4:	d0f8      	beq.n	800a5e8 <IOMatchUpModule_Bypass+0x54>
 800a5f6:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800a5fa:	6943      	ldr	r3, [r0, #20]
 800a5fc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a600:	459c      	cmp	ip, r3
 800a602:	d1f1      	bne.n	800a5e8 <IOMatchUpModule_Bypass+0x54>
 800a604:	6983      	ldr	r3, [r0, #24]
 800a606:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800a60a:	459b      	cmp	fp, r3
 800a60c:	d1ec      	bne.n	800a5e8 <IOMatchUpModule_Bypass+0x54>
 800a60e:	68c0      	ldr	r0, [r0, #12]
 800a610:	f8de 200c 	ldr.w	r2, [lr, #12]
 800a614:	4290      	cmp	r0, r2
 800a616:	d006      	beq.n	800a626 <IOMatchUpModule_Bypass+0x92>
 800a618:	fb0b f10c 	mul.w	r1, fp, ip
 800a61c:	2301      	movs	r3, #1
 800a61e:	9100      	str	r1, [sp, #0]
 800a620:	4619      	mov	r1, r3
 800a622:	f010 fd1f 	bl	801b064 <awe_vecCopy32>
 800a626:	f849 a024 	str.w	sl, [r9, r4, lsl #2]
 800a62a:	45b8      	cmp	r8, r7
 800a62c:	d1d0      	bne.n	800a5d0 <IOMatchUpModule_Bypass+0x3c>
 800a62e:	f20d 4d0c 	addw	sp, sp, #1036	@ 0x40c
 800a632:	ecbd 8b02 	vpop	{d8}
 800a636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a63a:	fb0b f20c 	mul.w	r2, fp, ip
 800a63e:	f8de 000c 	ldr.w	r0, [lr, #12]
 800a642:	eeb0 0a48 	vmov.f32	s0, s16
 800a646:	2101      	movs	r1, #1
 800a648:	f010 ff8c 	bl	801b564 <awe_vecFill>
 800a64c:	e7ed      	b.n	800a62a <IOMatchUpModule_Bypass+0x96>
 800a64e:	bf00      	nop
 800a650:	00000000 	.word	0x00000000

0800a654 <GenericModule_Mute>:
 800a654:	b538      	push	{r3, r4, r5, lr}
 800a656:	6983      	ldr	r3, [r0, #24]
 800a658:	6904      	ldr	r4, [r0, #16]
 800a65a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 800a65e:	b1b5      	cbz	r5, 800a68e <GenericModule_Mute+0x3a>
 800a660:	b2db      	uxtb	r3, r3
 800a662:	441d      	add	r5, r3
 800a664:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 800a668:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800a66c:	f854 1b04 	ldr.w	r1, [r4], #4
 800a670:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 800a674:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800a678:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800a67c:	68c8      	ldr	r0, [r1, #12]
 800a67e:	fb03 f302 	mul.w	r3, r3, r2
 800a682:	2101      	movs	r1, #1
 800a684:	2200      	movs	r2, #0
 800a686:	f011 f891 	bl	801b7ac <awe_vecFillInt32>
 800a68a:	42a5      	cmp	r5, r4
 800a68c:	d1ee      	bne.n	800a66c <GenericModule_Mute+0x18>
 800a68e:	bd38      	pop	{r3, r4, r5, pc}

0800a690 <GenericModule_Inactive>:
 800a690:	4770      	bx	lr
 800a692:	bf00      	nop

0800a694 <awe_fwPumpModule>:
 800a694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a696:	4607      	mov	r7, r0
 800a698:	4608      	mov	r0, r1
 800a69a:	460d      	mov	r5, r1
 800a69c:	f7ff f934 	bl	8009908 <awe_fwGetClassType>
 800a6a0:	4b09      	ldr	r3, [pc, #36]	@ (800a6c8 <awe_fwPumpModule+0x34>)
 800a6a2:	4c0a      	ldr	r4, [pc, #40]	@ (800a6cc <awe_fwPumpModule+0x38>)
 800a6a4:	4403      	add	r3, r0
 800a6a6:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800a6aa:	6826      	ldr	r6, [r4, #0]
 800a6ac:	d209      	bcs.n	800a6c2 <awe_fwPumpModule+0x2e>
 800a6ae:	696b      	ldr	r3, [r5, #20]
 800a6b0:	b12b      	cbz	r3, 800a6be <awe_fwPumpModule+0x2a>
 800a6b2:	4628      	mov	r0, r5
 800a6b4:	6027      	str	r7, [r4, #0]
 800a6b6:	4798      	blx	r3
 800a6b8:	2000      	movs	r0, #0
 800a6ba:	6026      	str	r6, [r4, #0]
 800a6bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a6be:	4618      	mov	r0, r3
 800a6c0:	e7fb      	b.n	800a6ba <awe_fwPumpModule+0x26>
 800a6c2:	f06f 000e 	mvn.w	r0, #14
 800a6c6:	e7f8      	b.n	800a6ba <awe_fwPumpModule+0x26>
 800a6c8:	4110f800 	.word	0x4110f800
 800a6cc:	20000ac0 	.word	0x20000ac0

0800a6d0 <awe_fwInitIoPins>:
 800a6d0:	2800      	cmp	r0, #0
 800a6d2:	d057      	beq.n	800a784 <awe_fwInitIoPins+0xb4>
 800a6d4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a6d6:	b470      	push	{r4, r5, r6}
 800a6d8:	b303      	cbz	r3, 800a71c <awe_fwInitIoPins+0x4c>
 800a6da:	4a2c      	ldr	r2, [pc, #176]	@ (800a78c <awe_fwInitIoPins+0xbc>)
 800a6dc:	605a      	str	r2, [r3, #4]
 800a6de:	69d9      	ldr	r1, [r3, #28]
 800a6e0:	2200      	movs	r2, #0
 800a6e2:	2401      	movs	r4, #1
 800a6e4:	62da      	str	r2, [r3, #44]	@ 0x2c
 800a6e6:	631a      	str	r2, [r3, #48]	@ 0x30
 800a6e8:	609c      	str	r4, [r3, #8]
 800a6ea:	629a      	str	r2, [r3, #40]	@ 0x28
 800a6ec:	e9c3 2203 	strd	r2, r2, [r3, #12]
 800a6f0:	625a      	str	r2, [r3, #36]	@ 0x24
 800a6f2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800a6f4:	601a      	str	r2, [r3, #0]
 800a6f6:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
 800a6f8:	2900      	cmp	r1, #0
 800a6fa:	d03a      	beq.n	800a772 <awe_fwInitIoPins+0xa2>
 800a6fc:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 800a6fe:	4924      	ldr	r1, [pc, #144]	@ (800a790 <awe_fwInitIoPins+0xc0>)
 800a700:	6992      	ldr	r2, [r2, #24]
 800a702:	6d85      	ldr	r5, [r0, #88]	@ 0x58
 800a704:	615d      	str	r5, [r3, #20]
 800a706:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800a70a:	ea01 2184 	and.w	r1, r1, r4, lsl #10
 800a70e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800a712:	430a      	orrs	r2, r1
 800a714:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800a718:	619a      	str	r2, [r3, #24]
 800a71a:	6219      	str	r1, [r3, #32]
 800a71c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800a71e:	b322      	cbz	r2, 800a76a <awe_fwInitIoPins+0x9a>
 800a720:	491c      	ldr	r1, [pc, #112]	@ (800a794 <awe_fwInitIoPins+0xc4>)
 800a722:	6051      	str	r1, [r2, #4]
 800a724:	69d4      	ldr	r4, [r2, #28]
 800a726:	2100      	movs	r1, #0
 800a728:	2502      	movs	r5, #2
 800a72a:	62d1      	str	r1, [r2, #44]	@ 0x2c
 800a72c:	6311      	str	r1, [r2, #48]	@ 0x30
 800a72e:	6095      	str	r5, [r2, #8]
 800a730:	6291      	str	r1, [r2, #40]	@ 0x28
 800a732:	e9c2 1103 	strd	r1, r1, [r2, #12]
 800a736:	6251      	str	r1, [r2, #36]	@ 0x24
 800a738:	63d1      	str	r1, [r2, #60]	@ 0x3c
 800a73a:	6011      	str	r1, [r2, #0]
 800a73c:	6dc5      	ldr	r5, [r0, #92]	@ 0x5c
 800a73e:	b914      	cbnz	r4, 800a746 <awe_fwInitIoPins+0x76>
 800a740:	f3c5 0110 	ubfx	r1, r5, #0, #17
 800a744:	61d1      	str	r1, [r2, #28]
 800a746:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a748:	4c11      	ldr	r4, [pc, #68]	@ (800a790 <awe_fwInitIoPins+0xc0>)
 800a74a:	6989      	ldr	r1, [r1, #24]
 800a74c:	6d86      	ldr	r6, [r0, #88]	@ 0x58
 800a74e:	6156      	str	r6, [r2, #20]
 800a750:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800a754:	ea04 2485 	and.w	r4, r4, r5, lsl #10
 800a758:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800a75c:	4321      	orrs	r1, r4
 800a75e:	f44f 0480 	mov.w	r4, #4194304	@ 0x400000
 800a762:	6191      	str	r1, [r2, #24]
 800a764:	6214      	str	r4, [r2, #32]
 800a766:	b143      	cbz	r3, 800a77a <awe_fwInitIoPins+0xaa>
 800a768:	601a      	str	r2, [r3, #0]
 800a76a:	6783      	str	r3, [r0, #120]	@ 0x78
 800a76c:	bc70      	pop	{r4, r5, r6}
 800a76e:	2000      	movs	r0, #0
 800a770:	4770      	bx	lr
 800a772:	f3c4 0210 	ubfx	r2, r4, #0, #17
 800a776:	61da      	str	r2, [r3, #28]
 800a778:	e7c0      	b.n	800a6fc <awe_fwInitIoPins+0x2c>
 800a77a:	4613      	mov	r3, r2
 800a77c:	6783      	str	r3, [r0, #120]	@ 0x78
 800a77e:	bc70      	pop	{r4, r5, r6}
 800a780:	2000      	movs	r0, #0
 800a782:	4770      	bx	lr
 800a784:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 800a788:	4770      	bx	lr
 800a78a:	bf00      	nop
 800a78c:	08033bac 	.word	0x08033bac
 800a790:	07fffc00 	.word	0x07fffc00
 800a794:	08033bb4 	.word	0x08033bb4

0800a798 <awe_fwGetFirstIO>:
 800a798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a79a:	6f85      	ldr	r5, [r0, #120]	@ 0x78
 800a79c:	b1dd      	cbz	r5, 800a7d6 <awe_fwGetFirstIO+0x3e>
 800a79e:	4604      	mov	r4, r0
 800a7a0:	600d      	str	r5, [r1, #0]
 800a7a2:	4628      	mov	r0, r5
 800a7a4:	461e      	mov	r6, r3
 800a7a6:	4617      	mov	r7, r2
 800a7a8:	f7ff f8ae 	bl	8009908 <awe_fwGetClassType>
 800a7ac:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
 800a7ae:	6038      	str	r0, [r7, #0]
 800a7b0:	694a      	ldr	r2, [r1, #20]
 800a7b2:	698b      	ldr	r3, [r1, #24]
 800a7b4:	6032      	str	r2, [r6, #0]
 800a7b6:	9a06      	ldr	r2, [sp, #24]
 800a7b8:	6013      	str	r3, [r2, #0]
 800a7ba:	9a07      	ldr	r2, [sp, #28]
 800a7bc:	69cb      	ldr	r3, [r1, #28]
 800a7be:	6013      	str	r3, [r2, #0]
 800a7c0:	9a08      	ldr	r2, [sp, #32]
 800a7c2:	6a0b      	ldr	r3, [r1, #32]
 800a7c4:	6013      	str	r3, [r2, #0]
 800a7c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a7c8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800a7ca:	6013      	str	r3, [r2, #0]
 800a7cc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a7ce:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
 800a7d0:	6013      	str	r3, [r2, #0]
 800a7d2:	2000      	movs	r0, #0
 800a7d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a7d6:	f06f 0018 	mvn.w	r0, #24
 800a7da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a7dc <awe_fwGetNextIO>:
 800a7dc:	b570      	push	{r4, r5, r6, lr}
 800a7de:	1e4c      	subs	r4, r1, #1
 800a7e0:	07c9      	lsls	r1, r1, #31
 800a7e2:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800a7e6:	d531      	bpl.n	800a84c <awe_fwGetNextIO+0x70>
 800a7e8:	f8d0 10e0 	ldr.w	r1, [r0, #224]	@ 0xe0
 800a7ec:	428c      	cmp	r4, r1
 800a7ee:	d237      	bcs.n	800a860 <awe_fwGetNextIO+0x84>
 800a7f0:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800a7f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 800a7f6:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 800a7fa:	2c00      	cmp	r4, #0
 800a7fc:	d033      	beq.n	800a866 <awe_fwGetNextIO+0x8a>
 800a7fe:	4620      	mov	r0, r4
 800a800:	461d      	mov	r5, r3
 800a802:	4616      	mov	r6, r2
 800a804:	f7ff f880 	bl	8009908 <awe_fwGetClassType>
 800a808:	f100 4082 	add.w	r0, r0, #1090519040	@ 0x41000000
 800a80c:	f500 1088 	add.w	r0, r0, #1114112	@ 0x110000
 800a810:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800a814:	d227      	bcs.n	800a866 <awe_fwGetNextIO+0x8a>
 800a816:	6824      	ldr	r4, [r4, #0]
 800a818:	b314      	cbz	r4, 800a860 <awe_fwGetNextIO+0x84>
 800a81a:	6034      	str	r4, [r6, #0]
 800a81c:	4620      	mov	r0, r4
 800a81e:	f7ff f873 	bl	8009908 <awe_fwGetClassType>
 800a822:	9904      	ldr	r1, [sp, #16]
 800a824:	6962      	ldr	r2, [r4, #20]
 800a826:	6028      	str	r0, [r5, #0]
 800a828:	69a3      	ldr	r3, [r4, #24]
 800a82a:	600a      	str	r2, [r1, #0]
 800a82c:	9a05      	ldr	r2, [sp, #20]
 800a82e:	6013      	str	r3, [r2, #0]
 800a830:	9a06      	ldr	r2, [sp, #24]
 800a832:	69e3      	ldr	r3, [r4, #28]
 800a834:	6013      	str	r3, [r2, #0]
 800a836:	9a07      	ldr	r2, [sp, #28]
 800a838:	6a23      	ldr	r3, [r4, #32]
 800a83a:	6013      	str	r3, [r2, #0]
 800a83c:	9a08      	ldr	r2, [sp, #32]
 800a83e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800a840:	6013      	str	r3, [r2, #0]
 800a842:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a844:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800a846:	6013      	str	r3, [r2, #0]
 800a848:	2000      	movs	r0, #0
 800a84a:	bd70      	pop	{r4, r5, r6, pc}
 800a84c:	f8d0 10e4 	ldr.w	r1, [r0, #228]	@ 0xe4
 800a850:	428c      	cmp	r4, r1
 800a852:	d205      	bcs.n	800a860 <awe_fwGetNextIO+0x84>
 800a854:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a856:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 800a85a:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 800a85e:	e7cc      	b.n	800a7fa <awe_fwGetNextIO+0x1e>
 800a860:	f06f 0018 	mvn.w	r0, #24
 800a864:	bd70      	pop	{r4, r5, r6, pc}
 800a866:	f06f 0012 	mvn.w	r0, #18
 800a86a:	bd70      	pop	{r4, r5, r6, pc}

0800a86c <awe_fwGetPinType>:
 800a86c:	b570      	push	{r4, r5, r6, lr}
 800a86e:	1e4d      	subs	r5, r1, #1
 800a870:	07c9      	lsls	r1, r1, #31
 800a872:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800a876:	d533      	bpl.n	800a8e0 <awe_fwGetPinType+0x74>
 800a878:	f8d0 10e0 	ldr.w	r1, [r0, #224]	@ 0xe0
 800a87c:	428d      	cmp	r5, r1
 800a87e:	d23c      	bcs.n	800a8fa <awe_fwGetPinType+0x8e>
 800a880:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a882:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 800a886:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800a88a:	2c00      	cmp	r4, #0
 800a88c:	d032      	beq.n	800a8f4 <awe_fwGetPinType+0x88>
 800a88e:	4620      	mov	r0, r4
 800a890:	461d      	mov	r5, r3
 800a892:	4616      	mov	r6, r2
 800a894:	f7ff f838 	bl	8009908 <awe_fwGetClassType>
 800a898:	f100 4082 	add.w	r0, r0, #1090519040	@ 0x41000000
 800a89c:	f500 1088 	add.w	r0, r0, #1114112	@ 0x110000
 800a8a0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800a8a4:	d226      	bcs.n	800a8f4 <awe_fwGetPinType+0x88>
 800a8a6:	4620      	mov	r0, r4
 800a8a8:	f7ff f82e 	bl	8009908 <awe_fwGetClassType>
 800a8ac:	6030      	str	r0, [r6, #0]
 800a8ae:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a8b0:	b10a      	cbz	r2, 800a8b6 <awe_fwGetPinType+0x4a>
 800a8b2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800a8b4:	689a      	ldr	r2, [r3, #8]
 800a8b6:	9904      	ldr	r1, [sp, #16]
 800a8b8:	602a      	str	r2, [r5, #0]
 800a8ba:	6962      	ldr	r2, [r4, #20]
 800a8bc:	69a3      	ldr	r3, [r4, #24]
 800a8be:	600a      	str	r2, [r1, #0]
 800a8c0:	9a05      	ldr	r2, [sp, #20]
 800a8c2:	6013      	str	r3, [r2, #0]
 800a8c4:	9a06      	ldr	r2, [sp, #24]
 800a8c6:	69e3      	ldr	r3, [r4, #28]
 800a8c8:	6013      	str	r3, [r2, #0]
 800a8ca:	9a07      	ldr	r2, [sp, #28]
 800a8cc:	6a23      	ldr	r3, [r4, #32]
 800a8ce:	6013      	str	r3, [r2, #0]
 800a8d0:	9a08      	ldr	r2, [sp, #32]
 800a8d2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800a8d4:	6013      	str	r3, [r2, #0]
 800a8d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a8d8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800a8da:	6013      	str	r3, [r2, #0]
 800a8dc:	2000      	movs	r0, #0
 800a8de:	bd70      	pop	{r4, r5, r6, pc}
 800a8e0:	f8d0 10e4 	ldr.w	r1, [r0, #228]	@ 0xe4
 800a8e4:	428d      	cmp	r5, r1
 800a8e6:	d208      	bcs.n	800a8fa <awe_fwGetPinType+0x8e>
 800a8e8:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800a8ea:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 800a8ee:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800a8f2:	e7ca      	b.n	800a88a <awe_fwGetPinType+0x1e>
 800a8f4:	f06f 0012 	mvn.w	r0, #18
 800a8f8:	bd70      	pop	{r4, r5, r6, pc}
 800a8fa:	f06f 004f 	mvn.w	r0, #79	@ 0x4f
 800a8fe:	bd70      	pop	{r4, r5, r6, pc}

0800a900 <awe_fwBindIOToWire>:
 800a900:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a902:	b085      	sub	sp, #20
 800a904:	2300      	movs	r3, #0
 800a906:	9301      	str	r3, [sp, #4]
 800a908:	b1b0      	cbz	r0, 800a938 <awe_fwBindIOToWire+0x38>
 800a90a:	4614      	mov	r4, r2
 800a90c:	ab03      	add	r3, sp, #12
 800a90e:	aa02      	add	r2, sp, #8
 800a910:	4605      	mov	r5, r0
 800a912:	f7fe ffa7 	bl	8009864 <awe_fwGetObjectByID>
 800a916:	b118      	cbz	r0, 800a920 <awe_fwBindIOToWire+0x20>
 800a918:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 800a91c:	b005      	add	sp, #20
 800a91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a920:	9a03      	ldr	r2, [sp, #12]
 800a922:	4b3a      	ldr	r3, [pc, #232]	@ (800aa0c <awe_fwBindIOToWire+0x10c>)
 800a924:	9e02      	ldr	r6, [sp, #8]
 800a926:	4413      	add	r3, r2
 800a928:	f5b3 6ff0 	cmp.w	r3, #1920	@ 0x780
 800a92c:	d208      	bcs.n	800a940 <awe_fwBindIOToWire+0x40>
 800a92e:	6a33      	ldr	r3, [r6, #32]
 800a930:	b153      	cbz	r3, 800a948 <awe_fwBindIOToWire+0x48>
 800a932:	f06f 0058 	mvn.w	r0, #88	@ 0x58
 800a936:	e7f1      	b.n	800a91c <awe_fwBindIOToWire+0x1c>
 800a938:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 800a93c:	b005      	add	sp, #20
 800a93e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a940:	f06f 0008 	mvn.w	r0, #8
 800a944:	b005      	add	sp, #20
 800a946:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a948:	9801      	ldr	r0, [sp, #4]
 800a94a:	4601      	mov	r1, r0
 800a94c:	2800      	cmp	r0, #0
 800a94e:	d1e5      	bne.n	800a91c <awe_fwBindIOToWire+0x1c>
 800a950:	1e63      	subs	r3, r4, #1
 800a952:	07e2      	lsls	r2, r4, #31
 800a954:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800a958:	d509      	bpl.n	800a96e <awe_fwBindIOToWire+0x6e>
 800a95a:	f8d5 20e0 	ldr.w	r2, [r5, #224]	@ 0xe0
 800a95e:	4293      	cmp	r3, r2
 800a960:	d201      	bcs.n	800a966 <awe_fwBindIOToWire+0x66>
 800a962:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 800a964:	b964      	cbnz	r4, 800a980 <awe_fwBindIOToWire+0x80>
 800a966:	f06f 0049 	mvn.w	r0, #73	@ 0x49
 800a96a:	b005      	add	sp, #20
 800a96c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a96e:	f8d5 20e4 	ldr.w	r2, [r5, #228]	@ 0xe4
 800a972:	4293      	cmp	r3, r2
 800a974:	d2f7      	bcs.n	800a966 <awe_fwBindIOToWire+0x66>
 800a976:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
 800a978:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a97a:	f043 0303 	orr.w	r3, r3, #3
 800a97e:	6423      	str	r3, [r4, #64]	@ 0x40
 800a980:	69a3      	ldr	r3, [r4, #24]
 800a982:	6972      	ldr	r2, [r6, #20]
 800a984:	0f1b      	lsrs	r3, r3, #28
 800a986:	ebb3 7f12 	cmp.w	r3, r2, lsr #28
 800a98a:	d003      	beq.n	800a994 <awe_fwBindIOToWire+0x94>
 800a98c:	f06f 0015 	mvn.w	r0, #21
 800a990:	b005      	add	sp, #20
 800a992:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a994:	69b3      	ldr	r3, [r6, #24]
 800a996:	69e0      	ldr	r0, [r4, #28]
 800a998:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800a99c:	f3c0 0010 	ubfx	r0, r0, #0, #17
 800a9a0:	fbb3 f7f0 	udiv	r7, r3, r0
 800a9a4:	fb00 3717 	mls	r7, r0, r7, r3
 800a9a8:	b9d7      	cbnz	r7, 800a9e0 <awe_fwBindIOToWire+0xe0>
 800a9aa:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800a9ac:	b9df      	cbnz	r7, 800a9e6 <awe_fwBindIOToWire+0xe6>
 800a9ae:	4283      	cmp	r3, r0
 800a9b0:	d11c      	bne.n	800a9ec <awe_fwBindIOToWire+0xec>
 800a9b2:	68f0      	ldr	r0, [r6, #12]
 800a9b4:	6120      	str	r0, [r4, #16]
 800a9b6:	b338      	cbz	r0, 800aa08 <awe_fwBindIOToWire+0x108>
 800a9b8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800a9ba:	682f      	ldr	r7, [r5, #0]
 800a9bc:	68f2      	ldr	r2, [r6, #12]
 800a9be:	f103 0c01 	add.w	ip, r3, #1
 800a9c2:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800a9c6:	f8c4 c028 	str.w	ip, [r4, #40]	@ 0x28
 800a9ca:	e9c3 760b 	strd	r7, r6, [r3, #44]	@ 0x2c
 800a9ce:	2300      	movs	r3, #0
 800a9d0:	60e2      	str	r2, [r4, #12]
 800a9d2:	6263      	str	r3, [r4, #36]	@ 0x24
 800a9d4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a9d6:	4608      	mov	r0, r1
 800a9d8:	6234      	str	r4, [r6, #32]
 800a9da:	f8c5 60a4 	str.w	r6, [r5, #164]	@ 0xa4
 800a9de:	e79d      	b.n	800a91c <awe_fwBindIOToWire+0x1c>
 800a9e0:	f06f 0016 	mvn.w	r0, #22
 800a9e4:	e79a      	b.n	800a91c <awe_fwBindIOToWire+0x1c>
 800a9e6:	f06f 0057 	mvn.w	r0, #87	@ 0x57
 800a9ea:	e797      	b.n	800a91c <awe_fwBindIOToWire+0x1c>
 800a9ec:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800a9f0:	fb03 f202 	mul.w	r2, r3, r2
 800a9f4:	0091      	lsls	r1, r2, #2
 800a9f6:	ab01      	add	r3, sp, #4
 800a9f8:	f240 2231 	movw	r2, #561	@ 0x231
 800a9fc:	4628      	mov	r0, r5
 800a9fe:	f014 ff5b 	bl	801f8b8 <awe_fwMallocInst>
 800aa02:	9901      	ldr	r1, [sp, #4]
 800aa04:	6120      	str	r0, [r4, #16]
 800aa06:	e7d6      	b.n	800a9b6 <awe_fwBindIOToWire+0xb6>
 800aa08:	4608      	mov	r0, r1
 800aa0a:	e787      	b.n	800a91c <awe_fwBindIOToWire+0x1c>
 800aa0c:	4110ff80 	.word	0x4110ff80

0800aa10 <awe_audioImportSamples>:
 800aa10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa12:	6e45      	ldr	r5, [r0, #100]	@ 0x64
 800aa14:	b083      	sub	sp, #12
 800aa16:	f89d 6020 	ldrb.w	r6, [sp, #32]
 800aa1a:	2d00      	cmp	r5, #0
 800aa1c:	d034      	beq.n	800aa88 <awe_audioImportSamples+0x78>
 800aa1e:	686c      	ldr	r4, [r5, #4]
 800aa20:	b91c      	cbnz	r4, 800aa2a <awe_audioImportSamples+0x1a>
 800aa22:	f8d0 40a0 	ldr.w	r4, [r0, #160]	@ 0xa0
 800aa26:	0664      	lsls	r4, r4, #25
 800aa28:	d543      	bpl.n	800aab2 <awe_audioImportSamples+0xa2>
 800aa2a:	686c      	ldr	r4, [r5, #4]
 800aa2c:	6dc7      	ldr	r7, [r0, #92]	@ 0x5c
 800aa2e:	b324      	cbz	r4, 800aa7a <awe_audioImportSamples+0x6a>
 800aa30:	f8d0 40e0 	ldr.w	r4, [r0, #224]	@ 0xe0
 800aa34:	b1f4      	cbz	r4, 800aa74 <awe_audioImportSamples+0x64>
 800aa36:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800aa38:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa3a:	b1dc      	cbz	r4, 800aa74 <awe_audioImportSamples+0x64>
 800aa3c:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 800aa3e:	6965      	ldr	r5, [r4, #20]
 800aa40:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800aa44:	42ab      	cmp	r3, r5
 800aa46:	da15      	bge.n	800aa74 <awe_audioImportSamples+0x64>
 800aa48:	f8d0 c024 	ldr.w	ip, [r0, #36]	@ 0x24
 800aa4c:	6904      	ldr	r4, [r0, #16]
 800aa4e:	fb0c 3005 	mla	r0, ip, r5, r3
 800aa52:	eb14 0480 	adds.w	r4, r4, r0, lsl #2
 800aa56:	d00d      	beq.n	800aa74 <awe_audioImportSamples+0x64>
 800aa58:	4694      	mov	ip, r2
 800aa5a:	4608      	mov	r0, r1
 800aa5c:	2e03      	cmp	r6, #3
 800aa5e:	d82b      	bhi.n	800aab8 <awe_audioImportSamples+0xa8>
 800aa60:	e8df f006 	tbb	[pc, r6]
 800aa64:	18180220 	.word	0x18180220
 800aa68:	9700      	str	r7, [sp, #0]
 800aa6a:	462b      	mov	r3, r5
 800aa6c:	4622      	mov	r2, r4
 800aa6e:	4661      	mov	r1, ip
 800aa70:	f010 fae6 	bl	801b040 <awe_vecCopy24RTo32>
 800aa74:	2000      	movs	r0, #0
 800aa76:	b003      	add	sp, #12
 800aa78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa7a:	f8d0 40a0 	ldr.w	r4, [r0, #160]	@ 0xa0
 800aa7e:	f3c4 1480 	ubfx	r4, r4, #6, #1
 800aa82:	2c00      	cmp	r4, #0
 800aa84:	d1d4      	bne.n	800aa30 <awe_audioImportSamples+0x20>
 800aa86:	e7f5      	b.n	800aa74 <awe_audioImportSamples+0x64>
 800aa88:	f8d0 40a0 	ldr.w	r4, [r0, #160]	@ 0xa0
 800aa8c:	0665      	lsls	r5, r4, #25
 800aa8e:	d510      	bpl.n	800aab2 <awe_audioImportSamples+0xa2>
 800aa90:	6dc7      	ldr	r7, [r0, #92]	@ 0x5c
 800aa92:	e7f4      	b.n	800aa7e <awe_audioImportSamples+0x6e>
 800aa94:	9700      	str	r7, [sp, #0]
 800aa96:	462b      	mov	r3, r5
 800aa98:	4622      	mov	r2, r4
 800aa9a:	4661      	mov	r1, ip
 800aa9c:	f010 fae2 	bl	801b064 <awe_vecCopy32>
 800aaa0:	2000      	movs	r0, #0
 800aaa2:	e7e8      	b.n	800aa76 <awe_audioImportSamples+0x66>
 800aaa4:	9700      	str	r7, [sp, #0]
 800aaa6:	462b      	mov	r3, r5
 800aaa8:	4622      	mov	r2, r4
 800aaaa:	4661      	mov	r1, ip
 800aaac:	f010 fab6 	bl	801b01c <awe_vecCopy16To32>
 800aab0:	e7e0      	b.n	800aa74 <awe_audioImportSamples+0x64>
 800aab2:	f06f 005c 	mvn.w	r0, #92	@ 0x5c
 800aab6:	e7de      	b.n	800aa76 <awe_audioImportSamples+0x66>
 800aab8:	f06f 0010 	mvn.w	r0, #16
 800aabc:	e7db      	b.n	800aa76 <awe_audioImportSamples+0x66>
 800aabe:	bf00      	nop

0800aac0 <awe_audioExportSamples>:
 800aac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aac2:	6e44      	ldr	r4, [r0, #100]	@ 0x64
 800aac4:	b085      	sub	sp, #20
 800aac6:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 800aaca:	2c00      	cmp	r4, #0
 800aacc:	d04b      	beq.n	800ab66 <awe_audioExportSamples+0xa6>
 800aace:	6865      	ldr	r5, [r4, #4]
 800aad0:	b91d      	cbnz	r5, 800aada <awe_audioExportSamples+0x1a>
 800aad2:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 800aad6:	066d      	lsls	r5, r5, #25
 800aad8:	d571      	bpl.n	800abbe <awe_audioExportSamples+0xfe>
 800aada:	6864      	ldr	r4, [r4, #4]
 800aadc:	6dc5      	ldr	r5, [r0, #92]	@ 0x5c
 800aade:	b91c      	cbnz	r4, 800aae8 <awe_audioExportSamples+0x28>
 800aae0:	f8d0 40a0 	ldr.w	r4, [r0, #160]	@ 0xa0
 800aae4:	0664      	lsls	r4, r4, #25
 800aae6:	d52b      	bpl.n	800ab40 <awe_audioExportSamples+0x80>
 800aae8:	f8d0 40e4 	ldr.w	r4, [r0, #228]	@ 0xe4
 800aaec:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800aaee:	b324      	cbz	r4, 800ab3a <awe_audioExportSamples+0x7a>
 800aaf0:	6abc      	ldr	r4, [r7, #40]	@ 0x28
 800aaf2:	b31c      	cbz	r4, 800ab3c <awe_audioExportSamples+0x7c>
 800aaf4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800aaf6:	6944      	ldr	r4, [r0, #20]
 800aaf8:	6938      	ldr	r0, [r7, #16]
 800aafa:	9003      	str	r0, [sp, #12]
 800aafc:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800aafe:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800ab02:	fb00 3e04 	mla	lr, r0, r4, r3
 800ab06:	9803      	ldr	r0, [sp, #12]
 800ab08:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 800ab0c:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 800ab0e:	f010 0f02 	tst.w	r0, #2
 800ab12:	d007      	beq.n	800ab24 <awe_audioExportSamples+0x64>
 800ab14:	f010 0f01 	tst.w	r0, #1
 800ab18:	bf0c      	ite	eq
 800ab1a:	f020 0002 	biceq.w	r0, r0, #2
 800ab1e:	f020 0003 	bicne.w	r0, r0, #3
 800ab22:	6438      	str	r0, [r7, #64]	@ 0x40
 800ab24:	42a3      	cmp	r3, r4
 800ab26:	da0b      	bge.n	800ab40 <awe_audioExportSamples+0x80>
 800ab28:	f1be 0f00 	cmp.w	lr, #0
 800ab2c:	d008      	beq.n	800ab40 <awe_audioExportSamples+0x80>
 800ab2e:	2e03      	cmp	r6, #3
 800ab30:	d815      	bhi.n	800ab5e <awe_audioExportSamples+0x9e>
 800ab32:	e8df f006 	tbb	[pc, r6]
 800ab36:	323b      	.short	0x323b
 800ab38:	2929      	.short	0x2929
 800ab3a:	b10f      	cbz	r7, 800ab40 <awe_audioExportSamples+0x80>
 800ab3c:	46a6      	mov	lr, r4
 800ab3e:	e7e5      	b.n	800ab0c <awe_audioExportSamples+0x4c>
 800ab40:	b1be      	cbz	r6, 800ab72 <awe_audioExportSamples+0xb2>
 800ab42:	2e03      	cmp	r6, #3
 800ab44:	d80b      	bhi.n	800ab5e <awe_audioExportSamples+0x9e>
 800ab46:	b13d      	cbz	r5, 800ab58 <awe_audioExportSamples+0x98>
 800ab48:	2000      	movs	r0, #0
 800ab4a:	0092      	lsls	r2, r2, #2
 800ab4c:	4603      	mov	r3, r0
 800ab4e:	3001      	adds	r0, #1
 800ab50:	42a8      	cmp	r0, r5
 800ab52:	600b      	str	r3, [r1, #0]
 800ab54:	4411      	add	r1, r2
 800ab56:	d1fa      	bne.n	800ab4e <awe_audioExportSamples+0x8e>
 800ab58:	2000      	movs	r0, #0
 800ab5a:	b005      	add	sp, #20
 800ab5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab5e:	f06f 0010 	mvn.w	r0, #16
 800ab62:	b005      	add	sp, #20
 800ab64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab66:	f8d0 40a0 	ldr.w	r4, [r0, #160]	@ 0xa0
 800ab6a:	0667      	lsls	r7, r4, #25
 800ab6c:	d527      	bpl.n	800abbe <awe_audioExportSamples+0xfe>
 800ab6e:	6dc5      	ldr	r5, [r0, #92]	@ 0x5c
 800ab70:	e7b8      	b.n	800aae4 <awe_audioExportSamples+0x24>
 800ab72:	2d00      	cmp	r5, #0
 800ab74:	d0f0      	beq.n	800ab58 <awe_audioExportSamples+0x98>
 800ab76:	4630      	mov	r0, r6
 800ab78:	0052      	lsls	r2, r2, #1
 800ab7a:	4633      	mov	r3, r6
 800ab7c:	3001      	adds	r0, #1
 800ab7e:	42a8      	cmp	r0, r5
 800ab80:	800b      	strh	r3, [r1, #0]
 800ab82:	4411      	add	r1, r2
 800ab84:	d1fa      	bne.n	800ab7c <awe_audioExportSamples+0xbc>
 800ab86:	e7e7      	b.n	800ab58 <awe_audioExportSamples+0x98>
 800ab88:	4613      	mov	r3, r2
 800ab8a:	4670      	mov	r0, lr
 800ab8c:	460a      	mov	r2, r1
 800ab8e:	9500      	str	r5, [sp, #0]
 800ab90:	4621      	mov	r1, r4
 800ab92:	f010 fa67 	bl	801b064 <awe_vecCopy32>
 800ab96:	2000      	movs	r0, #0
 800ab98:	e7df      	b.n	800ab5a <awe_audioExportSamples+0x9a>
 800ab9a:	4613      	mov	r3, r2
 800ab9c:	4670      	mov	r0, lr
 800ab9e:	460a      	mov	r2, r1
 800aba0:	9500      	str	r5, [sp, #0]
 800aba2:	4621      	mov	r1, r4
 800aba4:	f010 f88e 	bl	801acc4 <awe_vecClip32To24R>
 800aba8:	2000      	movs	r0, #0
 800abaa:	e7d6      	b.n	800ab5a <awe_audioExportSamples+0x9a>
 800abac:	4613      	mov	r3, r2
 800abae:	4670      	mov	r0, lr
 800abb0:	460a      	mov	r2, r1
 800abb2:	9500      	str	r5, [sp, #0]
 800abb4:	4621      	mov	r1, r4
 800abb6:	f010 f873 	bl	801aca0 <awe_vecClip32To16>
 800abba:	2000      	movs	r0, #0
 800abbc:	e7cd      	b.n	800ab5a <awe_audioExportSamples+0x9a>
 800abbe:	f06f 005c 	mvn.w	r0, #92	@ 0x5c
 800abc2:	e7ca      	b.n	800ab5a <awe_audioExportSamples+0x9a>

0800abc4 <awe_initPin>:
 800abc4:	b1b0      	cbz	r0, 800abf4 <awe_initPin+0x30>
 800abc6:	b570      	push	{r4, r5, r6, lr}
 800abc8:	460c      	mov	r4, r1
 800abca:	4615      	mov	r5, r2
 800abcc:	2100      	movs	r1, #0
 800abce:	2244      	movs	r2, #68	@ 0x44
 800abd0:	4606      	mov	r6, r0
 800abd2:	f022 ffbf 	bl	802db54 <memset>
 800abd6:	f3c4 0109 	ubfx	r1, r4, #0, #10
 800abda:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800abde:	61b1      	str	r1, [r6, #24]
 800abe0:	b135      	cbz	r5, 800abf0 <awe_initPin+0x2c>
 800abe2:	f106 0034 	add.w	r0, r6, #52	@ 0x34
 800abe6:	4629      	mov	r1, r5
 800abe8:	f7fe f8fe 	bl	8008de8 <awe_fwSetPackedName>
 800abec:	2000      	movs	r0, #0
 800abee:	bd70      	pop	{r4, r5, r6, pc}
 800abf0:	4628      	mov	r0, r5
 800abf2:	bd70      	pop	{r4, r5, r6, pc}
 800abf4:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 800abf8:	4770      	bx	lr
 800abfa:	bf00      	nop

0800abfc <awe_modAbsProcess>:
 800abfc:	6903      	ldr	r3, [r0, #16]
 800abfe:	e9d3 0200 	ldrd	r0, r2, [r3]
 800ac02:	b500      	push	{lr}
 800ac04:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800ac08:	b083      	sub	sp, #12
 800ac0a:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800ac0e:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800ac12:	fb01 f103 	mul.w	r1, r1, r3
 800ac16:	2301      	movs	r3, #1
 800ac18:	68d2      	ldr	r2, [r2, #12]
 800ac1a:	68c0      	ldr	r0, [r0, #12]
 800ac1c:	9100      	str	r1, [sp, #0]
 800ac1e:	4619      	mov	r1, r3
 800ac20:	f00d fe18 	bl	8018854 <awe_vecAbs>
 800ac24:	b003      	add	sp, #12
 800ac26:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac2a:	bf00      	nop

0800ac2c <awe_modAcosProcess>:
 800ac2c:	6903      	ldr	r3, [r0, #16]
 800ac2e:	e9d3 0200 	ldrd	r0, r2, [r3]
 800ac32:	b500      	push	{lr}
 800ac34:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800ac38:	b083      	sub	sp, #12
 800ac3a:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800ac3e:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800ac42:	fb01 f103 	mul.w	r1, r1, r3
 800ac46:	2301      	movs	r3, #1
 800ac48:	68d2      	ldr	r2, [r2, #12]
 800ac4a:	68c0      	ldr	r0, [r0, #12]
 800ac4c:	9100      	str	r1, [sp, #0]
 800ac4e:	4619      	mov	r1, r3
 800ac50:	f00d ff5a 	bl	8018b08 <awe_vecAcos>
 800ac54:	b003      	add	sp, #12
 800ac56:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac5a:	bf00      	nop

0800ac5c <awe_modAdderProcess>:
 800ac5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac60:	6904      	ldr	r4, [r0, #16]
 800ac62:	f890 9018 	ldrb.w	r9, [r0, #24]
 800ac66:	6823      	ldr	r3, [r4, #0]
 800ac68:	f854 1029 	ldr.w	r1, [r4, r9, lsl #2]
 800ac6c:	6a02      	ldr	r2, [r0, #32]
 800ac6e:	68cd      	ldr	r5, [r1, #12]
 800ac70:	b089      	sub	sp, #36	@ 0x24
 800ac72:	e9d3 7605 	ldrd	r7, r6, [r3, #20]
 800ac76:	ea4f 0889 	mov.w	r8, r9, lsl #2
 800ac7a:	bb92      	cbnz	r2, 800ace2 <awe_modAdderProcess+0x86>
 800ac7c:	f3c6 0210 	ubfx	r2, r6, #0, #17
 800ac80:	f1b9 0f01 	cmp.w	r9, #1
 800ac84:	f3c7 0609 	ubfx	r6, r7, #0, #10
 800ac88:	fb06 f602 	mul.w	r6, r6, r2
 800ac8c:	68d8      	ldr	r0, [r3, #12]
 800ac8e:	d01f      	beq.n	800acd0 <awe_modAdderProcess+0x74>
 800ac90:	6863      	ldr	r3, [r4, #4]
 800ac92:	2701      	movs	r7, #1
 800ac94:	68da      	ldr	r2, [r3, #12]
 800ac96:	9602      	str	r6, [sp, #8]
 800ac98:	e9cd 5700 	strd	r5, r7, [sp]
 800ac9c:	463b      	mov	r3, r7
 800ac9e:	4639      	mov	r1, r7
 800aca0:	f00d ff4c 	bl	8018b3c <awe_vecAdd2x1>
 800aca4:	f1b9 0f02 	cmp.w	r9, #2
 800aca8:	dd0f      	ble.n	800acca <awe_modAdderProcess+0x6e>
 800acaa:	1f23      	subs	r3, r4, #4
 800acac:	4498      	add	r8, r3
 800acae:	3404      	adds	r4, #4
 800acb0:	f854 3f04 	ldr.w	r3, [r4, #4]!
 800acb4:	68d8      	ldr	r0, [r3, #12]
 800acb6:	9602      	str	r6, [sp, #8]
 800acb8:	2301      	movs	r3, #1
 800acba:	e9cd 5700 	strd	r5, r7, [sp]
 800acbe:	4619      	mov	r1, r3
 800acc0:	462a      	mov	r2, r5
 800acc2:	f00d ff3b 	bl	8018b3c <awe_vecAdd2x1>
 800acc6:	45a0      	cmp	r8, r4
 800acc8:	d1f2      	bne.n	800acb0 <awe_modAdderProcess+0x54>
 800acca:	b009      	add	sp, #36	@ 0x24
 800accc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acd0:	9600      	str	r6, [sp, #0]
 800acd2:	462a      	mov	r2, r5
 800acd4:	464b      	mov	r3, r9
 800acd6:	4649      	mov	r1, r9
 800acd8:	f010 f9c4 	bl	801b064 <awe_vecCopy32>
 800acdc:	b009      	add	sp, #36	@ 0x24
 800acde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ace2:	f3c6 0310 	ubfx	r3, r6, #0, #17
 800ace6:	461a      	mov	r2, r3
 800ace8:	f3c7 66c0 	ubfx	r6, r7, #27, #1
 800acec:	ed9f 0a30 	vldr	s0, [pc, #192]	@ 800adb0 <awe_modAdderProcess+0x154>
 800acf0:	9307      	str	r3, [sp, #28]
 800acf2:	2101      	movs	r1, #1
 800acf4:	4628      	mov	r0, r5
 800acf6:	469a      	mov	sl, r3
 800acf8:	9606      	str	r6, [sp, #24]
 800acfa:	f010 fc33 	bl	801b564 <awe_vecFill>
 800acfe:	f1b9 0f00 	cmp.w	r9, #0
 800ad02:	d0e2      	beq.n	800acca <awe_modAdderProcess+0x6e>
 800ad04:	eb04 0208 	add.w	r2, r4, r8
 800ad08:	ea4f 0b6a 	mov.w	fp, sl, asr #1
 800ad0c:	9205      	str	r2, [sp, #20]
 800ad0e:	f105 0a04 	add.w	sl, r5, #4
 800ad12:	6823      	ldr	r3, [r4, #0]
 800ad14:	695f      	ldr	r7, [r3, #20]
 800ad16:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800ad1a:	b1b7      	cbz	r7, 800ad4a <awe_modAdderProcess+0xee>
 800ad1c:	9e06      	ldr	r6, [sp, #24]
 800ad1e:	ea4f 0947 	mov.w	r9, r7, lsl #1
 800ad22:	b9ce      	cbnz	r6, 800ad58 <awe_modAdderProcess+0xfc>
 800ad24:	ea4f 0887 	mov.w	r8, r7, lsl #2
 800ad28:	46b9      	mov	r9, r7
 800ad2a:	9f07      	ldr	r7, [sp, #28]
 800ad2c:	e000      	b.n	800ad30 <awe_modAdderProcess+0xd4>
 800ad2e:	6823      	ldr	r3, [r4, #0]
 800ad30:	68d8      	ldr	r0, [r3, #12]
 800ad32:	9702      	str	r7, [sp, #8]
 800ad34:	2301      	movs	r3, #1
 800ad36:	4430      	add	r0, r6
 800ad38:	e9cd 5300 	strd	r5, r3, [sp]
 800ad3c:	3604      	adds	r6, #4
 800ad3e:	462a      	mov	r2, r5
 800ad40:	4649      	mov	r1, r9
 800ad42:	f00d fefb 	bl	8018b3c <awe_vecAdd2x1>
 800ad46:	45b0      	cmp	r8, r6
 800ad48:	d1f1      	bne.n	800ad2e <awe_modAdderProcess+0xd2>
 800ad4a:	9b05      	ldr	r3, [sp, #20]
 800ad4c:	3404      	adds	r4, #4
 800ad4e:	429c      	cmp	r4, r3
 800ad50:	d1df      	bne.n	800ad12 <awe_modAdderProcess+0xb6>
 800ad52:	b009      	add	sp, #36	@ 0x24
 800ad54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad58:	00ff      	lsls	r7, r7, #3
 800ad5a:	4652      	mov	r2, sl
 800ad5c:	f04f 0800 	mov.w	r8, #0
 800ad60:	46ba      	mov	sl, r7
 800ad62:	465f      	mov	r7, fp
 800ad64:	46a3      	mov	fp, r4
 800ad66:	4614      	mov	r4, r2
 800ad68:	e001      	b.n	800ad6e <awe_modAdderProcess+0x112>
 800ad6a:	f8db 3000 	ldr.w	r3, [fp]
 800ad6e:	68de      	ldr	r6, [r3, #12]
 800ad70:	9702      	str	r7, [sp, #8]
 800ad72:	4446      	add	r6, r8
 800ad74:	2302      	movs	r3, #2
 800ad76:	e9cd 5300 	strd	r5, r3, [sp]
 800ad7a:	4630      	mov	r0, r6
 800ad7c:	462a      	mov	r2, r5
 800ad7e:	4649      	mov	r1, r9
 800ad80:	f00d fedc 	bl	8018b3c <awe_vecAdd2x1>
 800ad84:	2302      	movs	r3, #2
 800ad86:	f108 0808 	add.w	r8, r8, #8
 800ad8a:	1d30      	adds	r0, r6, #4
 800ad8c:	9702      	str	r7, [sp, #8]
 800ad8e:	e9cd 4300 	strd	r4, r3, [sp]
 800ad92:	4622      	mov	r2, r4
 800ad94:	4649      	mov	r1, r9
 800ad96:	f00d fed1 	bl	8018b3c <awe_vecAdd2x1>
 800ad9a:	45c2      	cmp	sl, r8
 800ad9c:	d1e5      	bne.n	800ad6a <awe_modAdderProcess+0x10e>
 800ad9e:	46a2      	mov	sl, r4
 800ada0:	9b05      	ldr	r3, [sp, #20]
 800ada2:	465c      	mov	r4, fp
 800ada4:	3404      	adds	r4, #4
 800ada6:	429c      	cmp	r4, r3
 800ada8:	46bb      	mov	fp, r7
 800adaa:	d1b2      	bne.n	800ad12 <awe_modAdderProcess+0xb6>
 800adac:	e7d1      	b.n	800ad52 <awe_modAdderProcess+0xf6>
 800adae:	bf00      	nop
 800adb0:	00000000 	.word	0x00000000

0800adb4 <awe_modAdderInt32Process>:
 800adb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adb8:	6906      	ldr	r6, [r0, #16]
 800adba:	7e07      	ldrb	r7, [r0, #24]
 800adbc:	6833      	ldr	r3, [r6, #0]
 800adbe:	6a02      	ldr	r2, [r0, #32]
 800adc0:	f856 1027 	ldr.w	r1, [r6, r7, lsl #2]
 800adc4:	6998      	ldr	r0, [r3, #24]
 800adc6:	68cd      	ldr	r5, [r1, #12]
 800adc8:	b085      	sub	sp, #20
 800adca:	f3c0 0810 	ubfx	r8, r0, #0, #17
 800adce:	ea4f 0b87 	mov.w	fp, r7, lsl #2
 800add2:	b342      	cbz	r2, 800ae26 <awe_modAdderInt32Process+0x72>
 800add4:	4643      	mov	r3, r8
 800add6:	2200      	movs	r2, #0
 800add8:	2101      	movs	r1, #1
 800adda:	4628      	mov	r0, r5
 800addc:	f010 fce6 	bl	801b7ac <awe_vecFillInt32>
 800ade0:	b1f7      	cbz	r7, 800ae20 <awe_modAdderInt32Process+0x6c>
 800ade2:	3e04      	subs	r6, #4
 800ade4:	44b3      	add	fp, r6
 800ade6:	f04f 0a01 	mov.w	sl, #1
 800adea:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800adee:	695f      	ldr	r7, [r3, #20]
 800adf0:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800adf4:	b197      	cbz	r7, 800ae1c <awe_modAdderInt32Process+0x68>
 800adf6:	ea4f 0987 	mov.w	r9, r7, lsl #2
 800adfa:	2400      	movs	r4, #0
 800adfc:	e000      	b.n	800ae00 <awe_modAdderInt32Process+0x4c>
 800adfe:	6833      	ldr	r3, [r6, #0]
 800ae00:	68d8      	ldr	r0, [r3, #12]
 800ae02:	f8cd 8008 	str.w	r8, [sp, #8]
 800ae06:	4420      	add	r0, r4
 800ae08:	e9cd 5a00 	strd	r5, sl, [sp]
 800ae0c:	3404      	adds	r4, #4
 800ae0e:	2301      	movs	r3, #1
 800ae10:	462a      	mov	r2, r5
 800ae12:	4639      	mov	r1, r7
 800ae14:	f00e f854 	bl	8018ec0 <awe_vecAdd2x1Int32>
 800ae18:	454c      	cmp	r4, r9
 800ae1a:	d1f0      	bne.n	800adfe <awe_modAdderInt32Process+0x4a>
 800ae1c:	45b3      	cmp	fp, r6
 800ae1e:	d1e4      	bne.n	800adea <awe_modAdderInt32Process+0x36>
 800ae20:	b005      	add	sp, #20
 800ae22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae26:	695c      	ldr	r4, [r3, #20]
 800ae28:	68d8      	ldr	r0, [r3, #12]
 800ae2a:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800ae2e:	2301      	movs	r3, #1
 800ae30:	fb08 f404 	mul.w	r4, r8, r4
 800ae34:	9400      	str	r4, [sp, #0]
 800ae36:	4619      	mov	r1, r3
 800ae38:	462a      	mov	r2, r5
 800ae3a:	f010 f913 	bl	801b064 <awe_vecCopy32>
 800ae3e:	2f01      	cmp	r7, #1
 800ae40:	d9ee      	bls.n	800ae20 <awe_modAdderInt32Process+0x6c>
 800ae42:	1f33      	subs	r3, r6, #4
 800ae44:	449b      	add	fp, r3
 800ae46:	2701      	movs	r7, #1
 800ae48:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800ae4c:	68d8      	ldr	r0, [r3, #12]
 800ae4e:	9402      	str	r4, [sp, #8]
 800ae50:	2301      	movs	r3, #1
 800ae52:	e9cd 5700 	strd	r5, r7, [sp]
 800ae56:	4619      	mov	r1, r3
 800ae58:	462a      	mov	r2, r5
 800ae5a:	f00e f831 	bl	8018ec0 <awe_vecAdd2x1Int32>
 800ae5e:	45b3      	cmp	fp, r6
 800ae60:	d1f2      	bne.n	800ae48 <awe_modAdderInt32Process+0x94>
 800ae62:	b005      	add	sp, #20
 800ae64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ae68 <awe_modAGCCoreProcess>:
 800ae68:	6902      	ldr	r2, [r0, #16]
 800ae6a:	e9d2 3200 	ldrd	r3, r2, [r2]
 800ae6e:	b570      	push	{r4, r5, r6, lr}
 800ae70:	e9d3 1505 	ldrd	r1, r5, [r3, #20]
 800ae74:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800ae78:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800ae7c:	4604      	mov	r4, r0
 800ae7e:	ed2d 8b02 	vpush	{d8}
 800ae82:	68d8      	ldr	r0, [r3, #12]
 800ae84:	68d6      	ldr	r6, [r2, #12]
 800ae86:	fb05 f101 	mul.w	r1, r5, r1
 800ae8a:	f014 f8b5 	bl	801eff8 <awe_vecSumSquared>
 800ae8e:	edd4 7a18 	vldr	s15, [r4, #96]	@ 0x60
 800ae92:	edd4 6a13 	vldr	s13, [r4, #76]	@ 0x4c
 800ae96:	edd4 5a17 	vldr	s11, [r4, #92]	@ 0x5c
 800ae9a:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 800afa8 <awe_modAGCCoreProcess+0x140>
 800ae9e:	ee20 0a27 	vmul.f32	s0, s0, s15
 800aea2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800aea6:	ee66 7a80 	vmul.f32	s15, s13, s0
 800aeaa:	ee37 7a66 	vsub.f32	s14, s14, s13
 800aeae:	eeb0 0ac0 	vabs.f32	s0, s0
 800aeb2:	eee5 7a87 	vfma.f32	s15, s11, s14
 800aeb6:	eeb4 0ac6 	vcmpe.f32	s0, s12
 800aeba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aebe:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 800aec2:	d568      	bpl.n	800af96 <awe_modAGCCoreProcess+0x12e>
 800aec4:	ed9f 8a39 	vldr	s16, [pc, #228]	@ 800afac <awe_modAGCCoreProcess+0x144>
 800aec8:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 800afa8 <awe_modAGCCoreProcess+0x140>
 800aecc:	eeb0 0ae7 	vabs.f32	s0, s15
 800aed0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 800aed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aed8:	d556      	bpl.n	800af88 <awe_modAGCCoreProcess+0x120>
 800aeda:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 800afac <awe_modAGCCoreProcess+0x144>
 800aede:	edd4 7a0c 	vldr	s15, [r4, #48]	@ 0x30
 800aee2:	eef4 7ac8 	vcmpe.f32	s15, s16
 800aee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aeea:	d82f      	bhi.n	800af4c <awe_modAGCCoreProcess+0xe4>
 800aeec:	edd4 7a08 	vldr	s15, [r4, #32]
 800aef0:	edd4 5a11 	vldr	s11, [r4, #68]	@ 0x44
 800aef4:	ed94 6a0a 	vldr	s12, [r4, #40]	@ 0x28
 800aef8:	edd4 6a09 	vldr	s13, [r4, #36]	@ 0x24
 800aefc:	ed9f 0a2c 	vldr	s0, [pc, #176]	@ 800afb0 <awe_modAGCCoreProcess+0x148>
 800af00:	ee77 7a67 	vsub.f32	s15, s14, s15
 800af04:	eef1 6a66 	vneg.f32	s13, s13
 800af08:	ee67 7ae5 	vnmul.f32	s15, s15, s11
 800af0c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 800af10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af14:	bf58      	it	pl
 800af16:	eeb0 6a67 	vmovpl.f32	s12, s15
 800af1a:	eef4 6ac6 	vcmpe.f32	s13, s12
 800af1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af22:	bfd8      	it	le
 800af24:	eef0 6a46 	vmovle.f32	s13, s12
 800af28:	ee26 0a80 	vmul.f32	s0, s13, s0
 800af2c:	f023 fc66 	bl	802e7fc <expf>
 800af30:	ed84 0a16 	vstr	s0, [r4, #88]	@ 0x58
 800af34:	ecbd 8b02 	vpop	{d8}
 800af38:	462a      	mov	r2, r5
 800af3a:	4630      	mov	r0, r6
 800af3c:	edd4 0a12 	vldr	s1, [r4, #72]	@ 0x48
 800af40:	f104 0140 	add.w	r1, r4, #64	@ 0x40
 800af44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af48:	f010 bc54 	b.w	801b7f4 <awe_vecFirstOrderSmoother>
 800af4c:	ed94 0a16 	vldr	s0, [r4, #88]	@ 0x58
 800af50:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800af54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af58:	d108      	bne.n	800af6c <awe_modAGCCoreProcess+0x104>
 800af5a:	ed9f 0a16 	vldr	s0, [pc, #88]	@ 800afb4 <awe_modAGCCoreProcess+0x14c>
 800af5e:	edd4 7a14 	vldr	s15, [r4, #80]	@ 0x50
 800af62:	ee20 0a27 	vmul.f32	s0, s0, s15
 800af66:	ed84 0a16 	vstr	s0, [r4, #88]	@ 0x58
 800af6a:	e7e3      	b.n	800af34 <awe_modAGCCoreProcess+0xcc>
 800af6c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800af70:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800af74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af78:	ddf1      	ble.n	800af5e <awe_modAGCCoreProcess+0xf6>
 800af7a:	edd4 7a15 	vldr	s15, [r4, #84]	@ 0x54
 800af7e:	ee20 0a27 	vmul.f32	s0, s0, s15
 800af82:	ed84 0a16 	vstr	s0, [r4, #88]	@ 0x58
 800af86:	e7d5      	b.n	800af34 <awe_modAGCCoreProcess+0xcc>
 800af88:	f023 fc8e 	bl	802e8a8 <logf>
 800af8c:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 800afb8 <awe_modAGCCoreProcess+0x150>
 800af90:	ee20 7a07 	vmul.f32	s14, s0, s14
 800af94:	e7a3      	b.n	800aede <awe_modAGCCoreProcess+0x76>
 800af96:	f023 fc87 	bl	802e8a8 <logf>
 800af9a:	ed9f 8a07 	vldr	s16, [pc, #28]	@ 800afb8 <awe_modAGCCoreProcess+0x150>
 800af9e:	edd4 7a17 	vldr	s15, [r4, #92]	@ 0x5c
 800afa2:	ee20 8a08 	vmul.f32	s16, s0, s16
 800afa6:	e78f      	b.n	800aec8 <awe_modAGCCoreProcess+0x60>
 800afa8:	00800000 	.word	0x00800000
 800afac:	c3bda61e 	.word	0xc3bda61e
 800afb0:	3debc8e3 	.word	0x3debc8e3
 800afb4:	358637bd 	.word	0x358637bd
 800afb8:	408af967 	.word	0x408af967

0800afbc <awe_modAGCCoreSet>:
 800afbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800afbe:	6903      	ldr	r3, [r0, #16]
 800afc0:	681b      	ldr	r3, [r3, #0]
 800afc2:	e9d3 5605 	ldrd	r5, r6, [r3, #20]
 800afc6:	048a      	lsls	r2, r1, #18
 800afc8:	ed2d 8b02 	vpush	{d8}
 800afcc:	4604      	mov	r4, r0
 800afce:	460f      	mov	r7, r1
 800afd0:	ed93 8a04 	vldr	s16, [r3, #16]
 800afd4:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800afd8:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800afdc:	d43b      	bmi.n	800b056 <awe_modAGCCoreSet+0x9a>
 800afde:	fb05 f506 	mul.w	r5, r5, r6
 800afe2:	ee07 5a90 	vmov	s15, r5
 800afe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800afea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800afee:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800aff2:	053b      	lsls	r3, r7, #20
 800aff4:	edc4 6a18 	vstr	s13, [r4, #96]	@ 0x60
 800aff8:	d507      	bpl.n	800b00a <awe_modAGCCoreSet+0x4e>
 800affa:	edd4 6a0b 	vldr	s13, [r4, #44]	@ 0x2c
 800affe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b002:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b006:	ed84 7a11 	vstr	s14, [r4, #68]	@ 0x44
 800b00a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b00c:	b93b      	cbnz	r3, 800b01e <awe_modAGCCoreSet+0x62>
 800b00e:	ecbd 8b02 	vpop	{d8}
 800b012:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800b016:	2000      	movs	r0, #0
 800b018:	6523      	str	r3, [r4, #80]	@ 0x50
 800b01a:	6563      	str	r3, [r4, #84]	@ 0x54
 800b01c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b01e:	ee07 6a90 	vmov	s15, r6
 800b022:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b026:	edd4 6a0f 	vldr	s13, [r4, #60]	@ 0x3c
 800b02a:	eddf 8a14 	vldr	s17, [pc, #80]	@ 800b07c <awe_modAGCCoreSet+0xc0>
 800b02e:	ee88 7a27 	vdiv.f32	s14, s16, s15
 800b032:	ee86 8a87 	vdiv.f32	s16, s13, s14
 800b036:	ee28 0a28 	vmul.f32	s0, s16, s17
 800b03a:	f023 fbdf 	bl	802e7fc <expf>
 800b03e:	ed84 0a14 	vstr	s0, [r4, #80]	@ 0x50
 800b042:	ee28 0a68 	vnmul.f32	s0, s16, s17
 800b046:	f023 fbd9 	bl	802e7fc <expf>
 800b04a:	ecbd 8b02 	vpop	{d8}
 800b04e:	2000      	movs	r0, #0
 800b050:	ed84 0a15 	vstr	s0, [r4, #84]	@ 0x54
 800b054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b056:	2001      	movs	r0, #1
 800b058:	eef0 0a48 	vmov.f32	s1, s16
 800b05c:	ed94 0a0d 	vldr	s0, [r4, #52]	@ 0x34
 800b060:	f018 fc9e 	bl	80239a0 <design_smoother>
 800b064:	4630      	mov	r0, r6
 800b066:	ed84 0a12 	vstr	s0, [r4, #72]	@ 0x48
 800b06a:	eef0 0a48 	vmov.f32	s1, s16
 800b06e:	ed94 0a0d 	vldr	s0, [r4, #52]	@ 0x34
 800b072:	f018 fc95 	bl	80239a0 <design_smoother>
 800b076:	ed84 0a13 	vstr	s0, [r4, #76]	@ 0x4c
 800b07a:	e7b0      	b.n	800afde <awe_modAGCCoreSet+0x22>
 800b07c:	3debc8e3 	.word	0x3debc8e3

0800b080 <awe_modAGCCoreBypass>:
 800b080:	6903      	ldr	r3, [r0, #16]
 800b082:	6859      	ldr	r1, [r3, #4]
 800b084:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800b088:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b08c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b090:	68c8      	ldr	r0, [r1, #12]
 800b092:	fb02 f203 	mul.w	r2, r2, r3
 800b096:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b09a:	2101      	movs	r1, #1
 800b09c:	f010 ba62 	b.w	801b564 <awe_vecFill>

0800b0a0 <awe_modAGCLimiterCoreProcess>:
 800b0a0:	6902      	ldr	r2, [r0, #16]
 800b0a2:	ed90 3a09 	vldr	s6, [r0, #36]	@ 0x24
 800b0a6:	edd0 2a10 	vldr	s5, [r0, #64]	@ 0x40
 800b0aa:	e9d2 3100 	ldrd	r3, r1, [r2]
 800b0ae:	699a      	ldr	r2, [r3, #24]
 800b0b0:	68c9      	ldr	r1, [r1, #12]
 800b0b2:	b510      	push	{r4, lr}
 800b0b4:	4604      	mov	r4, r0
 800b0b6:	ed94 2a0a 	vldr	s4, [r4, #40]	@ 0x28
 800b0ba:	68d8      	ldr	r0, [r3, #12]
 800b0bc:	edd4 1a0b 	vldr	s3, [r4, #44]	@ 0x2c
 800b0c0:	ed94 1a08 	vldr	s2, [r4, #32]
 800b0c4:	edd4 0a12 	vldr	s1, [r4, #72]	@ 0x48
 800b0c8:	ed94 0a11 	vldr	s0, [r4, #68]	@ 0x44
 800b0cc:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800b0d0:	f104 034c 	add.w	r3, r4, #76	@ 0x4c
 800b0d4:	f00d ff0c 	bl	8018ef0 <awe_vecAGCLimiterCore>
 800b0d8:	ed84 0a0f 	vstr	s0, [r4, #60]	@ 0x3c
 800b0dc:	bd10      	pop	{r4, pc}
 800b0de:	bf00      	nop

0800b0e0 <awe_modAGCLimiterCoreSet>:
 800b0e0:	b538      	push	{r3, r4, r5, lr}
 800b0e2:	6903      	ldr	r3, [r0, #16]
 800b0e4:	681b      	ldr	r3, [r3, #0]
 800b0e6:	4604      	mov	r4, r0
 800b0e8:	04c8      	lsls	r0, r1, #19
 800b0ea:	ed2d 8b02 	vpush	{d8}
 800b0ee:	460d      	mov	r5, r1
 800b0f0:	ed93 8a04 	vldr	s16, [r3, #16]
 800b0f4:	d509      	bpl.n	800b10a <awe_modAGCLimiterCoreSet+0x2a>
 800b0f6:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800b0fa:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b0fe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b102:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800b106:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 800b10a:	0529      	lsls	r1, r5, #20
 800b10c:	d50c      	bpl.n	800b128 <awe_modAGCLimiterCoreSet+0x48>
 800b10e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800b112:	eef5 7a40 	vcmp.f32	s15, #0.0
 800b116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b11a:	d016      	beq.n	800b14a <awe_modAGCLimiterCoreSet+0x6a>
 800b11c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800b120:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800b124:	ed84 7a10 	vstr	s14, [r4, #64]	@ 0x40
 800b128:	04aa      	lsls	r2, r5, #18
 800b12a:	d412      	bmi.n	800b152 <awe_modAGCLimiterCoreSet+0x72>
 800b12c:	046b      	lsls	r3, r5, #17
 800b12e:	d508      	bpl.n	800b142 <awe_modAGCLimiterCoreSet+0x62>
 800b130:	eef0 0a48 	vmov.f32	s1, s16
 800b134:	2001      	movs	r0, #1
 800b136:	ed94 0a0e 	vldr	s0, [r4, #56]	@ 0x38
 800b13a:	f018 fc31 	bl	80239a0 <design_smoother>
 800b13e:	ed84 0a12 	vstr	s0, [r4, #72]	@ 0x48
 800b142:	ecbd 8b02 	vpop	{d8}
 800b146:	2000      	movs	r0, #0
 800b148:	bd38      	pop	{r3, r4, r5, pc}
 800b14a:	4b07      	ldr	r3, [pc, #28]	@ (800b168 <awe_modAGCLimiterCoreSet+0x88>)
 800b14c:	6423      	str	r3, [r4, #64]	@ 0x40
 800b14e:	04aa      	lsls	r2, r5, #18
 800b150:	d5ec      	bpl.n	800b12c <awe_modAGCLimiterCoreSet+0x4c>
 800b152:	2001      	movs	r0, #1
 800b154:	eef0 0a48 	vmov.f32	s1, s16
 800b158:	ed94 0a0d 	vldr	s0, [r4, #52]	@ 0x34
 800b15c:	f018 fc20 	bl	80239a0 <design_smoother>
 800b160:	ed84 0a11 	vstr	s0, [r4, #68]	@ 0x44
 800b164:	e7e2      	b.n	800b12c <awe_modAGCLimiterCoreSet+0x4c>
 800b166:	bf00      	nop
 800b168:	42c80000 	.word	0x42c80000

0800b16c <awe_modAGCLimiterCoreBypass>:
 800b16c:	6903      	ldr	r3, [r0, #16]
 800b16e:	6859      	ldr	r1, [r3, #4]
 800b170:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800b174:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b178:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b17c:	68c8      	ldr	r0, [r1, #12]
 800b17e:	fb02 f203 	mul.w	r2, r2, r3
 800b182:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b186:	2101      	movs	r1, #1
 800b188:	f010 b9ec 	b.w	801b564 <awe_vecFill>

0800b18c <awe_modAGCLimiterCoreV2Constructor>:
 800b18c:	b530      	push	{r4, r5, lr}
 800b18e:	b083      	sub	sp, #12
 800b190:	4605      	mov	r5, r0
 800b192:	9806      	ldr	r0, [sp, #24]
 800b194:	e9cd 3000 	strd	r3, r0, [sp]
 800b198:	4613      	mov	r3, r2
 800b19a:	483f      	ldr	r0, [pc, #252]	@ (800b298 <awe_modAGCLimiterCoreV2Constructor+0x10c>)
 800b19c:	460a      	mov	r2, r1
 800b19e:	4629      	mov	r1, r5
 800b1a0:	f014 ffd0 	bl	8020144 <BaseClassModule_Constructor>
 800b1a4:	2800      	cmp	r0, #0
 800b1a6:	d072      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b1a8:	4604      	mov	r4, r0
 800b1aa:	6a00      	ldr	r0, [r0, #32]
 800b1ac:	462a      	mov	r2, r5
 800b1ae:	0080      	lsls	r0, r0, #2
 800b1b0:	f240 2131 	movw	r1, #561	@ 0x231
 800b1b4:	f014 fa72 	bl	801f69c <awe_fwMalloc>
 800b1b8:	6260      	str	r0, [r4, #36]	@ 0x24
 800b1ba:	2800      	cmp	r0, #0
 800b1bc:	d067      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b1be:	6a20      	ldr	r0, [r4, #32]
 800b1c0:	462a      	mov	r2, r5
 800b1c2:	0080      	lsls	r0, r0, #2
 800b1c4:	f240 2131 	movw	r1, #561	@ 0x231
 800b1c8:	f014 fa68 	bl	801f69c <awe_fwMalloc>
 800b1cc:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b1ce:	2800      	cmp	r0, #0
 800b1d0:	d05d      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b1d2:	6a20      	ldr	r0, [r4, #32]
 800b1d4:	462a      	mov	r2, r5
 800b1d6:	0080      	lsls	r0, r0, #2
 800b1d8:	f240 2131 	movw	r1, #561	@ 0x231
 800b1dc:	f014 fa5e 	bl	801f69c <awe_fwMalloc>
 800b1e0:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800b1e2:	2800      	cmp	r0, #0
 800b1e4:	d053      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b1e6:	6a20      	ldr	r0, [r4, #32]
 800b1e8:	462a      	mov	r2, r5
 800b1ea:	0080      	lsls	r0, r0, #2
 800b1ec:	f240 2131 	movw	r1, #561	@ 0x231
 800b1f0:	f014 fa54 	bl	801f69c <awe_fwMalloc>
 800b1f4:	6320      	str	r0, [r4, #48]	@ 0x30
 800b1f6:	2800      	cmp	r0, #0
 800b1f8:	d049      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b1fa:	6a20      	ldr	r0, [r4, #32]
 800b1fc:	462a      	mov	r2, r5
 800b1fe:	0080      	lsls	r0, r0, #2
 800b200:	f240 2131 	movw	r1, #561	@ 0x231
 800b204:	f014 fa4a 	bl	801f69c <awe_fwMalloc>
 800b208:	6360      	str	r0, [r4, #52]	@ 0x34
 800b20a:	2800      	cmp	r0, #0
 800b20c:	d03f      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b20e:	6a20      	ldr	r0, [r4, #32]
 800b210:	462a      	mov	r2, r5
 800b212:	0080      	lsls	r0, r0, #2
 800b214:	f240 2131 	movw	r1, #561	@ 0x231
 800b218:	f014 fa40 	bl	801f69c <awe_fwMalloc>
 800b21c:	63a0      	str	r0, [r4, #56]	@ 0x38
 800b21e:	2800      	cmp	r0, #0
 800b220:	d035      	beq.n	800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b222:	6a20      	ldr	r0, [r4, #32]
 800b224:	462a      	mov	r2, r5
 800b226:	0080      	lsls	r0, r0, #2
 800b228:	f240 2131 	movw	r1, #561	@ 0x231
 800b22c:	f014 fa36 	bl	801f69c <awe_fwMalloc>
 800b230:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800b232:	b360      	cbz	r0, 800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b234:	6a20      	ldr	r0, [r4, #32]
 800b236:	462a      	mov	r2, r5
 800b238:	0080      	lsls	r0, r0, #2
 800b23a:	f240 2131 	movw	r1, #561	@ 0x231
 800b23e:	f014 fa2d 	bl	801f69c <awe_fwMalloc>
 800b242:	6420      	str	r0, [r4, #64]	@ 0x40
 800b244:	b318      	cbz	r0, 800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b246:	6a20      	ldr	r0, [r4, #32]
 800b248:	462a      	mov	r2, r5
 800b24a:	0080      	lsls	r0, r0, #2
 800b24c:	f240 2131 	movw	r1, #561	@ 0x231
 800b250:	f014 fa24 	bl	801f69c <awe_fwMalloc>
 800b254:	6460      	str	r0, [r4, #68]	@ 0x44
 800b256:	b1d0      	cbz	r0, 800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b258:	6a20      	ldr	r0, [r4, #32]
 800b25a:	462a      	mov	r2, r5
 800b25c:	0080      	lsls	r0, r0, #2
 800b25e:	f240 2131 	movw	r1, #561	@ 0x231
 800b262:	f014 fa1b 	bl	801f69c <awe_fwMalloc>
 800b266:	64a0      	str	r0, [r4, #72]	@ 0x48
 800b268:	b188      	cbz	r0, 800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b26a:	6a20      	ldr	r0, [r4, #32]
 800b26c:	462a      	mov	r2, r5
 800b26e:	0080      	lsls	r0, r0, #2
 800b270:	f240 2131 	movw	r1, #561	@ 0x231
 800b274:	f014 fa12 	bl	801f69c <awe_fwMalloc>
 800b278:	64e0      	str	r0, [r4, #76]	@ 0x4c
 800b27a:	b140      	cbz	r0, 800b28e <awe_modAGCLimiterCoreV2Constructor+0x102>
 800b27c:	6a20      	ldr	r0, [r4, #32]
 800b27e:	462a      	mov	r2, r5
 800b280:	0080      	lsls	r0, r0, #2
 800b282:	f240 2131 	movw	r1, #561	@ 0x231
 800b286:	f014 fa09 	bl	801f69c <awe_fwMalloc>
 800b28a:	6520      	str	r0, [r4, #80]	@ 0x50
 800b28c:	b900      	cbnz	r0, 800b290 <awe_modAGCLimiterCoreV2Constructor+0x104>
 800b28e:	2400      	movs	r4, #0
 800b290:	4620      	mov	r0, r4
 800b292:	b003      	add	sp, #12
 800b294:	bd30      	pop	{r4, r5, pc}
 800b296:	bf00      	nop
 800b298:	08033cac 	.word	0x08033cac

0800b29c <awe_modAGCLimiterCoreV2Process>:
 800b29c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b29e:	6903      	ldr	r3, [r0, #16]
 800b2a0:	6a85      	ldr	r5, [r0, #40]	@ 0x28
 800b2a2:	681c      	ldr	r4, [r3, #0]
 800b2a4:	6859      	ldr	r1, [r3, #4]
 800b2a6:	68e6      	ldr	r6, [r4, #12]
 800b2a8:	68c9      	ldr	r1, [r1, #12]
 800b2aa:	e9d3 2702 	ldrd	r2, r7, [r3, #8]
 800b2ae:	b08d      	sub	sp, #52	@ 0x34
 800b2b0:	68fb      	ldr	r3, [r7, #12]
 800b2b2:	6d07      	ldr	r7, [r0, #80]	@ 0x50
 800b2b4:	68d2      	ldr	r2, [r2, #12]
 800b2b6:	970a      	str	r7, [sp, #40]	@ 0x28
 800b2b8:	6c07      	ldr	r7, [r0, #64]	@ 0x40
 800b2ba:	9509      	str	r5, [sp, #36]	@ 0x24
 800b2bc:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800b2be:	9708      	str	r7, [sp, #32]
 800b2c0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800b2c2:	9507      	str	r5, [sp, #28]
 800b2c4:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 800b2c6:	9706      	str	r7, [sp, #24]
 800b2c8:	6c87      	ldr	r7, [r0, #72]	@ 0x48
 800b2ca:	9505      	str	r5, [sp, #20]
 800b2cc:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800b2ce:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800b2d0:	9002      	str	r0, [sp, #8]
 800b2d2:	e9cd 5703 	strd	r5, r7, [sp, #12]
 800b2d6:	6965      	ldr	r5, [r4, #20]
 800b2d8:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800b2dc:	9501      	str	r5, [sp, #4]
 800b2de:	69a4      	ldr	r4, [r4, #24]
 800b2e0:	4630      	mov	r0, r6
 800b2e2:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800b2e6:	9400      	str	r4, [sp, #0]
 800b2e8:	f00e f974 	bl	80195d4 <awe_vecAGCLimiterCore_Nch>
 800b2ec:	b00d      	add	sp, #52	@ 0x34
 800b2ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b2f0 <awe_modAGCLimiterCoreV2Set>:
 800b2f0:	6903      	ldr	r3, [r0, #16]
 800b2f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2f6:	681b      	ldr	r3, [r3, #0]
 800b2f8:	4688      	mov	r8, r1
 800b2fa:	6959      	ldr	r1, [r3, #20]
 800b2fc:	f418 5f80 	tst.w	r8, #4096	@ 0x1000
 800b300:	ed2d 8b02 	vpush	{d8}
 800b304:	4605      	mov	r5, r0
 800b306:	ed93 8a04 	vldr	s16, [r3, #16]
 800b30a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800b30e:	d058      	beq.n	800b3c2 <awe_modAGCLimiterCoreV2Set+0xd2>
 800b310:	2900      	cmp	r1, #0
 800b312:	d05c      	beq.n	800b3ce <awe_modAGCLimiterCoreV2Set+0xde>
 800b314:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800b316:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800b318:	008f      	lsls	r7, r1, #2
 800b31a:	18f8      	adds	r0, r7, r3
 800b31c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b320:	ecf3 6a01 	vldmia	r3!, {s13}
 800b324:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b328:	4298      	cmp	r0, r3
 800b32a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b32e:	ece2 7a01 	vstmia	r2!, {s15}
 800b332:	d1f5      	bne.n	800b320 <awe_modAGCLimiterCoreV2Set+0x30>
 800b334:	f418 6f00 	tst.w	r8, #2048	@ 0x800
 800b338:	d016      	beq.n	800b368 <awe_modAGCLimiterCoreV2Set+0x78>
 800b33a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b33c:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 800b33e:	4c2e      	ldr	r4, [pc, #184]	@ (800b3f8 <awe_modAGCLimiterCoreV2Set+0x108>)
 800b340:	18f8      	adds	r0, r7, r3
 800b342:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800b346:	ecf3 7a01 	vldmia	r3!, {s15}
 800b34a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800b34e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b352:	bf14      	ite	ne
 800b354:	ee86 7aa7 	vdivne.f32	s14, s13, s15
 800b358:	6014      	streq	r4, [r2, #0]
 800b35a:	f102 0204 	add.w	r2, r2, #4
 800b35e:	bf18      	it	ne
 800b360:	ed02 7a01 	vstrne	s14, [r2, #-4]
 800b364:	4298      	cmp	r0, r3
 800b366:	d1ee      	bne.n	800b346 <awe_modAGCLimiterCoreV2Set+0x56>
 800b368:	f418 5f00 	tst.w	r8, #8192	@ 0x2000
 800b36c:	d035      	beq.n	800b3da <awe_modAGCLimiterCoreV2Set+0xea>
 800b36e:	2400      	movs	r4, #0
 800b370:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 800b372:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 800b374:	4422      	add	r2, r4
 800b376:	ed92 0a00 	vldr	s0, [r2]
 800b37a:	2001      	movs	r0, #1
 800b37c:	eef0 0a48 	vmov.f32	s1, s16
 800b380:	191e      	adds	r6, r3, r4
 800b382:	f018 fb0d 	bl	80239a0 <design_smoother>
 800b386:	3404      	adds	r4, #4
 800b388:	42a7      	cmp	r7, r4
 800b38a:	ed86 0a00 	vstr	s0, [r6]
 800b38e:	d1ef      	bne.n	800b370 <awe_modAGCLimiterCoreV2Set+0x80>
 800b390:	f418 4f80 	tst.w	r8, #16384	@ 0x4000
 800b394:	d010      	beq.n	800b3b8 <awe_modAGCLimiterCoreV2Set+0xc8>
 800b396:	2400      	movs	r4, #0
 800b398:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 800b39a:	6cab      	ldr	r3, [r5, #72]	@ 0x48
 800b39c:	4422      	add	r2, r4
 800b39e:	ed92 0a00 	vldr	s0, [r2]
 800b3a2:	2001      	movs	r0, #1
 800b3a4:	eef0 0a48 	vmov.f32	s1, s16
 800b3a8:	191e      	adds	r6, r3, r4
 800b3aa:	f018 faf9 	bl	80239a0 <design_smoother>
 800b3ae:	3404      	adds	r4, #4
 800b3b0:	42a7      	cmp	r7, r4
 800b3b2:	ed86 0a00 	vstr	s0, [r6]
 800b3b6:	d1ef      	bne.n	800b398 <awe_modAGCLimiterCoreV2Set+0xa8>
 800b3b8:	ecbd 8b02 	vpop	{d8}
 800b3bc:	2000      	movs	r0, #0
 800b3be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3c2:	f418 6f00 	tst.w	r8, #2048	@ 0x800
 800b3c6:	d005      	beq.n	800b3d4 <awe_modAGCLimiterCoreV2Set+0xe4>
 800b3c8:	b191      	cbz	r1, 800b3f0 <awe_modAGCLimiterCoreV2Set+0x100>
 800b3ca:	008f      	lsls	r7, r1, #2
 800b3cc:	e7b5      	b.n	800b33a <awe_modAGCLimiterCoreV2Set+0x4a>
 800b3ce:	f418 6f00 	tst.w	r8, #2048	@ 0x800
 800b3d2:	d10d      	bne.n	800b3f0 <awe_modAGCLimiterCoreV2Set+0x100>
 800b3d4:	f418 5f00 	tst.w	r8, #8192	@ 0x2000
 800b3d8:	d106      	bne.n	800b3e8 <awe_modAGCLimiterCoreV2Set+0xf8>
 800b3da:	f418 4f80 	tst.w	r8, #16384	@ 0x4000
 800b3de:	d0eb      	beq.n	800b3b8 <awe_modAGCLimiterCoreV2Set+0xc8>
 800b3e0:	2900      	cmp	r1, #0
 800b3e2:	d0e9      	beq.n	800b3b8 <awe_modAGCLimiterCoreV2Set+0xc8>
 800b3e4:	008f      	lsls	r7, r1, #2
 800b3e6:	e7d6      	b.n	800b396 <awe_modAGCLimiterCoreV2Set+0xa6>
 800b3e8:	2900      	cmp	r1, #0
 800b3ea:	d0e5      	beq.n	800b3b8 <awe_modAGCLimiterCoreV2Set+0xc8>
 800b3ec:	008f      	lsls	r7, r1, #2
 800b3ee:	e7be      	b.n	800b36e <awe_modAGCLimiterCoreV2Set+0x7e>
 800b3f0:	f418 5f00 	tst.w	r8, #8192	@ 0x2000
 800b3f4:	d0f1      	beq.n	800b3da <awe_modAGCLimiterCoreV2Set+0xea>
 800b3f6:	e7df      	b.n	800b3b8 <awe_modAGCLimiterCoreV2Set+0xc8>
 800b3f8:	42c80000 	.word	0x42c80000

0800b3fc <awe_modAGCLimiterCoreV2Bypass>:
 800b3fc:	6903      	ldr	r3, [r0, #16]
 800b3fe:	6859      	ldr	r1, [r3, #4]
 800b400:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800b404:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b408:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b40c:	68c8      	ldr	r0, [r1, #12]
 800b40e:	fb02 f203 	mul.w	r2, r2, r3
 800b412:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b416:	2101      	movs	r1, #1
 800b418:	f010 b8a4 	b.w	801b564 <awe_vecFill>

0800b41c <awe_modAGCNoiseGateCoreBypass>:
 800b41c:	6903      	ldr	r3, [r0, #16]
 800b41e:	6859      	ldr	r1, [r3, #4]
 800b420:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800b424:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b428:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b42c:	68c8      	ldr	r0, [r1, #12]
 800b42e:	fb02 f203 	mul.w	r2, r2, r3
 800b432:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b436:	2101      	movs	r1, #1
 800b438:	f010 b894 	b.w	801b564 <awe_vecFill>

0800b43c <awe_modAGCNoiseGateCoreProcess>:
 800b43c:	6902      	ldr	r2, [r0, #16]
 800b43e:	e9d2 3200 	ldrd	r3, r2, [r2]
 800b442:	b570      	push	{r4, r5, r6, lr}
 800b444:	e9d3 1505 	ldrd	r1, r5, [r3, #20]
 800b448:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800b44c:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800b450:	4604      	mov	r4, r0
 800b452:	b082      	sub	sp, #8
 800b454:	68d8      	ldr	r0, [r3, #12]
 800b456:	68d6      	ldr	r6, [r2, #12]
 800b458:	fb05 f101 	mul.w	r1, r5, r1
 800b45c:	f013 fdcc 	bl	801eff8 <awe_vecSumSquared>
 800b460:	edd4 7a16 	vldr	s15, [r4, #88]	@ 0x58
 800b464:	ed94 7a15 	vldr	s14, [r4, #84]	@ 0x54
 800b468:	ed94 6a0e 	vldr	s12, [r4, #56]	@ 0x38
 800b46c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800b470:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b474:	eeb4 7ac0 	vcmpe.f32	s14, s0
 800b478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b47c:	bf4c      	ite	mi
 800b47e:	edd4 6a10 	vldrmi	s13, [r4, #64]	@ 0x40
 800b482:	edd4 6a11 	vldrpl	s13, [r4, #68]	@ 0x44
 800b486:	ee26 0a80 	vmul.f32	s0, s13, s0
 800b48a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b48e:	eea7 0a27 	vfma.f32	s0, s14, s15
 800b492:	eeb4 0ac6 	vcmpe.f32	s0, s12
 800b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b49a:	ed84 0a15 	vstr	s0, [r4, #84]	@ 0x54
 800b49e:	d503      	bpl.n	800b4a8 <awe_modAGCNoiseGateCoreProcess+0x6c>
 800b4a0:	2200      	movs	r2, #0
 800b4a2:	2301      	movs	r3, #1
 800b4a4:	64e2      	str	r2, [r4, #76]	@ 0x4c
 800b4a6:	6363      	str	r3, [r4, #52]	@ 0x34
 800b4a8:	edd4 7a0f 	vldr	s15, [r4, #60]	@ 0x3c
 800b4ac:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b4b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4b4:	dd04      	ble.n	800b4c0 <awe_modAGCNoiseGateCoreProcess+0x84>
 800b4b6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800b4ba:	2300      	movs	r3, #0
 800b4bc:	64e2      	str	r2, [r4, #76]	@ 0x4c
 800b4be:	6363      	str	r3, [r4, #52]	@ 0x34
 800b4c0:	462a      	mov	r2, r5
 800b4c2:	4630      	mov	r0, r6
 800b4c4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b4c8:	2101      	movs	r1, #1
 800b4ca:	f010 f84b 	bl	801b564 <awe_vecFill>
 800b4ce:	3450      	adds	r4, #80	@ 0x50
 800b4d0:	ed54 0a02 	vldr	s1, [r4, #-8]
 800b4d4:	ed14 0a01 	vldr	s0, [r4, #-4]
 800b4d8:	9501      	str	r5, [sp, #4]
 800b4da:	2301      	movs	r3, #1
 800b4dc:	9400      	str	r4, [sp, #0]
 800b4de:	4619      	mov	r1, r3
 800b4e0:	4632      	mov	r2, r6
 800b4e2:	4630      	mov	r0, r6
 800b4e4:	f012 fc3a 	bl	801dd5c <awe_vecScaleSmooth>
 800b4e8:	b002      	add	sp, #8
 800b4ea:	bd70      	pop	{r4, r5, r6, pc}

0800b4ec <awe_modAGCNoiseGateCoreSet>:
 800b4ec:	b909      	cbnz	r1, 800b4f2 <awe_modAGCNoiseGateCoreSet+0x6>
 800b4ee:	2000      	movs	r0, #0
 800b4f0:	4770      	bx	lr
 800b4f2:	b570      	push	{r4, r5, r6, lr}
 800b4f4:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 800b4f8:	ed90 0a08 	vldr	s0, [r0, #32]
 800b4fc:	6903      	ldr	r3, [r0, #16]
 800b4fe:	ed2d 8b02 	vpush	{d8}
 800b502:	ee30 0a67 	vsub.f32	s0, s0, s15
 800b506:	eddf 8a24 	vldr	s17, [pc, #144]	@ 800b598 <awe_modAGCNoiseGateCoreSet+0xac>
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	ee20 0a28 	vmul.f32	s0, s0, s17
 800b510:	4604      	mov	r4, r0
 800b512:	ed93 8a04 	vldr	s16, [r3, #16]
 800b516:	699d      	ldr	r5, [r3, #24]
 800b518:	695e      	ldr	r6, [r3, #20]
 800b51a:	f023 f96f 	bl	802e7fc <expf>
 800b51e:	edd4 7a08 	vldr	s15, [r4, #32]
 800b522:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 800b526:	ed84 0a0e 	vstr	s0, [r4, #56]	@ 0x38
 800b52a:	ee37 0a87 	vadd.f32	s0, s15, s14
 800b52e:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800b532:	ee20 0a28 	vmul.f32	s0, s0, s17
 800b536:	f023 f961 	bl	802e7fc <expf>
 800b53a:	4628      	mov	r0, r5
 800b53c:	eef0 0a48 	vmov.f32	s1, s16
 800b540:	ed84 0a0f 	vstr	s0, [r4, #60]	@ 0x3c
 800b544:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 800b548:	f018 fa2a 	bl	80239a0 <design_smoother>
 800b54c:	4628      	mov	r0, r5
 800b54e:	eef0 0a48 	vmov.f32	s1, s16
 800b552:	ed84 0a10 	vstr	s0, [r4, #64]	@ 0x40
 800b556:	ed94 0a0b 	vldr	s0, [r4, #44]	@ 0x2c
 800b55a:	f018 fa21 	bl	80239a0 <design_smoother>
 800b55e:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800b562:	eef0 0a48 	vmov.f32	s1, s16
 800b566:	ed84 0a11 	vstr	s0, [r4, #68]	@ 0x44
 800b56a:	2001      	movs	r0, #1
 800b56c:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 800b570:	fb05 f506 	mul.w	r5, r5, r6
 800b574:	f018 fa14 	bl	80239a0 <design_smoother>
 800b578:	ee07 5a90 	vmov	s15, r5
 800b57c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b580:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800b584:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800b588:	ecbd 8b02 	vpop	{d8}
 800b58c:	2000      	movs	r0, #0
 800b58e:	ed84 0a12 	vstr	s0, [r4, #72]	@ 0x48
 800b592:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 800b596:	bd70      	pop	{r4, r5, r6, pc}
 800b598:	3e6bc8e3 	.word	0x3e6bc8e3

0800b59c <awe_modAsinProcess>:
 800b59c:	6903      	ldr	r3, [r0, #16]
 800b59e:	e9d3 0200 	ldrd	r0, r2, [r3]
 800b5a2:	b500      	push	{lr}
 800b5a4:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800b5a8:	b083      	sub	sp, #12
 800b5aa:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b5ae:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800b5b2:	fb01 f103 	mul.w	r1, r1, r3
 800b5b6:	2301      	movs	r3, #1
 800b5b8:	68d2      	ldr	r2, [r2, #12]
 800b5ba:	68c0      	ldr	r0, [r0, #12]
 800b5bc:	9100      	str	r1, [sp, #0]
 800b5be:	4619      	mov	r1, r3
 800b5c0:	f00e f8b8 	bl	8019734 <awe_vecAsin>
 800b5c4:	b003      	add	sp, #12
 800b5c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b5ca:	bf00      	nop

0800b5cc <awe_modAtanProcess>:
 800b5cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5ce:	6903      	ldr	r3, [r0, #16]
 800b5d0:	e9d3 2100 	ldrd	r2, r1, [r3]
 800b5d4:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800b5d8:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b5dc:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800b5e0:	fb07 f703 	mul.w	r7, r7, r3
 800b5e4:	68ce      	ldr	r6, [r1, #12]
 800b5e6:	68d5      	ldr	r5, [r2, #12]
 800b5e8:	b14f      	cbz	r7, 800b5fe <awe_modAtanProcess+0x32>
 800b5ea:	2400      	movs	r4, #0
 800b5ec:	ecb5 0a01 	vldmia	r5!, {s0}
 800b5f0:	f023 fa28 	bl	802ea44 <atanf>
 800b5f4:	3401      	adds	r4, #1
 800b5f6:	42a7      	cmp	r7, r4
 800b5f8:	eca6 0a01 	vstmia	r6!, {s0}
 800b5fc:	d1f6      	bne.n	800b5ec <awe_modAtanProcess+0x20>
 800b5fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b600 <awe_modAtan2Process>:
 800b600:	6900      	ldr	r0, [r0, #16]
 800b602:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b606:	e9d0 1400 	ldrd	r1, r4, [r0]
 800b60a:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 800b60e:	6880      	ldr	r0, [r0, #8]
 800b610:	68cd      	ldr	r5, [r1, #12]
 800b612:	68e6      	ldr	r6, [r4, #12]
 800b614:	68c7      	ldr	r7, [r0, #12]
 800b616:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800b61a:	f3c3 0809 	ubfx	r8, r3, #0, #10
 800b61e:	fb08 f802 	mul.w	r8, r8, r2
 800b622:	f1b8 0f00 	cmp.w	r8, #0
 800b626:	d00b      	beq.n	800b640 <awe_modAtan2Process+0x40>
 800b628:	2400      	movs	r4, #0
 800b62a:	ecf6 0a01 	vldmia	r6!, {s1}
 800b62e:	ecb5 0a01 	vldmia	r5!, {s0}
 800b632:	f023 f8b9 	bl	802e7a8 <atan2f>
 800b636:	3401      	adds	r4, #1
 800b638:	45a0      	cmp	r8, r4
 800b63a:	eca7 0a01 	vstmia	r7!, {s0}
 800b63e:	d1f4      	bne.n	800b62a <awe_modAtan2Process+0x2a>
 800b640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b644 <awe_modBalanceProcess>:
 800b644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b648:	6905      	ldr	r5, [r0, #16]
 800b64a:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 800b64e:	682b      	ldr	r3, [r5, #0]
 800b650:	68a9      	ldr	r1, [r5, #8]
 800b652:	686f      	ldr	r7, [r5, #4]
 800b654:	68c9      	ldr	r1, [r1, #12]
 800b656:	68ff      	ldr	r7, [r7, #12]
 800b658:	ed2d 8b02 	vpush	{d8}
 800b65c:	e9d3 2605 	ldrd	r2, r6, [r3, #20]
 800b660:	b082      	sub	sp, #8
 800b662:	ed90 8a0c 	vldr	s16, [r0, #48]	@ 0x30
 800b666:	4604      	mov	r4, r0
 800b668:	68d8      	ldr	r0, [r3, #12]
 800b66a:	68eb      	ldr	r3, [r5, #12]
 800b66c:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800b670:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800b674:	9600      	str	r6, [sp, #0]
 800b676:	eef0 0a48 	vmov.f32	s1, s16
 800b67a:	f104 0328 	add.w	r3, r4, #40	@ 0x28
 800b67e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b682:	f012 fd4b 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800b686:	686b      	ldr	r3, [r5, #4]
 800b688:	ed94 0a0e 	vldr	s0, [r4, #56]	@ 0x38
 800b68c:	695a      	ldr	r2, [r3, #20]
 800b68e:	9600      	str	r6, [sp, #0]
 800b690:	4641      	mov	r1, r8
 800b692:	4638      	mov	r0, r7
 800b694:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b698:	eef0 0a48 	vmov.f32	s1, s16
 800b69c:	f104 032c 	add.w	r3, r4, #44	@ 0x2c
 800b6a0:	f012 fd3c 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800b6a4:	b002      	add	sp, #8
 800b6a6:	ecbd 8b02 	vpop	{d8}
 800b6aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6ae:	bf00      	nop

0800b6b0 <awe_modBalanceSet>:
 800b6b0:	b909      	cbnz	r1, 800b6b6 <awe_modBalanceSet+0x6>
 800b6b2:	2000      	movs	r0, #0
 800b6b4:	4770      	bx	lr
 800b6b6:	b510      	push	{r4, lr}
 800b6b8:	6903      	ldr	r3, [r0, #16]
 800b6ba:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800b6be:	681b      	ldr	r3, [r3, #0]
 800b6c0:	ed2d 8b02 	vpush	{d8}
 800b6c4:	4604      	mov	r4, r0
 800b6c6:	edd3 0a04 	vldr	s1, [r3, #16]
 800b6ca:	ed9f 8a0f 	vldr	s16, [pc, #60]	@ 800b708 <awe_modBalanceSet+0x58>
 800b6ce:	2001      	movs	r0, #1
 800b6d0:	f018 f966 	bl	80239a0 <design_smoother>
 800b6d4:	edd4 7a08 	vldr	s15, [r4, #32]
 800b6d8:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 800b6dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b6e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b6e4:	ee27 8a88 	vmul.f32	s16, s15, s16
 800b6e8:	eeb0 0a48 	vmov.f32	s0, s16
 800b6ec:	f023 fa7e 	bl	802ebec <cosf>
 800b6f0:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 800b6f4:	eeb0 0a48 	vmov.f32	s0, s16
 800b6f8:	f023 fac4 	bl	802ec84 <sinf>
 800b6fc:	ecbd 8b02 	vpop	{d8}
 800b700:	2000      	movs	r0, #0
 800b702:	ed84 0a0e 	vstr	s0, [r4, #56]	@ 0x38
 800b706:	bd10      	pop	{r4, pc}
 800b708:	3f490fdb 	.word	0x3f490fdb

0800b70c <awe_modBiquadConstructor>:
 800b70c:	b570      	push	{r4, r5, r6, lr}
 800b70e:	b082      	sub	sp, #8
 800b710:	4616      	mov	r6, r2
 800b712:	4605      	mov	r5, r0
 800b714:	9806      	ldr	r0, [sp, #24]
 800b716:	9300      	str	r3, [sp, #0]
 800b718:	460a      	mov	r2, r1
 800b71a:	9001      	str	r0, [sp, #4]
 800b71c:	4633      	mov	r3, r6
 800b71e:	4629      	mov	r1, r5
 800b720:	480b      	ldr	r0, [pc, #44]	@ (800b750 <awe_modBiquadConstructor+0x44>)
 800b722:	f014 fd0f 	bl	8020144 <BaseClassModule_Constructor>
 800b726:	b178      	cbz	r0, 800b748 <awe_modBiquadConstructor+0x3c>
 800b728:	6833      	ldr	r3, [r6, #0]
 800b72a:	4604      	mov	r4, r0
 800b72c:	6958      	ldr	r0, [r3, #20]
 800b72e:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800b732:	00c0      	lsls	r0, r0, #3
 800b734:	462a      	mov	r2, r5
 800b736:	f240 2131 	movw	r1, #561	@ 0x231
 800b73a:	f013 ffaf 	bl	801f69c <awe_fwMalloc>
 800b73e:	6360      	str	r0, [r4, #52]	@ 0x34
 800b740:	b110      	cbz	r0, 800b748 <awe_modBiquadConstructor+0x3c>
 800b742:	4620      	mov	r0, r4
 800b744:	b002      	add	sp, #8
 800b746:	bd70      	pop	{r4, r5, r6, pc}
 800b748:	2400      	movs	r4, #0
 800b74a:	4620      	mov	r0, r4
 800b74c:	b002      	add	sp, #8
 800b74e:	bd70      	pop	{r4, r5, r6, pc}
 800b750:	08033d9c 	.word	0x08033d9c

0800b754 <awe_modBiquadProcess>:
 800b754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b758:	6906      	ldr	r6, [r0, #16]
 800b75a:	6832      	ldr	r2, [r6, #0]
 800b75c:	e9d2 b305 	ldrd	fp, r3, [r2, #20]
 800b760:	f3cb 0509 	ubfx	r5, fp, #0, #10
 800b764:	ea5f 09e5 	movs.w	r9, r5, asr #3
 800b768:	b085      	sub	sp, #20
 800b76a:	4607      	mov	r7, r0
 800b76c:	f3c3 0810 	ubfx	r8, r3, #0, #17
 800b770:	d019      	beq.n	800b7a6 <awe_modBiquadProcess+0x52>
 800b772:	ea4f 1949 	mov.w	r9, r9, lsl #5
 800b776:	f100 0a20 	add.w	sl, r0, #32
 800b77a:	2400      	movs	r4, #0
 800b77c:	e000      	b.n	800b780 <awe_modBiquadProcess+0x2c>
 800b77e:	6832      	ldr	r2, [r6, #0]
 800b780:	6871      	ldr	r1, [r6, #4]
 800b782:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b784:	68d0      	ldr	r0, [r2, #12]
 800b786:	68ca      	ldr	r2, [r1, #12]
 800b788:	f8cd 8008 	str.w	r8, [sp, #8]
 800b78c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 800b790:	4420      	add	r0, r4
 800b792:	4422      	add	r2, r4
 800b794:	e9cd a300 	strd	sl, r3, [sp]
 800b798:	3420      	adds	r4, #32
 800b79a:	462b      	mov	r3, r5
 800b79c:	4629      	mov	r1, r5
 800b79e:	f00e fc2f 	bl	801a000 <awe_vecBiquad_8ch>
 800b7a2:	454c      	cmp	r4, r9
 800b7a4:	d1eb      	bne.n	800b77e <awe_modBiquadProcess+0x2a>
 800b7a6:	f3c5 0480 	ubfx	r4, r5, #2, #1
 800b7aa:	f40b 7a7e 	and.w	sl, fp, #1016	@ 0x3f8
 800b7ae:	b174      	cbz	r4, 800b7ce <awe_modBiquadProcess+0x7a>
 800b7b0:	e9d6 3200 	ldrd	r3, r2, [r6]
 800b7b4:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800b7b6:	68d8      	ldr	r0, [r3, #12]
 800b7b8:	68d2      	ldr	r2, [r2, #12]
 800b7ba:	f8cd 8008 	str.w	r8, [sp, #8]
 800b7be:	f107 0320 	add.w	r3, r7, #32
 800b7c2:	e9cd 3100 	strd	r3, r1, [sp]
 800b7c6:	462b      	mov	r3, r5
 800b7c8:	4629      	mov	r1, r5
 800b7ca:	f00e fbfb 	bl	8019fc4 <awe_vecBiquad_4ch>
 800b7ce:	f3cb 0940 	ubfx	r9, fp, #1, #1
 800b7d2:	eb0a 0484 	add.w	r4, sl, r4, lsl #2
 800b7d6:	f1b9 0f00 	cmp.w	r9, #0
 800b7da:	d014      	beq.n	800b806 <awe_modBiquadProcess+0xb2>
 800b7dc:	e9d6 1200 	ldrd	r1, r2, [r6]
 800b7e0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b7e2:	f8d1 c00c 	ldr.w	ip, [r1, #12]
 800b7e6:	68d2      	ldr	r2, [r2, #12]
 800b7e8:	f8cd 8008 	str.w	r8, [sp, #8]
 800b7ec:	00a0      	lsls	r0, r4, #2
 800b7ee:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800b7f2:	f107 0120 	add.w	r1, r7, #32
 800b7f6:	e9cd 1300 	strd	r1, r3, [sp]
 800b7fa:	4402      	add	r2, r0
 800b7fc:	462b      	mov	r3, r5
 800b7fe:	4460      	add	r0, ip
 800b800:	4629      	mov	r1, r5
 800b802:	f00e fbc1 	bl	8019f88 <awe_vecBiquad_2ch>
 800b806:	f01b 0f01 	tst.w	fp, #1
 800b80a:	d014      	beq.n	800b836 <awe_modBiquadProcess+0xe2>
 800b80c:	e9d6 1200 	ldrd	r1, r2, [r6]
 800b810:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b812:	68c8      	ldr	r0, [r1, #12]
 800b814:	68d2      	ldr	r2, [r2, #12]
 800b816:	f8cd 8008 	str.w	r8, [sp, #8]
 800b81a:	eb04 0449 	add.w	r4, r4, r9, lsl #1
 800b81e:	00a1      	lsls	r1, r4, #2
 800b820:	3720      	adds	r7, #32
 800b822:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800b826:	440a      	add	r2, r1
 800b828:	4408      	add	r0, r1
 800b82a:	9401      	str	r4, [sp, #4]
 800b82c:	9700      	str	r7, [sp, #0]
 800b82e:	462b      	mov	r3, r5
 800b830:	4629      	mov	r1, r5
 800b832:	f00e f93d 	bl	8019ab0 <awe_vecBiquad>
 800b836:	b005      	add	sp, #20
 800b838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b83c <awe_modBiquadCascadeConstructor>:
 800b83c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b83e:	b087      	sub	sp, #28
 800b840:	4616      	mov	r6, r2
 800b842:	4605      	mov	r5, r0
 800b844:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800b846:	9300      	str	r3, [sp, #0]
 800b848:	460a      	mov	r2, r1
 800b84a:	9001      	str	r0, [sp, #4]
 800b84c:	4633      	mov	r3, r6
 800b84e:	4629      	mov	r1, r5
 800b850:	481e      	ldr	r0, [pc, #120]	@ (800b8cc <awe_modBiquadCascadeConstructor+0x90>)
 800b852:	f014 fc77 	bl	8020144 <BaseClassModule_Constructor>
 800b856:	2800      	cmp	r0, #0
 800b858:	d033      	beq.n	800b8c2 <awe_modBiquadCascadeConstructor+0x86>
 800b85a:	4604      	mov	r4, r0
 800b85c:	6a00      	ldr	r0, [r0, #32]
 800b85e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800b862:	0080      	lsls	r0, r0, #2
 800b864:	462a      	mov	r2, r5
 800b866:	f240 2131 	movw	r1, #561	@ 0x231
 800b86a:	f013 ff17 	bl	801f69c <awe_fwMalloc>
 800b86e:	6260      	str	r0, [r4, #36]	@ 0x24
 800b870:	b338      	cbz	r0, 800b8c2 <awe_modBiquadCascadeConstructor+0x86>
 800b872:	6833      	ldr	r3, [r6, #0]
 800b874:	6a20      	ldr	r0, [r4, #32]
 800b876:	695b      	ldr	r3, [r3, #20]
 800b878:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800b87c:	00db      	lsls	r3, r3, #3
 800b87e:	fb00 f003 	mul.w	r0, r0, r3
 800b882:	462a      	mov	r2, r5
 800b884:	f240 2131 	movw	r1, #561	@ 0x231
 800b888:	f013 ff08 	bl	801f69c <awe_fwMalloc>
 800b88c:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b88e:	b1c0      	cbz	r0, 800b8c2 <awe_modBiquadCascadeConstructor+0x86>
 800b890:	e9d6 7200 	ldrd	r7, r2, [r6]
 800b894:	69bb      	ldr	r3, [r7, #24]
 800b896:	68d2      	ldr	r2, [r2, #12]
 800b898:	68f9      	ldr	r1, [r7, #12]
 800b89a:	9504      	str	r5, [sp, #16]
 800b89c:	6a25      	ldr	r5, [r4, #32]
 800b89e:	e9cd 0502 	strd	r0, r5, [sp, #8]
 800b8a2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800b8a4:	9001      	str	r0, [sp, #4]
 800b8a6:	6978      	ldr	r0, [r7, #20]
 800b8a8:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800b8ac:	9000      	str	r0, [sp, #0]
 800b8ae:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b8b2:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 800b8b6:	f00e ffc1 	bl	801a83c <awe_vecBiquadCascadeConstructor>
 800b8ba:	b110      	cbz	r0, 800b8c2 <awe_modBiquadCascadeConstructor+0x86>
 800b8bc:	4620      	mov	r0, r4
 800b8be:	b007      	add	sp, #28
 800b8c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8c2:	2400      	movs	r4, #0
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	b007      	add	sp, #28
 800b8c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8ca:	bf00      	nop
 800b8cc:	08033dc4 	.word	0x08033dc4

0800b8d0 <awe_modBiquadCascadeProcess>:
 800b8d0:	b570      	push	{r4, r5, r6, lr}
 800b8d2:	6903      	ldr	r3, [r0, #16]
 800b8d4:	6a05      	ldr	r5, [r0, #32]
 800b8d6:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 800b8d8:	e9d3 4300 	ldrd	r4, r3, [r3]
 800b8dc:	b084      	sub	sp, #16
 800b8de:	68da      	ldr	r2, [r3, #12]
 800b8e0:	68e1      	ldr	r1, [r4, #12]
 800b8e2:	69a3      	ldr	r3, [r4, #24]
 800b8e4:	9503      	str	r5, [sp, #12]
 800b8e6:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 800b8e8:	e9cd 5601 	strd	r5, r6, [sp, #4]
 800b8ec:	6964      	ldr	r4, [r4, #20]
 800b8ee:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800b8f0:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800b8f4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b8f8:	9400      	str	r4, [sp, #0]
 800b8fa:	f00e ffa3 	bl	801a844 <awe_vecBiquadCascadeProcess>
 800b8fe:	b004      	add	sp, #16
 800b900:	bd70      	pop	{r4, r5, r6, pc}
 800b902:	bf00      	nop

0800b904 <awe_modBiquadCascadeSet>:
 800b904:	b570      	push	{r4, r5, r6, lr}
 800b906:	6902      	ldr	r2, [r0, #16]
 800b908:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800b90a:	6811      	ldr	r1, [r2, #0]
 800b90c:	6a06      	ldr	r6, [r0, #32]
 800b90e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b910:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800b912:	e9d1 2105 	ldrd	r2, r1, [r1, #20]
 800b916:	b082      	sub	sp, #8
 800b918:	4628      	mov	r0, r5
 800b91a:	9601      	str	r6, [sp, #4]
 800b91c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800b920:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800b924:	9400      	str	r4, [sp, #0]
 800b926:	f00e ff8b 	bl	801a840 <awe_vecBiquadCascadeSet>
 800b92a:	2000      	movs	r0, #0
 800b92c:	b002      	add	sp, #8
 800b92e:	bd70      	pop	{r4, r5, r6, pc}

0800b930 <awe_modBiquadNCascadeConstructor>:
 800b930:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b932:	b087      	sub	sp, #28
 800b934:	4615      	mov	r5, r2
 800b936:	4606      	mov	r6, r0
 800b938:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800b93a:	9300      	str	r3, [sp, #0]
 800b93c:	460a      	mov	r2, r1
 800b93e:	9001      	str	r0, [sp, #4]
 800b940:	462b      	mov	r3, r5
 800b942:	4631      	mov	r1, r6
 800b944:	4821      	ldr	r0, [pc, #132]	@ (800b9cc <awe_modBiquadNCascadeConstructor+0x9c>)
 800b946:	f014 fbfd 	bl	8020144 <BaseClassModule_Constructor>
 800b94a:	2800      	cmp	r0, #0
 800b94c:	d039      	beq.n	800b9c2 <awe_modBiquadNCascadeConstructor+0x92>
 800b94e:	682b      	ldr	r3, [r5, #0]
 800b950:	695b      	ldr	r3, [r3, #20]
 800b952:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800b956:	4604      	mov	r4, r0
 800b958:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b95c:	6a00      	ldr	r0, [r0, #32]
 800b95e:	009b      	lsls	r3, r3, #2
 800b960:	fb00 f003 	mul.w	r0, r0, r3
 800b964:	4632      	mov	r2, r6
 800b966:	f240 2131 	movw	r1, #561	@ 0x231
 800b96a:	f013 fe97 	bl	801f69c <awe_fwMalloc>
 800b96e:	6260      	str	r0, [r4, #36]	@ 0x24
 800b970:	b338      	cbz	r0, 800b9c2 <awe_modBiquadNCascadeConstructor+0x92>
 800b972:	682b      	ldr	r3, [r5, #0]
 800b974:	6a20      	ldr	r0, [r4, #32]
 800b976:	695b      	ldr	r3, [r3, #20]
 800b978:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800b97c:	00db      	lsls	r3, r3, #3
 800b97e:	fb00 f003 	mul.w	r0, r0, r3
 800b982:	4632      	mov	r2, r6
 800b984:	f240 2131 	movw	r1, #561	@ 0x231
 800b988:	f013 fe88 	bl	801f69c <awe_fwMalloc>
 800b98c:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b98e:	b1c0      	cbz	r0, 800b9c2 <awe_modBiquadNCascadeConstructor+0x92>
 800b990:	e9d5 7200 	ldrd	r7, r2, [r5]
 800b994:	69bb      	ldr	r3, [r7, #24]
 800b996:	68d2      	ldr	r2, [r2, #12]
 800b998:	68f9      	ldr	r1, [r7, #12]
 800b99a:	9604      	str	r6, [sp, #16]
 800b99c:	6a25      	ldr	r5, [r4, #32]
 800b99e:	e9cd 0502 	strd	r0, r5, [sp, #8]
 800b9a2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800b9a4:	9001      	str	r0, [sp, #4]
 800b9a6:	6978      	ldr	r0, [r7, #20]
 800b9a8:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800b9ac:	9000      	str	r0, [sp, #0]
 800b9ae:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b9b2:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 800b9b6:	f00f f81b 	bl	801a9f0 <awe_vecBiquadNCascadeConstructor>
 800b9ba:	b110      	cbz	r0, 800b9c2 <awe_modBiquadNCascadeConstructor+0x92>
 800b9bc:	4620      	mov	r0, r4
 800b9be:	b007      	add	sp, #28
 800b9c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9c2:	2400      	movs	r4, #0
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	b007      	add	sp, #28
 800b9c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9ca:	bf00      	nop
 800b9cc:	08033dec 	.word	0x08033dec

0800b9d0 <awe_modBiquadNCascadeProcess>:
 800b9d0:	b570      	push	{r4, r5, r6, lr}
 800b9d2:	6903      	ldr	r3, [r0, #16]
 800b9d4:	6a05      	ldr	r5, [r0, #32]
 800b9d6:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 800b9d8:	e9d3 4300 	ldrd	r4, r3, [r3]
 800b9dc:	b084      	sub	sp, #16
 800b9de:	68da      	ldr	r2, [r3, #12]
 800b9e0:	68e1      	ldr	r1, [r4, #12]
 800b9e2:	69a3      	ldr	r3, [r4, #24]
 800b9e4:	9503      	str	r5, [sp, #12]
 800b9e6:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 800b9e8:	e9cd 5601 	strd	r5, r6, [sp, #4]
 800b9ec:	6964      	ldr	r4, [r4, #20]
 800b9ee:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800b9f0:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800b9f4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800b9f8:	9400      	str	r4, [sp, #0]
 800b9fa:	f00e fffd 	bl	801a9f8 <awe_vecBiquadNCascadeProcess>
 800b9fe:	b004      	add	sp, #16
 800ba00:	bd70      	pop	{r4, r5, r6, pc}
 800ba02:	bf00      	nop

0800ba04 <awe_modBiquadNCascadeSet>:
 800ba04:	b570      	push	{r4, r5, r6, lr}
 800ba06:	6902      	ldr	r2, [r0, #16]
 800ba08:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800ba0a:	6811      	ldr	r1, [r2, #0]
 800ba0c:	6a06      	ldr	r6, [r0, #32]
 800ba0e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ba10:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ba12:	e9d1 2105 	ldrd	r2, r1, [r1, #20]
 800ba16:	b082      	sub	sp, #8
 800ba18:	4628      	mov	r0, r5
 800ba1a:	9601      	str	r6, [sp, #4]
 800ba1c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800ba20:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800ba24:	9400      	str	r4, [sp, #0]
 800ba26:	f00e ffe5 	bl	801a9f4 <awe_vecBiquadNCascadeSet>
 800ba2a:	2000      	movs	r0, #0
 800ba2c:	b002      	add	sp, #8
 800ba2e:	bd70      	pop	{r4, r5, r6, pc}

0800ba30 <awe_modBiquadSmoothedConstructor>:
 800ba30:	b570      	push	{r4, r5, r6, lr}
 800ba32:	b082      	sub	sp, #8
 800ba34:	4616      	mov	r6, r2
 800ba36:	4605      	mov	r5, r0
 800ba38:	9806      	ldr	r0, [sp, #24]
 800ba3a:	9300      	str	r3, [sp, #0]
 800ba3c:	460a      	mov	r2, r1
 800ba3e:	9001      	str	r0, [sp, #4]
 800ba40:	4633      	mov	r3, r6
 800ba42:	4629      	mov	r1, r5
 800ba44:	480b      	ldr	r0, [pc, #44]	@ (800ba74 <awe_modBiquadSmoothedConstructor+0x44>)
 800ba46:	f014 fb7d 	bl	8020144 <BaseClassModule_Constructor>
 800ba4a:	b178      	cbz	r0, 800ba6c <awe_modBiquadSmoothedConstructor+0x3c>
 800ba4c:	6833      	ldr	r3, [r6, #0]
 800ba4e:	4604      	mov	r4, r0
 800ba50:	6958      	ldr	r0, [r3, #20]
 800ba52:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ba56:	00c0      	lsls	r0, r0, #3
 800ba58:	462a      	mov	r2, r5
 800ba5a:	f240 2131 	movw	r1, #561	@ 0x231
 800ba5e:	f013 fe1d 	bl	801f69c <awe_fwMalloc>
 800ba62:	6560      	str	r0, [r4, #84]	@ 0x54
 800ba64:	b110      	cbz	r0, 800ba6c <awe_modBiquadSmoothedConstructor+0x3c>
 800ba66:	4620      	mov	r0, r4
 800ba68:	b002      	add	sp, #8
 800ba6a:	bd70      	pop	{r4, r5, r6, pc}
 800ba6c:	2400      	movs	r4, #0
 800ba6e:	4620      	mov	r0, r4
 800ba70:	b002      	add	sp, #8
 800ba72:	bd70      	pop	{r4, r5, r6, pc}
 800ba74:	08033e14 	.word	0x08033e14

0800ba78 <awe_modBiquadSmoothedProcess>:
 800ba78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba7c:	6906      	ldr	r6, [r0, #16]
 800ba7e:	6a03      	ldr	r3, [r0, #32]
 800ba80:	6832      	ldr	r2, [r6, #0]
 800ba82:	e9d2 5105 	ldrd	r5, r1, [r2, #20]
 800ba86:	b087      	sub	sp, #28
 800ba88:	4607      	mov	r7, r0
 800ba8a:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800ba8e:	f3c1 0910 	ubfx	r9, r1, #0, #17
 800ba92:	2b00      	cmp	r3, #0
 800ba94:	d06b      	beq.n	800bb6e <awe_modBiquadSmoothedProcess+0xf6>
 800ba96:	edd0 7a0f 	vldr	s15, [r0, #60]	@ 0x3c
 800ba9a:	edd0 6a0a 	vldr	s13, [r0, #40]	@ 0x28
 800ba9e:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 800baa2:	eef4 6a67 	vcmp.f32	s13, s15
 800baa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800baaa:	d00e      	beq.n	800baca <awe_modBiquadSmoothedProcess+0x52>
 800baac:	ee36 6ae7 	vsub.f32	s12, s13, s15
 800bab0:	eef0 5a67 	vmov.f32	s11, s15
 800bab4:	eee7 5a06 	vfma.f32	s11, s14, s12
 800bab8:	eef4 5a67 	vcmp.f32	s11, s15
 800babc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bac0:	bf18      	it	ne
 800bac2:	eef0 6a65 	vmovne.f32	s13, s11
 800bac6:	edc0 6a0f 	vstr	s13, [r0, #60]	@ 0x3c
 800baca:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 800bace:	edd7 6a0b 	vldr	s13, [r7, #44]	@ 0x2c
 800bad2:	eef4 6a67 	vcmp.f32	s13, s15
 800bad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bada:	d00e      	beq.n	800bafa <awe_modBiquadSmoothedProcess+0x82>
 800badc:	ee36 6ae7 	vsub.f32	s12, s13, s15
 800bae0:	eef0 5a67 	vmov.f32	s11, s15
 800bae4:	eee7 5a06 	vfma.f32	s11, s14, s12
 800bae8:	eef4 5a67 	vcmp.f32	s11, s15
 800baec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800baf0:	bf18      	it	ne
 800baf2:	eef0 6a65 	vmovne.f32	s13, s11
 800baf6:	edc7 6a10 	vstr	s13, [r7, #64]	@ 0x40
 800bafa:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 800bafe:	edd7 6a0c 	vldr	s13, [r7, #48]	@ 0x30
 800bb02:	eef4 7a66 	vcmp.f32	s15, s13
 800bb06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb0a:	d00e      	beq.n	800bb2a <awe_modBiquadSmoothedProcess+0xb2>
 800bb0c:	ee36 6ae7 	vsub.f32	s12, s13, s15
 800bb10:	eef0 5a67 	vmov.f32	s11, s15
 800bb14:	eee7 5a06 	vfma.f32	s11, s14, s12
 800bb18:	eef4 7a65 	vcmp.f32	s15, s11
 800bb1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb20:	bf18      	it	ne
 800bb22:	eef0 6a65 	vmovne.f32	s13, s11
 800bb26:	edc7 6a11 	vstr	s13, [r7, #68]	@ 0x44
 800bb2a:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 800bb2e:	edd7 6a0d 	vldr	s13, [r7, #52]	@ 0x34
 800bb32:	eef4 7a66 	vcmp.f32	s15, s13
 800bb36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb3a:	d00e      	beq.n	800bb5a <awe_modBiquadSmoothedProcess+0xe2>
 800bb3c:	ee36 6ae7 	vsub.f32	s12, s13, s15
 800bb40:	eef0 5a67 	vmov.f32	s11, s15
 800bb44:	eee7 5a06 	vfma.f32	s11, s14, s12
 800bb48:	eef4 7a65 	vcmp.f32	s15, s11
 800bb4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb50:	bf18      	it	ne
 800bb52:	eef0 6a65 	vmovne.f32	s13, s11
 800bb56:	edc7 6a12 	vstr	s13, [r7, #72]	@ 0x48
 800bb5a:	edd7 7a13 	vldr	s15, [r7, #76]	@ 0x4c
 800bb5e:	edd7 6a0e 	vldr	s13, [r7, #56]	@ 0x38
 800bb62:	eef4 7a66 	vcmp.f32	s15, s13
 800bb66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb6a:	f040 80b7 	bne.w	800bcdc <awe_modBiquadSmoothedProcess+0x264>
 800bb6e:	2d07      	cmp	r5, #7
 800bb70:	f340 80c6 	ble.w	800bd00 <awe_modBiquadSmoothedProcess+0x288>
 800bb74:	f1a5 0408 	sub.w	r4, r5, #8
 800bb78:	08e4      	lsrs	r4, r4, #3
 800bb7a:	3401      	adds	r4, #1
 800bb7c:	f107 0a3c 	add.w	sl, r7, #60	@ 0x3c
 800bb80:	4623      	mov	r3, r4
 800bb82:	ea4f 1b44 	mov.w	fp, r4, lsl #5
 800bb86:	f04f 0800 	mov.w	r8, #0
 800bb8a:	464c      	mov	r4, r9
 800bb8c:	46b9      	mov	r9, r7
 800bb8e:	4657      	mov	r7, sl
 800bb90:	469a      	mov	sl, r3
 800bb92:	e000      	b.n	800bb96 <awe_modBiquadSmoothedProcess+0x11e>
 800bb94:	6832      	ldr	r2, [r6, #0]
 800bb96:	6871      	ldr	r1, [r6, #4]
 800bb98:	f8d9 3054 	ldr.w	r3, [r9, #84]	@ 0x54
 800bb9c:	68d0      	ldr	r0, [r2, #12]
 800bb9e:	68ca      	ldr	r2, [r1, #12]
 800bba0:	9402      	str	r4, [sp, #8]
 800bba2:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800bba6:	4440      	add	r0, r8
 800bba8:	4442      	add	r2, r8
 800bbaa:	e9cd 7300 	strd	r7, r3, [sp]
 800bbae:	f108 0820 	add.w	r8, r8, #32
 800bbb2:	462b      	mov	r3, r5
 800bbb4:	4629      	mov	r1, r5
 800bbb6:	f00e fa23 	bl	801a000 <awe_vecBiquad_8ch>
 800bbba:	45d8      	cmp	r8, fp
 800bbbc:	d1ea      	bne.n	800bb94 <awe_modBiquadSmoothedProcess+0x11c>
 800bbbe:	464f      	mov	r7, r9
 800bbc0:	46a1      	mov	r9, r4
 800bbc2:	4654      	mov	r4, sl
 800bbc4:	00e4      	lsls	r4, r4, #3
 800bbc6:	1eeb      	subs	r3, r5, #3
 800bbc8:	429c      	cmp	r4, r3
 800bbca:	da30      	bge.n	800bc2e <awe_modBiquadSmoothedProcess+0x1b6>
 800bbcc:	1f2b      	subs	r3, r5, #4
 800bbce:	1b1b      	subs	r3, r3, r4
 800bbd0:	f023 0303 	bic.w	r3, r3, #3
 800bbd4:	1d22      	adds	r2, r4, #4
 800bbd6:	eb02 0a03 	add.w	sl, r2, r3
 800bbda:	9304      	str	r3, [sp, #16]
 800bbdc:	463b      	mov	r3, r7
 800bbde:	f107 0b3c 	add.w	fp, r7, #60	@ 0x3c
 800bbe2:	ea4f 0884 	mov.w	r8, r4, lsl #2
 800bbe6:	464f      	mov	r7, r9
 800bbe8:	9205      	str	r2, [sp, #20]
 800bbea:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800bbee:	00e4      	lsls	r4, r4, #3
 800bbf0:	4699      	mov	r9, r3
 800bbf2:	e9d6 1200 	ldrd	r1, r2, [r6]
 800bbf6:	f8d9 3054 	ldr.w	r3, [r9, #84]	@ 0x54
 800bbfa:	68c8      	ldr	r0, [r1, #12]
 800bbfc:	68d2      	ldr	r2, [r2, #12]
 800bbfe:	9702      	str	r7, [sp, #8]
 800bc00:	4423      	add	r3, r4
 800bc02:	4442      	add	r2, r8
 800bc04:	4440      	add	r0, r8
 800bc06:	9301      	str	r3, [sp, #4]
 800bc08:	f8cd b000 	str.w	fp, [sp]
 800bc0c:	f108 0810 	add.w	r8, r8, #16
 800bc10:	462b      	mov	r3, r5
 800bc12:	4629      	mov	r1, r5
 800bc14:	f00e f9d6 	bl	8019fc4 <awe_vecBiquad_4ch>
 800bc18:	45d0      	cmp	r8, sl
 800bc1a:	f104 0420 	add.w	r4, r4, #32
 800bc1e:	d1e8      	bne.n	800bbf2 <awe_modBiquadSmoothedProcess+0x17a>
 800bc20:	464b      	mov	r3, r9
 800bc22:	46b9      	mov	r9, r7
 800bc24:	461f      	mov	r7, r3
 800bc26:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800bc2a:	4413      	add	r3, r2
 800bc2c:	461c      	mov	r4, r3
 800bc2e:	1e6b      	subs	r3, r5, #1
 800bc30:	42a3      	cmp	r3, r4
 800bc32:	dd30      	ble.n	800bc96 <awe_modBiquadSmoothedProcess+0x21e>
 800bc34:	1eab      	subs	r3, r5, #2
 800bc36:	1b1b      	subs	r3, r3, r4
 800bc38:	f023 0301 	bic.w	r3, r3, #1
 800bc3c:	1ca2      	adds	r2, r4, #2
 800bc3e:	eb02 0a03 	add.w	sl, r2, r3
 800bc42:	9304      	str	r3, [sp, #16]
 800bc44:	463b      	mov	r3, r7
 800bc46:	f107 0b3c 	add.w	fp, r7, #60	@ 0x3c
 800bc4a:	ea4f 0884 	mov.w	r8, r4, lsl #2
 800bc4e:	464f      	mov	r7, r9
 800bc50:	9205      	str	r2, [sp, #20]
 800bc52:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800bc56:	00e4      	lsls	r4, r4, #3
 800bc58:	4699      	mov	r9, r3
 800bc5a:	e9d6 1200 	ldrd	r1, r2, [r6]
 800bc5e:	f8d9 3054 	ldr.w	r3, [r9, #84]	@ 0x54
 800bc62:	68c8      	ldr	r0, [r1, #12]
 800bc64:	68d2      	ldr	r2, [r2, #12]
 800bc66:	9702      	str	r7, [sp, #8]
 800bc68:	4423      	add	r3, r4
 800bc6a:	4442      	add	r2, r8
 800bc6c:	4440      	add	r0, r8
 800bc6e:	9301      	str	r3, [sp, #4]
 800bc70:	f8cd b000 	str.w	fp, [sp]
 800bc74:	f108 0808 	add.w	r8, r8, #8
 800bc78:	462b      	mov	r3, r5
 800bc7a:	4629      	mov	r1, r5
 800bc7c:	f00e f984 	bl	8019f88 <awe_vecBiquad_2ch>
 800bc80:	45d0      	cmp	r8, sl
 800bc82:	f104 0410 	add.w	r4, r4, #16
 800bc86:	d1e8      	bne.n	800bc5a <awe_modBiquadSmoothedProcess+0x1e2>
 800bc88:	464b      	mov	r3, r9
 800bc8a:	46b9      	mov	r9, r7
 800bc8c:	461f      	mov	r7, r3
 800bc8e:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800bc92:	4413      	add	r3, r2
 800bc94:	461c      	mov	r4, r3
 800bc96:	42a5      	cmp	r5, r4
 800bc98:	dd1d      	ble.n	800bcd6 <awe_modBiquadSmoothedProcess+0x25e>
 800bc9a:	ea4f 0884 	mov.w	r8, r4, lsl #2
 800bc9e:	f107 0a3c 	add.w	sl, r7, #60	@ 0x3c
 800bca2:	00e4      	lsls	r4, r4, #3
 800bca4:	ea4f 0b85 	mov.w	fp, r5, lsl #2
 800bca8:	e9d6 1200 	ldrd	r1, r2, [r6]
 800bcac:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800bcae:	68c8      	ldr	r0, [r1, #12]
 800bcb0:	68d2      	ldr	r2, [r2, #12]
 800bcb2:	f8cd 9008 	str.w	r9, [sp, #8]
 800bcb6:	4423      	add	r3, r4
 800bcb8:	4442      	add	r2, r8
 800bcba:	4440      	add	r0, r8
 800bcbc:	9301      	str	r3, [sp, #4]
 800bcbe:	f8cd a000 	str.w	sl, [sp]
 800bcc2:	f108 0804 	add.w	r8, r8, #4
 800bcc6:	462b      	mov	r3, r5
 800bcc8:	4629      	mov	r1, r5
 800bcca:	f00d fef1 	bl	8019ab0 <awe_vecBiquad>
 800bcce:	45c3      	cmp	fp, r8
 800bcd0:	f104 0408 	add.w	r4, r4, #8
 800bcd4:	d1e8      	bne.n	800bca8 <awe_modBiquadSmoothedProcess+0x230>
 800bcd6:	b007      	add	sp, #28
 800bcd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcdc:	ee36 6ae7 	vsub.f32	s12, s13, s15
 800bce0:	eef0 5a67 	vmov.f32	s11, s15
 800bce4:	eee7 5a06 	vfma.f32	s11, s14, s12
 800bce8:	eef4 7a65 	vcmp.f32	s15, s11
 800bcec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcf0:	bf18      	it	ne
 800bcf2:	eef0 6a65 	vmovne.f32	s13, s11
 800bcf6:	2d07      	cmp	r5, #7
 800bcf8:	edc7 6a13 	vstr	s13, [r7, #76]	@ 0x4c
 800bcfc:	f73f af3a 	bgt.w	800bb74 <awe_modBiquadSmoothedProcess+0xfc>
 800bd00:	2400      	movs	r4, #0
 800bd02:	e760      	b.n	800bbc6 <awe_modBiquadSmoothedProcess+0x14e>

0800bd04 <awe_modBiquadSmoothedSet>:
 800bd04:	058b      	lsls	r3, r1, #22
 800bd06:	d401      	bmi.n	800bd0c <awe_modBiquadSmoothedSet+0x8>
 800bd08:	2000      	movs	r0, #0
 800bd0a:	4770      	bx	lr
 800bd0c:	6903      	ldr	r3, [r0, #16]
 800bd0e:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800bd12:	681b      	ldr	r3, [r3, #0]
 800bd14:	b510      	push	{r4, lr}
 800bd16:	4604      	mov	r4, r0
 800bd18:	6998      	ldr	r0, [r3, #24]
 800bd1a:	edd3 0a04 	vldr	s1, [r3, #16]
 800bd1e:	f3c0 0010 	ubfx	r0, r0, #0, #17
 800bd22:	f017 fe3d 	bl	80239a0 <design_smoother>
 800bd26:	2000      	movs	r0, #0
 800bd28:	ed84 0a14 	vstr	s0, [r4, #80]	@ 0x50
 800bd2c:	bd10      	pop	{r4, pc}
 800bd2e:	bf00      	nop

0800bd30 <awe_modBitsToIntProcess>:
 800bd30:	7e02      	ldrb	r2, [r0, #24]
 800bd32:	b410      	push	{r4}
 800bd34:	6904      	ldr	r4, [r0, #16]
 800bd36:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
 800bd3a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800bd3e:	68c8      	ldr	r0, [r1, #12]
 800bd40:	b142      	cbz	r2, 800bd54 <awe_modBitsToIntProcess+0x24>
 800bd42:	2200      	movs	r2, #0
 800bd44:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800bd48:	68c9      	ldr	r1, [r1, #12]
 800bd4a:	6809      	ldr	r1, [r1, #0]
 800bd4c:	429c      	cmp	r4, r3
 800bd4e:	ea41 0242 	orr.w	r2, r1, r2, lsl #1
 800bd52:	d1f7      	bne.n	800bd44 <awe_modBitsToIntProcess+0x14>
 800bd54:	6002      	str	r2, [r0, #0]
 800bd56:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bd5a:	4770      	bx	lr

0800bd5c <awe_modBlockCounterProcess>:
 800bd5c:	6902      	ldr	r2, [r0, #16]
 800bd5e:	6a03      	ldr	r3, [r0, #32]
 800bd60:	6812      	ldr	r2, [r2, #0]
 800bd62:	68d2      	ldr	r2, [r2, #12]
 800bd64:	3301      	adds	r3, #1
 800bd66:	6203      	str	r3, [r0, #32]
 800bd68:	6013      	str	r3, [r2, #0]
 800bd6a:	4770      	bx	lr

0800bd6c <awe_modBooleanInvertProcess>:
 800bd6c:	6903      	ldr	r3, [r0, #16]
 800bd6e:	e9d3 2000 	ldrd	r2, r0, [r3]
 800bd72:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 800bd76:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800bd7a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bd7e:	fb01 f103 	mul.w	r1, r1, r3
 800bd82:	68c0      	ldr	r0, [r0, #12]
 800bd84:	68d2      	ldr	r2, [r2, #12]
 800bd86:	b151      	cbz	r1, 800bd9e <awe_modBooleanInvertProcess+0x32>
 800bd88:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 800bd8c:	f852 3b04 	ldr.w	r3, [r2], #4
 800bd90:	fab3 f383 	clz	r3, r3
 800bd94:	095b      	lsrs	r3, r3, #5
 800bd96:	428a      	cmp	r2, r1
 800bd98:	f840 3b04 	str.w	r3, [r0], #4
 800bd9c:	d1f6      	bne.n	800bd8c <awe_modBooleanInvertProcess+0x20>
 800bd9e:	4770      	bx	lr

0800bda0 <awe_modBooleanSinkConstructor>:
 800bda0:	b570      	push	{r4, r5, r6, lr}
 800bda2:	b082      	sub	sp, #8
 800bda4:	4616      	mov	r6, r2
 800bda6:	4605      	mov	r5, r0
 800bda8:	9806      	ldr	r0, [sp, #24]
 800bdaa:	9300      	str	r3, [sp, #0]
 800bdac:	460a      	mov	r2, r1
 800bdae:	9001      	str	r0, [sp, #4]
 800bdb0:	4633      	mov	r3, r6
 800bdb2:	4629      	mov	r1, r5
 800bdb4:	480e      	ldr	r0, [pc, #56]	@ (800bdf0 <awe_modBooleanSinkConstructor+0x50>)
 800bdb6:	f014 f9c5 	bl	8020144 <BaseClassModule_Constructor>
 800bdba:	b1a0      	cbz	r0, 800bde6 <awe_modBooleanSinkConstructor+0x46>
 800bdbc:	6832      	ldr	r2, [r6, #0]
 800bdbe:	4604      	mov	r4, r0
 800bdc0:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 800bdc4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800bdc8:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800bdcc:	fb00 f003 	mul.w	r0, r0, r3
 800bdd0:	462a      	mov	r2, r5
 800bdd2:	0080      	lsls	r0, r0, #2
 800bdd4:	f240 2131 	movw	r1, #561	@ 0x231
 800bdd8:	f013 fc60 	bl	801f69c <awe_fwMalloc>
 800bddc:	6220      	str	r0, [r4, #32]
 800bdde:	b110      	cbz	r0, 800bde6 <awe_modBooleanSinkConstructor+0x46>
 800bde0:	4620      	mov	r0, r4
 800bde2:	b002      	add	sp, #8
 800bde4:	bd70      	pop	{r4, r5, r6, pc}
 800bde6:	2400      	movs	r4, #0
 800bde8:	4620      	mov	r0, r4
 800bdea:	b002      	add	sp, #8
 800bdec:	bd70      	pop	{r4, r5, r6, pc}
 800bdee:	bf00      	nop
 800bdf0:	08033eb4 	.word	0x08033eb4

0800bdf4 <awe_modBooleanSinkProcess>:
 800bdf4:	6903      	ldr	r3, [r0, #16]
 800bdf6:	681b      	ldr	r3, [r3, #0]
 800bdf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bdfc:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800be00:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800be04:	b082      	sub	sp, #8
 800be06:	68dc      	ldr	r4, [r3, #12]
 800be08:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800be0c:	b196      	cbz	r6, 800be34 <awe_modBooleanSinkProcess+0x40>
 800be0e:	4680      	mov	r8, r0
 800be10:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 800be14:	ea4f 0987 	mov.w	r9, r7, lsl #2
 800be18:	2500      	movs	r5, #0
 800be1a:	f8d8 2020 	ldr.w	r2, [r8, #32]
 800be1e:	9700      	str	r7, [sp, #0]
 800be20:	442a      	add	r2, r5
 800be22:	4620      	mov	r0, r4
 800be24:	2301      	movs	r3, #1
 800be26:	4631      	mov	r1, r6
 800be28:	3404      	adds	r4, #4
 800be2a:	f00f f91b 	bl	801b064 <awe_vecCopy32>
 800be2e:	4554      	cmp	r4, sl
 800be30:	444d      	add	r5, r9
 800be32:	d1f2      	bne.n	800be1a <awe_modBooleanSinkProcess+0x26>
 800be34:	b002      	add	sp, #8
 800be36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800be3a:	bf00      	nop

0800be3c <awe_modBooleanSourceConstructor>:
 800be3c:	b570      	push	{r4, r5, r6, lr}
 800be3e:	b082      	sub	sp, #8
 800be40:	4616      	mov	r6, r2
 800be42:	4605      	mov	r5, r0
 800be44:	9806      	ldr	r0, [sp, #24]
 800be46:	9300      	str	r3, [sp, #0]
 800be48:	460a      	mov	r2, r1
 800be4a:	9001      	str	r0, [sp, #4]
 800be4c:	4633      	mov	r3, r6
 800be4e:	4629      	mov	r1, r5
 800be50:	480d      	ldr	r0, [pc, #52]	@ (800be88 <awe_modBooleanSourceConstructor+0x4c>)
 800be52:	f014 f977 	bl	8020144 <BaseClassModule_Constructor>
 800be56:	b198      	cbz	r0, 800be80 <awe_modBooleanSourceConstructor+0x44>
 800be58:	6832      	ldr	r2, [r6, #0]
 800be5a:	4604      	mov	r4, r0
 800be5c:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 800be60:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800be64:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800be68:	fb00 f003 	mul.w	r0, r0, r3
 800be6c:	462a      	mov	r2, r5
 800be6e:	0080      	lsls	r0, r0, #2
 800be70:	2102      	movs	r1, #2
 800be72:	f013 fc13 	bl	801f69c <awe_fwMalloc>
 800be76:	6220      	str	r0, [r4, #32]
 800be78:	b110      	cbz	r0, 800be80 <awe_modBooleanSourceConstructor+0x44>
 800be7a:	4620      	mov	r0, r4
 800be7c:	b002      	add	sp, #8
 800be7e:	bd70      	pop	{r4, r5, r6, pc}
 800be80:	2400      	movs	r4, #0
 800be82:	4620      	mov	r0, r4
 800be84:	b002      	add	sp, #8
 800be86:	bd70      	pop	{r4, r5, r6, pc}
 800be88:	08033edc 	.word	0x08033edc

0800be8c <awe_modBooleanSourceProcess>:
 800be8c:	6903      	ldr	r3, [r0, #16]
 800be8e:	681b      	ldr	r3, [r3, #0]
 800be90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800be94:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800be98:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800be9c:	b082      	sub	sp, #8
 800be9e:	68dc      	ldr	r4, [r3, #12]
 800bea0:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800bea4:	b196      	cbz	r6, 800becc <awe_modBooleanSourceProcess+0x40>
 800bea6:	4680      	mov	r8, r0
 800bea8:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 800beac:	ea4f 0987 	mov.w	r9, r7, lsl #2
 800beb0:	2500      	movs	r5, #0
 800beb2:	f8d8 0020 	ldr.w	r0, [r8, #32]
 800beb6:	9700      	str	r7, [sp, #0]
 800beb8:	4428      	add	r0, r5
 800beba:	4622      	mov	r2, r4
 800bebc:	4633      	mov	r3, r6
 800bebe:	2101      	movs	r1, #1
 800bec0:	3404      	adds	r4, #4
 800bec2:	f00f f8cf 	bl	801b064 <awe_vecCopy32>
 800bec6:	45a2      	cmp	sl, r4
 800bec8:	444d      	add	r5, r9
 800beca:	d1f2      	bne.n	800beb2 <awe_modBooleanSourceProcess+0x26>
 800becc:	b002      	add	sp, #8
 800bece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bed2:	bf00      	nop

0800bed4 <awe_modButterworthFilterProcess>:
 800bed4:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800bed6:	6943      	ldr	r3, [r0, #20]
 800bed8:	4718      	bx	r3
 800beda:	bf00      	nop

0800bedc <awe_modButterworthFilterConstructor>:
 800bedc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bede:	b087      	sub	sp, #28
 800bee0:	4615      	mov	r5, r2
 800bee2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800bee4:	9300      	str	r3, [sp, #0]
 800bee6:	4601      	mov	r1, r0
 800bee8:	9201      	str	r2, [sp, #4]
 800beea:	4606      	mov	r6, r0
 800beec:	462b      	mov	r3, r5
 800beee:	f240 1201 	movw	r2, #257	@ 0x101
 800bef2:	4810      	ldr	r0, [pc, #64]	@ (800bf34 <awe_modButterworthFilterConstructor+0x58>)
 800bef4:	f014 f926 	bl	8020144 <BaseClassModule_Constructor>
 800bef8:	4604      	mov	r4, r0
 800befa:	b1b8      	cbz	r0, 800bf2c <awe_modButterworthFilterConstructor+0x50>
 800befc:	e9d5 2500 	ldrd	r2, r5, [r5]
 800bf00:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800bf02:	9204      	str	r2, [sp, #16]
 800bf04:	3301      	adds	r3, #1
 800bf06:	2201      	movs	r2, #1
 800bf08:	fa43 f002 	asr.w	r0, r3, r2
 800bf0c:	af03      	add	r7, sp, #12
 800bf0e:	e9cd 2700 	strd	r2, r7, [sp]
 800bf12:	9003      	str	r0, [sp, #12]
 800bf14:	4631      	mov	r1, r6
 800bf16:	ab04      	add	r3, sp, #16
 800bf18:	f240 1201 	movw	r2, #257	@ 0x101
 800bf1c:	4806      	ldr	r0, [pc, #24]	@ (800bf38 <awe_modButterworthFilterConstructor+0x5c>)
 800bf1e:	9505      	str	r5, [sp, #20]
 800bf20:	f014 fb32 	bl	8020588 <ClassModule_Constructor>
 800bf24:	2800      	cmp	r0, #0
 800bf26:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800bf28:	bf08      	it	eq
 800bf2a:	2400      	moveq	r4, #0
 800bf2c:	4620      	mov	r0, r4
 800bf2e:	b007      	add	sp, #28
 800bf30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf32:	bf00      	nop
 800bf34:	08033f04 	.word	0x08033f04
 800bf38:	beef080b 	.word	0xbeef080b

0800bf3c <awe_modButterworthFilterSet>:
 800bf3c:	b909      	cbnz	r1, 800bf42 <awe_modButterworthFilterSet+0x6>
 800bf3e:	2000      	movs	r0, #0
 800bf40:	4770      	bx	lr
 800bf42:	6903      	ldr	r3, [r0, #16]
 800bf44:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	ed90 0a0a 	vldr	s0, [r0, #40]	@ 0x28
 800bf4c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800bf4e:	edd3 0a04 	vldr	s1, [r3, #16]
 800bf52:	6a01      	ldr	r1, [r0, #32]
 800bf54:	b510      	push	{r4, lr}
 800bf56:	4604      	mov	r4, r0
 800bf58:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800bf5a:	f016 f815 	bl	8021f88 <design_butterworth>
 800bf5e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800bf60:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800bf64:	f7fe fa50 	bl	800a408 <ClassModule_Set>
 800bf68:	2000      	movs	r0, #0
 800bf6a:	bd10      	pop	{r4, pc}

0800bf6c <awe_modCeilProcess>:
 800bf6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf6e:	6903      	ldr	r3, [r0, #16]
 800bf70:	e9d3 2100 	ldrd	r2, r1, [r3]
 800bf74:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800bf78:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800bf7c:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800bf80:	fb07 f703 	mul.w	r7, r7, r3
 800bf84:	68ce      	ldr	r6, [r1, #12]
 800bf86:	68d5      	ldr	r5, [r2, #12]
 800bf88:	b14f      	cbz	r7, 800bf9e <awe_modCeilProcess+0x32>
 800bf8a:	2400      	movs	r4, #0
 800bf8c:	ecb5 0a01 	vldmia	r5!, {s0}
 800bf90:	f023 f992 	bl	802f2b8 <ceilf>
 800bf94:	3401      	adds	r4, #1
 800bf96:	42a7      	cmp	r7, r4
 800bf98:	eca6 0a01 	vstmia	r6!, {s0}
 800bf9c:	d1f6      	bne.n	800bf8c <awe_modCeilProcess+0x20>
 800bf9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bfa0 <awe_modClipAsymProcess>:
 800bfa0:	6903      	ldr	r3, [r0, #16]
 800bfa2:	edd0 0a09 	vldr	s1, [r0, #36]	@ 0x24
 800bfa6:	ed90 0a08 	vldr	s0, [r0, #32]
 800bfaa:	e9d3 0100 	ldrd	r0, r1, [r3]
 800bfae:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800bfb2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800bfb6:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bfba:	68c9      	ldr	r1, [r1, #12]
 800bfbc:	68c0      	ldr	r0, [r0, #12]
 800bfbe:	fb02 f203 	mul.w	r2, r2, r3
 800bfc2:	f00e be91 	b.w	801ace8 <awe_vecClipAsym>
 800bfc6:	bf00      	nop

0800bfc8 <awe_modClipAsymInt32Process>:
 800bfc8:	6901      	ldr	r1, [r0, #16]
 800bfca:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800bfcc:	4602      	mov	r2, r0
 800bfce:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bfd2:	b530      	push	{r4, r5, lr}
 800bfd4:	e9d0 4505 	ldrd	r4, r5, [r0, #20]
 800bfd8:	b083      	sub	sp, #12
 800bfda:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800bfde:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800bfe2:	fb04 f405 	mul.w	r4, r4, r5
 800bfe6:	68c9      	ldr	r1, [r1, #12]
 800bfe8:	68c0      	ldr	r0, [r0, #12]
 800bfea:	6a12      	ldr	r2, [r2, #32]
 800bfec:	9400      	str	r4, [sp, #0]
 800bfee:	f00e ffb7 	bl	801af60 <awe_vecClipAsymFract32>
 800bff2:	b003      	add	sp, #12
 800bff4:	bd30      	pop	{r4, r5, pc}
 800bff6:	bf00      	nop

0800bff8 <awe_modClipIndicatorConstructor>:
 800bff8:	b570      	push	{r4, r5, r6, lr}
 800bffa:	b082      	sub	sp, #8
 800bffc:	4616      	mov	r6, r2
 800bffe:	4605      	mov	r5, r0
 800c000:	9806      	ldr	r0, [sp, #24]
 800c002:	9300      	str	r3, [sp, #0]
 800c004:	460a      	mov	r2, r1
 800c006:	9001      	str	r0, [sp, #4]
 800c008:	4633      	mov	r3, r6
 800c00a:	4629      	mov	r1, r5
 800c00c:	4811      	ldr	r0, [pc, #68]	@ (800c054 <awe_modClipIndicatorConstructor+0x5c>)
 800c00e:	f014 f899 	bl	8020144 <BaseClassModule_Constructor>
 800c012:	b1d8      	cbz	r0, 800c04c <awe_modClipIndicatorConstructor+0x54>
 800c014:	6833      	ldr	r3, [r6, #0]
 800c016:	4604      	mov	r4, r0
 800c018:	6958      	ldr	r0, [r3, #20]
 800c01a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800c01e:	0080      	lsls	r0, r0, #2
 800c020:	462a      	mov	r2, r5
 800c022:	f240 2131 	movw	r1, #561	@ 0x231
 800c026:	f013 fb39 	bl	801f69c <awe_fwMalloc>
 800c02a:	63a0      	str	r0, [r4, #56]	@ 0x38
 800c02c:	b170      	cbz	r0, 800c04c <awe_modClipIndicatorConstructor+0x54>
 800c02e:	6833      	ldr	r3, [r6, #0]
 800c030:	6958      	ldr	r0, [r3, #20]
 800c032:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800c036:	0080      	lsls	r0, r0, #2
 800c038:	462a      	mov	r2, r5
 800c03a:	f240 2131 	movw	r1, #561	@ 0x231
 800c03e:	f013 fb2d 	bl	801f69c <awe_fwMalloc>
 800c042:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800c044:	b110      	cbz	r0, 800c04c <awe_modClipIndicatorConstructor+0x54>
 800c046:	4620      	mov	r0, r4
 800c048:	b002      	add	sp, #8
 800c04a:	bd70      	pop	{r4, r5, r6, pc}
 800c04c:	2400      	movs	r4, #0
 800c04e:	4620      	mov	r0, r4
 800c050:	b002      	add	sp, #8
 800c052:	bd70      	pop	{r4, r5, r6, pc}
 800c054:	08033fa4 	.word	0x08033fa4

0800c058 <awe_modClipIndicatorProcess>:
 800c058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c05c:	6903      	ldr	r3, [r0, #16]
 800c05e:	681b      	ldr	r3, [r3, #0]
 800c060:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800c064:	ed2d 8b02 	vpush	{d8}
 800c068:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800c06c:	b083      	sub	sp, #12
 800c06e:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800c072:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800c076:	b3a6      	cbz	r6, 800c0e2 <awe_modClipIndicatorProcess+0x8a>
 800c078:	4605      	mov	r5, r0
 800c07a:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
 800c07e:	4644      	mov	r4, r8
 800c080:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 800c084:	f04f 0a00 	mov.w	sl, #0
 800c088:	f04f 0901 	mov.w	r9, #1
 800c08c:	ab01      	add	r3, sp, #4
 800c08e:	463a      	mov	r2, r7
 800c090:	4631      	mov	r1, r6
 800c092:	4620      	mov	r0, r4
 800c094:	f010 fcfe 	bl	801ca94 <awe_vecMaxAbs>
 800c098:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 800c09a:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 800c09c:	eba4 0208 	sub.w	r2, r4, r8
 800c0a0:	4413      	add	r3, r2
 800c0a2:	edd3 6a00 	vldr	s13, [r3]
 800c0a6:	eeb4 0ae6 	vcmpe.f32	s0, s13
 800c0aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0ae:	bfcc      	ite	gt
 800c0b0:	ed95 7a0c 	vldrgt	s14, [r5, #48]	@ 0x30
 800c0b4:	ed95 7a0d 	vldrle	s14, [r5, #52]	@ 0x34
 800c0b8:	ee78 7a47 	vsub.f32	s15, s16, s14
 800c0bc:	3404      	adds	r4, #4
 800c0be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800c0c2:	eee7 7a00 	vfma.f32	s15, s14, s0
 800c0c6:	edc3 7a00 	vstr	s15, [r3]
 800c0ca:	ed95 7a0b 	vldr	s14, [r5, #44]	@ 0x2c
 800c0ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0d6:	bf4c      	ite	mi
 800c0d8:	464b      	movmi	r3, r9
 800c0da:	4653      	movpl	r3, sl
 800c0dc:	45a3      	cmp	fp, r4
 800c0de:	508b      	str	r3, [r1, r2]
 800c0e0:	d1d4      	bne.n	800c08c <awe_modClipIndicatorProcess+0x34>
 800c0e2:	b003      	add	sp, #12
 800c0e4:	ecbd 8b02 	vpop	{d8}
 800c0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c0ec <awe_modClipIndicatorSet>:
 800c0ec:	b909      	cbnz	r1, 800c0f2 <awe_modClipIndicatorSet+0x6>
 800c0ee:	2000      	movs	r0, #0
 800c0f0:	4770      	bx	lr
 800c0f2:	b538      	push	{r3, r4, r5, lr}
 800c0f4:	6903      	ldr	r3, [r0, #16]
 800c0f6:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	699d      	ldr	r5, [r3, #24]
 800c0fe:	ed2d 8b02 	vpush	{d8}
 800c102:	ed93 8a04 	vldr	s16, [r3, #16]
 800c106:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800c10a:	4604      	mov	r4, r0
 800c10c:	eef0 0a48 	vmov.f32	s1, s16
 800c110:	4628      	mov	r0, r5
 800c112:	f017 fc45 	bl	80239a0 <design_smoother>
 800c116:	4628      	mov	r0, r5
 800c118:	eef0 0a48 	vmov.f32	s1, s16
 800c11c:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 800c120:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 800c124:	f017 fc3c 	bl	80239a0 <design_smoother>
 800c128:	ed94 7a08 	vldr	s14, [r4, #32]
 800c12c:	eddf 7a06 	vldr	s15, [pc, #24]	@ 800c148 <awe_modClipIndicatorSet+0x5c>
 800c130:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 800c134:	ee27 0a27 	vmul.f32	s0, s14, s15
 800c138:	f022 fb60 	bl	802e7fc <expf>
 800c13c:	ecbd 8b02 	vpop	{d8}
 800c140:	2000      	movs	r0, #0
 800c142:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800c146:	bd38      	pop	{r3, r4, r5, pc}
 800c148:	3debc8e3 	.word	0x3debc8e3

0800c14c <awe_modCopierProcess>:
 800c14c:	6903      	ldr	r3, [r0, #16]
 800c14e:	e9d3 0200 	ldrd	r0, r2, [r3]
 800c152:	b500      	push	{lr}
 800c154:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800c158:	b083      	sub	sp, #12
 800c15a:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c15e:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800c162:	fb01 f103 	mul.w	r1, r1, r3
 800c166:	2301      	movs	r3, #1
 800c168:	68d2      	ldr	r2, [r2, #12]
 800c16a:	68c0      	ldr	r0, [r0, #12]
 800c16c:	9100      	str	r1, [sp, #0]
 800c16e:	4619      	mov	r1, r3
 800c170:	f00e ff78 	bl	801b064 <awe_vecCopy32>
 800c174:	b003      	add	sp, #12
 800c176:	f85d fb04 	ldr.w	pc, [sp], #4
 800c17a:	bf00      	nop

0800c17c <awe_modCosProcess>:
 800c17c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c17e:	6903      	ldr	r3, [r0, #16]
 800c180:	e9d3 2100 	ldrd	r2, r1, [r3]
 800c184:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800c188:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c18c:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800c190:	fb07 f703 	mul.w	r7, r7, r3
 800c194:	68ce      	ldr	r6, [r1, #12]
 800c196:	68d5      	ldr	r5, [r2, #12]
 800c198:	b14f      	cbz	r7, 800c1ae <awe_modCosProcess+0x32>
 800c19a:	2400      	movs	r4, #0
 800c19c:	ecb5 0a01 	vldmia	r5!, {s0}
 800c1a0:	f022 fd24 	bl	802ebec <cosf>
 800c1a4:	3401      	adds	r4, #1
 800c1a6:	42a7      	cmp	r7, r4
 800c1a8:	eca6 0a01 	vstmia	r6!, {s0}
 800c1ac:	d1f6      	bne.n	800c19c <awe_modCosProcess+0x20>
 800c1ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c1b0 <awe_modCoshProcess>:
 800c1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1b2:	6903      	ldr	r3, [r0, #16]
 800c1b4:	e9d3 2100 	ldrd	r2, r1, [r3]
 800c1b8:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800c1bc:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c1c0:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800c1c4:	fb07 f703 	mul.w	r7, r7, r3
 800c1c8:	68ce      	ldr	r6, [r1, #12]
 800c1ca:	68d5      	ldr	r5, [r2, #12]
 800c1cc:	b14f      	cbz	r7, 800c1e2 <awe_modCoshProcess+0x32>
 800c1ce:	2400      	movs	r4, #0
 800c1d0:	ecb5 0a01 	vldmia	r5!, {s0}
 800c1d4:	f022 faea 	bl	802e7ac <coshf>
 800c1d8:	3401      	adds	r4, #1
 800c1da:	42a7      	cmp	r7, r4
 800c1dc:	eca6 0a01 	vstmia	r6!, {s0}
 800c1e0:	d1f6      	bne.n	800c1d0 <awe_modCoshProcess+0x20>
 800c1e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c1e4 <awe_modCounterProcess>:
 800c1e4:	6901      	ldr	r1, [r0, #16]
 800c1e6:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 800c1e8:	680b      	ldr	r3, [r1, #0]
 800c1ea:	699b      	ldr	r3, [r3, #24]
 800c1ec:	b430      	push	{r4, r5}
 800c1ee:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800c1f0:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 800c1f2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c1f6:	442b      	add	r3, r5
 800c1f8:	42a3      	cmp	r3, r4
 800c1fa:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800c1fc:	d309      	bcc.n	800c212 <awe_modCounterProcess+0x2e>
 800c1fe:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 800c200:	1b1b      	subs	r3, r3, r4
 800c202:	3201      	adds	r2, #1
 800c204:	e9c0 230a 	strd	r2, r3, [r0, #40]	@ 0x28
 800c208:	b11d      	cbz	r5, 800c212 <awe_modCounterProcess+0x2e>
 800c20a:	42aa      	cmp	r2, r5
 800c20c:	bf24      	itt	cs
 800c20e:	2200      	movcs	r2, #0
 800c210:	6282      	strcs	r2, [r0, #40]	@ 0x28
 800c212:	684b      	ldr	r3, [r1, #4]
 800c214:	68db      	ldr	r3, [r3, #12]
 800c216:	bc30      	pop	{r4, r5}
 800c218:	601a      	str	r2, [r3, #0]
 800c21a:	4770      	bx	lr

0800c21c <awe_modCrossFaderProcess>:
 800c21c:	6903      	ldr	r3, [r0, #16]
 800c21e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c222:	e9d3 1200 	ldrd	r1, r2, [r3]
 800c226:	68c9      	ldr	r1, [r1, #12]
 800c228:	6954      	ldr	r4, [r2, #20]
 800c22a:	68d5      	ldr	r5, [r2, #12]
 800c22c:	ed2d 8b04 	vpush	{d8-d9}
 800c230:	ed91 9a00 	vldr	s18, [r1]
 800c234:	ed90 8a0c 	vldr	s16, [r0, #48]	@ 0x30
 800c238:	6991      	ldr	r1, [r2, #24]
 800c23a:	4680      	mov	r8, r0
 800c23c:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 800c240:	e9d3 0302 	ldrd	r0, r3, [r3, #8]
 800c244:	eeb4 9ae8 	vcmpe.f32	s18, s17
 800c248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c24c:	b085      	sub	sp, #20
 800c24e:	68c7      	ldr	r7, [r0, #12]
 800c250:	68de      	ldr	r6, [r3, #12]
 800c252:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800c256:	f3c1 0910 	ubfx	r9, r1, #0, #17
 800c25a:	dd58      	ble.n	800c30e <awe_modCrossFaderProcess+0xf2>
 800c25c:	eeb0 9a68 	vmov.f32	s18, s17
 800c260:	eddf 8a30 	vldr	s17, [pc, #192]	@ 800c324 <awe_modCrossFaderProcess+0x108>
 800c264:	f8d8 3024 	ldr.w	r3, [r8, #36]	@ 0x24
 800c268:	b1cb      	cbz	r3, 800c29e <awe_modCrossFaderProcess+0x82>
 800c26a:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 800c328 <awe_modCrossFaderProcess+0x10c>
 800c26e:	eddf 6a2f 	vldr	s13, [pc, #188]	@ 800c32c <awe_modCrossFaderProcess+0x110>
 800c272:	eddf 7a2f 	vldr	s15, [pc, #188]	@ 800c330 <awe_modCrossFaderProcess+0x114>
 800c276:	eeb0 6a47 	vmov.f32	s12, s14
 800c27a:	eea8 6aa6 	vfma.f32	s12, s17, s13
 800c27e:	eea9 7a26 	vfma.f32	s14, s18, s13
 800c282:	eef0 6a67 	vmov.f32	s13, s15
 800c286:	eee6 6a28 	vfma.f32	s13, s12, s17
 800c28a:	eee7 7a09 	vfma.f32	s15, s14, s18
 800c28e:	ee26 7aa8 	vmul.f32	s14, s13, s17
 800c292:	ee67 7a89 	vmul.f32	s15, s15, s18
 800c296:	ee68 8a87 	vmul.f32	s17, s17, s14
 800c29a:	ee29 9a27 	vmul.f32	s18, s18, s15
 800c29e:	b35c      	cbz	r4, 800c2f8 <awe_modCrossFaderProcess+0xdc>
 800c2a0:	eb05 0b84 	add.w	fp, r5, r4, lsl #2
 800c2a4:	f10d 0a08 	add.w	sl, sp, #8
 800c2a8:	f8d8 0028 	ldr.w	r0, [r8, #40]	@ 0x28
 800c2ac:	f8d8 c02c 	ldr.w	ip, [r8, #44]	@ 0x2c
 800c2b0:	9002      	str	r0, [sp, #8]
 800c2b2:	4632      	mov	r2, r6
 800c2b4:	4628      	mov	r0, r5
 800c2b6:	eef0 0a48 	vmov.f32	s1, s16
 800c2ba:	eeb0 0a68 	vmov.f32	s0, s17
 800c2be:	4623      	mov	r3, r4
 800c2c0:	4621      	mov	r1, r4
 800c2c2:	e9cd a900 	strd	sl, r9, [sp]
 800c2c6:	f8cd c00c 	str.w	ip, [sp, #12]
 800c2ca:	f011 fd47 	bl	801dd5c <awe_vecScaleSmooth>
 800c2ce:	ab03      	add	r3, sp, #12
 800c2d0:	9300      	str	r3, [sp, #0]
 800c2d2:	4632      	mov	r2, r6
 800c2d4:	4638      	mov	r0, r7
 800c2d6:	3504      	adds	r5, #4
 800c2d8:	f8cd 9004 	str.w	r9, [sp, #4]
 800c2dc:	eef0 0a48 	vmov.f32	s1, s16
 800c2e0:	eeb0 0a49 	vmov.f32	s0, s18
 800c2e4:	4623      	mov	r3, r4
 800c2e6:	4621      	mov	r1, r4
 800c2e8:	f011 fa76 	bl	801d7d8 <awe_vecScaleAddSmooth>
 800c2ec:	45ab      	cmp	fp, r5
 800c2ee:	f106 0604 	add.w	r6, r6, #4
 800c2f2:	f107 0704 	add.w	r7, r7, #4
 800c2f6:	d1d7      	bne.n	800c2a8 <awe_modCrossFaderProcess+0x8c>
 800c2f8:	9a02      	ldr	r2, [sp, #8]
 800c2fa:	9b03      	ldr	r3, [sp, #12]
 800c2fc:	f8c8 2028 	str.w	r2, [r8, #40]	@ 0x28
 800c300:	f8c8 302c 	str.w	r3, [r8, #44]	@ 0x2c
 800c304:	b005      	add	sp, #20
 800c306:	ecbd 8b04 	vpop	{d8-d9}
 800c30a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c30e:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 800c312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c316:	d502      	bpl.n	800c31e <awe_modCrossFaderProcess+0x102>
 800c318:	ed9f 9a02 	vldr	s18, [pc, #8]	@ 800c324 <awe_modCrossFaderProcess+0x108>
 800c31c:	e7a2      	b.n	800c264 <awe_modCrossFaderProcess+0x48>
 800c31e:	ee78 8ac9 	vsub.f32	s17, s17, s18
 800c322:	e79f      	b.n	800c264 <awe_modCrossFaderProcess+0x48>
 800c324:	00000000 	.word	0x00000000
 800c328:	c10a09d5 	.word	0xc10a09d5
 800c32c:	405413a9 	.word	0x405413a9
 800c330:	40ca09d5 	.word	0x40ca09d5

0800c334 <awe_modCrossFaderSet>:
 800c334:	b909      	cbnz	r1, 800c33a <awe_modCrossFaderSet+0x6>
 800c336:	2000      	movs	r0, #0
 800c338:	4770      	bx	lr
 800c33a:	6903      	ldr	r3, [r0, #16]
 800c33c:	ed90 0a08 	vldr	s0, [r0, #32]
 800c340:	685b      	ldr	r3, [r3, #4]
 800c342:	b510      	push	{r4, lr}
 800c344:	edd3 0a04 	vldr	s1, [r3, #16]
 800c348:	4604      	mov	r4, r0
 800c34a:	2001      	movs	r0, #1
 800c34c:	f017 fb28 	bl	80239a0 <design_smoother>
 800c350:	2000      	movs	r0, #0
 800c352:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 800c356:	bd10      	pop	{r4, pc}

0800c358 <awe_modDb10Process>:
 800c358:	6903      	ldr	r3, [r0, #16]
 800c35a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800c35e:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800c362:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c366:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800c36a:	68c9      	ldr	r1, [r1, #12]
 800c36c:	68c0      	ldr	r0, [r0, #12]
 800c36e:	fb02 f203 	mul.w	r2, r2, r3
 800c372:	f00e bf81 	b.w	801b278 <awe_vecDb10>
 800c376:	bf00      	nop

0800c378 <awe_modDb10ApproxProcess>:
 800c378:	6903      	ldr	r3, [r0, #16]
 800c37a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800c37e:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800c382:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c386:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800c38a:	68c9      	ldr	r1, [r1, #12]
 800c38c:	68c0      	ldr	r0, [r0, #12]
 800c38e:	fb02 f203 	mul.w	r2, r2, r3
 800c392:	f00e bfa5 	b.w	801b2e0 <awe_vecDb10_Approx>
 800c396:	bf00      	nop

0800c398 <awe_modDb20Process>:
 800c398:	6903      	ldr	r3, [r0, #16]
 800c39a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800c39e:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800c3a2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c3a6:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800c3aa:	68c9      	ldr	r1, [r1, #12]
 800c3ac:	68c0      	ldr	r0, [r0, #12]
 800c3ae:	fb02 f203 	mul.w	r2, r2, r3
 800c3b2:	f00e bfe5 	b.w	801b380 <awe_vecDb20>
 800c3b6:	bf00      	nop

0800c3b8 <awe_modDb20ApproxProcess>:
 800c3b8:	6903      	ldr	r3, [r0, #16]
 800c3ba:	e9d3 0100 	ldrd	r0, r1, [r3]
 800c3be:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800c3c2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c3c6:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800c3ca:	68c9      	ldr	r1, [r1, #12]
 800c3cc:	68c0      	ldr	r0, [r0, #12]
 800c3ce:	fb02 f203 	mul.w	r2, r2, r3
 800c3d2:	f00f b809 	b.w	801b3e8 <awe_vecDb20_Approx>
 800c3d6:	bf00      	nop

0800c3d8 <awe_modDcBlockConstructor>:
 800c3d8:	b570      	push	{r4, r5, r6, lr}
 800c3da:	b082      	sub	sp, #8
 800c3dc:	4616      	mov	r6, r2
 800c3de:	4605      	mov	r5, r0
 800c3e0:	9806      	ldr	r0, [sp, #24]
 800c3e2:	9300      	str	r3, [sp, #0]
 800c3e4:	460a      	mov	r2, r1
 800c3e6:	9001      	str	r0, [sp, #4]
 800c3e8:	4633      	mov	r3, r6
 800c3ea:	4629      	mov	r1, r5
 800c3ec:	480b      	ldr	r0, [pc, #44]	@ (800c41c <awe_modDcBlockConstructor+0x44>)
 800c3ee:	f013 fea9 	bl	8020144 <BaseClassModule_Constructor>
 800c3f2:	b178      	cbz	r0, 800c414 <awe_modDcBlockConstructor+0x3c>
 800c3f4:	6833      	ldr	r3, [r6, #0]
 800c3f6:	4604      	mov	r4, r0
 800c3f8:	6958      	ldr	r0, [r3, #20]
 800c3fa:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800c3fe:	0080      	lsls	r0, r0, #2
 800c400:	462a      	mov	r2, r5
 800c402:	f240 2131 	movw	r1, #561	@ 0x231
 800c406:	f013 f949 	bl	801f69c <awe_fwMalloc>
 800c40a:	62a0      	str	r0, [r4, #40]	@ 0x28
 800c40c:	b110      	cbz	r0, 800c414 <awe_modDcBlockConstructor+0x3c>
 800c40e:	4620      	mov	r0, r4
 800c410:	b002      	add	sp, #8
 800c412:	bd70      	pop	{r4, r5, r6, pc}
 800c414:	2400      	movs	r4, #0
 800c416:	4620      	mov	r0, r4
 800c418:	b002      	add	sp, #8
 800c41a:	bd70      	pop	{r4, r5, r6, pc}
 800c41c:	08034134 	.word	0x08034134

0800c420 <awe_modDcBlockProcess>:
 800c420:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c424:	6906      	ldr	r6, [r0, #16]
 800c426:	f8d0 9028 	ldr.w	r9, [r0, #40]	@ 0x28
 800c42a:	6833      	ldr	r3, [r6, #0]
 800c42c:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 800c430:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800c434:	b084      	sub	sp, #16
 800c436:	f3c2 0810 	ubfx	r8, r2, #0, #17
 800c43a:	b1c5      	cbz	r5, 800c46e <awe_modDcBlockProcess+0x4e>
 800c43c:	f100 0724 	add.w	r7, r0, #36	@ 0x24
 800c440:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800c444:	2400      	movs	r4, #0
 800c446:	e000      	b.n	800c44a <awe_modDcBlockProcess+0x2a>
 800c448:	6833      	ldr	r3, [r6, #0]
 800c44a:	6872      	ldr	r2, [r6, #4]
 800c44c:	68d8      	ldr	r0, [r3, #12]
 800c44e:	68d2      	ldr	r2, [r2, #12]
 800c450:	f8cd 8008 	str.w	r8, [sp, #8]
 800c454:	eb09 0304 	add.w	r3, r9, r4
 800c458:	4420      	add	r0, r4
 800c45a:	4422      	add	r2, r4
 800c45c:	e9cd 7300 	strd	r7, r3, [sp]
 800c460:	3404      	adds	r4, #4
 800c462:	462b      	mov	r3, r5
 800c464:	4629      	mov	r1, r5
 800c466:	f00f f80f 	bl	801b488 <awe_vecDcBlock>
 800c46a:	45a2      	cmp	sl, r4
 800c46c:	d1ec      	bne.n	800c448 <awe_modDcBlockProcess+0x28>
 800c46e:	b004      	add	sp, #16
 800c470:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800c474 <awe_modDCSourceIntProcess>:
 800c474:	6903      	ldr	r3, [r0, #16]
 800c476:	6a02      	ldr	r2, [r0, #32]
 800c478:	6818      	ldr	r0, [r3, #0]
 800c47a:	b410      	push	{r4}
 800c47c:	e9d0 3405 	ldrd	r3, r4, [r0, #20]
 800c480:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800c484:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800c488:	fb03 f304 	mul.w	r3, r3, r4
 800c48c:	2101      	movs	r1, #1
 800c48e:	68c0      	ldr	r0, [r0, #12]
 800c490:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c494:	f00f b98a 	b.w	801b7ac <awe_vecFillInt32>

0800c498 <awe_modDCSourceV2Process>:
 800c498:	6902      	ldr	r2, [r0, #16]
 800c49a:	7e01      	ldrb	r1, [r0, #24]
 800c49c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c4a0:	6813      	ldr	r3, [r2, #0]
 800c4a2:	2901      	cmp	r1, #1
 800c4a4:	68dc      	ldr	r4, [r3, #12]
 800c4a6:	d11c      	bne.n	800c4e2 <awe_modDCSourceV2Process+0x4a>
 800c4a8:	6852      	ldr	r2, [r2, #4]
 800c4aa:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800c4ae:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800c4b2:	68d5      	ldr	r5, [r2, #12]
 800c4b4:	f3c3 0810 	ubfx	r8, r3, #0, #17
 800c4b8:	b18f      	cbz	r7, 800c4de <awe_modDCSourceV2Process+0x46>
 800c4ba:	4606      	mov	r6, r0
 800c4bc:	eb04 0987 	add.w	r9, r4, r7, lsl #2
 800c4c0:	ecf4 7a01 	vldmia	r4!, {s15}
 800c4c4:	ed96 0a08 	vldr	s0, [r6, #32]
 800c4c8:	4628      	mov	r0, r5
 800c4ca:	4642      	mov	r2, r8
 800c4cc:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c4d0:	4639      	mov	r1, r7
 800c4d2:	f00f f847 	bl	801b564 <awe_vecFill>
 800c4d6:	454c      	cmp	r4, r9
 800c4d8:	f105 0504 	add.w	r5, r5, #4
 800c4dc:	d1f0      	bne.n	800c4c0 <awe_modDCSourceV2Process+0x28>
 800c4de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c4e2:	e9d3 1205 	ldrd	r1, r2, [r3, #20]
 800c4e6:	f3c2 0310 	ubfx	r3, r2, #0, #17
 800c4ea:	f3c1 0209 	ubfx	r2, r1, #0, #10
 800c4ee:	ed90 0a08 	vldr	s0, [r0, #32]
 800c4f2:	fb02 f203 	mul.w	r2, r2, r3
 800c4f6:	4620      	mov	r0, r4
 800c4f8:	2101      	movs	r1, #1
 800c4fa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c4fe:	f00f b831 	b.w	801b564 <awe_vecFill>
 800c502:	bf00      	nop

0800c504 <awe_modDebounceConstructor>:
 800c504:	b570      	push	{r4, r5, r6, lr}
 800c506:	b082      	sub	sp, #8
 800c508:	4616      	mov	r6, r2
 800c50a:	4605      	mov	r5, r0
 800c50c:	9806      	ldr	r0, [sp, #24]
 800c50e:	9300      	str	r3, [sp, #0]
 800c510:	460a      	mov	r2, r1
 800c512:	9001      	str	r0, [sp, #4]
 800c514:	4633      	mov	r3, r6
 800c516:	4629      	mov	r1, r5
 800c518:	480b      	ldr	r0, [pc, #44]	@ (800c548 <awe_modDebounceConstructor+0x44>)
 800c51a:	f013 fe13 	bl	8020144 <BaseClassModule_Constructor>
 800c51e:	b178      	cbz	r0, 800c540 <awe_modDebounceConstructor+0x3c>
 800c520:	6833      	ldr	r3, [r6, #0]
 800c522:	4604      	mov	r4, r0
 800c524:	6998      	ldr	r0, [r3, #24]
 800c526:	f3c0 0010 	ubfx	r0, r0, #0, #17
 800c52a:	0080      	lsls	r0, r0, #2
 800c52c:	462a      	mov	r2, r5
 800c52e:	f240 2131 	movw	r1, #561	@ 0x231
 800c532:	f013 f8b3 	bl	801f69c <awe_fwMalloc>
 800c536:	6320      	str	r0, [r4, #48]	@ 0x30
 800c538:	b110      	cbz	r0, 800c540 <awe_modDebounceConstructor+0x3c>
 800c53a:	4620      	mov	r0, r4
 800c53c:	b002      	add	sp, #8
 800c53e:	bd70      	pop	{r4, r5, r6, pc}
 800c540:	2400      	movs	r4, #0
 800c542:	4620      	mov	r0, r4
 800c544:	b002      	add	sp, #8
 800c546:	bd70      	pop	{r4, r5, r6, pc}
 800c548:	080341ac 	.word	0x080341ac

0800c54c <awe_modDebounceProcess>:
 800c54c:	6902      	ldr	r2, [r0, #16]
 800c54e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800c550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c554:	e9d2 3200 	ldrd	r3, r2, [r2]
 800c558:	699d      	ldr	r5, [r3, #24]
 800c55a:	f8d2 800c 	ldr.w	r8, [r2, #12]
 800c55e:	68df      	ldr	r7, [r3, #12]
 800c560:	4604      	mov	r4, r0
 800c562:	b082      	sub	sp, #8
 800c564:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800c566:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800c56a:	bb61      	cbnz	r1, 800c5c6 <awe_modDebounceProcess+0x7a>
 800c56c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c56e:	2b00      	cmp	r3, #0
 800c570:	dd0a      	ble.n	800c588 <awe_modDebounceProcess+0x3c>
 800c572:	3b01      	subs	r3, #1
 800c574:	6263      	str	r3, [r4, #36]	@ 0x24
 800c576:	2301      	movs	r3, #1
 800c578:	9500      	str	r5, [sp, #0]
 800c57a:	4642      	mov	r2, r8
 800c57c:	4619      	mov	r1, r3
 800c57e:	f00e fd71 	bl	801b064 <awe_vecCopy32>
 800c582:	b002      	add	sp, #8
 800c584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c588:	2d00      	cmp	r5, #0
 800c58a:	d0f4      	beq.n	800c576 <awe_modDebounceProcess+0x2a>
 800c58c:	6802      	ldr	r2, [r0, #0]
 800c58e:	683b      	ldr	r3, [r7, #0]
 800c590:	429a      	cmp	r2, r3
 800c592:	d10d      	bne.n	800c5b0 <awe_modDebounceProcess+0x64>
 800c594:	f1a7 0c04 	sub.w	ip, r7, #4
 800c598:	eb0c 0c85 	add.w	ip, ip, r5, lsl #2
 800c59c:	463b      	mov	r3, r7
 800c59e:	4602      	mov	r2, r0
 800c5a0:	459c      	cmp	ip, r3
 800c5a2:	d0e8      	beq.n	800c576 <awe_modDebounceProcess+0x2a>
 800c5a4:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c5a8:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800c5ac:	428e      	cmp	r6, r1
 800c5ae:	d0f7      	beq.n	800c5a0 <awe_modDebounceProcess+0x54>
 800c5b0:	2301      	movs	r3, #1
 800c5b2:	4602      	mov	r2, r0
 800c5b4:	4619      	mov	r1, r3
 800c5b6:	4638      	mov	r0, r7
 800c5b8:	9500      	str	r5, [sp, #0]
 800c5ba:	f00e fd53 	bl	801b064 <awe_vecCopy32>
 800c5be:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c5c0:	6263      	str	r3, [r4, #36]	@ 0x24
 800c5c2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c5c4:	e7d7      	b.n	800c576 <awe_modDebounceProcess+0x2a>
 800c5c6:	2301      	movs	r3, #1
 800c5c8:	4602      	mov	r2, r0
 800c5ca:	4619      	mov	r1, r3
 800c5cc:	4638      	mov	r0, r7
 800c5ce:	9500      	str	r5, [sp, #0]
 800c5d0:	f00e fd48 	bl	801b064 <awe_vecCopy32>
 800c5d4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c5d6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c5d8:	6263      	str	r3, [r4, #36]	@ 0x24
 800c5da:	2200      	movs	r2, #0
 800c5dc:	62e2      	str	r2, [r4, #44]	@ 0x2c
 800c5de:	e7c6      	b.n	800c56e <awe_modDebounceProcess+0x22>

0800c5e0 <awe_modDebounceSet>:
 800c5e0:	b311      	cbz	r1, 800c628 <awe_modDebounceSet+0x48>
 800c5e2:	6903      	ldr	r3, [r0, #16]
 800c5e4:	ed90 7a08 	vldr	s14, [r0, #32]
 800c5e8:	681a      	ldr	r2, [r3, #0]
 800c5ea:	ed9f 0a10 	vldr	s0, [pc, #64]	@ 800c62c <awe_modDebounceSet+0x4c>
 800c5ee:	6993      	ldr	r3, [r2, #24]
 800c5f0:	edd2 6a04 	vldr	s13, [r2, #16]
 800c5f4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c5f8:	ee07 3a90 	vmov	s15, r3
 800c5fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c600:	ee27 7a00 	vmul.f32	s14, s14, s0
 800c604:	ee87 0aa6 	vdiv.f32	s0, s15, s13
 800c608:	b510      	push	{r4, lr}
 800c60a:	4604      	mov	r4, r0
 800c60c:	ee87 0a00 	vdiv.f32	s0, s14, s0
 800c610:	f022 fe52 	bl	802f2b8 <ceilf>
 800c614:	2000      	movs	r0, #0
 800c616:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800c61a:	ee10 3a10 	vmov	r3, s0
 800c61e:	3b01      	subs	r3, #1
 800c620:	bf48      	it	mi
 800c622:	2300      	movmi	r3, #0
 800c624:	62a3      	str	r3, [r4, #40]	@ 0x28
 800c626:	bd10      	pop	{r4, pc}
 800c628:	2000      	movs	r0, #0
 800c62a:	4770      	bx	lr
 800c62c:	3a83126f 	.word	0x3a83126f

0800c630 <awe_modDeinterleaveProcess>:
 800c630:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c634:	6905      	ldr	r5, [r0, #16]
 800c636:	682b      	ldr	r3, [r5, #0]
 800c638:	e9d3 2605 	ldrd	r2, r6, [r3, #20]
 800c63c:	68dc      	ldr	r4, [r3, #12]
 800c63e:	0113      	lsls	r3, r2, #4
 800c640:	b083      	sub	sp, #12
 800c642:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800c646:	f3c2 0709 	ubfx	r7, r2, #0, #10
 800c64a:	d412      	bmi.n	800c672 <awe_modDeinterleaveProcess+0x42>
 800c64c:	b177      	cbz	r7, 800c66c <awe_modDeinterleaveProcess+0x3c>
 800c64e:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800c652:	f855 3f04 	ldr.w	r3, [r5, #4]!
 800c656:	4620      	mov	r0, r4
 800c658:	68da      	ldr	r2, [r3, #12]
 800c65a:	9600      	str	r6, [sp, #0]
 800c65c:	2301      	movs	r3, #1
 800c65e:	4639      	mov	r1, r7
 800c660:	f00e fd00 	bl	801b064 <awe_vecCopy32>
 800c664:	4545      	cmp	r5, r8
 800c666:	f104 0404 	add.w	r4, r4, #4
 800c66a:	d1f2      	bne.n	800c652 <awe_modDeinterleaveProcess+0x22>
 800c66c:	b003      	add	sp, #12
 800c66e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c672:	0876      	lsrs	r6, r6, #1
 800c674:	2f00      	cmp	r7, #0
 800c676:	d0f9      	beq.n	800c66c <awe_modDeinterleaveProcess+0x3c>
 800c678:	eb05 0987 	add.w	r9, r5, r7, lsl #2
 800c67c:	ea4f 0847 	mov.w	r8, r7, lsl #1
 800c680:	f855 3f04 	ldr.w	r3, [r5, #4]!
 800c684:	68df      	ldr	r7, [r3, #12]
 800c686:	9600      	str	r6, [sp, #0]
 800c688:	4620      	mov	r0, r4
 800c68a:	463a      	mov	r2, r7
 800c68c:	2302      	movs	r3, #2
 800c68e:	4641      	mov	r1, r8
 800c690:	f00e fce8 	bl	801b064 <awe_vecCopy32>
 800c694:	1d20      	adds	r0, r4, #4
 800c696:	1d3a      	adds	r2, r7, #4
 800c698:	9600      	str	r6, [sp, #0]
 800c69a:	2302      	movs	r3, #2
 800c69c:	4641      	mov	r1, r8
 800c69e:	f00e fce1 	bl	801b064 <awe_vecCopy32>
 800c6a2:	45a9      	cmp	r9, r5
 800c6a4:	f104 0408 	add.w	r4, r4, #8
 800c6a8:	d1ea      	bne.n	800c680 <awe_modDeinterleaveProcess+0x50>
 800c6aa:	b003      	add	sp, #12
 800c6ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c6b0 <awe_modDelayConstructor>:
 800c6b0:	b570      	push	{r4, r5, r6, lr}
 800c6b2:	b082      	sub	sp, #8
 800c6b4:	4616      	mov	r6, r2
 800c6b6:	4605      	mov	r5, r0
 800c6b8:	9806      	ldr	r0, [sp, #24]
 800c6ba:	9300      	str	r3, [sp, #0]
 800c6bc:	460a      	mov	r2, r1
 800c6be:	9001      	str	r0, [sp, #4]
 800c6c0:	4633      	mov	r3, r6
 800c6c2:	4629      	mov	r1, r5
 800c6c4:	480d      	ldr	r0, [pc, #52]	@ (800c6fc <awe_modDelayConstructor+0x4c>)
 800c6c6:	f013 fd3d 	bl	8020144 <BaseClassModule_Constructor>
 800c6ca:	b198      	cbz	r0, 800c6f4 <awe_modDelayConstructor+0x44>
 800c6cc:	6831      	ldr	r1, [r6, #0]
 800c6ce:	6a03      	ldr	r3, [r0, #32]
 800c6d0:	e9d1 2105 	ldrd	r2, r1, [r1, #20]
 800c6d4:	9501      	str	r5, [sp, #4]
 800c6d6:	4604      	mov	r4, r0
 800c6d8:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800c6da:	9000      	str	r0, [sp, #0]
 800c6dc:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800c6e0:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800c6e4:	f104 0030 	add.w	r0, r4, #48	@ 0x30
 800c6e8:	f00e fef6 	bl	801b4d8 <awe_vecDelayConstructor>
 800c6ec:	b110      	cbz	r0, 800c6f4 <awe_modDelayConstructor+0x44>
 800c6ee:	4620      	mov	r0, r4
 800c6f0:	b002      	add	sp, #8
 800c6f2:	bd70      	pop	{r4, r5, r6, pc}
 800c6f4:	2400      	movs	r4, #0
 800c6f6:	4620      	mov	r0, r4
 800c6f8:	b002      	add	sp, #8
 800c6fa:	bd70      	pop	{r4, r5, r6, pc}
 800c6fc:	080341fc 	.word	0x080341fc

0800c700 <awe_modDelayProcess>:
 800c700:	b570      	push	{r4, r5, r6, lr}
 800c702:	6903      	ldr	r3, [r0, #16]
 800c704:	6a46      	ldr	r6, [r0, #36]	@ 0x24
 800c706:	e9d3 4200 	ldrd	r4, r2, [r3]
 800c70a:	b084      	sub	sp, #16
 800c70c:	f100 0528 	add.w	r5, r0, #40	@ 0x28
 800c710:	69a3      	ldr	r3, [r4, #24]
 800c712:	68e1      	ldr	r1, [r4, #12]
 800c714:	68d2      	ldr	r2, [r2, #12]
 800c716:	9503      	str	r5, [sp, #12]
 800c718:	6a05      	ldr	r5, [r0, #32]
 800c71a:	e9cd 5601 	strd	r5, r6, [sp, #4]
 800c71e:	6964      	ldr	r4, [r4, #20]
 800c720:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800c722:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800c726:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c72a:	9400      	str	r4, [sp, #0]
 800c72c:	f00e fee4 	bl	801b4f8 <awe_vecDelayProcess>
 800c730:	b004      	add	sp, #16
 800c732:	bd70      	pop	{r4, r5, r6, pc}

0800c734 <awe_modDelayMsecProcess>:
 800c734:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800c736:	6943      	ldr	r3, [r0, #20]
 800c738:	4718      	bx	r3
 800c73a:	bf00      	nop

0800c73c <awe_modDelayMsecSet>:
 800c73c:	6903      	ldr	r3, [r0, #16]
 800c73e:	ed90 7a09 	vldr	s14, [r0, #36]	@ 0x24
 800c742:	681b      	ldr	r3, [r3, #0]
 800c744:	ed9f 0a0c 	vldr	s0, [pc, #48]	@ 800c778 <awe_modDelayMsecSet+0x3c>
 800c748:	edd3 7a04 	vldr	s15, [r3, #16]
 800c74c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c750:	b510      	push	{r4, lr}
 800c752:	ee27 0a80 	vmul.f32	s0, s15, s0
 800c756:	4604      	mov	r4, r0
 800c758:	f022 fdf0 	bl	802f33c <floorf>
 800c75c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800c760:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800c762:	ee10 2a10 	vmov	r2, s0
 800c766:	6a0b      	ldr	r3, [r1, #32]
 800c768:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c76c:	4293      	cmp	r3, r2
 800c76e:	bfa8      	it	ge
 800c770:	4613      	movge	r3, r2
 800c772:	624b      	str	r3, [r1, #36]	@ 0x24
 800c774:	2000      	movs	r0, #0
 800c776:	bd10      	pop	{r4, pc}
 800c778:	3a83126f 	.word	0x3a83126f

0800c77c <awe_modDelayMsecConstructor>:
 800c77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c77e:	ed2d 8b02 	vpush	{d8}
 800c782:	b089      	sub	sp, #36	@ 0x24
 800c784:	4615      	mov	r5, r2
 800c786:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c788:	9300      	str	r3, [sp, #0]
 800c78a:	4601      	mov	r1, r0
 800c78c:	9201      	str	r2, [sp, #4]
 800c78e:	4606      	mov	r6, r0
 800c790:	462b      	mov	r3, r5
 800c792:	f240 1201 	movw	r2, #257	@ 0x101
 800c796:	481d      	ldr	r0, [pc, #116]	@ (800c80c <awe_modDelayMsecConstructor+0x90>)
 800c798:	f013 fcd4 	bl	8020144 <BaseClassModule_Constructor>
 800c79c:	4604      	mov	r4, r0
 800c79e:	b380      	cbz	r0, 800c802 <awe_modDelayMsecConstructor+0x86>
 800c7a0:	682f      	ldr	r7, [r5, #0]
 800c7a2:	ed90 0a08 	vldr	s0, [r0, #32]
 800c7a6:	ed97 8a04 	vldr	s16, [r7, #16]
 800c7aa:	eddf 8a19 	vldr	s17, [pc, #100]	@ 800c810 <awe_modDelayMsecConstructor+0x94>
 800c7ae:	ee28 0a00 	vmul.f32	s0, s16, s0
 800c7b2:	ee20 0a28 	vmul.f32	s0, s0, s17
 800c7b6:	f022 fdc1 	bl	802f33c <floorf>
 800c7ba:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 800c7be:	686b      	ldr	r3, [r5, #4]
 800c7c0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800c7c2:	9303      	str	r3, [sp, #12]
 800c7c4:	ee28 8a27 	vmul.f32	s16, s16, s15
 800c7c8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800c7cc:	ee28 8a28 	vmul.f32	s16, s16, s17
 800c7d0:	aa04      	add	r2, sp, #16
 800c7d2:	2304      	movs	r3, #4
 800c7d4:	eebd 8ac8 	vcvt.s32.f32	s16, s16
 800c7d8:	2500      	movs	r5, #0
 800c7da:	9201      	str	r2, [sp, #4]
 800c7dc:	9300      	str	r3, [sp, #0]
 800c7de:	9007      	str	r0, [sp, #28]
 800c7e0:	4631      	mov	r1, r6
 800c7e2:	ab02      	add	r3, sp, #8
 800c7e4:	f240 1201 	movw	r2, #257	@ 0x101
 800c7e8:	480a      	ldr	r0, [pc, #40]	@ (800c814 <awe_modDelayMsecConstructor+0x98>)
 800c7ea:	9702      	str	r7, [sp, #8]
 800c7ec:	ed8d 0a04 	vstr	s0, [sp, #16]
 800c7f0:	ed8d 8a05 	vstr	s16, [sp, #20]
 800c7f4:	9506      	str	r5, [sp, #24]
 800c7f6:	f013 fec7 	bl	8020588 <ClassModule_Constructor>
 800c7fa:	42a8      	cmp	r0, r5
 800c7fc:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800c7fe:	bf08      	it	eq
 800c800:	462c      	moveq	r4, r5
 800c802:	4620      	mov	r0, r4
 800c804:	b009      	add	sp, #36	@ 0x24
 800c806:	ecbd 8b02 	vpop	{d8}
 800c80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c80c:	08034224 	.word	0x08034224
 800c810:	3a83126f 	.word	0x3a83126f
 800c814:	beef0800 	.word	0xbeef0800

0800c818 <awe_modDivideProcess>:
 800c818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c81c:	6904      	ldr	r4, [r0, #16]
 800c81e:	7e02      	ldrb	r2, [r0, #24]
 800c820:	6821      	ldr	r1, [r4, #0]
 800c822:	f102 4580 	add.w	r5, r2, #1073741824	@ 0x40000000
 800c826:	e9d1 7305 	ldrd	r7, r3, [r1, #20]
 800c82a:	3d01      	subs	r5, #1
 800c82c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c830:	f854 1025 	ldr.w	r1, [r4, r5, lsl #2]
 800c834:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800c838:	00ad      	lsls	r5, r5, #2
 800c83a:	2a01      	cmp	r2, #1
 800c83c:	fb07 f703 	mul.w	r7, r7, r3
 800c840:	f8d1 800c 	ldr.w	r8, [r1, #12]
 800c844:	eb04 0605 	add.w	r6, r4, r5
 800c848:	d00d      	beq.n	800c866 <awe_modDivideProcess+0x4e>
 800c84a:	1f35      	subs	r5, r6, #4
 800c84c:	3c04      	subs	r4, #4
 800c84e:	f854 3f04 	ldr.w	r3, [r4, #4]!
 800c852:	f856 2f04 	ldr.w	r2, [r6, #4]!
 800c856:	68d8      	ldr	r0, [r3, #12]
 800c858:	68d2      	ldr	r2, [r2, #12]
 800c85a:	463b      	mov	r3, r7
 800c85c:	4641      	mov	r1, r8
 800c85e:	f00e fe6d 	bl	801b53c <awe_vecDivide2x1>
 800c862:	42a5      	cmp	r5, r4
 800c864:	d1f3      	bne.n	800c84e <awe_modDivideProcess+0x36>
 800c866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c86a:	bf00      	nop

0800c86c <awe_modExpProcess>:
 800c86c:	6903      	ldr	r3, [r0, #16]
 800c86e:	e9d3 2100 	ldrd	r2, r1, [r3]
 800c872:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c876:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800c87a:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800c87e:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800c882:	fb07 f703 	mul.w	r7, r7, r3
 800c886:	ed2d 8b06 	vpush	{d8-d10}
 800c88a:	68cd      	ldr	r5, [r1, #12]
 800c88c:	68d6      	ldr	r6, [r2, #12]
 800c88e:	2f00      	cmp	r7, #0
 800c890:	d07f      	beq.n	800c992 <awe_modExpProcess+0x126>
 800c892:	eddf aa45 	vldr	s21, [pc, #276]	@ 800c9a8 <awe_modExpProcess+0x13c>
 800c896:	ed9f aa45 	vldr	s20, [pc, #276]	@ 800c9ac <awe_modExpProcess+0x140>
 800c89a:	eddf 9a45 	vldr	s19, [pc, #276]	@ 800c9b0 <awe_modExpProcess+0x144>
 800c89e:	ed9f 9a45 	vldr	s18, [pc, #276]	@ 800c9b4 <awe_modExpProcess+0x148>
 800c8a2:	eddf 8a45 	vldr	s17, [pc, #276]	@ 800c9b8 <awe_modExpProcess+0x14c>
 800c8a6:	ed9f 8a45 	vldr	s16, [pc, #276]	@ 800c9bc <awe_modExpProcess+0x150>
 800c8aa:	2400      	movs	r4, #0
 800c8ac:	e052      	b.n	800c954 <awe_modExpProcess+0xe8>
 800c8ae:	ed9f 7a44 	vldr	s14, [pc, #272]	@ 800c9c0 <awe_modExpProcess+0x154>
 800c8b2:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c8b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8ba:	d463      	bmi.n	800c984 <awe_modExpProcess+0x118>
 800c8bc:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 800c9c4 <awe_modExpProcess+0x158>
 800c8c0:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c8c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8c8:	da67      	bge.n	800c99a <awe_modExpProcess+0x12e>
 800c8ca:	f04f 0800 	mov.w	r8, #0
 800c8ce:	ee27 7aaa 	vmul.f32	s14, s15, s21
 800c8d2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800c8d6:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 800c8da:	ee16 3a90 	vmov	r3, s13
 800c8de:	2b00      	cmp	r3, #0
 800c8e0:	bfb8      	it	lt
 800c8e2:	f103 33ff 	addlt.w	r3, r3, #4294967295
 800c8e6:	ee06 3a90 	vmov	s13, r3
 800c8ea:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c8ee:	1c58      	adds	r0, r3, #1
 800c8f0:	ee37 7a66 	vsub.f32	s14, s14, s13
 800c8f4:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800c8f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8fc:	db04      	blt.n	800c908 <awe_modExpProcess+0x9c>
 800c8fe:	ee07 0a10 	vmov	s14, r0
 800c902:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c906:	1c98      	adds	r0, r3, #2
 800c908:	eee6 7aca 	vfms.f32	s15, s13, s20
 800c90c:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 800c910:	eee6 7aa9 	vfma.f32	s15, s13, s19
 800c914:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800c918:	ee67 6aa7 	vmul.f32	s13, s15, s15
 800c91c:	eef0 5a46 	vmov.f32	s11, s12
 800c920:	eea6 7a89 	vfma.f32	s14, s13, s18
 800c924:	eee6 5aa8 	vfma.f32	s11, s13, s17
 800c928:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c92c:	ee35 7ae7 	vsub.f32	s14, s11, s15
 800c930:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800c934:	ee30 0a06 	vadd.f32	s0, s0, s12
 800c938:	f021 f995 	bl	802dc66 <ldexpf>
 800c93c:	f1b8 0f00 	cmp.w	r8, #0
 800c940:	d003      	beq.n	800c94a <awe_modExpProcess+0xde>
 800c942:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c946:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800c94a:	3401      	adds	r4, #1
 800c94c:	42a7      	cmp	r7, r4
 800c94e:	eca5 0a01 	vstmia	r5!, {s0}
 800c952:	d01e      	beq.n	800c992 <awe_modExpProcess+0x126>
 800c954:	ecf6 7a01 	vldmia	r6!, {s15}
 800c958:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c95c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c960:	daa5      	bge.n	800c8ae <awe_modExpProcess+0x42>
 800c962:	eef4 7ac8 	vcmpe.f32	s15, s16
 800c966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c96a:	dc0b      	bgt.n	800c984 <awe_modExpProcess+0x118>
 800c96c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 800c9c8 <awe_modExpProcess+0x15c>
 800c970:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c974:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c978:	d912      	bls.n	800c9a0 <awe_modExpProcess+0x134>
 800c97a:	eef1 7a67 	vneg.f32	s15, s15
 800c97e:	f04f 0801 	mov.w	r8, #1
 800c982:	e7a4      	b.n	800c8ce <awe_modExpProcess+0x62>
 800c984:	3401      	adds	r4, #1
 800c986:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800c98a:	42a7      	cmp	r7, r4
 800c98c:	eca5 0a01 	vstmia	r5!, {s0}
 800c990:	d1e0      	bne.n	800c954 <awe_modExpProcess+0xe8>
 800c992:	ecbd 8b06 	vpop	{d8-d10}
 800c996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c99a:	ed9f 0a0c 	vldr	s0, [pc, #48]	@ 800c9cc <awe_modExpProcess+0x160>
 800c99e:	e7d4      	b.n	800c94a <awe_modExpProcess+0xde>
 800c9a0:	ed9f 0a0b 	vldr	s0, [pc, #44]	@ 800c9d0 <awe_modExpProcess+0x164>
 800c9a4:	e7d1      	b.n	800c94a <awe_modExpProcess+0xde>
 800c9a6:	bf00      	nop
 800c9a8:	3fb8aa3b 	.word	0x3fb8aa3b
 800c9ac:	3f318000 	.word	0x3f318000
 800c9b0:	395e8083 	.word	0x395e8083
 800c9b4:	3b885308 	.word	0x3b885308
 800c9b8:	3d4cbf5b 	.word	0x3d4cbf5b
 800c9bc:	b3d6bf95 	.word	0xb3d6bf95
 800c9c0:	33d6bf95 	.word	0x33d6bf95
 800c9c4:	42af5c72 	.word	0x42af5c72
 800c9c8:	c2af5c72 	.word	0xc2af5c72
 800c9cc:	7eb48e52 	.word	0x7eb48e52
 800c9d0:	00000000 	.word	0x00000000

0800c9d4 <awe_modFIRConstructor>:
 800c9d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9d8:	b086      	sub	sp, #24
 800c9da:	4617      	mov	r7, r2
 800c9dc:	4680      	mov	r8, r0
 800c9de:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800c9e0:	9300      	str	r3, [sp, #0]
 800c9e2:	460a      	mov	r2, r1
 800c9e4:	9001      	str	r0, [sp, #4]
 800c9e6:	463b      	mov	r3, r7
 800c9e8:	4641      	mov	r1, r8
 800c9ea:	4821      	ldr	r0, [pc, #132]	@ (800ca70 <awe_modFIRConstructor+0x9c>)
 800c9ec:	f013 fbaa 	bl	8020144 <BaseClassModule_Constructor>
 800c9f0:	683a      	ldr	r2, [r7, #0]
 800c9f2:	e9d2 6505 	ldrd	r6, r5, [r2, #20]
 800c9f6:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800c9fa:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800c9fe:	b388      	cbz	r0, 800ca64 <awe_modFIRConstructor+0x90>
 800ca00:	4604      	mov	r4, r0
 800ca02:	6a00      	ldr	r0, [r0, #32]
 800ca04:	3001      	adds	r0, #1
 800ca06:	0080      	lsls	r0, r0, #2
 800ca08:	4642      	mov	r2, r8
 800ca0a:	2123      	movs	r1, #35	@ 0x23
 800ca0c:	f012 fe46 	bl	801f69c <awe_fwMalloc>
 800ca10:	62a0      	str	r0, [r4, #40]	@ 0x28
 800ca12:	b338      	cbz	r0, 800ca64 <awe_modFIRConstructor+0x90>
 800ca14:	6a23      	ldr	r3, [r4, #32]
 800ca16:	442b      	add	r3, r5
 800ca18:	3303      	adds	r3, #3
 800ca1a:	fb06 f003 	mul.w	r0, r6, r3
 800ca1e:	0080      	lsls	r0, r0, #2
 800ca20:	4642      	mov	r2, r8
 800ca22:	f240 2131 	movw	r1, #561	@ 0x231
 800ca26:	f012 fe39 	bl	801f69c <awe_fwMalloc>
 800ca2a:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800ca2c:	b1d0      	cbz	r0, 800ca64 <awe_modFIRConstructor+0x90>
 800ca2e:	e9d7 5200 	ldrd	r5, r2, [r7]
 800ca32:	69ab      	ldr	r3, [r5, #24]
 800ca34:	68d2      	ldr	r2, [r2, #12]
 800ca36:	68e9      	ldr	r1, [r5, #12]
 800ca38:	f8cd 8010 	str.w	r8, [sp, #16]
 800ca3c:	6a26      	ldr	r6, [r4, #32]
 800ca3e:	9603      	str	r6, [sp, #12]
 800ca40:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800ca42:	e9cd 0601 	strd	r0, r6, [sp, #4]
 800ca46:	6968      	ldr	r0, [r5, #20]
 800ca48:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ca4c:	9000      	str	r0, [sp, #0]
 800ca4e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800ca52:	f104 0030 	add.w	r0, r4, #48	@ 0x30
 800ca56:	f00e ff8b 	bl	801b970 <awe_vecFIRConstructor>
 800ca5a:	b118      	cbz	r0, 800ca64 <awe_modFIRConstructor+0x90>
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	b006      	add	sp, #24
 800ca60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca64:	2400      	movs	r4, #0
 800ca66:	4620      	mov	r0, r4
 800ca68:	b006      	add	sp, #24
 800ca6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca6e:	bf00      	nop
 800ca70:	0803429c 	.word	0x0803429c

0800ca74 <awe_modFIRProcess>:
 800ca74:	6902      	ldr	r2, [r0, #16]
 800ca76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca7a:	e9d2 3200 	ldrd	r3, r2, [r2]
 800ca7e:	6a04      	ldr	r4, [r0, #32]
 800ca80:	68d2      	ldr	r2, [r2, #12]
 800ca82:	68d9      	ldr	r1, [r3, #12]
 800ca84:	e9d3 6505 	ldrd	r6, r5, [r3, #20]
 800ca88:	4607      	mov	r7, r0
 800ca8a:	b088      	sub	sp, #32
 800ca8c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800ca8e:	9007      	str	r0, [sp, #28]
 800ca90:	2c01      	cmp	r4, #1
 800ca92:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800ca96:	f3c5 0810 	ubfx	r8, r5, #0, #17
 800ca9a:	f8d7 9028 	ldr.w	r9, [r7, #40]	@ 0x28
 800ca9e:	d118      	bne.n	800cad2 <awe_modFIRProcess+0x5e>
 800caa0:	b19e      	cbz	r6, 800caca <awe_modFIRProcess+0x56>
 800caa2:	460c      	mov	r4, r1
 800caa4:	4615      	mov	r5, r2
 800caa6:	eb01 0a86 	add.w	sl, r1, r6, lsl #2
 800caaa:	ed99 0a00 	vldr	s0, [r9]
 800caae:	f8cd 8000 	str.w	r8, [sp]
 800cab2:	462a      	mov	r2, r5
 800cab4:	4620      	mov	r0, r4
 800cab6:	4633      	mov	r3, r6
 800cab8:	4631      	mov	r1, r6
 800caba:	3404      	adds	r4, #4
 800cabc:	f010 fc3a 	bl	801d334 <awe_vecScale>
 800cac0:	45a2      	cmp	sl, r4
 800cac2:	f105 0504 	add.w	r5, r5, #4
 800cac6:	d1f0      	bne.n	800caaa <awe_modFIRProcess+0x36>
 800cac8:	9807      	ldr	r0, [sp, #28]
 800caca:	6278      	str	r0, [r7, #36]	@ 0x24
 800cacc:	b008      	add	sp, #32
 800cace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cad2:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800cad4:	9403      	str	r4, [sp, #12]
 800cad6:	f8cd 9004 	str.w	r9, [sp, #4]
 800cada:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
 800cadc:	9402      	str	r4, [sp, #8]
 800cade:	ad07      	add	r5, sp, #28
 800cae0:	9600      	str	r6, [sp, #0]
 800cae2:	4643      	mov	r3, r8
 800cae4:	9504      	str	r5, [sp, #16]
 800cae6:	f00e ff45 	bl	801b974 <awe_vecFIRProcess>
 800caea:	9807      	ldr	r0, [sp, #28]
 800caec:	e7ed      	b.n	800caca <awe_modFIRProcess+0x56>
 800caee:	bf00      	nop

0800caf0 <awe_modFIRSet>:
 800caf0:	b909      	cbnz	r1, 800caf6 <awe_modFIRSet+0x6>
 800caf2:	2000      	movs	r0, #0
 800caf4:	4770      	bx	lr
 800caf6:	b530      	push	{r4, r5, lr}
 800caf8:	6902      	ldr	r2, [r0, #16]
 800cafa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cafc:	6811      	ldr	r1, [r2, #0]
 800cafe:	4604      	mov	r4, r0
 800cb00:	e9d1 2105 	ldrd	r2, r1, [r1, #20]
 800cb04:	b083      	sub	sp, #12
 800cb06:	6a25      	ldr	r5, [r4, #32]
 800cb08:	6aa4      	ldr	r4, [r4, #40]	@ 0x28
 800cb0a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800cb0c:	9501      	str	r5, [sp, #4]
 800cb0e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800cb12:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800cb16:	9400      	str	r4, [sp, #0]
 800cb18:	f00e ff60 	bl	801b9dc <awe_vecFIRSet>
 800cb1c:	2000      	movs	r0, #0
 800cb1e:	b003      	add	sp, #12
 800cb20:	bd30      	pop	{r4, r5, pc}
 800cb22:	bf00      	nop

0800cb24 <awe_modFIRSmoothedConstructor>:
 800cb24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb28:	b086      	sub	sp, #24
 800cb2a:	4690      	mov	r8, r2
 800cb2c:	4607      	mov	r7, r0
 800cb2e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800cb30:	9300      	str	r3, [sp, #0]
 800cb32:	460a      	mov	r2, r1
 800cb34:	4643      	mov	r3, r8
 800cb36:	9001      	str	r0, [sp, #4]
 800cb38:	4639      	mov	r1, r7
 800cb3a:	4826      	ldr	r0, [pc, #152]	@ (800cbd4 <awe_modFIRSmoothedConstructor+0xb0>)
 800cb3c:	f013 fb02 	bl	8020144 <BaseClassModule_Constructor>
 800cb40:	f8d8 3000 	ldr.w	r3, [r8]
 800cb44:	e9d3 6505 	ldrd	r6, r5, [r3, #20]
 800cb48:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800cb4c:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800cb50:	2800      	cmp	r0, #0
 800cb52:	d039      	beq.n	800cbc8 <awe_modFIRSmoothedConstructor+0xa4>
 800cb54:	4604      	mov	r4, r0
 800cb56:	6a00      	ldr	r0, [r0, #32]
 800cb58:	3001      	adds	r0, #1
 800cb5a:	0080      	lsls	r0, r0, #2
 800cb5c:	463a      	mov	r2, r7
 800cb5e:	2123      	movs	r1, #35	@ 0x23
 800cb60:	f012 fd9c 	bl	801f69c <awe_fwMalloc>
 800cb64:	6320      	str	r0, [r4, #48]	@ 0x30
 800cb66:	b378      	cbz	r0, 800cbc8 <awe_modFIRSmoothedConstructor+0xa4>
 800cb68:	6a20      	ldr	r0, [r4, #32]
 800cb6a:	3001      	adds	r0, #1
 800cb6c:	0080      	lsls	r0, r0, #2
 800cb6e:	463a      	mov	r2, r7
 800cb70:	2123      	movs	r1, #35	@ 0x23
 800cb72:	f012 fd93 	bl	801f69c <awe_fwMalloc>
 800cb76:	6360      	str	r0, [r4, #52]	@ 0x34
 800cb78:	b330      	cbz	r0, 800cbc8 <awe_modFIRSmoothedConstructor+0xa4>
 800cb7a:	6a20      	ldr	r0, [r4, #32]
 800cb7c:	4428      	add	r0, r5
 800cb7e:	3003      	adds	r0, #3
 800cb80:	fb06 f000 	mul.w	r0, r6, r0
 800cb84:	0080      	lsls	r0, r0, #2
 800cb86:	463a      	mov	r2, r7
 800cb88:	f240 2131 	movw	r1, #561	@ 0x231
 800cb8c:	f012 fd86 	bl	801f69c <awe_fwMalloc>
 800cb90:	63a0      	str	r0, [r4, #56]	@ 0x38
 800cb92:	b1c8      	cbz	r0, 800cbc8 <awe_modFIRSmoothedConstructor+0xa4>
 800cb94:	e9d8 5200 	ldrd	r5, r2, [r8]
 800cb98:	69ab      	ldr	r3, [r5, #24]
 800cb9a:	68d2      	ldr	r2, [r2, #12]
 800cb9c:	68e9      	ldr	r1, [r5, #12]
 800cb9e:	9704      	str	r7, [sp, #16]
 800cba0:	6a26      	ldr	r6, [r4, #32]
 800cba2:	9603      	str	r6, [sp, #12]
 800cba4:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 800cba6:	e9cd 0601 	strd	r0, r6, [sp, #4]
 800cbaa:	6968      	ldr	r0, [r5, #20]
 800cbac:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800cbb0:	9000      	str	r0, [sp, #0]
 800cbb2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800cbb6:	f104 003c 	add.w	r0, r4, #60	@ 0x3c
 800cbba:	f00e fed9 	bl	801b970 <awe_vecFIRConstructor>
 800cbbe:	b118      	cbz	r0, 800cbc8 <awe_modFIRSmoothedConstructor+0xa4>
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	b006      	add	sp, #24
 800cbc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbc8:	2400      	movs	r4, #0
 800cbca:	4620      	mov	r0, r4
 800cbcc:	b006      	add	sp, #24
 800cbce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbd2:	bf00      	nop
 800cbd4:	080342c4 	.word	0x080342c4

0800cbd8 <awe_modFIRSmoothedProcess>:
 800cbd8:	6902      	ldr	r2, [r0, #16]
 800cbda:	f8d0 c020 	ldr.w	ip, [r0, #32]
 800cbde:	ed90 6a0a 	vldr	s12, [r0, #40]	@ 0x28
 800cbe2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cbe6:	e9d2 3200 	ldrd	r3, r2, [r2]
 800cbea:	e9d3 5705 	ldrd	r5, r7, [r3, #20]
 800cbee:	b088      	sub	sp, #32
 800cbf0:	f8d0 e02c 	ldr.w	lr, [r0, #44]	@ 0x2c
 800cbf4:	68d2      	ldr	r2, [r2, #12]
 800cbf6:	68d9      	ldr	r1, [r3, #12]
 800cbf8:	f8cd e01c 	str.w	lr, [sp, #28]
 800cbfc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800cc00:	f100 0430 	add.w	r4, r0, #48	@ 0x30
 800cc04:	f1bc 0f00 	cmp.w	ip, #0
 800cc08:	4606      	mov	r6, r0
 800cc0a:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800cc0e:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800cc12:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800cc16:	e894 0310 	ldmia.w	r4, {r4, r8, r9}
 800cc1a:	dd2b      	ble.n	800cc74 <awe_modFIRSmoothedProcess+0x9c>
 800cc1c:	4643      	mov	r3, r8
 800cc1e:	eb08 008c 	add.w	r0, r8, ip, lsl #2
 800cc22:	ecf4 7a01 	vldmia	r4!, {s15}
 800cc26:	ed93 7a00 	vldr	s14, [r3]
 800cc2a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800cc2e:	eee7 7a26 	vfma.f32	s15, s14, s13
 800cc32:	ece3 7a01 	vstmia	r3!, {s15}
 800cc36:	4283      	cmp	r3, r0
 800cc38:	d1f3      	bne.n	800cc22 <awe_modFIRSmoothedProcess+0x4a>
 800cc3a:	f1bc 0f01 	cmp.w	ip, #1
 800cc3e:	d119      	bne.n	800cc74 <awe_modFIRSmoothedProcess+0x9c>
 800cc40:	b19d      	cbz	r5, 800cc6a <awe_modFIRSmoothedProcess+0x92>
 800cc42:	460c      	mov	r4, r1
 800cc44:	4691      	mov	r9, r2
 800cc46:	eb01 0a85 	add.w	sl, r1, r5, lsl #2
 800cc4a:	ed98 0a00 	vldr	s0, [r8]
 800cc4e:	9700      	str	r7, [sp, #0]
 800cc50:	464a      	mov	r2, r9
 800cc52:	4620      	mov	r0, r4
 800cc54:	462b      	mov	r3, r5
 800cc56:	4629      	mov	r1, r5
 800cc58:	3404      	adds	r4, #4
 800cc5a:	f010 fb6b 	bl	801d334 <awe_vecScale>
 800cc5e:	45a2      	cmp	sl, r4
 800cc60:	f109 0904 	add.w	r9, r9, #4
 800cc64:	d1f1      	bne.n	800cc4a <awe_modFIRSmoothedProcess+0x72>
 800cc66:	f8dd e01c 	ldr.w	lr, [sp, #28]
 800cc6a:	f8c6 e02c 	str.w	lr, [r6, #44]	@ 0x2c
 800cc6e:	b008      	add	sp, #32
 800cc70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cc74:	ac07      	add	r4, sp, #28
 800cc76:	6bf0      	ldr	r0, [r6, #60]	@ 0x3c
 800cc78:	f8cd c00c 	str.w	ip, [sp, #12]
 800cc7c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cc80:	9500      	str	r5, [sp, #0]
 800cc82:	463b      	mov	r3, r7
 800cc84:	9404      	str	r4, [sp, #16]
 800cc86:	f00e fe75 	bl	801b974 <awe_vecFIRProcess>
 800cc8a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 800cc8e:	e7ec      	b.n	800cc6a <awe_modFIRSmoothedProcess+0x92>

0800cc90 <awe_modFIRSmoothedSet>:
 800cc90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc94:	6906      	ldr	r6, [r0, #16]
 800cc96:	6b07      	ldr	r7, [r0, #48]	@ 0x30
 800cc98:	6833      	ldr	r3, [r6, #0]
 800cc9a:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800cc9e:	699d      	ldr	r5, [r3, #24]
 800cca0:	058a      	lsls	r2, r1, #22
 800cca2:	b082      	sub	sp, #8
 800cca4:	4604      	mov	r4, r0
 800cca6:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800ccaa:	d509      	bpl.n	800ccc0 <awe_modFIRSmoothedSet+0x30>
 800ccac:	edd3 0a04 	vldr	s1, [r3, #16]
 800ccb0:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800ccb4:	4628      	mov	r0, r5
 800ccb6:	f016 fe73 	bl	80239a0 <design_smoother>
 800ccba:	6833      	ldr	r3, [r6, #0]
 800ccbc:	ed84 0a0a 	vstr	s0, [r4, #40]	@ 0x28
 800ccc0:	695a      	ldr	r2, [r3, #20]
 800ccc2:	4629      	mov	r1, r5
 800ccc4:	e9d4 300e 	ldrd	r3, r0, [r4, #56]	@ 0x38
 800ccc8:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800cccc:	f8cd 8004 	str.w	r8, [sp, #4]
 800ccd0:	9700      	str	r7, [sp, #0]
 800ccd2:	f00e fe83 	bl	801b9dc <awe_vecFIRSet>
 800ccd6:	2000      	movs	r0, #0
 800ccd8:	b002      	add	sp, #8
 800ccda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccde:	bf00      	nop

0800cce0 <awe_modFloorProcess>:
 800cce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cce2:	6903      	ldr	r3, [r0, #16]
 800cce4:	e9d3 2100 	ldrd	r2, r1, [r3]
 800cce8:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800ccec:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800ccf0:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800ccf4:	fb07 f703 	mul.w	r7, r7, r3
 800ccf8:	68ce      	ldr	r6, [r1, #12]
 800ccfa:	68d5      	ldr	r5, [r2, #12]
 800ccfc:	b14f      	cbz	r7, 800cd12 <awe_modFloorProcess+0x32>
 800ccfe:	2400      	movs	r4, #0
 800cd00:	ecb5 0a01 	vldmia	r5!, {s0}
 800cd04:	f022 fb1a 	bl	802f33c <floorf>
 800cd08:	3401      	adds	r4, #1
 800cd0a:	42a7      	cmp	r7, r4
 800cd0c:	eca6 0a01 	vstmia	r6!, {s0}
 800cd10:	d1f6      	bne.n	800cd00 <awe_modFloorProcess+0x20>
 800cd12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cd14 <awe_modFmodProcess>:
 800cd14:	6900      	ldr	r0, [r0, #16]
 800cd16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd1a:	e9d0 1400 	ldrd	r1, r4, [r0]
 800cd1e:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 800cd22:	6880      	ldr	r0, [r0, #8]
 800cd24:	68cd      	ldr	r5, [r1, #12]
 800cd26:	68e6      	ldr	r6, [r4, #12]
 800cd28:	68c7      	ldr	r7, [r0, #12]
 800cd2a:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800cd2e:	f3c3 0809 	ubfx	r8, r3, #0, #10
 800cd32:	fb08 f802 	mul.w	r8, r8, r2
 800cd36:	f1b8 0f00 	cmp.w	r8, #0
 800cd3a:	d00b      	beq.n	800cd54 <awe_modFmodProcess+0x40>
 800cd3c:	2400      	movs	r4, #0
 800cd3e:	ecf6 0a01 	vldmia	r6!, {s1}
 800cd42:	ecb5 0a01 	vldmia	r5!, {s0}
 800cd46:	f021 fd8f 	bl	802e868 <fmodf>
 800cd4a:	3401      	adds	r4, #1
 800cd4c:	45a0      	cmp	r8, r4
 800cd4e:	eca7 0a01 	vstmia	r7!, {s0}
 800cd52:	d1f4      	bne.n	800cd3e <awe_modFmodProcess+0x2a>
 800cd54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cd58 <awe_modFrexpProcess>:
 800cd58:	6900      	ldr	r0, [r0, #16]
 800cd5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd5e:	e9d0 1400 	ldrd	r1, r4, [r0]
 800cd62:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 800cd66:	6880      	ldr	r0, [r0, #8]
 800cd68:	68cd      	ldr	r5, [r1, #12]
 800cd6a:	68e6      	ldr	r6, [r4, #12]
 800cd6c:	68c7      	ldr	r7, [r0, #12]
 800cd6e:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800cd72:	f3c3 0809 	ubfx	r8, r3, #0, #10
 800cd76:	fb08 f802 	mul.w	r8, r8, r2
 800cd7a:	b082      	sub	sp, #8
 800cd7c:	f1b8 0f00 	cmp.w	r8, #0
 800cd80:	d00d      	beq.n	800cd9e <awe_modFrexpProcess+0x46>
 800cd82:	2400      	movs	r4, #0
 800cd84:	a801      	add	r0, sp, #4
 800cd86:	ecb5 0a01 	vldmia	r5!, {s0}
 800cd8a:	f020 ff93 	bl	802dcb4 <frexpf>
 800cd8e:	3401      	adds	r4, #1
 800cd90:	9b01      	ldr	r3, [sp, #4]
 800cd92:	eca6 0a01 	vstmia	r6!, {s0}
 800cd96:	45a0      	cmp	r8, r4
 800cd98:	f847 3b04 	str.w	r3, [r7], #4
 800cd9c:	d1f2      	bne.n	800cd84 <awe_modFrexpProcess+0x2c>
 800cd9e:	b002      	add	sp, #8
 800cda0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cda4 <awe_modGPIOConstructor>:
 800cda4:	b530      	push	{r4, r5, lr}
 800cda6:	b083      	sub	sp, #12
 800cda8:	4605      	mov	r5, r0
 800cdaa:	9806      	ldr	r0, [sp, #24]
 800cdac:	e9cd 3000 	strd	r3, r0, [sp]
 800cdb0:	4613      	mov	r3, r2
 800cdb2:	4810      	ldr	r0, [pc, #64]	@ (800cdf4 <awe_modGPIOConstructor+0x50>)
 800cdb4:	460a      	mov	r2, r1
 800cdb6:	4629      	mov	r1, r5
 800cdb8:	f013 f9c4 	bl	8020144 <BaseClassModule_Constructor>
 800cdbc:	b1a8      	cbz	r0, 800cdea <awe_modGPIOConstructor+0x46>
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	6a00      	ldr	r0, [r0, #32]
 800cdc2:	462a      	mov	r2, r5
 800cdc4:	0080      	lsls	r0, r0, #2
 800cdc6:	f240 2131 	movw	r1, #561	@ 0x231
 800cdca:	f012 fc67 	bl	801f69c <awe_fwMalloc>
 800cdce:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800cdd0:	b158      	cbz	r0, 800cdea <awe_modGPIOConstructor+0x46>
 800cdd2:	6a20      	ldr	r0, [r4, #32]
 800cdd4:	462a      	mov	r2, r5
 800cdd6:	0080      	lsls	r0, r0, #2
 800cdd8:	f240 2131 	movw	r1, #561	@ 0x231
 800cddc:	f012 fc5e 	bl	801f69c <awe_fwMalloc>
 800cde0:	6320      	str	r0, [r4, #48]	@ 0x30
 800cde2:	b110      	cbz	r0, 800cdea <awe_modGPIOConstructor+0x46>
 800cde4:	4620      	mov	r0, r4
 800cde6:	b003      	add	sp, #12
 800cde8:	bd30      	pop	{r4, r5, pc}
 800cdea:	2400      	movs	r4, #0
 800cdec:	4620      	mov	r0, r4
 800cdee:	b003      	add	sp, #12
 800cdf0:	bd30      	pop	{r4, r5, pc}
 800cdf2:	bf00      	nop
 800cdf4:	08034364 	.word	0x08034364

0800cdf8 <awe_modGPIOProcess>:
 800cdf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdfa:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 800cdfc:	6906      	ldr	r6, [r0, #16]
 800cdfe:	6a02      	ldr	r2, [r0, #32]
 800ce00:	b083      	sub	sp, #12
 800ce02:	4605      	mov	r5, r0
 800ce04:	b1ec      	cbz	r4, 800ce42 <awe_modGPIOProcess+0x4a>
 800ce06:	2a00      	cmp	r2, #0
 800ce08:	dd19      	ble.n	800ce3e <awe_modGPIOProcess+0x46>
 800ce0a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800ce0c:	3e04      	subs	r6, #4
 800ce0e:	2400      	movs	r4, #0
 800ce10:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800ce14:	68db      	ldr	r3, [r3, #12]
 800ce16:	681b      	ldr	r3, [r3, #0]
 800ce18:	9301      	str	r3, [sp, #4]
 800ce1a:	f850 7024 	ldr.w	r7, [r0, r4, lsl #2]
 800ce1e:	42bb      	cmp	r3, r7
 800ce20:	4619      	mov	r1, r3
 800ce22:	d022      	beq.n	800ce6a <awe_modGPIOProcess+0x72>
 800ce24:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800ce26:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800ce2a:	f7f5 fc47 	bl	80026bc <awe_pltGPIOSetPin>
 800ce2e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ce30:	9b01      	ldr	r3, [sp, #4]
 800ce32:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
 800ce36:	6a2a      	ldr	r2, [r5, #32]
 800ce38:	3401      	adds	r4, #1
 800ce3a:	4294      	cmp	r4, r2
 800ce3c:	dbe8      	blt.n	800ce10 <awe_modGPIOProcess+0x18>
 800ce3e:	b003      	add	sp, #12
 800ce40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce42:	2a00      	cmp	r2, #0
 800ce44:	ddfb      	ble.n	800ce3e <awe_modGPIOProcess+0x46>
 800ce46:	3e04      	subs	r6, #4
 800ce48:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800ce4a:	a901      	add	r1, sp, #4
 800ce4c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800ce50:	f7f5 fc6e 	bl	8002730 <awe_pltGPIOGetPin>
 800ce54:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800ce58:	9a01      	ldr	r2, [sp, #4]
 800ce5a:	68db      	ldr	r3, [r3, #12]
 800ce5c:	601a      	str	r2, [r3, #0]
 800ce5e:	6a2b      	ldr	r3, [r5, #32]
 800ce60:	3401      	adds	r4, #1
 800ce62:	42a3      	cmp	r3, r4
 800ce64:	dcf0      	bgt.n	800ce48 <awe_modGPIOProcess+0x50>
 800ce66:	b003      	add	sp, #12
 800ce68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce6a:	3401      	adds	r4, #1
 800ce6c:	4294      	cmp	r4, r2
 800ce6e:	dbcf      	blt.n	800ce10 <awe_modGPIOProcess+0x18>
 800ce70:	b003      	add	sp, #12
 800ce72:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ce74 <awe_modGPIOSet>:
 800ce74:	b1b1      	cbz	r1, 800cea4 <awe_modGPIOSet+0x30>
 800ce76:	6a03      	ldr	r3, [r0, #32]
 800ce78:	2b00      	cmp	r3, #0
 800ce7a:	dd13      	ble.n	800cea4 <awe_modGPIOSet+0x30>
 800ce7c:	b570      	push	{r4, r5, r6, lr}
 800ce7e:	4605      	mov	r5, r0
 800ce80:	2400      	movs	r4, #0
 800ce82:	f04f 36ff 	mov.w	r6, #4294967295
 800ce86:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800ce88:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800ce8a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800ce8e:	f7f5 fbbf 	bl	8002610 <awe_pltGPIOSetPinDir>
 800ce92:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800ce94:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800ce98:	6a2b      	ldr	r3, [r5, #32]
 800ce9a:	3401      	adds	r4, #1
 800ce9c:	429c      	cmp	r4, r3
 800ce9e:	dbf2      	blt.n	800ce86 <awe_modGPIOSet+0x12>
 800cea0:	2000      	movs	r0, #0
 800cea2:	bd70      	pop	{r4, r5, r6, pc}
 800cea4:	2000      	movs	r0, #0
 800cea6:	4770      	bx	lr

0800cea8 <awe_modGraphicEQBandConstructor>:
 800cea8:	b570      	push	{r4, r5, r6, lr}
 800ceaa:	b082      	sub	sp, #8
 800ceac:	4616      	mov	r6, r2
 800ceae:	4605      	mov	r5, r0
 800ceb0:	9806      	ldr	r0, [sp, #24]
 800ceb2:	9300      	str	r3, [sp, #0]
 800ceb4:	460a      	mov	r2, r1
 800ceb6:	9001      	str	r0, [sp, #4]
 800ceb8:	4633      	mov	r3, r6
 800ceba:	4629      	mov	r1, r5
 800cebc:	4817      	ldr	r0, [pc, #92]	@ (800cf1c <awe_modGraphicEQBandConstructor+0x74>)
 800cebe:	f013 f941 	bl	8020144 <BaseClassModule_Constructor>
 800cec2:	b338      	cbz	r0, 800cf14 <awe_modGraphicEQBandConstructor+0x6c>
 800cec4:	4604      	mov	r4, r0
 800cec6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800cec8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800cecc:	0080      	lsls	r0, r0, #2
 800cece:	462a      	mov	r2, r5
 800ced0:	f240 2131 	movw	r1, #561	@ 0x231
 800ced4:	f012 fbe2 	bl	801f69c <awe_fwMalloc>
 800ced8:	63a0      	str	r0, [r4, #56]	@ 0x38
 800ceda:	b1d8      	cbz	r0, 800cf14 <awe_modGraphicEQBandConstructor+0x6c>
 800cedc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800cede:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800cee2:	0080      	lsls	r0, r0, #2
 800cee4:	462a      	mov	r2, r5
 800cee6:	f240 2131 	movw	r1, #561	@ 0x231
 800ceea:	f012 fbd7 	bl	801f69c <awe_fwMalloc>
 800ceee:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800cef0:	b180      	cbz	r0, 800cf14 <awe_modGraphicEQBandConstructor+0x6c>
 800cef2:	6833      	ldr	r3, [r6, #0]
 800cef4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800cef6:	695b      	ldr	r3, [r3, #20]
 800cef8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800cefc:	00db      	lsls	r3, r3, #3
 800cefe:	462a      	mov	r2, r5
 800cf00:	fb00 f003 	mul.w	r0, r0, r3
 800cf04:	2123      	movs	r1, #35	@ 0x23
 800cf06:	f012 fbc9 	bl	801f69c <awe_fwMalloc>
 800cf0a:	6420      	str	r0, [r4, #64]	@ 0x40
 800cf0c:	b110      	cbz	r0, 800cf14 <awe_modGraphicEQBandConstructor+0x6c>
 800cf0e:	4620      	mov	r0, r4
 800cf10:	b002      	add	sp, #8
 800cf12:	bd70      	pop	{r4, r5, r6, pc}
 800cf14:	2400      	movs	r4, #0
 800cf16:	4620      	mov	r0, r4
 800cf18:	b002      	add	sp, #8
 800cf1a:	bd70      	pop	{r4, r5, r6, pc}
 800cf1c:	0803438c 	.word	0x0803438c

0800cf20 <awe_modGraphicEQBandProcess>:
 800cf20:	6903      	ldr	r3, [r0, #16]
 800cf22:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 800cf24:	ed90 6a0d 	vldr	s12, [r0, #52]	@ 0x34
 800cf28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf2a:	e9d3 1400 	ldrd	r1, r4, [r3]
 800cf2e:	e9d1 7305 	ldrd	r7, r3, [r1, #20]
 800cf32:	eb02 0682 	add.w	r6, r2, r2, lsl #2
 800cf36:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800cf3a:	2e00      	cmp	r6, #0
 800cf3c:	b085      	sub	sp, #20
 800cf3e:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800cf42:	68c9      	ldr	r1, [r1, #12]
 800cf44:	f8d0 e03c 	ldr.w	lr, [r0, #60]	@ 0x3c
 800cf48:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800cf4c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800cf50:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800cf54:	dd0f      	ble.n	800cf76 <awe_modGraphicEQBandProcess+0x56>
 800cf56:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 800cf58:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800cf5c:	4674      	mov	r4, lr
 800cf5e:	ecf5 7a01 	vldmia	r5!, {s15}
 800cf62:	ed94 7a00 	vldr	s14, [r4]
 800cf66:	ee67 7a86 	vmul.f32	s15, s15, s12
 800cf6a:	eee7 7a26 	vfma.f32	s15, s14, s13
 800cf6e:	ece4 7a01 	vstmia	r4!, {s15}
 800cf72:	42a6      	cmp	r6, r4
 800cf74:	d1f3      	bne.n	800cf5e <awe_modGraphicEQBandProcess+0x3e>
 800cf76:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 800cf78:	e9cd 7e00 	strd	r7, lr, [sp]
 800cf7c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 800cf80:	4662      	mov	r2, ip
 800cf82:	2000      	movs	r0, #0
 800cf84:	f00d fc5e 	bl	801a844 <awe_vecBiquadCascadeProcess>
 800cf88:	b005      	add	sp, #20
 800cf8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cf8c <awe_modGraphicEQBandSet>:
 800cf8c:	b391      	cbz	r1, 800cff4 <awe_modGraphicEQBandSet+0x68>
 800cf8e:	b510      	push	{r4, lr}
 800cf90:	6903      	ldr	r3, [r0, #16]
 800cf92:	edd0 7a0a 	vldr	s15, [r0, #40]	@ 0x28
 800cf96:	ed90 7a09 	vldr	s14, [r0, #36]	@ 0x24
 800cf9a:	681b      	ldr	r3, [r3, #0]
 800cf9c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800cfa0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cfa4:	ed2d 8b02 	vpush	{d8}
 800cfa8:	ed93 8a04 	vldr	s16, [r3, #16]
 800cfac:	699b      	ldr	r3, [r3, #24]
 800cfae:	db05      	blt.n	800cfbc <awe_modGraphicEQBandSet+0x30>
 800cfb0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800cfb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800cfb8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800cfbc:	4604      	mov	r4, r0
 800cfbe:	eef0 0a48 	vmov.f32	s1, s16
 800cfc2:	f3c3 0010 	ubfx	r0, r3, #0, #17
 800cfc6:	ed94 0a0b 	vldr	s0, [r4, #44]	@ 0x2c
 800cfca:	f016 fce9 	bl	80239a0 <design_smoother>
 800cfce:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800cfd0:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 800cfd4:	eef0 1a48 	vmov.f32	s3, s16
 800cfd8:	0040      	lsls	r0, r0, #1
 800cfda:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800cfdc:	ed94 1a08 	vldr	s2, [r4, #32]
 800cfe0:	edd4 0a0a 	vldr	s1, [r4, #40]	@ 0x28
 800cfe4:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800cfe8:	f015 f992 	bl	8022310 <design_geq>
 800cfec:	ecbd 8b02 	vpop	{d8}
 800cff0:	2000      	movs	r0, #0
 800cff2:	bd10      	pop	{r4, pc}
 800cff4:	2000      	movs	r0, #0
 800cff6:	4770      	bx	lr

0800cff8 <awe_modImpulseMsecSourceSet>:
 800cff8:	b189      	cbz	r1, 800d01e <awe_modImpulseMsecSourceSet+0x26>
 800cffa:	6903      	ldr	r3, [r0, #16]
 800cffc:	edd0 7a08 	vldr	s15, [r0, #32]
 800d000:	681b      	ldr	r3, [r3, #0]
 800d002:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 800d024 <awe_modImpulseMsecSourceSet+0x2c>
 800d006:	edd3 6a04 	vldr	s13, [r3, #16]
 800d00a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d00e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d012:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d016:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d01a:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800d01e:	2000      	movs	r0, #0
 800d020:	4770      	bx	lr
 800d022:	bf00      	nop
 800d024:	3a83126f 	.word	0x3a83126f

0800d028 <awe_modImpulseMsecSourceProcess>:
 800d028:	6903      	ldr	r3, [r0, #16]
 800d02a:	ed9f 0a13 	vldr	s0, [pc, #76]	@ 800d078 <awe_modImpulseMsecSourceProcess+0x50>
 800d02e:	681b      	ldr	r3, [r3, #0]
 800d030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d034:	699e      	ldr	r6, [r3, #24]
 800d036:	68dd      	ldr	r5, [r3, #12]
 800d038:	6a47      	ldr	r7, [r0, #36]	@ 0x24
 800d03a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d03c:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800d040:	4680      	mov	r8, r0
 800d042:	4632      	mov	r2, r6
 800d044:	4628      	mov	r0, r5
 800d046:	2101      	movs	r1, #1
 800d048:	f00e fa8c 	bl	801b564 <awe_vecFill>
 800d04c:	2f00      	cmp	r7, #0
 800d04e:	dd11      	ble.n	800d074 <awe_modImpulseMsecSourceProcess+0x4c>
 800d050:	42bc      	cmp	r4, r7
 800d052:	bfc8      	it	gt
 800d054:	2400      	movgt	r4, #0
 800d056:	42a6      	cmp	r6, r4
 800d058:	dd09      	ble.n	800d06e <awe_modImpulseMsecSourceProcess+0x46>
 800d05a:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 800d05e:	00ba      	lsls	r2, r7, #2
 800d060:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800d064:	443c      	add	r4, r7
 800d066:	42a6      	cmp	r6, r4
 800d068:	6003      	str	r3, [r0, #0]
 800d06a:	4410      	add	r0, r2
 800d06c:	dcfa      	bgt.n	800d064 <awe_modImpulseMsecSourceProcess+0x3c>
 800d06e:	1ba4      	subs	r4, r4, r6
 800d070:	f8c8 4028 	str.w	r4, [r8, #40]	@ 0x28
 800d074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d078:	00000000 	.word	0x00000000

0800d07c <awe_modInterleaveProcess>:
 800d07c:	6903      	ldr	r3, [r0, #16]
 800d07e:	7e01      	ldrb	r1, [r0, #24]
 800d080:	6818      	ldr	r0, [r3, #0]
 800d082:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
 800d086:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d08a:	e9d0 5605 	ldrd	r5, r6, [r0, #20]
 800d08e:	6957      	ldr	r7, [r2, #20]
 800d090:	68d2      	ldr	r2, [r2, #12]
 800d092:	b087      	sub	sp, #28
 800d094:	f015 6b00 	ands.w	fp, r5, #134217728	@ 0x8000000
 800d098:	9204      	str	r2, [sp, #16]
 800d09a:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800d09e:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800d0a2:	ea4f 0281 	mov.w	r2, r1, lsl #2
 800d0a6:	d034      	beq.n	800d112 <awe_modInterleaveProcess+0x96>
 800d0a8:	0876      	lsrs	r6, r6, #1
 800d0aa:	b399      	cbz	r1, 800d114 <awe_modInterleaveProcess+0x98>
 800d0ac:	4699      	mov	r9, r3
 800d0ae:	4413      	add	r3, r2
 800d0b0:	9305      	str	r3, [sp, #20]
 800d0b2:	2300      	movs	r3, #0
 800d0b4:	007f      	lsls	r7, r7, #1
 800d0b6:	9303      	str	r3, [sp, #12]
 800d0b8:	f859 3b04 	ldr.w	r3, [r9], #4
 800d0bc:	f3c5 0b09 	ubfx	fp, r5, #0, #10
 800d0c0:	68dc      	ldr	r4, [r3, #12]
 800d0c2:	f1bb 0f00 	cmp.w	fp, #0
 800d0c6:	d01d      	beq.n	800d104 <awe_modInterleaveProcess+0x88>
 800d0c8:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800d0cc:	eb04 0acb 	add.w	sl, r4, fp, lsl #3
 800d0d0:	ea4f 084b 	mov.w	r8, fp, lsl #1
 800d0d4:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 800d0d8:	462a      	mov	r2, r5
 800d0da:	4620      	mov	r0, r4
 800d0dc:	463b      	mov	r3, r7
 800d0de:	4641      	mov	r1, r8
 800d0e0:	9600      	str	r6, [sp, #0]
 800d0e2:	f00d ffbf 	bl	801b064 <awe_vecCopy32>
 800d0e6:	1d2a      	adds	r2, r5, #4
 800d0e8:	1d20      	adds	r0, r4, #4
 800d0ea:	9600      	str	r6, [sp, #0]
 800d0ec:	463b      	mov	r3, r7
 800d0ee:	4641      	mov	r1, r8
 800d0f0:	3408      	adds	r4, #8
 800d0f2:	f00d ffb7 	bl	801b064 <awe_vecCopy32>
 800d0f6:	45a2      	cmp	sl, r4
 800d0f8:	f105 0508 	add.w	r5, r5, #8
 800d0fc:	d1ec      	bne.n	800d0d8 <awe_modInterleaveProcess+0x5c>
 800d0fe:	9b03      	ldr	r3, [sp, #12]
 800d100:	445b      	add	r3, fp
 800d102:	9303      	str	r3, [sp, #12]
 800d104:	9b05      	ldr	r3, [sp, #20]
 800d106:	454b      	cmp	r3, r9
 800d108:	d004      	beq.n	800d114 <awe_modInterleaveProcess+0x98>
 800d10a:	f8d9 3000 	ldr.w	r3, [r9]
 800d10e:	695d      	ldr	r5, [r3, #20]
 800d110:	e7d2      	b.n	800d0b8 <awe_modInterleaveProcess+0x3c>
 800d112:	b911      	cbnz	r1, 800d11a <awe_modInterleaveProcess+0x9e>
 800d114:	b007      	add	sp, #28
 800d116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d11a:	4699      	mov	r9, r3
 800d11c:	4413      	add	r3, r2
 800d11e:	46ba      	mov	sl, r7
 800d120:	9303      	str	r3, [sp, #12]
 800d122:	4637      	mov	r7, r6
 800d124:	462e      	mov	r6, r5
 800d126:	f859 3b04 	ldr.w	r3, [r9], #4
 800d12a:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800d12e:	68dc      	ldr	r4, [r3, #12]
 800d130:	b18e      	cbz	r6, 800d156 <awe_modInterleaveProcess+0xda>
 800d132:	9b04      	ldr	r3, [sp, #16]
 800d134:	eb04 0886 	add.w	r8, r4, r6, lsl #2
 800d138:	eb03 058b 	add.w	r5, r3, fp, lsl #2
 800d13c:	462a      	mov	r2, r5
 800d13e:	4620      	mov	r0, r4
 800d140:	9700      	str	r7, [sp, #0]
 800d142:	4653      	mov	r3, sl
 800d144:	4631      	mov	r1, r6
 800d146:	3404      	adds	r4, #4
 800d148:	f00d ff8c 	bl	801b064 <awe_vecCopy32>
 800d14c:	45a0      	cmp	r8, r4
 800d14e:	f105 0504 	add.w	r5, r5, #4
 800d152:	d1f3      	bne.n	800d13c <awe_modInterleaveProcess+0xc0>
 800d154:	44b3      	add	fp, r6
 800d156:	9b03      	ldr	r3, [sp, #12]
 800d158:	454b      	cmp	r3, r9
 800d15a:	d0db      	beq.n	800d114 <awe_modInterleaveProcess+0x98>
 800d15c:	f8d9 3000 	ldr.w	r3, [r9]
 800d160:	695e      	ldr	r6, [r3, #20]
 800d162:	e7e0      	b.n	800d126 <awe_modInterleaveProcess+0xaa>

0800d164 <awe_modIntToBitsProcess>:
 800d164:	6903      	ldr	r3, [r0, #16]
 800d166:	681a      	ldr	r2, [r3, #0]
 800d168:	b410      	push	{r4}
 800d16a:	68d2      	ldr	r2, [r2, #12]
 800d16c:	7e44      	ldrb	r4, [r0, #25]
 800d16e:	6812      	ldr	r2, [r2, #0]
 800d170:	b15c      	cbz	r4, 800d18a <awe_modIntToBitsProcess+0x26>
 800d172:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800d176:	f853 1f04 	ldr.w	r1, [r3, #4]!
 800d17a:	68c9      	ldr	r1, [r1, #12]
 800d17c:	f002 0001 	and.w	r0, r2, #1
 800d180:	429c      	cmp	r4, r3
 800d182:	6008      	str	r0, [r1, #0]
 800d184:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800d188:	d1f5      	bne.n	800d176 <awe_modIntToBitsProcess+0x12>
 800d18a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d18e:	4770      	bx	lr

0800d190 <awe_modInvertProcess>:
 800d190:	6902      	ldr	r2, [r0, #16]
 800d192:	edd0 0a0b 	vldr	s1, [r0, #44]	@ 0x2c
 800d196:	b530      	push	{r4, r5, lr}
 800d198:	4603      	mov	r3, r0
 800d19a:	6a05      	ldr	r5, [r0, #32]
 800d19c:	e9d2 0200 	ldrd	r0, r2, [r2]
 800d1a0:	6984      	ldr	r4, [r0, #24]
 800d1a2:	68d1      	ldr	r1, [r2, #12]
 800d1a4:	6942      	ldr	r2, [r0, #20]
 800d1a6:	68c0      	ldr	r0, [r0, #12]
 800d1a8:	b083      	sub	sp, #12
 800d1aa:	2d00      	cmp	r5, #0
 800d1ac:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 800d1b0:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800d1b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800d1b8:	9400      	str	r4, [sp, #0]
 800d1ba:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800d1be:	bf18      	it	ne
 800d1c0:	eeb0 0a67 	vmovne.f32	s0, s15
 800d1c4:	3328      	adds	r3, #40	@ 0x28
 800d1c6:	f010 ffa9 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800d1ca:	b003      	add	sp, #12
 800d1cc:	bd30      	pop	{r4, r5, pc}
 800d1ce:	bf00      	nop

0800d1d0 <awe_modInvertSet>:
 800d1d0:	058b      	lsls	r3, r1, #22
 800d1d2:	d401      	bmi.n	800d1d8 <awe_modInvertSet+0x8>
 800d1d4:	2000      	movs	r0, #0
 800d1d6:	4770      	bx	lr
 800d1d8:	6903      	ldr	r3, [r0, #16]
 800d1da:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800d1de:	681b      	ldr	r3, [r3, #0]
 800d1e0:	b510      	push	{r4, lr}
 800d1e2:	edd3 0a04 	vldr	s1, [r3, #16]
 800d1e6:	4604      	mov	r4, r0
 800d1e8:	2001      	movs	r0, #1
 800d1ea:	f016 fbd9 	bl	80239a0 <design_smoother>
 800d1ee:	2000      	movs	r0, #0
 800d1f0:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800d1f4:	bd10      	pop	{r4, pc}
 800d1f6:	bf00      	nop

0800d1f8 <awe_modLdexpProcess>:
 800d1f8:	6900      	ldr	r0, [r0, #16]
 800d1fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1fe:	e9d0 1400 	ldrd	r1, r4, [r0]
 800d202:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 800d206:	6880      	ldr	r0, [r0, #8]
 800d208:	68cd      	ldr	r5, [r1, #12]
 800d20a:	68e6      	ldr	r6, [r4, #12]
 800d20c:	68c7      	ldr	r7, [r0, #12]
 800d20e:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800d212:	f3c3 0809 	ubfx	r8, r3, #0, #10
 800d216:	fb08 f802 	mul.w	r8, r8, r2
 800d21a:	f1b8 0f00 	cmp.w	r8, #0
 800d21e:	d00b      	beq.n	800d238 <awe_modLdexpProcess+0x40>
 800d220:	2400      	movs	r4, #0
 800d222:	f856 0b04 	ldr.w	r0, [r6], #4
 800d226:	ecb5 0a01 	vldmia	r5!, {s0}
 800d22a:	f020 fd1c 	bl	802dc66 <ldexpf>
 800d22e:	3401      	adds	r4, #1
 800d230:	45a0      	cmp	r8, r4
 800d232:	eca7 0a01 	vstmia	r7!, {s0}
 800d236:	d1f4      	bne.n	800d222 <awe_modLdexpProcess+0x2a>
 800d238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d23c <awe_modLinkwitzRileyFilterProcess>:
 800d23c:	b510      	push	{r4, lr}
 800d23e:	4604      	mov	r4, r0
 800d240:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800d242:	6943      	ldr	r3, [r0, #20]
 800d244:	4798      	blx	r3
 800d246:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d24c:	6943      	ldr	r3, [r0, #20]
 800d24e:	4718      	bx	r3

0800d250 <awe_modLinkwitzRileyFilterConstructor>:
 800d250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d254:	b089      	sub	sp, #36	@ 0x24
 800d256:	4615      	mov	r5, r2
 800d258:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800d25a:	9300      	str	r3, [sp, #0]
 800d25c:	4601      	mov	r1, r0
 800d25e:	9201      	str	r2, [sp, #4]
 800d260:	4680      	mov	r8, r0
 800d262:	462b      	mov	r3, r5
 800d264:	4a28      	ldr	r2, [pc, #160]	@ (800d308 <awe_modLinkwitzRileyFilterConstructor+0xb8>)
 800d266:	4829      	ldr	r0, [pc, #164]	@ (800d30c <awe_modLinkwitzRileyFilterConstructor+0xbc>)
 800d268:	f012 ff6c 	bl	8020144 <BaseClassModule_Constructor>
 800d26c:	4604      	mov	r4, r0
 800d26e:	2800      	cmp	r0, #0
 800d270:	d043      	beq.n	800d2fa <awe_modLinkwitzRileyFilterConstructor+0xaa>
 800d272:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800d274:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 800d318 <awe_modLinkwitzRileyFilterConstructor+0xc8>
 800d278:	f04f 0a00 	mov.w	sl, #0
 800d27c:	f8cd a014 	str.w	sl, [sp, #20]
 800d280:	f7f3 f8fc 	bl	800047c <__aeabi_i2d>
 800d284:	2200      	movs	r2, #0
 800d286:	4b22      	ldr	r3, [pc, #136]	@ (800d310 <awe_modLinkwitzRileyFilterConstructor+0xc0>)
 800d288:	f7f3 f962 	bl	8000550 <__aeabi_dmul>
 800d28c:	ae05      	add	r6, sp, #20
 800d28e:	f04f 0903 	mov.w	r9, #3
 800d292:	f7f3 fc0d 	bl	8000ab0 <__aeabi_d2iz>
 800d296:	e9cd 9600 	strd	r9, r6, [sp]
 800d29a:	6829      	ldr	r1, [r5, #0]
 800d29c:	9006      	str	r0, [sp, #24]
 800d29e:	9103      	str	r1, [sp, #12]
 800d2a0:	68af      	ldr	r7, [r5, #8]
 800d2a2:	481c      	ldr	r0, [pc, #112]	@ (800d314 <awe_modLinkwitzRileyFilterConstructor+0xc4>)
 800d2a4:	f8cd b01c 	str.w	fp, [sp, #28]
 800d2a8:	ab03      	add	r3, sp, #12
 800d2aa:	f240 1201 	movw	r2, #257	@ 0x101
 800d2ae:	4641      	mov	r1, r8
 800d2b0:	9704      	str	r7, [sp, #16]
 800d2b2:	f013 f969 	bl	8020588 <ClassModule_Constructor>
 800d2b6:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800d2b8:	b318      	cbz	r0, 800d302 <awe_modLinkwitzRileyFilterConstructor+0xb2>
 800d2ba:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d2bc:	f8cd a014 	str.w	sl, [sp, #20]
 800d2c0:	f7f3 f8dc 	bl	800047c <__aeabi_i2d>
 800d2c4:	2200      	movs	r2, #0
 800d2c6:	4b12      	ldr	r3, [pc, #72]	@ (800d310 <awe_modLinkwitzRileyFilterConstructor+0xc0>)
 800d2c8:	f7f3 f942 	bl	8000550 <__aeabi_dmul>
 800d2cc:	f7f3 fbf0 	bl	8000ab0 <__aeabi_d2iz>
 800d2d0:	9601      	str	r6, [sp, #4]
 800d2d2:	f8cd 9000 	str.w	r9, [sp]
 800d2d6:	e9d5 5601 	ldrd	r5, r6, [r5, #4]
 800d2da:	9006      	str	r0, [sp, #24]
 800d2dc:	ab03      	add	r3, sp, #12
 800d2de:	4641      	mov	r1, r8
 800d2e0:	480c      	ldr	r0, [pc, #48]	@ (800d314 <awe_modLinkwitzRileyFilterConstructor+0xc4>)
 800d2e2:	f8cd b01c 	str.w	fp, [sp, #28]
 800d2e6:	f240 1201 	movw	r2, #257	@ 0x101
 800d2ea:	e9cd 6503 	strd	r6, r5, [sp, #12]
 800d2ee:	f013 f94b 	bl	8020588 <ClassModule_Constructor>
 800d2f2:	2800      	cmp	r0, #0
 800d2f4:	6320      	str	r0, [r4, #48]	@ 0x30
 800d2f6:	bf08      	it	eq
 800d2f8:	2400      	moveq	r4, #0
 800d2fa:	4620      	mov	r0, r4
 800d2fc:	b009      	add	sp, #36	@ 0x24
 800d2fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d302:	4604      	mov	r4, r0
 800d304:	e7f9      	b.n	800d2fa <awe_modLinkwitzRileyFilterConstructor+0xaa>
 800d306:	bf00      	nop
 800d308:	00010101 	.word	0x00010101
 800d30c:	0803447c 	.word	0x0803447c
 800d310:	3fe00000 	.word	0x3fe00000
 800d314:	beef0805 	.word	0xbeef0805
 800d318:	437a0000 	.word	0x437a0000

0800d31c <awe_modLinkwitzRileyFilterSet>:
 800d31c:	b909      	cbnz	r1, 800d322 <awe_modLinkwitzRileyFilterSet+0x6>
 800d31e:	2000      	movs	r0, #0
 800d320:	4770      	bx	lr
 800d322:	b538      	push	{r3, r4, r5, lr}
 800d324:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 800d326:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800d328:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d32a:	6a05      	ldr	r5, [r0, #32]
 800d32c:	6299      	str	r1, [r3, #40]	@ 0x28
 800d32e:	4604      	mov	r4, r0
 800d330:	6291      	str	r1, [r2, #40]	@ 0x28
 800d332:	4618      	mov	r0, r3
 800d334:	621d      	str	r5, [r3, #32]
 800d336:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800d33a:	6215      	str	r5, [r2, #32]
 800d33c:	f7fd f864 	bl	800a408 <ClassModule_Set>
 800d340:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d342:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800d346:	f7fd f85f 	bl	800a408 <ClassModule_Set>
 800d34a:	2000      	movs	r0, #0
 800d34c:	bd38      	pop	{r3, r4, r5, pc}
 800d34e:	bf00      	nop

0800d350 <awe_modLogProcess>:
 800d350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d352:	6903      	ldr	r3, [r0, #16]
 800d354:	e9d3 2100 	ldrd	r2, r1, [r3]
 800d358:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800d35c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d360:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800d364:	fb07 f703 	mul.w	r7, r7, r3
 800d368:	68ce      	ldr	r6, [r1, #12]
 800d36a:	68d5      	ldr	r5, [r2, #12]
 800d36c:	b14f      	cbz	r7, 800d382 <awe_modLogProcess+0x32>
 800d36e:	2400      	movs	r4, #0
 800d370:	ecb5 0a01 	vldmia	r5!, {s0}
 800d374:	f021 fa98 	bl	802e8a8 <logf>
 800d378:	3401      	adds	r4, #1
 800d37a:	42a7      	cmp	r7, r4
 800d37c:	eca6 0a01 	vstmia	r6!, {s0}
 800d380:	d1f6      	bne.n	800d370 <awe_modLogProcess+0x20>
 800d382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d384 <awe_modLog10Process>:
 800d384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d386:	6903      	ldr	r3, [r0, #16]
 800d388:	e9d3 2100 	ldrd	r2, r1, [r3]
 800d38c:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800d390:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d394:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800d398:	fb07 f703 	mul.w	r7, r7, r3
 800d39c:	ed2d 8b02 	vpush	{d8}
 800d3a0:	68ce      	ldr	r6, [r1, #12]
 800d3a2:	68d5      	ldr	r5, [r2, #12]
 800d3a4:	b16f      	cbz	r7, 800d3c2 <awe_modLog10Process+0x3e>
 800d3a6:	ed9f 8a08 	vldr	s16, [pc, #32]	@ 800d3c8 <awe_modLog10Process+0x44>
 800d3aa:	2400      	movs	r4, #0
 800d3ac:	ecb5 0a01 	vldmia	r5!, {s0}
 800d3b0:	f021 fa7a 	bl	802e8a8 <logf>
 800d3b4:	3401      	adds	r4, #1
 800d3b6:	ee20 0a08 	vmul.f32	s0, s0, s16
 800d3ba:	42a7      	cmp	r7, r4
 800d3bc:	eca6 0a01 	vstmia	r6!, {s0}
 800d3c0:	d1f4      	bne.n	800d3ac <awe_modLog10Process+0x28>
 800d3c2:	ecbd 8b02 	vpop	{d8}
 800d3c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d3c8:	3ede5bd9 	.word	0x3ede5bd9

0800d3cc <awe_modLog2Process>:
 800d3cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d3ce:	6903      	ldr	r3, [r0, #16]
 800d3d0:	e9d3 2100 	ldrd	r2, r1, [r3]
 800d3d4:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800d3d8:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d3dc:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800d3e0:	fb07 f703 	mul.w	r7, r7, r3
 800d3e4:	ed2d 8b02 	vpush	{d8}
 800d3e8:	68ce      	ldr	r6, [r1, #12]
 800d3ea:	68d5      	ldr	r5, [r2, #12]
 800d3ec:	b16f      	cbz	r7, 800d40a <awe_modLog2Process+0x3e>
 800d3ee:	ed9f 8a08 	vldr	s16, [pc, #32]	@ 800d410 <awe_modLog2Process+0x44>
 800d3f2:	2400      	movs	r4, #0
 800d3f4:	ecb5 0a01 	vldmia	r5!, {s0}
 800d3f8:	f021 fa56 	bl	802e8a8 <logf>
 800d3fc:	3401      	adds	r4, #1
 800d3fe:	ee20 0a08 	vmul.f32	s0, s0, s16
 800d402:	42a7      	cmp	r7, r4
 800d404:	eca6 0a01 	vstmia	r6!, {s0}
 800d408:	d1f4      	bne.n	800d3f4 <awe_modLog2Process+0x28>
 800d40a:	ecbd 8b02 	vpop	{d8}
 800d40e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d410:	3fb8aa3b 	.word	0x3fb8aa3b

0800d414 <awe_modLogicAllProcess>:
 800d414:	b470      	push	{r4, r5, r6}
 800d416:	6906      	ldr	r6, [r0, #16]
 800d418:	6831      	ldr	r1, [r6, #0]
 800d41a:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800d41e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d422:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800d426:	fb02 f203 	mul.w	r2, r2, r3
 800d42a:	68cc      	ldr	r4, [r1, #12]
 800d42c:	b1e2      	cbz	r2, 800d468 <awe_modLogicAllProcess+0x54>
 800d42e:	2300      	movs	r3, #0
 800d430:	f854 1b04 	ldr.w	r1, [r4], #4
 800d434:	1c5d      	adds	r5, r3, #1
 800d436:	b9a1      	cbnz	r1, 800d462 <awe_modLogicAllProcess+0x4e>
 800d438:	4295      	cmp	r5, r2
 800d43a:	da09      	bge.n	800d450 <awe_modLogicAllProcess+0x3c>
 800d43c:	3302      	adds	r3, #2
 800d43e:	429a      	cmp	r2, r3
 800d440:	f103 0101 	add.w	r1, r3, #1
 800d444:	f103 0302 	add.w	r3, r3, #2
 800d448:	dd01      	ble.n	800d44e <awe_modLogicAllProcess+0x3a>
 800d44a:	4291      	cmp	r1, r2
 800d44c:	dbf7      	blt.n	800d43e <awe_modLogicAllProcess+0x2a>
 800d44e:	2100      	movs	r1, #0
 800d450:	7e43      	ldrb	r3, [r0, #25]
 800d452:	6201      	str	r1, [r0, #32]
 800d454:	2b01      	cmp	r3, #1
 800d456:	d102      	bne.n	800d45e <awe_modLogicAllProcess+0x4a>
 800d458:	6873      	ldr	r3, [r6, #4]
 800d45a:	68db      	ldr	r3, [r3, #12]
 800d45c:	6019      	str	r1, [r3, #0]
 800d45e:	bc70      	pop	{r4, r5, r6}
 800d460:	4770      	bx	lr
 800d462:	4295      	cmp	r5, r2
 800d464:	462b      	mov	r3, r5
 800d466:	d1e3      	bne.n	800d430 <awe_modLogicAllProcess+0x1c>
 800d468:	2101      	movs	r1, #1
 800d46a:	e7f1      	b.n	800d450 <awe_modLogicAllProcess+0x3c>

0800d46c <awe_modLogicAllBypass>:
 800d46c:	7e43      	ldrb	r3, [r0, #25]
 800d46e:	2b01      	cmp	r3, #1
 800d470:	d103      	bne.n	800d47a <awe_modLogicAllBypass+0xe>
 800d472:	6902      	ldr	r2, [r0, #16]
 800d474:	6852      	ldr	r2, [r2, #4]
 800d476:	68d2      	ldr	r2, [r2, #12]
 800d478:	6013      	str	r3, [r2, #0]
 800d47a:	4770      	bx	lr

0800d47c <awe_modLogicAndConstInt32Process>:
 800d47c:	6903      	ldr	r3, [r0, #16]
 800d47e:	6a02      	ldr	r2, [r0, #32]
 800d480:	e9d3 0100 	ldrd	r0, r1, [r3]
 800d484:	b410      	push	{r4}
 800d486:	e9d0 3405 	ldrd	r3, r4, [r0, #20]
 800d48a:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800d48e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d492:	fb03 f304 	mul.w	r3, r3, r4
 800d496:	68c9      	ldr	r1, [r1, #12]
 800d498:	68c0      	ldr	r0, [r0, #12]
 800d49a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d49e:	f00c b90d 	b.w	80196bc <awe_vecAndConstInt32>
 800d4a2:	bf00      	nop

0800d4a4 <awe_modLogicAnyProcess>:
 800d4a4:	b470      	push	{r4, r5, r6}
 800d4a6:	6906      	ldr	r6, [r0, #16]
 800d4a8:	6831      	ldr	r1, [r6, #0]
 800d4aa:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800d4ae:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d4b2:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800d4b6:	fb02 f203 	mul.w	r2, r2, r3
 800d4ba:	68cc      	ldr	r4, [r1, #12]
 800d4bc:	b15a      	cbz	r2, 800d4d6 <awe_modLogicAnyProcess+0x32>
 800d4be:	2300      	movs	r3, #0
 800d4c0:	4619      	mov	r1, r3
 800d4c2:	f854 5b04 	ldr.w	r5, [r4], #4
 800d4c6:	3301      	adds	r3, #1
 800d4c8:	429a      	cmp	r2, r3
 800d4ca:	ea41 0105 	orr.w	r1, r1, r5
 800d4ce:	d1f8      	bne.n	800d4c2 <awe_modLogicAnyProcess+0x1e>
 800d4d0:	1c0a      	adds	r2, r1, #0
 800d4d2:	bf18      	it	ne
 800d4d4:	2201      	movne	r2, #1
 800d4d6:	7e43      	ldrb	r3, [r0, #25]
 800d4d8:	6202      	str	r2, [r0, #32]
 800d4da:	2b01      	cmp	r3, #1
 800d4dc:	d102      	bne.n	800d4e4 <awe_modLogicAnyProcess+0x40>
 800d4de:	6873      	ldr	r3, [r6, #4]
 800d4e0:	68db      	ldr	r3, [r3, #12]
 800d4e2:	601a      	str	r2, [r3, #0]
 800d4e4:	bc70      	pop	{r4, r5, r6}
 800d4e6:	4770      	bx	lr

0800d4e8 <awe_modLogicAnyBypass>:
 800d4e8:	7e43      	ldrb	r3, [r0, #25]
 800d4ea:	2b01      	cmp	r3, #1
 800d4ec:	d103      	bne.n	800d4f6 <awe_modLogicAnyBypass+0xe>
 800d4ee:	6902      	ldr	r2, [r0, #16]
 800d4f0:	6852      	ldr	r2, [r2, #4]
 800d4f2:	68d2      	ldr	r2, [r2, #12]
 800d4f4:	6013      	str	r3, [r2, #0]
 800d4f6:	4770      	bx	lr

0800d4f8 <awe_modLogicBinaryOpProcess>:
 800d4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4fc:	6907      	ldr	r7, [r0, #16]
 800d4fe:	f890 b018 	ldrb.w	fp, [r0, #24]
 800d502:	683b      	ldr	r3, [r7, #0]
 800d504:	f857 102b 	ldr.w	r1, [r7, fp, lsl #2]
 800d508:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800d50c:	68cd      	ldr	r5, [r1, #12]
 800d50e:	4680      	mov	r8, r0
 800d510:	e9d3 6005 	ldrd	r6, r0, [r3, #20]
 800d514:	b087      	sub	sp, #28
 800d516:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
 800d51a:	ea4f 038b 	mov.w	r3, fp, lsl #2
 800d51e:	f3c0 0910 	ubfx	r9, r0, #0, #17
 800d522:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800d526:	9305      	str	r3, [sp, #20]
 800d528:	2a00      	cmp	r2, #0
 800d52a:	d074      	beq.n	800d616 <awe_modLogicBinaryOpProcess+0x11e>
 800d52c:	f8cd 9000 	str.w	r9, [sp]
 800d530:	2301      	movs	r3, #1
 800d532:	462a      	mov	r2, r5
 800d534:	4631      	mov	r1, r6
 800d536:	4650      	mov	r0, sl
 800d538:	f00d fd94 	bl	801b064 <awe_vecCopy32>
 800d53c:	2e01      	cmp	r6, #1
 800d53e:	d92b      	bls.n	800d598 <awe_modLogicBinaryOpProcess+0xa0>
 800d540:	464b      	mov	r3, r9
 800d542:	f10a 0404 	add.w	r4, sl, #4
 800d546:	46b9      	mov	r9, r7
 800d548:	eb0a 0a86 	add.w	sl, sl, r6, lsl #2
 800d54c:	9304      	str	r3, [sp, #16]
 800d54e:	e00d      	b.n	800d56c <awe_modLogicBinaryOpProcess+0x74>
 800d550:	f1bc 0f01 	cmp.w	ip, #1
 800d554:	f000 809b 	beq.w	800d68e <awe_modLogicBinaryOpProcess+0x196>
 800d558:	9f04      	ldr	r7, [sp, #16]
 800d55a:	9702      	str	r7, [sp, #8]
 800d55c:	2701      	movs	r7, #1
 800d55e:	e9cd 5700 	strd	r5, r7, [sp]
 800d562:	f011 ffff 	bl	801f564 <awe_vecXor2x1>
 800d566:	3404      	adds	r4, #4
 800d568:	45a2      	cmp	sl, r4
 800d56a:	d012      	beq.n	800d592 <awe_modLogicBinaryOpProcess+0x9a>
 800d56c:	f8d8 c020 	ldr.w	ip, [r8, #32]
 800d570:	4620      	mov	r0, r4
 800d572:	2301      	movs	r3, #1
 800d574:	462a      	mov	r2, r5
 800d576:	4631      	mov	r1, r6
 800d578:	f1bc 0f00 	cmp.w	ip, #0
 800d57c:	d1e8      	bne.n	800d550 <awe_modLogicBinaryOpProcess+0x58>
 800d57e:	9b04      	ldr	r3, [sp, #16]
 800d580:	9302      	str	r3, [sp, #8]
 800d582:	2301      	movs	r3, #1
 800d584:	e9cd 5300 	strd	r5, r3, [sp]
 800d588:	3404      	adds	r4, #4
 800d58a:	f00c f87f 	bl	801968c <awe_vecAnd2x1>
 800d58e:	45a2      	cmp	sl, r4
 800d590:	d1ec      	bne.n	800d56c <awe_modLogicBinaryOpProcess+0x74>
 800d592:	9b04      	ldr	r3, [sp, #16]
 800d594:	464f      	mov	r7, r9
 800d596:	4699      	mov	r9, r3
 800d598:	f1bb 0f01 	cmp.w	fp, #1
 800d59c:	d938      	bls.n	800d610 <awe_modLogicBinaryOpProcess+0x118>
 800d59e:	9a05      	ldr	r2, [sp, #20]
 800d5a0:	1f3b      	subs	r3, r7, #4
 800d5a2:	441a      	add	r2, r3
 800d5a4:	9204      	str	r2, [sp, #16]
 800d5a6:	f04f 0b01 	mov.w	fp, #1
 800d5aa:	f857 3f04 	ldr.w	r3, [r7, #4]!
 800d5ae:	695e      	ldr	r6, [r3, #20]
 800d5b0:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800d5b4:	b34e      	cbz	r6, 800d60a <awe_modLogicBinaryOpProcess+0x112>
 800d5b6:	463a      	mov	r2, r7
 800d5b8:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 800d5bc:	464f      	mov	r7, r9
 800d5be:	2400      	movs	r4, #0
 800d5c0:	4691      	mov	r9, r2
 800d5c2:	e00b      	b.n	800d5dc <awe_modLogicBinaryOpProcess+0xe4>
 800d5c4:	f1be 0f01 	cmp.w	lr, #1
 800d5c8:	d054      	beq.n	800d674 <awe_modLogicBinaryOpProcess+0x17c>
 800d5ca:	e9cd 5b00 	strd	r5, fp, [sp]
 800d5ce:	f011 ffc9 	bl	801f564 <awe_vecXor2x1>
 800d5d2:	3404      	adds	r4, #4
 800d5d4:	4554      	cmp	r4, sl
 800d5d6:	d015      	beq.n	800d604 <awe_modLogicBinaryOpProcess+0x10c>
 800d5d8:	f8d9 3000 	ldr.w	r3, [r9]
 800d5dc:	68d8      	ldr	r0, [r3, #12]
 800d5de:	f8d8 e020 	ldr.w	lr, [r8, #32]
 800d5e2:	9702      	str	r7, [sp, #8]
 800d5e4:	eb00 0c04 	add.w	ip, r0, r4
 800d5e8:	2301      	movs	r3, #1
 800d5ea:	462a      	mov	r2, r5
 800d5ec:	4631      	mov	r1, r6
 800d5ee:	4660      	mov	r0, ip
 800d5f0:	f1be 0f00 	cmp.w	lr, #0
 800d5f4:	d1e6      	bne.n	800d5c4 <awe_modLogicBinaryOpProcess+0xcc>
 800d5f6:	e9cd 5b00 	strd	r5, fp, [sp]
 800d5fa:	3404      	adds	r4, #4
 800d5fc:	f00c f846 	bl	801968c <awe_vecAnd2x1>
 800d600:	4554      	cmp	r4, sl
 800d602:	d1e9      	bne.n	800d5d8 <awe_modLogicBinaryOpProcess+0xe0>
 800d604:	464b      	mov	r3, r9
 800d606:	46b9      	mov	r9, r7
 800d608:	461f      	mov	r7, r3
 800d60a:	9b04      	ldr	r3, [sp, #16]
 800d60c:	42bb      	cmp	r3, r7
 800d60e:	d1cc      	bne.n	800d5aa <awe_modLogicBinaryOpProcess+0xb2>
 800d610:	b007      	add	sp, #28
 800d612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d616:	2301      	movs	r3, #1
 800d618:	fb06 f609 	mul.w	r6, r6, r9
 800d61c:	9600      	str	r6, [sp, #0]
 800d61e:	4650      	mov	r0, sl
 800d620:	4619      	mov	r1, r3
 800d622:	462a      	mov	r2, r5
 800d624:	f00d fd1e 	bl	801b064 <awe_vecCopy32>
 800d628:	f1bb 0f01 	cmp.w	fp, #1
 800d62c:	d9f0      	bls.n	800d610 <awe_modLogicBinaryOpProcess+0x118>
 800d62e:	9b05      	ldr	r3, [sp, #20]
 800d630:	f1a7 0904 	sub.w	r9, r7, #4
 800d634:	46b3      	mov	fp, r6
 800d636:	4499      	add	r9, r3
 800d638:	f04f 0a01 	mov.w	sl, #1
 800d63c:	462e      	mov	r6, r5
 800d63e:	e007      	b.n	800d650 <awe_modLogicBinaryOpProcess+0x158>
 800d640:	2c01      	cmp	r4, #1
 800d642:	d01d      	beq.n	800d680 <awe_modLogicBinaryOpProcess+0x188>
 800d644:	e9cd 6a00 	strd	r6, sl, [sp]
 800d648:	f011 ff8c 	bl	801f564 <awe_vecXor2x1>
 800d64c:	45b9      	cmp	r9, r7
 800d64e:	d0df      	beq.n	800d610 <awe_modLogicBinaryOpProcess+0x118>
 800d650:	f857 3f04 	ldr.w	r3, [r7, #4]!
 800d654:	f8d8 4020 	ldr.w	r4, [r8, #32]
 800d658:	68dd      	ldr	r5, [r3, #12]
 800d65a:	f8cd b008 	str.w	fp, [sp, #8]
 800d65e:	2301      	movs	r3, #1
 800d660:	4632      	mov	r2, r6
 800d662:	4619      	mov	r1, r3
 800d664:	4628      	mov	r0, r5
 800d666:	2c00      	cmp	r4, #0
 800d668:	d1ea      	bne.n	800d640 <awe_modLogicBinaryOpProcess+0x148>
 800d66a:	e9cd 6a00 	strd	r6, sl, [sp]
 800d66e:	f00c f80d 	bl	801968c <awe_vecAnd2x1>
 800d672:	e7eb      	b.n	800d64c <awe_modLogicBinaryOpProcess+0x154>
 800d674:	e9cd 5e00 	strd	r5, lr, [sp]
 800d678:	4673      	mov	r3, lr
 800d67a:	f00f fbb1 	bl	801cde0 <awe_vecOr2x1>
 800d67e:	e7a8      	b.n	800d5d2 <awe_modLogicBinaryOpProcess+0xda>
 800d680:	e9cd 6400 	strd	r6, r4, [sp]
 800d684:	4623      	mov	r3, r4
 800d686:	4621      	mov	r1, r4
 800d688:	f00f fbaa 	bl	801cde0 <awe_vecOr2x1>
 800d68c:	e7de      	b.n	800d64c <awe_modLogicBinaryOpProcess+0x154>
 800d68e:	9b04      	ldr	r3, [sp, #16]
 800d690:	9500      	str	r5, [sp, #0]
 800d692:	e9cd c301 	strd	ip, r3, [sp, #4]
 800d696:	4663      	mov	r3, ip
 800d698:	f00f fba2 	bl	801cde0 <awe_vecOr2x1>
 800d69c:	e763      	b.n	800d566 <awe_modLogicBinaryOpProcess+0x6e>
 800d69e:	bf00      	nop

0800d6a0 <awe_modLogicBinaryOpBypass>:
 800d6a0:	7e01      	ldrb	r1, [r0, #24]
 800d6a2:	6903      	ldr	r3, [r0, #16]
 800d6a4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d6a8:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 800d6ac:	2201      	movs	r2, #1
 800d6ae:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800d6b2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d6b6:	fb03 f301 	mul.w	r3, r3, r1
 800d6ba:	68c0      	ldr	r0, [r0, #12]
 800d6bc:	4611      	mov	r1, r2
 800d6be:	f00e b875 	b.w	801b7ac <awe_vecFillInt32>
 800d6c2:	bf00      	nop

0800d6c4 <awe_modLogicCompareBypass>:
 800d6c4:	6902      	ldr	r2, [r0, #16]
 800d6c6:	6813      	ldr	r3, [r2, #0]
 800d6c8:	6891      	ldr	r1, [r2, #8]
 800d6ca:	e9d3 3205 	ldrd	r3, r2, [r3, #20]
 800d6ce:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800d6d2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d6d6:	68c8      	ldr	r0, [r1, #12]
 800d6d8:	fb03 f302 	mul.w	r3, r3, r2
 800d6dc:	2101      	movs	r1, #1
 800d6de:	2200      	movs	r2, #0
 800d6e0:	f00e b864 	b.w	801b7ac <awe_vecFillInt32>

0800d6e4 <awe_modLogicCompareProcess>:
 800d6e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6e8:	4605      	mov	r5, r0
 800d6ea:	6900      	ldr	r0, [r0, #16]
 800d6ec:	6801      	ldr	r1, [r0, #0]
 800d6ee:	6886      	ldr	r6, [r0, #8]
 800d6f0:	6840      	ldr	r0, [r0, #4]
 800d6f2:	68f6      	ldr	r6, [r6, #12]
 800d6f4:	68cf      	ldr	r7, [r1, #12]
 800d6f6:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800d6fa:	e9d1 4305 	ldrd	r4, r3, [r1, #20]
 800d6fe:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d702:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800d706:	fb04 f403 	mul.w	r4, r4, r3
 800d70a:	4623      	mov	r3, r4
 800d70c:	2200      	movs	r2, #0
 800d70e:	4630      	mov	r0, r6
 800d710:	2101      	movs	r1, #1
 800d712:	f00e f84b 	bl	801b7ac <awe_vecFillInt32>
 800d716:	6a2b      	ldr	r3, [r5, #32]
 800d718:	2b05      	cmp	r3, #5
 800d71a:	d834      	bhi.n	800d786 <awe_modLogicCompareProcess+0xa2>
 800d71c:	e8df f003 	tbb	[pc, r3]
 800d720:	231b130b 	.word	0x231b130b
 800d724:	032b      	.short	0x032b
 800d726:	4623      	mov	r3, r4
 800d728:	4632      	mov	r2, r6
 800d72a:	4641      	mov	r1, r8
 800d72c:	4638      	mov	r0, r7
 800d72e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d732:	f00e bfb9 	b.w	801c6a8 <awe_vecLogicCompareGreaterOrEqual>
 800d736:	4623      	mov	r3, r4
 800d738:	4632      	mov	r2, r6
 800d73a:	4641      	mov	r1, r8
 800d73c:	4638      	mov	r0, r7
 800d73e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d742:	f00e bd27 	b.w	801c194 <awe_vecLogicCompareEqual>
 800d746:	4623      	mov	r3, r4
 800d748:	4632      	mov	r2, r6
 800d74a:	4641      	mov	r1, r8
 800d74c:	4638      	mov	r0, r7
 800d74e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d752:	f00e bda1 	b.w	801c298 <awe_vecLogicCompareNotEqual>
 800d756:	4623      	mov	r3, r4
 800d758:	4632      	mov	r2, r6
 800d75a:	4641      	mov	r1, r8
 800d75c:	4638      	mov	r0, r7
 800d75e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d762:	f00e be1b 	b.w	801c39c <awe_vecLogicCompareLessThan>
 800d766:	4623      	mov	r3, r4
 800d768:	4632      	mov	r2, r6
 800d76a:	4641      	mov	r1, r8
 800d76c:	4638      	mov	r0, r7
 800d76e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d772:	f00e be95 	b.w	801c4a0 <awe_vecLogicCompareLessOrEqual>
 800d776:	4623      	mov	r3, r4
 800d778:	4632      	mov	r2, r6
 800d77a:	4641      	mov	r1, r8
 800d77c:	4638      	mov	r0, r7
 800d77e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d782:	f00e bf0f 	b.w	801c5a4 <awe_vecLogicCompareGreater>
 800d786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d78a:	bf00      	nop

0800d78c <awe_modLogicCompareConstProcess>:
 800d78c:	6903      	ldr	r3, [r0, #16]
 800d78e:	b430      	push	{r4, r5}
 800d790:	4604      	mov	r4, r0
 800d792:	6a05      	ldr	r5, [r0, #32]
 800d794:	e9d3 0100 	ldrd	r0, r1, [r3]
 800d798:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800d79c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800d7a0:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800d7a4:	68c9      	ldr	r1, [r1, #12]
 800d7a6:	68c0      	ldr	r0, [r0, #12]
 800d7a8:	fb02 f203 	mul.w	r2, r2, r3
 800d7ac:	2d05      	cmp	r5, #5
 800d7ae:	d822      	bhi.n	800d7f6 <awe_modLogicCompareConstProcess+0x6a>
 800d7b0:	e8df f005 	tbb	[pc, r5]
 800d7b4:	17120d08 	.word	0x17120d08
 800d7b8:	031c      	.short	0x031c
 800d7ba:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7be:	bc30      	pop	{r4, r5}
 800d7c0:	f00f b86c 	b.w	801c89c <awe_vecLogicCompareConstGreaterOrEqual>
 800d7c4:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7c8:	bc30      	pop	{r4, r5}
 800d7ca:	f00e bfef 	b.w	801c7ac <awe_vecLogicCompareConstEqual>
 800d7ce:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7d2:	bc30      	pop	{r4, r5}
 800d7d4:	f00f b802 	b.w	801c7dc <awe_vecLogicCompareConstNotEqual>
 800d7d8:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7dc:	bc30      	pop	{r4, r5}
 800d7de:	f00f b815 	b.w	801c80c <awe_vecLogicCompareConstLessThan>
 800d7e2:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7e6:	bc30      	pop	{r4, r5}
 800d7e8:	f00f b828 	b.w	801c83c <awe_vecLogicCompareConstLessOrEqual>
 800d7ec:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 800d7f0:	bc30      	pop	{r4, r5}
 800d7f2:	f00f b83b 	b.w	801c86c <awe_vecLogicCompareConstGreater>
 800d7f6:	bc30      	pop	{r4, r5}
 800d7f8:	4770      	bx	lr
 800d7fa:	bf00      	nop

0800d7fc <awe_modLogicCompareConstBypass>:
 800d7fc:	6902      	ldr	r2, [r0, #16]
 800d7fe:	e9d2 3100 	ldrd	r3, r1, [r2]
 800d802:	e9d3 3205 	ldrd	r3, r2, [r3, #20]
 800d806:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800d80a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d80e:	68c8      	ldr	r0, [r1, #12]
 800d810:	fb03 f302 	mul.w	r3, r3, r2
 800d814:	2101      	movs	r1, #1
 800d816:	2200      	movs	r2, #0
 800d818:	f00d bfc8 	b.w	801b7ac <awe_vecFillInt32>

0800d81c <awe_modLogicCompareConstInt32Process>:
 800d81c:	6903      	ldr	r3, [r0, #16]
 800d81e:	b430      	push	{r4, r5}
 800d820:	e9d3 4200 	ldrd	r4, r2, [r3]
 800d824:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800d828:	6a05      	ldr	r5, [r0, #32]
 800d82a:	68d2      	ldr	r2, [r2, #12]
 800d82c:	68e4      	ldr	r4, [r4, #12]
 800d82e:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800d832:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d836:	fb03 f301 	mul.w	r3, r3, r1
 800d83a:	2d05      	cmp	r5, #5
 800d83c:	d822      	bhi.n	800d884 <awe_modLogicCompareConstInt32Process+0x68>
 800d83e:	e8df f005 	tbb	[pc, r5]
 800d842:	0d08      	.short	0x0d08
 800d844:	031c1712 	.word	0x031c1712
 800d848:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d84a:	4620      	mov	r0, r4
 800d84c:	bc30      	pop	{r4, r5}
 800d84e:	f00f b897 	b.w	801c980 <awe_vecLogicCompareConstGreaterOrEqualInt32>
 800d852:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d854:	4620      	mov	r0, r4
 800d856:	bc30      	pop	{r4, r5}
 800d858:	f00f b838 	b.w	801c8cc <awe_vecLogicCompareConstEqualInt32>
 800d85c:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d85e:	4620      	mov	r0, r4
 800d860:	bc30      	pop	{r4, r5}
 800d862:	f00f b845 	b.w	801c8f0 <awe_vecLogicCompareConstNotEqualInt32>
 800d866:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d868:	4620      	mov	r0, r4
 800d86a:	bc30      	pop	{r4, r5}
 800d86c:	f00f b852 	b.w	801c914 <awe_vecLogicCompareConstLessThanInt32>
 800d870:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d872:	4620      	mov	r0, r4
 800d874:	bc30      	pop	{r4, r5}
 800d876:	f00f b85f 	b.w	801c938 <awe_vecLogicCompareConstLessOrEqualInt32>
 800d87a:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800d87c:	4620      	mov	r0, r4
 800d87e:	bc30      	pop	{r4, r5}
 800d880:	f00f b86c 	b.w	801c95c <awe_vecLogicCompareConstGreaterInt32>
 800d884:	bc30      	pop	{r4, r5}
 800d886:	4770      	bx	lr

0800d888 <awe_modLogicCompareConstInt32Bypass>:
 800d888:	6902      	ldr	r2, [r0, #16]
 800d88a:	e9d2 3100 	ldrd	r3, r1, [r2]
 800d88e:	e9d3 3205 	ldrd	r3, r2, [r3, #20]
 800d892:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800d896:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d89a:	68c8      	ldr	r0, [r1, #12]
 800d89c:	fb03 f302 	mul.w	r3, r3, r2
 800d8a0:	2101      	movs	r1, #1
 800d8a2:	2200      	movs	r2, #0
 800d8a4:	f00d bf82 	b.w	801b7ac <awe_vecFillInt32>

0800d8a8 <awe_modLogicCompareConstReplaceProcess>:
 800d8a8:	6902      	ldr	r2, [r0, #16]
 800d8aa:	e9d2 3200 	ldrd	r3, r2, [r2]
 800d8ae:	b4f0      	push	{r4, r5, r6, r7}
 800d8b0:	695d      	ldr	r5, [r3, #20]
 800d8b2:	68d6      	ldr	r6, [r2, #12]
 800d8b4:	68dc      	ldr	r4, [r3, #12]
 800d8b6:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800d8ba:	b30d      	cbz	r5, 800d900 <awe_modLogicCompareConstReplaceProcess+0x58>
 800d8bc:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800d8be:	eddf 6a31 	vldr	s13, [pc, #196]	@ 800d984 <awe_modLogicCompareConstReplaceProcess+0xdc>
 800d8c2:	3a04      	subs	r2, #4
 800d8c4:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 800d8c8:	2300      	movs	r3, #0
 800d8ca:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800d8ce:	ecf4 7a01 	vldmia	r4!, {s15}
 800d8d2:	2905      	cmp	r1, #5
 800d8d4:	d80d      	bhi.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d8d6:	e8df f001 	tbb	[pc, r1]
 800d8da:	3846      	.short	0x3846
 800d8dc:	0315242e 	.word	0x0315242e
 800d8e0:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d8e2:	4419      	add	r1, r3
 800d8e4:	ed91 7a00 	vldr	s14, [r1]
 800d8e8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d8ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d8f0:	d911      	bls.n	800d916 <awe_modLogicCompareConstReplaceProcess+0x6e>
 800d8f2:	18f1      	adds	r1, r6, r3
 800d8f4:	edc1 7a00 	vstr	s15, [r1]
 800d8f8:	4295      	cmp	r5, r2
 800d8fa:	f103 0304 	add.w	r3, r3, #4
 800d8fe:	d1e4      	bne.n	800d8ca <awe_modLogicCompareConstReplaceProcess+0x22>
 800d900:	bcf0      	pop	{r4, r5, r6, r7}
 800d902:	4770      	bx	lr
 800d904:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d906:	4419      	add	r1, r3
 800d908:	ed91 7a00 	vldr	s14, [r1]
 800d90c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d914:	d5ed      	bpl.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d916:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800d918:	4419      	add	r1, r3
 800d91a:	680f      	ldr	r7, [r1, #0]
 800d91c:	18f1      	adds	r1, r6, r3
 800d91e:	600f      	str	r7, [r1, #0]
 800d920:	e7ea      	b.n	800d8f8 <awe_modLogicCompareConstReplaceProcess+0x50>
 800d922:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d924:	4419      	add	r1, r3
 800d926:	ed91 7a00 	vldr	s14, [r1]
 800d92a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d92e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d932:	dbde      	blt.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d934:	e7ef      	b.n	800d916 <awe_modLogicCompareConstReplaceProcess+0x6e>
 800d936:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d938:	4419      	add	r1, r3
 800d93a:	ed91 7a00 	vldr	s14, [r1]
 800d93e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d942:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d946:	ddd4      	ble.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d948:	e7e5      	b.n	800d916 <awe_modLogicCompareConstReplaceProcess+0x6e>
 800d94a:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d94c:	4419      	add	r1, r3
 800d94e:	ed91 7a00 	vldr	s14, [r1]
 800d952:	ee37 7a67 	vsub.f32	s14, s14, s15
 800d956:	eeb0 7ac7 	vabs.f32	s14, s14
 800d95a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800d95e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d962:	ddc6      	ble.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d964:	e7d7      	b.n	800d916 <awe_modLogicCompareConstReplaceProcess+0x6e>
 800d966:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800d968:	4419      	add	r1, r3
 800d96a:	ed91 7a00 	vldr	s14, [r1]
 800d96e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800d972:	eeb0 7ac7 	vabs.f32	s14, s14
 800d976:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800d97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d97e:	d8b8      	bhi.n	800d8f2 <awe_modLogicCompareConstReplaceProcess+0x4a>
 800d980:	e7c9      	b.n	800d916 <awe_modLogicCompareConstReplaceProcess+0x6e>
 800d982:	bf00      	nop
 800d984:	3c23d70a 	.word	0x3c23d70a

0800d988 <awe_modLogicCompareConstReplaceConstructor>:
 800d988:	b530      	push	{r4, r5, lr}
 800d98a:	b083      	sub	sp, #12
 800d98c:	4605      	mov	r5, r0
 800d98e:	9806      	ldr	r0, [sp, #24]
 800d990:	e9cd 3000 	strd	r3, r0, [sp]
 800d994:	4613      	mov	r3, r2
 800d996:	4814      	ldr	r0, [pc, #80]	@ (800d9e8 <awe_modLogicCompareConstReplaceConstructor+0x60>)
 800d998:	460a      	mov	r2, r1
 800d99a:	4629      	mov	r1, r5
 800d99c:	f012 fbd2 	bl	8020144 <BaseClassModule_Constructor>
 800d9a0:	b1f0      	cbz	r0, 800d9e0 <awe_modLogicCompareConstReplaceConstructor+0x58>
 800d9a2:	4604      	mov	r4, r0
 800d9a4:	6a00      	ldr	r0, [r0, #32]
 800d9a6:	462a      	mov	r2, r5
 800d9a8:	0080      	lsls	r0, r0, #2
 800d9aa:	f240 2131 	movw	r1, #561	@ 0x231
 800d9ae:	f011 fe75 	bl	801f69c <awe_fwMalloc>
 800d9b2:	6260      	str	r0, [r4, #36]	@ 0x24
 800d9b4:	b1a0      	cbz	r0, 800d9e0 <awe_modLogicCompareConstReplaceConstructor+0x58>
 800d9b6:	6a20      	ldr	r0, [r4, #32]
 800d9b8:	462a      	mov	r2, r5
 800d9ba:	0080      	lsls	r0, r0, #2
 800d9bc:	f240 2131 	movw	r1, #561	@ 0x231
 800d9c0:	f011 fe6c 	bl	801f69c <awe_fwMalloc>
 800d9c4:	62a0      	str	r0, [r4, #40]	@ 0x28
 800d9c6:	b158      	cbz	r0, 800d9e0 <awe_modLogicCompareConstReplaceConstructor+0x58>
 800d9c8:	6a20      	ldr	r0, [r4, #32]
 800d9ca:	462a      	mov	r2, r5
 800d9cc:	0080      	lsls	r0, r0, #2
 800d9ce:	f240 2131 	movw	r1, #561	@ 0x231
 800d9d2:	f011 fe63 	bl	801f69c <awe_fwMalloc>
 800d9d6:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800d9d8:	b110      	cbz	r0, 800d9e0 <awe_modLogicCompareConstReplaceConstructor+0x58>
 800d9da:	4620      	mov	r0, r4
 800d9dc:	b003      	add	sp, #12
 800d9de:	bd30      	pop	{r4, r5, pc}
 800d9e0:	2400      	movs	r4, #0
 800d9e2:	4620      	mov	r0, r4
 800d9e4:	b003      	add	sp, #12
 800d9e6:	bd30      	pop	{r4, r5, pc}
 800d9e8:	08034634 	.word	0x08034634

0800d9ec <awe_modLogicCompareConstReplaceInt32Process>:
 800d9ec:	6902      	ldr	r2, [r0, #16]
 800d9ee:	e9d2 3200 	ldrd	r3, r2, [r2]
 800d9f2:	b4f0      	push	{r4, r5, r6, r7}
 800d9f4:	695e      	ldr	r6, [r3, #20]
 800d9f6:	68d7      	ldr	r7, [r2, #12]
 800d9f8:	68dc      	ldr	r4, [r3, #12]
 800d9fa:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800d9fe:	2e00      	cmp	r6, #0
 800da00:	d02f      	beq.n	800da62 <awe_modLogicCompareConstReplaceInt32Process+0x76>
 800da02:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800da04:	3a04      	subs	r2, #4
 800da06:	3c04      	subs	r4, #4
 800da08:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800da0c:	2300      	movs	r3, #0
 800da0e:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800da12:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800da16:	2905      	cmp	r1, #5
 800da18:	d829      	bhi.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da1a:	e8df f001 	tbb	[pc, r1]
 800da1e:	1724      	.short	0x1724
 800da20:	03080d12 	.word	0x03080d12
 800da24:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da26:	58c9      	ldr	r1, [r1, r3]
 800da28:	42a9      	cmp	r1, r5
 800da2a:	dc20      	bgt.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da2c:	e012      	b.n	800da54 <awe_modLogicCompareConstReplaceInt32Process+0x68>
 800da2e:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da30:	58c9      	ldr	r1, [r1, r3]
 800da32:	42a9      	cmp	r1, r5
 800da34:	da1b      	bge.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da36:	e00d      	b.n	800da54 <awe_modLogicCompareConstReplaceInt32Process+0x68>
 800da38:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da3a:	58c9      	ldr	r1, [r1, r3]
 800da3c:	42a9      	cmp	r1, r5
 800da3e:	db16      	blt.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da40:	e008      	b.n	800da54 <awe_modLogicCompareConstReplaceInt32Process+0x68>
 800da42:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da44:	58c9      	ldr	r1, [r1, r3]
 800da46:	42a9      	cmp	r1, r5
 800da48:	dd11      	ble.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da4a:	e003      	b.n	800da54 <awe_modLogicCompareConstReplaceInt32Process+0x68>
 800da4c:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da4e:	58c9      	ldr	r1, [r1, r3]
 800da50:	42a9      	cmp	r1, r5
 800da52:	d00c      	beq.n	800da6e <awe_modLogicCompareConstReplaceInt32Process+0x82>
 800da54:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800da56:	58c9      	ldr	r1, [r1, r3]
 800da58:	50f9      	str	r1, [r7, r3]
 800da5a:	4296      	cmp	r6, r2
 800da5c:	f103 0304 	add.w	r3, r3, #4
 800da60:	d1d5      	bne.n	800da0e <awe_modLogicCompareConstReplaceInt32Process+0x22>
 800da62:	bcf0      	pop	{r4, r5, r6, r7}
 800da64:	4770      	bx	lr
 800da66:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800da68:	58c9      	ldr	r1, [r1, r3]
 800da6a:	42a9      	cmp	r1, r5
 800da6c:	d0f2      	beq.n	800da54 <awe_modLogicCompareConstReplaceInt32Process+0x68>
 800da6e:	50fd      	str	r5, [r7, r3]
 800da70:	e7f3      	b.n	800da5a <awe_modLogicCompareConstReplaceInt32Process+0x6e>
 800da72:	bf00      	nop

0800da74 <awe_modLogicCompareConstReplaceInt32Constructor>:
 800da74:	b530      	push	{r4, r5, lr}
 800da76:	b083      	sub	sp, #12
 800da78:	4605      	mov	r5, r0
 800da7a:	9806      	ldr	r0, [sp, #24]
 800da7c:	e9cd 3000 	strd	r3, r0, [sp]
 800da80:	4613      	mov	r3, r2
 800da82:	4814      	ldr	r0, [pc, #80]	@ (800dad4 <awe_modLogicCompareConstReplaceInt32Constructor+0x60>)
 800da84:	460a      	mov	r2, r1
 800da86:	4629      	mov	r1, r5
 800da88:	f012 fb5c 	bl	8020144 <BaseClassModule_Constructor>
 800da8c:	b1f0      	cbz	r0, 800dacc <awe_modLogicCompareConstReplaceInt32Constructor+0x58>
 800da8e:	4604      	mov	r4, r0
 800da90:	6a00      	ldr	r0, [r0, #32]
 800da92:	462a      	mov	r2, r5
 800da94:	0080      	lsls	r0, r0, #2
 800da96:	f240 2131 	movw	r1, #561	@ 0x231
 800da9a:	f011 fdff 	bl	801f69c <awe_fwMalloc>
 800da9e:	6260      	str	r0, [r4, #36]	@ 0x24
 800daa0:	b1a0      	cbz	r0, 800dacc <awe_modLogicCompareConstReplaceInt32Constructor+0x58>
 800daa2:	6a20      	ldr	r0, [r4, #32]
 800daa4:	462a      	mov	r2, r5
 800daa6:	0080      	lsls	r0, r0, #2
 800daa8:	f240 2131 	movw	r1, #561	@ 0x231
 800daac:	f011 fdf6 	bl	801f69c <awe_fwMalloc>
 800dab0:	62a0      	str	r0, [r4, #40]	@ 0x28
 800dab2:	b158      	cbz	r0, 800dacc <awe_modLogicCompareConstReplaceInt32Constructor+0x58>
 800dab4:	6a20      	ldr	r0, [r4, #32]
 800dab6:	462a      	mov	r2, r5
 800dab8:	0080      	lsls	r0, r0, #2
 800daba:	f240 2131 	movw	r1, #561	@ 0x231
 800dabe:	f011 fded 	bl	801f69c <awe_fwMalloc>
 800dac2:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800dac4:	b110      	cbz	r0, 800dacc <awe_modLogicCompareConstReplaceInt32Constructor+0x58>
 800dac6:	4620      	mov	r0, r4
 800dac8:	b003      	add	sp, #12
 800daca:	bd30      	pop	{r4, r5, pc}
 800dacc:	2400      	movs	r4, #0
 800dace:	4620      	mov	r0, r4
 800dad0:	b003      	add	sp, #12
 800dad2:	bd30      	pop	{r4, r5, pc}
 800dad4:	0803465c 	.word	0x0803465c

0800dad8 <awe_modLogicCompareInt32Bypass>:
 800dad8:	6902      	ldr	r2, [r0, #16]
 800dada:	6813      	ldr	r3, [r2, #0]
 800dadc:	6891      	ldr	r1, [r2, #8]
 800dade:	e9d3 3205 	ldrd	r3, r2, [r3, #20]
 800dae2:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800dae6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800daea:	68c8      	ldr	r0, [r1, #12]
 800daec:	fb03 f302 	mul.w	r3, r3, r2
 800daf0:	2101      	movs	r1, #1
 800daf2:	2200      	movs	r2, #0
 800daf4:	f00d be5a 	b.w	801b7ac <awe_vecFillInt32>

0800daf8 <awe_modLogicCompareInt32Process>:
 800daf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dafc:	4605      	mov	r5, r0
 800dafe:	6900      	ldr	r0, [r0, #16]
 800db00:	6801      	ldr	r1, [r0, #0]
 800db02:	6886      	ldr	r6, [r0, #8]
 800db04:	6840      	ldr	r0, [r0, #4]
 800db06:	68f6      	ldr	r6, [r6, #12]
 800db08:	68cf      	ldr	r7, [r1, #12]
 800db0a:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800db0e:	e9d1 4305 	ldrd	r4, r3, [r1, #20]
 800db12:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800db16:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800db1a:	fb04 f403 	mul.w	r4, r4, r3
 800db1e:	4623      	mov	r3, r4
 800db20:	2200      	movs	r2, #0
 800db22:	4630      	mov	r0, r6
 800db24:	2101      	movs	r1, #1
 800db26:	f00d fe41 	bl	801b7ac <awe_vecFillInt32>
 800db2a:	6a2b      	ldr	r3, [r5, #32]
 800db2c:	2b05      	cmp	r3, #5
 800db2e:	d834      	bhi.n	800db9a <awe_modLogicCompareInt32Process+0xa2>
 800db30:	e8df f003 	tbb	[pc, r3]
 800db34:	231b130b 	.word	0x231b130b
 800db38:	032b      	.short	0x032b
 800db3a:	4623      	mov	r3, r4
 800db3c:	4632      	mov	r2, r6
 800db3e:	4641      	mov	r1, r8
 800db40:	4638      	mov	r0, r7
 800db42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db46:	f00e bf91 	b.w	801ca6c <awe_vecLogicCompareGreaterOrEqualInt32>
 800db4a:	4623      	mov	r3, r4
 800db4c:	4632      	mov	r2, r6
 800db4e:	4641      	mov	r1, r8
 800db50:	4638      	mov	r0, r7
 800db52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db56:	f00e bf25 	b.w	801c9a4 <awe_vecLogicCompareEqualInt32>
 800db5a:	4623      	mov	r3, r4
 800db5c:	4632      	mov	r2, r6
 800db5e:	4641      	mov	r1, r8
 800db60:	4638      	mov	r0, r7
 800db62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db66:	f00e bf31 	b.w	801c9cc <awe_vecLogicCompareNotEqualInt32>
 800db6a:	4623      	mov	r3, r4
 800db6c:	4632      	mov	r2, r6
 800db6e:	4641      	mov	r1, r8
 800db70:	4638      	mov	r0, r7
 800db72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db76:	f00e bf3d 	b.w	801c9f4 <awe_vecLogicCompareLessThanInt32>
 800db7a:	4623      	mov	r3, r4
 800db7c:	4632      	mov	r2, r6
 800db7e:	4641      	mov	r1, r8
 800db80:	4638      	mov	r0, r7
 800db82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db86:	f00e bf49 	b.w	801ca1c <awe_vecLogicCompareLessOrEqualInt32>
 800db8a:	4623      	mov	r3, r4
 800db8c:	4632      	mov	r2, r6
 800db8e:	4641      	mov	r1, r8
 800db90:	4638      	mov	r0, r7
 800db92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800db96:	f00e bf55 	b.w	801ca44 <awe_vecLogicCompareGreaterInt32>
 800db9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db9e:	bf00      	nop

0800dba0 <awe_modMaxAbsProcess>:
 800dba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dba4:	6907      	ldr	r7, [r0, #16]
 800dba6:	f890 8018 	ldrb.w	r8, [r0, #24]
 800dbaa:	683a      	ldr	r2, [r7, #0]
 800dbac:	f857 4028 	ldr.w	r4, [r7, r8, lsl #2]
 800dbb0:	68d0      	ldr	r0, [r2, #12]
 800dbb2:	e9d2 3105 	ldrd	r3, r1, [r2, #20]
 800dbb6:	f1b8 0f01 	cmp.w	r8, #1
 800dbba:	b082      	sub	sp, #8
 800dbbc:	68e2      	ldr	r2, [r4, #12]
 800dbbe:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800dbc2:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800dbc6:	ea4f 0e88 	mov.w	lr, r8, lsl #2
 800dbca:	d05d      	beq.n	800dc88 <awe_modMaxAbsProcess+0xe8>
 800dbcc:	2900      	cmp	r1, #0
 800dbce:	d051      	beq.n	800dc74 <awe_modMaxAbsProcess+0xd4>
 800dbd0:	008d      	lsls	r5, r1, #2
 800dbd2:	1956      	adds	r6, r2, r5
 800dbd4:	4614      	mov	r4, r2
 800dbd6:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 800dbda:	ed90 7a00 	vldr	s14, [r0]
 800dbde:	2b01      	cmp	r3, #1
 800dbe0:	f100 0104 	add.w	r1, r0, #4
 800dbe4:	eeb0 7ac7 	vabs.f32	s14, s14
 800dbe8:	d90d      	bls.n	800dc06 <awe_modMaxAbsProcess+0x66>
 800dbea:	4460      	add	r0, ip
 800dbec:	ecf1 7a01 	vldmia	r1!, {s15}
 800dbf0:	eef0 7ae7 	vabs.f32	s15, s15
 800dbf4:	eef4 7a47 	vcmp.f32	s15, s14
 800dbf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbfc:	bfc8      	it	gt
 800dbfe:	eeb0 7a67 	vmovgt.f32	s14, s15
 800dc02:	4281      	cmp	r1, r0
 800dc04:	d1f2      	bne.n	800dbec <awe_modMaxAbsProcess+0x4c>
 800dc06:	eca4 7a01 	vstmia	r4!, {s14}
 800dc0a:	42a6      	cmp	r6, r4
 800dc0c:	4608      	mov	r0, r1
 800dc0e:	d1e4      	bne.n	800dbda <awe_modMaxAbsProcess+0x3a>
 800dc10:	f1b8 0f01 	cmp.w	r8, #1
 800dc14:	d92e      	bls.n	800dc74 <awe_modMaxAbsProcess+0xd4>
 800dc16:	f1a7 0c04 	sub.w	ip, r7, #4
 800dc1a:	4415      	add	r5, r2
 800dc1c:	44f4      	add	ip, lr
 800dc1e:	f857 3f04 	ldr.w	r3, [r7, #4]!
 800dc22:	695c      	ldr	r4, [r3, #20]
 800dc24:	68d9      	ldr	r1, [r3, #12]
 800dc26:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800dc2a:	00a6      	lsls	r6, r4, #2
 800dc2c:	4610      	mov	r0, r2
 800dc2e:	ed91 7a00 	vldr	s14, [r1]
 800dc32:	2c01      	cmp	r4, #1
 800dc34:	f101 0304 	add.w	r3, r1, #4
 800dc38:	eeb0 7ac7 	vabs.f32	s14, s14
 800dc3c:	d90d      	bls.n	800dc5a <awe_modMaxAbsProcess+0xba>
 800dc3e:	4431      	add	r1, r6
 800dc40:	ecf3 7a01 	vldmia	r3!, {s15}
 800dc44:	eef0 7ae7 	vabs.f32	s15, s15
 800dc48:	eef4 7ac7 	vcmpe.f32	s15, s14
 800dc4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc50:	bf58      	it	pl
 800dc52:	eeb0 7a67 	vmovpl.f32	s14, s15
 800dc56:	428b      	cmp	r3, r1
 800dc58:	d1f2      	bne.n	800dc40 <awe_modMaxAbsProcess+0xa0>
 800dc5a:	edd0 7a00 	vldr	s15, [r0]
 800dc5e:	eef4 7ac7 	vcmpe.f32	s15, s14
 800dc62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc66:	4619      	mov	r1, r3
 800dc68:	dd07      	ble.n	800dc7a <awe_modMaxAbsProcess+0xda>
 800dc6a:	3004      	adds	r0, #4
 800dc6c:	42a8      	cmp	r0, r5
 800dc6e:	d1de      	bne.n	800dc2e <awe_modMaxAbsProcess+0x8e>
 800dc70:	45bc      	cmp	ip, r7
 800dc72:	d1d4      	bne.n	800dc1e <awe_modMaxAbsProcess+0x7e>
 800dc74:	b002      	add	sp, #8
 800dc76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc7a:	eca0 7a01 	vstmia	r0!, {s14}
 800dc7e:	4285      	cmp	r5, r0
 800dc80:	d1d5      	bne.n	800dc2e <awe_modMaxAbsProcess+0x8e>
 800dc82:	45bc      	cmp	ip, r7
 800dc84:	d1cb      	bne.n	800dc1e <awe_modMaxAbsProcess+0x7e>
 800dc86:	e7f5      	b.n	800dc74 <awe_modMaxAbsProcess+0xd4>
 800dc88:	2b01      	cmp	r3, #1
 800dc8a:	d19f      	bne.n	800dbcc <awe_modMaxAbsProcess+0x2c>
 800dc8c:	9100      	str	r1, [sp, #0]
 800dc8e:	4619      	mov	r1, r3
 800dc90:	f00a fde0 	bl	8018854 <awe_vecAbs>
 800dc94:	e7ee      	b.n	800dc74 <awe_modMaxAbsProcess+0xd4>
 800dc96:	bf00      	nop

0800dc98 <awe_modMeterConstructor>:
 800dc98:	b570      	push	{r4, r5, r6, lr}
 800dc9a:	b082      	sub	sp, #8
 800dc9c:	4616      	mov	r6, r2
 800dc9e:	4605      	mov	r5, r0
 800dca0:	9806      	ldr	r0, [sp, #24]
 800dca2:	9300      	str	r3, [sp, #0]
 800dca4:	460a      	mov	r2, r1
 800dca6:	9001      	str	r0, [sp, #4]
 800dca8:	4633      	mov	r3, r6
 800dcaa:	4629      	mov	r1, r5
 800dcac:	480b      	ldr	r0, [pc, #44]	@ (800dcdc <awe_modMeterConstructor+0x44>)
 800dcae:	f012 fa49 	bl	8020144 <BaseClassModule_Constructor>
 800dcb2:	b178      	cbz	r0, 800dcd4 <awe_modMeterConstructor+0x3c>
 800dcb4:	6833      	ldr	r3, [r6, #0]
 800dcb6:	4604      	mov	r4, r0
 800dcb8:	6958      	ldr	r0, [r3, #20]
 800dcba:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800dcbe:	0080      	lsls	r0, r0, #2
 800dcc0:	462a      	mov	r2, r5
 800dcc2:	f240 2131 	movw	r1, #561	@ 0x231
 800dcc6:	f011 fce9 	bl	801f69c <awe_fwMalloc>
 800dcca:	6360      	str	r0, [r4, #52]	@ 0x34
 800dccc:	b110      	cbz	r0, 800dcd4 <awe_modMeterConstructor+0x3c>
 800dcce:	4620      	mov	r0, r4
 800dcd0:	b002      	add	sp, #8
 800dcd2:	bd70      	pop	{r4, r5, r6, pc}
 800dcd4:	2400      	movs	r4, #0
 800dcd6:	4620      	mov	r0, r4
 800dcd8:	b002      	add	sp, #8
 800dcda:	bd70      	pop	{r4, r5, r6, pc}
 800dcdc:	080346d4 	.word	0x080346d4

0800dce0 <awe_modMeterProcess>:
 800dce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dce4:	6902      	ldr	r2, [r0, #16]
 800dce6:	6a04      	ldr	r4, [r0, #32]
 800dce8:	6813      	ldr	r3, [r2, #0]
 800dcea:	ed2d 8b02 	vpush	{d8}
 800dcee:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800dcf2:	f014 0410 	ands.w	r4, r4, #16
 800dcf6:	b084      	sub	sp, #16
 800dcf8:	4605      	mov	r5, r0
 800dcfa:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dcfe:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800dd02:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800dd06:	d02a      	beq.n	800dd5e <awe_modMeterProcess+0x7e>
 800dd08:	b326      	cbz	r6, 800dd54 <awe_modMeterProcess+0x74>
 800dd0a:	eb08 0986 	add.w	r9, r8, r6, lsl #2
 800dd0e:	4644      	mov	r4, r8
 800dd10:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 800dd14:	ab03      	add	r3, sp, #12
 800dd16:	463a      	mov	r2, r7
 800dd18:	4620      	mov	r0, r4
 800dd1a:	4631      	mov	r1, r6
 800dd1c:	f00e feba 	bl	801ca94 <awe_vecMaxAbs>
 800dd20:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800dd22:	eba4 0208 	sub.w	r2, r4, r8
 800dd26:	4413      	add	r3, r2
 800dd28:	edd3 6a00 	vldr	s13, [r3]
 800dd2c:	eeb4 0ae6 	vcmpe.f32	s0, s13
 800dd30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dd34:	bfcc      	ite	gt
 800dd36:	ed95 7a0b 	vldrgt	s14, [r5, #44]	@ 0x2c
 800dd3a:	ed95 7a0c 	vldrle	s14, [r5, #48]	@ 0x30
 800dd3e:	ee78 7a47 	vsub.f32	s15, s16, s14
 800dd42:	3404      	adds	r4, #4
 800dd44:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800dd48:	454c      	cmp	r4, r9
 800dd4a:	eee7 7a00 	vfma.f32	s15, s14, s0
 800dd4e:	edc3 7a00 	vstr	s15, [r3]
 800dd52:	d1df      	bne.n	800dd14 <awe_modMeterProcess+0x34>
 800dd54:	b004      	add	sp, #16
 800dd56:	ecbd 8b02 	vpop	{d8}
 800dd5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dd5e:	2e00      	cmp	r6, #0
 800dd60:	d0f8      	beq.n	800dd54 <awe_modMeterProcess+0x74>
 800dd62:	6853      	ldr	r3, [r2, #4]
 800dd64:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800dd68:	ea4f 0986 	mov.w	r9, r6, lsl #2
 800dd6c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800dd6e:	edd5 0a0c 	vldr	s1, [r5, #48]	@ 0x30
 800dd72:	ed95 0a0b 	vldr	s0, [r5, #44]	@ 0x2c
 800dd76:	9701      	str	r7, [sp, #4]
 800dd78:	4423      	add	r3, r4
 800dd7a:	9300      	str	r3, [sp, #0]
 800dd7c:	eb08 0004 	add.w	r0, r8, r4
 800dd80:	2301      	movs	r3, #1
 800dd82:	4652      	mov	r2, sl
 800dd84:	4631      	mov	r1, r6
 800dd86:	3404      	adds	r4, #4
 800dd88:	f00b fcee 	bl	8019768 <awe_vecAttackRelease>
 800dd8c:	45a1      	cmp	r9, r4
 800dd8e:	d1ed      	bne.n	800dd6c <awe_modMeterProcess+0x8c>
 800dd90:	b004      	add	sp, #16
 800dd92:	ecbd 8b02 	vpop	{d8}
 800dd96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dd9a:	bf00      	nop

0800dd9c <awe_modMeterSet>:
 800dd9c:	b399      	cbz	r1, 800de06 <awe_modMeterSet+0x6a>
 800dd9e:	b538      	push	{r3, r4, r5, lr}
 800dda0:	6a02      	ldr	r2, [r0, #32]
 800dda2:	6903      	ldr	r3, [r0, #16]
 800dda4:	6819      	ldr	r1, [r3, #0]
 800dda6:	f002 030f 	and.w	r3, r2, #15
 800ddaa:	2b01      	cmp	r3, #1
 800ddac:	ed2d 8b02 	vpush	{d8}
 800ddb0:	698d      	ldr	r5, [r1, #24]
 800ddb2:	ed91 8a04 	vldr	s16, [r1, #16]
 800ddb6:	d028      	beq.n	800de0a <awe_modMeterSet+0x6e>
 800ddb8:	2b02      	cmp	r3, #2
 800ddba:	d034      	beq.n	800de26 <awe_modMeterSet+0x8a>
 800ddbc:	b363      	cbz	r3, 800de18 <awe_modMeterSet+0x7c>
 800ddbe:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800ddc2:	eddf 7a1c 	vldr	s15, [pc, #112]	@ 800de34 <awe_modMeterSet+0x98>
 800ddc6:	ee20 0a27 	vmul.f32	s0, s0, s15
 800ddca:	06d3      	lsls	r3, r2, #27
 800ddcc:	bf4c      	ite	mi
 800ddce:	f3c5 0510 	ubfxmi	r5, r5, #0, #17
 800ddd2:	2501      	movpl	r5, #1
 800ddd4:	4604      	mov	r4, r0
 800ddd6:	eef0 0a48 	vmov.f32	s1, s16
 800ddda:	4628      	mov	r0, r5
 800dddc:	f015 fde0 	bl	80239a0 <design_smoother>
 800dde0:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800dde4:	eddf 7a13 	vldr	s15, [pc, #76]	@ 800de34 <awe_modMeterSet+0x98>
 800dde8:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800ddec:	4628      	mov	r0, r5
 800ddee:	eef0 0a48 	vmov.f32	s1, s16
 800ddf2:	ee27 0a27 	vmul.f32	s0, s14, s15
 800ddf6:	f015 fdd3 	bl	80239a0 <design_smoother>
 800ddfa:	ecbd 8b02 	vpop	{d8}
 800ddfe:	2000      	movs	r0, #0
 800de00:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 800de04:	bd38      	pop	{r3, r4, r5, pc}
 800de06:	2000      	movs	r0, #0
 800de08:	4770      	bx	lr
 800de0a:	4b0b      	ldr	r3, [pc, #44]	@ (800de38 <awe_modMeterSet+0x9c>)
 800de0c:	6283      	str	r3, [r0, #40]	@ 0x28
 800de0e:	4b0b      	ldr	r3, [pc, #44]	@ (800de3c <awe_modMeterSet+0xa0>)
 800de10:	ed9f 0a0b 	vldr	s0, [pc, #44]	@ 800de40 <awe_modMeterSet+0xa4>
 800de14:	6243      	str	r3, [r0, #36]	@ 0x24
 800de16:	e7d8      	b.n	800ddca <awe_modMeterSet+0x2e>
 800de18:	4b0a      	ldr	r3, [pc, #40]	@ (800de44 <awe_modMeterSet+0xa8>)
 800de1a:	6283      	str	r3, [r0, #40]	@ 0x28
 800de1c:	4b0a      	ldr	r3, [pc, #40]	@ (800de48 <awe_modMeterSet+0xac>)
 800de1e:	ed9f 0a0b 	vldr	s0, [pc, #44]	@ 800de4c <awe_modMeterSet+0xb0>
 800de22:	6243      	str	r3, [r0, #36]	@ 0x24
 800de24:	e7d1      	b.n	800ddca <awe_modMeterSet+0x2e>
 800de26:	4b0a      	ldr	r3, [pc, #40]	@ (800de50 <awe_modMeterSet+0xb4>)
 800de28:	ed9f 0a0a 	vldr	s0, [pc, #40]	@ 800de54 <awe_modMeterSet+0xb8>
 800de2c:	6243      	str	r3, [r0, #36]	@ 0x24
 800de2e:	6283      	str	r3, [r0, #40]	@ 0x28
 800de30:	e7cb      	b.n	800ddca <awe_modMeterSet+0x2e>
 800de32:	bf00      	nop
 800de34:	3ede3540 	.word	0x3ede3540
 800de38:	44b54000 	.word	0x44b54000
 800de3c:	41200000 	.word	0x41200000
 800de40:	408ae148 	.word	0x408ae148
 800de44:	4487e000 	.word	0x4487e000
 800de48:	40a00000 	.word	0x40a00000
 800de4c:	400ae148 	.word	0x400ae148
 800de50:	42820000 	.word	0x42820000
 800de54:	41e1ae15 	.word	0x41e1ae15

0800de58 <awe_modMixerV3Set>:
 800de58:	054b      	lsls	r3, r1, #21
 800de5a:	d573      	bpl.n	800df44 <awe_modMixerV3Set+0xec>
 800de5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de60:	7e03      	ldrb	r3, [r0, #24]
 800de62:	6904      	ldr	r4, [r0, #16]
 800de64:	b087      	sub	sp, #28
 800de66:	9302      	str	r3, [sp, #8]
 800de68:	2b00      	cmp	r3, #0
 800de6a:	d06d      	beq.n	800df48 <awe_modMixerV3Set+0xf0>
 800de6c:	1f22      	subs	r2, r4, #4
 800de6e:	0099      	lsls	r1, r3, #2
 800de70:	1855      	adds	r5, r2, r1
 800de72:	2600      	movs	r6, #0
 800de74:	f852 3f04 	ldr.w	r3, [r2, #4]!
 800de78:	695b      	ldr	r3, [r3, #20]
 800de7a:	42aa      	cmp	r2, r5
 800de7c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800de80:	441e      	add	r6, r3
 800de82:	d1f7      	bne.n	800de74 <awe_modMixerV3Set+0x1c>
 800de84:	9b02      	ldr	r3, [sp, #8]
 800de86:	9603      	str	r6, [sp, #12]
 800de88:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800de8c:	f8d0 c030 	ldr.w	ip, [r0, #48]	@ 0x30
 800de90:	695a      	ldr	r2, [r3, #20]
 800de92:	f8d0 e020 	ldr.w	lr, [r0, #32]
 800de96:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800de9a:	2a00      	cmp	r2, #0
 800de9c:	d04a      	beq.n	800df34 <awe_modMixerV3Set+0xdc>
 800de9e:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800dea2:	eddf 6a2b 	vldr	s13, [pc, #172]	@ 800df50 <awe_modMixerV3Set+0xf8>
 800dea6:	1f23      	subs	r3, r4, #4
 800dea8:	eb09 0282 	add.w	r2, r9, r2, lsl #2
 800deac:	2400      	movs	r4, #0
 800deae:	9305      	str	r3, [sp, #20]
 800deb0:	440b      	add	r3, r1
 800deb2:	9204      	str	r2, [sp, #16]
 800deb4:	9400      	str	r4, [sp, #0]
 800deb6:	9301      	str	r3, [sp, #4]
 800deb8:	4622      	mov	r2, r4
 800deba:	9b02      	ldr	r3, [sp, #8]
 800debc:	b38b      	cbz	r3, 800df22 <awe_modMixerV3Set+0xca>
 800debe:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800dec2:	f04f 0a00 	mov.w	sl, #0
 800dec6:	f858 3f04 	ldr.w	r3, [r8, #4]!
 800deca:	695e      	ldr	r6, [r3, #20]
 800decc:	68db      	ldr	r3, [r3, #12]
 800dece:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800ded2:	b316      	cbz	r6, 800df1a <awe_modMixerV3Set+0xc2>
 800ded4:	9900      	ldr	r1, [sp, #0]
 800ded6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ded8:	4451      	add	r1, sl
 800deda:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 800dede:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800dee2:	ecf1 7a01 	vldmia	r1!, {s15}
 800dee6:	eeb0 7ae7 	vabs.f32	s14, s15
 800deea:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800deee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800def2:	eb02 0442 	add.w	r4, r2, r2, lsl #1
 800def6:	d40d      	bmi.n	800df14 <awe_modMixerV3Set+0xbc>
 800def8:	4596      	cmp	lr, r2
 800defa:	dd0b      	ble.n	800df14 <awe_modMixerV3Set+0xbc>
 800defc:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800defe:	eb0c 0b84 	add.w	fp, ip, r4, lsl #2
 800df02:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 800df06:	edc5 7a00 	vstr	s15, [r5]
 800df0a:	f84c 3024 	str.w	r3, [ip, r4, lsl #2]
 800df0e:	e9cb 9601 	strd	r9, r6, [fp, #4]
 800df12:	3201      	adds	r2, #1
 800df14:	3304      	adds	r3, #4
 800df16:	429f      	cmp	r7, r3
 800df18:	d1e3      	bne.n	800dee2 <awe_modMixerV3Set+0x8a>
 800df1a:	9b01      	ldr	r3, [sp, #4]
 800df1c:	4543      	cmp	r3, r8
 800df1e:	44b2      	add	sl, r6
 800df20:	d1d1      	bne.n	800dec6 <awe_modMixerV3Set+0x6e>
 800df22:	9b00      	ldr	r3, [sp, #0]
 800df24:	9903      	ldr	r1, [sp, #12]
 800df26:	440b      	add	r3, r1
 800df28:	9300      	str	r3, [sp, #0]
 800df2a:	9b04      	ldr	r3, [sp, #16]
 800df2c:	f109 0904 	add.w	r9, r9, #4
 800df30:	454b      	cmp	r3, r9
 800df32:	d1c2      	bne.n	800deba <awe_modMixerV3Set+0x62>
 800df34:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800df38:	2000      	movs	r0, #0
 800df3a:	f84c 202e 	str.w	r2, [ip, lr, lsl #2]
 800df3e:	b007      	add	sp, #28
 800df40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df44:	2000      	movs	r0, #0
 800df46:	4770      	bx	lr
 800df48:	4619      	mov	r1, r3
 800df4a:	9303      	str	r3, [sp, #12]
 800df4c:	e79c      	b.n	800de88 <awe_modMixerV3Set+0x30>
 800df4e:	bf00      	nop
 800df50:	358637bd 	.word	0x358637bd

0800df54 <awe_modMixerV3Constructor>:
 800df54:	b570      	push	{r4, r5, r6, lr}
 800df56:	b082      	sub	sp, #8
 800df58:	4616      	mov	r6, r2
 800df5a:	4605      	mov	r5, r0
 800df5c:	9806      	ldr	r0, [sp, #24]
 800df5e:	9300      	str	r3, [sp, #0]
 800df60:	460a      	mov	r2, r1
 800df62:	9001      	str	r0, [sp, #4]
 800df64:	4633      	mov	r3, r6
 800df66:	4629      	mov	r1, r5
 800df68:	4818      	ldr	r0, [pc, #96]	@ (800dfcc <awe_modMixerV3Constructor+0x78>)
 800df6a:	f012 f8eb 	bl	8020144 <BaseClassModule_Constructor>
 800df6e:	b348      	cbz	r0, 800dfc4 <awe_modMixerV3Constructor+0x70>
 800df70:	7e03      	ldrb	r3, [r0, #24]
 800df72:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800df76:	4604      	mov	r4, r0
 800df78:	695b      	ldr	r3, [r3, #20]
 800df7a:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800df7c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800df80:	0080      	lsls	r0, r0, #2
 800df82:	fb00 f003 	mul.w	r0, r0, r3
 800df86:	462a      	mov	r2, r5
 800df88:	f240 2131 	movw	r1, #561	@ 0x231
 800df8c:	f011 fb86 	bl	801f69c <awe_fwMalloc>
 800df90:	62a0      	str	r0, [r4, #40]	@ 0x28
 800df92:	b1b8      	cbz	r0, 800dfc4 <awe_modMixerV3Constructor+0x70>
 800df94:	6a20      	ldr	r0, [r4, #32]
 800df96:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800df9a:	0080      	lsls	r0, r0, #2
 800df9c:	3004      	adds	r0, #4
 800df9e:	462a      	mov	r2, r5
 800dfa0:	f240 2131 	movw	r1, #561	@ 0x231
 800dfa4:	f011 fb7a 	bl	801f69c <awe_fwMalloc>
 800dfa8:	6320      	str	r0, [r4, #48]	@ 0x30
 800dfaa:	b158      	cbz	r0, 800dfc4 <awe_modMixerV3Constructor+0x70>
 800dfac:	6a20      	ldr	r0, [r4, #32]
 800dfae:	462a      	mov	r2, r5
 800dfb0:	0080      	lsls	r0, r0, #2
 800dfb2:	f240 2131 	movw	r1, #561	@ 0x231
 800dfb6:	f011 fb71 	bl	801f69c <awe_fwMalloc>
 800dfba:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800dfbc:	b110      	cbz	r0, 800dfc4 <awe_modMixerV3Constructor+0x70>
 800dfbe:	4620      	mov	r0, r4
 800dfc0:	b002      	add	sp, #8
 800dfc2:	bd70      	pop	{r4, r5, r6, pc}
 800dfc4:	2400      	movs	r4, #0
 800dfc6:	4620      	mov	r0, r4
 800dfc8:	b002      	add	sp, #8
 800dfca:	bd70      	pop	{r4, r5, r6, pc}
 800dfcc:	080346fc 	.word	0x080346fc

0800dfd0 <awe_modMixerV3Process>:
 800dfd0:	6903      	ldr	r3, [r0, #16]
 800dfd2:	7e02      	ldrb	r2, [r0, #24]
 800dfd4:	6819      	ldr	r1, [r3, #0]
 800dfd6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800dfda:	6a03      	ldr	r3, [r0, #32]
 800dfdc:	ed9f 0a19 	vldr	s0, [pc, #100]	@ 800e044 <awe_modMixerV3Process+0x74>
 800dfe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfe4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800dfe8:	698f      	ldr	r7, [r1, #24]
 800dfea:	6956      	ldr	r6, [r2, #20]
 800dfec:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800dfee:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800dff2:	f851 8023 	ldr.w	r8, [r1, r3, lsl #2]
 800dff6:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800dffa:	b082      	sub	sp, #8
 800dffc:	4605      	mov	r5, r0
 800dffe:	2101      	movs	r1, #1
 800e000:	68d0      	ldr	r0, [r2, #12]
 800e002:	fb07 f206 	mul.w	r2, r7, r6
 800e006:	f00d faad 	bl	801b564 <awe_vecFill>
 800e00a:	f1b8 0f00 	cmp.w	r8, #0
 800e00e:	dd15      	ble.n	800e03c <awe_modMixerV3Process+0x6c>
 800e010:	2400      	movs	r4, #0
 800e012:	e9d5 320b 	ldrd	r3, r2, [r5, #44]	@ 0x2c
 800e016:	eb04 0044 	add.w	r0, r4, r4, lsl #1
 800e01a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800e01e:	eb02 0180 	add.w	r1, r2, r0, lsl #2
 800e022:	ed93 0a00 	vldr	s0, [r3]
 800e026:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800e02a:	3401      	adds	r4, #1
 800e02c:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800e030:	4633      	mov	r3, r6
 800e032:	9700      	str	r7, [sp, #0]
 800e034:	f00f fa9e 	bl	801d574 <awe_vecScaleAdd>
 800e038:	45a0      	cmp	r8, r4
 800e03a:	d1ea      	bne.n	800e012 <awe_modMixerV3Process+0x42>
 800e03c:	b002      	add	sp, #8
 800e03e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e042:	bf00      	nop
 800e044:	00000000 	.word	0x00000000

0800e048 <awe_modMixerV3Bypass>:
 800e048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e04c:	7e03      	ldrb	r3, [r0, #24]
 800e04e:	6904      	ldr	r4, [r0, #16]
 800e050:	6821      	ldr	r1, [r4, #0]
 800e052:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 800e056:	6988      	ldr	r0, [r1, #24]
 800e058:	6951      	ldr	r1, [r2, #20]
 800e05a:	68d2      	ldr	r2, [r2, #12]
 800e05c:	b087      	sub	sp, #28
 800e05e:	f3c0 0b10 	ubfx	fp, r0, #0, #17
 800e062:	f3c1 0a09 	ubfx	sl, r1, #0, #10
 800e066:	9204      	str	r2, [sp, #16]
 800e068:	fb0a f20b 	mul.w	r2, sl, fp
 800e06c:	2b00      	cmp	r3, #0
 800e06e:	d047      	beq.n	800e100 <awe_modMixerV3Bypass+0xb8>
 800e070:	0099      	lsls	r1, r3, #2
 800e072:	1f20      	subs	r0, r4, #4
 800e074:	4401      	add	r1, r0
 800e076:	9403      	str	r4, [sp, #12]
 800e078:	f04f 0800 	mov.w	r8, #0
 800e07c:	f850 3f04 	ldr.w	r3, [r0, #4]!
 800e080:	695b      	ldr	r3, [r3, #20]
 800e082:	4281      	cmp	r1, r0
 800e084:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800e088:	4498      	add	r8, r3
 800e08a:	d1f7      	bne.n	800e07c <awe_modMixerV3Bypass+0x34>
 800e08c:	9005      	str	r0, [sp, #20]
 800e08e:	45d0      	cmp	r8, sl
 800e090:	ed9f 0a20 	vldr	s0, [pc, #128]	@ 800e114 <awe_modMixerV3Bypass+0xcc>
 800e094:	9804      	ldr	r0, [sp, #16]
 800e096:	f04f 0101 	mov.w	r1, #1
 800e09a:	bf28      	it	cs
 800e09c:	46d0      	movcs	r8, sl
 800e09e:	f00d fa61 	bl	801b564 <awe_vecFill>
 800e0a2:	6823      	ldr	r3, [r4, #0]
 800e0a4:	695f      	ldr	r7, [r3, #20]
 800e0a6:	68dd      	ldr	r5, [r3, #12]
 800e0a8:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800e0ac:	2400      	movs	r4, #0
 800e0ae:	b1cf      	cbz	r7, 800e0e4 <awe_modMixerV3Bypass+0x9c>
 800e0b0:	9b04      	ldr	r3, [sp, #16]
 800e0b2:	eb04 0907 	add.w	r9, r4, r7
 800e0b6:	eb03 0684 	add.w	r6, r3, r4, lsl #2
 800e0ba:	e001      	b.n	800e0c0 <awe_modMixerV3Bypass+0x78>
 800e0bc:	454c      	cmp	r4, r9
 800e0be:	d012      	beq.n	800e0e6 <awe_modMixerV3Bypass+0x9e>
 800e0c0:	4632      	mov	r2, r6
 800e0c2:	4628      	mov	r0, r5
 800e0c4:	f8cd b000 	str.w	fp, [sp]
 800e0c8:	3401      	adds	r4, #1
 800e0ca:	4653      	mov	r3, sl
 800e0cc:	4639      	mov	r1, r7
 800e0ce:	f00c ffc9 	bl	801b064 <awe_vecCopy32>
 800e0d2:	45a0      	cmp	r8, r4
 800e0d4:	f105 0504 	add.w	r5, r5, #4
 800e0d8:	f106 0604 	add.w	r6, r6, #4
 800e0dc:	d1ee      	bne.n	800e0bc <awe_modMixerV3Bypass+0x74>
 800e0de:	b007      	add	sp, #28
 800e0e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0e4:	46a1      	mov	r9, r4
 800e0e6:	9b05      	ldr	r3, [sp, #20]
 800e0e8:	9a03      	ldr	r2, [sp, #12]
 800e0ea:	4293      	cmp	r3, r2
 800e0ec:	d0f7      	beq.n	800e0de <awe_modMixerV3Bypass+0x96>
 800e0ee:	f852 3f04 	ldr.w	r3, [r2, #4]!
 800e0f2:	9203      	str	r2, [sp, #12]
 800e0f4:	695f      	ldr	r7, [r3, #20]
 800e0f6:	68dd      	ldr	r5, [r3, #12]
 800e0f8:	464c      	mov	r4, r9
 800e0fa:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800e0fe:	e7d6      	b.n	800e0ae <awe_modMixerV3Bypass+0x66>
 800e100:	9804      	ldr	r0, [sp, #16]
 800e102:	ed9f 0a04 	vldr	s0, [pc, #16]	@ 800e114 <awe_modMixerV3Bypass+0xcc>
 800e106:	2101      	movs	r1, #1
 800e108:	b007      	add	sp, #28
 800e10a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e10e:	f00d ba29 	b.w	801b564 <awe_vecFill>
 800e112:	bf00      	nop
 800e114:	00000000 	.word	0x00000000

0800e118 <awe_modModfProcess>:
 800e118:	6900      	ldr	r0, [r0, #16]
 800e11a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e11e:	e9d0 3400 	ldrd	r3, r4, [r0]
 800e122:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 800e126:	6880      	ldr	r0, [r0, #8]
 800e128:	68e7      	ldr	r7, [r4, #12]
 800e12a:	68de      	ldr	r6, [r3, #12]
 800e12c:	68c4      	ldr	r4, [r0, #12]
 800e12e:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800e132:	f3c2 0809 	ubfx	r8, r2, #0, #10
 800e136:	fb08 f801 	mul.w	r8, r8, r1
 800e13a:	f1b8 0f00 	cmp.w	r8, #0
 800e13e:	d00c      	beq.n	800e15a <awe_modModfProcess+0x42>
 800e140:	2500      	movs	r5, #0
 800e142:	4620      	mov	r0, r4
 800e144:	ecb6 0a01 	vldmia	r6!, {s0}
 800e148:	f01f fdde 	bl	802dd08 <modff>
 800e14c:	3501      	adds	r5, #1
 800e14e:	45a8      	cmp	r8, r5
 800e150:	f104 0404 	add.w	r4, r4, #4
 800e154:	eca7 0a01 	vstmia	r7!, {s0}
 800e158:	d1f3      	bne.n	800e142 <awe_modModfProcess+0x2a>
 800e15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e15e:	bf00      	nop

0800e160 <awe_modMultiplexorProcess>:
 800e160:	6902      	ldr	r2, [r0, #16]
 800e162:	6811      	ldr	r1, [r2, #0]
 800e164:	b530      	push	{r4, r5, lr}
 800e166:	e9d1 1305 	ldrd	r1, r3, [r1, #20]
 800e16a:	6a04      	ldr	r4, [r0, #32]
 800e16c:	7e05      	ldrb	r5, [r0, #24]
 800e16e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800e172:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800e176:	b083      	sub	sp, #12
 800e178:	fb01 f103 	mul.w	r1, r1, r3
 800e17c:	b1d4      	cbz	r4, 800e1b4 <awe_modMultiplexorProcess+0x54>
 800e17e:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 800e182:	3b01      	subs	r3, #1
 800e184:	1e6c      	subs	r4, r5, #1
 800e186:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e18a:	68db      	ldr	r3, [r3, #12]
 800e18c:	681b      	ldr	r3, [r3, #0]
 800e18e:	6243      	str	r3, [r0, #36]	@ 0x24
 800e190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e194:	429c      	cmp	r4, r3
 800e196:	dc00      	bgt.n	800e19a <awe_modMultiplexorProcess+0x3a>
 800e198:	1eab      	subs	r3, r5, #2
 800e19a:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 800e19e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e1a2:	68c2      	ldr	r2, [r0, #12]
 800e1a4:	68d8      	ldr	r0, [r3, #12]
 800e1a6:	9100      	str	r1, [sp, #0]
 800e1a8:	2301      	movs	r3, #1
 800e1aa:	4619      	mov	r1, r3
 800e1ac:	f00c ff5a 	bl	801b064 <awe_vecCopy32>
 800e1b0:	b003      	add	sp, #12
 800e1b2:	bd30      	pop	{r4, r5, pc}
 800e1b4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e1b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e1ba:	429d      	cmp	r5, r3
 800e1bc:	dced      	bgt.n	800e19a <awe_modMultiplexorProcess+0x3a>
 800e1be:	1e6b      	subs	r3, r5, #1
 800e1c0:	e7eb      	b.n	800e19a <awe_modMultiplexorProcess+0x3a>
 800e1c2:	bf00      	nop

0800e1c4 <awe_modMultiplexorV2Process>:
 800e1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1c8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e1ca:	f8d0 b010 	ldr.w	fp, [r0, #16]
 800e1ce:	7e02      	ldrb	r2, [r0, #24]
 800e1d0:	4604      	mov	r4, r0
 800e1d2:	f85b 0023 	ldr.w	r0, [fp, r3, lsl #2]
 800e1d6:	ed2d 8b02 	vpush	{d8}
 800e1da:	e9d0 1705 	ldrd	r1, r7, [r0, #20]
 800e1de:	b087      	sub	sp, #28
 800e1e0:	f3c1 0509 	ubfx	r5, r1, #0, #10
 800e1e4:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800e1e8:	f3c1 6ec0 	ubfx	lr, r1, #27, #1
 800e1ec:	1ad2      	subs	r2, r2, r3
 800e1ee:	2b00      	cmp	r3, #0
 800e1f0:	f000 809b 	beq.w	800e32a <awe_modMultiplexorV2Process+0x166>
 800e1f4:	f8db 1000 	ldr.w	r1, [fp]
 800e1f8:	68c9      	ldr	r1, [r1, #12]
 800e1fa:	6809      	ldr	r1, [r1, #0]
 800e1fc:	6c66      	ldr	r6, [r4, #68]	@ 0x44
 800e1fe:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800e202:	428a      	cmp	r2, r1
 800e204:	bfd8      	it	le
 800e206:	f102 31ff 	addle.w	r1, r2, #4294967295
 800e20a:	441a      	add	r2, r3
 800e20c:	4433      	add	r3, r6
 800e20e:	f85b 2022 	ldr.w	r2, [fp, r2, lsl #2]
 800e212:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800e216:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 800e21a:	68d8      	ldr	r0, [r3, #12]
 800e21c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800e21e:	429e      	cmp	r6, r3
 800e220:	f000 8085 	beq.w	800e32e <awe_modMultiplexorV2Process+0x16a>
 800e224:	f1be 0f00 	cmp.w	lr, #0
 800e228:	f000 808f 	beq.w	800e34a <awe_modMultiplexorV2Process+0x186>
 800e22c:	2d00      	cmp	r5, #0
 800e22e:	f000 80a9 	beq.w	800e384 <awe_modMultiplexorV2Process+0x1c0>
 800e232:	00eb      	lsls	r3, r5, #3
 800e234:	9303      	str	r3, [sp, #12]
 800e236:	ed9f 8a69 	vldr	s16, [pc, #420]	@ 800e3dc <awe_modMultiplexorV2Process+0x218>
 800e23a:	f8cd b008 	str.w	fp, [sp, #8]
 800e23e:	18c3      	adds	r3, r0, r3
 800e240:	4606      	mov	r6, r0
 800e242:	107f      	asrs	r7, r7, #1
 800e244:	006d      	lsls	r5, r5, #1
 800e246:	46d0      	mov	r8, sl
 800e248:	f10d 0914 	add.w	r9, sp, #20
 800e24c:	469b      	mov	fp, r3
 800e24e:	f8d4 c034 	ldr.w	ip, [r4, #52]	@ 0x34
 800e252:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e256:	f8cd c014 	str.w	ip, [sp, #20]
 800e25a:	4642      	mov	r2, r8
 800e25c:	4630      	mov	r0, r6
 800e25e:	eeb0 0a48 	vmov.f32	s0, s16
 800e262:	462b      	mov	r3, r5
 800e264:	4629      	mov	r1, r5
 800e266:	e9cd 9700 	strd	r9, r7, [sp]
 800e26a:	f00f fd77 	bl	801dd5c <awe_vecScaleSmooth>
 800e26e:	f8d4 c034 	ldr.w	ip, [r4, #52]	@ 0x34
 800e272:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e276:	f8cd c014 	str.w	ip, [sp, #20]
 800e27a:	f108 0204 	add.w	r2, r8, #4
 800e27e:	1d30      	adds	r0, r6, #4
 800e280:	e9cd 9700 	strd	r9, r7, [sp]
 800e284:	eeb0 0a48 	vmov.f32	s0, s16
 800e288:	462b      	mov	r3, r5
 800e28a:	4629      	mov	r1, r5
 800e28c:	3608      	adds	r6, #8
 800e28e:	f00f fd65 	bl	801dd5c <awe_vecScaleSmooth>
 800e292:	45b3      	cmp	fp, r6
 800e294:	f108 0808 	add.w	r8, r8, #8
 800e298:	d1d9      	bne.n	800e24e <awe_modMultiplexorV2Process+0x8a>
 800e29a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e29c:	9a05      	ldr	r2, [sp, #20]
 800e29e:	f8dd b008 	ldr.w	fp, [sp, #8]
 800e2a2:	6362      	str	r2, [r4, #52]	@ 0x34
 800e2a4:	2b00      	cmp	r3, #0
 800e2a6:	d174      	bne.n	800e392 <awe_modMultiplexorV2Process+0x1ce>
 800e2a8:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800e2aa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e2ac:	4413      	add	r3, r2
 800e2ae:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800e2b2:	68de      	ldr	r6, [r3, #12]
 800e2b4:	9b03      	ldr	r3, [sp, #12]
 800e2b6:	4433      	add	r3, r6
 800e2b8:	4698      	mov	r8, r3
 800e2ba:	f8d4 c038 	ldr.w	ip, [r4, #56]	@ 0x38
 800e2be:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e2c2:	f8cd c014 	str.w	ip, [sp, #20]
 800e2c6:	4652      	mov	r2, sl
 800e2c8:	4630      	mov	r0, r6
 800e2ca:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800e2ce:	462b      	mov	r3, r5
 800e2d0:	4629      	mov	r1, r5
 800e2d2:	e9cd 9700 	strd	r9, r7, [sp]
 800e2d6:	f00f fa7f 	bl	801d7d8 <awe_vecScaleAddSmooth>
 800e2da:	f8d4 c038 	ldr.w	ip, [r4, #56]	@ 0x38
 800e2de:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e2e2:	f8cd c014 	str.w	ip, [sp, #20]
 800e2e6:	f10a 0204 	add.w	r2, sl, #4
 800e2ea:	1d30      	adds	r0, r6, #4
 800e2ec:	e9cd 9700 	strd	r9, r7, [sp]
 800e2f0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800e2f4:	462b      	mov	r3, r5
 800e2f6:	4629      	mov	r1, r5
 800e2f8:	3608      	adds	r6, #8
 800e2fa:	f00f fa6d 	bl	801d7d8 <awe_vecScaleAddSmooth>
 800e2fe:	4546      	cmp	r6, r8
 800e300:	f10a 0a08 	add.w	sl, sl, #8
 800e304:	d1d9      	bne.n	800e2ba <awe_modMultiplexorV2Process+0xf6>
 800e306:	eddd 7a05 	vldr	s15, [sp, #20]
 800e30a:	edc4 7a0e 	vstr	s15, [r4, #56]	@ 0x38
 800e30e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 800e3e0 <awe_modMultiplexorV2Process+0x21c>
 800e312:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e31a:	dd01      	ble.n	800e320 <awe_modMultiplexorV2Process+0x15c>
 800e31c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800e31e:	6463      	str	r3, [r4, #68]	@ 0x44
 800e320:	b007      	add	sp, #28
 800e322:	ecbd 8b02 	vpop	{d8}
 800e326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e32a:	6a21      	ldr	r1, [r4, #32]
 800e32c:	e766      	b.n	800e1fc <awe_modMultiplexorV2Process+0x38>
 800e32e:	428e      	cmp	r6, r1
 800e330:	d046      	beq.n	800e3c0 <awe_modMultiplexorV2Process+0x1fc>
 800e332:	2300      	movs	r3, #0
 800e334:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e338:	63a3      	str	r3, [r4, #56]	@ 0x38
 800e33a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800e33c:	64a1      	str	r1, [r4, #72]	@ 0x48
 800e33e:	6362      	str	r2, [r4, #52]	@ 0x34
 800e340:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e342:	f1be 0f00 	cmp.w	lr, #0
 800e346:	f47f af71 	bne.w	800e22c <awe_modMultiplexorV2Process+0x68>
 800e34a:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e34e:	ed9f 0a23 	vldr	s0, [pc, #140]	@ 800e3dc <awe_modMultiplexorV2Process+0x218>
 800e352:	9700      	str	r7, [sp, #0]
 800e354:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800e358:	462a      	mov	r2, r5
 800e35a:	4651      	mov	r1, sl
 800e35c:	f00f fede 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800e360:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e362:	b1db      	cbz	r3, 800e39c <awe_modMultiplexorV2Process+0x1d8>
 800e364:	3b01      	subs	r3, #1
 800e366:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e368:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 800e3e0 <awe_modMultiplexorV2Process+0x21c>
 800e36c:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 800e370:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e378:	dcd0      	bgt.n	800e31c <awe_modMultiplexorV2Process+0x158>
 800e37a:	b007      	add	sp, #28
 800e37c:	ecbd 8b02 	vpop	{d8}
 800e380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e384:	eddd 7a05 	vldr	s15, [sp, #20]
 800e388:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e38a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e38e:	2b00      	cmp	r3, #0
 800e390:	d0bb      	beq.n	800e30a <awe_modMultiplexorV2Process+0x146>
 800e392:	3b01      	subs	r3, #1
 800e394:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 800e398:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e39a:	e7b8      	b.n	800e30e <awe_modMultiplexorV2Process+0x14a>
 800e39c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e39e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800e3a0:	edd4 0a0c 	vldr	s1, [r4, #48]	@ 0x30
 800e3a4:	4413      	add	r3, r2
 800e3a6:	4651      	mov	r1, sl
 800e3a8:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800e3ac:	462a      	mov	r2, r5
 800e3ae:	68d8      	ldr	r0, [r3, #12]
 800e3b0:	9700      	str	r7, [sp, #0]
 800e3b2:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800e3b6:	f104 0338 	add.w	r3, r4, #56	@ 0x38
 800e3ba:	f00f fb9b 	bl	801daf4 <awe_vecScaleAddSmooth_Nch>
 800e3be:	e7d3      	b.n	800e368 <awe_modMultiplexorV2Process+0x1a4>
 800e3c0:	2301      	movs	r3, #1
 800e3c2:	fb07 f505 	mul.w	r5, r7, r5
 800e3c6:	9500      	str	r5, [sp, #0]
 800e3c8:	4652      	mov	r2, sl
 800e3ca:	4619      	mov	r1, r3
 800e3cc:	f00c fe4a 	bl	801b064 <awe_vecCopy32>
 800e3d0:	b007      	add	sp, #28
 800e3d2:	ecbd 8b02 	vpop	{d8}
 800e3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3da:	bf00      	nop
 800e3dc:	00000000 	.word	0x00000000
 800e3e0:	3f75c28f 	.word	0x3f75c28f

0800e3e4 <awe_modMultiplexorV2Bypass>:
 800e3e4:	b510      	push	{r4, lr}
 800e3e6:	6902      	ldr	r2, [r0, #16]
 800e3e8:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800e3ea:	7e01      	ldrb	r1, [r0, #24]
 800e3ec:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
 800e3f0:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800e3f4:	e9d0 1405 	ldrd	r1, r4, [r0, #20]
 800e3f8:	b082      	sub	sp, #8
 800e3fa:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800e3fe:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800e402:	2301      	movs	r3, #1
 800e404:	fb01 f104 	mul.w	r1, r1, r4
 800e408:	68d2      	ldr	r2, [r2, #12]
 800e40a:	68c0      	ldr	r0, [r0, #12]
 800e40c:	9100      	str	r1, [sp, #0]
 800e40e:	4619      	mov	r1, r3
 800e410:	f00c fe28 	bl	801b064 <awe_vecCopy32>
 800e414:	b002      	add	sp, #8
 800e416:	bd10      	pop	{r4, pc}

0800e418 <awe_modMultiplexorV2Set>:
 800e418:	b909      	cbnz	r1, 800e41e <awe_modMultiplexorV2Set+0x6>
 800e41a:	2000      	movs	r0, #0
 800e41c:	4770      	bx	lr
 800e41e:	b570      	push	{r4, r5, r6, lr}
 800e420:	6903      	ldr	r3, [r0, #16]
 800e422:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e424:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800e428:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800e42c:	ed2d 8b02 	vpush	{d8}
 800e430:	ed92 8a04 	vldr	s16, [r2, #16]
 800e434:	e9d2 6505 	ldrd	r6, r5, [r2, #20]
 800e438:	4604      	mov	r4, r0
 800e43a:	eef0 0a48 	vmov.f32	s1, s16
 800e43e:	2001      	movs	r0, #1
 800e440:	f015 faae 	bl	80239a0 <design_smoother>
 800e444:	0133      	lsls	r3, r6, #4
 800e446:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800e44a:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 800e44e:	d417      	bmi.n	800e480 <awe_modMultiplexorV2Set+0x68>
 800e450:	ee07 5a90 	vmov	s15, r5
 800e454:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 800e4b4 <awe_modMultiplexorV2Set+0x9c>
 800e458:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 800e45c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e460:	ee28 0a00 	vmul.f32	s0, s16, s0
 800e464:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e468:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800e46c:	f020 ff24 	bl	802f2b8 <ceilf>
 800e470:	ecbd 8b02 	vpop	{d8}
 800e474:	2000      	movs	r0, #0
 800e476:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800e47a:	ed84 0a10 	vstr	s0, [r4, #64]	@ 0x40
 800e47e:	bd70      	pop	{r4, r5, r6, pc}
 800e480:	106b      	asrs	r3, r5, #1
 800e482:	ee07 3a90 	vmov	s15, r3
 800e486:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 800e4b4 <awe_modMultiplexorV2Set+0x9c>
 800e48a:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 800e48e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e492:	ee28 0a00 	vmul.f32	s0, s16, s0
 800e496:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e49a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800e49e:	f020 ff0b 	bl	802f2b8 <ceilf>
 800e4a2:	ecbd 8b02 	vpop	{d8}
 800e4a6:	2000      	movs	r0, #0
 800e4a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800e4ac:	ed84 0a10 	vstr	s0, [r4, #64]	@ 0x40
 800e4b0:	bd70      	pop	{r4, r5, r6, pc}
 800e4b2:	bf00      	nop
 800e4b4:	447a0000 	.word	0x447a0000

0800e4b8 <awe_modMultiplierV2Process>:
 800e4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4bc:	6904      	ldr	r4, [r0, #16]
 800e4be:	6a02      	ldr	r2, [r0, #32]
 800e4c0:	6823      	ldr	r3, [r4, #0]
 800e4c2:	b087      	sub	sp, #28
 800e4c4:	68df      	ldr	r7, [r3, #12]
 800e4c6:	bb9a      	cbnz	r2, 800e530 <awe_modMultiplierV2Process+0x78>
 800e4c8:	f890 a018 	ldrb.w	sl, [r0, #24]
 800e4cc:	f8d0 9024 	ldr.w	r9, [r0, #36]	@ 0x24
 800e4d0:	f854 202a 	ldr.w	r2, [r4, sl, lsl #2]
 800e4d4:	e9d3 3605 	ldrd	r3, r6, [r3, #20]
 800e4d8:	68d5      	ldr	r5, [r2, #12]
 800e4da:	f1b9 0f01 	cmp.w	r9, #1
 800e4de:	ea4f 028a 	mov.w	r2, sl, lsl #2
 800e4e2:	9205      	str	r2, [sp, #20]
 800e4e4:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800e4e8:	f3c3 0809 	ubfx	r8, r3, #0, #10
 800e4ec:	d042      	beq.n	800e574 <awe_modMultiplierV2Process+0xbc>
 800e4ee:	2301      	movs	r3, #1
 800e4f0:	fb08 f606 	mul.w	r6, r8, r6
 800e4f4:	9600      	str	r6, [sp, #0]
 800e4f6:	4638      	mov	r0, r7
 800e4f8:	4619      	mov	r1, r3
 800e4fa:	462a      	mov	r2, r5
 800e4fc:	f00c fdb2 	bl	801b064 <awe_vecCopy32>
 800e500:	f1ba 0f01 	cmp.w	sl, #1
 800e504:	d911      	bls.n	800e52a <awe_modMultiplierV2Process+0x72>
 800e506:	9b05      	ldr	r3, [sp, #20]
 800e508:	1f27      	subs	r7, r4, #4
 800e50a:	441f      	add	r7, r3
 800e50c:	f04f 0801 	mov.w	r8, #1
 800e510:	f854 3f04 	ldr.w	r3, [r4, #4]!
 800e514:	68d8      	ldr	r0, [r3, #12]
 800e516:	9602      	str	r6, [sp, #8]
 800e518:	2301      	movs	r3, #1
 800e51a:	e9cd 5800 	strd	r5, r8, [sp]
 800e51e:	4619      	mov	r1, r3
 800e520:	462a      	mov	r2, r5
 800e522:	f00e fb59 	bl	801cbd8 <awe_vecMultiply2x1>
 800e526:	42a7      	cmp	r7, r4
 800e528:	d1f2      	bne.n	800e510 <awe_modMultiplierV2Process+0x58>
 800e52a:	b007      	add	sp, #28
 800e52c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e530:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 800e534:	e9d2 6305 	ldrd	r6, r3, [r2, #20]
 800e538:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800e53c:	68cd      	ldr	r5, [r1, #12]
 800e53e:	68d4      	ldr	r4, [r2, #12]
 800e540:	f3c3 0810 	ubfx	r8, r3, #0, #17
 800e544:	2e00      	cmp	r6, #0
 800e546:	d0f0      	beq.n	800e52a <awe_modMultiplierV2Process+0x72>
 800e548:	463b      	mov	r3, r7
 800e54a:	eb04 0986 	add.w	r9, r4, r6, lsl #2
 800e54e:	4647      	mov	r7, r8
 800e550:	4698      	mov	r8, r3
 800e552:	9500      	str	r5, [sp, #0]
 800e554:	4622      	mov	r2, r4
 800e556:	e9cd 6701 	strd	r6, r7, [sp, #4]
 800e55a:	4633      	mov	r3, r6
 800e55c:	2101      	movs	r1, #1
 800e55e:	3404      	adds	r4, #4
 800e560:	4640      	mov	r0, r8
 800e562:	f00e fb39 	bl	801cbd8 <awe_vecMultiply2x1>
 800e566:	45a1      	cmp	r9, r4
 800e568:	f105 0504 	add.w	r5, r5, #4
 800e56c:	d1f1      	bne.n	800e552 <awe_modMultiplierV2Process+0x9a>
 800e56e:	b007      	add	sp, #28
 800e570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e574:	9600      	str	r6, [sp, #0]
 800e576:	4638      	mov	r0, r7
 800e578:	464b      	mov	r3, r9
 800e57a:	462a      	mov	r2, r5
 800e57c:	4641      	mov	r1, r8
 800e57e:	f00c fd71 	bl	801b064 <awe_vecCopy32>
 800e582:	f1b8 0f01 	cmp.w	r8, #1
 800e586:	d910      	bls.n	800e5aa <awe_modMultiplierV2Process+0xf2>
 800e588:	ea4f 0b88 	mov.w	fp, r8, lsl #2
 800e58c:	2704      	movs	r7, #4
 800e58e:	6823      	ldr	r3, [r4, #0]
 800e590:	68d8      	ldr	r0, [r3, #12]
 800e592:	9602      	str	r6, [sp, #8]
 800e594:	4438      	add	r0, r7
 800e596:	e9cd 5900 	strd	r5, r9, [sp]
 800e59a:	3704      	adds	r7, #4
 800e59c:	2301      	movs	r3, #1
 800e59e:	462a      	mov	r2, r5
 800e5a0:	4641      	mov	r1, r8
 800e5a2:	f00e fb19 	bl	801cbd8 <awe_vecMultiply2x1>
 800e5a6:	45bb      	cmp	fp, r7
 800e5a8:	d1f1      	bne.n	800e58e <awe_modMultiplierV2Process+0xd6>
 800e5aa:	f1ba 0f01 	cmp.w	sl, #1
 800e5ae:	d9bc      	bls.n	800e52a <awe_modMultiplierV2Process+0x72>
 800e5b0:	9b05      	ldr	r3, [sp, #20]
 800e5b2:	f1a4 0b04 	sub.w	fp, r4, #4
 800e5b6:	46a0      	mov	r8, r4
 800e5b8:	449b      	add	fp, r3
 800e5ba:	f04f 0a01 	mov.w	sl, #1
 800e5be:	f858 3f04 	ldr.w	r3, [r8, #4]!
 800e5c2:	695f      	ldr	r7, [r3, #20]
 800e5c4:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800e5c8:	b197      	cbz	r7, 800e5f0 <awe_modMultiplierV2Process+0x138>
 800e5ca:	ea4f 0987 	mov.w	r9, r7, lsl #2
 800e5ce:	2400      	movs	r4, #0
 800e5d0:	e001      	b.n	800e5d6 <awe_modMultiplierV2Process+0x11e>
 800e5d2:	f8d8 3000 	ldr.w	r3, [r8]
 800e5d6:	68d8      	ldr	r0, [r3, #12]
 800e5d8:	9602      	str	r6, [sp, #8]
 800e5da:	4420      	add	r0, r4
 800e5dc:	e9cd 5a00 	strd	r5, sl, [sp]
 800e5e0:	3404      	adds	r4, #4
 800e5e2:	2301      	movs	r3, #1
 800e5e4:	462a      	mov	r2, r5
 800e5e6:	4639      	mov	r1, r7
 800e5e8:	f00e faf6 	bl	801cbd8 <awe_vecMultiply2x1>
 800e5ec:	454c      	cmp	r4, r9
 800e5ee:	d1f0      	bne.n	800e5d2 <awe_modMultiplierV2Process+0x11a>
 800e5f0:	45c3      	cmp	fp, r8
 800e5f2:	d1e4      	bne.n	800e5be <awe_modMultiplierV2Process+0x106>
 800e5f4:	b007      	add	sp, #28
 800e5f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5fa:	bf00      	nop

0800e5fc <awe_modMuteNSmoothedConstructor>:
 800e5fc:	b570      	push	{r4, r5, r6, lr}
 800e5fe:	b082      	sub	sp, #8
 800e600:	4616      	mov	r6, r2
 800e602:	4605      	mov	r5, r0
 800e604:	9806      	ldr	r0, [sp, #24]
 800e606:	9300      	str	r3, [sp, #0]
 800e608:	460a      	mov	r2, r1
 800e60a:	9001      	str	r0, [sp, #4]
 800e60c:	4633      	mov	r3, r6
 800e60e:	4629      	mov	r1, r5
 800e610:	4817      	ldr	r0, [pc, #92]	@ (800e670 <awe_modMuteNSmoothedConstructor+0x74>)
 800e612:	f011 fd97 	bl	8020144 <BaseClassModule_Constructor>
 800e616:	b330      	cbz	r0, 800e666 <awe_modMuteNSmoothedConstructor+0x6a>
 800e618:	6833      	ldr	r3, [r6, #0]
 800e61a:	4604      	mov	r4, r0
 800e61c:	6958      	ldr	r0, [r3, #20]
 800e61e:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800e622:	0080      	lsls	r0, r0, #2
 800e624:	462a      	mov	r2, r5
 800e626:	2102      	movs	r1, #2
 800e628:	f011 f838 	bl	801f69c <awe_fwMalloc>
 800e62c:	62a0      	str	r0, [r4, #40]	@ 0x28
 800e62e:	b1d0      	cbz	r0, 800e666 <awe_modMuteNSmoothedConstructor+0x6a>
 800e630:	6833      	ldr	r3, [r6, #0]
 800e632:	6958      	ldr	r0, [r3, #20]
 800e634:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800e638:	0080      	lsls	r0, r0, #2
 800e63a:	462a      	mov	r2, r5
 800e63c:	f240 2131 	movw	r1, #561	@ 0x231
 800e640:	f011 f82c 	bl	801f69c <awe_fwMalloc>
 800e644:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800e646:	b170      	cbz	r0, 800e666 <awe_modMuteNSmoothedConstructor+0x6a>
 800e648:	6833      	ldr	r3, [r6, #0]
 800e64a:	6958      	ldr	r0, [r3, #20]
 800e64c:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800e650:	0080      	lsls	r0, r0, #2
 800e652:	462a      	mov	r2, r5
 800e654:	f240 2131 	movw	r1, #561	@ 0x231
 800e658:	f011 f820 	bl	801f69c <awe_fwMalloc>
 800e65c:	6320      	str	r0, [r4, #48]	@ 0x30
 800e65e:	b110      	cbz	r0, 800e666 <awe_modMuteNSmoothedConstructor+0x6a>
 800e660:	4620      	mov	r0, r4
 800e662:	b002      	add	sp, #8
 800e664:	bd70      	pop	{r4, r5, r6, pc}
 800e666:	2400      	movs	r4, #0
 800e668:	4620      	mov	r0, r4
 800e66a:	b002      	add	sp, #8
 800e66c:	bd70      	pop	{r4, r5, r6, pc}
 800e66e:	bf00      	nop
 800e670:	080347c4 	.word	0x080347c4

0800e674 <awe_modMuteNSmoothedProcess>:
 800e674:	6902      	ldr	r2, [r0, #16]
 800e676:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e67a:	e9d2 3200 	ldrd	r3, r2, [r2]
 800e67e:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800e682:	ed2d 8b02 	vpush	{d8}
 800e686:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800e68a:	b085      	sub	sp, #20
 800e68c:	ed90 8a09 	vldr	s16, [r0, #36]	@ 0x24
 800e690:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800e694:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800e698:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800e69c:	b316      	cbz	r6, 800e6e4 <awe_modMuteNSmoothedProcess+0x70>
 800e69e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e6a0:	4605      	mov	r5, r0
 800e6a2:	ea4f 0b86 	mov.w	fp, r6, lsl #2
 800e6a6:	2400      	movs	r4, #0
 800e6a8:	f10d 0a0c 	add.w	sl, sp, #12
 800e6ac:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
 800e6ae:	4423      	add	r3, r4
 800e6b0:	4422      	add	r2, r4
 800e6b2:	ed92 0a00 	vldr	s0, [r2]
 800e6b6:	f8d3 c000 	ldr.w	ip, [r3]
 800e6ba:	f8cd c00c 	str.w	ip, [sp, #12]
 800e6be:	eb09 0204 	add.w	r2, r9, r4
 800e6c2:	4633      	mov	r3, r6
 800e6c4:	4631      	mov	r1, r6
 800e6c6:	eb08 0004 	add.w	r0, r8, r4
 800e6ca:	e9cd a700 	strd	sl, r7, [sp]
 800e6ce:	eef0 0a48 	vmov.f32	s1, s16
 800e6d2:	f00f fb43 	bl	801dd5c <awe_vecScaleSmooth>
 800e6d6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800e6d8:	9903      	ldr	r1, [sp, #12]
 800e6da:	191a      	adds	r2, r3, r4
 800e6dc:	3404      	adds	r4, #4
 800e6de:	45a3      	cmp	fp, r4
 800e6e0:	6011      	str	r1, [r2, #0]
 800e6e2:	d1e3      	bne.n	800e6ac <awe_modMuteNSmoothedProcess+0x38>
 800e6e4:	b005      	add	sp, #20
 800e6e6:	ecbd 8b02 	vpop	{d8}
 800e6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6ee:	bf00      	nop

0800e6f0 <awe_modMuteNSmoothedSet>:
 800e6f0:	054a      	lsls	r2, r1, #21
 800e6f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e6f4:	6906      	ldr	r6, [r0, #16]
 800e6f6:	d51d      	bpl.n	800e734 <awe_modMuteNSmoothedSet+0x44>
 800e6f8:	6833      	ldr	r3, [r6, #0]
 800e6fa:	695c      	ldr	r4, [r3, #20]
 800e6fc:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800e700:	b1c4      	cbz	r4, 800e734 <awe_modMuteNSmoothedSet+0x44>
 800e702:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e704:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 800e706:	3b04      	subs	r3, #4
 800e708:	f04f 0c00 	mov.w	ip, #0
 800e70c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e710:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 800e714:	e004      	b.n	800e720 <awe_modMuteNSmoothedSet+0x30>
 800e716:	42a3      	cmp	r3, r4
 800e718:	6017      	str	r7, [r2, #0]
 800e71a:	f102 0204 	add.w	r2, r2, #4
 800e71e:	d009      	beq.n	800e734 <awe_modMuteNSmoothedSet+0x44>
 800e720:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800e724:	2d00      	cmp	r5, #0
 800e726:	d0f6      	beq.n	800e716 <awe_modMuteNSmoothedSet+0x26>
 800e728:	42a3      	cmp	r3, r4
 800e72a:	f8c2 c000 	str.w	ip, [r2]
 800e72e:	f102 0204 	add.w	r2, r2, #4
 800e732:	d1f5      	bne.n	800e720 <awe_modMuteNSmoothedSet+0x30>
 800e734:	05cb      	lsls	r3, r1, #23
 800e736:	d50a      	bpl.n	800e74e <awe_modMuteNSmoothedSet+0x5e>
 800e738:	6833      	ldr	r3, [r6, #0]
 800e73a:	ed90 0a08 	vldr	s0, [r0, #32]
 800e73e:	edd3 0a04 	vldr	s1, [r3, #16]
 800e742:	4604      	mov	r4, r0
 800e744:	2001      	movs	r0, #1
 800e746:	f015 f92b 	bl	80239a0 <design_smoother>
 800e74a:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 800e74e:	2000      	movs	r0, #0
 800e750:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e752:	bf00      	nop

0800e754 <awe_modMuteSmoothedProcess>:
 800e754:	b570      	push	{r4, r5, r6, lr}
 800e756:	6902      	ldr	r2, [r0, #16]
 800e758:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 800e75a:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 800e75e:	e9d2 3200 	ldrd	r3, r2, [r2]
 800e762:	b084      	sub	sp, #16
 800e764:	699d      	ldr	r5, [r3, #24]
 800e766:	68d1      	ldr	r1, [r2, #12]
 800e768:	695a      	ldr	r2, [r3, #20]
 800e76a:	4604      	mov	r4, r0
 800e76c:	68d8      	ldr	r0, [r3, #12]
 800e76e:	edd4 0a0b 	vldr	s1, [r4, #44]	@ 0x2c
 800e772:	ab04      	add	r3, sp, #16
 800e774:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800e778:	f843 6d04 	str.w	r6, [r3, #-4]!
 800e77c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800e780:	9500      	str	r5, [sp, #0]
 800e782:	f00f fccb 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800e786:	9b03      	ldr	r3, [sp, #12]
 800e788:	62a3      	str	r3, [r4, #40]	@ 0x28
 800e78a:	b004      	add	sp, #16
 800e78c:	bd70      	pop	{r4, r5, r6, pc}
 800e78e:	bf00      	nop

0800e790 <awe_modMuteSmoothedSet>:
 800e790:	b909      	cbnz	r1, 800e796 <awe_modMuteSmoothedSet+0x6>
 800e792:	2000      	movs	r0, #0
 800e794:	4770      	bx	lr
 800e796:	6903      	ldr	r3, [r0, #16]
 800e798:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 800e79c:	681b      	ldr	r3, [r3, #0]
 800e79e:	b510      	push	{r4, lr}
 800e7a0:	edd3 0a04 	vldr	s1, [r3, #16]
 800e7a4:	4604      	mov	r4, r0
 800e7a6:	2001      	movs	r0, #1
 800e7a8:	f015 f8fa 	bl	80239a0 <design_smoother>
 800e7ac:	6a23      	ldr	r3, [r4, #32]
 800e7ae:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800e7b2:	b11b      	cbz	r3, 800e7bc <awe_modMuteSmoothedSet+0x2c>
 800e7b4:	2300      	movs	r3, #0
 800e7b6:	6323      	str	r3, [r4, #48]	@ 0x30
 800e7b8:	2000      	movs	r0, #0
 800e7ba:	bd10      	pop	{r4, pc}
 800e7bc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800e7c0:	6323      	str	r3, [r4, #48]	@ 0x30
 800e7c2:	2000      	movs	r0, #0
 800e7c4:	bd10      	pop	{r4, pc}
 800e7c6:	bf00      	nop

0800e7c8 <awe_modMuteUnmuteProcess>:
 800e7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7cc:	6902      	ldr	r2, [r0, #16]
 800e7ce:	6a01      	ldr	r1, [r0, #32]
 800e7d0:	4607      	mov	r7, r0
 800e7d2:	e9d2 3000 	ldrd	r3, r0, [r2]
 800e7d6:	ed2d 8b02 	vpush	{d8}
 800e7da:	e9d3 5605 	ldrd	r5, r6, [r3, #20]
 800e7de:	b087      	sub	sp, #28
 800e7e0:	6892      	ldr	r2, [r2, #8]
 800e7e2:	68db      	ldr	r3, [r3, #12]
 800e7e4:	9304      	str	r3, [sp, #16]
 800e7e6:	68c4      	ldr	r4, [r0, #12]
 800e7e8:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800e7ec:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800e7f0:	f3c6 0610 	ubfx	r6, r6, #0, #17
 800e7f4:	2900      	cmp	r1, #0
 800e7f6:	f000 80ce 	beq.w	800e996 <awe_modMuteUnmuteProcess+0x1ce>
 800e7fa:	f8d7 a054 	ldr.w	sl, [r7, #84]	@ 0x54
 800e7fe:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800e800:	edd7 8a13 	vldr	s17, [r7, #76]	@ 0x4c
 800e804:	ed97 8a14 	vldr	s16, [r7, #80]	@ 0x50
 800e808:	458a      	cmp	sl, r1
 800e80a:	f280 80a6 	bge.w	800e95a <awe_modMuteUnmuteProcess+0x192>
 800e80e:	eddf 7a69 	vldr	s15, [pc, #420]	@ 800e9b4 <awe_modMuteUnmuteProcess+0x1ec>
 800e812:	edd7 6a0f 	vldr	s13, [r7, #60]	@ 0x3c
 800e816:	ed97 6a10 	vldr	s12, [r7, #64]	@ 0x40
 800e81a:	f1ba 0f00 	cmp.w	sl, #0
 800e81e:	eba1 020a 	sub.w	r2, r1, sl
 800e822:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 800e826:	bf08      	it	eq
 800e828:	eeb0 8a67 	vmoveq.f32	s16, s15
 800e82c:	bf0c      	ite	eq
 800e82e:	eef0 7a65 	vmoveq.f32	s15, s11
 800e832:	eef0 7a68 	vmovne.f32	s15, s17
 800e836:	42b2      	cmp	r2, r6
 800e838:	bf28      	it	cs
 800e83a:	4632      	movcs	r2, r6
 800e83c:	2a00      	cmp	r2, #0
 800e83e:	f000 80b2 	beq.w	800e9a6 <awe_modMuteUnmuteProcess+0x1de>
 800e842:	464b      	mov	r3, r9
 800e844:	eb09 0082 	add.w	r0, r9, r2, lsl #2
 800e848:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
 800e84c:	ee68 8a46 	vnmul.f32	s17, s16, s12
 800e850:	ee37 7aa5 	vadd.f32	s14, s15, s11
 800e854:	eee6 8aa7 	vfma.f32	s17, s13, s15
 800e858:	ee27 7a05 	vmul.f32	s14, s14, s10
 800e85c:	ee26 8a88 	vmul.f32	s16, s13, s16
 800e860:	eca3 7a01 	vstmia	r3!, {s14}
 800e864:	4298      	cmp	r0, r3
 800e866:	eea6 8a27 	vfma.f32	s16, s12, s15
 800e86a:	eef0 7a68 	vmov.f32	s15, s17
 800e86e:	d1ed      	bne.n	800e84c <awe_modMuteUnmuteProcess+0x84>
 800e870:	4492      	add	sl, r2
 800e872:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e874:	edc7 8a13 	vstr	s17, [r7, #76]	@ 0x4c
 800e878:	4551      	cmp	r1, sl
 800e87a:	4690      	mov	r8, r2
 800e87c:	f8c7 a054 	str.w	sl, [r7, #84]	@ 0x54
 800e880:	ed87 8a14 	vstr	s16, [r7, #80]	@ 0x50
 800e884:	eb01 0b03 	add.w	fp, r1, r3
 800e888:	dd6a      	ble.n	800e960 <awe_modMuteUnmuteProcess+0x198>
 800e88a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e88c:	45d3      	cmp	fp, sl
 800e88e:	445b      	add	r3, fp
 800e890:	dc3b      	bgt.n	800e90a <awe_modMuteUnmuteProcess+0x142>
 800e892:	459a      	cmp	sl, r3
 800e894:	da39      	bge.n	800e90a <awe_modMuteUnmuteProcess+0x142>
 800e896:	45b0      	cmp	r8, r6
 800e898:	d237      	bcs.n	800e90a <awe_modMuteUnmuteProcess+0x142>
 800e89a:	eddf 7a46 	vldr	s15, [pc, #280]	@ 800e9b4 <awe_modMuteUnmuteProcess+0x1ec>
 800e89e:	edd7 6a11 	vldr	s13, [r7, #68]	@ 0x44
 800e8a2:	ed97 6a12 	vldr	s12, [r7, #72]	@ 0x48
 800e8a6:	45d3      	cmp	fp, sl
 800e8a8:	eba3 020a 	sub.w	r2, r3, sl
 800e8ac:	eba6 0108 	sub.w	r1, r6, r8
 800e8b0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 800e8b4:	bf08      	it	eq
 800e8b6:	eeb0 8a67 	vmoveq.f32	s16, s15
 800e8ba:	bf08      	it	eq
 800e8bc:	eef0 8a65 	vmoveq.f32	s17, s11
 800e8c0:	4291      	cmp	r1, r2
 800e8c2:	bf28      	it	cs
 800e8c4:	4611      	movcs	r1, r2
 800e8c6:	2900      	cmp	r1, #0
 800e8c8:	d070      	beq.n	800e9ac <awe_modMuteUnmuteProcess+0x1e4>
 800e8ca:	eb09 0288 	add.w	r2, r9, r8, lsl #2
 800e8ce:	4488      	add	r8, r1
 800e8d0:	eb09 0088 	add.w	r0, r9, r8, lsl #2
 800e8d4:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
 800e8d8:	ee68 7a46 	vnmul.f32	s15, s16, s12
 800e8dc:	ee35 7ae8 	vsub.f32	s14, s11, s17
 800e8e0:	eee6 7aa8 	vfma.f32	s15, s13, s17
 800e8e4:	ee27 7a05 	vmul.f32	s14, s14, s10
 800e8e8:	ee26 8a88 	vmul.f32	s16, s13, s16
 800e8ec:	eca2 7a01 	vstmia	r2!, {s14}
 800e8f0:	4290      	cmp	r0, r2
 800e8f2:	eea6 8a28 	vfma.f32	s16, s12, s17
 800e8f6:	eef0 8a67 	vmov.f32	s17, s15
 800e8fa:	d1ed      	bne.n	800e8d8 <awe_modMuteUnmuteProcess+0x110>
 800e8fc:	448a      	add	sl, r1
 800e8fe:	f8c7 a054 	str.w	sl, [r7, #84]	@ 0x54
 800e902:	edc7 7a13 	vstr	s15, [r7, #76]	@ 0x4c
 800e906:	ed87 8a14 	vstr	s16, [r7, #80]	@ 0x50
 800e90a:	4553      	cmp	r3, sl
 800e90c:	dc0e      	bgt.n	800e92c <awe_modMuteUnmuteProcess+0x164>
 800e90e:	45b0      	cmp	r8, r6
 800e910:	d209      	bcs.n	800e926 <awe_modMuteUnmuteProcess+0x15e>
 800e912:	eb09 0888 	add.w	r8, r9, r8, lsl #2
 800e916:	eb09 0286 	add.w	r2, r9, r6, lsl #2
 800e91a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800e91e:	f848 3b04 	str.w	r3, [r8], #4
 800e922:	4542      	cmp	r2, r8
 800e924:	d1fb      	bne.n	800e91e <awe_modMuteUnmuteProcess+0x156>
 800e926:	2300      	movs	r3, #0
 800e928:	623b      	str	r3, [r7, #32]
 800e92a:	657b      	str	r3, [r7, #84]	@ 0x54
 800e92c:	b185      	cbz	r5, 800e950 <awe_modMuteUnmuteProcess+0x188>
 800e92e:	9f04      	ldr	r7, [sp, #16]
 800e930:	eb07 0885 	add.w	r8, r7, r5, lsl #2
 800e934:	9400      	str	r4, [sp, #0]
 800e936:	4638      	mov	r0, r7
 800e938:	e9cd 5601 	strd	r5, r6, [sp, #4]
 800e93c:	2301      	movs	r3, #1
 800e93e:	464a      	mov	r2, r9
 800e940:	4629      	mov	r1, r5
 800e942:	3704      	adds	r7, #4
 800e944:	f00e f948 	bl	801cbd8 <awe_vecMultiply2x1>
 800e948:	45b8      	cmp	r8, r7
 800e94a:	f104 0404 	add.w	r4, r4, #4
 800e94e:	d1f1      	bne.n	800e934 <awe_modMuteUnmuteProcess+0x16c>
 800e950:	b007      	add	sp, #28
 800e952:	ecbd 8b02 	vpop	{d8}
 800e956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e95a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e95c:	f04f 0800 	mov.w	r8, #0
 800e960:	eb01 0b03 	add.w	fp, r1, r3
 800e964:	45d3      	cmp	fp, sl
 800e966:	dd90      	ble.n	800e88a <awe_modMuteUnmuteProcess+0xc2>
 800e968:	45b0      	cmp	r8, r6
 800e96a:	d28e      	bcs.n	800e88a <awe_modMuteUnmuteProcess+0xc2>
 800e96c:	ebab 030a 	sub.w	r3, fp, sl
 800e970:	eba6 0208 	sub.w	r2, r6, r8
 800e974:	4293      	cmp	r3, r2
 800e976:	bf28      	it	cs
 800e978:	4613      	movcs	r3, r2
 800e97a:	b143      	cbz	r3, 800e98e <awe_modMuteUnmuteProcess+0x1c6>
 800e97c:	009a      	lsls	r2, r3, #2
 800e97e:	eb09 0088 	add.w	r0, r9, r8, lsl #2
 800e982:	2100      	movs	r1, #0
 800e984:	9305      	str	r3, [sp, #20]
 800e986:	f01f f8e5 	bl	802db54 <memset>
 800e98a:	9b05      	ldr	r3, [sp, #20]
 800e98c:	4498      	add	r8, r3
 800e98e:	449a      	add	sl, r3
 800e990:	f8c7 a054 	str.w	sl, [r7, #84]	@ 0x54
 800e994:	e779      	b.n	800e88a <awe_modMuteUnmuteProcess+0xc2>
 800e996:	4632      	mov	r2, r6
 800e998:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800e99c:	2101      	movs	r1, #1
 800e99e:	4648      	mov	r0, r9
 800e9a0:	f00c fde0 	bl	801b564 <awe_vecFill>
 800e9a4:	e7c2      	b.n	800e92c <awe_modMuteUnmuteProcess+0x164>
 800e9a6:	eef0 8a67 	vmov.f32	s17, s15
 800e9aa:	e761      	b.n	800e870 <awe_modMuteUnmuteProcess+0xa8>
 800e9ac:	eef0 7a68 	vmov.f32	s15, s17
 800e9b0:	e7a4      	b.n	800e8fc <awe_modMuteUnmuteProcess+0x134>
 800e9b2:	bf00      	nop
 800e9b4:	00000000 	.word	0x00000000

0800e9b8 <awe_modMuteUnmuteSet>:
 800e9b8:	2900      	cmp	r1, #0
 800e9ba:	d06f      	beq.n	800ea9c <awe_modMuteUnmuteSet+0xe4>
 800e9bc:	b570      	push	{r4, r5, r6, lr}
 800e9be:	6903      	ldr	r3, [r0, #16]
 800e9c0:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 800e9c4:	681b      	ldr	r3, [r3, #0]
 800e9c6:	ed2d 8b04 	vpush	{d8-d9}
 800e9ca:	ed93 8a04 	vldr	s16, [r3, #16]
 800e9ce:	ed9f 9a3c 	vldr	s18, [pc, #240]	@ 800eac0 <awe_modMuteUnmuteSet+0x108>
 800e9d2:	ee68 7a27 	vmul.f32	s15, s16, s15
 800e9d6:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 800e9da:	eeb0 0a68 	vmov.f32	s0, s17
 800e9de:	eea7 0a89 	vfma.f32	s0, s15, s18
 800e9e2:	4604      	mov	r4, r0
 800e9e4:	f020 fcaa 	bl	802f33c <floorf>
 800e9e8:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 800e9ec:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800e9f0:	ee68 7a27 	vmul.f32	s15, s16, s15
 800e9f4:	eeb0 0a68 	vmov.f32	s0, s17
 800e9f8:	ed84 7a0c 	vstr	s14, [r4, #48]	@ 0x30
 800e9fc:	eea7 0a89 	vfma.f32	s0, s15, s18
 800ea00:	ee17 6a10 	vmov	r6, s14
 800ea04:	f020 fc9a 	bl	802f33c <floorf>
 800ea08:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ea0c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800ea10:	ee28 8a27 	vmul.f32	s16, s16, s15
 800ea14:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 800ea18:	eeb0 0a68 	vmov.f32	s0, s17
 800ea1c:	eea8 0a09 	vfma.f32	s0, s16, s18
 800ea20:	f020 fc8c 	bl	802f33c <floorf>
 800ea24:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ea28:	2e00      	cmp	r6, #0
 800ea2a:	ee17 5a90 	vmov	r5, s15
 800ea2e:	edc4 7a0e 	vstr	s15, [r4, #56]	@ 0x38
 800ea32:	dd35      	ble.n	800eaa0 <awe_modMuteUnmuteSet+0xe8>
 800ea34:	ee07 6a90 	vmov	s15, r6
 800ea38:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 800eac4 <awe_modMuteUnmuteSet+0x10c>
 800ea3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ea40:	ee87 8a27 	vdiv.f32	s16, s14, s15
 800ea44:	eeb0 0a48 	vmov.f32	s0, s16
 800ea48:	f020 f8d0 	bl	802ebec <cosf>
 800ea4c:	eeb0 9a40 	vmov.f32	s18, s0
 800ea50:	eeb0 0a48 	vmov.f32	s0, s16
 800ea54:	f020 f916 	bl	802ec84 <sinf>
 800ea58:	2d00      	cmp	r5, #0
 800ea5a:	eef0 8a40 	vmov.f32	s17, s0
 800ea5e:	dd27      	ble.n	800eab0 <awe_modMuteUnmuteSet+0xf8>
 800ea60:	ee07 5a90 	vmov	s15, r5
 800ea64:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 800eac4 <awe_modMuteUnmuteSet+0x10c>
 800ea68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ea6c:	eec7 9a27 	vdiv.f32	s19, s14, s15
 800ea70:	eeb0 0a69 	vmov.f32	s0, s19
 800ea74:	f020 f8ba 	bl	802ebec <cosf>
 800ea78:	eeb0 8a40 	vmov.f32	s16, s0
 800ea7c:	eeb0 0a69 	vmov.f32	s0, s19
 800ea80:	f020 f900 	bl	802ec84 <sinf>
 800ea84:	ed84 9a0f 	vstr	s18, [r4, #60]	@ 0x3c
 800ea88:	edc4 8a10 	vstr	s17, [r4, #64]	@ 0x40
 800ea8c:	ed84 8a11 	vstr	s16, [r4, #68]	@ 0x44
 800ea90:	ecbd 8b04 	vpop	{d8-d9}
 800ea94:	2000      	movs	r0, #0
 800ea96:	ed84 0a12 	vstr	s0, [r4, #72]	@ 0x48
 800ea9a:	bd70      	pop	{r4, r5, r6, pc}
 800ea9c:	2000      	movs	r0, #0
 800ea9e:	4770      	bx	lr
 800eaa0:	2301      	movs	r3, #1
 800eaa2:	2d00      	cmp	r5, #0
 800eaa4:	eddf 8a08 	vldr	s17, [pc, #32]	@ 800eac8 <awe_modMuteUnmuteSet+0x110>
 800eaa8:	6323      	str	r3, [r4, #48]	@ 0x30
 800eaaa:	eebf 9a00 	vmov.f32	s18, #240	@ 0xbf800000 -1.0
 800eaae:	dcd7      	bgt.n	800ea60 <awe_modMuteUnmuteSet+0xa8>
 800eab0:	2301      	movs	r3, #1
 800eab2:	ed9f 0a05 	vldr	s0, [pc, #20]	@ 800eac8 <awe_modMuteUnmuteSet+0x110>
 800eab6:	63a3      	str	r3, [r4, #56]	@ 0x38
 800eab8:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 800eabc:	e7e2      	b.n	800ea84 <awe_modMuteUnmuteSet+0xcc>
 800eabe:	bf00      	nop
 800eac0:	3a83126f 	.word	0x3a83126f
 800eac4:	40490fdb 	.word	0x40490fdb
 800eac8:	b3bbbd2e 	.word	0xb3bbbd2e

0800eacc <awe_modNullSinkProcess>:
 800eacc:	4770      	bx	lr
 800eace:	bf00      	nop

0800ead0 <awe_modNullSinkV2Process>:
 800ead0:	4770      	bx	lr
 800ead2:	bf00      	nop

0800ead4 <awe_modNullSourceProcess>:
 800ead4:	4770      	bx	lr
 800ead6:	bf00      	nop

0800ead8 <awe_modParamGetProcess>:
 800ead8:	6a02      	ldr	r2, [r0, #32]
 800eada:	b172      	cbz	r2, 800eafa <awe_modParamGetProcess+0x22>
 800eadc:	b538      	push	{r3, r4, r5, lr}
 800eade:	6853      	ldr	r3, [r2, #4]
 800eae0:	6902      	ldr	r2, [r0, #16]
 800eae2:	695b      	ldr	r3, [r3, #20]
 800eae4:	6812      	ldr	r2, [r2, #0]
 800eae6:	4604      	mov	r4, r0
 800eae8:	68d5      	ldr	r5, [r2, #12]
 800eaea:	b113      	cbz	r3, 800eaf2 <awe_modParamGetProcess+0x1a>
 800eaec:	6983      	ldr	r3, [r0, #24]
 800eaee:	011b      	lsls	r3, r3, #4
 800eaf0:	d504      	bpl.n	800eafc <awe_modParamGetProcess+0x24>
 800eaf2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eaf4:	681b      	ldr	r3, [r3, #0]
 800eaf6:	602b      	str	r3, [r5, #0]
 800eaf8:	bd38      	pop	{r3, r4, r5, pc}
 800eafa:	4770      	bx	lr
 800eafc:	2101      	movs	r1, #1
 800eafe:	f7fb fc6d 	bl	800a3dc <awe_modSetDeferredSet>
 800eb02:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eb04:	681b      	ldr	r3, [r3, #0]
 800eb06:	602b      	str	r3, [r5, #0]
 800eb08:	bd38      	pop	{r3, r4, r5, pc}
 800eb0a:	bf00      	nop

0800eb0c <awe_modParamGetSet>:
 800eb0c:	b111      	cbz	r1, 800eb14 <awe_modParamGetSet+0x8>
 800eb0e:	6983      	ldr	r3, [r0, #24]
 800eb10:	011b      	lsls	r3, r3, #4
 800eb12:	d401      	bmi.n	800eb18 <awe_modParamGetSet+0xc>
 800eb14:	2000      	movs	r0, #0
 800eb16:	4770      	bx	lr
 800eb18:	6a00      	ldr	r0, [r0, #32]
 800eb1a:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800eb1e:	f7fb b915 	b.w	8009d4c <awe_fwGetCall>
 800eb22:	bf00      	nop

0800eb24 <awe_modParamSetProcess>:
 800eb24:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb26:	b30b      	cbz	r3, 800eb6c <awe_modParamSetProcess+0x48>
 800eb28:	6902      	ldr	r2, [r0, #16]
 800eb2a:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 800eb2c:	b410      	push	{r4}
 800eb2e:	6814      	ldr	r4, [r2, #0]
 800eb30:	6a02      	ldr	r2, [r0, #32]
 800eb32:	68e0      	ldr	r0, [r4, #12]
 800eb34:	680c      	ldr	r4, [r1, #0]
 800eb36:	6800      	ldr	r0, [r0, #0]
 800eb38:	2a04      	cmp	r2, #4
 800eb3a:	d807      	bhi.n	800eb4c <awe_modParamSetProcess+0x28>
 800eb3c:	e8df f002 	tbb	[pc, r2]
 800eb40:	09030b05 	.word	0x09030b05
 800eb44:	17          	.byte	0x17
 800eb45:	00          	.byte	0x00
 800eb46:	42a0      	cmp	r0, r4
 800eb48:	d000      	beq.n	800eb4c <awe_modParamSetProcess+0x28>
 800eb4a:	6008      	str	r0, [r1, #0]
 800eb4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eb50:	4770      	bx	lr
 800eb52:	42a0      	cmp	r0, r4
 800eb54:	d0fa      	beq.n	800eb4c <awe_modParamSetProcess+0x28>
 800eb56:	685a      	ldr	r2, [r3, #4]
 800eb58:	6008      	str	r0, [r1, #0]
 800eb5a:	6912      	ldr	r2, [r2, #16]
 800eb5c:	2a00      	cmp	r2, #0
 800eb5e:	d0f5      	beq.n	800eb4c <awe_modParamSetProcess+0x28>
 800eb60:	4618      	mov	r0, r3
 800eb62:	2101      	movs	r1, #1
 800eb64:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eb68:	f7fb bc38 	b.w	800a3dc <awe_modSetDeferredSet>
 800eb6c:	4770      	bx	lr
 800eb6e:	42a0      	cmp	r0, r4
 800eb70:	d0ec      	beq.n	800eb4c <awe_modParamSetProcess+0x28>
 800eb72:	6008      	str	r0, [r1, #0]
 800eb74:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eb78:	4618      	mov	r0, r3
 800eb7a:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800eb7e:	f7fb bc43 	b.w	800a408 <ClassModule_Set>
 800eb82:	bf00      	nop

0800eb84 <awe_modPeriodicFunctionGenProcess>:
 800eb84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb88:	6903      	ldr	r3, [r0, #16]
 800eb8a:	6c06      	ldr	r6, [r0, #64]	@ 0x40
 800eb8c:	681a      	ldr	r2, [r3, #0]
 800eb8e:	f8d0 803c 	ldr.w	r8, [r0, #60]	@ 0x3c
 800eb92:	6995      	ldr	r5, [r2, #24]
 800eb94:	68d7      	ldr	r7, [r2, #12]
 800eb96:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 800eccc <awe_modPeriodicFunctionGenProcess+0x148>
 800eb9a:	ed2d 8b02 	vpush	{d8}
 800eb9e:	4604      	mov	r4, r0
 800eba0:	f3c5 0510 	ubfx	r5, r5, #0, #17
 800eba4:	462a      	mov	r2, r5
 800eba6:	b082      	sub	sp, #8
 800eba8:	4638      	mov	r0, r7
 800ebaa:	2101      	movs	r1, #1
 800ebac:	f00c fcda 	bl	801b564 <awe_vecFill>
 800ebb0:	6a22      	ldr	r2, [r4, #32]
 800ebb2:	2a04      	cmp	r2, #4
 800ebb4:	d813      	bhi.n	800ebde <awe_modPeriodicFunctionGenProcess+0x5a>
 800ebb6:	e8df f002 	tbb	[pc, r2]
 800ebba:	6f20      	.short	0x6f20
 800ebbc:	583d      	.short	0x583d
 800ebbe:	03          	.byte	0x03
 800ebbf:	00          	.byte	0x00
 800ebc0:	42b5      	cmp	r5, r6
 800ebc2:	dd0a      	ble.n	800ebda <awe_modPeriodicFunctionGenProcess+0x56>
 800ebc4:	ea4f 0188 	mov.w	r1, r8, lsl #2
 800ebc8:	eb07 0286 	add.w	r2, r7, r6, lsl #2
 800ebcc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ebd0:	4446      	add	r6, r8
 800ebd2:	42b5      	cmp	r5, r6
 800ebd4:	6013      	str	r3, [r2, #0]
 800ebd6:	440a      	add	r2, r1
 800ebd8:	dcfa      	bgt.n	800ebd0 <awe_modPeriodicFunctionGenProcess+0x4c>
 800ebda:	1b76      	subs	r6, r6, r5
 800ebdc:	6426      	str	r6, [r4, #64]	@ 0x40
 800ebde:	2301      	movs	r3, #1
 800ebe0:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 800ebe4:	9500      	str	r5, [sp, #0]
 800ebe6:	4619      	mov	r1, r3
 800ebe8:	463a      	mov	r2, r7
 800ebea:	4638      	mov	r0, r7
 800ebec:	f00e fba2 	bl	801d334 <awe_vecScale>
 800ebf0:	b002      	add	sp, #8
 800ebf2:	ecbd 8b02 	vpop	{d8}
 800ebf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebfa:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ebfe:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ec02:	4622      	mov	r2, r4
 800ec04:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ec08:	3238      	adds	r2, #56	@ 0x38
 800ec0a:	ed92 0a00 	vldr	s0, [r2]
 800ec0e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec12:	462b      	mov	r3, r5
 800ec14:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 800ec18:	f104 0134 	add.w	r1, r4, #52	@ 0x34
 800ec1c:	4638      	mov	r0, r7
 800ec1e:	f00f fc7b 	bl	801e518 <awe_vecSineGenSmoothed>
 800ec22:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ec26:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ec2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800ec2e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec32:	e7d4      	b.n	800ebde <awe_modPeriodicFunctionGenProcess+0x5a>
 800ec34:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ec38:	edd4 7a11 	vldr	s15, [r4, #68]	@ 0x44
 800ec3c:	ed9f 8a24 	vldr	s16, [pc, #144]	@ 800ecd0 <awe_modPeriodicFunctionGenProcess+0x14c>
 800ec40:	ed94 0a12 	vldr	s0, [r4, #72]	@ 0x48
 800ec44:	eee7 7a08 	vfma.f32	s15, s14, s16
 800ec48:	462a      	mov	r2, r5
 800ec4a:	f104 0144 	add.w	r1, r4, #68	@ 0x44
 800ec4e:	4638      	mov	r0, r7
 800ec50:	edc4 7a11 	vstr	s15, [r4, #68]	@ 0x44
 800ec54:	f010 fa5a 	bl	801f10c <awe_vecTriangleWaveGen>
 800ec58:	edd4 7a11 	vldr	s15, [r4, #68]	@ 0x44
 800ec5c:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ec60:	eee7 7a48 	vfms.f32	s15, s14, s16
 800ec64:	edc4 7a11 	vstr	s15, [r4, #68]	@ 0x44
 800ec68:	e7b9      	b.n	800ebde <awe_modPeriodicFunctionGenProcess+0x5a>
 800ec6a:	edd4 7a0c 	vldr	s15, [r4, #48]	@ 0x30
 800ec6e:	ed94 0a13 	vldr	s0, [r4, #76]	@ 0x4c
 800ec72:	ed9f 8a18 	vldr	s16, [pc, #96]	@ 800ecd4 <awe_modPeriodicFunctionGenProcess+0x150>
 800ec76:	edd4 0a14 	vldr	s1, [r4, #80]	@ 0x50
 800ec7a:	eea7 0a88 	vfma.f32	s0, s15, s16
 800ec7e:	4629      	mov	r1, r5
 800ec80:	4638      	mov	r0, r7
 800ec82:	ed84 0a13 	vstr	s0, [r4, #76]	@ 0x4c
 800ec86:	f00e fa67 	bl	801d158 <awe_vecSawTooth>
 800ec8a:	edd4 7a0c 	vldr	s15, [r4, #48]	@ 0x30
 800ec8e:	eea7 0ac8 	vfms.f32	s0, s15, s16
 800ec92:	ed84 0a13 	vstr	s0, [r4, #76]	@ 0x4c
 800ec96:	e7a2      	b.n	800ebde <awe_modPeriodicFunctionGenProcess+0x5a>
 800ec98:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ec9c:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800eca0:	ed94 0a0e 	vldr	s0, [r4, #56]	@ 0x38
 800eca4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800eca8:	462a      	mov	r2, r5
 800ecaa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ecae:	f104 0134 	add.w	r1, r4, #52	@ 0x34
 800ecb2:	4638      	mov	r0, r7
 800ecb4:	f00f ffa2 	bl	801ebfc <awe_vecSquareWaveGen>
 800ecb8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ecbc:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ecc0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800ecc4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ecc8:	e789      	b.n	800ebde <awe_modPeriodicFunctionGenProcess+0x5a>
 800ecca:	bf00      	nop
 800eccc:	00000000 	.word	0x00000000
 800ecd0:	3ea2f983 	.word	0x3ea2f983
 800ecd4:	3e22f983 	.word	0x3e22f983

0800ecd8 <awe_modPeriodicFunctionGenSet>:
 800ecd8:	058a      	lsls	r2, r1, #22
 800ecda:	b538      	push	{r3, r4, r5, lr}
 800ecdc:	460d      	mov	r5, r1
 800ecde:	4604      	mov	r4, r0
 800ece0:	d523      	bpl.n	800ed2a <awe_modPeriodicFunctionGenSet+0x52>
 800ece2:	6903      	ldr	r3, [r0, #16]
 800ece4:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 800ece8:	681b      	ldr	r3, [r3, #0]
 800ecea:	eddf 6a18 	vldr	s13, [pc, #96]	@ 800ed4c <awe_modPeriodicFunctionGenSet+0x74>
 800ecee:	ed93 0a04 	vldr	s0, [r3, #16]
 800ecf2:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 800ecf6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800ecfa:	ee37 5aa7 	vadd.f32	s10, s15, s15
 800ecfe:	ee27 7a87 	vmul.f32	s14, s15, s14
 800ed02:	eec6 5a80 	vdiv.f32	s11, s13, s0
 800ed06:	ee85 6a00 	vdiv.f32	s12, s10, s0
 800ed0a:	eec7 6a00 	vdiv.f32	s13, s14, s0
 800ed0e:	edc0 5a0e 	vstr	s11, [r0, #56]	@ 0x38
 800ed12:	ed80 6a14 	vstr	s12, [r0, #80]	@ 0x50
 800ed16:	edc0 6a12 	vstr	s13, [r0, #72]	@ 0x48
 800ed1a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800ed1e:	f020 fb0d 	bl	802f33c <floorf>
 800ed22:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800ed26:	ed84 0a0f 	vstr	s0, [r4, #60]	@ 0x3c
 800ed2a:	052b      	lsls	r3, r5, #20
 800ed2c:	d50b      	bpl.n	800ed46 <awe_modPeriodicFunctionGenSet+0x6e>
 800ed2e:	ed94 6a0b 	vldr	s12, [r4, #44]	@ 0x2c
 800ed32:	eddf 6a07 	vldr	s13, [pc, #28]	@ 800ed50 <awe_modPeriodicFunctionGenSet+0x78>
 800ed36:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 800ed54 <awe_modPeriodicFunctionGenSet+0x7c>
 800ed3a:	eec6 7a26 	vdiv.f32	s15, s12, s13
 800ed3e:	ee67 7a87 	vmul.f32	s15, s15, s14
 800ed42:	edc4 7a0c 	vstr	s15, [r4, #48]	@ 0x30
 800ed46:	2000      	movs	r0, #0
 800ed48:	bd38      	pop	{r3, r4, r5, pc}
 800ed4a:	bf00      	nop
 800ed4c:	40c90fdb 	.word	0x40c90fdb
 800ed50:	43340000 	.word	0x43340000
 800ed54:	40490fdb 	.word	0x40490fdb

0800ed58 <awe_modPeriodicSourceConstructor>:
 800ed58:	b570      	push	{r4, r5, r6, lr}
 800ed5a:	b082      	sub	sp, #8
 800ed5c:	4616      	mov	r6, r2
 800ed5e:	4605      	mov	r5, r0
 800ed60:	9806      	ldr	r0, [sp, #24]
 800ed62:	9300      	str	r3, [sp, #0]
 800ed64:	460a      	mov	r2, r1
 800ed66:	9001      	str	r0, [sp, #4]
 800ed68:	4633      	mov	r3, r6
 800ed6a:	4629      	mov	r1, r5
 800ed6c:	480d      	ldr	r0, [pc, #52]	@ (800eda4 <awe_modPeriodicSourceConstructor+0x4c>)
 800ed6e:	f011 f9e9 	bl	8020144 <BaseClassModule_Constructor>
 800ed72:	b190      	cbz	r0, 800ed9a <awe_modPeriodicSourceConstructor+0x42>
 800ed74:	6833      	ldr	r3, [r6, #0]
 800ed76:	695b      	ldr	r3, [r3, #20]
 800ed78:	4604      	mov	r4, r0
 800ed7a:	6a00      	ldr	r0, [r0, #32]
 800ed7c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800ed80:	fb00 f003 	mul.w	r0, r0, r3
 800ed84:	3001      	adds	r0, #1
 800ed86:	462a      	mov	r2, r5
 800ed88:	0080      	lsls	r0, r0, #2
 800ed8a:	2102      	movs	r1, #2
 800ed8c:	f010 fc86 	bl	801f69c <awe_fwMalloc>
 800ed90:	6320      	str	r0, [r4, #48]	@ 0x30
 800ed92:	b110      	cbz	r0, 800ed9a <awe_modPeriodicSourceConstructor+0x42>
 800ed94:	4620      	mov	r0, r4
 800ed96:	b002      	add	sp, #8
 800ed98:	bd70      	pop	{r4, r5, r6, pc}
 800ed9a:	2400      	movs	r4, #0
 800ed9c:	4620      	mov	r0, r4
 800ed9e:	b002      	add	sp, #8
 800eda0:	bd70      	pop	{r4, r5, r6, pc}
 800eda2:	bf00      	nop
 800eda4:	0803492c 	.word	0x0803492c

0800eda8 <awe_modPeriodicSourceProcess>:
 800eda8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800edac:	f8d0 8010 	ldr.w	r8, [r0, #16]
 800edb0:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800edb2:	f8d8 3000 	ldr.w	r3, [r8]
 800edb6:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 800edba:	f3c6 0609 	ubfx	r6, r6, #0, #10
 800edbe:	b086      	sub	sp, #24
 800edc0:	4605      	mov	r5, r0
 800edc2:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800edc6:	b1ce      	cbz	r6, 800edfc <awe_modPeriodicSourceProcess+0x54>
 800edc8:	2400      	movs	r4, #0
 800edca:	e002      	b.n	800edd2 <awe_modPeriodicSourceProcess+0x2a>
 800edcc:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 800edce:	f8d8 3000 	ldr.w	r3, [r8]
 800edd2:	9205      	str	r2, [sp, #20]
 800edd4:	e9cd 6701 	strd	r6, r7, [sp, #4]
 800edd8:	68db      	ldr	r3, [r3, #12]
 800edda:	6a29      	ldr	r1, [r5, #32]
 800eddc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800edde:	fb04 f201 	mul.w	r2, r4, r1
 800ede2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800ede6:	9300      	str	r3, [sp, #0]
 800ede8:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800edec:	3401      	adds	r4, #1
 800edee:	2301      	movs	r3, #1
 800edf0:	aa05      	add	r2, sp, #20
 800edf2:	f00b fe73 	bl	801aadc <awe_vecCircRead>
 800edf6:	42a6      	cmp	r6, r4
 800edf8:	d1e8      	bne.n	800edcc <awe_modPeriodicSourceProcess+0x24>
 800edfa:	9a05      	ldr	r2, [sp, #20]
 800edfc:	62ea      	str	r2, [r5, #44]	@ 0x2c
 800edfe:	b006      	add	sp, #24
 800ee00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ee04 <awe_modPolynomialConstructor>:
 800ee04:	b530      	push	{r4, r5, lr}
 800ee06:	b083      	sub	sp, #12
 800ee08:	4605      	mov	r5, r0
 800ee0a:	9806      	ldr	r0, [sp, #24]
 800ee0c:	e9cd 3000 	strd	r3, r0, [sp]
 800ee10:	4613      	mov	r3, r2
 800ee12:	480b      	ldr	r0, [pc, #44]	@ (800ee40 <awe_modPolynomialConstructor+0x3c>)
 800ee14:	460a      	mov	r2, r1
 800ee16:	4629      	mov	r1, r5
 800ee18:	f011 f994 	bl	8020144 <BaseClassModule_Constructor>
 800ee1c:	b160      	cbz	r0, 800ee38 <awe_modPolynomialConstructor+0x34>
 800ee1e:	4604      	mov	r4, r0
 800ee20:	6a00      	ldr	r0, [r0, #32]
 800ee22:	462a      	mov	r2, r5
 800ee24:	0080      	lsls	r0, r0, #2
 800ee26:	f240 2131 	movw	r1, #561	@ 0x231
 800ee2a:	f010 fc37 	bl	801f69c <awe_fwMalloc>
 800ee2e:	6260      	str	r0, [r4, #36]	@ 0x24
 800ee30:	b110      	cbz	r0, 800ee38 <awe_modPolynomialConstructor+0x34>
 800ee32:	4620      	mov	r0, r4
 800ee34:	b003      	add	sp, #12
 800ee36:	bd30      	pop	{r4, r5, pc}
 800ee38:	2400      	movs	r4, #0
 800ee3a:	4620      	mov	r0, r4
 800ee3c:	b003      	add	sp, #12
 800ee3e:	bd30      	pop	{r4, r5, pc}
 800ee40:	08034954 	.word	0x08034954

0800ee44 <awe_modPolynomialProcess>:
 800ee44:	6902      	ldr	r2, [r0, #16]
 800ee46:	b570      	push	{r4, r5, r6, lr}
 800ee48:	e9d2 5200 	ldrd	r5, r2, [r2]
 800ee4c:	e9d5 1405 	ldrd	r1, r4, [r5, #20]
 800ee50:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800ee54:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800ee58:	68ee      	ldr	r6, [r5, #12]
 800ee5a:	68d2      	ldr	r2, [r2, #12]
 800ee5c:	fb01 f104 	mul.w	r1, r1, r4
 800ee60:	e9d0 4508 	ldrd	r4, r5, [r0, #32]
 800ee64:	b084      	sub	sp, #16
 800ee66:	2301      	movs	r3, #1
 800ee68:	9102      	str	r1, [sp, #8]
 800ee6a:	4630      	mov	r0, r6
 800ee6c:	e9cd 4500 	strd	r4, r5, [sp]
 800ee70:	4619      	mov	r1, r3
 800ee72:	f00d ffcd 	bl	801ce10 <awe_vecPolynomial>
 800ee76:	b004      	add	sp, #16
 800ee78:	bd70      	pop	{r4, r5, r6, pc}
 800ee7a:	bf00      	nop

0800ee7c <awe_modPowProcess>:
 800ee7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee80:	6905      	ldr	r5, [r0, #16]
 800ee82:	e9d5 0400 	ldrd	r0, r4, [r5]
 800ee86:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800ee8a:	e9d0 7205 	ldrd	r7, r2, [r0, #20]
 800ee8e:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800ee92:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800ee96:	68ad      	ldr	r5, [r5, #8]
 800ee98:	f8d4 800c 	ldr.w	r8, [r4, #12]
 800ee9c:	68ed      	ldr	r5, [r5, #12]
 800ee9e:	68c4      	ldr	r4, [r0, #12]
 800eea0:	fb03 f301 	mul.w	r3, r3, r1
 800eea4:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800eea8:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800eeac:	2b01      	cmp	r3, #1
 800eeae:	fb07 f702 	mul.w	r7, r7, r2
 800eeb2:	d010      	beq.n	800eed6 <awe_modPowProcess+0x5a>
 800eeb4:	b16f      	cbz	r7, 800eed2 <awe_modPowProcess+0x56>
 800eeb6:	2600      	movs	r6, #0
 800eeb8:	ecb4 0a01 	vldmia	r4!, {s0}
 800eebc:	ecf8 0a01 	vldmia	r8!, {s1}
 800eec0:	eeb0 0ac0 	vabs.f32	s0, s0
 800eec4:	f01f fd1e 	bl	802e904 <powf>
 800eec8:	3601      	adds	r6, #1
 800eeca:	42b7      	cmp	r7, r6
 800eecc:	eca5 0a01 	vstmia	r5!, {s0}
 800eed0:	d1f2      	bne.n	800eeb8 <awe_modPowProcess+0x3c>
 800eed2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eed6:	2f00      	cmp	r7, #0
 800eed8:	d0fb      	beq.n	800eed2 <awe_modPowProcess+0x56>
 800eeda:	2600      	movs	r6, #0
 800eedc:	ecb4 0a01 	vldmia	r4!, {s0}
 800eee0:	edd8 0a00 	vldr	s1, [r8]
 800eee4:	eeb0 0ac0 	vabs.f32	s0, s0
 800eee8:	f01f fd0c 	bl	802e904 <powf>
 800eeec:	3601      	adds	r6, #1
 800eeee:	42b7      	cmp	r7, r6
 800eef0:	eca5 0a01 	vstmia	r5!, {s0}
 800eef4:	d1f2      	bne.n	800eedc <awe_modPowProcess+0x60>
 800eef6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eefa:	bf00      	nop

0800eefc <awe_modPow10toXProcess>:
 800eefc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eefe:	6903      	ldr	r3, [r0, #16]
 800ef00:	e9d3 2100 	ldrd	r2, r1, [r3]
 800ef04:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800ef08:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800ef0c:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800ef10:	fb07 f703 	mul.w	r7, r7, r3
 800ef14:	ed2d 8b02 	vpush	{d8}
 800ef18:	68ce      	ldr	r6, [r1, #12]
 800ef1a:	68d5      	ldr	r5, [r2, #12]
 800ef1c:	b16f      	cbz	r7, 800ef3a <awe_modPow10toXProcess+0x3e>
 800ef1e:	ed9f 8a08 	vldr	s16, [pc, #32]	@ 800ef40 <awe_modPow10toXProcess+0x44>
 800ef22:	2400      	movs	r4, #0
 800ef24:	ecb5 0a01 	vldmia	r5!, {s0}
 800ef28:	ee20 0a08 	vmul.f32	s0, s0, s16
 800ef2c:	f01f fc66 	bl	802e7fc <expf>
 800ef30:	3401      	adds	r4, #1
 800ef32:	42a7      	cmp	r7, r4
 800ef34:	eca6 0a01 	vstmia	r6!, {s0}
 800ef38:	d1f4      	bne.n	800ef24 <awe_modPow10toXProcess+0x28>
 800ef3a:	ecbd 8b02 	vpop	{d8}
 800ef3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ef40:	40135d8e 	.word	0x40135d8e

0800ef44 <awe_modPulseGenSet>:
 800ef44:	b1e9      	cbz	r1, 800ef82 <awe_modPulseGenSet+0x3e>
 800ef46:	6903      	ldr	r3, [r0, #16]
 800ef48:	edd0 6a08 	vldr	s13, [r0, #32]
 800ef4c:	681b      	ldr	r3, [r3, #0]
 800ef4e:	ed90 7a09 	vldr	s14, [r0, #36]	@ 0x24
 800ef52:	edd3 7a04 	vldr	s15, [r3, #16]
 800ef56:	ed9f 6a0c 	vldr	s12, [pc, #48]	@ 800ef88 <awe_modPulseGenSet+0x44>
 800ef5a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800ef5e:	ee27 7a87 	vmul.f32	s14, s15, s14
 800ef62:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800ef66:	eef0 5a67 	vmov.f32	s11, s15
 800ef6a:	eee6 5a86 	vfma.f32	s11, s13, s12
 800ef6e:	eee7 7a06 	vfma.f32	s15, s14, s12
 800ef72:	eefd 6ae5 	vcvt.s32.f32	s13, s11
 800ef76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ef7a:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800ef7e:	edc0 7a0c 	vstr	s15, [r0, #48]	@ 0x30
 800ef82:	2000      	movs	r0, #0
 800ef84:	4770      	bx	lr
 800ef86:	bf00      	nop
 800ef88:	3a83126f 	.word	0x3a83126f

0800ef8c <awe_modPulseGenProcess>:
 800ef8c:	6902      	ldr	r2, [r0, #16]
 800ef8e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 800ef90:	6811      	ldr	r1, [r2, #0]
 800ef92:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef94:	698a      	ldr	r2, [r1, #24]
 800ef96:	68c9      	ldr	r1, [r1, #12]
 800ef98:	b083      	sub	sp, #12
 800ef9a:	f3c2 0210 	ubfx	r2, r2, #0, #17
 800ef9e:	b90b      	cbnz	r3, 800efa4 <awe_modPulseGenProcess+0x18>
 800efa0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800efa2:	b36c      	cbz	r4, 800f000 <awe_modPulseGenProcess+0x74>
 800efa4:	b1da      	cbz	r2, 800efde <awe_modPulseGenProcess+0x52>
 800efa6:	e9d0 560b 	ldrd	r5, r6, [r0, #44]	@ 0x2c
 800efaa:	eddf 6a1a 	vldr	s13, [pc, #104]	@ 800f014 <awe_modPulseGenProcess+0x88>
 800efae:	eb01 0782 	add.w	r7, r1, r2, lsl #2
 800efb2:	2400      	movs	r4, #0
 800efb4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800efb8:	429e      	cmp	r6, r3
 800efba:	f103 0301 	add.w	r3, r3, #1
 800efbe:	bfcc      	ite	gt
 800efc0:	eef0 7a47 	vmovgt.f32	s15, s14
 800efc4:	eef0 7a66 	vmovle.f32	s15, s13
 800efc8:	429d      	cmp	r5, r3
 800efca:	ece1 7a01 	vstmia	r1!, {s15}
 800efce:	dc02      	bgt.n	800efd6 <awe_modPulseGenProcess+0x4a>
 800efd0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800efd2:	b13b      	cbz	r3, 800efe4 <awe_modPulseGenProcess+0x58>
 800efd4:	2300      	movs	r3, #0
 800efd6:	42b9      	cmp	r1, r7
 800efd8:	f104 0401 	add.w	r4, r4, #1
 800efdc:	d1ec      	bne.n	800efb8 <awe_modPulseGenProcess+0x2c>
 800efde:	6343      	str	r3, [r0, #52]	@ 0x34
 800efe0:	b003      	add	sp, #12
 800efe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efe4:	1b12      	subs	r2, r2, r4
 800efe6:	4605      	mov	r5, r0
 800efe8:	3a01      	subs	r2, #1
 800efea:	4608      	mov	r0, r1
 800efec:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 800f014 <awe_modPulseGenProcess+0x88>
 800eff0:	9301      	str	r3, [sp, #4]
 800eff2:	2101      	movs	r1, #1
 800eff4:	f00c fab6 	bl	801b564 <awe_vecFill>
 800eff8:	9b01      	ldr	r3, [sp, #4]
 800effa:	636b      	str	r3, [r5, #52]	@ 0x34
 800effc:	b003      	add	sp, #12
 800effe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f000:	ed9f 0a04 	vldr	s0, [pc, #16]	@ 800f014 <awe_modPulseGenProcess+0x88>
 800f004:	4608      	mov	r0, r1
 800f006:	2101      	movs	r1, #1
 800f008:	b003      	add	sp, #12
 800f00a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f00e:	f00c baa9 	b.w	801b564 <awe_vecFill>
 800f012:	bf00      	nop
 800f014:	00000000 	.word	0x00000000

0800f018 <awe_modRandProcess>:
 800f018:	b570      	push	{r4, r5, r6, lr}
 800f01a:	7e46      	ldrb	r6, [r0, #25]
 800f01c:	6904      	ldr	r4, [r0, #16]
 800f01e:	b1a6      	cbz	r6, 800f04a <awe_modRandProcess+0x32>
 800f020:	3c04      	subs	r4, #4
 800f022:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800f026:	f100 0520 	add.w	r5, r0, #32
 800f02a:	f854 1f04 	ldr.w	r1, [r4, #4]!
 800f02e:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 800f032:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f036:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800f03a:	68c8      	ldr	r0, [r1, #12]
 800f03c:	fb02 f203 	mul.w	r2, r2, r3
 800f040:	4629      	mov	r1, r5
 800f042:	f00e f833 	bl	801d0ac <awe_vecRand>
 800f046:	42a6      	cmp	r6, r4
 800f048:	d1ef      	bne.n	800f02a <awe_modRandProcess+0x12>
 800f04a:	bd70      	pop	{r4, r5, r6, pc}

0800f04c <awe_modReciprocalProcess>:
 800f04c:	6903      	ldr	r3, [r0, #16]
 800f04e:	e9d3 0200 	ldrd	r0, r2, [r3]
 800f052:	b500      	push	{lr}
 800f054:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800f058:	b083      	sub	sp, #12
 800f05a:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f05e:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800f062:	fb01 f103 	mul.w	r1, r1, r3
 800f066:	2301      	movs	r3, #1
 800f068:	68d2      	ldr	r2, [r2, #12]
 800f06a:	68c0      	ldr	r0, [r0, #12]
 800f06c:	9100      	str	r1, [sp, #0]
 800f06e:	4619      	mov	r1, r3
 800f070:	f00e f85c 	bl	801d12c <awe_vecReciprocal>
 800f074:	b003      	add	sp, #12
 800f076:	f85d fb04 	ldr.w	pc, [sp], #4
 800f07a:	bf00      	nop

0800f07c <awe_modRemainderProcess>:
 800f07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f080:	6906      	ldr	r6, [r0, #16]
 800f082:	f890 c018 	ldrb.w	ip, [r0, #24]
 800f086:	e9d6 2300 	ldrd	r2, r3, [r6]
 800f08a:	ed2d 8b04 	vpush	{d8-d9}
 800f08e:	e9d2 4105 	ldrd	r4, r1, [r2, #20]
 800f092:	f1bc 0f02 	cmp.w	ip, #2
 800f096:	b085      	sub	sp, #20
 800f098:	68d5      	ldr	r5, [r2, #12]
 800f09a:	68df      	ldr	r7, [r3, #12]
 800f09c:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800f0a0:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800f0a4:	d020      	beq.n	800f0e8 <awe_modRemainderProcess+0x6c>
 800f0a6:	edd0 8a08 	vldr	s17, [r0, #32]
 800f0aa:	eef5 8a40 	vcmp.f32	s17, #0.0
 800f0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0b2:	fb04 f401 	mul.w	r4, r4, r1
 800f0b6:	d04d      	beq.n	800f154 <awe_modRemainderProcess+0xd8>
 800f0b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f0bc:	ee87 9aa8 	vdiv.f32	s18, s15, s17
 800f0c0:	b16c      	cbz	r4, 800f0de <awe_modRemainderProcess+0x62>
 800f0c2:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800f0c6:	ecb5 8a01 	vldmia	r5!, {s16}
 800f0ca:	ee28 0a09 	vmul.f32	s0, s16, s18
 800f0ce:	f020 f935 	bl	802f33c <floorf>
 800f0d2:	eea0 8a68 	vfms.f32	s16, s0, s17
 800f0d6:	42a5      	cmp	r5, r4
 800f0d8:	eca7 8a01 	vstmia	r7!, {s16}
 800f0dc:	d1f3      	bne.n	800f0c6 <awe_modRemainderProcess+0x4a>
 800f0de:	b005      	add	sp, #20
 800f0e0:	ecbd 8b04 	vpop	{d8-d9}
 800f0e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0e8:	699b      	ldr	r3, [r3, #24]
 800f0ea:	68b2      	ldr	r2, [r6, #8]
 800f0ec:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f0f0:	2b01      	cmp	r3, #1
 800f0f2:	68d2      	ldr	r2, [r2, #12]
 800f0f4:	d048      	beq.n	800f188 <awe_modRemainderProcess+0x10c>
 800f0f6:	2c00      	cmp	r4, #0
 800f0f8:	d0f1      	beq.n	800f0de <awe_modRemainderProcess+0x62>
 800f0fa:	00a4      	lsls	r4, r4, #2
 800f0fc:	2900      	cmp	r1, #0
 800f0fe:	d0ee      	beq.n	800f0de <awe_modRemainderProcess+0x62>
 800f100:	192b      	adds	r3, r5, r4
 800f102:	46a9      	mov	r9, r5
 800f104:	4692      	mov	sl, r2
 800f106:	eb07 0b81 	add.w	fp, r7, r1, lsl #2
 800f10a:	9303      	str	r3, [sp, #12]
 800f10c:	46c8      	mov	r8, r9
 800f10e:	4656      	mov	r6, sl
 800f110:	463d      	mov	r5, r7
 800f112:	ecf5 8a01 	vldmia	r5!, {s17}
 800f116:	ed98 8a00 	vldr	s16, [r8]
 800f11a:	eef5 8a40 	vcmp.f32	s17, #0.0
 800f11e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f122:	d023      	beq.n	800f16c <awe_modRemainderProcess+0xf0>
 800f124:	ee88 0a28 	vdiv.f32	s0, s16, s17
 800f128:	f020 f908 	bl	802f33c <floorf>
 800f12c:	45ab      	cmp	fp, r5
 800f12e:	44a0      	add	r8, r4
 800f130:	eea8 8ac0 	vfms.f32	s16, s17, s0
 800f134:	ed86 8a00 	vstr	s16, [r6]
 800f138:	4426      	add	r6, r4
 800f13a:	d1ea      	bne.n	800f112 <awe_modRemainderProcess+0x96>
 800f13c:	9b03      	ldr	r3, [sp, #12]
 800f13e:	f109 0904 	add.w	r9, r9, #4
 800f142:	454b      	cmp	r3, r9
 800f144:	f10a 0a04 	add.w	sl, sl, #4
 800f148:	d1e0      	bne.n	800f10c <awe_modRemainderProcess+0x90>
 800f14a:	b005      	add	sp, #20
 800f14c:	ecbd 8b04 	vpop	{d8-d9}
 800f150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f154:	2301      	movs	r3, #1
 800f156:	9400      	str	r4, [sp, #0]
 800f158:	463a      	mov	r2, r7
 800f15a:	4628      	mov	r0, r5
 800f15c:	4619      	mov	r1, r3
 800f15e:	f00b ff81 	bl	801b064 <awe_vecCopy32>
 800f162:	b005      	add	sp, #20
 800f164:	ecbd 8b04 	vpop	{d8-d9}
 800f168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f16c:	45ab      	cmp	fp, r5
 800f16e:	ed86 8a00 	vstr	s16, [r6]
 800f172:	44a0      	add	r8, r4
 800f174:	4426      	add	r6, r4
 800f176:	d1cc      	bne.n	800f112 <awe_modRemainderProcess+0x96>
 800f178:	9b03      	ldr	r3, [sp, #12]
 800f17a:	f109 0904 	add.w	r9, r9, #4
 800f17e:	454b      	cmp	r3, r9
 800f180:	f10a 0a04 	add.w	sl, sl, #4
 800f184:	d1c2      	bne.n	800f10c <awe_modRemainderProcess+0x90>
 800f186:	e7e0      	b.n	800f14a <awe_modRemainderProcess+0xce>
 800f188:	edd7 8a00 	vldr	s17, [r7]
 800f18c:	eef5 8a40 	vcmp.f32	s17, #0.0
 800f190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f194:	fb04 f401 	mul.w	r4, r4, r1
 800f198:	d015      	beq.n	800f1c6 <awe_modRemainderProcess+0x14a>
 800f19a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f19e:	ee87 9aa8 	vdiv.f32	s18, s15, s17
 800f1a2:	2c00      	cmp	r4, #0
 800f1a4:	d09b      	beq.n	800f0de <awe_modRemainderProcess+0x62>
 800f1a6:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800f1aa:	4692      	mov	sl, r2
 800f1ac:	ecb5 8a01 	vldmia	r5!, {s16}
 800f1b0:	ee28 0a09 	vmul.f32	s0, s16, s18
 800f1b4:	f020 f8c2 	bl	802f33c <floorf>
 800f1b8:	eea0 8a68 	vfms.f32	s16, s0, s17
 800f1bc:	42ac      	cmp	r4, r5
 800f1be:	ecaa 8a01 	vstmia	sl!, {s16}
 800f1c2:	d1f3      	bne.n	800f1ac <awe_modRemainderProcess+0x130>
 800f1c4:	e78b      	b.n	800f0de <awe_modRemainderProcess+0x62>
 800f1c6:	9400      	str	r4, [sp, #0]
 800f1c8:	4628      	mov	r0, r5
 800f1ca:	4619      	mov	r1, r3
 800f1cc:	f00b ff4a 	bl	801b064 <awe_vecCopy32>
 800f1d0:	e785      	b.n	800f0de <awe_modRemainderProcess+0x62>
 800f1d2:	bf00      	nop

0800f1d4 <awe_modRMSProcess>:
 800f1d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f1d8:	7e07      	ldrb	r7, [r0, #24]
 800f1da:	f8d0 8010 	ldr.w	r8, [r0, #16]
 800f1de:	ed2d 8b02 	vpush	{d8}
 800f1e2:	4682      	mov	sl, r0
 800f1e4:	2f00      	cmp	r7, #0
 800f1e6:	d04f      	beq.n	800f288 <awe_modRMSProcess+0xb4>
 800f1e8:	f1a8 0504 	sub.w	r5, r8, #4
 800f1ec:	ed9f 8a2d 	vldr	s16, [pc, #180]	@ 800f2a4 <awe_modRMSProcess+0xd0>
 800f1f0:	eb05 0687 	add.w	r6, r5, r7, lsl #2
 800f1f4:	f04f 0900 	mov.w	r9, #0
 800f1f8:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800f1fc:	e9d2 4305 	ldrd	r4, r3, [r2, #20]
 800f200:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f204:	f3c4 0409 	ubfx	r4, r4, #0, #10
 800f208:	fb04 f403 	mul.w	r4, r4, r3
 800f20c:	68d0      	ldr	r0, [r2, #12]
 800f20e:	4621      	mov	r1, r4
 800f210:	f00f fef2 	bl	801eff8 <awe_vecSumSquared>
 800f214:	42ae      	cmp	r6, r5
 800f216:	44a1      	add	r9, r4
 800f218:	ee38 8a00 	vadd.f32	s16, s16, s0
 800f21c:	d1ec      	bne.n	800f1f8 <awe_modRMSProcess+0x24>
 800f21e:	ee07 9a90 	vmov	s15, r9
 800f222:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f226:	eec8 8a27 	vdiv.f32	s17, s16, s15
 800f22a:	eef5 8a40 	vcmp.f32	s17, #0.0
 800f22e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f232:	eeb1 8ae8 	vsqrt.f32	s16, s17
 800f236:	d42c      	bmi.n	800f292 <awe_modRMSProcess+0xbe>
 800f238:	ed9a 6a0e 	vldr	s12, [sl, #56]	@ 0x38
 800f23c:	ed9a 0a0d 	vldr	s0, [sl, #52]	@ 0x34
 800f240:	edda 6a0c 	vldr	s13, [sl, #48]	@ 0x30
 800f244:	edda 7a0f 	vldr	s15, [sl, #60]	@ 0x3c
 800f248:	ed9a 7a0b 	vldr	s14, [sl, #44]	@ 0x2c
 800f24c:	ed8a 8a09 	vstr	s16, [sl, #36]	@ 0x24
 800f250:	ee20 0a06 	vmul.f32	s0, s0, s12
 800f254:	edca 8a0e 	vstr	s17, [sl, #56]	@ 0x38
 800f258:	eea6 0aa8 	vfma.f32	s0, s13, s17
 800f25c:	eea7 0a67 	vfms.f32	s0, s14, s15
 800f260:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f268:	ed8a 0a0f 	vstr	s0, [sl, #60]	@ 0x3c
 800f26c:	eeb1 8ac0 	vsqrt.f32	s16, s0
 800f270:	d414      	bmi.n	800f29c <awe_modRMSProcess+0xc8>
 800f272:	f858 3027 	ldr.w	r3, [r8, r7, lsl #2]
 800f276:	68db      	ldr	r3, [r3, #12]
 800f278:	ed8a 8a0a 	vstr	s16, [sl, #40]	@ 0x28
 800f27c:	ed83 8a00 	vstr	s16, [r3]
 800f280:	ecbd 8b02 	vpop	{d8}
 800f284:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f288:	eddf 7a06 	vldr	s15, [pc, #24]	@ 800f2a4 <awe_modRMSProcess+0xd0>
 800f28c:	eeb0 8a67 	vmov.f32	s16, s15
 800f290:	e7c9      	b.n	800f226 <awe_modRMSProcess+0x52>
 800f292:	eeb0 0a68 	vmov.f32	s0, s17
 800f296:	f01f fbb7 	bl	802ea08 <sqrtf>
 800f29a:	e7cd      	b.n	800f238 <awe_modRMSProcess+0x64>
 800f29c:	f01f fbb4 	bl	802ea08 <sqrtf>
 800f2a0:	e7e7      	b.n	800f272 <awe_modRMSProcess+0x9e>
 800f2a2:	bf00      	nop
 800f2a4:	00000000 	.word	0x00000000

0800f2a8 <awe_modRMSSet>:
 800f2a8:	05cb      	lsls	r3, r1, #23
 800f2aa:	d401      	bmi.n	800f2b0 <awe_modRMSSet+0x8>
 800f2ac:	2000      	movs	r0, #0
 800f2ae:	4770      	bx	lr
 800f2b0:	6903      	ldr	r3, [r0, #16]
 800f2b2:	edd0 6a08 	vldr	s13, [r0, #32]
 800f2b6:	681a      	ldr	r2, [r3, #0]
 800f2b8:	eddf 7a16 	vldr	s15, [pc, #88]	@ 800f314 <awe_modRMSSet+0x6c>
 800f2bc:	6993      	ldr	r3, [r2, #24]
 800f2be:	edd2 5a04 	vldr	s11, [r2, #16]
 800f2c2:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 800f318 <awe_modRMSSet+0x70>
 800f2c6:	b510      	push	{r4, lr}
 800f2c8:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f2cc:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800f2d0:	ee07 3a90 	vmov	s15, r3
 800f2d4:	ed2d 8b02 	vpush	{d8}
 800f2d8:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 800f2dc:	ee88 7a26 	vdiv.f32	s14, s16, s13
 800f2e0:	4604      	mov	r4, r0
 800f2e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f2e6:	ee27 7a06 	vmul.f32	s14, s14, s12
 800f2ea:	ee85 0aa7 	vdiv.f32	s0, s11, s15
 800f2ee:	ee87 0a00 	vdiv.f32	s0, s14, s0
 800f2f2:	f01f fa83 	bl	802e7fc <expf>
 800f2f6:	2300      	movs	r3, #0
 800f2f8:	2000      	movs	r0, #0
 800f2fa:	6363      	str	r3, [r4, #52]	@ 0x34
 800f2fc:	ee38 8a40 	vsub.f32	s16, s16, s0
 800f300:	eeb1 0a40 	vneg.f32	s0, s0
 800f304:	ed84 8a0c 	vstr	s16, [r4, #48]	@ 0x30
 800f308:	ecbd 8b02 	vpop	{d8}
 800f30c:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800f310:	bd10      	pop	{r4, pc}
 800f312:	bf00      	nop
 800f314:	3a83126f 	.word	0x3a83126f
 800f318:	c0c90fdb 	.word	0xc0c90fdb

0800f31c <awe_modRMSNConstructor>:
 800f31c:	b570      	push	{r4, r5, r6, lr}
 800f31e:	b082      	sub	sp, #8
 800f320:	4616      	mov	r6, r2
 800f322:	4605      	mov	r5, r0
 800f324:	9806      	ldr	r0, [sp, #24]
 800f326:	9300      	str	r3, [sp, #0]
 800f328:	460a      	mov	r2, r1
 800f32a:	9001      	str	r0, [sp, #4]
 800f32c:	4633      	mov	r3, r6
 800f32e:	4629      	mov	r1, r5
 800f330:	480b      	ldr	r0, [pc, #44]	@ (800f360 <awe_modRMSNConstructor+0x44>)
 800f332:	f010 ff07 	bl	8020144 <BaseClassModule_Constructor>
 800f336:	b178      	cbz	r0, 800f358 <awe_modRMSNConstructor+0x3c>
 800f338:	6833      	ldr	r3, [r6, #0]
 800f33a:	4604      	mov	r4, r0
 800f33c:	6958      	ldr	r0, [r3, #20]
 800f33e:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800f342:	0080      	lsls	r0, r0, #2
 800f344:	462a      	mov	r2, r5
 800f346:	f240 2131 	movw	r1, #561	@ 0x231
 800f34a:	f010 f9a7 	bl	801f69c <awe_fwMalloc>
 800f34e:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800f350:	b110      	cbz	r0, 800f358 <awe_modRMSNConstructor+0x3c>
 800f352:	4620      	mov	r0, r4
 800f354:	b002      	add	sp, #8
 800f356:	bd70      	pop	{r4, r5, r6, pc}
 800f358:	2400      	movs	r4, #0
 800f35a:	4620      	mov	r0, r4
 800f35c:	b002      	add	sp, #8
 800f35e:	bd70      	pop	{r4, r5, r6, pc}
 800f360:	08034a94 	.word	0x08034a94

0800f364 <awe_modRMSNProcess>:
 800f364:	6902      	ldr	r2, [r0, #16]
 800f366:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f36a:	e9d2 3500 	ldrd	r3, r5, [r2]
 800f36e:	e9d3 1205 	ldrd	r1, r2, [r3, #20]
 800f372:	f3c1 0809 	ubfx	r8, r1, #0, #10
 800f376:	68ef      	ldr	r7, [r5, #12]
 800f378:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800f37a:	68dd      	ldr	r5, [r3, #12]
 800f37c:	ed2d 8b02 	vpush	{d8}
 800f380:	f3c2 0910 	ubfx	r9, r2, #0, #17
 800f384:	f1b8 0f00 	cmp.w	r8, #0
 800f388:	d026      	beq.n	800f3d8 <awe_modRMSNProcess+0x74>
 800f38a:	ee07 9a90 	vmov	s15, r9
 800f38e:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 800f392:	4606      	mov	r6, r0
 800f394:	eb04 0a88 	add.w	sl, r4, r8, lsl #2
 800f398:	464a      	mov	r2, r9
 800f39a:	4641      	mov	r1, r8
 800f39c:	4628      	mov	r0, r5
 800f39e:	f00f fe39 	bl	801f014 <awe_vecSumSquaredStride>
 800f3a2:	eec0 7a28 	vdiv.f32	s15, s0, s17
 800f3a6:	edd6 6a09 	vldr	s13, [r6, #36]	@ 0x24
 800f3aa:	ed94 0a00 	vldr	s0, [r4]
 800f3ae:	ed96 7a0a 	vldr	s14, [r6, #40]	@ 0x28
 800f3b2:	ee20 0a66 	vnmul.f32	s0, s0, s13
 800f3b6:	eea7 0a27 	vfma.f32	s0, s14, s15
 800f3ba:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f3be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3c2:	eca4 0a01 	vstmia	r4!, {s0}
 800f3c6:	eeb1 8ac0 	vsqrt.f32	s16, s0
 800f3ca:	d409      	bmi.n	800f3e0 <awe_modRMSNProcess+0x7c>
 800f3cc:	4554      	cmp	r4, sl
 800f3ce:	f105 0504 	add.w	r5, r5, #4
 800f3d2:	eca7 8a01 	vstmia	r7!, {s16}
 800f3d6:	d1df      	bne.n	800f398 <awe_modRMSNProcess+0x34>
 800f3d8:	ecbd 8b02 	vpop	{d8}
 800f3dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f3e0:	f01f fb12 	bl	802ea08 <sqrtf>
 800f3e4:	4554      	cmp	r4, sl
 800f3e6:	f105 0504 	add.w	r5, r5, #4
 800f3ea:	eca7 8a01 	vstmia	r7!, {s16}
 800f3ee:	d1d3      	bne.n	800f398 <awe_modRMSNProcess+0x34>
 800f3f0:	e7f2      	b.n	800f3d8 <awe_modRMSNProcess+0x74>
 800f3f2:	bf00      	nop

0800f3f4 <awe_modRMSNSet>:
 800f3f4:	05cb      	lsls	r3, r1, #23
 800f3f6:	d401      	bmi.n	800f3fc <awe_modRMSNSet+0x8>
 800f3f8:	2000      	movs	r0, #0
 800f3fa:	4770      	bx	lr
 800f3fc:	6903      	ldr	r3, [r0, #16]
 800f3fe:	edd0 6a08 	vldr	s13, [r0, #32]
 800f402:	681a      	ldr	r2, [r3, #0]
 800f404:	eddf 7a15 	vldr	s15, [pc, #84]	@ 800f45c <awe_modRMSNSet+0x68>
 800f408:	6993      	ldr	r3, [r2, #24]
 800f40a:	edd2 5a04 	vldr	s11, [r2, #16]
 800f40e:	ed9f 6a14 	vldr	s12, [pc, #80]	@ 800f460 <awe_modRMSNSet+0x6c>
 800f412:	b510      	push	{r4, lr}
 800f414:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f418:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800f41c:	ee07 3a90 	vmov	s15, r3
 800f420:	ed2d 8b02 	vpush	{d8}
 800f424:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 800f428:	ee88 7a26 	vdiv.f32	s14, s16, s13
 800f42c:	4604      	mov	r4, r0
 800f42e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f432:	ee27 7a06 	vmul.f32	s14, s14, s12
 800f436:	ee85 0aa7 	vdiv.f32	s0, s11, s15
 800f43a:	ee87 0a00 	vdiv.f32	s0, s14, s0
 800f43e:	f01f f9dd 	bl	802e7fc <expf>
 800f442:	2000      	movs	r0, #0
 800f444:	ee38 8a40 	vsub.f32	s16, s16, s0
 800f448:	eeb1 0a40 	vneg.f32	s0, s0
 800f44c:	ed84 8a0a 	vstr	s16, [r4, #40]	@ 0x28
 800f450:	ecbd 8b02 	vpop	{d8}
 800f454:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 800f458:	bd10      	pop	{r4, pc}
 800f45a:	bf00      	nop
 800f45c:	3a83126f 	.word	0x3a83126f
 800f460:	c0c90fdb 	.word	0xc0c90fdb

0800f464 <awe_modRoundProcess>:
 800f464:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f466:	6903      	ldr	r3, [r0, #16]
 800f468:	e9d3 2100 	ldrd	r2, r1, [r3]
 800f46c:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 800f470:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800f474:	f3c7 0709 	ubfx	r7, r7, #0, #10
 800f478:	fb07 f703 	mul.w	r7, r7, r3
 800f47c:	ed2d 8b02 	vpush	{d8}
 800f480:	68ce      	ldr	r6, [r1, #12]
 800f482:	68d5      	ldr	r5, [r2, #12]
 800f484:	b16f      	cbz	r7, 800f4a2 <awe_modRoundProcess+0x3e>
 800f486:	2400      	movs	r4, #0
 800f488:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 800f48c:	ecb5 0a01 	vldmia	r5!, {s0}
 800f490:	ee30 0a08 	vadd.f32	s0, s0, s16
 800f494:	f01f ff52 	bl	802f33c <floorf>
 800f498:	3401      	adds	r4, #1
 800f49a:	42a7      	cmp	r7, r4
 800f49c:	eca6 0a01 	vstmia	r6!, {s0}
 800f4a0:	d1f4      	bne.n	800f48c <awe_modRoundProcess+0x28>
 800f4a2:	ecbd 8b02 	vpop	{d8}
 800f4a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f4a8 <awe_modRouterConstructor>:
 800f4a8:	b570      	push	{r4, r5, r6, lr}
 800f4aa:	b082      	sub	sp, #8
 800f4ac:	4616      	mov	r6, r2
 800f4ae:	4605      	mov	r5, r0
 800f4b0:	9806      	ldr	r0, [sp, #24]
 800f4b2:	9300      	str	r3, [sp, #0]
 800f4b4:	460a      	mov	r2, r1
 800f4b6:	9001      	str	r0, [sp, #4]
 800f4b8:	4633      	mov	r3, r6
 800f4ba:	4629      	mov	r1, r5
 800f4bc:	480c      	ldr	r0, [pc, #48]	@ (800f4f0 <awe_modRouterConstructor+0x48>)
 800f4be:	f010 fe41 	bl	8020144 <BaseClassModule_Constructor>
 800f4c2:	b188      	cbz	r0, 800f4e8 <awe_modRouterConstructor+0x40>
 800f4c4:	7e03      	ldrb	r3, [r0, #24]
 800f4c6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800f4ca:	4604      	mov	r4, r0
 800f4cc:	6958      	ldr	r0, [r3, #20]
 800f4ce:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800f4d2:	462a      	mov	r2, r5
 800f4d4:	0080      	lsls	r0, r0, #2
 800f4d6:	f240 2131 	movw	r1, #561	@ 0x231
 800f4da:	f010 f8df 	bl	801f69c <awe_fwMalloc>
 800f4de:	6220      	str	r0, [r4, #32]
 800f4e0:	b110      	cbz	r0, 800f4e8 <awe_modRouterConstructor+0x40>
 800f4e2:	4620      	mov	r0, r4
 800f4e4:	b002      	add	sp, #8
 800f4e6:	bd70      	pop	{r4, r5, r6, pc}
 800f4e8:	2400      	movs	r4, #0
 800f4ea:	4620      	mov	r0, r4
 800f4ec:	b002      	add	sp, #8
 800f4ee:	bd70      	pop	{r4, r5, r6, pc}
 800f4f0:	08034ae4 	.word	0x08034ae4

0800f4f4 <awe_modRouterProcess>:
 800f4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4f8:	6904      	ldr	r4, [r0, #16]
 800f4fa:	7e05      	ldrb	r5, [r0, #24]
 800f4fc:	6823      	ldr	r3, [r4, #0]
 800f4fe:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
 800f502:	ed2d 8b02 	vpush	{d8}
 800f506:	4683      	mov	fp, r0
 800f508:	e9d3 0105 	ldrd	r0, r1, [r3, #20]
 800f50c:	6953      	ldr	r3, [r2, #20]
 800f50e:	b091      	sub	sp, #68	@ 0x44
 800f510:	f3c0 60c0 	ubfx	r0, r0, #27, #1
 800f514:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f518:	9405      	str	r4, [sp, #20]
 800f51a:	9502      	str	r5, [sp, #8]
 800f51c:	9007      	str	r0, [sp, #28]
 800f51e:	f3c1 0a10 	ubfx	sl, r1, #0, #17
 800f522:	9306      	str	r3, [sp, #24]
 800f524:	eb04 0985 	add.w	r9, r4, r5, lsl #2
 800f528:	b108      	cbz	r0, 800f52e <awe_modRouterProcess+0x3a>
 800f52a:	ea4f 0a6a 	mov.w	sl, sl, asr #1
 800f52e:	2b01      	cmp	r3, #1
 800f530:	f340 81e2 	ble.w	800f8f8 <awe_modRouterProcess+0x404>
 800f534:	1e9c      	subs	r4, r3, #2
 800f536:	0864      	lsrs	r4, r4, #1
 800f538:	1c61      	adds	r1, r4, #1
 800f53a:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f53c:	f04f 0800 	mov.w	r8, #0
 800f540:	00c9      	lsls	r1, r1, #3
 800f542:	005b      	lsls	r3, r3, #1
 800f544:	f8cd b020 	str.w	fp, [sp, #32]
 800f548:	ed9f 8aba 	vldr	s16, [pc, #744]	@ 800f834 <awe_modRouterProcess+0x340>
 800f54c:	9109      	str	r1, [sp, #36]	@ 0x24
 800f54e:	e9cd 880a 	strd	r8, r8, [sp, #40]	@ 0x28
 800f552:	9303      	str	r3, [sp, #12]
 800f554:	46cb      	mov	fp, r9
 800f556:	e064      	b.n	800f622 <awe_modRouterProcess+0x12e>
 800f558:	9b05      	ldr	r3, [sp, #20]
 800f55a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f55e:	695b      	ldr	r3, [r3, #20]
 800f560:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f564:	4298      	cmp	r0, r3
 800f566:	930a      	str	r3, [sp, #40]	@ 0x28
 800f568:	9b02      	ldr	r3, [sp, #8]
 800f56a:	bfb4      	ite	lt
 800f56c:	2400      	movlt	r4, #0
 800f56e:	2401      	movge	r4, #1
 800f570:	42ab      	cmp	r3, r5
 800f572:	d96a      	bls.n	800f64a <awe_modRouterProcess+0x156>
 800f574:	9b05      	ldr	r3, [sp, #20]
 800f576:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f57a:	695b      	ldr	r3, [r3, #20]
 800f57c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f580:	429f      	cmp	r7, r3
 800f582:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f584:	bfb4      	ite	lt
 800f586:	2300      	movlt	r3, #0
 800f588:	2301      	movge	r3, #1
 800f58a:	42a9      	cmp	r1, r5
 800f58c:	9304      	str	r3, [sp, #16]
 800f58e:	d060      	beq.n	800f652 <awe_modRouterProcess+0x15e>
 800f590:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800f594:	429f      	cmp	r7, r3
 800f596:	f000 8113 	beq.w	800f7c0 <awe_modRouterProcess+0x2cc>
 800f59a:	68d6      	ldr	r6, [r2, #12]
 800f59c:	2c00      	cmp	r4, #0
 800f59e:	f000 80d0 	beq.w	800f742 <awe_modRouterProcess+0x24e>
 800f5a2:	9b07      	ldr	r3, [sp, #28]
 800f5a4:	2b00      	cmp	r3, #0
 800f5a6:	f000 8112 	beq.w	800f7ce <awe_modRouterProcess+0x2da>
 800f5aa:	ea4f 0448 	mov.w	r4, r8, lsl #1
 800f5ae:	1930      	adds	r0, r6, r4
 800f5b0:	4652      	mov	r2, sl
 800f5b2:	eeb0 0a48 	vmov.f32	s0, s16
 800f5b6:	9903      	ldr	r1, [sp, #12]
 800f5b8:	f00b ffd4 	bl	801b564 <awe_vecFill>
 800f5bc:	1d20      	adds	r0, r4, #4
 800f5be:	4430      	add	r0, r6
 800f5c0:	4652      	mov	r2, sl
 800f5c2:	eeb0 0a48 	vmov.f32	s0, s16
 800f5c6:	9903      	ldr	r1, [sp, #12]
 800f5c8:	f00b ffcc 	bl	801b564 <awe_vecFill>
 800f5cc:	9b04      	ldr	r3, [sp, #16]
 800f5ce:	2b00      	cmp	r3, #0
 800f5d0:	f040 80de 	bne.w	800f790 <awe_modRouterProcess+0x29c>
 800f5d4:	9b05      	ldr	r3, [sp, #20]
 800f5d6:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
 800f5da:	f8db 3000 	ldr.w	r3, [fp]
 800f5de:	68d6      	ldr	r6, [r2, #12]
 800f5e0:	68dd      	ldr	r5, [r3, #12]
 800f5e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f5e4:	f8cd a000 	str.w	sl, [sp]
 800f5e8:	005c      	lsls	r4, r3, #1
 800f5ea:	00ff      	lsls	r7, r7, #3
 800f5ec:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f5f0:	eb05 0209 	add.w	r2, r5, r9
 800f5f4:	19f0      	adds	r0, r6, r7
 800f5f6:	4621      	mov	r1, r4
 800f5f8:	9b03      	ldr	r3, [sp, #12]
 800f5fa:	f00b fd33 	bl	801b064 <awe_vecCopy32>
 800f5fe:	f109 0204 	add.w	r2, r9, #4
 800f602:	1d38      	adds	r0, r7, #4
 800f604:	442a      	add	r2, r5
 800f606:	4430      	add	r0, r6
 800f608:	4621      	mov	r1, r4
 800f60a:	f8cd a000 	str.w	sl, [sp]
 800f60e:	9b03      	ldr	r3, [sp, #12]
 800f610:	f00b fd28 	bl	801b064 <awe_vecCopy32>
 800f614:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f616:	f108 0808 	add.w	r8, r8, #8
 800f61a:	4543      	cmp	r3, r8
 800f61c:	d03f      	beq.n	800f69e <awe_modRouterProcess+0x1aa>
 800f61e:	f8db 2000 	ldr.w	r2, [fp]
 800f622:	9b08      	ldr	r3, [sp, #32]
 800f624:	6a1b      	ldr	r3, [r3, #32]
 800f626:	f108 0904 	add.w	r9, r8, #4
 800f62a:	f853 0008 	ldr.w	r0, [r3, r8]
 800f62e:	f853 7009 	ldr.w	r7, [r3, r9]
 800f632:	9b02      	ldr	r3, [sp, #8]
 800f634:	1401      	asrs	r1, r0, #16
 800f636:	428b      	cmp	r3, r1
 800f638:	ea4f 4527 	mov.w	r5, r7, asr #16
 800f63c:	b280      	uxth	r0, r0
 800f63e:	b2bf      	uxth	r7, r7
 800f640:	d88a      	bhi.n	800f558 <awe_modRouterProcess+0x64>
 800f642:	42ab      	cmp	r3, r5
 800f644:	f04f 0401 	mov.w	r4, #1
 800f648:	d894      	bhi.n	800f574 <awe_modRouterProcess+0x80>
 800f64a:	2301      	movs	r3, #1
 800f64c:	42a9      	cmp	r1, r5
 800f64e:	9304      	str	r3, [sp, #16]
 800f650:	d19e      	bne.n	800f590 <awe_modRouterProcess+0x9c>
 800f652:	1c43      	adds	r3, r0, #1
 800f654:	42bb      	cmp	r3, r7
 800f656:	d19b      	bne.n	800f590 <awe_modRouterProcess+0x9c>
 800f658:	9b04      	ldr	r3, [sp, #16]
 800f65a:	429c      	cmp	r4, r3
 800f65c:	d198      	bne.n	800f590 <awe_modRouterProcess+0x9c>
 800f65e:	68d5      	ldr	r5, [r2, #12]
 800f660:	2c00      	cmp	r4, #0
 800f662:	f000 8100 	beq.w	800f866 <awe_modRouterProcess+0x372>
 800f666:	9b07      	ldr	r3, [sp, #28]
 800f668:	2b00      	cmp	r3, #0
 800f66a:	f000 813c 	beq.w	800f8e6 <awe_modRouterProcess+0x3f2>
 800f66e:	9e03      	ldr	r6, [sp, #12]
 800f670:	ea4f 0448 	mov.w	r4, r8, lsl #1
 800f674:	1928      	adds	r0, r5, r4
 800f676:	4652      	mov	r2, sl
 800f678:	eeb0 0a48 	vmov.f32	s0, s16
 800f67c:	4631      	mov	r1, r6
 800f67e:	f00b ffe5 	bl	801b64c <awe_vecFill_2ch>
 800f682:	f104 0008 	add.w	r0, r4, #8
 800f686:	4428      	add	r0, r5
 800f688:	4652      	mov	r2, sl
 800f68a:	eeb0 0a48 	vmov.f32	s0, s16
 800f68e:	4631      	mov	r1, r6
 800f690:	f00b ffdc 	bl	801b64c <awe_vecFill_2ch>
 800f694:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f696:	f108 0808 	add.w	r8, r8, #8
 800f69a:	4543      	cmp	r3, r8
 800f69c:	d1bf      	bne.n	800f61e <awe_modRouterProcess+0x12a>
 800f69e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f6a0:	46d9      	mov	r9, fp
 800f6a2:	005c      	lsls	r4, r3, #1
 800f6a4:	f8dd b020 	ldr.w	fp, [sp, #32]
 800f6a8:	9b06      	ldr	r3, [sp, #24]
 800f6aa:	429c      	cmp	r4, r3
 800f6ac:	da44      	bge.n	800f738 <awe_modRouterProcess+0x244>
 800f6ae:	005f      	lsls	r7, r3, #1
 800f6b0:	00db      	lsls	r3, r3, #3
 800f6b2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800f6b6:	ed9f 8a5f 	vldr	s16, [pc, #380]	@ 800f834 <awe_modRouterProcess+0x340>
 800f6ba:	00a5      	lsls	r5, r4, #2
 800f6bc:	00e4      	lsls	r4, r4, #3
 800f6be:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f6c2:	f8d9 2000 	ldr.w	r2, [r9]
 800f6c6:	595b      	ldr	r3, [r3, r5]
 800f6c8:	68d6      	ldr	r6, [r2, #12]
 800f6ca:	fa1f fc83 	uxth.w	ip, r3
 800f6ce:	141a      	asrs	r2, r3, #16
 800f6d0:	9b02      	ldr	r3, [sp, #8]
 800f6d2:	4293      	cmp	r3, r2
 800f6d4:	f240 80b0 	bls.w	800f838 <awe_modRouterProcess+0x344>
 800f6d8:	9b05      	ldr	r3, [sp, #20]
 800f6da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f6de:	6943      	ldr	r3, [r0, #20]
 800f6e0:	f3c3 0e09 	ubfx	lr, r3, #0, #10
 800f6e4:	45f4      	cmp	ip, lr
 800f6e6:	f280 80a7 	bge.w	800f838 <awe_modRouterProcess+0x344>
 800f6ea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 800f6ee:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800f6f2:	9308      	str	r3, [sp, #32]
 800f6f4:	461f      	mov	r7, r3
 800f6f6:	eb08 0007 	add.w	r0, r8, r7
 800f6fa:	9f07      	ldr	r7, [sp, #28]
 800f6fc:	9b03      	ldr	r3, [sp, #12]
 800f6fe:	ea4f 024e 	mov.w	r2, lr, lsl #1
 800f702:	4611      	mov	r1, r2
 800f704:	9209      	str	r2, [sp, #36]	@ 0x24
 800f706:	1932      	adds	r2, r6, r4
 800f708:	2f00      	cmp	r7, #0
 800f70a:	f000 80d7 	beq.w	800f8bc <awe_modRouterProcess+0x3c8>
 800f70e:	f8cd a000 	str.w	sl, [sp]
 800f712:	f00b fca7 	bl	801b064 <awe_vecCopy32>
 800f716:	9808      	ldr	r0, [sp, #32]
 800f718:	9b03      	ldr	r3, [sp, #12]
 800f71a:	f8cd a000 	str.w	sl, [sp]
 800f71e:	1d22      	adds	r2, r4, #4
 800f720:	3004      	adds	r0, #4
 800f722:	4440      	add	r0, r8
 800f724:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800f726:	4432      	add	r2, r6
 800f728:	f00b fc9c 	bl	801b064 <awe_vecCopy32>
 800f72c:	9b04      	ldr	r3, [sp, #16]
 800f72e:	3408      	adds	r4, #8
 800f730:	42a3      	cmp	r3, r4
 800f732:	f105 0504 	add.w	r5, r5, #4
 800f736:	d1c2      	bne.n	800f6be <awe_modRouterProcess+0x1ca>
 800f738:	b011      	add	sp, #68	@ 0x44
 800f73a:	ecbd 8b02 	vpop	{d8}
 800f73e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f742:	9b05      	ldr	r3, [sp, #20]
 800f744:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f748:	68dc      	ldr	r4, [r3, #12]
 800f74a:	9b07      	ldr	r3, [sp, #28]
 800f74c:	2b00      	cmp	r3, #0
 800f74e:	d059      	beq.n	800f804 <awe_modRouterProcess+0x310>
 800f750:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f752:	f8cd a000 	str.w	sl, [sp]
 800f756:	005a      	lsls	r2, r3, #1
 800f758:	00c1      	lsls	r1, r0, #3
 800f75a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 800f75e:	1860      	adds	r0, r4, r1
 800f760:	910c      	str	r1, [sp, #48]	@ 0x30
 800f762:	920d      	str	r2, [sp, #52]	@ 0x34
 800f764:	4611      	mov	r1, r2
 800f766:	930e      	str	r3, [sp, #56]	@ 0x38
 800f768:	18f2      	adds	r2, r6, r3
 800f76a:	9b03      	ldr	r3, [sp, #12]
 800f76c:	f00b fc7a 	bl	801b064 <awe_vecCopy32>
 800f770:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f772:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f774:	9b03      	ldr	r3, [sp, #12]
 800f776:	f8cd a000 	str.w	sl, [sp]
 800f77a:	1d08      	adds	r0, r1, #4
 800f77c:	3204      	adds	r2, #4
 800f77e:	4432      	add	r2, r6
 800f780:	4420      	add	r0, r4
 800f782:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800f784:	f00b fc6e 	bl	801b064 <awe_vecCopy32>
 800f788:	9b04      	ldr	r3, [sp, #16]
 800f78a:	2b00      	cmp	r3, #0
 800f78c:	f43f af22 	beq.w	800f5d4 <awe_modRouterProcess+0xe0>
 800f790:	f8db 3000 	ldr.w	r3, [fp]
 800f794:	9d03      	ldr	r5, [sp, #12]
 800f796:	68dc      	ldr	r4, [r3, #12]
 800f798:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f79c:	eb04 0009 	add.w	r0, r4, r9
 800f7a0:	4652      	mov	r2, sl
 800f7a2:	eeb0 0a48 	vmov.f32	s0, s16
 800f7a6:	4629      	mov	r1, r5
 800f7a8:	f00b fedc 	bl	801b564 <awe_vecFill>
 800f7ac:	f109 0004 	add.w	r0, r9, #4
 800f7b0:	4420      	add	r0, r4
 800f7b2:	4652      	mov	r2, sl
 800f7b4:	eeb0 0a48 	vmov.f32	s0, s16
 800f7b8:	4629      	mov	r1, r5
 800f7ba:	f00b fed3 	bl	801b564 <awe_vecFill>
 800f7be:	e729      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f7c0:	42b8      	cmp	r0, r7
 800f7c2:	f47f aeea 	bne.w	800f59a <awe_modRouterProcess+0xa6>
 800f7c6:	68d5      	ldr	r5, [r2, #12]
 800f7c8:	2c00      	cmp	r4, #0
 800f7ca:	d04c      	beq.n	800f866 <awe_modRouterProcess+0x372>
 800f7cc:	e74b      	b.n	800f666 <awe_modRouterProcess+0x172>
 800f7ce:	eb06 0008 	add.w	r0, r6, r8
 800f7d2:	4652      	mov	r2, sl
 800f7d4:	eeb0 0a48 	vmov.f32	s0, s16
 800f7d8:	9906      	ldr	r1, [sp, #24]
 800f7da:	f00b fec3 	bl	801b564 <awe_vecFill>
 800f7de:	9b04      	ldr	r3, [sp, #16]
 800f7e0:	b9eb      	cbnz	r3, 800f81e <awe_modRouterProcess+0x32a>
 800f7e2:	9b05      	ldr	r3, [sp, #20]
 800f7e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800f7e6:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
 800f7ea:	f8db 3000 	ldr.w	r3, [fp]
 800f7ee:	68d0      	ldr	r0, [r2, #12]
 800f7f0:	68da      	ldr	r2, [r3, #12]
 800f7f2:	f8cd a000 	str.w	sl, [sp]
 800f7f6:	444a      	add	r2, r9
 800f7f8:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 800f7fc:	9b06      	ldr	r3, [sp, #24]
 800f7fe:	f00b fc31 	bl	801b064 <awe_vecCopy32>
 800f802:	e707      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f804:	9b06      	ldr	r3, [sp, #24]
 800f806:	f8cd a000 	str.w	sl, [sp]
 800f80a:	eb06 0208 	add.w	r2, r6, r8
 800f80e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800f812:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800f814:	f00b fc26 	bl	801b064 <awe_vecCopy32>
 800f818:	9b04      	ldr	r3, [sp, #16]
 800f81a:	2b00      	cmp	r3, #0
 800f81c:	d0e1      	beq.n	800f7e2 <awe_modRouterProcess+0x2ee>
 800f81e:	f8db 3000 	ldr.w	r3, [fp]
 800f822:	9906      	ldr	r1, [sp, #24]
 800f824:	68d8      	ldr	r0, [r3, #12]
 800f826:	4652      	mov	r2, sl
 800f828:	4448      	add	r0, r9
 800f82a:	eeb0 0a48 	vmov.f32	s0, s16
 800f82e:	f00b fe99 	bl	801b564 <awe_vecFill>
 800f832:	e6ef      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f834:	00000000 	.word	0x00000000
 800f838:	9b07      	ldr	r3, [sp, #28]
 800f83a:	9903      	ldr	r1, [sp, #12]
 800f83c:	4652      	mov	r2, sl
 800f83e:	eeb0 0a48 	vmov.f32	s0, s16
 800f842:	1930      	adds	r0, r6, r4
 800f844:	bb7b      	cbnz	r3, 800f8a6 <awe_modRouterProcess+0x3b2>
 800f846:	9906      	ldr	r1, [sp, #24]
 800f848:	1970      	adds	r0, r6, r5
 800f84a:	f00b fe8b 	bl	801b564 <awe_vecFill>
 800f84e:	9b04      	ldr	r3, [sp, #16]
 800f850:	3408      	adds	r4, #8
 800f852:	42a3      	cmp	r3, r4
 800f854:	f105 0504 	add.w	r5, r5, #4
 800f858:	f47f af31 	bne.w	800f6be <awe_modRouterProcess+0x1ca>
 800f85c:	b011      	add	sp, #68	@ 0x44
 800f85e:	ecbd 8b02 	vpop	{d8}
 800f862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f866:	9b05      	ldr	r3, [sp, #20]
 800f868:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f86c:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800f870:	9b07      	ldr	r3, [sp, #28]
 800f872:	b36b      	cbz	r3, 800f8d0 <awe_modRouterProcess+0x3dc>
 800f874:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f876:	f8cd a000 	str.w	sl, [sp]
 800f87a:	005e      	lsls	r6, r3, #1
 800f87c:	ea4f 0448 	mov.w	r4, r8, lsl #1
 800f880:	eb09 00c0 	add.w	r0, r9, r0, lsl #3
 800f884:	4631      	mov	r1, r6
 800f886:	192a      	adds	r2, r5, r4
 800f888:	9b03      	ldr	r3, [sp, #12]
 800f88a:	f00b fcdf 	bl	801b24c <awe_vecCopy_2ch>
 800f88e:	f104 0208 	add.w	r2, r4, #8
 800f892:	442a      	add	r2, r5
 800f894:	4631      	mov	r1, r6
 800f896:	f8cd a000 	str.w	sl, [sp]
 800f89a:	eb09 00c7 	add.w	r0, r9, r7, lsl #3
 800f89e:	9b03      	ldr	r3, [sp, #12]
 800f8a0:	f00b fcd4 	bl	801b24c <awe_vecCopy_2ch>
 800f8a4:	e6b6      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f8a6:	f00b fe5d 	bl	801b564 <awe_vecFill>
 800f8aa:	1d20      	adds	r0, r4, #4
 800f8ac:	4430      	add	r0, r6
 800f8ae:	4652      	mov	r2, sl
 800f8b0:	eeb0 0a48 	vmov.f32	s0, s16
 800f8b4:	9903      	ldr	r1, [sp, #12]
 800f8b6:	f00b fe55 	bl	801b564 <awe_vecFill>
 800f8ba:	e7c8      	b.n	800f84e <awe_modRouterProcess+0x35a>
 800f8bc:	f8cd a000 	str.w	sl, [sp]
 800f8c0:	1972      	adds	r2, r6, r5
 800f8c2:	4671      	mov	r1, lr
 800f8c4:	eb08 008c 	add.w	r0, r8, ip, lsl #2
 800f8c8:	9b06      	ldr	r3, [sp, #24]
 800f8ca:	f00b fbcb 	bl	801b064 <awe_vecCopy32>
 800f8ce:	e7be      	b.n	800f84e <awe_modRouterProcess+0x35a>
 800f8d0:	f8cd a000 	str.w	sl, [sp]
 800f8d4:	eb05 0208 	add.w	r2, r5, r8
 800f8d8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f8dc:	9b06      	ldr	r3, [sp, #24]
 800f8de:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800f8e0:	f00b fcb4 	bl	801b24c <awe_vecCopy_2ch>
 800f8e4:	e696      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f8e6:	eb05 0008 	add.w	r0, r5, r8
 800f8ea:	4652      	mov	r2, sl
 800f8ec:	eeb0 0a48 	vmov.f32	s0, s16
 800f8f0:	9906      	ldr	r1, [sp, #24]
 800f8f2:	f00b feab 	bl	801b64c <awe_vecFill_2ch>
 800f8f6:	e68d      	b.n	800f614 <awe_modRouterProcess+0x120>
 800f8f8:	2400      	movs	r4, #0
 800f8fa:	e6d6      	b.n	800f6aa <awe_modRouterProcess+0x1b6>

0800f8fc <awe_modRouterSmoothedConstructor>:
 800f8fc:	b570      	push	{r4, r5, r6, lr}
 800f8fe:	b082      	sub	sp, #8
 800f900:	4616      	mov	r6, r2
 800f902:	4605      	mov	r5, r0
 800f904:	9806      	ldr	r0, [sp, #24]
 800f906:	9300      	str	r3, [sp, #0]
 800f908:	460a      	mov	r2, r1
 800f90a:	9001      	str	r0, [sp, #4]
 800f90c:	4633      	mov	r3, r6
 800f90e:	4629      	mov	r1, r5
 800f910:	481a      	ldr	r0, [pc, #104]	@ (800f97c <awe_modRouterSmoothedConstructor+0x80>)
 800f912:	f010 fc17 	bl	8020144 <BaseClassModule_Constructor>
 800f916:	b368      	cbz	r0, 800f974 <awe_modRouterSmoothedConstructor+0x78>
 800f918:	7e03      	ldrb	r3, [r0, #24]
 800f91a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800f91e:	4604      	mov	r4, r0
 800f920:	6958      	ldr	r0, [r3, #20]
 800f922:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800f926:	0080      	lsls	r0, r0, #2
 800f928:	462a      	mov	r2, r5
 800f92a:	f240 2131 	movw	r1, #561	@ 0x231
 800f92e:	f00f feb5 	bl	801f69c <awe_fwMalloc>
 800f932:	62a0      	str	r0, [r4, #40]	@ 0x28
 800f934:	b1f0      	cbz	r0, 800f974 <awe_modRouterSmoothedConstructor+0x78>
 800f936:	7e23      	ldrb	r3, [r4, #24]
 800f938:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800f93c:	6958      	ldr	r0, [r3, #20]
 800f93e:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800f942:	0080      	lsls	r0, r0, #2
 800f944:	462a      	mov	r2, r5
 800f946:	f240 2131 	movw	r1, #561	@ 0x231
 800f94a:	f00f fea7 	bl	801f69c <awe_fwMalloc>
 800f94e:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800f950:	b180      	cbz	r0, 800f974 <awe_modRouterSmoothedConstructor+0x78>
 800f952:	7e23      	ldrb	r3, [r4, #24]
 800f954:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800f958:	6958      	ldr	r0, [r3, #20]
 800f95a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800f95e:	462a      	mov	r2, r5
 800f960:	0080      	lsls	r0, r0, #2
 800f962:	f240 2131 	movw	r1, #561	@ 0x231
 800f966:	f00f fe99 	bl	801f69c <awe_fwMalloc>
 800f96a:	6320      	str	r0, [r4, #48]	@ 0x30
 800f96c:	b110      	cbz	r0, 800f974 <awe_modRouterSmoothedConstructor+0x78>
 800f96e:	4620      	mov	r0, r4
 800f970:	b002      	add	sp, #8
 800f972:	bd70      	pop	{r4, r5, r6, pc}
 800f974:	2400      	movs	r4, #0
 800f976:	4620      	mov	r0, r4
 800f978:	b002      	add	sp, #8
 800f97a:	bd70      	pop	{r4, r5, r6, pc}
 800f97c:	08034b0c 	.word	0x08034b0c

0800f980 <awe_modRouterSmoothedProcess>:
 800f980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f984:	f8d0 8010 	ldr.w	r8, [r0, #16]
 800f988:	f890 a018 	ldrb.w	sl, [r0, #24]
 800f98c:	f8d8 3000 	ldr.w	r3, [r8]
 800f990:	f858 202a 	ldr.w	r2, [r8, sl, lsl #2]
 800f994:	ed2d 8b02 	vpush	{d8}
 800f998:	e9d3 4105 	ldrd	r4, r1, [r3, #20]
 800f99c:	6953      	ldr	r3, [r2, #20]
 800f99e:	b08d      	sub	sp, #52	@ 0x34
 800f9a0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f9a4:	f3c4 64c0 	ubfx	r4, r4, #27, #1
 800f9a8:	9307      	str	r3, [sp, #28]
 800f9aa:	eb08 038a 	add.w	r3, r8, sl, lsl #2
 800f9ae:	9403      	str	r4, [sp, #12]
 800f9b0:	f3c1 0910 	ubfx	r9, r1, #0, #17
 800f9b4:	9305      	str	r3, [sp, #20]
 800f9b6:	b10c      	cbz	r4, 800f9bc <awe_modRouterSmoothedProcess+0x3c>
 800f9b8:	ea4f 0969 	mov.w	r9, r9, asr #1
 800f9bc:	9b07      	ldr	r3, [sp, #28]
 800f9be:	2b00      	cmp	r3, #0
 800f9c0:	d05e      	beq.n	800fa80 <awe_modRouterSmoothedProcess+0x100>
 800f9c2:	0059      	lsls	r1, r3, #1
 800f9c4:	009b      	lsls	r3, r3, #2
 800f9c6:	4605      	mov	r5, r0
 800f9c8:	ed9f 8a7b 	vldr	s16, [pc, #492]	@ 800fbb8 <awe_modRouterSmoothedProcess+0x238>
 800f9cc:	eddf 8a7b 	vldr	s17, [pc, #492]	@ 800fbbc <awe_modRouterSmoothedProcess+0x23c>
 800f9d0:	9106      	str	r1, [sp, #24]
 800f9d2:	9304      	str	r3, [sp, #16]
 800f9d4:	2400      	movs	r4, #0
 800f9d6:	f8cd 8020 	str.w	r8, [sp, #32]
 800f9da:	e02d      	b.n	800fa38 <awe_modRouterSmoothedProcess+0xb8>
 800f9dc:	9808      	ldr	r0, [sp, #32]
 800f9de:	f850 6021 	ldr.w	r6, [r0, r1, lsl #2]
 800f9e2:	6971      	ldr	r1, [r6, #20]
 800f9e4:	b298      	uxth	r0, r3
 800f9e6:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800f9ea:	4281      	cmp	r1, r0
 800f9ec:	dc55      	bgt.n	800fa9a <awe_modRouterSmoothedProcess+0x11a>
 800f9ee:	4293      	cmp	r3, r2
 800f9f0:	d02c      	beq.n	800fa4c <awe_modRouterSmoothedProcess+0xcc>
 800f9f2:	9b03      	ldr	r3, [sp, #12]
 800f9f4:	2b00      	cmp	r3, #0
 800f9f6:	d048      	beq.n	800fa8a <awe_modRouterSmoothedProcess+0x10a>
 800f9f8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800f9fc:	0066      	lsls	r6, r4, #1
 800f9fe:	19b8      	adds	r0, r7, r6
 800fa00:	464a      	mov	r2, r9
 800fa02:	eeb0 0a48 	vmov.f32	s0, s16
 800fa06:	4641      	mov	r1, r8
 800fa08:	f00b fdac 	bl	801b564 <awe_vecFill>
 800fa0c:	1d30      	adds	r0, r6, #4
 800fa0e:	4438      	add	r0, r7
 800fa10:	464a      	mov	r2, r9
 800fa12:	eeb0 0a48 	vmov.f32	s0, s16
 800fa16:	4641      	mov	r1, r8
 800fa18:	f00b fda4 	bl	801b564 <awe_vecFill>
 800fa1c:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 800fa20:	c90e      	ldmia	r1, {r1, r2, r3}
 800fa22:	5909      	ldr	r1, [r1, r4]
 800fa24:	4423      	add	r3, r4
 800fa26:	ed83 8a00 	vstr	s16, [r3]
 800fa2a:	5111      	str	r1, [r2, r4]
 800fa2c:	9b04      	ldr	r3, [sp, #16]
 800fa2e:	3404      	adds	r4, #4
 800fa30:	42a3      	cmp	r3, r4
 800fa32:	d025      	beq.n	800fa80 <awe_modRouterSmoothedProcess+0x100>
 800fa34:	9b05      	ldr	r3, [sp, #20]
 800fa36:	681a      	ldr	r2, [r3, #0]
 800fa38:	68d7      	ldr	r7, [r2, #12]
 800fa3a:	e9d5 130a 	ldrd	r1, r3, [r5, #40]	@ 0x28
 800fa3e:	591b      	ldr	r3, [r3, r4]
 800fa40:	590a      	ldr	r2, [r1, r4]
 800fa42:	1419      	asrs	r1, r3, #16
 800fa44:	458a      	cmp	sl, r1
 800fa46:	d8c9      	bhi.n	800f9dc <awe_modRouterSmoothedProcess+0x5c>
 800fa48:	4293      	cmp	r3, r2
 800fa4a:	d1d2      	bne.n	800f9f2 <awe_modRouterSmoothedProcess+0x72>
 800fa4c:	9b03      	ldr	r3, [sp, #12]
 800fa4e:	2b00      	cmp	r3, #0
 800fa50:	f000 80a9 	beq.w	800fba6 <awe_modRouterSmoothedProcess+0x226>
 800fa54:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800fa58:	0066      	lsls	r6, r4, #1
 800fa5a:	19b8      	adds	r0, r7, r6
 800fa5c:	464a      	mov	r2, r9
 800fa5e:	eeb0 0a48 	vmov.f32	s0, s16
 800fa62:	4641      	mov	r1, r8
 800fa64:	f00b fd7e 	bl	801b564 <awe_vecFill>
 800fa68:	1d30      	adds	r0, r6, #4
 800fa6a:	4438      	add	r0, r7
 800fa6c:	464a      	mov	r2, r9
 800fa6e:	eeb0 0a48 	vmov.f32	s0, s16
 800fa72:	4641      	mov	r1, r8
 800fa74:	f00b fd76 	bl	801b564 <awe_vecFill>
 800fa78:	9b04      	ldr	r3, [sp, #16]
 800fa7a:	3404      	adds	r4, #4
 800fa7c:	42a3      	cmp	r3, r4
 800fa7e:	d1d9      	bne.n	800fa34 <awe_modRouterSmoothedProcess+0xb4>
 800fa80:	b00d      	add	sp, #52	@ 0x34
 800fa82:	ecbd 8b02 	vpop	{d8}
 800fa86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa8a:	1938      	adds	r0, r7, r4
 800fa8c:	464a      	mov	r2, r9
 800fa8e:	eeb0 0a48 	vmov.f32	s0, s16
 800fa92:	9907      	ldr	r1, [sp, #28]
 800fa94:	f00b fd66 	bl	801b564 <awe_vecFill>
 800fa98:	e7c0      	b.n	800fa1c <awe_modRouterSmoothedProcess+0x9c>
 800fa9a:	f8d6 800c 	ldr.w	r8, [r6, #12]
 800fa9e:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
 800faa0:	edd5 0a09 	vldr	s1, [r5, #36]	@ 0x24
 800faa4:	4293      	cmp	r3, r2
 800faa6:	4426      	add	r6, r4
 800faa8:	d03a      	beq.n	800fb20 <awe_modRouterSmoothedProcess+0x1a0>
 800faaa:	9b03      	ldr	r3, [sp, #12]
 800faac:	2b00      	cmp	r3, #0
 800faae:	d064      	beq.n	800fb7a <awe_modRouterSmoothedProcess+0x1fa>
 800fab0:	f8d6 c000 	ldr.w	ip, [r6]
 800fab4:	f8cd 9004 	str.w	r9, [sp, #4]
 800fab8:	00c3      	lsls	r3, r0, #3
 800faba:	004e      	lsls	r6, r1, #1
 800fabc:	ea4f 0b44 	mov.w	fp, r4, lsl #1
 800fac0:	aa0b      	add	r2, sp, #44	@ 0x2c
 800fac2:	eb08 0003 	add.w	r0, r8, r3
 800fac6:	9200      	str	r2, [sp, #0]
 800fac8:	4631      	mov	r1, r6
 800faca:	9309      	str	r3, [sp, #36]	@ 0x24
 800facc:	eb07 020b 	add.w	r2, r7, fp
 800fad0:	eeb0 0a48 	vmov.f32	s0, s16
 800fad4:	9b06      	ldr	r3, [sp, #24]
 800fad6:	f8cd c02c 	str.w	ip, [sp, #44]	@ 0x2c
 800fada:	f00e f93f 	bl	801dd5c <awe_vecScaleSmooth>
 800fade:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800fae0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800fae2:	edd5 0a09 	vldr	s1, [r5, #36]	@ 0x24
 800fae6:	f8cd 9004 	str.w	r9, [sp, #4]
 800faea:	1d08      	adds	r0, r1, #4
 800faec:	4423      	add	r3, r4
 800faee:	f10b 0204 	add.w	r2, fp, #4
 800faf2:	9300      	str	r3, [sp, #0]
 800faf4:	443a      	add	r2, r7
 800faf6:	4440      	add	r0, r8
 800faf8:	4631      	mov	r1, r6
 800fafa:	eeb0 0a48 	vmov.f32	s0, s16
 800fafe:	9b06      	ldr	r3, [sp, #24]
 800fb00:	f00e f92c 	bl	801dd5c <awe_vecScaleSmooth>
 800fb04:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800fb06:	4423      	add	r3, r4
 800fb08:	edd3 7a00 	vldr	s15, [r3]
 800fb0c:	eef4 7ae8 	vcmpe.f32	s15, s17
 800fb10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb14:	d58a      	bpl.n	800fa2c <awe_modRouterSmoothedProcess+0xac>
 800fb16:	e9d5 230a 	ldrd	r2, r3, [r5, #40]	@ 0x28
 800fb1a:	5912      	ldr	r2, [r2, r4]
 800fb1c:	511a      	str	r2, [r3, r4]
 800fb1e:	e785      	b.n	800fa2c <awe_modRouterSmoothedProcess+0xac>
 800fb20:	9b03      	ldr	r3, [sp, #12]
 800fb22:	b3ab      	cbz	r3, 800fb90 <awe_modRouterSmoothedProcess+0x210>
 800fb24:	f8d6 c000 	ldr.w	ip, [r6]
 800fb28:	f8cd 9004 	str.w	r9, [sp, #4]
 800fb2c:	00c3      	lsls	r3, r0, #3
 800fb2e:	004e      	lsls	r6, r1, #1
 800fb30:	ea4f 0b44 	mov.w	fp, r4, lsl #1
 800fb34:	aa0b      	add	r2, sp, #44	@ 0x2c
 800fb36:	eb08 0003 	add.w	r0, r8, r3
 800fb3a:	9200      	str	r2, [sp, #0]
 800fb3c:	4631      	mov	r1, r6
 800fb3e:	9309      	str	r3, [sp, #36]	@ 0x24
 800fb40:	eb07 020b 	add.w	r2, r7, fp
 800fb44:	9b06      	ldr	r3, [sp, #24]
 800fb46:	f8cd c02c 	str.w	ip, [sp, #44]	@ 0x2c
 800fb4a:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800fb4e:	f00e f905 	bl	801dd5c <awe_vecScaleSmooth>
 800fb52:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800fb54:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800fb56:	edd5 0a09 	vldr	s1, [r5, #36]	@ 0x24
 800fb5a:	f8cd 9004 	str.w	r9, [sp, #4]
 800fb5e:	4423      	add	r3, r4
 800fb60:	f10b 0204 	add.w	r2, fp, #4
 800fb64:	1d08      	adds	r0, r1, #4
 800fb66:	9300      	str	r3, [sp, #0]
 800fb68:	443a      	add	r2, r7
 800fb6a:	4440      	add	r0, r8
 800fb6c:	4631      	mov	r1, r6
 800fb6e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800fb72:	9b06      	ldr	r3, [sp, #24]
 800fb74:	f00e f8f2 	bl	801dd5c <awe_vecScaleSmooth>
 800fb78:	e758      	b.n	800fa2c <awe_modRouterSmoothedProcess+0xac>
 800fb7a:	e9cd 6900 	strd	r6, r9, [sp]
 800fb7e:	193a      	adds	r2, r7, r4
 800fb80:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800fb84:	eeb0 0a48 	vmov.f32	s0, s16
 800fb88:	9b07      	ldr	r3, [sp, #28]
 800fb8a:	f00e f8e7 	bl	801dd5c <awe_vecScaleSmooth>
 800fb8e:	e7b9      	b.n	800fb04 <awe_modRouterSmoothedProcess+0x184>
 800fb90:	e9cd 6900 	strd	r6, r9, [sp]
 800fb94:	193a      	adds	r2, r7, r4
 800fb96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800fb9a:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800fb9e:	9b07      	ldr	r3, [sp, #28]
 800fba0:	f00e f8dc 	bl	801dd5c <awe_vecScaleSmooth>
 800fba4:	e742      	b.n	800fa2c <awe_modRouterSmoothedProcess+0xac>
 800fba6:	1938      	adds	r0, r7, r4
 800fba8:	464a      	mov	r2, r9
 800fbaa:	eeb0 0a48 	vmov.f32	s0, s16
 800fbae:	9907      	ldr	r1, [sp, #28]
 800fbb0:	f00b fcd8 	bl	801b564 <awe_vecFill>
 800fbb4:	e73a      	b.n	800fa2c <awe_modRouterSmoothedProcess+0xac>
 800fbb6:	bf00      	nop
 800fbb8:	00000000 	.word	0x00000000
 800fbbc:	3727c5ac 	.word	0x3727c5ac

0800fbc0 <awe_modRouterSmoothedSet>:
 800fbc0:	05cb      	lsls	r3, r1, #23
 800fbc2:	d401      	bmi.n	800fbc8 <awe_modRouterSmoothedSet+0x8>
 800fbc4:	2000      	movs	r0, #0
 800fbc6:	4770      	bx	lr
 800fbc8:	6903      	ldr	r3, [r0, #16]
 800fbca:	ed90 0a08 	vldr	s0, [r0, #32]
 800fbce:	681b      	ldr	r3, [r3, #0]
 800fbd0:	b510      	push	{r4, lr}
 800fbd2:	edd3 0a04 	vldr	s1, [r3, #16]
 800fbd6:	4604      	mov	r4, r0
 800fbd8:	2001      	movs	r0, #1
 800fbda:	f013 fee1 	bl	80239a0 <design_smoother>
 800fbde:	2000      	movs	r0, #0
 800fbe0:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 800fbe4:	bd10      	pop	{r4, pc}
 800fbe6:	bf00      	nop

0800fbe8 <awe_modScaleOffsetProcess>:
 800fbe8:	6903      	ldr	r3, [r0, #16]
 800fbea:	edd0 0a09 	vldr	s1, [r0, #36]	@ 0x24
 800fbee:	ed90 0a08 	vldr	s0, [r0, #32]
 800fbf2:	e9d3 0200 	ldrd	r0, r2, [r3]
 800fbf6:	b500      	push	{lr}
 800fbf8:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 800fbfc:	b083      	sub	sp, #12
 800fbfe:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800fc02:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800fc06:	fb01 f103 	mul.w	r1, r1, r3
 800fc0a:	2301      	movs	r3, #1
 800fc0c:	68d2      	ldr	r2, [r2, #12]
 800fc0e:	68c0      	ldr	r0, [r0, #12]
 800fc10:	9100      	str	r1, [sp, #0]
 800fc12:	4619      	mov	r1, r3
 800fc14:	f00d ffa6 	bl	801db64 <awe_vecScaleOffset>
 800fc18:	b003      	add	sp, #12
 800fc1a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc1e:	bf00      	nop

0800fc20 <awe_modScaleOffsetInt32Process>:
 800fc20:	6902      	ldr	r2, [r0, #16]
 800fc22:	b570      	push	{r4, r5, r6, lr}
 800fc24:	e9d2 5200 	ldrd	r5, r2, [r2]
 800fc28:	e9d5 1405 	ldrd	r1, r4, [r5, #20]
 800fc2c:	f3c4 0410 	ubfx	r4, r4, #0, #17
 800fc30:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800fc34:	68ee      	ldr	r6, [r5, #12]
 800fc36:	68d2      	ldr	r2, [r2, #12]
 800fc38:	fb01 f104 	mul.w	r1, r1, r4
 800fc3c:	e9d0 4508 	ldrd	r4, r5, [r0, #32]
 800fc40:	b084      	sub	sp, #16
 800fc42:	2301      	movs	r3, #1
 800fc44:	9102      	str	r1, [sp, #8]
 800fc46:	4630      	mov	r0, r6
 800fc48:	e9cd 4500 	strd	r4, r5, [sp]
 800fc4c:	4619      	mov	r1, r3
 800fc4e:	f00e f871 	bl	801dd34 <awe_vecScaleOffsetInt32>
 800fc52:	b004      	add	sp, #16
 800fc54:	bd70      	pop	{r4, r5, r6, pc}
 800fc56:	bf00      	nop

0800fc58 <awe_modScalerControlProcess>:
 800fc58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc5c:	6904      	ldr	r4, [r0, #16]
 800fc5e:	7e45      	ldrb	r5, [r0, #25]
 800fc60:	e9d4 3200 	ldrd	r3, r2, [r4]
 800fc64:	ed2d 8b02 	vpush	{d8}
 800fc68:	6952      	ldr	r2, [r2, #20]
 800fc6a:	68df      	ldr	r7, [r3, #12]
 800fc6c:	0112      	lsls	r2, r2, #4
 800fc6e:	b087      	sub	sp, #28
 800fc70:	d42b      	bmi.n	800fcca <awe_modScalerControlProcess+0x72>
 800fc72:	4606      	mov	r6, r0
 800fc74:	b315      	cbz	r5, 800fcbc <awe_modScalerControlProcess+0x64>
 800fc76:	699b      	ldr	r3, [r3, #24]
 800fc78:	ed90 8a0a 	vldr	s16, [r0, #40]	@ 0x28
 800fc7c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 800fc80:	f3c3 0810 	ubfx	r8, r3, #0, #17
 800fc84:	46a9      	mov	r9, r5
 800fc86:	f854 2f04 	ldr.w	r2, [r4, #4]!
 800fc8a:	f855 1f04 	ldr.w	r1, [r5, #4]!
 800fc8e:	6993      	ldr	r3, [r2, #24]
 800fc90:	68d0      	ldr	r0, [r2, #12]
 800fc92:	6952      	ldr	r2, [r2, #20]
 800fc94:	f8d6 c024 	ldr.w	ip, [r6, #36]	@ 0x24
 800fc98:	68c9      	ldr	r1, [r1, #12]
 800fc9a:	f8cd 8004 	str.w	r8, [sp, #4]
 800fc9e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800fca2:	9302      	str	r3, [sp, #8]
 800fca4:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800fca8:	9700      	str	r7, [sp, #0]
 800fcaa:	eeb0 0a48 	vmov.f32	s0, s16
 800fcae:	ab05      	add	r3, sp, #20
 800fcb0:	f8cd c014 	str.w	ip, [sp, #20]
 800fcb4:	f00e fa64 	bl	801e180 <awe_vecScaleSmoothSubblock_Nch>
 800fcb8:	45a1      	cmp	r9, r4
 800fcba:	d1e4      	bne.n	800fc86 <awe_modScalerControlProcess+0x2e>
 800fcbc:	9b05      	ldr	r3, [sp, #20]
 800fcbe:	6273      	str	r3, [r6, #36]	@ 0x24
 800fcc0:	b007      	add	sp, #28
 800fcc2:	ecbd 8b02 	vpop	{d8}
 800fcc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fcca:	ed97 8a00 	vldr	s16, [r7]
 800fcce:	2d00      	cmp	r5, #0
 800fcd0:	d0f6      	beq.n	800fcc0 <awe_modScalerControlProcess+0x68>
 800fcd2:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 800fcd6:	462e      	mov	r6, r5
 800fcd8:	f854 2f04 	ldr.w	r2, [r4, #4]!
 800fcdc:	f855 7f04 	ldr.w	r7, [r5, #4]!
 800fce0:	68d0      	ldr	r0, [r2, #12]
 800fce2:	e9d2 3105 	ldrd	r3, r1, [r2, #20]
 800fce6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800fcea:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800fcee:	fb01 f103 	mul.w	r1, r1, r3
 800fcf2:	2301      	movs	r3, #1
 800fcf4:	68fa      	ldr	r2, [r7, #12]
 800fcf6:	9100      	str	r1, [sp, #0]
 800fcf8:	eeb0 0a48 	vmov.f32	s0, s16
 800fcfc:	4619      	mov	r1, r3
 800fcfe:	f00d fb19 	bl	801d334 <awe_vecScale>
 800fd02:	42b4      	cmp	r4, r6
 800fd04:	d1e8      	bne.n	800fcd8 <awe_modScalerControlProcess+0x80>
 800fd06:	b007      	add	sp, #28
 800fd08:	ecbd 8b02 	vpop	{d8}
 800fd0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800fd10 <awe_modScalerControlSet>:
 800fd10:	b909      	cbnz	r1, 800fd16 <awe_modScalerControlSet+0x6>
 800fd12:	2000      	movs	r0, #0
 800fd14:	4770      	bx	lr
 800fd16:	6903      	ldr	r3, [r0, #16]
 800fd18:	ed90 0a08 	vldr	s0, [r0, #32]
 800fd1c:	685b      	ldr	r3, [r3, #4]
 800fd1e:	b510      	push	{r4, lr}
 800fd20:	edd3 0a04 	vldr	s1, [r3, #16]
 800fd24:	4604      	mov	r4, r0
 800fd26:	2001      	movs	r0, #1
 800fd28:	f013 fe3a 	bl	80239a0 <design_smoother>
 800fd2c:	2000      	movs	r0, #0
 800fd2e:	ed84 0a0a 	vstr	s0, [r4, #40]	@ 0x28
 800fd32:	bd10      	pop	{r4, pc}

0800fd34 <awe_modScalerDBControlProcess>:
 800fd34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd38:	6904      	ldr	r4, [r0, #16]
 800fd3a:	7e45      	ldrb	r5, [r0, #25]
 800fd3c:	6823      	ldr	r3, [r4, #0]
 800fd3e:	ed2d 8b02 	vpush	{d8}
 800fd42:	b084      	sub	sp, #16
 800fd44:	ed90 8a0a 	vldr	s16, [r0, #40]	@ 0x28
 800fd48:	4606      	mov	r6, r0
 800fd4a:	2201      	movs	r2, #1
 800fd4c:	68d8      	ldr	r0, [r3, #12]
 800fd4e:	a902      	add	r1, sp, #8
 800fd50:	f00f fa58 	bl	801f204 <awe_vecUnDb20>
 800fd54:	6863      	ldr	r3, [r4, #4]
 800fd56:	695b      	ldr	r3, [r3, #20]
 800fd58:	011b      	lsls	r3, r3, #4
 800fd5a:	d51f      	bpl.n	800fd9c <awe_modScalerDBControlProcess+0x68>
 800fd5c:	b1cd      	cbz	r5, 800fd92 <awe_modScalerDBControlProcess+0x5e>
 800fd5e:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 800fd62:	462e      	mov	r6, r5
 800fd64:	f854 2f04 	ldr.w	r2, [r4, #4]!
 800fd68:	f855 7f04 	ldr.w	r7, [r5, #4]!
 800fd6c:	68d0      	ldr	r0, [r2, #12]
 800fd6e:	ed9d 0a02 	vldr	s0, [sp, #8]
 800fd72:	e9d2 3105 	ldrd	r3, r1, [r2, #20]
 800fd76:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800fd7a:	f3c1 0110 	ubfx	r1, r1, #0, #17
 800fd7e:	fb01 f103 	mul.w	r1, r1, r3
 800fd82:	2301      	movs	r3, #1
 800fd84:	68fa      	ldr	r2, [r7, #12]
 800fd86:	9100      	str	r1, [sp, #0]
 800fd88:	4619      	mov	r1, r3
 800fd8a:	f00d fad3 	bl	801d334 <awe_vecScale>
 800fd8e:	42a6      	cmp	r6, r4
 800fd90:	d1e8      	bne.n	800fd64 <awe_modScalerDBControlProcess+0x30>
 800fd92:	b004      	add	sp, #16
 800fd94:	ecbd 8b02 	vpop	{d8}
 800fd98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd9c:	2d00      	cmp	r5, #0
 800fd9e:	d0f8      	beq.n	800fd92 <awe_modScalerDBControlProcess+0x5e>
 800fda0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 800fda4:	6a77      	ldr	r7, [r6, #36]	@ 0x24
 800fda6:	46a8      	mov	r8, r5
 800fda8:	f854 2f04 	ldr.w	r2, [r4, #4]!
 800fdac:	f855 1f04 	ldr.w	r1, [r5, #4]!
 800fdb0:	6993      	ldr	r3, [r2, #24]
 800fdb2:	68d0      	ldr	r0, [r2, #12]
 800fdb4:	6952      	ldr	r2, [r2, #20]
 800fdb6:	68c9      	ldr	r1, [r1, #12]
 800fdb8:	ed9d 0a02 	vldr	s0, [sp, #8]
 800fdbc:	9703      	str	r7, [sp, #12]
 800fdbe:	f3c3 0310 	ubfx	r3, r3, #0, #17
 800fdc2:	9300      	str	r3, [sp, #0]
 800fdc4:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800fdc8:	eef0 0a48 	vmov.f32	s1, s16
 800fdcc:	ab03      	add	r3, sp, #12
 800fdce:	f00e f9a5 	bl	801e11c <awe_vecScaleSmooth_Nch>
 800fdd2:	9f03      	ldr	r7, [sp, #12]
 800fdd4:	6277      	str	r7, [r6, #36]	@ 0x24
 800fdd6:	45a0      	cmp	r8, r4
 800fdd8:	d1e6      	bne.n	800fda8 <awe_modScalerDBControlProcess+0x74>
 800fdda:	b004      	add	sp, #16
 800fddc:	ecbd 8b02 	vpop	{d8}
 800fde0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fde4 <awe_modScalerDBControlSet>:
 800fde4:	b909      	cbnz	r1, 800fdea <awe_modScalerDBControlSet+0x6>
 800fde6:	2000      	movs	r0, #0
 800fde8:	4770      	bx	lr
 800fdea:	6903      	ldr	r3, [r0, #16]
 800fdec:	ed90 0a08 	vldr	s0, [r0, #32]
 800fdf0:	685b      	ldr	r3, [r3, #4]
 800fdf2:	b510      	push	{r4, lr}
 800fdf4:	edd3 0a04 	vldr	s1, [r3, #16]
 800fdf8:	4604      	mov	r4, r0
 800fdfa:	2001      	movs	r0, #1
 800fdfc:	f013 fdd0 	bl	80239a0 <design_smoother>
 800fe00:	2000      	movs	r0, #0
 800fe02:	ed84 0a0a 	vstr	s0, [r4, #40]	@ 0x28
 800fe06:	bd10      	pop	{r4, pc}

0800fe08 <awe_modScalerNControlConstructor>:
 800fe08:	b570      	push	{r4, r5, r6, lr}
 800fe0a:	b082      	sub	sp, #8
 800fe0c:	4616      	mov	r6, r2
 800fe0e:	4605      	mov	r5, r0
 800fe10:	9806      	ldr	r0, [sp, #24]
 800fe12:	9300      	str	r3, [sp, #0]
 800fe14:	460a      	mov	r2, r1
 800fe16:	9001      	str	r0, [sp, #4]
 800fe18:	4633      	mov	r3, r6
 800fe1a:	4629      	mov	r1, r5
 800fe1c:	480b      	ldr	r0, [pc, #44]	@ (800fe4c <awe_modScalerNControlConstructor+0x44>)
 800fe1e:	f010 f991 	bl	8020144 <BaseClassModule_Constructor>
 800fe22:	b178      	cbz	r0, 800fe44 <awe_modScalerNControlConstructor+0x3c>
 800fe24:	6833      	ldr	r3, [r6, #0]
 800fe26:	4604      	mov	r4, r0
 800fe28:	6958      	ldr	r0, [r3, #20]
 800fe2a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800fe2e:	0080      	lsls	r0, r0, #2
 800fe30:	462a      	mov	r2, r5
 800fe32:	f240 2131 	movw	r1, #561	@ 0x231
 800fe36:	f00f fc31 	bl	801f69c <awe_fwMalloc>
 800fe3a:	62a0      	str	r0, [r4, #40]	@ 0x28
 800fe3c:	b110      	cbz	r0, 800fe44 <awe_modScalerNControlConstructor+0x3c>
 800fe3e:	4620      	mov	r0, r4
 800fe40:	b002      	add	sp, #8
 800fe42:	bd70      	pop	{r4, r5, r6, pc}
 800fe44:	2400      	movs	r4, #0
 800fe46:	4620      	mov	r0, r4
 800fe48:	b002      	add	sp, #8
 800fe4a:	bd70      	pop	{r4, r5, r6, pc}
 800fe4c:	08034bd4 	.word	0x08034bd4

0800fe50 <awe_modScalerNControlProcess>:
 800fe50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe54:	6902      	ldr	r2, [r0, #16]
 800fe56:	edd0 7a08 	vldr	s15, [r0, #32]
 800fe5a:	e9d2 1300 	ldrd	r1, r3, [r2]
 800fe5e:	ed2d 8b02 	vpush	{d8}
 800fe62:	e9d3 5705 	ldrd	r5, r7, [r3, #20]
 800fe66:	6892      	ldr	r2, [r2, #8]
 800fe68:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800fe6c:	68ce      	ldr	r6, [r1, #12]
 800fe6e:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800fe72:	eef5 7a40 	vcmp.f32	s15, #0.0
 800fe76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe7a:	b083      	sub	sp, #12
 800fe7c:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800fe80:	f3c7 0710 	ubfx	r7, r7, #0, #17
 800fe84:	d01f      	beq.n	800fec6 <awe_modScalerNControlProcess+0x76>
 800fe86:	b1cd      	cbz	r5, 800febc <awe_modScalerNControlProcess+0x6c>
 800fe88:	ed90 8a09 	vldr	s16, [r0, #36]	@ 0x24
 800fe8c:	4682      	mov	sl, r0
 800fe8e:	ea4f 0b85 	mov.w	fp, r5, lsl #2
 800fe92:	2400      	movs	r4, #0
 800fe94:	f8da 3028 	ldr.w	r3, [sl, #40]	@ 0x28
 800fe98:	ecb6 0a01 	vldmia	r6!, {s0}
 800fe9c:	9701      	str	r7, [sp, #4]
 800fe9e:	4423      	add	r3, r4
 800fea0:	9300      	str	r3, [sp, #0]
 800fea2:	eb09 0204 	add.w	r2, r9, r4
 800fea6:	eb08 0004 	add.w	r0, r8, r4
 800feaa:	eef0 0a48 	vmov.f32	s1, s16
 800feae:	462b      	mov	r3, r5
 800feb0:	4629      	mov	r1, r5
 800feb2:	3404      	adds	r4, #4
 800feb4:	f00d ff52 	bl	801dd5c <awe_vecScaleSmooth>
 800feb8:	455c      	cmp	r4, fp
 800feba:	d1eb      	bne.n	800fe94 <awe_modScalerNControlProcess+0x44>
 800febc:	b003      	add	sp, #12
 800febe:	ecbd 8b02 	vpop	{d8}
 800fec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fec6:	2d00      	cmp	r5, #0
 800fec8:	d0f8      	beq.n	800febc <awe_modScalerNControlProcess+0x6c>
 800feca:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800fece:	2400      	movs	r4, #0
 800fed0:	ecb6 0a01 	vldmia	r6!, {s0}
 800fed4:	9700      	str	r7, [sp, #0]
 800fed6:	eb09 0204 	add.w	r2, r9, r4
 800feda:	eb08 0004 	add.w	r0, r8, r4
 800fede:	462b      	mov	r3, r5
 800fee0:	4629      	mov	r1, r5
 800fee2:	3404      	adds	r4, #4
 800fee4:	f00d fa26 	bl	801d334 <awe_vecScale>
 800fee8:	4554      	cmp	r4, sl
 800feea:	d1f1      	bne.n	800fed0 <awe_modScalerNControlProcess+0x80>
 800feec:	b003      	add	sp, #12
 800feee:	ecbd 8b02 	vpop	{d8}
 800fef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fef6:	bf00      	nop

0800fef8 <awe_modScalerNControlSet>:
 800fef8:	b909      	cbnz	r1, 800fefe <awe_modScalerNControlSet+0x6>
 800fefa:	2000      	movs	r0, #0
 800fefc:	4770      	bx	lr
 800fefe:	6903      	ldr	r3, [r0, #16]
 800ff00:	ed90 0a08 	vldr	s0, [r0, #32]
 800ff04:	685b      	ldr	r3, [r3, #4]
 800ff06:	b510      	push	{r4, lr}
 800ff08:	edd3 0a04 	vldr	s1, [r3, #16]
 800ff0c:	4604      	mov	r4, r0
 800ff0e:	2001      	movs	r0, #1
 800ff10:	f013 fd46 	bl	80239a0 <design_smoother>
 800ff14:	2000      	movs	r0, #0
 800ff16:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 800ff1a:	bd10      	pop	{r4, pc}

0800ff1c <awe_modScalerNSymmetricFadingConstructor>:
 800ff1c:	b570      	push	{r4, r5, r6, lr}
 800ff1e:	b082      	sub	sp, #8
 800ff20:	4616      	mov	r6, r2
 800ff22:	4605      	mov	r5, r0
 800ff24:	9806      	ldr	r0, [sp, #24]
 800ff26:	9300      	str	r3, [sp, #0]
 800ff28:	460a      	mov	r2, r1
 800ff2a:	9001      	str	r0, [sp, #4]
 800ff2c:	4633      	mov	r3, r6
 800ff2e:	4629      	mov	r1, r5
 800ff30:	482a      	ldr	r0, [pc, #168]	@ (800ffdc <awe_modScalerNSymmetricFadingConstructor+0xc0>)
 800ff32:	f010 f907 	bl	8020144 <BaseClassModule_Constructor>
 800ff36:	2800      	cmp	r0, #0
 800ff38:	d04c      	beq.n	800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ff3a:	6833      	ldr	r3, [r6, #0]
 800ff3c:	4604      	mov	r4, r0
 800ff3e:	6958      	ldr	r0, [r3, #20]
 800ff40:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ff44:	0080      	lsls	r0, r0, #2
 800ff46:	462a      	mov	r2, r5
 800ff48:	f240 2131 	movw	r1, #561	@ 0x231
 800ff4c:	f00f fba6 	bl	801f69c <awe_fwMalloc>
 800ff50:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800ff52:	2800      	cmp	r0, #0
 800ff54:	d03e      	beq.n	800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ff56:	6833      	ldr	r3, [r6, #0]
 800ff58:	6958      	ldr	r0, [r3, #20]
 800ff5a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ff5e:	0080      	lsls	r0, r0, #2
 800ff60:	462a      	mov	r2, r5
 800ff62:	f240 2131 	movw	r1, #561	@ 0x231
 800ff66:	f00f fb99 	bl	801f69c <awe_fwMalloc>
 800ff6a:	6320      	str	r0, [r4, #48]	@ 0x30
 800ff6c:	b390      	cbz	r0, 800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ff6e:	6833      	ldr	r3, [r6, #0]
 800ff70:	6958      	ldr	r0, [r3, #20]
 800ff72:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ff76:	0080      	lsls	r0, r0, #2
 800ff78:	462a      	mov	r2, r5
 800ff7a:	f240 2131 	movw	r1, #561	@ 0x231
 800ff7e:	f00f fb8d 	bl	801f69c <awe_fwMalloc>
 800ff82:	6360      	str	r0, [r4, #52]	@ 0x34
 800ff84:	b330      	cbz	r0, 800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ff86:	6833      	ldr	r3, [r6, #0]
 800ff88:	6958      	ldr	r0, [r3, #20]
 800ff8a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ff8e:	0080      	lsls	r0, r0, #2
 800ff90:	462a      	mov	r2, r5
 800ff92:	f240 2131 	movw	r1, #561	@ 0x231
 800ff96:	f00f fb81 	bl	801f69c <awe_fwMalloc>
 800ff9a:	63a0      	str	r0, [r4, #56]	@ 0x38
 800ff9c:	b1d0      	cbz	r0, 800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ff9e:	6833      	ldr	r3, [r6, #0]
 800ffa0:	6958      	ldr	r0, [r3, #20]
 800ffa2:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ffa6:	0080      	lsls	r0, r0, #2
 800ffa8:	462a      	mov	r2, r5
 800ffaa:	f240 2131 	movw	r1, #561	@ 0x231
 800ffae:	f00f fb75 	bl	801f69c <awe_fwMalloc>
 800ffb2:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800ffb4:	b170      	cbz	r0, 800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ffb6:	6833      	ldr	r3, [r6, #0]
 800ffb8:	6958      	ldr	r0, [r3, #20]
 800ffba:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800ffbe:	0080      	lsls	r0, r0, #2
 800ffc0:	462a      	mov	r2, r5
 800ffc2:	f240 2131 	movw	r1, #561	@ 0x231
 800ffc6:	f00f fb69 	bl	801f69c <awe_fwMalloc>
 800ffca:	6420      	str	r0, [r4, #64]	@ 0x40
 800ffcc:	b110      	cbz	r0, 800ffd4 <awe_modScalerNSymmetricFadingConstructor+0xb8>
 800ffce:	4620      	mov	r0, r4
 800ffd0:	b002      	add	sp, #8
 800ffd2:	bd70      	pop	{r4, r5, r6, pc}
 800ffd4:	2400      	movs	r4, #0
 800ffd6:	4620      	mov	r0, r4
 800ffd8:	b002      	add	sp, #8
 800ffda:	bd70      	pop	{r4, r5, r6, pc}
 800ffdc:	08034bfc 	.word	0x08034bfc

0800ffe0 <awe_modScalerNSymmetricFadingProcess>:
 800ffe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffe4:	f8d0 9010 	ldr.w	r9, [r0, #16]
 800ffe8:	f8d9 6000 	ldr.w	r6, [r9]
 800ffec:	ed2d 8b02 	vpush	{d8}
 800fff0:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
 800fff4:	b087      	sub	sp, #28
 800fff6:	f3c3 0b09 	ubfx	fp, r3, #0, #10
 800fffa:	f3c3 63c0 	ubfx	r3, r3, #27, #1
 800fffe:	9302      	str	r3, [sp, #8]
 8010000:	f3c2 0810 	ubfx	r8, r2, #0, #17
 8010004:	f1bb 0f00 	cmp.w	fp, #0
 8010008:	f000 8086 	beq.w	8010118 <awe_modScalerNSymmetricFadingProcess+0x138>
 801000c:	ea4f 0368 	mov.w	r3, r8, asr #1
 8010010:	9303      	str	r3, [sp, #12]
 8010012:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
 8010014:	f8d0 c034 	ldr.w	ip, [r0, #52]	@ 0x34
 8010018:	f8cd b014 	str.w	fp, [sp, #20]
 801001c:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8010020:	ea4f 058b 	mov.w	r5, fp, lsl #2
 8010024:	4607      	mov	r7, r0
 8010026:	2400      	movs	r4, #0
 8010028:	469b      	mov	fp, r3
 801002a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801002c:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8010030:	68f0      	ldr	r0, [r6, #12]
 8010032:	68d2      	ldr	r2, [r2, #12]
 8010034:	590e      	ldr	r6, [r1, r4]
 8010036:	4423      	add	r3, r4
 8010038:	ed93 8a00 	vldr	s16, [r3]
 801003c:	9b02      	ldr	r3, [sp, #8]
 801003e:	eb01 0e04 	add.w	lr, r1, r4
 8010042:	2b00      	cmp	r3, #0
 8010044:	d13e      	bne.n	80100c4 <awe_modScalerNSymmetricFadingProcess+0xe4>
 8010046:	4420      	add	r0, r4
 8010048:	4422      	add	r2, r4
 801004a:	2e00      	cmp	r6, #0
 801004c:	d07f      	beq.n	801014e <awe_modScalerNSymmetricFadingProcess+0x16e>
 801004e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010050:	eb0c 0a04 	add.w	sl, ip, r4
 8010054:	4423      	add	r3, r4
 8010056:	45b0      	cmp	r8, r6
 8010058:	edd3 6a00 	vldr	s13, [r3]
 801005c:	edda 7a00 	vldr	s15, [sl]
 8010060:	db5f      	blt.n	8010122 <awe_modScalerNSymmetricFadingProcess+0x142>
 8010062:	2e00      	cmp	r6, #0
 8010064:	dd13      	ble.n	801008e <awe_modScalerNSymmetricFadingProcess+0xae>
 8010066:	9b02      	ldr	r3, [sp, #8]
 8010068:	4684      	mov	ip, r0
 801006a:	4611      	mov	r1, r2
 801006c:	ed9c 7a00 	vldr	s14, [ip]
 8010070:	3301      	adds	r3, #1
 8010072:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010076:	429e      	cmp	r6, r3
 8010078:	ed81 7a00 	vstr	s14, [r1]
 801007c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010080:	44ac      	add	ip, r5
 8010082:	4429      	add	r1, r5
 8010084:	d1f2      	bne.n	801006c <awe_modScalerNSymmetricFadingProcess+0x8c>
 8010086:	fb05 f306 	mul.w	r3, r5, r6
 801008a:	4418      	add	r0, r3
 801008c:	441a      	add	r2, r3
 801008e:	9905      	ldr	r1, [sp, #20]
 8010090:	eba8 0606 	sub.w	r6, r8, r6
 8010094:	9600      	str	r6, [sp, #0]
 8010096:	460b      	mov	r3, r1
 8010098:	eeb0 0a48 	vmov.f32	s0, s16
 801009c:	f00d f94a 	bl	801d334 <awe_vecScale>
 80100a0:	f8d7 c034 	ldr.w	ip, [r7, #52]	@ 0x34
 80100a4:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80100a6:	eb0c 0a04 	add.w	sl, ip, r4
 80100aa:	eb01 0e04 	add.w	lr, r1, r4
 80100ae:	2600      	movs	r6, #0
 80100b0:	3404      	adds	r4, #4
 80100b2:	42a5      	cmp	r5, r4
 80100b4:	ed8a 8a00 	vstr	s16, [sl]
 80100b8:	f8ce 6000 	str.w	r6, [lr]
 80100bc:	d02c      	beq.n	8010118 <awe_modScalerNSymmetricFadingProcess+0x138>
 80100be:	f8d9 6000 	ldr.w	r6, [r9]
 80100c2:	e7b2      	b.n	801002a <awe_modScalerNSymmetricFadingProcess+0x4a>
 80100c4:	0063      	lsls	r3, r4, #1
 80100c6:	f103 0a04 	add.w	sl, r3, #4
 80100ca:	9903      	ldr	r1, [sp, #12]
 80100cc:	9100      	str	r1, [sp, #0]
 80100ce:	eb00 0c0a 	add.w	ip, r0, sl
 80100d2:	eeb0 0a48 	vmov.f32	s0, s16
 80100d6:	4418      	add	r0, r3
 80100d8:	4492      	add	sl, r2
 80100da:	4659      	mov	r1, fp
 80100dc:	441a      	add	r2, r3
 80100de:	465b      	mov	r3, fp
 80100e0:	f8cd c010 	str.w	ip, [sp, #16]
 80100e4:	f00d f926 	bl	801d334 <awe_vecScale>
 80100e8:	e9dd 1003 	ldrd	r1, r0, [sp, #12]
 80100ec:	4652      	mov	r2, sl
 80100ee:	9100      	str	r1, [sp, #0]
 80100f0:	eeb0 0a48 	vmov.f32	s0, s16
 80100f4:	465b      	mov	r3, fp
 80100f6:	4659      	mov	r1, fp
 80100f8:	f00d f91c 	bl	801d334 <awe_vecScale>
 80100fc:	f8d7 c034 	ldr.w	ip, [r7, #52]	@ 0x34
 8010100:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8010102:	eb0c 0a04 	add.w	sl, ip, r4
 8010106:	eb01 0e04 	add.w	lr, r1, r4
 801010a:	3404      	adds	r4, #4
 801010c:	42a5      	cmp	r5, r4
 801010e:	ed8a 8a00 	vstr	s16, [sl]
 8010112:	f8ce 6000 	str.w	r6, [lr]
 8010116:	d1d2      	bne.n	80100be <awe_modScalerNSymmetricFadingProcess+0xde>
 8010118:	b007      	add	sp, #28
 801011a:	ecbd 8b02 	vpop	{d8}
 801011e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010122:	f1b8 0f00 	cmp.w	r8, #0
 8010126:	d00d      	beq.n	8010144 <awe_modScalerNSymmetricFadingProcess+0x164>
 8010128:	9b02      	ldr	r3, [sp, #8]
 801012a:	ed90 7a00 	vldr	s14, [r0]
 801012e:	3301      	adds	r3, #1
 8010130:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010134:	4598      	cmp	r8, r3
 8010136:	ed82 7a00 	vstr	s14, [r2]
 801013a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801013e:	4428      	add	r0, r5
 8010140:	442a      	add	r2, r5
 8010142:	d1f2      	bne.n	801012a <awe_modScalerNSymmetricFadingProcess+0x14a>
 8010144:	eba6 0608 	sub.w	r6, r6, r8
 8010148:	eeb0 8a67 	vmov.f32	s16, s15
 801014c:	e7b0      	b.n	80100b0 <awe_modScalerNSymmetricFadingProcess+0xd0>
 801014e:	9905      	ldr	r1, [sp, #20]
 8010150:	f8cd 8000 	str.w	r8, [sp]
 8010154:	eeb0 0a48 	vmov.f32	s0, s16
 8010158:	460b      	mov	r3, r1
 801015a:	e7cd      	b.n	80100f8 <awe_modScalerNSymmetricFadingProcess+0x118>

0801015c <awe_modScalerNSymmetricFadingSet>:
 801015c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801015e:	6903      	ldr	r3, [r0, #16]
 8010160:	eddf 7a50 	vldr	s15, [pc, #320]	@ 80102a4 <awe_modScalerNSymmetricFadingSet+0x148>
 8010164:	681b      	ldr	r3, [r3, #0]
 8010166:	ed2d 8b06 	vpush	{d8-d10}
 801016a:	ed93 7a04 	vldr	s14, [r3, #16]
 801016e:	ed90 8a09 	vldr	s16, [r0, #36]	@ 0x24
 8010172:	695f      	ldr	r7, [r3, #20]
 8010174:	ee28 8a07 	vmul.f32	s16, s16, s14
 8010178:	058b      	lsls	r3, r1, #22
 801017a:	f3c7 0709 	ubfx	r7, r7, #0, #10
 801017e:	ee28 8a27 	vmul.f32	s16, s16, s15
 8010182:	d50d      	bpl.n	80101a0 <awe_modScalerNSymmetricFadingSet+0x44>
 8010184:	b16f      	cbz	r7, 80101a2 <awe_modScalerNSymmetricFadingSet+0x46>
 8010186:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8010188:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801018c:	00bf      	lsls	r7, r7, #2
 801018e:	3b04      	subs	r3, #4
 8010190:	ee17 1a90 	vmov	r1, s15
 8010194:	19da      	adds	r2, r3, r7
 8010196:	f843 1f04 	str.w	r1, [r3, #4]!
 801019a:	429a      	cmp	r2, r3
 801019c:	d1fb      	bne.n	8010196 <awe_modScalerNSymmetricFadingSet+0x3a>
 801019e:	e005      	b.n	80101ac <awe_modScalerNSymmetricFadingSet+0x50>
 80101a0:	b91f      	cbnz	r7, 80101aa <awe_modScalerNSymmetricFadingSet+0x4e>
 80101a2:	ecbd 8b06 	vpop	{d8-d10}
 80101a6:	2000      	movs	r0, #0
 80101a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80101aa:	00bf      	lsls	r7, r7, #2
 80101ac:	4605      	mov	r5, r0
 80101ae:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 80101b0:	ed9f 9a3d 	vldr	s18, [pc, #244]	@ 80102a8 <awe_modScalerNSymmetricFadingSet+0x14c>
 80101b4:	eddf 8a3d 	vldr	s17, [pc, #244]	@ 80102ac <awe_modScalerNSymmetricFadingSet+0x150>
 80101b8:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 80102b0 <awe_modScalerNSymmetricFadingSet+0x154>
 80101bc:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 80102b4 <awe_modScalerNSymmetricFadingSet+0x158>
 80101c0:	eddf aa3d 	vldr	s21, [pc, #244]	@ 80102b8 <awe_modScalerNSymmetricFadingSet+0x15c>
 80101c4:	2400      	movs	r4, #0
 80101c6:	e02e      	b.n	8010226 <awe_modScalerNSymmetricFadingSet+0xca>
 80101c8:	ed96 7a00 	vldr	s14, [r6]
 80101cc:	ee87 0a27 	vdiv.f32	s0, s14, s15
 80101d0:	eeb0 0ac0 	vabs.f32	s0, s0
 80101d4:	eeb4 0ae9 	vcmpe.f32	s0, s19
 80101d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80101dc:	d55c      	bpl.n	8010298 <awe_modScalerNSymmetricFadingSet+0x13c>
 80101de:	eef0 7a4a 	vmov.f32	s15, s20
 80101e2:	ee87 0a88 	vdiv.f32	s0, s15, s16
 80101e6:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80101e8:	191e      	adds	r6, r3, r4
 80101ea:	ee20 0a09 	vmul.f32	s0, s0, s18
 80101ee:	f01e fb05 	bl	802e7fc <expf>
 80101f2:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
 80101f4:	ed86 0a00 	vstr	s0, [r6]
 80101f8:	1916      	adds	r6, r2, r4
 80101fa:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
 80101fc:	edd6 7a00 	vldr	s15, [r6]
 8010200:	4423      	add	r3, r4
 8010202:	ed93 7a00 	vldr	s14, [r3]
 8010206:	eef4 7a47 	vcmp.f32	s15, s14
 801020a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801020e:	d007      	beq.n	8010220 <awe_modScalerNSymmetricFadingSet+0xc4>
 8010210:	eebd 7ac8 	vcvt.s32.f32	s14, s16
 8010214:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 8010216:	ee17 0a10 	vmov	r0, s14
 801021a:	5108      	str	r0, [r1, r4]
 801021c:	edc3 7a00 	vstr	s15, [r3]
 8010220:	3404      	adds	r4, #4
 8010222:	42bc      	cmp	r4, r7
 8010224:	d0bd      	beq.n	80101a2 <awe_modScalerNSymmetricFadingSet+0x46>
 8010226:	e9d5 130a 	ldrd	r1, r3, [r5, #40]	@ 0x28
 801022a:	4423      	add	r3, r4
 801022c:	ed95 0a08 	vldr	s0, [r5, #32]
 8010230:	edd3 7a00 	vldr	s15, [r3]
 8010234:	1916      	adds	r6, r2, r4
 8010236:	bb11      	cbnz	r1, 801027e <awe_modScalerNSymmetricFadingSet+0x122>
 8010238:	ee20 0a27 	vmul.f32	s0, s0, s15
 801023c:	ed86 0a00 	vstr	s0, [r6]
 8010240:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8010244:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8010246:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801024a:	bf98      	it	ls
 801024c:	edc6 8a00 	vstrls	s17, [r6]
 8010250:	4423      	add	r3, r4
 8010252:	edd3 7a00 	vldr	s15, [r3]
 8010256:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801025a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801025e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8010262:	bf9c      	itt	ls
 8010264:	eef0 7a68 	vmovls.f32	s15, s17
 8010268:	edc3 8a00 	vstrls	s17, [r3]
 801026c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010270:	dcaa      	bgt.n	80101c8 <awe_modScalerNSymmetricFadingSet+0x6c>
 8010272:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 8010274:	4423      	add	r3, r4
 8010276:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 801027a:	6019      	str	r1, [r3, #0]
 801027c:	e7bd      	b.n	80101fa <awe_modScalerNSymmetricFadingSet+0x9e>
 801027e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8010282:	ee20 0a09 	vmul.f32	s0, s0, s18
 8010286:	f01e fab9 	bl	802e7fc <expf>
 801028a:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
 801028c:	ed86 0a00 	vstr	s0, [r6]
 8010290:	1916      	adds	r6, r2, r4
 8010292:	ed96 0a00 	vldr	s0, [r6]
 8010296:	e7d3      	b.n	8010240 <awe_modScalerNSymmetricFadingSet+0xe4>
 8010298:	f01e fb06 	bl	802e8a8 <logf>
 801029c:	ee60 7a2a 	vmul.f32	s15, s0, s21
 80102a0:	e79f      	b.n	80101e2 <awe_modScalerNSymmetricFadingSet+0x86>
 80102a2:	bf00      	nop
 80102a4:	3a83126f 	.word	0x3a83126f
 80102a8:	3debc8e3 	.word	0x3debc8e3
 80102ac:	2edbe708 	.word	0x2edbe708
 80102b0:	00800000 	.word	0x00800000
 80102b4:	c43da61e 	.word	0xc43da61e
 80102b8:	410af967 	.word	0x410af967

080102bc <awe_modScalerNV2Constructor>:
 80102bc:	b570      	push	{r4, r5, r6, lr}
 80102be:	b082      	sub	sp, #8
 80102c0:	4616      	mov	r6, r2
 80102c2:	4605      	mov	r5, r0
 80102c4:	9806      	ldr	r0, [sp, #24]
 80102c6:	9300      	str	r3, [sp, #0]
 80102c8:	460a      	mov	r2, r1
 80102ca:	9001      	str	r0, [sp, #4]
 80102cc:	4633      	mov	r3, r6
 80102ce:	4629      	mov	r1, r5
 80102d0:	4817      	ldr	r0, [pc, #92]	@ (8010330 <awe_modScalerNV2Constructor+0x74>)
 80102d2:	f00f ff37 	bl	8020144 <BaseClassModule_Constructor>
 80102d6:	b338      	cbz	r0, 8010328 <awe_modScalerNV2Constructor+0x6c>
 80102d8:	6833      	ldr	r3, [r6, #0]
 80102da:	4604      	mov	r4, r0
 80102dc:	6958      	ldr	r0, [r3, #20]
 80102de:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80102e2:	0080      	lsls	r0, r0, #2
 80102e4:	462a      	mov	r2, r5
 80102e6:	f240 2131 	movw	r1, #561	@ 0x231
 80102ea:	f00f f9d7 	bl	801f69c <awe_fwMalloc>
 80102ee:	6320      	str	r0, [r4, #48]	@ 0x30
 80102f0:	b1d0      	cbz	r0, 8010328 <awe_modScalerNV2Constructor+0x6c>
 80102f2:	6833      	ldr	r3, [r6, #0]
 80102f4:	6958      	ldr	r0, [r3, #20]
 80102f6:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80102fa:	0080      	lsls	r0, r0, #2
 80102fc:	462a      	mov	r2, r5
 80102fe:	f240 2131 	movw	r1, #561	@ 0x231
 8010302:	f00f f9cb 	bl	801f69c <awe_fwMalloc>
 8010306:	6360      	str	r0, [r4, #52]	@ 0x34
 8010308:	b170      	cbz	r0, 8010328 <awe_modScalerNV2Constructor+0x6c>
 801030a:	6833      	ldr	r3, [r6, #0]
 801030c:	6958      	ldr	r0, [r3, #20]
 801030e:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8010312:	0080      	lsls	r0, r0, #2
 8010314:	462a      	mov	r2, r5
 8010316:	f240 2131 	movw	r1, #561	@ 0x231
 801031a:	f00f f9bf 	bl	801f69c <awe_fwMalloc>
 801031e:	63a0      	str	r0, [r4, #56]	@ 0x38
 8010320:	b110      	cbz	r0, 8010328 <awe_modScalerNV2Constructor+0x6c>
 8010322:	4620      	mov	r0, r4
 8010324:	b002      	add	sp, #8
 8010326:	bd70      	pop	{r4, r5, r6, pc}
 8010328:	2400      	movs	r4, #0
 801032a:	4620      	mov	r0, r4
 801032c:	b002      	add	sp, #8
 801032e:	bd70      	pop	{r4, r5, r6, pc}
 8010330:	08034c24 	.word	0x08034c24

08010334 <awe_modScalerNV2Process>:
 8010334:	6902      	ldr	r2, [r0, #16]
 8010336:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 801033a:	e9d2 3100 	ldrd	r3, r1, [r2]
 801033e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010342:	e9d3 4205 	ldrd	r4, r2, [r3, #20]
 8010346:	eef5 7a40 	vcmp.f32	s15, #0.0
 801034a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801034e:	f3c4 0509 	ubfx	r5, r4, #0, #10
 8010352:	b082      	sub	sp, #8
 8010354:	4680      	mov	r8, r0
 8010356:	68cf      	ldr	r7, [r1, #12]
 8010358:	68de      	ldr	r6, [r3, #12]
 801035a:	f3c2 0910 	ubfx	r9, r2, #0, #17
 801035e:	f3c4 64c0 	ubfx	r4, r4, #27, #1
 8010362:	d02c      	beq.n	80103be <awe_modScalerNV2Process+0x8a>
 8010364:	2c00      	cmp	r4, #0
 8010366:	d043      	beq.n	80103f0 <awe_modScalerNV2Process+0xbc>
 8010368:	ea4f 0969 	mov.w	r9, r9, asr #1
 801036c:	b325      	cbz	r5, 80103b8 <awe_modScalerNV2Process+0x84>
 801036e:	eb06 0ac5 	add.w	sl, r6, r5, lsl #3
 8010372:	2400      	movs	r4, #0
 8010374:	006d      	lsls	r5, r5, #1
 8010376:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 801037a:	4423      	add	r3, r4
 801037c:	ed93 0a00 	vldr	s0, [r3]
 8010380:	f8cd 9000 	str.w	r9, [sp]
 8010384:	463a      	mov	r2, r7
 8010386:	4630      	mov	r0, r6
 8010388:	462b      	mov	r3, r5
 801038a:	4629      	mov	r1, r5
 801038c:	f00c ffd2 	bl	801d334 <awe_vecScale>
 8010390:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 8010394:	4423      	add	r3, r4
 8010396:	ed93 0a00 	vldr	s0, [r3]
 801039a:	f8cd 9000 	str.w	r9, [sp]
 801039e:	1d3a      	adds	r2, r7, #4
 80103a0:	1d30      	adds	r0, r6, #4
 80103a2:	462b      	mov	r3, r5
 80103a4:	4629      	mov	r1, r5
 80103a6:	3608      	adds	r6, #8
 80103a8:	f00c ffc4 	bl	801d334 <awe_vecScale>
 80103ac:	45b2      	cmp	sl, r6
 80103ae:	f104 0404 	add.w	r4, r4, #4
 80103b2:	f107 0708 	add.w	r7, r7, #8
 80103b6:	d1de      	bne.n	8010376 <awe_modScalerNV2Process+0x42>
 80103b8:	b002      	add	sp, #8
 80103ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80103be:	2c00      	cmp	r4, #0
 80103c0:	d1d2      	bne.n	8010368 <awe_modScalerNV2Process+0x34>
 80103c2:	2d00      	cmp	r5, #0
 80103c4:	d0f8      	beq.n	80103b8 <awe_modScalerNV2Process+0x84>
 80103c6:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 80103ca:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 80103ce:	4423      	add	r3, r4
 80103d0:	ed93 0a00 	vldr	s0, [r3]
 80103d4:	f8cd 9000 	str.w	r9, [sp]
 80103d8:	193a      	adds	r2, r7, r4
 80103da:	1930      	adds	r0, r6, r4
 80103dc:	462b      	mov	r3, r5
 80103de:	4629      	mov	r1, r5
 80103e0:	3404      	adds	r4, #4
 80103e2:	f00c ffa7 	bl	801d334 <awe_vecScale>
 80103e6:	45a2      	cmp	sl, r4
 80103e8:	d1ef      	bne.n	80103ca <awe_modScalerNV2Process+0x96>
 80103ea:	b002      	add	sp, #8
 80103ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80103f0:	2d00      	cmp	r5, #0
 80103f2:	d0e1      	beq.n	80103b8 <awe_modScalerNV2Process+0x84>
 80103f4:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 80103f8:	e9d8 230d 	ldrd	r2, r3, [r8, #52]	@ 0x34
 80103fc:	4422      	add	r2, r4
 80103fe:	4423      	add	r3, r4
 8010400:	ed92 0a00 	vldr	s0, [r2]
 8010404:	edd8 0a0b 	vldr	s1, [r8, #44]	@ 0x2c
 8010408:	9300      	str	r3, [sp, #0]
 801040a:	193a      	adds	r2, r7, r4
 801040c:	1930      	adds	r0, r6, r4
 801040e:	f8cd 9004 	str.w	r9, [sp, #4]
 8010412:	462b      	mov	r3, r5
 8010414:	4629      	mov	r1, r5
 8010416:	3404      	adds	r4, #4
 8010418:	f00d fca0 	bl	801dd5c <awe_vecScaleSmooth>
 801041c:	45a2      	cmp	sl, r4
 801041e:	d1eb      	bne.n	80103f8 <awe_modScalerNV2Process+0xc4>
 8010420:	b002      	add	sp, #8
 8010422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010426:	bf00      	nop

08010428 <awe_modScalerNV2Set>:
 8010428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801042a:	6903      	ldr	r3, [r0, #16]
 801042c:	681b      	ldr	r3, [r3, #0]
 801042e:	695e      	ldr	r6, [r3, #20]
 8010430:	058a      	lsls	r2, r1, #22
 8010432:	ed2d 8b02 	vpush	{d8}
 8010436:	4604      	mov	r4, r0
 8010438:	f3c6 0609 	ubfx	r6, r6, #0, #10
 801043c:	d431      	bmi.n	80104a2 <awe_modScalerNV2Set+0x7a>
 801043e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010440:	b993      	cbnz	r3, 8010468 <awe_modScalerNV2Set+0x40>
 8010442:	b16e      	cbz	r6, 8010460 <awe_modScalerNV2Set+0x38>
 8010444:	e9d4 320c 	ldrd	r3, r2, [r4, #48]	@ 0x30
 8010448:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 801044c:	ecb3 7a01 	vldmia	r3!, {s14}
 8010450:	edd4 7a08 	vldr	s15, [r4, #32]
 8010454:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010458:	429e      	cmp	r6, r3
 801045a:	ece2 7a01 	vstmia	r2!, {s15}
 801045e:	d1f5      	bne.n	801044c <awe_modScalerNV2Set+0x24>
 8010460:	ecbd 8b02 	vpop	{d8}
 8010464:	2000      	movs	r0, #0
 8010466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010468:	2e00      	cmp	r6, #0
 801046a:	d0f9      	beq.n	8010460 <awe_modScalerNV2Set+0x38>
 801046c:	ed9f 8a12 	vldr	s16, [pc, #72]	@ 80104b8 <awe_modScalerNV2Set+0x90>
 8010470:	00b6      	lsls	r6, r6, #2
 8010472:	2500      	movs	r5, #0
 8010474:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010476:	edd4 7a08 	vldr	s15, [r4, #32]
 801047a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801047c:	442a      	add	r2, r5
 801047e:	ed92 0a00 	vldr	s0, [r2]
 8010482:	ee30 0a27 	vadd.f32	s0, s0, s15
 8010486:	195f      	adds	r7, r3, r5
 8010488:	ee20 0a08 	vmul.f32	s0, s0, s16
 801048c:	f01e f9b6 	bl	802e7fc <expf>
 8010490:	3504      	adds	r5, #4
 8010492:	42ae      	cmp	r6, r5
 8010494:	ed87 0a00 	vstr	s0, [r7]
 8010498:	d1ec      	bne.n	8010474 <awe_modScalerNV2Set+0x4c>
 801049a:	ecbd 8b02 	vpop	{d8}
 801049e:	2000      	movs	r0, #0
 80104a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80104a2:	2001      	movs	r0, #1
 80104a4:	edd3 0a04 	vldr	s1, [r3, #16]
 80104a8:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 80104ac:	f013 fa78 	bl	80239a0 <design_smoother>
 80104b0:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 80104b4:	e7c3      	b.n	801043e <awe_modScalerNV2Set+0x16>
 80104b6:	bf00      	nop
 80104b8:	3debc8e3 	.word	0x3debc8e3

080104bc <awe_modScalerSymmetricFadingProcess>:
 80104bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104c0:	6902      	ldr	r2, [r0, #16]
 80104c2:	6986      	ldr	r6, [r0, #24]
 80104c4:	6811      	ldr	r1, [r2, #0]
 80104c6:	6b07      	ldr	r7, [r0, #48]	@ 0x30
 80104c8:	694b      	ldr	r3, [r1, #20]
 80104ca:	ed2d 8b02 	vpush	{d8}
 80104ce:	fa5f f886 	uxtb.w	r8, r6
 80104d2:	b085      	sub	sp, #20
 80104d4:	edd0 8a0d 	vldr	s17, [r0, #52]	@ 0x34
 80104d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80104dc:	2f00      	cmp	r7, #0
 80104de:	d049      	beq.n	8010574 <awe_modScalerSymmetricFadingProcess+0xb8>
 80104e0:	011d      	lsls	r5, r3, #4
 80104e2:	d447      	bmi.n	8010574 <awe_modScalerSymmetricFadingProcess+0xb8>
 80104e4:	4682      	mov	sl, r0
 80104e6:	2e00      	cmp	r6, #0
 80104e8:	f000 80a2 	beq.w	8010630 <awe_modScalerSymmetricFadingProcess+0x174>
 80104ec:	1f10      	subs	r0, r2, #4
 80104ee:	4693      	mov	fp, r2
 80104f0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80104f4:	ed9a 8a0b 	vldr	s16, [sl, #44]	@ 0x2c
 80104f8:	eb00 0286 	add.w	r2, r0, r6, lsl #2
 80104fc:	9203      	str	r2, [sp, #12]
 80104fe:	461c      	mov	r4, r3
 8010500:	6988      	ldr	r0, [r1, #24]
 8010502:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8010506:	42b8      	cmp	r0, r7
 8010508:	f3c4 0409 	ubfx	r4, r4, #0, #10
 801050c:	db5b      	blt.n	80105c6 <awe_modScalerSymmetricFadingProcess+0x10a>
 801050e:	2c00      	cmp	r4, #0
 8010510:	f000 8097 	beq.w	8010642 <awe_modScalerSymmetricFadingProcess+0x186>
 8010514:	00a5      	lsls	r5, r4, #2
 8010516:	1bc3      	subs	r3, r0, r7
 8010518:	9302      	str	r3, [sp, #8]
 801051a:	fb05 f907 	mul.w	r9, r5, r7
 801051e:	2600      	movs	r6, #0
 8010520:	f8d8 3000 	ldr.w	r3, [r8]
 8010524:	68c8      	ldr	r0, [r1, #12]
 8010526:	68da      	ldr	r2, [r3, #12]
 8010528:	ed9a 7a0f 	vldr	s14, [sl, #60]	@ 0x3c
 801052c:	2f00      	cmp	r7, #0
 801052e:	4430      	add	r0, r6
 8010530:	4432      	add	r2, r6
 8010532:	dd11      	ble.n	8010558 <awe_modScalerSymmetricFadingProcess+0x9c>
 8010534:	4684      	mov	ip, r0
 8010536:	4611      	mov	r1, r2
 8010538:	2300      	movs	r3, #0
 801053a:	eddc 7a00 	vldr	s15, [ip]
 801053e:	3301      	adds	r3, #1
 8010540:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010544:	42bb      	cmp	r3, r7
 8010546:	edc1 7a00 	vstr	s15, [r1]
 801054a:	ee27 7a08 	vmul.f32	s14, s14, s16
 801054e:	44ac      	add	ip, r5
 8010550:	4429      	add	r1, r5
 8010552:	d1f2      	bne.n	801053a <awe_modScalerSymmetricFadingProcess+0x7e>
 8010554:	4448      	add	r0, r9
 8010556:	444a      	add	r2, r9
 8010558:	9b02      	ldr	r3, [sp, #8]
 801055a:	9300      	str	r3, [sp, #0]
 801055c:	3604      	adds	r6, #4
 801055e:	eeb0 0a68 	vmov.f32	s0, s17
 8010562:	4623      	mov	r3, r4
 8010564:	4621      	mov	r1, r4
 8010566:	f00c fee5 	bl	801d334 <awe_vecScale>
 801056a:	42b5      	cmp	r5, r6
 801056c:	d057      	beq.n	801061e <awe_modScalerSymmetricFadingProcess+0x162>
 801056e:	f8db 1000 	ldr.w	r1, [fp]
 8010572:	e7d5      	b.n	8010520 <awe_modScalerSymmetricFadingProcess+0x64>
 8010574:	b316      	cbz	r6, 80105bc <awe_modScalerSymmetricFadingProcess+0x100>
 8010576:	f108 4580 	add.w	r5, r8, #1073741824	@ 0x40000000
 801057a:	3d01      	subs	r5, #1
 801057c:	4690      	mov	r8, r2
 801057e:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 8010582:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8010586:	4619      	mov	r1, r3
 8010588:	e002      	b.n	8010590 <awe_modScalerSymmetricFadingProcess+0xd4>
 801058a:	f8d8 3000 	ldr.w	r3, [r8]
 801058e:	6959      	ldr	r1, [r3, #20]
 8010590:	f858 2b04 	ldr.w	r2, [r8], #4
 8010594:	f855 4f04 	ldr.w	r4, [r5, #4]!
 8010598:	6993      	ldr	r3, [r2, #24]
 801059a:	68d0      	ldr	r0, [r2, #12]
 801059c:	68e2      	ldr	r2, [r4, #12]
 801059e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80105a2:	f3c1 0109 	ubfx	r1, r1, #0, #10
 80105a6:	fb01 f103 	mul.w	r1, r1, r3
 80105aa:	2301      	movs	r3, #1
 80105ac:	9100      	str	r1, [sp, #0]
 80105ae:	eeb0 0a68 	vmov.f32	s0, s17
 80105b2:	4619      	mov	r1, r3
 80105b4:	f00c febe 	bl	801d334 <awe_vecScale>
 80105b8:	4546      	cmp	r6, r8
 80105ba:	d1e6      	bne.n	801058a <awe_modScalerSymmetricFadingProcess+0xce>
 80105bc:	b005      	add	sp, #20
 80105be:	ecbd 8b02 	vpop	{d8}
 80105c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105c6:	b1f4      	cbz	r4, 8010606 <awe_modScalerSymmetricFadingProcess+0x14a>
 80105c8:	f8d8 3000 	ldr.w	r3, [r8]
 80105cc:	68ce      	ldr	r6, [r1, #12]
 80105ce:	68dd      	ldr	r5, [r3, #12]
 80105d0:	00a4      	lsls	r4, r4, #2
 80105d2:	eb04 0c05 	add.w	ip, r4, r5
 80105d6:	4633      	mov	r3, r6
 80105d8:	462a      	mov	r2, r5
 80105da:	ed9a 7a0f 	vldr	s14, [sl, #60]	@ 0x3c
 80105de:	b168      	cbz	r0, 80105fc <awe_modScalerSymmetricFadingProcess+0x140>
 80105e0:	2100      	movs	r1, #0
 80105e2:	edd3 7a00 	vldr	s15, [r3]
 80105e6:	3101      	adds	r1, #1
 80105e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80105ec:	4288      	cmp	r0, r1
 80105ee:	edc2 7a00 	vstr	s15, [r2]
 80105f2:	ee27 7a08 	vmul.f32	s14, s14, s16
 80105f6:	4423      	add	r3, r4
 80105f8:	4422      	add	r2, r4
 80105fa:	d1f2      	bne.n	80105e2 <awe_modScalerSymmetricFadingProcess+0x126>
 80105fc:	3504      	adds	r5, #4
 80105fe:	45ac      	cmp	ip, r5
 8010600:	f106 0604 	add.w	r6, r6, #4
 8010604:	d1e7      	bne.n	80105d6 <awe_modScalerSymmetricFadingProcess+0x11a>
 8010606:	1a3c      	subs	r4, r7, r0
 8010608:	9b03      	ldr	r3, [sp, #12]
 801060a:	455b      	cmp	r3, fp
 801060c:	f108 0804 	add.w	r8, r8, #4
 8010610:	d00e      	beq.n	8010630 <awe_modScalerSymmetricFadingProcess+0x174>
 8010612:	f85b 1f04 	ldr.w	r1, [fp, #4]!
 8010616:	f8da 7030 	ldr.w	r7, [sl, #48]	@ 0x30
 801061a:	694c      	ldr	r4, [r1, #20]
 801061c:	e770      	b.n	8010500 <awe_modScalerSymmetricFadingProcess+0x44>
 801061e:	9b03      	ldr	r3, [sp, #12]
 8010620:	455b      	cmp	r3, fp
 8010622:	eeb0 7a68 	vmov.f32	s14, s17
 8010626:	f04f 0400 	mov.w	r4, #0
 801062a:	f108 0804 	add.w	r8, r8, #4
 801062e:	d1f0      	bne.n	8010612 <awe_modScalerSymmetricFadingProcess+0x156>
 8010630:	ed8a 7a0f 	vstr	s14, [sl, #60]	@ 0x3c
 8010634:	f8ca 4030 	str.w	r4, [sl, #48]	@ 0x30
 8010638:	b005      	add	sp, #20
 801063a:	ecbd 8b02 	vpop	{d8}
 801063e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010642:	eeb0 7a68 	vmov.f32	s14, s17
 8010646:	e7df      	b.n	8010608 <awe_modScalerSymmetricFadingProcess+0x14c>

08010648 <awe_modScalerSymmetricFadingSet>:
 8010648:	b510      	push	{r4, lr}
 801064a:	6903      	ldr	r3, [r0, #16]
 801064c:	ed90 7a09 	vldr	s14, [r0, #36]	@ 0x24
 8010650:	681b      	ldr	r3, [r3, #0]
 8010652:	eddf 7a3a 	vldr	s15, [pc, #232]	@ 801073c <awe_modScalerSymmetricFadingSet+0xf4>
 8010656:	ed2d 8b02 	vpush	{d8}
 801065a:	ed93 8a04 	vldr	s16, [r3, #16]
 801065e:	ee28 8a07 	vmul.f32	s16, s16, s14
 8010662:	058b      	lsls	r3, r1, #22
 8010664:	4604      	mov	r4, r0
 8010666:	ee28 8a27 	vmul.f32	s16, s16, s15
 801066a:	d503      	bpl.n	8010674 <awe_modScalerSymmetricFadingSet+0x2c>
 801066c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8010670:	edc4 7a0c 	vstr	s15, [r4, #48]	@ 0x30
 8010674:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010676:	edd4 7a08 	vldr	s15, [r4, #32]
 801067a:	2b00      	cmp	r3, #0
 801067c:	d153      	bne.n	8010726 <awe_modScalerSymmetricFadingSet+0xde>
 801067e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010682:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801068a:	d805      	bhi.n	8010698 <awe_modScalerSymmetricFadingSet+0x50>
 801068c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8010740 <awe_modScalerSymmetricFadingSet+0xf8>
 8010690:	eef0 7a47 	vmov.f32	s15, s14
 8010694:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 8010698:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 801069c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80106a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106a4:	d805      	bhi.n	80106b2 <awe_modScalerSymmetricFadingSet+0x6a>
 80106a6:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8010740 <awe_modScalerSymmetricFadingSet+0xf8>
 80106aa:	eeb0 7a66 	vmov.f32	s14, s13
 80106ae:	edc4 6a0f 	vstr	s13, [r4, #60]	@ 0x3c
 80106b2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80106b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106ba:	dd30      	ble.n	801071e <awe_modScalerSymmetricFadingSet+0xd6>
 80106bc:	ee87 0a87 	vdiv.f32	s0, s15, s14
 80106c0:	eddf 7a20 	vldr	s15, [pc, #128]	@ 8010744 <awe_modScalerSymmetricFadingSet+0xfc>
 80106c4:	eeb0 0ac0 	vabs.f32	s0, s0
 80106c8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80106cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106d0:	d51e      	bpl.n	8010710 <awe_modScalerSymmetricFadingSet+0xc8>
 80106d2:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8010748 <awe_modScalerSymmetricFadingSet+0x100>
 80106d6:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 801074c <awe_modScalerSymmetricFadingSet+0x104>
 80106da:	ee87 0a88 	vdiv.f32	s0, s15, s16
 80106de:	ee20 0a07 	vmul.f32	s0, s0, s14
 80106e2:	f01e f88b 	bl	802e7fc <expf>
 80106e6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80106ea:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 80106ee:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 80106f2:	eeb4 7a67 	vcmp.f32	s14, s15
 80106f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106fa:	d005      	beq.n	8010708 <awe_modScalerSymmetricFadingSet+0xc0>
 80106fc:	eebd 8ac8 	vcvt.s32.f32	s16, s16
 8010700:	edc4 7a0e 	vstr	s15, [r4, #56]	@ 0x38
 8010704:	ed84 8a0c 	vstr	s16, [r4, #48]	@ 0x30
 8010708:	ecbd 8b02 	vpop	{d8}
 801070c:	2000      	movs	r0, #0
 801070e:	bd10      	pop	{r4, pc}
 8010710:	f01e f8ca 	bl	802e8a8 <logf>
 8010714:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8010750 <awe_modScalerSymmetricFadingSet+0x108>
 8010718:	ee60 7a27 	vmul.f32	s15, s0, s15
 801071c:	e7db      	b.n	80106d6 <awe_modScalerSymmetricFadingSet+0x8e>
 801071e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8010722:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8010724:	e7e3      	b.n	80106ee <awe_modScalerSymmetricFadingSet+0xa6>
 8010726:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 801074c <awe_modScalerSymmetricFadingSet+0x104>
 801072a:	ee27 0a80 	vmul.f32	s0, s15, s0
 801072e:	f01e f865 	bl	802e7fc <expf>
 8010732:	eef0 7a40 	vmov.f32	s15, s0
 8010736:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 801073a:	e7a2      	b.n	8010682 <awe_modScalerSymmetricFadingSet+0x3a>
 801073c:	3a83126f 	.word	0x3a83126f
 8010740:	2edbe708 	.word	0x2edbe708
 8010744:	00800000 	.word	0x00800000
 8010748:	c43da61e 	.word	0xc43da61e
 801074c:	3debc8e3 	.word	0x3debc8e3
 8010750:	410af967 	.word	0x410af967

08010754 <awe_modScalerSymmetricFadingV2Process>:
 8010754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010758:	6983      	ldr	r3, [r0, #24]
 801075a:	f8d0 9010 	ldr.w	r9, [r0, #16]
 801075e:	b2da      	uxtb	r2, r3
 8010760:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8010764:	429a      	cmp	r2, r3
 8010766:	bf14      	ite	ne
 8010768:	2501      	movne	r5, #1
 801076a:	2500      	moveq	r5, #0
 801076c:	ed2d 8b02 	vpush	{d8}
 8010770:	f859 3025 	ldr.w	r3, [r9, r5, lsl #2]
 8010774:	ea4f 0b85 	mov.w	fp, r5, lsl #2
 8010778:	b085      	sub	sp, #20
 801077a:	4607      	mov	r7, r0
 801077c:	eb09 0a0b 	add.w	sl, r9, fp
 8010780:	e9d3 8405 	ldrd	r8, r4, [r3, #20]
 8010784:	d07d      	beq.n	8010882 <awe_modScalerSymmetricFadingV2Process+0x12e>
 8010786:	f8d9 1000 	ldr.w	r1, [r9]
 801078a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 801078c:	68c9      	ldr	r1, [r1, #12]
 801078e:	edd3 8a04 	vldr	s17, [r3, #16]
 8010792:	ed91 8a00 	vldr	s16, [r1]
 8010796:	2a00      	cmp	r2, #0
 8010798:	f040 8094 	bne.w	80108c4 <awe_modScalerSymmetricFadingV2Process+0x170>
 801079c:	eddf 7a74 	vldr	s15, [pc, #464]	@ 8010970 <awe_modScalerSymmetricFadingV2Process+0x21c>
 80107a0:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 80107a4:	eeb4 8a67 	vcmp.f32	s16, s15
 80107a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107ac:	bf98      	it	ls
 80107ae:	eeb0 8a67 	vmovls.f32	s16, s15
 80107b2:	eeb4 7a48 	vcmp.f32	s14, s16
 80107b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107ba:	d064      	beq.n	8010886 <awe_modScalerSymmetricFadingV2Process+0x132>
 80107bc:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80107c0:	ed9f 0a6c 	vldr	s0, [pc, #432]	@ 8010974 <awe_modScalerSymmetricFadingV2Process+0x220>
 80107c4:	ee68 8aa7 	vmul.f32	s17, s17, s15
 80107c8:	ee28 0a80 	vmul.f32	s0, s17, s0
 80107cc:	f01e fdb6 	bl	802f33c <floorf>
 80107d0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80107d4:	ee17 6a90 	vmov	r6, s15
 80107d8:	2e00      	cmp	r6, #0
 80107da:	f340 80c2 	ble.w	8010962 <awe_modScalerSymmetricFadingV2Process+0x20e>
 80107de:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 80107e2:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8010978 <awe_modScalerSymmetricFadingV2Process+0x224>
 80107e6:	ee88 0a07 	vdiv.f32	s0, s16, s14
 80107ea:	eeb0 0ac0 	vabs.f32	s0, s0
 80107ee:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80107f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107f6:	f140 80ad 	bpl.w	8010954 <awe_modScalerSymmetricFadingV2Process+0x200>
 80107fa:	eddf 7a60 	vldr	s15, [pc, #384]	@ 801097c <awe_modScalerSymmetricFadingV2Process+0x228>
 80107fe:	ed9f 7a60 	vldr	s14, [pc, #384]	@ 8010980 <awe_modScalerSymmetricFadingV2Process+0x22c>
 8010802:	ee06 6a90 	vmov	s13, r6
 8010806:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801080a:	ee87 0aa6 	vdiv.f32	s0, s15, s13
 801080e:	ee20 0a07 	vmul.f32	s0, s0, s14
 8010812:	f01d fff3 	bl	802e7fc <expf>
 8010816:	eef0 8a40 	vmov.f32	s17, s0
 801081a:	633e      	str	r6, [r7, #48]	@ 0x30
 801081c:	ed87 8a0e 	vstr	s16, [r7, #56]	@ 0x38
 8010820:	b3b6      	cbz	r6, 8010890 <awe_modScalerSymmetricFadingV2Process+0x13c>
 8010822:	f3c8 63c0 	ubfx	r3, r8, #27, #1
 8010826:	bb9b      	cbnz	r3, 8010890 <awe_modScalerSymmetricFadingV2Process+0x13c>
 8010828:	f3c4 0010 	ubfx	r0, r4, #0, #17
 801082c:	42b0      	cmp	r0, r6
 801082e:	f3c8 0409 	ubfx	r4, r8, #0, #10
 8010832:	da50      	bge.n	80108d6 <awe_modScalerSymmetricFadingV2Process+0x182>
 8010834:	2c00      	cmp	r4, #0
 8010836:	f000 8097 	beq.w	8010968 <awe_modScalerSymmetricFadingV2Process+0x214>
 801083a:	f8da 2004 	ldr.w	r2, [sl, #4]
 801083e:	f859 3025 	ldr.w	r3, [r9, r5, lsl #2]
 8010842:	68d5      	ldr	r5, [r2, #12]
 8010844:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010848:	00a4      	lsls	r4, r4, #2
 801084a:	eb04 0e05 	add.w	lr, r4, r5
 801084e:	4663      	mov	r3, ip
 8010850:	462a      	mov	r2, r5
 8010852:	ed97 8a0f 	vldr	s16, [r7, #60]	@ 0x3c
 8010856:	b168      	cbz	r0, 8010874 <awe_modScalerSymmetricFadingV2Process+0x120>
 8010858:	2100      	movs	r1, #0
 801085a:	edd3 7a00 	vldr	s15, [r3]
 801085e:	3101      	adds	r1, #1
 8010860:	ee67 7a88 	vmul.f32	s15, s15, s16
 8010864:	4288      	cmp	r0, r1
 8010866:	edc2 7a00 	vstr	s15, [r2]
 801086a:	ee28 8a28 	vmul.f32	s16, s16, s17
 801086e:	4423      	add	r3, r4
 8010870:	4422      	add	r2, r4
 8010872:	d1f2      	bne.n	801085a <awe_modScalerSymmetricFadingV2Process+0x106>
 8010874:	3504      	adds	r5, #4
 8010876:	45ae      	cmp	lr, r5
 8010878:	f10c 0c04 	add.w	ip, ip, #4
 801087c:	d1e7      	bne.n	801084e <awe_modScalerSymmetricFadingV2Process+0xfa>
 801087e:	1a34      	subs	r4, r6, r0
 8010880:	e05e      	b.n	8010940 <awe_modScalerSymmetricFadingV2Process+0x1ec>
 8010882:	ed90 8a0d 	vldr	s16, [r0, #52]	@ 0x34
 8010886:	6b3e      	ldr	r6, [r7, #48]	@ 0x30
 8010888:	edd7 8a0b 	vldr	s17, [r7, #44]	@ 0x2c
 801088c:	2e00      	cmp	r6, #0
 801088e:	d1c8      	bne.n	8010822 <awe_modScalerSymmetricFadingV2Process+0xce>
 8010890:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8010894:	f8da 2004 	ldr.w	r2, [sl, #4]
 8010898:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 801089c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80108a0:	f3c1 0109 	ubfx	r1, r1, #0, #10
 80108a4:	fb01 f103 	mul.w	r1, r1, r3
 80108a8:	2301      	movs	r3, #1
 80108aa:	68d2      	ldr	r2, [r2, #12]
 80108ac:	68c0      	ldr	r0, [r0, #12]
 80108ae:	9100      	str	r1, [sp, #0]
 80108b0:	eeb0 0a48 	vmov.f32	s0, s16
 80108b4:	4619      	mov	r1, r3
 80108b6:	f00c fd3d 	bl	801d334 <awe_vecScale>
 80108ba:	b005      	add	sp, #20
 80108bc:	ecbd 8b02 	vpop	{d8}
 80108c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108c4:	ed9f 0a2e 	vldr	s0, [pc, #184]	@ 8010980 <awe_modScalerSymmetricFadingV2Process+0x22c>
 80108c8:	ee28 0a00 	vmul.f32	s0, s16, s0
 80108cc:	f01d ff96 	bl	802e7fc <expf>
 80108d0:	eeb0 8a40 	vmov.f32	s16, s0
 80108d4:	e762      	b.n	801079c <awe_modScalerSymmetricFadingV2Process+0x48>
 80108d6:	b39c      	cbz	r4, 8010940 <awe_modScalerSymmetricFadingV2Process+0x1ec>
 80108d8:	f10b 0b04 	add.w	fp, fp, #4
 80108dc:	00a5      	lsls	r5, r4, #2
 80108de:	1b82      	subs	r2, r0, r6
 80108e0:	44d9      	add	r9, fp
 80108e2:	9203      	str	r2, [sp, #12]
 80108e4:	4698      	mov	r8, r3
 80108e6:	fb05 fb06 	mul.w	fp, r5, r6
 80108ea:	f8da 2000 	ldr.w	r2, [sl]
 80108ee:	f8d9 3000 	ldr.w	r3, [r9]
 80108f2:	68d0      	ldr	r0, [r2, #12]
 80108f4:	68da      	ldr	r2, [r3, #12]
 80108f6:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 80108fa:	2e00      	cmp	r6, #0
 80108fc:	4440      	add	r0, r8
 80108fe:	4442      	add	r2, r8
 8010900:	dd11      	ble.n	8010926 <awe_modScalerSymmetricFadingV2Process+0x1d2>
 8010902:	4684      	mov	ip, r0
 8010904:	4611      	mov	r1, r2
 8010906:	2300      	movs	r3, #0
 8010908:	eddc 7a00 	vldr	s15, [ip]
 801090c:	3301      	adds	r3, #1
 801090e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010912:	42b3      	cmp	r3, r6
 8010914:	edc1 7a00 	vstr	s15, [r1]
 8010918:	ee27 7a28 	vmul.f32	s14, s14, s17
 801091c:	44ac      	add	ip, r5
 801091e:	4429      	add	r1, r5
 8010920:	d1f2      	bne.n	8010908 <awe_modScalerSymmetricFadingV2Process+0x1b4>
 8010922:	4458      	add	r0, fp
 8010924:	445a      	add	r2, fp
 8010926:	9b03      	ldr	r3, [sp, #12]
 8010928:	9300      	str	r3, [sp, #0]
 801092a:	f108 0804 	add.w	r8, r8, #4
 801092e:	eeb0 0a48 	vmov.f32	s0, s16
 8010932:	4623      	mov	r3, r4
 8010934:	4621      	mov	r1, r4
 8010936:	f00c fcfd 	bl	801d334 <awe_vecScale>
 801093a:	4545      	cmp	r5, r8
 801093c:	d1d5      	bne.n	80108ea <awe_modScalerSymmetricFadingV2Process+0x196>
 801093e:	2400      	movs	r4, #0
 8010940:	edc7 8a0b 	vstr	s17, [r7, #44]	@ 0x2c
 8010944:	ed87 8a0f 	vstr	s16, [r7, #60]	@ 0x3c
 8010948:	633c      	str	r4, [r7, #48]	@ 0x30
 801094a:	b005      	add	sp, #20
 801094c:	ecbd 8b02 	vpop	{d8}
 8010950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010954:	f01d ffa8 	bl	802e8a8 <logf>
 8010958:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8010984 <awe_modScalerSymmetricFadingV2Process+0x230>
 801095c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8010960:	e74d      	b.n	80107fe <awe_modScalerSymmetricFadingV2Process+0xaa>
 8010962:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 8010966:	e758      	b.n	801081a <awe_modScalerSymmetricFadingV2Process+0xc6>
 8010968:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 801096c:	e787      	b.n	801087e <awe_modScalerSymmetricFadingV2Process+0x12a>
 801096e:	bf00      	nop
 8010970:	2edbe708 	.word	0x2edbe708
 8010974:	3a83126f 	.word	0x3a83126f
 8010978:	00800000 	.word	0x00800000
 801097c:	c43da61e 	.word	0xc43da61e
 8010980:	3debc8e3 	.word	0x3debc8e3
 8010984:	410af967 	.word	0x410af967

08010988 <awe_modScalerSymmetricFadingV2Set>:
 8010988:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 801098c:	ed9f 7a44 	vldr	s14, [pc, #272]	@ 8010aa0 <awe_modScalerSymmetricFadingV2Set+0x118>
 8010990:	6983      	ldr	r3, [r0, #24]
 8010992:	ed9f 0a44 	vldr	s0, [pc, #272]	@ 8010aa4 <awe_modScalerSymmetricFadingV2Set+0x11c>
 8010996:	eef4 7ac7 	vcmpe.f32	s15, s14
 801099a:	b570      	push	{r4, r5, r6, lr}
 801099c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109a0:	4604      	mov	r4, r0
 80109a2:	b2da      	uxtb	r2, r3
 80109a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80109a8:	6900      	ldr	r0, [r0, #16]
 80109aa:	bf44      	itt	mi
 80109ac:	ed84 7a09 	vstrmi	s14, [r4, #36]	@ 0x24
 80109b0:	eef0 7a47 	vmovmi.f32	s15, s14
 80109b4:	1ad3      	subs	r3, r2, r3
 80109b6:	bf18      	it	ne
 80109b8:	2301      	movne	r3, #1
 80109ba:	460e      	mov	r6, r1
 80109bc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80109c0:	ed93 7a04 	vldr	s14, [r3, #16]
 80109c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80109c8:	ee27 0a80 	vmul.f32	s0, s15, s0
 80109cc:	f01e fcb6 	bl	802f33c <floorf>
 80109d0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80109d4:	05b3      	lsls	r3, r6, #22
 80109d6:	ee17 5a90 	vmov	r5, s15
 80109da:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80109dc:	bf48      	it	mi
 80109de:	6325      	strmi	r5, [r4, #48]	@ 0x30
 80109e0:	edd4 7a08 	vldr	s15, [r4, #32]
 80109e4:	2b00      	cmp	r3, #0
 80109e6:	d14f      	bne.n	8010a88 <awe_modScalerSymmetricFadingV2Set+0x100>
 80109e8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80109ec:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 8010aa8 <awe_modScalerSymmetricFadingV2Set+0x120>
 80109f0:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8010aa8 <awe_modScalerSymmetricFadingV2Set+0x120>
 80109f4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80109f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109fc:	bf9c      	itt	ls
 80109fe:	eef0 7a47 	vmovls.f32	s15, s14
 8010a02:	ed84 7a0d 	vstrls	s14, [r4, #52]	@ 0x34
 8010a06:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8010a0a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8010a0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a12:	bf9c      	itt	ls
 8010a14:	eeb0 7a66 	vmovls.f32	s14, s13
 8010a18:	edc4 6a0f 	vstrls	s13, [r4, #60]	@ 0x3c
 8010a1c:	2d00      	cmp	r5, #0
 8010a1e:	dd2f      	ble.n	8010a80 <awe_modScalerSymmetricFadingV2Set+0xf8>
 8010a20:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8010a24:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8010aac <awe_modScalerSymmetricFadingV2Set+0x124>
 8010a28:	eeb0 0ac0 	vabs.f32	s0, s0
 8010a2c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8010a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a34:	d51d      	bpl.n	8010a72 <awe_modScalerSymmetricFadingV2Set+0xea>
 8010a36:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8010ab0 <awe_modScalerSymmetricFadingV2Set+0x128>
 8010a3a:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8010ab4 <awe_modScalerSymmetricFadingV2Set+0x12c>
 8010a3e:	ee06 5a90 	vmov	s13, r5
 8010a42:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010a46:	ee87 0aa6 	vdiv.f32	s0, s15, s13
 8010a4a:	ee20 0a07 	vmul.f32	s0, s0, s14
 8010a4e:	f01d fed5 	bl	802e7fc <expf>
 8010a52:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8010a56:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 8010a5a:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 8010a5e:	eeb4 7a67 	vcmp.f32	s14, s15
 8010a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a66:	bf1c      	itt	ne
 8010a68:	6325      	strne	r5, [r4, #48]	@ 0x30
 8010a6a:	edc4 7a0e 	vstrne	s15, [r4, #56]	@ 0x38
 8010a6e:	2000      	movs	r0, #0
 8010a70:	bd70      	pop	{r4, r5, r6, pc}
 8010a72:	f01d ff19 	bl	802e8a8 <logf>
 8010a76:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8010ab8 <awe_modScalerSymmetricFadingV2Set+0x130>
 8010a7a:	ee60 7a27 	vmul.f32	s15, s0, s15
 8010a7e:	e7dc      	b.n	8010a3a <awe_modScalerSymmetricFadingV2Set+0xb2>
 8010a80:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8010a84:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8010a86:	e7e8      	b.n	8010a5a <awe_modScalerSymmetricFadingV2Set+0xd2>
 8010a88:	ed9f 0a0a 	vldr	s0, [pc, #40]	@ 8010ab4 <awe_modScalerSymmetricFadingV2Set+0x12c>
 8010a8c:	ee27 0a80 	vmul.f32	s0, s15, s0
 8010a90:	f01d feb4 	bl	802e7fc <expf>
 8010a94:	eef0 7a40 	vmov.f32	s15, s0
 8010a98:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 8010a9c:	e7a6      	b.n	80109ec <awe_modScalerSymmetricFadingV2Set+0x64>
 8010a9e:	bf00      	nop
 8010aa0:	00000000 	.word	0x00000000
 8010aa4:	3a83126f 	.word	0x3a83126f
 8010aa8:	2edbe708 	.word	0x2edbe708
 8010aac:	00800000 	.word	0x00800000
 8010ab0:	c43da61e 	.word	0xc43da61e
 8010ab4:	3debc8e3 	.word	0x3debc8e3
 8010ab8:	410af967 	.word	0x410af967

08010abc <awe_modScalerV2Process>:
 8010abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ac0:	6986      	ldr	r6, [r0, #24]
 8010ac2:	6904      	ldr	r4, [r0, #16]
 8010ac4:	ed2d 8b02 	vpush	{d8}
 8010ac8:	fa5f f886 	uxtb.w	r8, r6
 8010acc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8010ad0:	45b0      	cmp	r8, r6
 8010ad2:	b084      	sub	sp, #16
 8010ad4:	4607      	mov	r7, r0
 8010ad6:	6823      	ldr	r3, [r4, #0]
 8010ad8:	d078      	beq.n	8010bcc <awe_modScalerV2Process+0x110>
 8010ada:	68da      	ldr	r2, [r3, #12]
 8010adc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010ade:	ed92 0a00 	vldr	s0, [r2]
 8010ae2:	2b00      	cmp	r3, #0
 8010ae4:	d16b      	bne.n	8010bbe <awe_modScalerV2Process+0x102>
 8010ae6:	6863      	ldr	r3, [r4, #4]
 8010ae8:	ed97 8a0b 	vldr	s16, [r7, #44]	@ 0x2c
 8010aec:	695b      	ldr	r3, [r3, #20]
 8010aee:	ee20 8a08 	vmul.f32	s16, s0, s16
 8010af2:	f3c3 63c0 	ubfx	r3, r3, #27, #1
 8010af6:	2501      	movs	r5, #1
 8010af8:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8010afc:	eef5 7a40 	vcmp.f32	s15, #0.0
 8010b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b04:	d033      	beq.n	8010b6e <awe_modScalerV2Process+0xb2>
 8010b06:	bb93      	cbnz	r3, 8010b6e <awe_modScalerV2Process+0xb2>
 8010b08:	f8d7 c030 	ldr.w	ip, [r7, #48]	@ 0x30
 8010b0c:	f8cd c00c 	str.w	ip, [sp, #12]
 8010b10:	b336      	cbz	r6, 8010b60 <awe_modScalerV2Process+0xa4>
 8010b12:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8010b16:	3d01      	subs	r5, #1
 8010b18:	4446      	add	r6, r8
 8010b1a:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8010b1e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8010b22:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8010b26:	e001      	b.n	8010b2c <awe_modScalerV2Process+0x70>
 8010b28:	f8d7 c030 	ldr.w	ip, [r7, #48]	@ 0x30
 8010b2c:	f855 0f04 	ldr.w	r0, [r5, #4]!
 8010b30:	f854 2b04 	ldr.w	r2, [r4], #4
 8010b34:	6983      	ldr	r3, [r0, #24]
 8010b36:	68d1      	ldr	r1, [r2, #12]
 8010b38:	6942      	ldr	r2, [r0, #20]
 8010b3a:	edd7 0a0d 	vldr	s1, [r7, #52]	@ 0x34
 8010b3e:	68c0      	ldr	r0, [r0, #12]
 8010b40:	f8cd c00c 	str.w	ip, [sp, #12]
 8010b44:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8010b48:	9300      	str	r3, [sp, #0]
 8010b4a:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8010b4e:	eeb0 0a48 	vmov.f32	s0, s16
 8010b52:	ab03      	add	r3, sp, #12
 8010b54:	f00d fae2 	bl	801e11c <awe_vecScaleSmooth_Nch>
 8010b58:	42a6      	cmp	r6, r4
 8010b5a:	d1e5      	bne.n	8010b28 <awe_modScalerV2Process+0x6c>
 8010b5c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8010b60:	f8c7 c030 	str.w	ip, [r7, #48]	@ 0x30
 8010b64:	b004      	add	sp, #16
 8010b66:	ecbd 8b02 	vpop	{d8}
 8010b6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010b6e:	2e00      	cmp	r6, #0
 8010b70:	d0f8      	beq.n	8010b64 <awe_modScalerV2Process+0xa8>
 8010b72:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8010b76:	3d01      	subs	r5, #1
 8010b78:	4446      	add	r6, r8
 8010b7a:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8010b7e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8010b82:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8010b86:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8010b8a:	f854 7b04 	ldr.w	r7, [r4], #4
 8010b8e:	68d0      	ldr	r0, [r2, #12]
 8010b90:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 8010b94:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8010b98:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8010b9c:	fb01 f103 	mul.w	r1, r1, r3
 8010ba0:	2301      	movs	r3, #1
 8010ba2:	68fa      	ldr	r2, [r7, #12]
 8010ba4:	9100      	str	r1, [sp, #0]
 8010ba6:	eeb0 0a48 	vmov.f32	s0, s16
 8010baa:	4619      	mov	r1, r3
 8010bac:	f00c fbc2 	bl	801d334 <awe_vecScale>
 8010bb0:	42a6      	cmp	r6, r4
 8010bb2:	d1e8      	bne.n	8010b86 <awe_modScalerV2Process+0xca>
 8010bb4:	b004      	add	sp, #16
 8010bb6:	ecbd 8b02 	vpop	{d8}
 8010bba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bbe:	eddf 7a07 	vldr	s15, [pc, #28]	@ 8010bdc <awe_modScalerV2Process+0x120>
 8010bc2:	ee20 0a27 	vmul.f32	s0, s0, s15
 8010bc6:	f01d fe19 	bl	802e7fc <expf>
 8010bca:	e78c      	b.n	8010ae6 <awe_modScalerV2Process+0x2a>
 8010bcc:	695b      	ldr	r3, [r3, #20]
 8010bce:	ed90 8a0b 	vldr	s16, [r0, #44]	@ 0x2c
 8010bd2:	f3c3 63c0 	ubfx	r3, r3, #27, #1
 8010bd6:	2500      	movs	r5, #0
 8010bd8:	e78e      	b.n	8010af8 <awe_modScalerV2Process+0x3c>
 8010bda:	bf00      	nop
 8010bdc:	3debc8e3 	.word	0x3debc8e3

08010be0 <awe_modScalerV2Set>:
 8010be0:	058b      	lsls	r3, r1, #22
 8010be2:	b510      	push	{r4, lr}
 8010be4:	4604      	mov	r4, r0
 8010be6:	d407      	bmi.n	8010bf8 <awe_modScalerV2Set+0x18>
 8010be8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010bea:	edd4 7a08 	vldr	s15, [r4, #32]
 8010bee:	b99b      	cbnz	r3, 8010c18 <awe_modScalerV2Set+0x38>
 8010bf0:	edc4 7a0b 	vstr	s15, [r4, #44]	@ 0x2c
 8010bf4:	2000      	movs	r0, #0
 8010bf6:	bd10      	pop	{r4, pc}
 8010bf8:	6903      	ldr	r3, [r0, #16]
 8010bfa:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 8010bfe:	681b      	ldr	r3, [r3, #0]
 8010c00:	2001      	movs	r0, #1
 8010c02:	edd3 0a04 	vldr	s1, [r3, #16]
 8010c06:	f012 fecb 	bl	80239a0 <design_smoother>
 8010c0a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010c0c:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 8010c10:	edd4 7a08 	vldr	s15, [r4, #32]
 8010c14:	2b00      	cmp	r3, #0
 8010c16:	d0eb      	beq.n	8010bf0 <awe_modScalerV2Set+0x10>
 8010c18:	ed9f 0a04 	vldr	s0, [pc, #16]	@ 8010c2c <awe_modScalerV2Set+0x4c>
 8010c1c:	ee27 0a80 	vmul.f32	s0, s15, s0
 8010c20:	f01d fdec 	bl	802e7fc <expf>
 8010c24:	2000      	movs	r0, #0
 8010c26:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 8010c2a:	bd10      	pop	{r4, pc}
 8010c2c:	3debc8e3 	.word	0x3debc8e3

08010c30 <awe_modSecondOrderFilterSmoothedConstructor>:
 8010c30:	b570      	push	{r4, r5, r6, lr}
 8010c32:	b082      	sub	sp, #8
 8010c34:	4616      	mov	r6, r2
 8010c36:	4605      	mov	r5, r0
 8010c38:	9806      	ldr	r0, [sp, #24]
 8010c3a:	9300      	str	r3, [sp, #0]
 8010c3c:	460a      	mov	r2, r1
 8010c3e:	9001      	str	r0, [sp, #4]
 8010c40:	4633      	mov	r3, r6
 8010c42:	4629      	mov	r1, r5
 8010c44:	480b      	ldr	r0, [pc, #44]	@ (8010c74 <awe_modSecondOrderFilterSmoothedConstructor+0x44>)
 8010c46:	f00f fa7d 	bl	8020144 <BaseClassModule_Constructor>
 8010c4a:	b178      	cbz	r0, 8010c6c <awe_modSecondOrderFilterSmoothedConstructor+0x3c>
 8010c4c:	6833      	ldr	r3, [r6, #0]
 8010c4e:	4604      	mov	r4, r0
 8010c50:	6958      	ldr	r0, [r3, #20]
 8010c52:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8010c56:	00c0      	lsls	r0, r0, #3
 8010c58:	462a      	mov	r2, r5
 8010c5a:	f240 2131 	movw	r1, #561	@ 0x231
 8010c5e:	f00e fd1d 	bl	801f69c <awe_fwMalloc>
 8010c62:	6660      	str	r0, [r4, #100]	@ 0x64
 8010c64:	b110      	cbz	r0, 8010c6c <awe_modSecondOrderFilterSmoothedConstructor+0x3c>
 8010c66:	4620      	mov	r0, r4
 8010c68:	b002      	add	sp, #8
 8010c6a:	bd70      	pop	{r4, r5, r6, pc}
 8010c6c:	2400      	movs	r4, #0
 8010c6e:	4620      	mov	r0, r4
 8010c70:	b002      	add	sp, #8
 8010c72:	bd70      	pop	{r4, r5, r6, pc}
 8010c74:	08034cc4 	.word	0x08034cc4

08010c78 <awe_modSecondOrderFilterSmoothedProcess>:
 8010c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c7c:	6906      	ldr	r6, [r0, #16]
 8010c7e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8010c80:	6832      	ldr	r2, [r6, #0]
 8010c82:	e9d2 5105 	ldrd	r5, r1, [r2, #20]
 8010c86:	b087      	sub	sp, #28
 8010c88:	4607      	mov	r7, r0
 8010c8a:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8010c8e:	f3c1 0910 	ubfx	r9, r1, #0, #17
 8010c92:	2b00      	cmp	r3, #0
 8010c94:	d06b      	beq.n	8010d6e <awe_modSecondOrderFilterSmoothedProcess+0xf6>
 8010c96:	edd0 7a13 	vldr	s15, [r0, #76]	@ 0x4c
 8010c9a:	edd0 6a0e 	vldr	s13, [r0, #56]	@ 0x38
 8010c9e:	ed90 7a18 	vldr	s14, [r0, #96]	@ 0x60
 8010ca2:	eef4 6a67 	vcmp.f32	s13, s15
 8010ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010caa:	d00e      	beq.n	8010cca <awe_modSecondOrderFilterSmoothedProcess+0x52>
 8010cac:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8010cb0:	eef0 5a67 	vmov.f32	s11, s15
 8010cb4:	eee7 5a06 	vfma.f32	s11, s14, s12
 8010cb8:	eef4 5a67 	vcmp.f32	s11, s15
 8010cbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cc0:	bf18      	it	ne
 8010cc2:	eef0 6a65 	vmovne.f32	s13, s11
 8010cc6:	edc0 6a13 	vstr	s13, [r0, #76]	@ 0x4c
 8010cca:	edd7 7a14 	vldr	s15, [r7, #80]	@ 0x50
 8010cce:	edd7 6a0f 	vldr	s13, [r7, #60]	@ 0x3c
 8010cd2:	eef4 6a67 	vcmp.f32	s13, s15
 8010cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cda:	d00e      	beq.n	8010cfa <awe_modSecondOrderFilterSmoothedProcess+0x82>
 8010cdc:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8010ce0:	eef0 5a67 	vmov.f32	s11, s15
 8010ce4:	eee7 5a06 	vfma.f32	s11, s14, s12
 8010ce8:	eef4 5a67 	vcmp.f32	s11, s15
 8010cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cf0:	bf18      	it	ne
 8010cf2:	eef0 6a65 	vmovne.f32	s13, s11
 8010cf6:	edc7 6a14 	vstr	s13, [r7, #80]	@ 0x50
 8010cfa:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 8010cfe:	edd7 6a10 	vldr	s13, [r7, #64]	@ 0x40
 8010d02:	eef4 7a66 	vcmp.f32	s15, s13
 8010d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d0a:	d00e      	beq.n	8010d2a <awe_modSecondOrderFilterSmoothedProcess+0xb2>
 8010d0c:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8010d10:	eef0 5a67 	vmov.f32	s11, s15
 8010d14:	eee7 5a06 	vfma.f32	s11, s14, s12
 8010d18:	eef4 7a65 	vcmp.f32	s15, s11
 8010d1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d20:	bf18      	it	ne
 8010d22:	eef0 6a65 	vmovne.f32	s13, s11
 8010d26:	edc7 6a15 	vstr	s13, [r7, #84]	@ 0x54
 8010d2a:	edd7 7a16 	vldr	s15, [r7, #88]	@ 0x58
 8010d2e:	edd7 6a11 	vldr	s13, [r7, #68]	@ 0x44
 8010d32:	eef4 7a66 	vcmp.f32	s15, s13
 8010d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d3a:	d00e      	beq.n	8010d5a <awe_modSecondOrderFilterSmoothedProcess+0xe2>
 8010d3c:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8010d40:	eef0 5a67 	vmov.f32	s11, s15
 8010d44:	eee7 5a06 	vfma.f32	s11, s14, s12
 8010d48:	eef4 7a65 	vcmp.f32	s15, s11
 8010d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d50:	bf18      	it	ne
 8010d52:	eef0 6a65 	vmovne.f32	s13, s11
 8010d56:	edc7 6a16 	vstr	s13, [r7, #88]	@ 0x58
 8010d5a:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8010d5e:	edd7 6a12 	vldr	s13, [r7, #72]	@ 0x48
 8010d62:	eef4 7a66 	vcmp.f32	s15, s13
 8010d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d6a:	f040 80b7 	bne.w	8010edc <awe_modSecondOrderFilterSmoothedProcess+0x264>
 8010d6e:	2d07      	cmp	r5, #7
 8010d70:	f340 80c6 	ble.w	8010f00 <awe_modSecondOrderFilterSmoothedProcess+0x288>
 8010d74:	f1a5 0408 	sub.w	r4, r5, #8
 8010d78:	08e4      	lsrs	r4, r4, #3
 8010d7a:	3401      	adds	r4, #1
 8010d7c:	f107 0a4c 	add.w	sl, r7, #76	@ 0x4c
 8010d80:	4623      	mov	r3, r4
 8010d82:	ea4f 1b44 	mov.w	fp, r4, lsl #5
 8010d86:	f04f 0800 	mov.w	r8, #0
 8010d8a:	464c      	mov	r4, r9
 8010d8c:	46b9      	mov	r9, r7
 8010d8e:	4657      	mov	r7, sl
 8010d90:	469a      	mov	sl, r3
 8010d92:	e000      	b.n	8010d96 <awe_modSecondOrderFilterSmoothedProcess+0x11e>
 8010d94:	6832      	ldr	r2, [r6, #0]
 8010d96:	6871      	ldr	r1, [r6, #4]
 8010d98:	f8d9 3064 	ldr.w	r3, [r9, #100]	@ 0x64
 8010d9c:	68d0      	ldr	r0, [r2, #12]
 8010d9e:	68ca      	ldr	r2, [r1, #12]
 8010da0:	9402      	str	r4, [sp, #8]
 8010da2:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 8010da6:	4440      	add	r0, r8
 8010da8:	4442      	add	r2, r8
 8010daa:	e9cd 7300 	strd	r7, r3, [sp]
 8010dae:	f108 0820 	add.w	r8, r8, #32
 8010db2:	462b      	mov	r3, r5
 8010db4:	4629      	mov	r1, r5
 8010db6:	f009 f923 	bl	801a000 <awe_vecBiquad_8ch>
 8010dba:	45d8      	cmp	r8, fp
 8010dbc:	d1ea      	bne.n	8010d94 <awe_modSecondOrderFilterSmoothedProcess+0x11c>
 8010dbe:	464f      	mov	r7, r9
 8010dc0:	46a1      	mov	r9, r4
 8010dc2:	4654      	mov	r4, sl
 8010dc4:	00e4      	lsls	r4, r4, #3
 8010dc6:	1eeb      	subs	r3, r5, #3
 8010dc8:	429c      	cmp	r4, r3
 8010dca:	da30      	bge.n	8010e2e <awe_modSecondOrderFilterSmoothedProcess+0x1b6>
 8010dcc:	1f2b      	subs	r3, r5, #4
 8010dce:	1b1b      	subs	r3, r3, r4
 8010dd0:	f023 0303 	bic.w	r3, r3, #3
 8010dd4:	1d22      	adds	r2, r4, #4
 8010dd6:	eb02 0a03 	add.w	sl, r2, r3
 8010dda:	9304      	str	r3, [sp, #16]
 8010ddc:	463b      	mov	r3, r7
 8010dde:	f107 0b4c 	add.w	fp, r7, #76	@ 0x4c
 8010de2:	ea4f 0884 	mov.w	r8, r4, lsl #2
 8010de6:	464f      	mov	r7, r9
 8010de8:	9205      	str	r2, [sp, #20]
 8010dea:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8010dee:	00e4      	lsls	r4, r4, #3
 8010df0:	4699      	mov	r9, r3
 8010df2:	e9d6 1200 	ldrd	r1, r2, [r6]
 8010df6:	f8d9 3064 	ldr.w	r3, [r9, #100]	@ 0x64
 8010dfa:	68c8      	ldr	r0, [r1, #12]
 8010dfc:	68d2      	ldr	r2, [r2, #12]
 8010dfe:	9702      	str	r7, [sp, #8]
 8010e00:	4423      	add	r3, r4
 8010e02:	4442      	add	r2, r8
 8010e04:	4440      	add	r0, r8
 8010e06:	9301      	str	r3, [sp, #4]
 8010e08:	f8cd b000 	str.w	fp, [sp]
 8010e0c:	f108 0810 	add.w	r8, r8, #16
 8010e10:	462b      	mov	r3, r5
 8010e12:	4629      	mov	r1, r5
 8010e14:	f009 f8d6 	bl	8019fc4 <awe_vecBiquad_4ch>
 8010e18:	45d0      	cmp	r8, sl
 8010e1a:	f104 0420 	add.w	r4, r4, #32
 8010e1e:	d1e8      	bne.n	8010df2 <awe_modSecondOrderFilterSmoothedProcess+0x17a>
 8010e20:	464b      	mov	r3, r9
 8010e22:	46b9      	mov	r9, r7
 8010e24:	461f      	mov	r7, r3
 8010e26:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8010e2a:	4413      	add	r3, r2
 8010e2c:	461c      	mov	r4, r3
 8010e2e:	1e6b      	subs	r3, r5, #1
 8010e30:	42a3      	cmp	r3, r4
 8010e32:	dd30      	ble.n	8010e96 <awe_modSecondOrderFilterSmoothedProcess+0x21e>
 8010e34:	1eab      	subs	r3, r5, #2
 8010e36:	1b1b      	subs	r3, r3, r4
 8010e38:	f023 0301 	bic.w	r3, r3, #1
 8010e3c:	1ca2      	adds	r2, r4, #2
 8010e3e:	eb02 0a03 	add.w	sl, r2, r3
 8010e42:	9304      	str	r3, [sp, #16]
 8010e44:	463b      	mov	r3, r7
 8010e46:	f107 0b4c 	add.w	fp, r7, #76	@ 0x4c
 8010e4a:	ea4f 0884 	mov.w	r8, r4, lsl #2
 8010e4e:	464f      	mov	r7, r9
 8010e50:	9205      	str	r2, [sp, #20]
 8010e52:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8010e56:	00e4      	lsls	r4, r4, #3
 8010e58:	4699      	mov	r9, r3
 8010e5a:	e9d6 1200 	ldrd	r1, r2, [r6]
 8010e5e:	f8d9 3064 	ldr.w	r3, [r9, #100]	@ 0x64
 8010e62:	68c8      	ldr	r0, [r1, #12]
 8010e64:	68d2      	ldr	r2, [r2, #12]
 8010e66:	9702      	str	r7, [sp, #8]
 8010e68:	4423      	add	r3, r4
 8010e6a:	4442      	add	r2, r8
 8010e6c:	4440      	add	r0, r8
 8010e6e:	9301      	str	r3, [sp, #4]
 8010e70:	f8cd b000 	str.w	fp, [sp]
 8010e74:	f108 0808 	add.w	r8, r8, #8
 8010e78:	462b      	mov	r3, r5
 8010e7a:	4629      	mov	r1, r5
 8010e7c:	f009 f884 	bl	8019f88 <awe_vecBiquad_2ch>
 8010e80:	45d0      	cmp	r8, sl
 8010e82:	f104 0410 	add.w	r4, r4, #16
 8010e86:	d1e8      	bne.n	8010e5a <awe_modSecondOrderFilterSmoothedProcess+0x1e2>
 8010e88:	464b      	mov	r3, r9
 8010e8a:	46b9      	mov	r9, r7
 8010e8c:	461f      	mov	r7, r3
 8010e8e:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8010e92:	4413      	add	r3, r2
 8010e94:	461c      	mov	r4, r3
 8010e96:	42a5      	cmp	r5, r4
 8010e98:	dd1d      	ble.n	8010ed6 <awe_modSecondOrderFilterSmoothedProcess+0x25e>
 8010e9a:	ea4f 0884 	mov.w	r8, r4, lsl #2
 8010e9e:	f107 0a4c 	add.w	sl, r7, #76	@ 0x4c
 8010ea2:	00e4      	lsls	r4, r4, #3
 8010ea4:	ea4f 0b85 	mov.w	fp, r5, lsl #2
 8010ea8:	e9d6 1200 	ldrd	r1, r2, [r6]
 8010eac:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8010eae:	68c8      	ldr	r0, [r1, #12]
 8010eb0:	68d2      	ldr	r2, [r2, #12]
 8010eb2:	f8cd 9008 	str.w	r9, [sp, #8]
 8010eb6:	4423      	add	r3, r4
 8010eb8:	4442      	add	r2, r8
 8010eba:	4440      	add	r0, r8
 8010ebc:	9301      	str	r3, [sp, #4]
 8010ebe:	f8cd a000 	str.w	sl, [sp]
 8010ec2:	f108 0804 	add.w	r8, r8, #4
 8010ec6:	462b      	mov	r3, r5
 8010ec8:	4629      	mov	r1, r5
 8010eca:	f008 fdf1 	bl	8019ab0 <awe_vecBiquad>
 8010ece:	45c3      	cmp	fp, r8
 8010ed0:	f104 0408 	add.w	r4, r4, #8
 8010ed4:	d1e8      	bne.n	8010ea8 <awe_modSecondOrderFilterSmoothedProcess+0x230>
 8010ed6:	b007      	add	sp, #28
 8010ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010edc:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8010ee0:	eef0 5a67 	vmov.f32	s11, s15
 8010ee4:	eee7 5a06 	vfma.f32	s11, s14, s12
 8010ee8:	eef4 7a65 	vcmp.f32	s15, s11
 8010eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ef0:	bf18      	it	ne
 8010ef2:	eef0 6a65 	vmovne.f32	s13, s11
 8010ef6:	2d07      	cmp	r5, #7
 8010ef8:	edc7 6a17 	vstr	s13, [r7, #92]	@ 0x5c
 8010efc:	f73f af3a 	bgt.w	8010d74 <awe_modSecondOrderFilterSmoothedProcess+0xfc>
 8010f00:	2400      	movs	r4, #0
 8010f02:	e760      	b.n	8010dc6 <awe_modSecondOrderFilterSmoothedProcess+0x14e>

08010f04 <awe_modSecondOrderFilterSmoothedSet>:
 8010f04:	b909      	cbnz	r1, 8010f0a <awe_modSecondOrderFilterSmoothedSet+0x6>
 8010f06:	2000      	movs	r0, #0
 8010f08:	4770      	bx	lr
 8010f0a:	b510      	push	{r4, lr}
 8010f0c:	6903      	ldr	r3, [r0, #16]
 8010f0e:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 8010f12:	681b      	ldr	r3, [r3, #0]
 8010f14:	4604      	mov	r4, r0
 8010f16:	ed2d 8b02 	vpush	{d8}
 8010f1a:	6998      	ldr	r0, [r3, #24]
 8010f1c:	ed93 8a04 	vldr	s16, [r3, #16]
 8010f20:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8010f24:	eef0 0a48 	vmov.f32	s1, s16
 8010f28:	f012 fd3a 	bl	80239a0 <design_smoother>
 8010f2c:	2300      	movs	r3, #0
 8010f2e:	ed84 0a18 	vstr	s0, [r4, #96]	@ 0x60
 8010f32:	6363      	str	r3, [r4, #52]	@ 0x34
 8010f34:	eeb0 0a48 	vmov.f32	s0, s16
 8010f38:	6a20      	ldr	r0, [r4, #32]
 8010f3a:	edd4 1a0b 	vldr	s3, [r4, #44]	@ 0x2c
 8010f3e:	ed94 1a0a 	vldr	s2, [r4, #40]	@ 0x28
 8010f42:	edd4 0a09 	vldr	s1, [r4, #36]	@ 0x24
 8010f46:	f104 0138 	add.w	r1, r4, #56	@ 0x38
 8010f4a:	f011 fcd5 	bl	80228f8 <design_second_order_filter>
 8010f4e:	ecbd 8b02 	vpop	{d8}
 8010f52:	2301      	movs	r3, #1
 8010f54:	2000      	movs	r0, #0
 8010f56:	6363      	str	r3, [r4, #52]	@ 0x34
 8010f58:	bd10      	pop	{r4, pc}
 8010f5a:	bf00      	nop

08010f5c <awe_modSecondOrderFilterSmoothedCascadeConstructor>:
 8010f5c:	b570      	push	{r4, r5, r6, lr}
 8010f5e:	b082      	sub	sp, #8
 8010f60:	4616      	mov	r6, r2
 8010f62:	4605      	mov	r5, r0
 8010f64:	9806      	ldr	r0, [sp, #24]
 8010f66:	9300      	str	r3, [sp, #0]
 8010f68:	460a      	mov	r2, r1
 8010f6a:	9001      	str	r0, [sp, #4]
 8010f6c:	4633      	mov	r3, r6
 8010f6e:	4629      	mov	r1, r5
 8010f70:	482b      	ldr	r0, [pc, #172]	@ (8011020 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xc4>)
 8010f72:	f00f f8e7 	bl	8020144 <BaseClassModule_Constructor>
 8010f76:	2800      	cmp	r0, #0
 8010f78:	d04e      	beq.n	8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010f7a:	4604      	mov	r4, r0
 8010f7c:	6a00      	ldr	r0, [r0, #32]
 8010f7e:	462a      	mov	r2, r5
 8010f80:	0080      	lsls	r0, r0, #2
 8010f82:	f240 2131 	movw	r1, #561	@ 0x231
 8010f86:	f00e fb89 	bl	801f69c <awe_fwMalloc>
 8010f8a:	6320      	str	r0, [r4, #48]	@ 0x30
 8010f8c:	2800      	cmp	r0, #0
 8010f8e:	d043      	beq.n	8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010f90:	6a20      	ldr	r0, [r4, #32]
 8010f92:	462a      	mov	r2, r5
 8010f94:	0080      	lsls	r0, r0, #2
 8010f96:	f240 2131 	movw	r1, #561	@ 0x231
 8010f9a:	f00e fb7f 	bl	801f69c <awe_fwMalloc>
 8010f9e:	6360      	str	r0, [r4, #52]	@ 0x34
 8010fa0:	2800      	cmp	r0, #0
 8010fa2:	d039      	beq.n	8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010fa4:	6a20      	ldr	r0, [r4, #32]
 8010fa6:	462a      	mov	r2, r5
 8010fa8:	0080      	lsls	r0, r0, #2
 8010faa:	f240 2131 	movw	r1, #561	@ 0x231
 8010fae:	f00e fb75 	bl	801f69c <awe_fwMalloc>
 8010fb2:	63a0      	str	r0, [r4, #56]	@ 0x38
 8010fb4:	b380      	cbz	r0, 8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010fb6:	6a20      	ldr	r0, [r4, #32]
 8010fb8:	462a      	mov	r2, r5
 8010fba:	0080      	lsls	r0, r0, #2
 8010fbc:	f240 2131 	movw	r1, #561	@ 0x231
 8010fc0:	f00e fb6c 	bl	801f69c <awe_fwMalloc>
 8010fc4:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8010fc6:	b338      	cbz	r0, 8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010fc8:	6a20      	ldr	r0, [r4, #32]
 8010fca:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010fce:	0080      	lsls	r0, r0, #2
 8010fd0:	462a      	mov	r2, r5
 8010fd2:	f240 2131 	movw	r1, #561	@ 0x231
 8010fd6:	f00e fb61 	bl	801f69c <awe_fwMalloc>
 8010fda:	6420      	str	r0, [r4, #64]	@ 0x40
 8010fdc:	b1e0      	cbz	r0, 8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010fde:	6a20      	ldr	r0, [r4, #32]
 8010fe0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010fe4:	0080      	lsls	r0, r0, #2
 8010fe6:	462a      	mov	r2, r5
 8010fe8:	f240 2131 	movw	r1, #561	@ 0x231
 8010fec:	f00e fb56 	bl	801f69c <awe_fwMalloc>
 8010ff0:	6460      	str	r0, [r4, #68]	@ 0x44
 8010ff2:	b188      	cbz	r0, 8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8010ff4:	6833      	ldr	r3, [r6, #0]
 8010ff6:	6a20      	ldr	r0, [r4, #32]
 8010ff8:	695b      	ldr	r3, [r3, #20]
 8010ffa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8010ffe:	00db      	lsls	r3, r3, #3
 8011000:	462a      	mov	r2, r5
 8011002:	fb00 f003 	mul.w	r0, r0, r3
 8011006:	f240 2131 	movw	r1, #561	@ 0x231
 801100a:	f00e fb47 	bl	801f69c <awe_fwMalloc>
 801100e:	64a0      	str	r0, [r4, #72]	@ 0x48
 8011010:	b110      	cbz	r0, 8011018 <awe_modSecondOrderFilterSmoothedCascadeConstructor+0xbc>
 8011012:	4620      	mov	r0, r4
 8011014:	b002      	add	sp, #8
 8011016:	bd70      	pop	{r4, r5, r6, pc}
 8011018:	2400      	movs	r4, #0
 801101a:	4620      	mov	r0, r4
 801101c:	b002      	add	sp, #8
 801101e:	bd70      	pop	{r4, r5, r6, pc}
 8011020:	08034cec 	.word	0x08034cec

08011024 <awe_modSecondOrderFilterSmoothedCascadeProcess>:
 8011024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011028:	6906      	ldr	r6, [r0, #16]
 801102a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 801102c:	6833      	ldr	r3, [r6, #0]
 801102e:	6a07      	ldr	r7, [r0, #32]
 8011030:	e9d3 4105 	ldrd	r4, r1, [r3, #20]
 8011034:	b08b      	sub	sp, #44	@ 0x2c
 8011036:	f3c1 0110 	ubfx	r1, r1, #0, #17
 801103a:	4605      	mov	r5, r0
 801103c:	f3c4 0409 	ubfx	r4, r4, #0, #10
 8011040:	9105      	str	r1, [sp, #20]
 8011042:	2a00      	cmp	r2, #0
 8011044:	f040 80c8 	bne.w	80111d8 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x1b4>
 8011048:	6872      	ldr	r2, [r6, #4]
 801104a:	68db      	ldr	r3, [r3, #12]
 801104c:	68d2      	ldr	r2, [r2, #12]
 801104e:	9306      	str	r3, [sp, #24]
 8011050:	2c07      	cmp	r4, #7
 8011052:	9207      	str	r2, [sp, #28]
 8011054:	f340 80ca 	ble.w	80111ec <awe_modSecondOrderFilterSmoothedCascadeProcess+0x1c8>
 8011058:	f1a4 0608 	sub.w	r6, r4, #8
 801105c:	08f1      	lsrs	r1, r6, #3
 801105e:	eb03 1a41 	add.w	sl, r3, r1, lsl #5
 8011062:	9108      	str	r1, [sp, #32]
 8011064:	461e      	mov	r6, r3
 8011066:	f10a 0a20 	add.w	sl, sl, #32
 801106a:	ea4f 1b87 	mov.w	fp, r7, lsl #6
 801106e:	4691      	mov	r9, r2
 8011070:	f04f 0800 	mov.w	r8, #0
 8011074:	e9d5 2311 	ldrd	r2, r3, [r5, #68]	@ 0x44
 8011078:	9905      	ldr	r1, [sp, #20]
 801107a:	9103      	str	r1, [sp, #12]
 801107c:	4443      	add	r3, r8
 801107e:	e9cd 3701 	strd	r3, r7, [sp, #4]
 8011082:	9200      	str	r2, [sp, #0]
 8011084:	4630      	mov	r0, r6
 8011086:	464a      	mov	r2, r9
 8011088:	4623      	mov	r3, r4
 801108a:	4621      	mov	r1, r4
 801108c:	3620      	adds	r6, #32
 801108e:	f009 fbb3 	bl	801a7f8 <awe_vecBiquadCascade_8ch>
 8011092:	4556      	cmp	r6, sl
 8011094:	44d8      	add	r8, fp
 8011096:	f109 0920 	add.w	r9, r9, #32
 801109a:	d1eb      	bne.n	8011074 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x50>
 801109c:	9e08      	ldr	r6, [sp, #32]
 801109e:	3601      	adds	r6, #1
 80110a0:	00f6      	lsls	r6, r6, #3
 80110a2:	1ee3      	subs	r3, r4, #3
 80110a4:	429e      	cmp	r6, r3
 80110a6:	da35      	bge.n	8011114 <awe_modSecondOrderFilterSmoothedCascadeProcess+0xf0>
 80110a8:	1f23      	subs	r3, r4, #4
 80110aa:	1b9b      	subs	r3, r3, r6
 80110ac:	9a06      	ldr	r2, [sp, #24]
 80110ae:	9308      	str	r3, [sp, #32]
 80110b0:	f023 0b03 	bic.w	fp, r3, #3
 80110b4:	eb0b 0306 	add.w	r3, fp, r6
 80110b8:	f102 0b10 	add.w	fp, r2, #16
 80110bc:	eb0b 0b83 	add.w	fp, fp, r3, lsl #2
 80110c0:	9b07      	ldr	r3, [sp, #28]
 80110c2:	9609      	str	r6, [sp, #36]	@ 0x24
 80110c4:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 80110c8:	ea4f 0947 	mov.w	r9, r7, lsl #1
 80110cc:	fb06 f909 	mul.w	r9, r6, r9
 80110d0:	eb02 080a 	add.w	r8, r2, sl
 80110d4:	449a      	add	sl, r3
 80110d6:	017b      	lsls	r3, r7, #5
 80110d8:	ea4f 0989 	mov.w	r9, r9, lsl #2
 80110dc:	461e      	mov	r6, r3
 80110de:	e9d5 2311 	ldrd	r2, r3, [r5, #68]	@ 0x44
 80110e2:	9905      	ldr	r1, [sp, #20]
 80110e4:	9103      	str	r1, [sp, #12]
 80110e6:	444b      	add	r3, r9
 80110e8:	e9cd 3701 	strd	r3, r7, [sp, #4]
 80110ec:	9200      	str	r2, [sp, #0]
 80110ee:	4640      	mov	r0, r8
 80110f0:	4652      	mov	r2, sl
 80110f2:	4623      	mov	r3, r4
 80110f4:	4621      	mov	r1, r4
 80110f6:	f108 0810 	add.w	r8, r8, #16
 80110fa:	f009 fb5b 	bl	801a7b4 <awe_vecBiquadCascade_4ch>
 80110fe:	45d8      	cmp	r8, fp
 8011100:	44b1      	add	r9, r6
 8011102:	f10a 0a10 	add.w	sl, sl, #16
 8011106:	d1ea      	bne.n	80110de <awe_modSecondOrderFilterSmoothedCascadeProcess+0xba>
 8011108:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 801110a:	9b08      	ldr	r3, [sp, #32]
 801110c:	3604      	adds	r6, #4
 801110e:	f023 0303 	bic.w	r3, r3, #3
 8011112:	441e      	add	r6, r3
 8011114:	1e63      	subs	r3, r4, #1
 8011116:	429e      	cmp	r6, r3
 8011118:	da35      	bge.n	8011186 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x162>
 801111a:	1ea3      	subs	r3, r4, #2
 801111c:	1b9b      	subs	r3, r3, r6
 801111e:	9a06      	ldr	r2, [sp, #24]
 8011120:	9308      	str	r3, [sp, #32]
 8011122:	f023 0b01 	bic.w	fp, r3, #1
 8011126:	eb0b 0306 	add.w	r3, fp, r6
 801112a:	f102 0b08 	add.w	fp, r2, #8
 801112e:	eb0b 0b83 	add.w	fp, fp, r3, lsl #2
 8011132:	9b07      	ldr	r3, [sp, #28]
 8011134:	9609      	str	r6, [sp, #36]	@ 0x24
 8011136:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 801113a:	ea4f 0947 	mov.w	r9, r7, lsl #1
 801113e:	fb06 f909 	mul.w	r9, r6, r9
 8011142:	eb02 080a 	add.w	r8, r2, sl
 8011146:	449a      	add	sl, r3
 8011148:	013b      	lsls	r3, r7, #4
 801114a:	ea4f 0989 	mov.w	r9, r9, lsl #2
 801114e:	461e      	mov	r6, r3
 8011150:	e9d5 2311 	ldrd	r2, r3, [r5, #68]	@ 0x44
 8011154:	9905      	ldr	r1, [sp, #20]
 8011156:	9103      	str	r1, [sp, #12]
 8011158:	444b      	add	r3, r9
 801115a:	e9cd 3701 	strd	r3, r7, [sp, #4]
 801115e:	9200      	str	r2, [sp, #0]
 8011160:	4640      	mov	r0, r8
 8011162:	4652      	mov	r2, sl
 8011164:	4623      	mov	r3, r4
 8011166:	4621      	mov	r1, r4
 8011168:	f108 0808 	add.w	r8, r8, #8
 801116c:	f009 fb00 	bl	801a770 <awe_vecBiquadCascade_2ch>
 8011170:	45c3      	cmp	fp, r8
 8011172:	44b1      	add	r9, r6
 8011174:	f10a 0a08 	add.w	sl, sl, #8
 8011178:	d1ea      	bne.n	8011150 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x12c>
 801117a:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 801117c:	9b08      	ldr	r3, [sp, #32]
 801117e:	3602      	adds	r6, #2
 8011180:	f023 0301 	bic.w	r3, r3, #1
 8011184:	441e      	add	r6, r3
 8011186:	42b4      	cmp	r4, r6
 8011188:	dd23      	ble.n	80111d2 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x1ae>
 801118a:	ea4f 0a47 	mov.w	sl, r7, lsl #1
 801118e:	9b07      	ldr	r3, [sp, #28]
 8011190:	fb06 fa0a 	mul.w	sl, r6, sl
 8011194:	00b6      	lsls	r6, r6, #2
 8011196:	4433      	add	r3, r6
 8011198:	4699      	mov	r9, r3
 801119a:	9b06      	ldr	r3, [sp, #24]
 801119c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80111a0:	441e      	add	r6, r3
 80111a2:	eb03 0884 	add.w	r8, r3, r4, lsl #2
 80111a6:	ea4f 0bc7 	mov.w	fp, r7, lsl #3
 80111aa:	e9d5 2311 	ldrd	r2, r3, [r5, #68]	@ 0x44
 80111ae:	9905      	ldr	r1, [sp, #20]
 80111b0:	9103      	str	r1, [sp, #12]
 80111b2:	4453      	add	r3, sl
 80111b4:	e9cd 3701 	strd	r3, r7, [sp, #4]
 80111b8:	9200      	str	r2, [sp, #0]
 80111ba:	4630      	mov	r0, r6
 80111bc:	464a      	mov	r2, r9
 80111be:	4623      	mov	r3, r4
 80111c0:	4621      	mov	r1, r4
 80111c2:	3604      	adds	r6, #4
 80111c4:	f008 ff3a 	bl	801a03c <awe_vecBiquadCascade>
 80111c8:	45b0      	cmp	r8, r6
 80111ca:	44da      	add	sl, fp
 80111cc:	f109 0904 	add.w	r9, r9, #4
 80111d0:	d1eb      	bne.n	80111aa <awe_modSecondOrderFilterSmoothedCascadeProcess+0x186>
 80111d2:	b00b      	add	sp, #44	@ 0x2c
 80111d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111d8:	ed90 0a0b 	vldr	s0, [r0, #44]	@ 0x2c
 80111dc:	eb07 0287 	add.w	r2, r7, r7, lsl #2
 80111e0:	e9d0 1010 	ldrd	r1, r0, [r0, #64]	@ 0x40
 80111e4:	f00d fb94 	bl	801e910 <awe_vecSmoothNCoeffArray>
 80111e8:	6833      	ldr	r3, [r6, #0]
 80111ea:	e72d      	b.n	8011048 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x24>
 80111ec:	2600      	movs	r6, #0
 80111ee:	e758      	b.n	80110a2 <awe_modSecondOrderFilterSmoothedCascadeProcess+0x7e>

080111f0 <awe_modSecondOrderFilterSmoothedCascadeSet>:
 80111f0:	b909      	cbnz	r1, 80111f6 <awe_modSecondOrderFilterSmoothedCascadeSet+0x6>
 80111f2:	2000      	movs	r0, #0
 80111f4:	4770      	bx	lr
 80111f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111f8:	6903      	ldr	r3, [r0, #16]
 80111fa:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 80111fe:	681b      	ldr	r3, [r3, #0]
 8011200:	4605      	mov	r5, r0
 8011202:	ed2d 8b02 	vpush	{d8}
 8011206:	6998      	ldr	r0, [r3, #24]
 8011208:	ed93 8a04 	vldr	s16, [r3, #16]
 801120c:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8011210:	eef0 0a48 	vmov.f32	s1, s16
 8011214:	f012 fbc4 	bl	80239a0 <design_smoother>
 8011218:	6a2b      	ldr	r3, [r5, #32]
 801121a:	ed85 0a0b 	vstr	s0, [r5, #44]	@ 0x2c
 801121e:	2400      	movs	r4, #0
 8011220:	42a3      	cmp	r3, r4
 8011222:	62ac      	str	r4, [r5, #40]	@ 0x28
 8011224:	dd1c      	ble.n	8011260 <awe_modSecondOrderFilterSmoothedCascadeSet+0x70>
 8011226:	4627      	mov	r7, r4
 8011228:	e9d5 260e 	ldrd	r2, r6, [r5, #56]	@ 0x38
 801122c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 801122e:	6c29      	ldr	r1, [r5, #64]	@ 0x40
 8011230:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011232:	4423      	add	r3, r4
 8011234:	4422      	add	r2, r4
 8011236:	eb04 0c84 	add.w	ip, r4, r4, lsl #2
 801123a:	4426      	add	r6, r4
 801123c:	edd3 0a00 	vldr	s1, [r3]
 8011240:	5900      	ldr	r0, [r0, r4]
 8011242:	edd6 1a00 	vldr	s3, [r6]
 8011246:	ed92 1a00 	vldr	s2, [r2]
 801124a:	4461      	add	r1, ip
 801124c:	eeb0 0a48 	vmov.f32	s0, s16
 8011250:	f011 fb52 	bl	80228f8 <design_second_order_filter>
 8011254:	6a2b      	ldr	r3, [r5, #32]
 8011256:	3701      	adds	r7, #1
 8011258:	42bb      	cmp	r3, r7
 801125a:	f104 0404 	add.w	r4, r4, #4
 801125e:	dce3      	bgt.n	8011228 <awe_modSecondOrderFilterSmoothedCascadeSet+0x38>
 8011260:	ecbd 8b02 	vpop	{d8}
 8011264:	2301      	movs	r3, #1
 8011266:	2000      	movs	r0, #0
 8011268:	62ab      	str	r3, [r5, #40]	@ 0x28
 801126a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801126c <awe_modSecondOrderFilterSmoothedCascadeV2Constructor>:
 801126c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801126e:	b087      	sub	sp, #28
 8011270:	4616      	mov	r6, r2
 8011272:	4605      	mov	r5, r0
 8011274:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8011276:	9300      	str	r3, [sp, #0]
 8011278:	460a      	mov	r2, r1
 801127a:	4633      	mov	r3, r6
 801127c:	9001      	str	r0, [sp, #4]
 801127e:	4629      	mov	r1, r5
 8011280:	4838      	ldr	r0, [pc, #224]	@ (8011364 <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xf8>)
 8011282:	f00e ff5f 	bl	8020144 <BaseClassModule_Constructor>
 8011286:	6833      	ldr	r3, [r6, #0]
 8011288:	695f      	ldr	r7, [r3, #20]
 801128a:	2800      	cmp	r0, #0
 801128c:	d065      	beq.n	801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 801128e:	4604      	mov	r4, r0
 8011290:	6a00      	ldr	r0, [r0, #32]
 8011292:	462a      	mov	r2, r5
 8011294:	0080      	lsls	r0, r0, #2
 8011296:	f240 2131 	movw	r1, #561	@ 0x231
 801129a:	f00e f9ff 	bl	801f69c <awe_fwMalloc>
 801129e:	6360      	str	r0, [r4, #52]	@ 0x34
 80112a0:	2800      	cmp	r0, #0
 80112a2:	d05a      	beq.n	801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 80112a4:	6a20      	ldr	r0, [r4, #32]
 80112a6:	462a      	mov	r2, r5
 80112a8:	0080      	lsls	r0, r0, #2
 80112aa:	f240 2131 	movw	r1, #561	@ 0x231
 80112ae:	f00e f9f5 	bl	801f69c <awe_fwMalloc>
 80112b2:	63a0      	str	r0, [r4, #56]	@ 0x38
 80112b4:	2800      	cmp	r0, #0
 80112b6:	d050      	beq.n	801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 80112b8:	6a20      	ldr	r0, [r4, #32]
 80112ba:	462a      	mov	r2, r5
 80112bc:	0080      	lsls	r0, r0, #2
 80112be:	f240 2131 	movw	r1, #561	@ 0x231
 80112c2:	f00e f9eb 	bl	801f69c <awe_fwMalloc>
 80112c6:	63e0      	str	r0, [r4, #60]	@ 0x3c
 80112c8:	2800      	cmp	r0, #0
 80112ca:	d046      	beq.n	801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 80112cc:	6a20      	ldr	r0, [r4, #32]
 80112ce:	462a      	mov	r2, r5
 80112d0:	0080      	lsls	r0, r0, #2
 80112d2:	f240 2131 	movw	r1, #561	@ 0x231
 80112d6:	f00e f9e1 	bl	801f69c <awe_fwMalloc>
 80112da:	6420      	str	r0, [r4, #64]	@ 0x40
 80112dc:	2800      	cmp	r0, #0
 80112de:	d03c      	beq.n	801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 80112e0:	6a20      	ldr	r0, [r4, #32]
 80112e2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80112e6:	0080      	lsls	r0, r0, #2
 80112e8:	462a      	mov	r2, r5
 80112ea:	f240 2131 	movw	r1, #561	@ 0x231
 80112ee:	f00e f9d5 	bl	801f69c <awe_fwMalloc>
 80112f2:	6460      	str	r0, [r4, #68]	@ 0x44
 80112f4:	b388      	cbz	r0, 801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 80112f6:	6a20      	ldr	r0, [r4, #32]
 80112f8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80112fc:	0080      	lsls	r0, r0, #2
 80112fe:	462a      	mov	r2, r5
 8011300:	f240 2131 	movw	r1, #561	@ 0x231
 8011304:	f00e f9ca 	bl	801f69c <awe_fwMalloc>
 8011308:	64a0      	str	r0, [r4, #72]	@ 0x48
 801130a:	b330      	cbz	r0, 801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 801130c:	6a20      	ldr	r0, [r4, #32]
 801130e:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8011312:	007f      	lsls	r7, r7, #1
 8011314:	fb00 f007 	mul.w	r0, r0, r7
 8011318:	0080      	lsls	r0, r0, #2
 801131a:	462a      	mov	r2, r5
 801131c:	f240 2131 	movw	r1, #561	@ 0x231
 8011320:	f00e f9bc 	bl	801f69c <awe_fwMalloc>
 8011324:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8011326:	b1c0      	cbz	r0, 801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 8011328:	e9d6 7200 	ldrd	r7, r2, [r6]
 801132c:	69bb      	ldr	r3, [r7, #24]
 801132e:	68d2      	ldr	r2, [r2, #12]
 8011330:	68f9      	ldr	r1, [r7, #12]
 8011332:	9504      	str	r5, [sp, #16]
 8011334:	6a25      	ldr	r5, [r4, #32]
 8011336:	e9cd 0502 	strd	r0, r5, [sp, #8]
 801133a:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 801133c:	9001      	str	r0, [sp, #4]
 801133e:	6978      	ldr	r0, [r7, #20]
 8011340:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011344:	9000      	str	r0, [sp, #0]
 8011346:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801134a:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 801134e:	f00d f803 	bl	801e358 <awe_vecSecondOrderFilterSmoothedCascadeV2Constructor>
 8011352:	b110      	cbz	r0, 801135a <awe_modSecondOrderFilterSmoothedCascadeV2Constructor+0xee>
 8011354:	4620      	mov	r0, r4
 8011356:	b007      	add	sp, #28
 8011358:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801135a:	2400      	movs	r4, #0
 801135c:	4620      	mov	r0, r4
 801135e:	b007      	add	sp, #28
 8011360:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011362:	bf00      	nop
 8011364:	08034d14 	.word	0x08034d14

08011368 <awe_modSecondOrderFilterSmoothedCascadeV2Process>:
 8011368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801136c:	6907      	ldr	r7, [r0, #16]
 801136e:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8011370:	683a      	ldr	r2, [r7, #0]
 8011372:	f8d0 8020 	ldr.w	r8, [r0, #32]
 8011376:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8011378:	e9d2 6505 	ldrd	r6, r5, [r2, #20]
 801137c:	b084      	sub	sp, #16
 801137e:	4604      	mov	r4, r0
 8011380:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8011384:	f3c5 0510 	ubfx	r5, r5, #0, #17
 8011388:	b149      	cbz	r1, 801139e <awe_modSecondOrderFilterSmoothedCascadeV2Process+0x36>
 801138a:	4618      	mov	r0, r3
 801138c:	eb08 0288 	add.w	r2, r8, r8, lsl #2
 8011390:	ed94 0a0b 	vldr	s0, [r4, #44]	@ 0x2c
 8011394:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8011396:	f00d fabb 	bl	801e910 <awe_vecSmoothNCoeffArray>
 801139a:	683a      	ldr	r2, [r7, #0]
 801139c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 801139e:	6878      	ldr	r0, [r7, #4]
 80113a0:	68d1      	ldr	r1, [r2, #12]
 80113a2:	68c2      	ldr	r2, [r0, #12]
 80113a4:	e9d4 4013 	ldrd	r4, r0, [r4, #76]	@ 0x4c
 80113a8:	e9cd 6300 	strd	r6, r3, [sp]
 80113ac:	f8cd 800c 	str.w	r8, [sp, #12]
 80113b0:	462b      	mov	r3, r5
 80113b2:	9402      	str	r4, [sp, #8]
 80113b4:	f00c ffd2 	bl	801e35c <awe_vecSecondOrderFilterSmoothedCascadeV2Process>
 80113b8:	b004      	add	sp, #16
 80113ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113be:	bf00      	nop

080113c0 <awe_modSecondOrderFilterSmoothedCascadeV2Set>:
 80113c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80113c4:	6903      	ldr	r3, [r0, #16]
 80113c6:	681b      	ldr	r3, [r3, #0]
 80113c8:	ed2d 8b02 	vpush	{d8}
 80113cc:	e9d3 2705 	ldrd	r2, r7, [r3, #20]
 80113d0:	ed93 8a04 	vldr	s16, [r3, #16]
 80113d4:	058b      	lsls	r3, r1, #22
 80113d6:	b084      	sub	sp, #16
 80113d8:	4604      	mov	r4, r0
 80113da:	460e      	mov	r6, r1
 80113dc:	f3c2 0a09 	ubfx	sl, r2, #0, #10
 80113e0:	f3c7 0710 	ubfx	r7, r7, #0, #17
 80113e4:	d448      	bmi.n	8011478 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0xb8>
 80113e6:	f416 3ff0 	tst.w	r6, #122880	@ 0x1e000
 80113ea:	f406 5580 	and.w	r5, r6, #4096	@ 0x1000
 80113ee:	6a22      	ldr	r2, [r4, #32]
 80113f0:	d03a      	beq.n	8011468 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0xa8>
 80113f2:	2300      	movs	r3, #0
 80113f4:	429a      	cmp	r2, r3
 80113f6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80113f8:	dd1f      	ble.n	801143a <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x7a>
 80113fa:	4698      	mov	r8, r3
 80113fc:	4699      	mov	r9, r3
 80113fe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8011400:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8011402:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	@ 0x3c
 8011406:	4443      	add	r3, r8
 8011408:	edd3 0a00 	vldr	s1, [r3]
 801140c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801140e:	4440      	add	r0, r8
 8011410:	4442      	add	r2, r8
 8011412:	edd0 1a00 	vldr	s3, [r0]
 8011416:	f853 0008 	ldr.w	r0, [r3, r8]
 801141a:	ed92 1a00 	vldr	s2, [r2]
 801141e:	eb08 0388 	add.w	r3, r8, r8, lsl #2
 8011422:	4419      	add	r1, r3
 8011424:	eeb0 0a48 	vmov.f32	s0, s16
 8011428:	f011 fa66 	bl	80228f8 <design_second_order_filter>
 801142c:	6a22      	ldr	r2, [r4, #32]
 801142e:	f109 0901 	add.w	r9, r9, #1
 8011432:	454a      	cmp	r2, r9
 8011434:	f108 0804 	add.w	r8, r8, #4
 8011438:	dce1      	bgt.n	80113fe <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x3e>
 801143a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801143c:	b923      	cbnz	r3, 8011448 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x88>
 801143e:	2301      	movs	r3, #1
 8011440:	62a3      	str	r3, [r4, #40]	@ 0x28
 8011442:	b10d      	cbz	r5, 8011448 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x88>
 8011444:	2301      	movs	r3, #1
 8011446:	62a3      	str	r3, [r4, #40]	@ 0x28
 8011448:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 801144a:	9602      	str	r6, [sp, #8]
 801144c:	e9d4 4013 	ldrd	r4, r0, [r4, #76]	@ 0x4c
 8011450:	4639      	mov	r1, r7
 8011452:	9201      	str	r2, [sp, #4]
 8011454:	9400      	str	r4, [sp, #0]
 8011456:	4652      	mov	r2, sl
 8011458:	f00d f85c 	bl	801e514 <awe_vecSecondOrderFilterSmoothedCascadeV2Set>
 801145c:	2000      	movs	r0, #0
 801145e:	b004      	add	sp, #16
 8011460:	ecbd 8b02 	vpop	{d8}
 8011464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011468:	2d00      	cmp	r5, #0
 801146a:	d0ed      	beq.n	8011448 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x88>
 801146c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801146e:	2b00      	cmp	r3, #0
 8011470:	d1ea      	bne.n	8011448 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x88>
 8011472:	2301      	movs	r3, #1
 8011474:	62a3      	str	r3, [r4, #40]	@ 0x28
 8011476:	e7e7      	b.n	8011448 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x88>
 8011478:	4638      	mov	r0, r7
 801147a:	eef0 0a48 	vmov.f32	s1, s16
 801147e:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 8011482:	f012 fa8d 	bl	80239a0 <design_smoother>
 8011486:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 801148a:	e7ac      	b.n	80113e6 <awe_modSecondOrderFilterSmoothedCascadeV2Set+0x26>

0801148c <awe_modSignProcess>:
 801148c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801148e:	6903      	ldr	r3, [r0, #16]
 8011490:	e9d3 2000 	ldrd	r2, r0, [r3]
 8011494:	e9d2 3105 	ldrd	r3, r1, [r2, #20]
 8011498:	68d5      	ldr	r5, [r2, #12]
 801149a:	68c4      	ldr	r4, [r0, #12]
 801149c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80114a0:	f3c1 0110 	ubfx	r1, r1, #0, #17
 80114a4:	f013 6300 	ands.w	r3, r3, #134217728	@ 0x8000000
 80114a8:	ed2d 8b04 	vpush	{d8-d9}
 80114ac:	fb02 f201 	mul.w	r2, r2, r1
 80114b0:	d122      	bne.n	80114f8 <awe_modSignProcess+0x6c>
 80114b2:	b1f2      	cbz	r2, 80114f2 <awe_modSignProcess+0x66>
 80114b4:	2600      	movs	r6, #0
 80114b6:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 80114ba:	492b      	ldr	r1, [pc, #172]	@ (8011568 <awe_modSignProcess+0xdc>)
 80114bc:	e00c      	b.n	80114d8 <awe_modSignProcess+0x4c>
 80114be:	eef5 7a40 	vcmp.f32	s15, #0.0
 80114c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80114c6:	f103 0301 	add.w	r3, r3, #1
 80114ca:	bf0c      	ite	eq
 80114cc:	6026      	streq	r6, [r4, #0]
 80114ce:	6020      	strne	r0, [r4, #0]
 80114d0:	429a      	cmp	r2, r3
 80114d2:	f104 0404 	add.w	r4, r4, #4
 80114d6:	d00c      	beq.n	80114f2 <awe_modSignProcess+0x66>
 80114d8:	ecf5 7a01 	vldmia	r5!, {s15}
 80114dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80114e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80114e4:	d5eb      	bpl.n	80114be <awe_modSignProcess+0x32>
 80114e6:	3301      	adds	r3, #1
 80114e8:	429a      	cmp	r2, r3
 80114ea:	6021      	str	r1, [r4, #0]
 80114ec:	f104 0404 	add.w	r4, r4, #4
 80114f0:	d1f2      	bne.n	80114d8 <awe_modSignProcess+0x4c>
 80114f2:	ecbd 8b04 	vpop	{d8-d9}
 80114f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80114f8:	1052      	asrs	r2, r2, #1
 80114fa:	d0fa      	beq.n	80114f2 <awe_modSignProcess+0x66>
 80114fc:	2700      	movs	r7, #0
 80114fe:	3508      	adds	r5, #8
 8011500:	eb04 06c2 	add.w	r6, r4, r2, lsl #3
 8011504:	ed55 8a01 	vldr	s17, [r5, #-4]
 8011508:	ed15 8a02 	vldr	s16, [r5, #-8]
 801150c:	ee28 0aa8 	vmul.f32	s0, s17, s17
 8011510:	3408      	adds	r4, #8
 8011512:	eea8 0a08 	vfma.f32	s0, s16, s16
 8011516:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801151a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801151e:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8011522:	d41e      	bmi.n	8011562 <awe_modSignProcess+0xd6>
 8011524:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8011528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801152c:	d00e      	beq.n	801154c <awe_modSignProcess+0xc0>
 801152e:	ee88 7a89 	vdiv.f32	s14, s17, s18
 8011532:	42a6      	cmp	r6, r4
 8011534:	f105 0508 	add.w	r5, r5, #8
 8011538:	eec8 7a09 	vdiv.f32	s15, s16, s18
 801153c:	ed04 7a01 	vstr	s14, [r4, #-4]
 8011540:	ed44 7a02 	vstr	s15, [r4, #-8]
 8011544:	d1de      	bne.n	8011504 <awe_modSignProcess+0x78>
 8011546:	ecbd 8b04 	vpop	{d8-d9}
 801154a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801154c:	42a6      	cmp	r6, r4
 801154e:	f844 7c04 	str.w	r7, [r4, #-4]
 8011552:	f844 7c08 	str.w	r7, [r4, #-8]
 8011556:	f105 0508 	add.w	r5, r5, #8
 801155a:	d1d3      	bne.n	8011504 <awe_modSignProcess+0x78>
 801155c:	ecbd 8b04 	vpop	{d8-d9}
 8011560:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011562:	f01d fa51 	bl	802ea08 <sqrtf>
 8011566:	e7dd      	b.n	8011524 <awe_modSignProcess+0x98>
 8011568:	bf800000 	.word	0xbf800000

0801156c <awe_modSinProcess>:
 801156c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801156e:	6903      	ldr	r3, [r0, #16]
 8011570:	e9d3 2100 	ldrd	r2, r1, [r3]
 8011574:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 8011578:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801157c:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8011580:	fb07 f703 	mul.w	r7, r7, r3
 8011584:	68ce      	ldr	r6, [r1, #12]
 8011586:	68d5      	ldr	r5, [r2, #12]
 8011588:	b14f      	cbz	r7, 801159e <awe_modSinProcess+0x32>
 801158a:	2400      	movs	r4, #0
 801158c:	ecb5 0a01 	vldmia	r5!, {s0}
 8011590:	f01d fb78 	bl	802ec84 <sinf>
 8011594:	3401      	adds	r4, #1
 8011596:	42a7      	cmp	r7, r4
 8011598:	eca6 0a01 	vstmia	r6!, {s0}
 801159c:	d1f6      	bne.n	801158c <awe_modSinProcess+0x20>
 801159e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080115a0 <awe_modSineSmoothedGenProcess>:
 80115a0:	6903      	ldr	r3, [r0, #16]
 80115a2:	edd0 0a0b 	vldr	s1, [r0, #44]	@ 0x2c
 80115a6:	681a      	ldr	r2, [r3, #0]
 80115a8:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 80115ac:	6993      	ldr	r3, [r2, #24]
 80115ae:	4601      	mov	r1, r0
 80115b0:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80115b4:	68d0      	ldr	r0, [r2, #12]
 80115b6:	f101 0238 	add.w	r2, r1, #56	@ 0x38
 80115ba:	3130      	adds	r1, #48	@ 0x30
 80115bc:	f00c bfac 	b.w	801e518 <awe_vecSineGenSmoothed>

080115c0 <awe_modSineSmoothedGenSet>:
 80115c0:	b909      	cbnz	r1, 80115c6 <awe_modSineSmoothedGenSet+0x6>
 80115c2:	2000      	movs	r0, #0
 80115c4:	4770      	bx	lr
 80115c6:	b510      	push	{r4, lr}
 80115c8:	6903      	ldr	r3, [r0, #16]
 80115ca:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 80115ce:	681b      	ldr	r3, [r3, #0]
 80115d0:	ed2d 8b02 	vpush	{d8}
 80115d4:	ed93 8a04 	vldr	s16, [r3, #16]
 80115d8:	4604      	mov	r4, r0
 80115da:	eef0 0a48 	vmov.f32	s1, s16
 80115de:	2001      	movs	r0, #1
 80115e0:	f012 f9de 	bl	80239a0 <design_smoother>
 80115e4:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 801160c <awe_modSineSmoothedGenSet+0x4c>
 80115e8:	edd4 7a08 	vldr	s15, [r4, #32]
 80115ec:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 80115f0:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80115f4:	ee28 8a26 	vmul.f32	s16, s16, s13
 80115f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80115fc:	2000      	movs	r0, #0
 80115fe:	ee87 7a88 	vdiv.f32	s14, s15, s16
 8011602:	ecbd 8b02 	vpop	{d8}
 8011606:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801160a:	bd10      	pop	{r4, pc}
 801160c:	40490fdb 	.word	0x40490fdb

08011610 <awe_modSinhProcess>:
 8011610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011612:	6903      	ldr	r3, [r0, #16]
 8011614:	e9d3 2100 	ldrd	r2, r1, [r3]
 8011618:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 801161c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8011620:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8011624:	fb07 f703 	mul.w	r7, r7, r3
 8011628:	68ce      	ldr	r6, [r1, #12]
 801162a:	68d5      	ldr	r5, [r2, #12]
 801162c:	b14f      	cbz	r7, 8011642 <awe_modSinhProcess+0x32>
 801162e:	2400      	movs	r4, #0
 8011630:	ecb5 0a01 	vldmia	r5!, {s0}
 8011634:	f01d f9be 	bl	802e9b4 <sinhf>
 8011638:	3401      	adds	r4, #1
 801163a:	42a7      	cmp	r7, r4
 801163c:	eca6 0a01 	vstmia	r6!, {s0}
 8011640:	d1f6      	bne.n	8011630 <awe_modSinhProcess+0x20>
 8011642:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011644 <awe_modSinkConstructor>:
 8011644:	b570      	push	{r4, r5, r6, lr}
 8011646:	b082      	sub	sp, #8
 8011648:	4616      	mov	r6, r2
 801164a:	4605      	mov	r5, r0
 801164c:	9806      	ldr	r0, [sp, #24]
 801164e:	9300      	str	r3, [sp, #0]
 8011650:	460a      	mov	r2, r1
 8011652:	9001      	str	r0, [sp, #4]
 8011654:	4633      	mov	r3, r6
 8011656:	4629      	mov	r1, r5
 8011658:	4811      	ldr	r0, [pc, #68]	@ (80116a0 <awe_modSinkConstructor+0x5c>)
 801165a:	f00e fd73 	bl	8020144 <BaseClassModule_Constructor>
 801165e:	b1d0      	cbz	r0, 8011696 <awe_modSinkConstructor+0x52>
 8011660:	6832      	ldr	r2, [r6, #0]
 8011662:	4604      	mov	r4, r0
 8011664:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 8011668:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801166c:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011670:	fb00 f003 	mul.w	r0, r0, r3
 8011674:	0080      	lsls	r0, r0, #2
 8011676:	462a      	mov	r2, r5
 8011678:	2102      	movs	r1, #2
 801167a:	f00e f80f 	bl	801f69c <awe_fwMalloc>
 801167e:	6260      	str	r0, [r4, #36]	@ 0x24
 8011680:	b148      	cbz	r0, 8011696 <awe_modSinkConstructor+0x52>
 8011682:	462a      	mov	r2, r5
 8011684:	2102      	movs	r1, #2
 8011686:	2008      	movs	r0, #8
 8011688:	f00e f808 	bl	801f69c <awe_fwMalloc>
 801168c:	62a0      	str	r0, [r4, #40]	@ 0x28
 801168e:	b110      	cbz	r0, 8011696 <awe_modSinkConstructor+0x52>
 8011690:	4620      	mov	r0, r4
 8011692:	b002      	add	sp, #8
 8011694:	bd70      	pop	{r4, r5, r6, pc}
 8011696:	2400      	movs	r4, #0
 8011698:	4620      	mov	r0, r4
 801169a:	b002      	add	sp, #8
 801169c:	bd70      	pop	{r4, r5, r6, pc}
 801169e:	bf00      	nop
 80116a0:	08034ddc 	.word	0x08034ddc

080116a4 <awe_modSinkProcess>:
 80116a4:	6903      	ldr	r3, [r0, #16]
 80116a6:	681b      	ldr	r3, [r3, #0]
 80116a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116ac:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 80116b0:	f3c5 0709 	ubfx	r7, r5, #0, #10
 80116b4:	b083      	sub	sp, #12
 80116b6:	68dc      	ldr	r4, [r3, #12]
 80116b8:	f3c5 65c0 	ubfx	r5, r5, #27, #1
 80116bc:	f3c2 0810 	ubfx	r8, r2, #0, #17
 80116c0:	b1b7      	cbz	r7, 80116f0 <awe_modSinkProcess+0x4c>
 80116c2:	4606      	mov	r6, r0
 80116c4:	ea4f 0988 	mov.w	r9, r8, lsl #2
 80116c8:	ea4f 0a47 	mov.w	sl, r7, lsl #1
 80116cc:	ea4f 0b58 	mov.w	fp, r8, lsr #1
 80116d0:	b98d      	cbnz	r5, 80116f6 <awe_modSinkProcess+0x52>
 80116d2:	eb04 0a87 	add.w	sl, r4, r7, lsl #2
 80116d6:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 80116d8:	f8cd 8000 	str.w	r8, [sp]
 80116dc:	442a      	add	r2, r5
 80116de:	4620      	mov	r0, r4
 80116e0:	2301      	movs	r3, #1
 80116e2:	4639      	mov	r1, r7
 80116e4:	3404      	adds	r4, #4
 80116e6:	f009 fcbd 	bl	801b064 <awe_vecCopy32>
 80116ea:	4554      	cmp	r4, sl
 80116ec:	444d      	add	r5, r9
 80116ee:	d1f2      	bne.n	80116d6 <awe_modSinkProcess+0x32>
 80116f0:	b003      	add	sp, #12
 80116f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116f6:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 80116fa:	2500      	movs	r5, #0
 80116fc:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 80116fe:	f8cd b000 	str.w	fp, [sp]
 8011702:	442a      	add	r2, r5
 8011704:	4620      	mov	r0, r4
 8011706:	2302      	movs	r3, #2
 8011708:	4651      	mov	r1, sl
 801170a:	f009 fcab 	bl	801b064 <awe_vecCopy32>
 801170e:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 8011710:	f8cd b000 	str.w	fp, [sp]
 8011714:	1d2b      	adds	r3, r5, #4
 8011716:	441a      	add	r2, r3
 8011718:	1d20      	adds	r0, r4, #4
 801171a:	2302      	movs	r3, #2
 801171c:	4651      	mov	r1, sl
 801171e:	3408      	adds	r4, #8
 8011720:	f009 fca0 	bl	801b064 <awe_vecCopy32>
 8011724:	42a7      	cmp	r7, r4
 8011726:	444d      	add	r5, r9
 8011728:	d1e8      	bne.n	80116fc <awe_modSinkProcess+0x58>
 801172a:	b003      	add	sp, #12
 801172c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011730 <awe_modSinkIntConstructor>:
 8011730:	b570      	push	{r4, r5, r6, lr}
 8011732:	b082      	sub	sp, #8
 8011734:	4616      	mov	r6, r2
 8011736:	4605      	mov	r5, r0
 8011738:	9806      	ldr	r0, [sp, #24]
 801173a:	9300      	str	r3, [sp, #0]
 801173c:	460a      	mov	r2, r1
 801173e:	9001      	str	r0, [sp, #4]
 8011740:	4633      	mov	r3, r6
 8011742:	4629      	mov	r1, r5
 8011744:	4810      	ldr	r0, [pc, #64]	@ (8011788 <awe_modSinkIntConstructor+0x58>)
 8011746:	f00e fcfd 	bl	8020144 <BaseClassModule_Constructor>
 801174a:	b1d8      	cbz	r0, 8011784 <awe_modSinkIntConstructor+0x54>
 801174c:	6833      	ldr	r3, [r6, #0]
 801174e:	4604      	mov	r4, r0
 8011750:	e9d3 2005 	ldrd	r2, r0, [r3, #20]
 8011754:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8011758:	f3c2 0309 	ubfx	r3, r2, #0, #10
 801175c:	f012 6f00 	tst.w	r2, #134217728	@ 0x8000000
 8011760:	fb03 f300 	mul.w	r3, r3, r0
 8011764:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8011768:	bf14      	ite	ne
 801176a:	2002      	movne	r0, #2
 801176c:	2001      	moveq	r0, #1
 801176e:	462a      	mov	r2, r5
 8011770:	fb00 f003 	mul.w	r0, r0, r3
 8011774:	2102      	movs	r1, #2
 8011776:	f00d ff91 	bl	801f69c <awe_fwMalloc>
 801177a:	6220      	str	r0, [r4, #32]
 801177c:	b110      	cbz	r0, 8011784 <awe_modSinkIntConstructor+0x54>
 801177e:	4620      	mov	r0, r4
 8011780:	b002      	add	sp, #8
 8011782:	bd70      	pop	{r4, r5, r6, pc}
 8011784:	2400      	movs	r4, #0
 8011786:	e7fa      	b.n	801177e <awe_modSinkIntConstructor+0x4e>
 8011788:	08034e04 	.word	0x08034e04

0801178c <awe_modSinkIntProcess>:
 801178c:	6903      	ldr	r3, [r0, #16]
 801178e:	681b      	ldr	r3, [r3, #0]
 8011790:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011794:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 8011798:	f3c6 0609 	ubfx	r6, r6, #0, #10
 801179c:	b082      	sub	sp, #8
 801179e:	68dc      	ldr	r4, [r3, #12]
 80117a0:	f3c7 0710 	ubfx	r7, r7, #0, #17
 80117a4:	b196      	cbz	r6, 80117cc <awe_modSinkIntProcess+0x40>
 80117a6:	4680      	mov	r8, r0
 80117a8:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 80117ac:	ea4f 0987 	mov.w	r9, r7, lsl #2
 80117b0:	2500      	movs	r5, #0
 80117b2:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80117b6:	9700      	str	r7, [sp, #0]
 80117b8:	442a      	add	r2, r5
 80117ba:	4620      	mov	r0, r4
 80117bc:	2301      	movs	r3, #1
 80117be:	4631      	mov	r1, r6
 80117c0:	3404      	adds	r4, #4
 80117c2:	f009 fc4f 	bl	801b064 <awe_vecCopy32>
 80117c6:	4554      	cmp	r4, sl
 80117c8:	444d      	add	r5, r9
 80117ca:	d1f2      	bne.n	80117b2 <awe_modSinkIntProcess+0x26>
 80117cc:	b002      	add	sp, #8
 80117ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80117d2:	bf00      	nop

080117d4 <awe_modSinkIntPropertiesConstructor>:
 80117d4:	b570      	push	{r4, r5, r6, lr}
 80117d6:	b082      	sub	sp, #8
 80117d8:	4616      	mov	r6, r2
 80117da:	4605      	mov	r5, r0
 80117dc:	9806      	ldr	r0, [sp, #24]
 80117de:	9300      	str	r3, [sp, #0]
 80117e0:	460a      	mov	r2, r1
 80117e2:	9001      	str	r0, [sp, #4]
 80117e4:	4633      	mov	r3, r6
 80117e6:	4629      	mov	r1, r5
 80117e8:	4810      	ldr	r0, [pc, #64]	@ (801182c <awe_modSinkIntPropertiesConstructor+0x58>)
 80117ea:	f00e fcab 	bl	8020144 <BaseClassModule_Constructor>
 80117ee:	b1d8      	cbz	r0, 8011828 <awe_modSinkIntPropertiesConstructor+0x54>
 80117f0:	6833      	ldr	r3, [r6, #0]
 80117f2:	4604      	mov	r4, r0
 80117f4:	e9d3 2005 	ldrd	r2, r0, [r3, #20]
 80117f8:	f3c0 0010 	ubfx	r0, r0, #0, #17
 80117fc:	f3c2 0309 	ubfx	r3, r2, #0, #10
 8011800:	f012 6f00 	tst.w	r2, #134217728	@ 0x8000000
 8011804:	fb03 f300 	mul.w	r3, r3, r0
 8011808:	ea4f 0383 	mov.w	r3, r3, lsl #2
 801180c:	bf14      	ite	ne
 801180e:	2002      	movne	r0, #2
 8011810:	2001      	moveq	r0, #1
 8011812:	462a      	mov	r2, r5
 8011814:	fb00 f003 	mul.w	r0, r0, r3
 8011818:	2102      	movs	r1, #2
 801181a:	f00d ff3f 	bl	801f69c <awe_fwMalloc>
 801181e:	6320      	str	r0, [r4, #48]	@ 0x30
 8011820:	b110      	cbz	r0, 8011828 <awe_modSinkIntPropertiesConstructor+0x54>
 8011822:	4620      	mov	r0, r4
 8011824:	b002      	add	sp, #8
 8011826:	bd70      	pop	{r4, r5, r6, pc}
 8011828:	2400      	movs	r4, #0
 801182a:	e7fa      	b.n	8011822 <awe_modSinkIntPropertiesConstructor+0x4e>
 801182c:	08034e2c 	.word	0x08034e2c

08011830 <awe_modSinkIntPropertiesProcess>:
 8011830:	6903      	ldr	r3, [r0, #16]
 8011832:	681b      	ldr	r3, [r3, #0]
 8011834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011838:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 801183c:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8011840:	b082      	sub	sp, #8
 8011842:	68dc      	ldr	r4, [r3, #12]
 8011844:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8011848:	b196      	cbz	r6, 8011870 <awe_modSinkIntPropertiesProcess+0x40>
 801184a:	4680      	mov	r8, r0
 801184c:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 8011850:	ea4f 0987 	mov.w	r9, r7, lsl #2
 8011854:	2500      	movs	r5, #0
 8011856:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 801185a:	9700      	str	r7, [sp, #0]
 801185c:	442a      	add	r2, r5
 801185e:	4620      	mov	r0, r4
 8011860:	2301      	movs	r3, #1
 8011862:	4631      	mov	r1, r6
 8011864:	3404      	adds	r4, #4
 8011866:	f009 fbfd 	bl	801b064 <awe_vecCopy32>
 801186a:	4554      	cmp	r4, sl
 801186c:	444d      	add	r5, r9
 801186e:	d1f2      	bne.n	8011856 <awe_modSinkIntPropertiesProcess+0x26>
 8011870:	b002      	add	sp, #8
 8011872:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011876:	bf00      	nop

08011878 <awe_modSinkPropertiesConstructor>:
 8011878:	b570      	push	{r4, r5, r6, lr}
 801187a:	b082      	sub	sp, #8
 801187c:	4616      	mov	r6, r2
 801187e:	4605      	mov	r5, r0
 8011880:	9806      	ldr	r0, [sp, #24]
 8011882:	9300      	str	r3, [sp, #0]
 8011884:	460a      	mov	r2, r1
 8011886:	9001      	str	r0, [sp, #4]
 8011888:	4633      	mov	r3, r6
 801188a:	4629      	mov	r1, r5
 801188c:	4811      	ldr	r0, [pc, #68]	@ (80118d4 <awe_modSinkPropertiesConstructor+0x5c>)
 801188e:	f00e fc59 	bl	8020144 <BaseClassModule_Constructor>
 8011892:	b1d0      	cbz	r0, 80118ca <awe_modSinkPropertiesConstructor+0x52>
 8011894:	6832      	ldr	r2, [r6, #0]
 8011896:	4604      	mov	r4, r0
 8011898:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 801189c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80118a0:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80118a4:	fb00 f003 	mul.w	r0, r0, r3
 80118a8:	0080      	lsls	r0, r0, #2
 80118aa:	462a      	mov	r2, r5
 80118ac:	2102      	movs	r1, #2
 80118ae:	f00d fef5 	bl	801f69c <awe_fwMalloc>
 80118b2:	6360      	str	r0, [r4, #52]	@ 0x34
 80118b4:	b148      	cbz	r0, 80118ca <awe_modSinkPropertiesConstructor+0x52>
 80118b6:	462a      	mov	r2, r5
 80118b8:	2102      	movs	r1, #2
 80118ba:	2008      	movs	r0, #8
 80118bc:	f00d feee 	bl	801f69c <awe_fwMalloc>
 80118c0:	63a0      	str	r0, [r4, #56]	@ 0x38
 80118c2:	b110      	cbz	r0, 80118ca <awe_modSinkPropertiesConstructor+0x52>
 80118c4:	4620      	mov	r0, r4
 80118c6:	b002      	add	sp, #8
 80118c8:	bd70      	pop	{r4, r5, r6, pc}
 80118ca:	2400      	movs	r4, #0
 80118cc:	4620      	mov	r0, r4
 80118ce:	b002      	add	sp, #8
 80118d0:	bd70      	pop	{r4, r5, r6, pc}
 80118d2:	bf00      	nop
 80118d4:	08034e54 	.word	0x08034e54

080118d8 <awe_modSinkPropertiesProcess>:
 80118d8:	6903      	ldr	r3, [r0, #16]
 80118da:	681b      	ldr	r3, [r3, #0]
 80118dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118e0:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 80118e4:	f3c5 0709 	ubfx	r7, r5, #0, #10
 80118e8:	b083      	sub	sp, #12
 80118ea:	68dc      	ldr	r4, [r3, #12]
 80118ec:	f3c5 65c0 	ubfx	r5, r5, #27, #1
 80118f0:	f3c2 0810 	ubfx	r8, r2, #0, #17
 80118f4:	b1b7      	cbz	r7, 8011924 <awe_modSinkPropertiesProcess+0x4c>
 80118f6:	4606      	mov	r6, r0
 80118f8:	ea4f 0988 	mov.w	r9, r8, lsl #2
 80118fc:	ea4f 0a47 	mov.w	sl, r7, lsl #1
 8011900:	ea4f 0b58 	mov.w	fp, r8, lsr #1
 8011904:	b98d      	cbnz	r5, 801192a <awe_modSinkPropertiesProcess+0x52>
 8011906:	eb04 0a87 	add.w	sl, r4, r7, lsl #2
 801190a:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 801190c:	f8cd 8000 	str.w	r8, [sp]
 8011910:	442a      	add	r2, r5
 8011912:	4620      	mov	r0, r4
 8011914:	2301      	movs	r3, #1
 8011916:	4639      	mov	r1, r7
 8011918:	3404      	adds	r4, #4
 801191a:	f009 fba3 	bl	801b064 <awe_vecCopy32>
 801191e:	4554      	cmp	r4, sl
 8011920:	444d      	add	r5, r9
 8011922:	d1f2      	bne.n	801190a <awe_modSinkPropertiesProcess+0x32>
 8011924:	b003      	add	sp, #12
 8011926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801192a:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 801192e:	2500      	movs	r5, #0
 8011930:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 8011932:	f8cd b000 	str.w	fp, [sp]
 8011936:	442a      	add	r2, r5
 8011938:	4620      	mov	r0, r4
 801193a:	2302      	movs	r3, #2
 801193c:	4651      	mov	r1, sl
 801193e:	f009 fb91 	bl	801b064 <awe_vecCopy32>
 8011942:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 8011944:	f8cd b000 	str.w	fp, [sp]
 8011948:	1d2b      	adds	r3, r5, #4
 801194a:	441a      	add	r2, r3
 801194c:	1d20      	adds	r0, r4, #4
 801194e:	2302      	movs	r3, #2
 8011950:	4651      	mov	r1, sl
 8011952:	3408      	adds	r4, #8
 8011954:	f009 fb86 	bl	801b064 <awe_vecCopy32>
 8011958:	42a7      	cmp	r7, r4
 801195a:	444d      	add	r5, r9
 801195c:	d1e8      	bne.n	8011930 <awe_modSinkPropertiesProcess+0x58>
 801195e:	b003      	add	sp, #12
 8011960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011964 <awe_modSMixer2x1Process>:
 8011964:	6903      	ldr	r3, [r0, #16]
 8011966:	edd0 0a0d 	vldr	s1, [r0, #52]	@ 0x34
 801196a:	681a      	ldr	r2, [r3, #0]
 801196c:	6899      	ldr	r1, [r3, #8]
 801196e:	685b      	ldr	r3, [r3, #4]
 8011970:	ed90 0a08 	vldr	s0, [r0, #32]
 8011974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011978:	e9d2 5605 	ldrd	r5, r6, [r2, #20]
 801197c:	b082      	sub	sp, #8
 801197e:	68cf      	ldr	r7, [r1, #12]
 8011980:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8011984:	4604      	mov	r4, r0
 8011986:	f3c5 0509 	ubfx	r5, r5, #0, #10
 801198a:	f3c6 0610 	ubfx	r6, r6, #0, #17
 801198e:	68d0      	ldr	r0, [r2, #12]
 8011990:	9600      	str	r6, [sp, #0]
 8011992:	462a      	mov	r2, r5
 8011994:	4639      	mov	r1, r7
 8011996:	f104 032c 	add.w	r3, r4, #44	@ 0x2c
 801199a:	f00c fbbf 	bl	801e11c <awe_vecScaleSmooth_Nch>
 801199e:	edd4 0a0d 	vldr	s1, [r4, #52]	@ 0x34
 80119a2:	ed94 0a09 	vldr	s0, [r4, #36]	@ 0x24
 80119a6:	9600      	str	r6, [sp, #0]
 80119a8:	462a      	mov	r2, r5
 80119aa:	4639      	mov	r1, r7
 80119ac:	4640      	mov	r0, r8
 80119ae:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80119b2:	f00c f89f 	bl	801daf4 <awe_vecScaleAddSmooth_Nch>
 80119b6:	b002      	add	sp, #8
 80119b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080119bc <awe_modSMixer2x1Set>:
 80119bc:	054b      	lsls	r3, r1, #21
 80119be:	d401      	bmi.n	80119c4 <awe_modSMixer2x1Set+0x8>
 80119c0:	2000      	movs	r0, #0
 80119c2:	4770      	bx	lr
 80119c4:	6903      	ldr	r3, [r0, #16]
 80119c6:	ed90 0a0a 	vldr	s0, [r0, #40]	@ 0x28
 80119ca:	681b      	ldr	r3, [r3, #0]
 80119cc:	b510      	push	{r4, lr}
 80119ce:	edd3 0a04 	vldr	s1, [r3, #16]
 80119d2:	4604      	mov	r4, r0
 80119d4:	2001      	movs	r0, #1
 80119d6:	f011 ffe3 	bl	80239a0 <design_smoother>
 80119da:	2000      	movs	r0, #0
 80119dc:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 80119e0:	bd10      	pop	{r4, pc}
 80119e2:	bf00      	nop

080119e4 <awe_modSoftClipGet>:
 80119e4:	b309      	cbz	r1, 8011a2a <awe_modSoftClipGet+0x46>
 80119e6:	6903      	ldr	r3, [r0, #16]
 80119e8:	681b      	ldr	r3, [r3, #0]
 80119ea:	695a      	ldr	r2, [r3, #20]
 80119ec:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80119f0:	b1da      	cbz	r2, 8011a2a <awe_modSoftClipGet+0x46>
 80119f2:	b470      	push	{r4, r5, r6}
 80119f4:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 80119f6:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80119fa:	4633      	mov	r3, r6
 80119fc:	1b9c      	subs	r4, r3, r6
 80119fe:	ecf3 7a01 	vldmia	r3!, {s15}
 8011a02:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a0a:	d009      	beq.n	8011a20 <awe_modSoftClipGet+0x3c>
 8011a0c:	e9d0 510b 	ldrd	r5, r1, [r0, #44]	@ 0x2c
 8011a10:	4425      	add	r5, r4
 8011a12:	edd5 6a00 	vldr	s13, [r5]
 8011a16:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8011a1a:	4421      	add	r1, r4
 8011a1c:	ed81 7a00 	vstr	s14, [r1]
 8011a20:	429a      	cmp	r2, r3
 8011a22:	d1eb      	bne.n	80119fc <awe_modSoftClipGet+0x18>
 8011a24:	2000      	movs	r0, #0
 8011a26:	bc70      	pop	{r4, r5, r6}
 8011a28:	4770      	bx	lr
 8011a2a:	2000      	movs	r0, #0
 8011a2c:	4770      	bx	lr
 8011a2e:	bf00      	nop

08011a30 <awe_modSoftClipConstructor>:
 8011a30:	b570      	push	{r4, r5, r6, lr}
 8011a32:	b082      	sub	sp, #8
 8011a34:	4616      	mov	r6, r2
 8011a36:	4605      	mov	r5, r0
 8011a38:	9806      	ldr	r0, [sp, #24]
 8011a3a:	9300      	str	r3, [sp, #0]
 8011a3c:	460a      	mov	r2, r1
 8011a3e:	9001      	str	r0, [sp, #4]
 8011a40:	4633      	mov	r3, r6
 8011a42:	4629      	mov	r1, r5
 8011a44:	4817      	ldr	r0, [pc, #92]	@ (8011aa4 <awe_modSoftClipConstructor+0x74>)
 8011a46:	f00e fb7d 	bl	8020144 <BaseClassModule_Constructor>
 8011a4a:	b338      	cbz	r0, 8011a9c <awe_modSoftClipConstructor+0x6c>
 8011a4c:	6833      	ldr	r3, [r6, #0]
 8011a4e:	4604      	mov	r4, r0
 8011a50:	6958      	ldr	r0, [r3, #20]
 8011a52:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011a56:	0080      	lsls	r0, r0, #2
 8011a58:	462a      	mov	r2, r5
 8011a5a:	f240 2131 	movw	r1, #561	@ 0x231
 8011a5e:	f00d fe1d 	bl	801f69c <awe_fwMalloc>
 8011a62:	62a0      	str	r0, [r4, #40]	@ 0x28
 8011a64:	b1d0      	cbz	r0, 8011a9c <awe_modSoftClipConstructor+0x6c>
 8011a66:	6833      	ldr	r3, [r6, #0]
 8011a68:	6958      	ldr	r0, [r3, #20]
 8011a6a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011a6e:	0080      	lsls	r0, r0, #2
 8011a70:	462a      	mov	r2, r5
 8011a72:	f240 2131 	movw	r1, #561	@ 0x231
 8011a76:	f00d fe11 	bl	801f69c <awe_fwMalloc>
 8011a7a:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8011a7c:	b170      	cbz	r0, 8011a9c <awe_modSoftClipConstructor+0x6c>
 8011a7e:	6833      	ldr	r3, [r6, #0]
 8011a80:	6958      	ldr	r0, [r3, #20]
 8011a82:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011a86:	0080      	lsls	r0, r0, #2
 8011a88:	462a      	mov	r2, r5
 8011a8a:	f240 2131 	movw	r1, #561	@ 0x231
 8011a8e:	f00d fe05 	bl	801f69c <awe_fwMalloc>
 8011a92:	6320      	str	r0, [r4, #48]	@ 0x30
 8011a94:	b110      	cbz	r0, 8011a9c <awe_modSoftClipConstructor+0x6c>
 8011a96:	4620      	mov	r0, r4
 8011a98:	b002      	add	sp, #8
 8011a9a:	bd70      	pop	{r4, r5, r6, pc}
 8011a9c:	2400      	movs	r4, #0
 8011a9e:	4620      	mov	r0, r4
 8011aa0:	b002      	add	sp, #8
 8011aa2:	bd70      	pop	{r4, r5, r6, pc}
 8011aa4:	08034ea4 	.word	0x08034ea4

08011aa8 <awe_modSoftClipProcess>:
 8011aa8:	6903      	ldr	r3, [r0, #16]
 8011aaa:	4684      	mov	ip, r0
 8011aac:	e9d3 2000 	ldrd	r2, r0, [r3]
 8011ab0:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 8011ab4:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8011ab8:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8011abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ac0:	68c7      	ldr	r7, [r0, #12]
 8011ac2:	68d0      	ldr	r0, [r2, #12]
 8011ac4:	fb03 f201 	mul.w	r2, r3, r1
 8011ac8:	b329      	cbz	r1, 8011b16 <awe_modSoftClipProcess+0x6e>
 8011aca:	3b01      	subs	r3, #1
 8011acc:	fb01 f303 	mul.w	r3, r1, r3
 8011ad0:	eb01 0803 	add.w	r8, r1, r3
 8011ad4:	009e      	lsls	r6, r3, #2
 8011ad6:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8011ada:	f8dc 4028 	ldr.w	r4, [ip, #40]	@ 0x28
 8011ade:	eb00 0308 	add.w	r3, r0, r8
 8011ae2:	1981      	adds	r1, r0, r6
 8011ae4:	f851 5b04 	ldr.w	r5, [r1], #4
 8011ae8:	f844 5b04 	str.w	r5, [r4], #4
 8011aec:	4299      	cmp	r1, r3
 8011aee:	d1f9      	bne.n	8011ae4 <awe_modSoftClipProcess+0x3c>
 8011af0:	4664      	mov	r4, ip
 8011af2:	4639      	mov	r1, r7
 8011af4:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8011af8:	ed9c 0a09 	vldr	s0, [ip, #36]	@ 0x24
 8011afc:	f00c ff2e 	bl	801e95c <awe_vecSoftClip>
 8011b00:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011b02:	19bb      	adds	r3, r7, r6
 8011b04:	4447      	add	r7, r8
 8011b06:	f853 0b04 	ldr.w	r0, [r3], #4
 8011b0a:	f842 0b04 	str.w	r0, [r2], #4
 8011b0e:	429f      	cmp	r7, r3
 8011b10:	d1f9      	bne.n	8011b06 <awe_modSoftClipProcess+0x5e>
 8011b12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b16:	4639      	mov	r1, r7
 8011b18:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8011b1c:	ed9c 0a09 	vldr	s0, [ip, #36]	@ 0x24
 8011b20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011b24:	f00c bf1a 	b.w	801e95c <awe_vecSoftClip>

08011b28 <awe_modSoftClipSet>:
 8011b28:	b909      	cbnz	r1, 8011b2e <awe_modSoftClipSet+0x6>
 8011b2a:	2000      	movs	r0, #0
 8011b2c:	4770      	bx	lr
 8011b2e:	ed90 0a08 	vldr	s0, [r0, #32]
 8011b32:	eddf 7a06 	vldr	s15, [pc, #24]	@ 8011b4c <awe_modSoftClipSet+0x24>
 8011b36:	b510      	push	{r4, lr}
 8011b38:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011b3c:	4604      	mov	r4, r0
 8011b3e:	f01c fe5d 	bl	802e7fc <expf>
 8011b42:	2000      	movs	r0, #0
 8011b44:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 8011b48:	bd10      	pop	{r4, pc}
 8011b4a:	bf00      	nop
 8011b4c:	3debc8e3 	.word	0x3debc8e3

08011b50 <awe_modSoloMuteConstructor>:
 8011b50:	b530      	push	{r4, r5, lr}
 8011b52:	b083      	sub	sp, #12
 8011b54:	4605      	mov	r5, r0
 8011b56:	9806      	ldr	r0, [sp, #24]
 8011b58:	e9cd 3000 	strd	r3, r0, [sp]
 8011b5c:	4613      	mov	r3, r2
 8011b5e:	4818      	ldr	r0, [pc, #96]	@ (8011bc0 <awe_modSoloMuteConstructor+0x70>)
 8011b60:	460a      	mov	r2, r1
 8011b62:	4629      	mov	r1, r5
 8011b64:	f00e faee 	bl	8020144 <BaseClassModule_Constructor>
 8011b68:	b328      	cbz	r0, 8011bb6 <awe_modSoloMuteConstructor+0x66>
 8011b6a:	4604      	mov	r4, r0
 8011b6c:	6a00      	ldr	r0, [r0, #32]
 8011b6e:	462a      	mov	r2, r5
 8011b70:	0080      	lsls	r0, r0, #2
 8011b72:	2102      	movs	r1, #2
 8011b74:	f00d fd92 	bl	801f69c <awe_fwMalloc>
 8011b78:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8011b7a:	b1e0      	cbz	r0, 8011bb6 <awe_modSoloMuteConstructor+0x66>
 8011b7c:	6a20      	ldr	r0, [r4, #32]
 8011b7e:	462a      	mov	r2, r5
 8011b80:	0080      	lsls	r0, r0, #2
 8011b82:	2102      	movs	r1, #2
 8011b84:	f00d fd8a 	bl	801f69c <awe_fwMalloc>
 8011b88:	6320      	str	r0, [r4, #48]	@ 0x30
 8011b8a:	b1a0      	cbz	r0, 8011bb6 <awe_modSoloMuteConstructor+0x66>
 8011b8c:	6a20      	ldr	r0, [r4, #32]
 8011b8e:	462a      	mov	r2, r5
 8011b90:	0080      	lsls	r0, r0, #2
 8011b92:	f240 2131 	movw	r1, #561	@ 0x231
 8011b96:	f00d fd81 	bl	801f69c <awe_fwMalloc>
 8011b9a:	6360      	str	r0, [r4, #52]	@ 0x34
 8011b9c:	b158      	cbz	r0, 8011bb6 <awe_modSoloMuteConstructor+0x66>
 8011b9e:	6a20      	ldr	r0, [r4, #32]
 8011ba0:	462a      	mov	r2, r5
 8011ba2:	0080      	lsls	r0, r0, #2
 8011ba4:	f240 2131 	movw	r1, #561	@ 0x231
 8011ba8:	f00d fd78 	bl	801f69c <awe_fwMalloc>
 8011bac:	63a0      	str	r0, [r4, #56]	@ 0x38
 8011bae:	b110      	cbz	r0, 8011bb6 <awe_modSoloMuteConstructor+0x66>
 8011bb0:	4620      	mov	r0, r4
 8011bb2:	b003      	add	sp, #12
 8011bb4:	bd30      	pop	{r4, r5, pc}
 8011bb6:	2400      	movs	r4, #0
 8011bb8:	4620      	mov	r0, r4
 8011bba:	b003      	add	sp, #12
 8011bbc:	bd30      	pop	{r4, r5, pc}
 8011bbe:	bf00      	nop
 8011bc0:	08034ecc 	.word	0x08034ecc

08011bc4 <awe_modSoloMuteProcess>:
 8011bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bc8:	7e03      	ldrb	r3, [r0, #24]
 8011bca:	6902      	ldr	r2, [r0, #16]
 8011bcc:	ed2d 8b02 	vpush	{d8}
 8011bd0:	2b01      	cmp	r3, #1
 8011bd2:	b089      	sub	sp, #36	@ 0x24
 8011bd4:	4680      	mov	r8, r0
 8011bd6:	ed90 8a0a 	vldr	s16, [r0, #40]	@ 0x28
 8011bda:	d04c      	beq.n	8011c76 <awe_modSoloMuteProcess+0xb2>
 8011bdc:	dd46      	ble.n	8011c6c <awe_modSoloMuteProcess+0xa8>
 8011bde:	009b      	lsls	r3, r3, #2
 8011be0:	18d1      	adds	r1, r2, r3
 8011be2:	3a04      	subs	r2, #4
 8011be4:	18d3      	adds	r3, r2, r3
 8011be6:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8011bea:	9103      	str	r1, [sp, #12]
 8011bec:	9202      	str	r2, [sp, #8]
 8011bee:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8011bf2:	9202      	str	r2, [sp, #8]
 8011bf4:	68df      	ldr	r7, [r3, #12]
 8011bf6:	9804      	ldr	r0, [sp, #16]
 8011bf8:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 8011bfc:	9b03      	ldr	r3, [sp, #12]
 8011bfe:	4619      	mov	r1, r3
 8011c00:	eba3 0900 	sub.w	r9, r3, r0
 8011c04:	f851 3b04 	ldr.w	r3, [r1], #4
 8011c08:	9103      	str	r1, [sp, #12]
 8011c0a:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8011c0e:	f3c2 0a10 	ubfx	sl, r2, #0, #17
 8011c12:	68de      	ldr	r6, [r3, #12]
 8011c14:	b335      	cbz	r5, 8011c64 <awe_modSoloMuteProcess+0xa0>
 8011c16:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 8011c1a:	f105 3bff 	add.w	fp, r5, #4294967295
 8011c1e:	2400      	movs	r4, #0
 8011c20:	e001      	b.n	8011c26 <awe_modSoloMuteProcess+0x62>
 8011c22:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 8011c26:	f8d8 2038 	ldr.w	r2, [r8, #56]	@ 0x38
 8011c2a:	444b      	add	r3, r9
 8011c2c:	444a      	add	r2, r9
 8011c2e:	f8d3 c000 	ldr.w	ip, [r3]
 8011c32:	ed92 0a00 	vldr	s0, [r2]
 8011c36:	f8cd a004 	str.w	sl, [sp, #4]
 8011c3a:	ab07      	add	r3, sp, #28
 8011c3c:	9300      	str	r3, [sp, #0]
 8011c3e:	eef0 0a48 	vmov.f32	s1, s16
 8011c42:	462b      	mov	r3, r5
 8011c44:	4632      	mov	r2, r6
 8011c46:	4629      	mov	r1, r5
 8011c48:	4638      	mov	r0, r7
 8011c4a:	f8cd c01c 	str.w	ip, [sp, #28]
 8011c4e:	f00c f885 	bl	801dd5c <awe_vecScaleSmooth>
 8011c52:	455c      	cmp	r4, fp
 8011c54:	d044      	beq.n	8011ce0 <awe_modSoloMuteProcess+0x11c>
 8011c56:	3401      	adds	r4, #1
 8011c58:	42a5      	cmp	r5, r4
 8011c5a:	f107 0704 	add.w	r7, r7, #4
 8011c5e:	f106 0604 	add.w	r6, r6, #4
 8011c62:	d1de      	bne.n	8011c22 <awe_modSoloMuteProcess+0x5e>
 8011c64:	9b05      	ldr	r3, [sp, #20]
 8011c66:	9a02      	ldr	r2, [sp, #8]
 8011c68:	4293      	cmp	r3, r2
 8011c6a:	d1c0      	bne.n	8011bee <awe_modSoloMuteProcess+0x2a>
 8011c6c:	b009      	add	sp, #36	@ 0x24
 8011c6e:	ecbd 8b02 	vpop	{d8}
 8011c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c76:	e9d2 3200 	ldrd	r3, r2, [r2]
 8011c7a:	e9d3 5605 	ldrd	r5, r6, [r3, #20]
 8011c7e:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8011c82:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8011c86:	68df      	ldr	r7, [r3, #12]
 8011c88:	f3c6 0610 	ubfx	r6, r6, #0, #17
 8011c8c:	2d00      	cmp	r5, #0
 8011c8e:	d0ed      	beq.n	8011c6c <awe_modSoloMuteProcess+0xa8>
 8011c90:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8011c92:	ea4f 0b85 	mov.w	fp, r5, lsl #2
 8011c96:	2400      	movs	r4, #0
 8011c98:	f10d 0a1c 	add.w	sl, sp, #28
 8011c9c:	f8d8 2038 	ldr.w	r2, [r8, #56]	@ 0x38
 8011ca0:	4423      	add	r3, r4
 8011ca2:	4422      	add	r2, r4
 8011ca4:	ed92 0a00 	vldr	s0, [r2]
 8011ca8:	f8d3 c000 	ldr.w	ip, [r3]
 8011cac:	f8cd c01c 	str.w	ip, [sp, #28]
 8011cb0:	eb09 0204 	add.w	r2, r9, r4
 8011cb4:	462b      	mov	r3, r5
 8011cb6:	4629      	mov	r1, r5
 8011cb8:	1938      	adds	r0, r7, r4
 8011cba:	e9cd a600 	strd	sl, r6, [sp]
 8011cbe:	eef0 0a48 	vmov.f32	s1, s16
 8011cc2:	f00c f84b 	bl	801dd5c <awe_vecScaleSmooth>
 8011cc6:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 8011cca:	9907      	ldr	r1, [sp, #28]
 8011ccc:	191a      	adds	r2, r3, r4
 8011cce:	3404      	adds	r4, #4
 8011cd0:	455c      	cmp	r4, fp
 8011cd2:	6011      	str	r1, [r2, #0]
 8011cd4:	d1e2      	bne.n	8011c9c <awe_modSoloMuteProcess+0xd8>
 8011cd6:	b009      	add	sp, #36	@ 0x24
 8011cd8:	ecbd 8b02 	vpop	{d8}
 8011cdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ce0:	f8d8 3034 	ldr.w	r3, [r8, #52]	@ 0x34
 8011ce4:	9907      	ldr	r1, [sp, #28]
 8011ce6:	3401      	adds	r4, #1
 8011ce8:	eb03 0209 	add.w	r2, r3, r9
 8011cec:	42a5      	cmp	r5, r4
 8011cee:	f107 0704 	add.w	r7, r7, #4
 8011cf2:	f106 0604 	add.w	r6, r6, #4
 8011cf6:	6011      	str	r1, [r2, #0]
 8011cf8:	d195      	bne.n	8011c26 <awe_modSoloMuteProcess+0x62>
 8011cfa:	e7b3      	b.n	8011c64 <awe_modSoloMuteProcess+0xa0>

08011cfc <awe_modSoloMuteSet>:
 8011cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d00:	7e03      	ldrb	r3, [r0, #24]
 8011d02:	6902      	ldr	r2, [r0, #16]
 8011d04:	b085      	sub	sp, #20
 8011d06:	2b01      	cmp	r3, #1
 8011d08:	9201      	str	r2, [sp, #4]
 8011d0a:	d04b      	beq.n	8011da4 <awe_modSoloMuteSet+0xa8>
 8011d0c:	dd38      	ble.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011d0e:	f411 5fc0 	tst.w	r1, #6144	@ 0x1800
 8011d12:	d035      	beq.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011d14:	6a03      	ldr	r3, [r0, #32]
 8011d16:	2b00      	cmp	r3, #0
 8011d18:	dd32      	ble.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011d1a:	e9d0 420b 	ldrd	r4, r2, [r0, #44]	@ 0x2c
 8011d1e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8011d20:	1f16      	subs	r6, r2, #4
 8011d22:	009b      	lsls	r3, r3, #2
 8011d24:	f1a4 0a04 	sub.w	sl, r4, #4
 8011d28:	2200      	movs	r2, #0
 8011d2a:	9302      	str	r3, [sp, #8]
 8011d2c:	9603      	str	r6, [sp, #12]
 8011d2e:	46a1      	mov	r9, r4
 8011d30:	eb0a 0b03 	add.w	fp, sl, r3
 8011d34:	46b0      	mov	r8, r6
 8011d36:	4637      	mov	r7, r6
 8011d38:	4653      	mov	r3, sl
 8011d3a:	462e      	mov	r6, r5
 8011d3c:	4614      	mov	r4, r2
 8011d3e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011d42:	4684      	mov	ip, r0
 8011d44:	468e      	mov	lr, r1
 8011d46:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8011d4a:	f857 1f04 	ldr.w	r1, [r7, #4]!
 8011d4e:	ece6 7a01 	vstmia	r6!, {s15}
 8011d52:	455b      	cmp	r3, fp
 8011d54:	4404      	add	r4, r0
 8011d56:	440a      	add	r2, r1
 8011d58:	d1f5      	bne.n	8011d46 <awe_modSoloMuteSet+0x4a>
 8011d5a:	4660      	mov	r0, ip
 8011d5c:	4671      	mov	r1, lr
 8011d5e:	2c00      	cmp	r4, #0
 8011d60:	d16a      	bne.n	8011e38 <awe_modSoloMuteSet+0x13c>
 8011d62:	b16a      	cbz	r2, 8011d80 <awe_modSoloMuteSet+0x84>
 8011d64:	e9dd 6302 	ldrd	r6, r3, [sp, #8]
 8011d68:	4433      	add	r3, r6
 8011d6a:	2400      	movs	r4, #0
 8011d6c:	461a      	mov	r2, r3
 8011d6e:	f858 3f04 	ldr.w	r3, [r8, #4]!
 8011d72:	2b01      	cmp	r3, #1
 8011d74:	bf08      	it	eq
 8011d76:	602c      	streq	r4, [r5, #0]
 8011d78:	4590      	cmp	r8, r2
 8011d7a:	f105 0504 	add.w	r5, r5, #4
 8011d7e:	d1f6      	bne.n	8011d6e <awe_modSoloMuteSet+0x72>
 8011d80:	058b      	lsls	r3, r1, #22
 8011d82:	d50b      	bpl.n	8011d9c <awe_modSoloMuteSet+0xa0>
 8011d84:	9b01      	ldr	r3, [sp, #4]
 8011d86:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 8011d8a:	681b      	ldr	r3, [r3, #0]
 8011d8c:	4604      	mov	r4, r0
 8011d8e:	edd3 0a04 	vldr	s1, [r3, #16]
 8011d92:	2001      	movs	r0, #1
 8011d94:	f011 fe04 	bl	80239a0 <design_smoother>
 8011d98:	ed84 0a0a 	vstr	s0, [r4, #40]	@ 0x28
 8011d9c:	2000      	movs	r0, #0
 8011d9e:	b005      	add	sp, #20
 8011da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011da4:	f411 5fc0 	tst.w	r1, #6144	@ 0x1800
 8011da8:	d0ea      	beq.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011daa:	6813      	ldr	r3, [r2, #0]
 8011dac:	695b      	ldr	r3, [r3, #20]
 8011dae:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8011db2:	2b00      	cmp	r3, #0
 8011db4:	d0e4      	beq.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011db6:	e9d0 420b 	ldrd	r4, r2, [r0, #44]	@ 0x2c
 8011dba:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8011dbc:	1f16      	subs	r6, r2, #4
 8011dbe:	009b      	lsls	r3, r3, #2
 8011dc0:	f1a4 0a04 	sub.w	sl, r4, #4
 8011dc4:	2200      	movs	r2, #0
 8011dc6:	9302      	str	r3, [sp, #8]
 8011dc8:	9603      	str	r6, [sp, #12]
 8011dca:	46a1      	mov	r9, r4
 8011dcc:	eb0a 0b03 	add.w	fp, sl, r3
 8011dd0:	46b0      	mov	r8, r6
 8011dd2:	4637      	mov	r7, r6
 8011dd4:	4653      	mov	r3, sl
 8011dd6:	462e      	mov	r6, r5
 8011dd8:	4614      	mov	r4, r2
 8011dda:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011dde:	4684      	mov	ip, r0
 8011de0:	468e      	mov	lr, r1
 8011de2:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8011de6:	f857 1f04 	ldr.w	r1, [r7, #4]!
 8011dea:	ece6 7a01 	vstmia	r6!, {s15}
 8011dee:	459b      	cmp	fp, r3
 8011df0:	4404      	add	r4, r0
 8011df2:	440a      	add	r2, r1
 8011df4:	d1f5      	bne.n	8011de2 <awe_modSoloMuteSet+0xe6>
 8011df6:	4660      	mov	r0, ip
 8011df8:	4671      	mov	r1, lr
 8011dfa:	b3dc      	cbz	r4, 8011e74 <awe_modSoloMuteSet+0x178>
 8011dfc:	2400      	movs	r4, #0
 8011dfe:	b192      	cbz	r2, 8011e26 <awe_modSoloMuteSet+0x12a>
 8011e00:	e9dd 6302 	ldrd	r6, r3, [sp, #8]
 8011e04:	4433      	add	r3, r6
 8011e06:	461a      	mov	r2, r3
 8011e08:	f858 3f04 	ldr.w	r3, [r8, #4]!
 8011e0c:	2b01      	cmp	r3, #1
 8011e0e:	d002      	beq.n	8011e16 <awe_modSoloMuteSet+0x11a>
 8011e10:	f8d9 3000 	ldr.w	r3, [r9]
 8011e14:	b903      	cbnz	r3, 8011e18 <awe_modSoloMuteSet+0x11c>
 8011e16:	602c      	str	r4, [r5, #0]
 8011e18:	4542      	cmp	r2, r8
 8011e1a:	f105 0504 	add.w	r5, r5, #4
 8011e1e:	f109 0904 	add.w	r9, r9, #4
 8011e22:	d1f1      	bne.n	8011e08 <awe_modSoloMuteSet+0x10c>
 8011e24:	e7ac      	b.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e26:	f85a 2f04 	ldr.w	r2, [sl, #4]!
 8011e2a:	b902      	cbnz	r2, 8011e2e <awe_modSoloMuteSet+0x132>
 8011e2c:	602c      	str	r4, [r5, #0]
 8011e2e:	459a      	cmp	sl, r3
 8011e30:	f105 0504 	add.w	r5, r5, #4
 8011e34:	d1f7      	bne.n	8011e26 <awe_modSoloMuteSet+0x12a>
 8011e36:	e7a3      	b.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e38:	2400      	movs	r4, #0
 8011e3a:	b192      	cbz	r2, 8011e62 <awe_modSoloMuteSet+0x166>
 8011e3c:	e9dd 6302 	ldrd	r6, r3, [sp, #8]
 8011e40:	4433      	add	r3, r6
 8011e42:	461a      	mov	r2, r3
 8011e44:	f858 3f04 	ldr.w	r3, [r8, #4]!
 8011e48:	2b01      	cmp	r3, #1
 8011e4a:	d002      	beq.n	8011e52 <awe_modSoloMuteSet+0x156>
 8011e4c:	f8d9 3000 	ldr.w	r3, [r9]
 8011e50:	b903      	cbnz	r3, 8011e54 <awe_modSoloMuteSet+0x158>
 8011e52:	602c      	str	r4, [r5, #0]
 8011e54:	4590      	cmp	r8, r2
 8011e56:	f105 0504 	add.w	r5, r5, #4
 8011e5a:	f109 0904 	add.w	r9, r9, #4
 8011e5e:	d1f1      	bne.n	8011e44 <awe_modSoloMuteSet+0x148>
 8011e60:	e78e      	b.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e62:	f85a 2f04 	ldr.w	r2, [sl, #4]!
 8011e66:	b902      	cbnz	r2, 8011e6a <awe_modSoloMuteSet+0x16e>
 8011e68:	602c      	str	r4, [r5, #0]
 8011e6a:	459a      	cmp	sl, r3
 8011e6c:	f105 0504 	add.w	r5, r5, #4
 8011e70:	d1f7      	bne.n	8011e62 <awe_modSoloMuteSet+0x166>
 8011e72:	e785      	b.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e74:	2a00      	cmp	r2, #0
 8011e76:	d083      	beq.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e78:	e9dd 6302 	ldrd	r6, r3, [sp, #8]
 8011e7c:	4433      	add	r3, r6
 8011e7e:	2400      	movs	r4, #0
 8011e80:	461a      	mov	r2, r3
 8011e82:	f858 3f04 	ldr.w	r3, [r8, #4]!
 8011e86:	2b01      	cmp	r3, #1
 8011e88:	bf08      	it	eq
 8011e8a:	602c      	streq	r4, [r5, #0]
 8011e8c:	4542      	cmp	r2, r8
 8011e8e:	f105 0504 	add.w	r5, r5, #4
 8011e92:	d1f6      	bne.n	8011e82 <awe_modSoloMuteSet+0x186>
 8011e94:	e774      	b.n	8011d80 <awe_modSoloMuteSet+0x84>
 8011e96:	bf00      	nop

08011e98 <awe_modSourceConstructor>:
 8011e98:	b570      	push	{r4, r5, r6, lr}
 8011e9a:	b082      	sub	sp, #8
 8011e9c:	4616      	mov	r6, r2
 8011e9e:	4605      	mov	r5, r0
 8011ea0:	9806      	ldr	r0, [sp, #24]
 8011ea2:	9300      	str	r3, [sp, #0]
 8011ea4:	460a      	mov	r2, r1
 8011ea6:	9001      	str	r0, [sp, #4]
 8011ea8:	4633      	mov	r3, r6
 8011eaa:	4629      	mov	r1, r5
 8011eac:	480d      	ldr	r0, [pc, #52]	@ (8011ee4 <awe_modSourceConstructor+0x4c>)
 8011eae:	f00e f949 	bl	8020144 <BaseClassModule_Constructor>
 8011eb2:	b198      	cbz	r0, 8011edc <awe_modSourceConstructor+0x44>
 8011eb4:	6832      	ldr	r2, [r6, #0]
 8011eb6:	4604      	mov	r4, r0
 8011eb8:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 8011ebc:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8011ec0:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011ec4:	fb00 f003 	mul.w	r0, r0, r3
 8011ec8:	462a      	mov	r2, r5
 8011eca:	0080      	lsls	r0, r0, #2
 8011ecc:	2102      	movs	r1, #2
 8011ece:	f00d fbe5 	bl	801f69c <awe_fwMalloc>
 8011ed2:	6220      	str	r0, [r4, #32]
 8011ed4:	b110      	cbz	r0, 8011edc <awe_modSourceConstructor+0x44>
 8011ed6:	4620      	mov	r0, r4
 8011ed8:	b002      	add	sp, #8
 8011eda:	bd70      	pop	{r4, r5, r6, pc}
 8011edc:	2400      	movs	r4, #0
 8011ede:	4620      	mov	r0, r4
 8011ee0:	b002      	add	sp, #8
 8011ee2:	bd70      	pop	{r4, r5, r6, pc}
 8011ee4:	08034ef4 	.word	0x08034ef4

08011ee8 <awe_modSourceProcess>:
 8011ee8:	6903      	ldr	r3, [r0, #16]
 8011eea:	681b      	ldr	r3, [r3, #0]
 8011eec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ef0:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 8011ef4:	f3c5 0609 	ubfx	r6, r5, #0, #10
 8011ef8:	f015 6500 	ands.w	r5, r5, #134217728	@ 0x8000000
 8011efc:	b082      	sub	sp, #8
 8011efe:	4607      	mov	r7, r0
 8011f00:	68dc      	ldr	r4, [r3, #12]
 8011f02:	f3c2 0810 	ubfx	r8, r2, #0, #17
 8011f06:	d021      	beq.n	8011f4c <awe_modSourceProcess+0x64>
 8011f08:	b1ee      	cbz	r6, 8011f46 <awe_modSourceProcess+0x5e>
 8011f0a:	eb04 0ac6 	add.w	sl, r4, r6, lsl #3
 8011f0e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8011f12:	2500      	movs	r5, #0
 8011f14:	ea4f 0668 	mov.w	r6, r8, asr #1
 8011f18:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8011f1c:	6a38      	ldr	r0, [r7, #32]
 8011f1e:	9600      	str	r6, [sp, #0]
 8011f20:	4428      	add	r0, r5
 8011f22:	4622      	mov	r2, r4
 8011f24:	464b      	mov	r3, r9
 8011f26:	2102      	movs	r1, #2
 8011f28:	f009 f89c 	bl	801b064 <awe_vecCopy32>
 8011f2c:	6a38      	ldr	r0, [r7, #32]
 8011f2e:	9600      	str	r6, [sp, #0]
 8011f30:	1d2b      	adds	r3, r5, #4
 8011f32:	4418      	add	r0, r3
 8011f34:	1d22      	adds	r2, r4, #4
 8011f36:	464b      	mov	r3, r9
 8011f38:	2102      	movs	r1, #2
 8011f3a:	3408      	adds	r4, #8
 8011f3c:	f009 f892 	bl	801b064 <awe_vecCopy32>
 8011f40:	45a2      	cmp	sl, r4
 8011f42:	4445      	add	r5, r8
 8011f44:	d1ea      	bne.n	8011f1c <awe_modSourceProcess+0x34>
 8011f46:	b002      	add	sp, #8
 8011f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011f4c:	2e00      	cmp	r6, #0
 8011f4e:	d0fa      	beq.n	8011f46 <awe_modSourceProcess+0x5e>
 8011f50:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 8011f54:	ea4f 0988 	mov.w	r9, r8, lsl #2
 8011f58:	6a38      	ldr	r0, [r7, #32]
 8011f5a:	f8cd 8000 	str.w	r8, [sp]
 8011f5e:	4428      	add	r0, r5
 8011f60:	4622      	mov	r2, r4
 8011f62:	4633      	mov	r3, r6
 8011f64:	2101      	movs	r1, #1
 8011f66:	3404      	adds	r4, #4
 8011f68:	f009 f87c 	bl	801b064 <awe_vecCopy32>
 8011f6c:	45a2      	cmp	sl, r4
 8011f6e:	444d      	add	r5, r9
 8011f70:	d1f2      	bne.n	8011f58 <awe_modSourceProcess+0x70>
 8011f72:	b002      	add	sp, #8
 8011f74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011f78 <awe_modSourceIntConstructor>:
 8011f78:	b570      	push	{r4, r5, r6, lr}
 8011f7a:	b082      	sub	sp, #8
 8011f7c:	4616      	mov	r6, r2
 8011f7e:	4605      	mov	r5, r0
 8011f80:	9806      	ldr	r0, [sp, #24]
 8011f82:	9300      	str	r3, [sp, #0]
 8011f84:	460a      	mov	r2, r1
 8011f86:	9001      	str	r0, [sp, #4]
 8011f88:	4633      	mov	r3, r6
 8011f8a:	4629      	mov	r1, r5
 8011f8c:	480d      	ldr	r0, [pc, #52]	@ (8011fc4 <awe_modSourceIntConstructor+0x4c>)
 8011f8e:	f00e f8d9 	bl	8020144 <BaseClassModule_Constructor>
 8011f92:	b198      	cbz	r0, 8011fbc <awe_modSourceIntConstructor+0x44>
 8011f94:	6832      	ldr	r2, [r6, #0]
 8011f96:	4604      	mov	r4, r0
 8011f98:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 8011f9c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8011fa0:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8011fa4:	fb00 f003 	mul.w	r0, r0, r3
 8011fa8:	462a      	mov	r2, r5
 8011faa:	0080      	lsls	r0, r0, #2
 8011fac:	2102      	movs	r1, #2
 8011fae:	f00d fb75 	bl	801f69c <awe_fwMalloc>
 8011fb2:	6220      	str	r0, [r4, #32]
 8011fb4:	b110      	cbz	r0, 8011fbc <awe_modSourceIntConstructor+0x44>
 8011fb6:	4620      	mov	r0, r4
 8011fb8:	b002      	add	sp, #8
 8011fba:	bd70      	pop	{r4, r5, r6, pc}
 8011fbc:	2400      	movs	r4, #0
 8011fbe:	4620      	mov	r0, r4
 8011fc0:	b002      	add	sp, #8
 8011fc2:	bd70      	pop	{r4, r5, r6, pc}
 8011fc4:	08034f1c 	.word	0x08034f1c

08011fc8 <awe_modSourceIntProcess>:
 8011fc8:	6903      	ldr	r3, [r0, #16]
 8011fca:	681b      	ldr	r3, [r3, #0]
 8011fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011fd0:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 8011fd4:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8011fd8:	b082      	sub	sp, #8
 8011fda:	68dc      	ldr	r4, [r3, #12]
 8011fdc:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8011fe0:	b196      	cbz	r6, 8012008 <awe_modSourceIntProcess+0x40>
 8011fe2:	4680      	mov	r8, r0
 8011fe4:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 8011fe8:	ea4f 0987 	mov.w	r9, r7, lsl #2
 8011fec:	2500      	movs	r5, #0
 8011fee:	f8d8 0020 	ldr.w	r0, [r8, #32]
 8011ff2:	9700      	str	r7, [sp, #0]
 8011ff4:	4428      	add	r0, r5
 8011ff6:	4622      	mov	r2, r4
 8011ff8:	4633      	mov	r3, r6
 8011ffa:	2101      	movs	r1, #1
 8011ffc:	3404      	adds	r4, #4
 8011ffe:	f009 f831 	bl	801b064 <awe_vecCopy32>
 8012002:	45a2      	cmp	sl, r4
 8012004:	444d      	add	r5, r9
 8012006:	d1f2      	bne.n	8011fee <awe_modSourceIntProcess+0x26>
 8012008:	b002      	add	sp, #8
 801200a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801200e:	bf00      	nop

08012010 <awe_modSourceIntPropertiesConstructor>:
 8012010:	b570      	push	{r4, r5, r6, lr}
 8012012:	b082      	sub	sp, #8
 8012014:	4616      	mov	r6, r2
 8012016:	4605      	mov	r5, r0
 8012018:	9806      	ldr	r0, [sp, #24]
 801201a:	9300      	str	r3, [sp, #0]
 801201c:	460a      	mov	r2, r1
 801201e:	9001      	str	r0, [sp, #4]
 8012020:	4633      	mov	r3, r6
 8012022:	4629      	mov	r1, r5
 8012024:	480d      	ldr	r0, [pc, #52]	@ (801205c <awe_modSourceIntPropertiesConstructor+0x4c>)
 8012026:	f00e f88d 	bl	8020144 <BaseClassModule_Constructor>
 801202a:	b198      	cbz	r0, 8012054 <awe_modSourceIntPropertiesConstructor+0x44>
 801202c:	6832      	ldr	r2, [r6, #0]
 801202e:	4604      	mov	r4, r0
 8012030:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 8012034:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8012038:	f3c0 0009 	ubfx	r0, r0, #0, #10
 801203c:	fb00 f003 	mul.w	r0, r0, r3
 8012040:	462a      	mov	r2, r5
 8012042:	0080      	lsls	r0, r0, #2
 8012044:	2102      	movs	r1, #2
 8012046:	f00d fb29 	bl	801f69c <awe_fwMalloc>
 801204a:	6320      	str	r0, [r4, #48]	@ 0x30
 801204c:	b110      	cbz	r0, 8012054 <awe_modSourceIntPropertiesConstructor+0x44>
 801204e:	4620      	mov	r0, r4
 8012050:	b002      	add	sp, #8
 8012052:	bd70      	pop	{r4, r5, r6, pc}
 8012054:	2400      	movs	r4, #0
 8012056:	4620      	mov	r0, r4
 8012058:	b002      	add	sp, #8
 801205a:	bd70      	pop	{r4, r5, r6, pc}
 801205c:	08034f44 	.word	0x08034f44

08012060 <awe_modSourceIntPropertiesProcess>:
 8012060:	6903      	ldr	r3, [r0, #16]
 8012062:	681b      	ldr	r3, [r3, #0]
 8012064:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012068:	e9d3 6705 	ldrd	r6, r7, [r3, #20]
 801206c:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8012070:	b082      	sub	sp, #8
 8012072:	68dc      	ldr	r4, [r3, #12]
 8012074:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8012078:	b196      	cbz	r6, 80120a0 <awe_modSourceIntPropertiesProcess+0x40>
 801207a:	4680      	mov	r8, r0
 801207c:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 8012080:	ea4f 0987 	mov.w	r9, r7, lsl #2
 8012084:	2500      	movs	r5, #0
 8012086:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
 801208a:	9700      	str	r7, [sp, #0]
 801208c:	4428      	add	r0, r5
 801208e:	4622      	mov	r2, r4
 8012090:	4633      	mov	r3, r6
 8012092:	2101      	movs	r1, #1
 8012094:	3404      	adds	r4, #4
 8012096:	f008 ffe5 	bl	801b064 <awe_vecCopy32>
 801209a:	45a2      	cmp	sl, r4
 801209c:	444d      	add	r5, r9
 801209e:	d1f2      	bne.n	8012086 <awe_modSourceIntPropertiesProcess+0x26>
 80120a0:	b002      	add	sp, #8
 80120a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80120a6:	bf00      	nop

080120a8 <awe_modSourcePropertiesConstructor>:
 80120a8:	b570      	push	{r4, r5, r6, lr}
 80120aa:	b082      	sub	sp, #8
 80120ac:	4616      	mov	r6, r2
 80120ae:	4605      	mov	r5, r0
 80120b0:	9806      	ldr	r0, [sp, #24]
 80120b2:	9300      	str	r3, [sp, #0]
 80120b4:	460a      	mov	r2, r1
 80120b6:	9001      	str	r0, [sp, #4]
 80120b8:	4633      	mov	r3, r6
 80120ba:	4629      	mov	r1, r5
 80120bc:	480d      	ldr	r0, [pc, #52]	@ (80120f4 <awe_modSourcePropertiesConstructor+0x4c>)
 80120be:	f00e f841 	bl	8020144 <BaseClassModule_Constructor>
 80120c2:	b198      	cbz	r0, 80120ec <awe_modSourcePropertiesConstructor+0x44>
 80120c4:	6832      	ldr	r2, [r6, #0]
 80120c6:	4604      	mov	r4, r0
 80120c8:	e9d2 0305 	ldrd	r0, r3, [r2, #20]
 80120cc:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80120d0:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80120d4:	fb00 f003 	mul.w	r0, r0, r3
 80120d8:	462a      	mov	r2, r5
 80120da:	0080      	lsls	r0, r0, #2
 80120dc:	2102      	movs	r1, #2
 80120de:	f00d fadd 	bl	801f69c <awe_fwMalloc>
 80120e2:	6320      	str	r0, [r4, #48]	@ 0x30
 80120e4:	b110      	cbz	r0, 80120ec <awe_modSourcePropertiesConstructor+0x44>
 80120e6:	4620      	mov	r0, r4
 80120e8:	b002      	add	sp, #8
 80120ea:	bd70      	pop	{r4, r5, r6, pc}
 80120ec:	2400      	movs	r4, #0
 80120ee:	4620      	mov	r0, r4
 80120f0:	b002      	add	sp, #8
 80120f2:	bd70      	pop	{r4, r5, r6, pc}
 80120f4:	08034f6c 	.word	0x08034f6c

080120f8 <awe_modSourcePropertiesProcess>:
 80120f8:	6903      	ldr	r3, [r0, #16]
 80120fa:	681b      	ldr	r3, [r3, #0]
 80120fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012100:	e9d3 5205 	ldrd	r5, r2, [r3, #20]
 8012104:	f3c5 0609 	ubfx	r6, r5, #0, #10
 8012108:	f015 6500 	ands.w	r5, r5, #134217728	@ 0x8000000
 801210c:	b082      	sub	sp, #8
 801210e:	4607      	mov	r7, r0
 8012110:	68dc      	ldr	r4, [r3, #12]
 8012112:	f3c2 0810 	ubfx	r8, r2, #0, #17
 8012116:	d021      	beq.n	801215c <awe_modSourcePropertiesProcess+0x64>
 8012118:	b1ee      	cbz	r6, 8012156 <awe_modSourcePropertiesProcess+0x5e>
 801211a:	eb04 0ac6 	add.w	sl, r4, r6, lsl #3
 801211e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8012122:	2500      	movs	r5, #0
 8012124:	ea4f 0668 	mov.w	r6, r8, asr #1
 8012128:	ea4f 0888 	mov.w	r8, r8, lsl #2
 801212c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801212e:	9600      	str	r6, [sp, #0]
 8012130:	4428      	add	r0, r5
 8012132:	4622      	mov	r2, r4
 8012134:	464b      	mov	r3, r9
 8012136:	2102      	movs	r1, #2
 8012138:	f008 ff94 	bl	801b064 <awe_vecCopy32>
 801213c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801213e:	9600      	str	r6, [sp, #0]
 8012140:	1d2b      	adds	r3, r5, #4
 8012142:	4418      	add	r0, r3
 8012144:	1d22      	adds	r2, r4, #4
 8012146:	464b      	mov	r3, r9
 8012148:	2102      	movs	r1, #2
 801214a:	3408      	adds	r4, #8
 801214c:	f008 ff8a 	bl	801b064 <awe_vecCopy32>
 8012150:	45a2      	cmp	sl, r4
 8012152:	4445      	add	r5, r8
 8012154:	d1ea      	bne.n	801212c <awe_modSourcePropertiesProcess+0x34>
 8012156:	b002      	add	sp, #8
 8012158:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801215c:	2e00      	cmp	r6, #0
 801215e:	d0fa      	beq.n	8012156 <awe_modSourcePropertiesProcess+0x5e>
 8012160:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
 8012164:	ea4f 0988 	mov.w	r9, r8, lsl #2
 8012168:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801216a:	f8cd 8000 	str.w	r8, [sp]
 801216e:	4428      	add	r0, r5
 8012170:	4622      	mov	r2, r4
 8012172:	4633      	mov	r3, r6
 8012174:	2101      	movs	r1, #1
 8012176:	3404      	adds	r4, #4
 8012178:	f008 ff74 	bl	801b064 <awe_vecCopy32>
 801217c:	45a2      	cmp	sl, r4
 801217e:	444d      	add	r5, r9
 8012180:	d1f2      	bne.n	8012168 <awe_modSourcePropertiesProcess+0x70>
 8012182:	b002      	add	sp, #8
 8012184:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012188 <awe_modSqrtProcess>:
 8012188:	6903      	ldr	r3, [r0, #16]
 801218a:	e9d3 0200 	ldrd	r0, r2, [r3]
 801218e:	b500      	push	{lr}
 8012190:	e9d0 1305 	ldrd	r1, r3, [r0, #20]
 8012194:	b083      	sub	sp, #12
 8012196:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801219a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 801219e:	fb01 f103 	mul.w	r1, r1, r3
 80121a2:	2301      	movs	r3, #1
 80121a4:	68d2      	ldr	r2, [r2, #12]
 80121a6:	68c0      	ldr	r0, [r0, #12]
 80121a8:	9100      	str	r1, [sp, #0]
 80121aa:	4619      	mov	r1, r3
 80121ac:	f00c fc10 	bl	801e9d0 <awe_vecSqrt>
 80121b0:	b003      	add	sp, #12
 80121b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80121b6:	bf00      	nop

080121b8 <awe_modSquareProcess>:
 80121b8:	6900      	ldr	r0, [r0, #16]
 80121ba:	6802      	ldr	r2, [r0, #0]
 80121bc:	b500      	push	{lr}
 80121be:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 80121c2:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80121c6:	f3c1 0109 	ubfx	r1, r1, #0, #10
 80121ca:	b085      	sub	sp, #20
 80121cc:	fb01 f103 	mul.w	r1, r1, r3
 80121d0:	2301      	movs	r3, #1
 80121d2:	68d2      	ldr	r2, [r2, #12]
 80121d4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80121d8:	6841      	ldr	r1, [r0, #4]
 80121da:	68c9      	ldr	r1, [r1, #12]
 80121dc:	9100      	str	r1, [sp, #0]
 80121de:	4610      	mov	r0, r2
 80121e0:	4619      	mov	r1, r3
 80121e2:	f00a fcf9 	bl	801cbd8 <awe_vecMultiply2x1>
 80121e6:	b005      	add	sp, #20
 80121e8:	f85d fb04 	ldr.w	pc, [sp], #4

080121ec <awe_modSquareAddProcess>:
 80121ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121f0:	6904      	ldr	r4, [r0, #16]
 80121f2:	7e06      	ldrb	r6, [r0, #24]
 80121f4:	6823      	ldr	r3, [r4, #0]
 80121f6:	6a01      	ldr	r1, [r0, #32]
 80121f8:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 80121fc:	6998      	ldr	r0, [r3, #24]
 80121fe:	68d7      	ldr	r7, [r2, #12]
 8012200:	2901      	cmp	r1, #1
 8012202:	b082      	sub	sp, #8
 8012204:	f3c0 0810 	ubfx	r8, r0, #0, #17
 8012208:	ea4f 0986 	mov.w	r9, r6, lsl #2
 801220c:	d01c      	beq.n	8012248 <awe_modSquareAddProcess+0x5c>
 801220e:	695d      	ldr	r5, [r3, #20]
 8012210:	ed9f 0a1f 	vldr	s0, [pc, #124]	@ 8012290 <awe_modSquareAddProcess+0xa4>
 8012214:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8012218:	fb08 f505 	mul.w	r5, r8, r5
 801221c:	462a      	mov	r2, r5
 801221e:	2101      	movs	r1, #1
 8012220:	4638      	mov	r0, r7
 8012222:	f009 f99f 	bl	801b564 <awe_vecFill>
 8012226:	b166      	cbz	r6, 8012242 <awe_modSquareAddProcess+0x56>
 8012228:	3c04      	subs	r4, #4
 801222a:	44a1      	add	r9, r4
 801222c:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8012230:	68d8      	ldr	r0, [r3, #12]
 8012232:	9500      	str	r5, [sp, #0]
 8012234:	2301      	movs	r3, #1
 8012236:	4619      	mov	r1, r3
 8012238:	463a      	mov	r2, r7
 801223a:	f00c fbdf 	bl	801e9fc <awe_vecSquareAdd>
 801223e:	454c      	cmp	r4, r9
 8012240:	d1f4      	bne.n	801222c <awe_modSquareAddProcess+0x40>
 8012242:	b002      	add	sp, #8
 8012244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012248:	4642      	mov	r2, r8
 801224a:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8012290 <awe_modSquareAddProcess+0xa4>
 801224e:	4638      	mov	r0, r7
 8012250:	f009 f988 	bl	801b564 <awe_vecFill>
 8012254:	2e00      	cmp	r6, #0
 8012256:	d0f4      	beq.n	8012242 <awe_modSquareAddProcess+0x56>
 8012258:	1f26      	subs	r6, r4, #4
 801225a:	44b1      	add	r9, r6
 801225c:	f856 3f04 	ldr.w	r3, [r6, #4]!
 8012260:	695d      	ldr	r5, [r3, #20]
 8012262:	68dc      	ldr	r4, [r3, #12]
 8012264:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8012268:	b165      	cbz	r5, 8012284 <awe_modSquareAddProcess+0x98>
 801226a:	eb04 0a85 	add.w	sl, r4, r5, lsl #2
 801226e:	4620      	mov	r0, r4
 8012270:	f8cd 8000 	str.w	r8, [sp]
 8012274:	2301      	movs	r3, #1
 8012276:	463a      	mov	r2, r7
 8012278:	4629      	mov	r1, r5
 801227a:	3404      	adds	r4, #4
 801227c:	f00c fbbe 	bl	801e9fc <awe_vecSquareAdd>
 8012280:	4554      	cmp	r4, sl
 8012282:	d1f4      	bne.n	801226e <awe_modSquareAddProcess+0x82>
 8012284:	45b1      	cmp	r9, r6
 8012286:	d1e9      	bne.n	801225c <awe_modSquareAddProcess+0x70>
 8012288:	b002      	add	sp, #8
 801228a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801228e:	bf00      	nop
 8012290:	00000000 	.word	0x00000000

08012294 <awe_modSTBassManagerProcess>:
 8012294:	6902      	ldr	r2, [r0, #16]
 8012296:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012298:	6a01      	ldr	r1, [r0, #32]
 801229a:	b510      	push	{r4, lr}
 801229c:	6814      	ldr	r4, [r2, #0]
 801229e:	68e4      	ldr	r4, [r4, #12]
 80122a0:	619c      	str	r4, [r3, #24]
 80122a2:	6852      	ldr	r2, [r2, #4]
 80122a4:	68d2      	ldr	r2, [r2, #12]
 80122a6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80122a8:	b101      	cbz	r1, 80122ac <awe_modSTBassManagerProcess+0x18>
 80122aa:	bd10      	pop	{r4, pc}
 80122ac:	4604      	mov	r4, r0
 80122ae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80122b0:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 80122b4:	f103 0010 	add.w	r0, r3, #16
 80122b8:	f00f f80c 	bl	80212d4 <bam_process>
 80122bc:	2800      	cmp	r0, #0
 80122be:	d0f4      	beq.n	80122aa <awe_modSTBassManagerProcess+0x16>
 80122c0:	6220      	str	r0, [r4, #32]
 80122c2:	bd10      	pop	{r4, pc}

080122c4 <awe_modSTBassManagerSet>:
 80122c4:	b570      	push	{r4, r5, r6, lr}
 80122c6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 80122c8:	ed2d 8b02 	vpush	{d8}
 80122cc:	4605      	mov	r5, r0
 80122ce:	460e      	mov	r6, r1
 80122d0:	4620      	mov	r0, r4
 80122d2:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80122d4:	f00e fd4c 	bl	8020d70 <bam_getConfig>
 80122d8:	b108      	cbz	r0, 80122de <awe_modSTBassManagerSet+0x1a>
 80122da:	6a2b      	ldr	r3, [r5, #32]
 80122dc:	b1eb      	cbz	r3, 801231a <awe_modSTBassManagerSet+0x56>
 80122de:	0573      	lsls	r3, r6, #21
 80122e0:	d41e      	bmi.n	8012320 <awe_modSTBassManagerSet+0x5c>
 80122e2:	0530      	lsls	r0, r6, #20
 80122e4:	bf44      	itt	mi
 80122e6:	6aeb      	ldrmi	r3, [r5, #44]	@ 0x2c
 80122e8:	80a3      	strhmi	r3, [r4, #4]
 80122ea:	04f1      	lsls	r1, r6, #19
 80122ec:	bf44      	itt	mi
 80122ee:	6b2b      	ldrmi	r3, [r5, #48]	@ 0x30
 80122f0:	80e3      	strhmi	r3, [r4, #6]
 80122f2:	04b2      	lsls	r2, r6, #18
 80122f4:	bf44      	itt	mi
 80122f6:	6b6b      	ldrmi	r3, [r5, #52]	@ 0x34
 80122f8:	8123      	strhmi	r3, [r4, #8]
 80122fa:	0473      	lsls	r3, r6, #17
 80122fc:	bf44      	itt	mi
 80122fe:	6bab      	ldrmi	r3, [r5, #56]	@ 0x38
 8012300:	8163      	strhmi	r3, [r4, #10]
 8012302:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8012304:	4620      	mov	r0, r4
 8012306:	f00e faab 	bl	8020860 <bam_setConfig>
 801230a:	b110      	cbz	r0, 8012312 <awe_modSTBassManagerSet+0x4e>
 801230c:	6a2b      	ldr	r3, [r5, #32]
 801230e:	b903      	cbnz	r3, 8012312 <awe_modSTBassManagerSet+0x4e>
 8012310:	6228      	str	r0, [r5, #32]
 8012312:	ecbd 8b02 	vpop	{d8}
 8012316:	2000      	movs	r0, #0
 8012318:	bd70      	pop	{r4, r5, r6, pc}
 801231a:	0573      	lsls	r3, r6, #21
 801231c:	6228      	str	r0, [r5, #32]
 801231e:	d5e0      	bpl.n	80122e2 <awe_modSTBassManagerSet+0x1e>
 8012320:	692b      	ldr	r3, [r5, #16]
 8012322:	edd5 6a0a 	vldr	s13, [r5, #40]	@ 0x28
 8012326:	681b      	ldr	r3, [r3, #0]
 8012328:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 801239c <awe_modSTBassManagerSet+0xd8>
 801232c:	edd3 7a04 	vldr	s15, [r3, #16]
 8012330:	eeb8 0ae6 	vcvt.f32.s32	s0, s13
 8012334:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8012338:	ee20 0a07 	vmul.f32	s0, s0, s14
 801233c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8012340:	ee88 0a00 	vdiv.f32	s0, s16, s0
 8012344:	f01c fa5a 	bl	802e7fc <expf>
 8012348:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801234c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012350:	d420      	bmi.n	8012394 <awe_modSTBassManagerSet+0xd0>
 8012352:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012356:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801235a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801235e:	db03      	blt.n	8012368 <awe_modSTBassManagerSet+0xa4>
 8012360:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8012364:	6023      	str	r3, [r4, #0]
 8012366:	e7bc      	b.n	80122e2 <awe_modSTBassManagerSet+0x1e>
 8012368:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80123a0 <awe_modSTBassManagerSet+0xdc>
 801236c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8012370:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8012374:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012378:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801237c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012380:	bfd8      	it	le
 8012382:	eef0 7a47 	vmovle.f32	s15, s14
 8012386:	ee30 0a27 	vadd.f32	s0, s0, s15
 801238a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801238e:	ee17 3a90 	vmov	r3, s15
 8012392:	e7e7      	b.n	8012364 <awe_modSTBassManagerSet+0xa0>
 8012394:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012398:	e7e4      	b.n	8012364 <awe_modSTBassManagerSet+0xa0>
 801239a:	bf00      	nop
 801239c:	3a83126f 	.word	0x3a83126f
 80123a0:	4f000000 	.word	0x4f000000

080123a4 <awe_modSTBassManagerConstructor>:
 80123a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123a6:	ed2d 8b02 	vpush	{d8}
 80123aa:	b085      	sub	sp, #20
 80123ac:	4607      	mov	r7, r0
 80123ae:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80123b0:	e9cd 3000 	strd	r3, r0, [sp]
 80123b4:	4613      	mov	r3, r2
 80123b6:	485e      	ldr	r0, [pc, #376]	@ (8012530 <awe_modSTBassManagerConstructor+0x18c>)
 80123b8:	460a      	mov	r2, r1
 80123ba:	4639      	mov	r1, r7
 80123bc:	f00d fec2 	bl	8020144 <BaseClassModule_Constructor>
 80123c0:	2800      	cmp	r0, #0
 80123c2:	f000 8099 	beq.w	80124f8 <awe_modSTBassManagerConstructor+0x154>
 80123c6:	4605      	mov	r5, r0
 80123c8:	463a      	mov	r2, r7
 80123ca:	f240 2131 	movw	r1, #561	@ 0x231
 80123ce:	203c      	movs	r0, #60	@ 0x3c
 80123d0:	f00d f964 	bl	801f69c <awe_fwMalloc>
 80123d4:	4604      	mov	r4, r0
 80123d6:	63e8      	str	r0, [r5, #60]	@ 0x3c
 80123d8:	2800      	cmp	r0, #0
 80123da:	f000 808d 	beq.w	80124f8 <awe_modSTBassManagerConstructor+0x154>
 80123de:	692e      	ldr	r6, [r5, #16]
 80123e0:	edd5 7a0a 	vldr	s15, [r5, #40]	@ 0x28
 80123e4:	4a53      	ldr	r2, [pc, #332]	@ (8012534 <awe_modSTBassManagerConstructor+0x190>)
 80123e6:	6833      	ldr	r3, [r6, #0]
 80123e8:	ed9f 8a53 	vldr	s16, [pc, #332]	@ 8012538 <awe_modSTBassManagerConstructor+0x194>
 80123ec:	6810      	ldr	r0, [r2, #0]
 80123ee:	edd3 8a04 	vldr	s17, [r3, #16]
 80123f2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80123f6:	463a      	mov	r2, r7
 80123f8:	f240 2131 	movw	r1, #561	@ 0x231
 80123fc:	ee20 8a08 	vmul.f32	s16, s0, s16
 8012400:	f00d f94c 	bl	801f69c <awe_fwMalloc>
 8012404:	63a0      	str	r0, [r4, #56]	@ 0x38
 8012406:	2800      	cmp	r0, #0
 8012408:	d076      	beq.n	80124f8 <awe_modSTBassManagerConstructor+0x154>
 801240a:	2100      	movs	r1, #0
 801240c:	4b4b      	ldr	r3, [pc, #300]	@ (801253c <awe_modSTBassManagerConstructor+0x198>)
 801240e:	9103      	str	r1, [sp, #12]
 8012410:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8012412:	6229      	str	r1, [r5, #32]
 8012414:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8012418:	631a      	str	r2, [r3, #48]	@ 0x30
 801241a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801241c:	4a48      	ldr	r2, [pc, #288]	@ (8012540 <awe_modSTBassManagerConstructor+0x19c>)
 801241e:	4949      	ldr	r1, [pc, #292]	@ (8012544 <awe_modSTBassManagerConstructor+0x1a0>)
 8012420:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8012424:	9303      	str	r3, [sp, #12]
 8012426:	2301      	movs	r3, #1
 8012428:	9f03      	ldr	r7, [sp, #12]
 801242a:	6093      	str	r3, [r2, #8]
 801242c:	f00e f9f0 	bl	8020810 <bam_reset>
 8012430:	b110      	cbz	r0, 8012438 <awe_modSTBassManagerConstructor+0x94>
 8012432:	6a2b      	ldr	r3, [r5, #32]
 8012434:	b903      	cbnz	r3, 8012438 <awe_modSTBassManagerConstructor+0x94>
 8012436:	6228      	str	r0, [r5, #32]
 8012438:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 801243a:	81a3      	strh	r3, [r4, #12]
 801243c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801243e:	f104 000c 	add.w	r0, r4, #12
 8012442:	f00e fca9 	bl	8020d98 <bam_setParam>
 8012446:	b110      	cbz	r0, 801244e <awe_modSTBassManagerConstructor+0xaa>
 8012448:	6a2b      	ldr	r3, [r5, #32]
 801244a:	b903      	cbnz	r3, 801244e <awe_modSTBassManagerConstructor+0xaa>
 801244c:	6228      	str	r0, [r5, #32]
 801244e:	6833      	ldr	r3, [r6, #0]
 8012450:	68da      	ldr	r2, [r3, #12]
 8012452:	6958      	ldr	r0, [r3, #20]
 8012454:	61a2      	str	r2, [r4, #24]
 8012456:	e9d6 7300 	ldrd	r7, r3, [r6]
 801245a:	68d9      	ldr	r1, [r3, #12]
 801245c:	695a      	ldr	r2, [r3, #20]
 801245e:	69bb      	ldr	r3, [r7, #24]
 8012460:	62e1      	str	r1, [r4, #44]	@ 0x2c
 8012462:	6871      	ldr	r1, [r6, #4]
 8012464:	6989      	ldr	r1, [r1, #24]
 8012466:	ee28 0a88 	vmul.f32	s0, s17, s16
 801246a:	f3c0 0009 	ubfx	r0, r0, #0, #10
 801246e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8012472:	f3c1 0110 	ubfx	r1, r1, #0, #17
 8012476:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801247a:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 801247e:	2604      	movs	r6, #4
 8012480:	6120      	str	r0, [r4, #16]
 8012482:	2001      	movs	r0, #1
 8012484:	6321      	str	r1, [r4, #48]	@ 0x30
 8012486:	6262      	str	r2, [r4, #36]	@ 0x24
 8012488:	61e3      	str	r3, [r4, #28]
 801248a:	ee88 0a00 	vdiv.f32	s0, s16, s0
 801248e:	6166      	str	r6, [r4, #20]
 8012490:	62a6      	str	r6, [r4, #40]	@ 0x28
 8012492:	6220      	str	r0, [r4, #32]
 8012494:	6360      	str	r0, [r4, #52]	@ 0x34
 8012496:	f01c f9b1 	bl	802e7fc <expf>
 801249a:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801249e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124a2:	d426      	bmi.n	80124f2 <awe_modSTBassManagerConstructor+0x14e>
 80124a4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80124a8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80124ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124b0:	db28      	blt.n	8012504 <awe_modSTBassManagerConstructor+0x160>
 80124b2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 80124b6:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 80124b8:	6b6f      	ldr	r7, [r5, #52]	@ 0x34
 80124ba:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 80124bc:	6bae      	ldr	r6, [r5, #56]	@ 0x38
 80124be:	6023      	str	r3, [r4, #0]
 80124c0:	2200      	movs	r2, #0
 80124c2:	2300      	movs	r3, #0
 80124c4:	f360 030f 	bfi	r3, r0, #0, #16
 80124c8:	f367 020f 	bfi	r2, r7, #0, #16
 80124cc:	f361 431f 	bfi	r3, r1, #16, #16
 80124d0:	f366 421f 	bfi	r2, r6, #16, #16
 80124d4:	e9c4 3201 	strd	r3, r2, [r4, #4]
 80124d8:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80124da:	4620      	mov	r0, r4
 80124dc:	f00e f9c0 	bl	8020860 <bam_setConfig>
 80124e0:	b110      	cbz	r0, 80124e8 <awe_modSTBassManagerConstructor+0x144>
 80124e2:	6a2b      	ldr	r3, [r5, #32]
 80124e4:	b903      	cbnz	r3, 80124e8 <awe_modSTBassManagerConstructor+0x144>
 80124e6:	6228      	str	r0, [r5, #32]
 80124e8:	4628      	mov	r0, r5
 80124ea:	b005      	add	sp, #20
 80124ec:	ecbd 8b02 	vpop	{d8}
 80124f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124f2:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80124f6:	e7de      	b.n	80124b6 <awe_modSTBassManagerConstructor+0x112>
 80124f8:	2500      	movs	r5, #0
 80124fa:	4628      	mov	r0, r5
 80124fc:	b005      	add	sp, #20
 80124fe:	ecbd 8b02 	vpop	{d8}
 8012502:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012504:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8012548 <awe_modSTBassManagerConstructor+0x1a4>
 8012508:	ee20 0a27 	vmul.f32	s0, s0, s15
 801250c:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8012510:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012514:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8012518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801251c:	bfd8      	it	le
 801251e:	eef0 7a47 	vmovle.f32	s15, s14
 8012522:	ee30 0a27 	vadd.f32	s0, s0, s15
 8012526:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801252a:	ee17 3a90 	vmov	r3, s15
 801252e:	e7c2      	b.n	80124b6 <awe_modSTBassManagerConstructor+0x112>
 8012530:	0803500c 	.word	0x0803500c
 8012534:	080360cc 	.word	0x080360cc
 8012538:	3a83126f 	.word	0x3a83126f
 801253c:	40023800 	.word	0x40023800
 8012540:	40023000 	.word	0x40023000
 8012544:	2001d9f4 	.word	0x2001d9f4
 8012548:	4f000000 	.word	0x4f000000

0801254c <awe_modSTBiquadCascadeConstructor>:
 801254c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801254e:	b085      	sub	sp, #20
 8012550:	4616      	mov	r6, r2
 8012552:	4607      	mov	r7, r0
 8012554:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8012556:	9300      	str	r3, [sp, #0]
 8012558:	460a      	mov	r2, r1
 801255a:	9001      	str	r0, [sp, #4]
 801255c:	4633      	mov	r3, r6
 801255e:	4639      	mov	r1, r7
 8012560:	4854      	ldr	r0, [pc, #336]	@ (80126b4 <awe_modSTBiquadCascadeConstructor+0x168>)
 8012562:	f00d fdef 	bl	8020144 <BaseClassModule_Constructor>
 8012566:	2800      	cmp	r0, #0
 8012568:	f000 809f 	beq.w	80126aa <awe_modSTBiquadCascadeConstructor+0x15e>
 801256c:	4605      	mov	r5, r0
 801256e:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8012570:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012574:	00c0      	lsls	r0, r0, #3
 8012576:	463a      	mov	r2, r7
 8012578:	f240 2131 	movw	r1, #561	@ 0x231
 801257c:	f00d f88e 	bl	801f69c <awe_fwMalloc>
 8012580:	62e8      	str	r0, [r5, #44]	@ 0x2c
 8012582:	2800      	cmp	r0, #0
 8012584:	f000 8091 	beq.w	80126aa <awe_modSTBiquadCascadeConstructor+0x15e>
 8012588:	463a      	mov	r2, r7
 801258a:	f240 2131 	movw	r1, #561	@ 0x231
 801258e:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8012592:	f00d f883 	bl	801f69c <awe_fwMalloc>
 8012596:	4604      	mov	r4, r0
 8012598:	6328      	str	r0, [r5, #48]	@ 0x30
 801259a:	2800      	cmp	r0, #0
 801259c:	f000 8085 	beq.w	80126aa <awe_modSTBiquadCascadeConstructor+0x15e>
 80125a0:	4b45      	ldr	r3, [pc, #276]	@ (80126b8 <awe_modSTBiquadCascadeConstructor+0x16c>)
 80125a2:	463a      	mov	r2, r7
 80125a4:	6818      	ldr	r0, [r3, #0]
 80125a6:	f240 2131 	movw	r1, #561	@ 0x231
 80125aa:	f00d f877 	bl	801f69c <awe_fwMalloc>
 80125ae:	f8c4 0210 	str.w	r0, [r4, #528]	@ 0x210
 80125b2:	2800      	cmp	r0, #0
 80125b4:	d079      	beq.n	80126aa <awe_modSTBiquadCascadeConstructor+0x15e>
 80125b6:	2300      	movs	r3, #0
 80125b8:	4a40      	ldr	r2, [pc, #256]	@ (80126bc <awe_modSTBiquadCascadeConstructor+0x170>)
 80125ba:	9303      	str	r3, [sp, #12]
 80125bc:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 80125be:	f8c4 3218 	str.w	r3, [r4, #536]	@ 0x218
 80125c2:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 80125c6:	f8c4 3214 	str.w	r3, [r4, #532]	@ 0x214
 80125ca:	622b      	str	r3, [r5, #32]
 80125cc:	6311      	str	r1, [r2, #48]	@ 0x30
 80125ce:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80125d0:	493b      	ldr	r1, [pc, #236]	@ (80126c0 <awe_modSTBiquadCascadeConstructor+0x174>)
 80125d2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80125d6:	f5a2 6200 	sub.w	r2, r2, #2048	@ 0x800
 80125da:	9303      	str	r3, [sp, #12]
 80125dc:	2301      	movs	r3, #1
 80125de:	9f03      	ldr	r7, [sp, #12]
 80125e0:	6093      	str	r3, [r2, #8]
 80125e2:	f00f f855 	bl	8021690 <biquad_df1_cascade_reset>
 80125e6:	b110      	cbz	r0, 80125ee <awe_modSTBiquadCascadeConstructor+0xa2>
 80125e8:	6a2b      	ldr	r3, [r5, #32]
 80125ea:	b903      	cbnz	r3, 80125ee <awe_modSTBiquadCascadeConstructor+0xa2>
 80125ec:	6228      	str	r0, [r5, #32]
 80125ee:	6832      	ldr	r2, [r6, #0]
 80125f0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80125f2:	68d1      	ldr	r1, [r2, #12]
 80125f4:	6952      	ldr	r2, [r2, #20]
 80125f6:	f8c4 11f0 	str.w	r1, [r4, #496]	@ 0x1f0
 80125fa:	e9d6 7100 	ldrd	r7, r1, [r6]
 80125fe:	68c8      	ldr	r0, [r1, #12]
 8012600:	69bf      	ldr	r7, [r7, #24]
 8012602:	6949      	ldr	r1, [r1, #20]
 8012604:	f8c4 0204 	str.w	r0, [r4, #516]	@ 0x204
 8012608:	6870      	ldr	r0, [r6, #4]
 801260a:	f3c2 0209 	ubfx	r2, r2, #0, #10
 801260e:	6980      	ldr	r0, [r0, #24]
 8012610:	f8c4 21e8 	str.w	r2, [r4, #488]	@ 0x1e8
 8012614:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8012618:	f112 32ff 	adds.w	r2, r2, #4294967295
 801261c:	bf18      	it	ne
 801261e:	2201      	movne	r2, #1
 8012620:	f3c7 0610 	ubfx	r6, r7, #0, #17
 8012624:	f111 37ff 	adds.w	r7, r1, #4294967295
 8012628:	bf18      	it	ne
 801262a:	2701      	movne	r7, #1
 801262c:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 8012630:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8012634:	f8c4 21f8 	str.w	r2, [r4, #504]	@ 0x1f8
 8012638:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801263c:	2204      	movs	r2, #4
 801263e:	f8c4 0208 	str.w	r0, [r4, #520]	@ 0x208
 8012642:	f8c4 11fc 	str.w	r1, [r4, #508]	@ 0x1fc
 8012646:	f8c4 21ec 	str.w	r2, [r4, #492]	@ 0x1ec
 801264a:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
 801264e:	2101      	movs	r1, #1
 8012650:	f104 00f8 	add.w	r0, r4, #248	@ 0xf8
 8012654:	f8c4 61f4 	str.w	r6, [r4, #500]	@ 0x1f4
 8012658:	f8c4 720c 	str.w	r7, [r4, #524]	@ 0x20c
 801265c:	005b      	lsls	r3, r3, #1
 801265e:	2200      	movs	r2, #0
 8012660:	f009 f8a4 	bl	801b7ac <awe_vecFillInt32>
 8012664:	f8d4 1210 	ldr.w	r1, [r4, #528]	@ 0x210
 8012668:	f104 00f4 	add.w	r0, r4, #244	@ 0xf4
 801266c:	f00f f8f8 	bl	8021860 <biquad_df1_cascade_setParam>
 8012670:	b110      	cbz	r0, 8012678 <awe_modSTBiquadCascadeConstructor+0x12c>
 8012672:	6a2b      	ldr	r3, [r5, #32]
 8012674:	b903      	cbnz	r3, 8012678 <awe_modSTBiquadCascadeConstructor+0x12c>
 8012676:	6228      	str	r0, [r5, #32]
 8012678:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 801267a:	7063      	strb	r3, [r4, #1]
 801267c:	4620      	mov	r0, r4
 801267e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8012680:	f800 2b04 	strb.w	r2, [r0], #4
 8012684:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012688:	2101      	movs	r1, #1
 801268a:	005b      	lsls	r3, r3, #1
 801268c:	2200      	movs	r2, #0
 801268e:	f009 f88d 	bl	801b7ac <awe_vecFillInt32>
 8012692:	f8d4 1210 	ldr.w	r1, [r4, #528]	@ 0x210
 8012696:	4620      	mov	r0, r4
 8012698:	f00f f880 	bl	802179c <biquad_df1_cascade_setConfig>
 801269c:	b110      	cbz	r0, 80126a4 <awe_modSTBiquadCascadeConstructor+0x158>
 801269e:	6a2b      	ldr	r3, [r5, #32]
 80126a0:	b903      	cbnz	r3, 80126a4 <awe_modSTBiquadCascadeConstructor+0x158>
 80126a2:	6228      	str	r0, [r5, #32]
 80126a4:	4628      	mov	r0, r5
 80126a6:	b005      	add	sp, #20
 80126a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126aa:	2500      	movs	r5, #0
 80126ac:	4628      	mov	r0, r5
 80126ae:	b005      	add	sp, #20
 80126b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126b2:	bf00      	nop
 80126b4:	08035034 	.word	0x08035034
 80126b8:	08036104 	.word	0x08036104
 80126bc:	40023800 	.word	0x40023800
 80126c0:	2001d9f4 	.word	0x2001d9f4

080126c4 <awe_modSTBiquadCascadeProcess>:
 80126c4:	6a03      	ldr	r3, [r0, #32]
 80126c6:	b103      	cbz	r3, 80126ca <awe_modSTBiquadCascadeProcess+0x6>
 80126c8:	4770      	bx	lr
 80126ca:	6903      	ldr	r3, [r0, #16]
 80126cc:	6819      	ldr	r1, [r3, #0]
 80126ce:	b510      	push	{r4, lr}
 80126d0:	4604      	mov	r4, r0
 80126d2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80126d4:	68c9      	ldr	r1, [r1, #12]
 80126d6:	f8c0 11f0 	str.w	r1, [r0, #496]	@ 0x1f0
 80126da:	685b      	ldr	r3, [r3, #4]
 80126dc:	f8d0 2210 	ldr.w	r2, [r0, #528]	@ 0x210
 80126e0:	68db      	ldr	r3, [r3, #12]
 80126e2:	f8c0 3204 	str.w	r3, [r0, #516]	@ 0x204
 80126e6:	f500 71fe 	add.w	r1, r0, #508	@ 0x1fc
 80126ea:	f500 70f4 	add.w	r0, r0, #488	@ 0x1e8
 80126ee:	f00f f8dd 	bl	80218ac <biquad_df1_cascade_process>
 80126f2:	b100      	cbz	r0, 80126f6 <awe_modSTBiquadCascadeProcess+0x32>
 80126f4:	6220      	str	r0, [r4, #32]
 80126f6:	bd10      	pop	{r4, pc}

080126f8 <awe_modSTBiquadCascadeSet>:
 80126f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126fc:	ed2d 8b06 	vpush	{d8-d10}
 8012700:	4604      	mov	r4, r0
 8012702:	b087      	sub	sp, #28
 8012704:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8012706:	9102      	str	r1, [sp, #8]
 8012708:	f8d0 1210 	ldr.w	r1, [r0, #528]	@ 0x210
 801270c:	9003      	str	r0, [sp, #12]
 801270e:	f00f f88d 	bl	802182c <biquad_df1_cascade_getConfig>
 8012712:	b118      	cbz	r0, 801271c <awe_modSTBiquadCascadeSet+0x24>
 8012714:	6a23      	ldr	r3, [r4, #32]
 8012716:	2b00      	cmp	r3, #0
 8012718:	f000 8162 	beq.w	80129e0 <awe_modSTBiquadCascadeSet+0x2e8>
 801271c:	9b02      	ldr	r3, [sp, #8]
 801271e:	1c59      	adds	r1, r3, #1
 8012720:	f000 8163 	beq.w	80129ea <awe_modSTBiquadCascadeSet+0x2f2>
 8012724:	055a      	lsls	r2, r3, #21
 8012726:	f100 82b6 	bmi.w	8012c96 <awe_modSTBiquadCascadeSet+0x59e>
 801272a:	051b      	lsls	r3, r3, #20
 801272c:	f140 8145 	bpl.w	80129ba <awe_modSTBiquadCascadeSet+0x2c2>
 8012730:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012732:	2b00      	cmp	r3, #0
 8012734:	f340 8141 	ble.w	80129ba <awe_modSTBiquadCascadeSet+0x2c2>
 8012738:	2500      	movs	r5, #0
 801273a:	ab05      	add	r3, sp, #20
 801273c:	ed9f 9aa6 	vldr	s18, [pc, #664]	@ 80129d8 <awe_modSTBiquadCascadeSet+0x2e0>
 8012740:	eddf 8aa6 	vldr	s17, [pc, #664]	@ 80129dc <awe_modSTBiquadCascadeSet+0x2e4>
 8012744:	9f03      	ldr	r7, [sp, #12]
 8012746:	9500      	str	r5, [sp, #0]
 8012748:	f04f 0a04 	mov.w	sl, #4
 801274c:	9301      	str	r3, [sp, #4]
 801274e:	ae04      	add	r6, sp, #16
 8012750:	f8d4 902c 	ldr.w	r9, [r4, #44]	@ 0x2c
 8012754:	9801      	ldr	r0, [sp, #4]
 8012756:	eb09 0205 	add.w	r2, r9, r5
 801275a:	ed92 8a00 	vldr	s16, [r2]
 801275e:	eeb0 0a48 	vmov.f32	s0, s16
 8012762:	f109 0814 	add.w	r8, r9, #20
 8012766:	f01b faa5 	bl	802dcb4 <frexpf>
 801276a:	f8dd b014 	ldr.w	fp, [sp, #20]
 801276e:	44a8      	add	r8, r5
 8012770:	44d1      	add	r9, sl
 8012772:	ecb9 0a01 	vldmia	r9!, {s0}
 8012776:	4630      	mov	r0, r6
 8012778:	f01b fa9c 	bl	802dcb4 <frexpf>
 801277c:	9904      	ldr	r1, [sp, #16]
 801277e:	4559      	cmp	r1, fp
 8012780:	bfc4      	itt	gt
 8012782:	9105      	strgt	r1, [sp, #20]
 8012784:	468b      	movgt	fp, r1
 8012786:	45c8      	cmp	r8, r9
 8012788:	d1f3      	bne.n	8012772 <awe_modSTBiquadCascadeSet+0x7a>
 801278a:	f1bb 0f00 	cmp.w	fp, #0
 801278e:	f2c0 8297 	blt.w	8012cc0 <awe_modSTBiquadCascadeSet+0x5c8>
 8012792:	ee07 ba90 	vmov	s15, fp
 8012796:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801279a:	eef3 9a0f 	vmov.f32	s19, #63	@ 0x41f80000  31.0
 801279e:	ee79 9ae7 	vsub.f32	s19, s19, s15
 80127a2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80127a6:	ee38 aae9 	vsub.f32	s20, s17, s19
 80127aa:	ee3a aa67 	vsub.f32	s20, s20, s15
 80127ae:	f8c7 b004 	str.w	fp, [r7, #4]
 80127b2:	eef0 0a4a 	vmov.f32	s1, s20
 80127b6:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 80127ba:	f01c f8a3 	bl	802e904 <powf>
 80127be:	eef1 7a40 	vneg.f32	s15, s0
 80127c2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80127c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127ca:	f100 82a2 	bmi.w	8012d12 <awe_modSTBiquadCascadeSet+0x61a>
 80127ce:	eeb4 8ac0 	vcmpe.f32	s16, s0
 80127d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127d6:	f280 8270 	bge.w	8012cba <awe_modSTBiquadCascadeSet+0x5c2>
 80127da:	eef0 0a69 	vmov.f32	s1, s19
 80127de:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 80127e2:	f01c f88f 	bl	802e904 <powf>
 80127e6:	ee28 0a00 	vmul.f32	s0, s16, s0
 80127ea:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 80127ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80127f2:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 80127f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127fa:	bfd8      	it	le
 80127fc:	eeb0 8a67 	vmovle.f32	s16, s15
 8012800:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012804:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012808:	ee17 2a90 	vmov	r2, s15
 801280c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801280e:	60ba      	str	r2, [r7, #8]
 8012810:	4453      	add	r3, sl
 8012812:	eef0 0a4a 	vmov.f32	s1, s20
 8012816:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 801281a:	ed93 8a00 	vldr	s16, [r3]
 801281e:	f01c f871 	bl	802e904 <powf>
 8012822:	eef1 7a40 	vneg.f32	s15, s0
 8012826:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801282a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801282e:	f100 826d 	bmi.w	8012d0c <awe_modSTBiquadCascadeSet+0x614>
 8012832:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801283a:	f280 823b 	bge.w	8012cb4 <awe_modSTBiquadCascadeSet+0x5bc>
 801283e:	eef0 0a69 	vmov.f32	s1, s19
 8012842:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012846:	f01c f85d 	bl	802e904 <powf>
 801284a:	ee28 0a00 	vmul.f32	s0, s16, s0
 801284e:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012852:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012856:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 801285a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801285e:	bfd8      	it	le
 8012860:	eeb0 8a67 	vmovle.f32	s16, s15
 8012864:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012868:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801286c:	ee17 2a90 	vmov	r2, s15
 8012870:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012872:	60fa      	str	r2, [r7, #12]
 8012874:	442b      	add	r3, r5
 8012876:	eef0 0a4a 	vmov.f32	s1, s20
 801287a:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 801287e:	ed93 8a02 	vldr	s16, [r3, #8]
 8012882:	f01c f83f 	bl	802e904 <powf>
 8012886:	eef1 7a40 	vneg.f32	s15, s0
 801288a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801288e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012892:	f100 8238 	bmi.w	8012d06 <awe_modSTBiquadCascadeSet+0x60e>
 8012896:	eeb4 8ac0 	vcmpe.f32	s16, s0
 801289a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801289e:	f280 8206 	bge.w	8012cae <awe_modSTBiquadCascadeSet+0x5b6>
 80128a2:	eef0 0a69 	vmov.f32	s1, s19
 80128a6:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 80128aa:	f01c f82b 	bl	802e904 <powf>
 80128ae:	ee28 0a00 	vmul.f32	s0, s16, s0
 80128b2:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 80128b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80128ba:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 80128be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128c2:	bfd8      	it	le
 80128c4:	eeb0 8a67 	vmovle.f32	s16, s15
 80128c8:	ee30 0a08 	vadd.f32	s0, s0, s16
 80128cc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80128d0:	ee17 2a90 	vmov	r2, s15
 80128d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80128d6:	613a      	str	r2, [r7, #16]
 80128d8:	442b      	add	r3, r5
 80128da:	eef0 0a4a 	vmov.f32	s1, s20
 80128de:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 80128e2:	ed93 8a03 	vldr	s16, [r3, #12]
 80128e6:	f01c f80d 	bl	802e904 <powf>
 80128ea:	eef1 7a40 	vneg.f32	s15, s0
 80128ee:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80128f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128f6:	f100 8203 	bmi.w	8012d00 <awe_modSTBiquadCascadeSet+0x608>
 80128fa:	eeb4 8ac0 	vcmpe.f32	s16, s0
 80128fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012902:	f280 81d2 	bge.w	8012caa <awe_modSTBiquadCascadeSet+0x5b2>
 8012906:	eef0 0a69 	vmov.f32	s1, s19
 801290a:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 801290e:	f01b fff9 	bl	802e904 <powf>
 8012912:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012916:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 801291a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801291e:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012926:	bfd8      	it	le
 8012928:	eeb0 8a67 	vmovle.f32	s16, s15
 801292c:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012930:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012934:	ee17 3a90 	vmov	r3, s15
 8012938:	425b      	negs	r3, r3
 801293a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801293c:	617b      	str	r3, [r7, #20]
 801293e:	eef0 0a4a 	vmov.f32	s1, s20
 8012942:	1953      	adds	r3, r2, r5
 8012944:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012948:	ed93 8a04 	vldr	s16, [r3, #16]
 801294c:	f01b ffda 	bl	802e904 <powf>
 8012950:	eef1 7a40 	vneg.f32	s15, s0
 8012954:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801295c:	f100 81cd 	bmi.w	8012cfa <awe_modSTBiquadCascadeSet+0x602>
 8012960:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012968:	f280 819d 	bge.w	8012ca6 <awe_modSTBiquadCascadeSet+0x5ae>
 801296c:	eef0 0a69 	vmov.f32	s1, s19
 8012970:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012974:	f01b ffc6 	bl	802e904 <powf>
 8012978:	ee28 0a00 	vmul.f32	s0, s16, s0
 801297c:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012980:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012984:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801298c:	bfd8      	it	le
 801298e:	eeb0 8a67 	vmovle.f32	s16, s15
 8012992:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012996:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801299a:	ee17 3a90 	vmov	r3, s15
 801299e:	425b      	negs	r3, r3
 80129a0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80129a2:	f847 3f18 	str.w	r3, [r7, #24]!
 80129a6:	9b00      	ldr	r3, [sp, #0]
 80129a8:	3301      	adds	r3, #1
 80129aa:	429a      	cmp	r2, r3
 80129ac:	9300      	str	r3, [sp, #0]
 80129ae:	f105 0514 	add.w	r5, r5, #20
 80129b2:	f10a 0a14 	add.w	sl, sl, #20
 80129b6:	f73f aecb 	bgt.w	8012750 <awe_modSTBiquadCascadeSet+0x58>
 80129ba:	9803      	ldr	r0, [sp, #12]
 80129bc:	f8d0 1210 	ldr.w	r1, [r0, #528]	@ 0x210
 80129c0:	f00e feec 	bl	802179c <biquad_df1_cascade_setConfig>
 80129c4:	b110      	cbz	r0, 80129cc <awe_modSTBiquadCascadeSet+0x2d4>
 80129c6:	6a23      	ldr	r3, [r4, #32]
 80129c8:	b903      	cbnz	r3, 80129cc <awe_modSTBiquadCascadeSet+0x2d4>
 80129ca:	6220      	str	r0, [r4, #32]
 80129cc:	2000      	movs	r0, #0
 80129ce:	b007      	add	sp, #28
 80129d0:	ecbd 8b06 	vpop	{d8-d10}
 80129d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129d8:	00000000 	.word	0x00000000
 80129dc:	42000000 	.word	0x42000000
 80129e0:	9b02      	ldr	r3, [sp, #8]
 80129e2:	6220      	str	r0, [r4, #32]
 80129e4:	1c59      	adds	r1, r3, #1
 80129e6:	f47f ae9d 	bne.w	8012724 <awe_modSTBiquadCascadeSet+0x2c>
 80129ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80129ec:	2b00      	cmp	r3, #0
 80129ee:	f340 8146 	ble.w	8012c7e <awe_modSTBiquadCascadeSet+0x586>
 80129f2:	2700      	movs	r7, #0
 80129f4:	ab05      	add	r3, sp, #20
 80129f6:	ed1f 9a08 	vldr	s18, [pc, #-32]	@ 80129d8 <awe_modSTBiquadCascadeSet+0x2e0>
 80129fa:	ed5f 8a08 	vldr	s17, [pc, #-32]	@ 80129dc <awe_modSTBiquadCascadeSet+0x2e4>
 80129fe:	9d03      	ldr	r5, [sp, #12]
 8012a00:	9700      	str	r7, [sp, #0]
 8012a02:	f04f 0a04 	mov.w	sl, #4
 8012a06:	9301      	str	r3, [sp, #4]
 8012a08:	ae04      	add	r6, sp, #16
 8012a0a:	f8d4 902c 	ldr.w	r9, [r4, #44]	@ 0x2c
 8012a0e:	9801      	ldr	r0, [sp, #4]
 8012a10:	eb09 0207 	add.w	r2, r9, r7
 8012a14:	ed92 8a00 	vldr	s16, [r2]
 8012a18:	eeb0 0a48 	vmov.f32	s0, s16
 8012a1c:	f109 0814 	add.w	r8, r9, #20
 8012a20:	f01b f948 	bl	802dcb4 <frexpf>
 8012a24:	f8dd b014 	ldr.w	fp, [sp, #20]
 8012a28:	44b8      	add	r8, r7
 8012a2a:	44d1      	add	r9, sl
 8012a2c:	ecb9 0a01 	vldmia	r9!, {s0}
 8012a30:	4630      	mov	r0, r6
 8012a32:	f01b f93f 	bl	802dcb4 <frexpf>
 8012a36:	9b04      	ldr	r3, [sp, #16]
 8012a38:	455b      	cmp	r3, fp
 8012a3a:	bfc4      	itt	gt
 8012a3c:	9305      	strgt	r3, [sp, #20]
 8012a3e:	469b      	movgt	fp, r3
 8012a40:	45c8      	cmp	r8, r9
 8012a42:	d1f3      	bne.n	8012a2c <awe_modSTBiquadCascadeSet+0x334>
 8012a44:	f1bb 0f00 	cmp.w	fp, #0
 8012a48:	f2c0 814f 	blt.w	8012cea <awe_modSTBiquadCascadeSet+0x5f2>
 8012a4c:	ee07 ba90 	vmov	s15, fp
 8012a50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a54:	eef3 9a0f 	vmov.f32	s19, #63	@ 0x41f80000  31.0
 8012a58:	ee79 9ae7 	vsub.f32	s19, s19, s15
 8012a5c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012a60:	ee38 aae9 	vsub.f32	s20, s17, s19
 8012a64:	ee3a aa67 	vsub.f32	s20, s20, s15
 8012a68:	f8c5 b0f8 	str.w	fp, [r5, #248]	@ 0xf8
 8012a6c:	eef0 0a4a 	vmov.f32	s1, s20
 8012a70:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012a74:	f01b ff46 	bl	802e904 <powf>
 8012a78:	eef1 7a40 	vneg.f32	s15, s0
 8012a7c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012a80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a84:	f100 8148 	bmi.w	8012d18 <awe_modSTBiquadCascadeSet+0x620>
 8012a88:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a90:	f280 8128 	bge.w	8012ce4 <awe_modSTBiquadCascadeSet+0x5ec>
 8012a94:	eef0 0a69 	vmov.f32	s1, s19
 8012a98:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012a9c:	f01b ff32 	bl	802e904 <powf>
 8012aa0:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012aa4:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012aa8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012aac:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ab4:	bfd8      	it	le
 8012ab6:	eeb0 8a67 	vmovle.f32	s16, s15
 8012aba:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012abe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012ac2:	ee17 2a90 	vmov	r2, s15
 8012ac6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012ac8:	f8c5 20fc 	str.w	r2, [r5, #252]	@ 0xfc
 8012acc:	4453      	add	r3, sl
 8012ace:	eef0 0a4a 	vmov.f32	s1, s20
 8012ad2:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012ad6:	ed93 8a00 	vldr	s16, [r3]
 8012ada:	f01b ff13 	bl	802e904 <powf>
 8012ade:	eef1 7a40 	vneg.f32	s15, s0
 8012ae2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012ae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012aea:	f100 8118 	bmi.w	8012d1e <awe_modSTBiquadCascadeSet+0x626>
 8012aee:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012af6:	f280 80f2 	bge.w	8012cde <awe_modSTBiquadCascadeSet+0x5e6>
 8012afa:	eef0 0a69 	vmov.f32	s1, s19
 8012afe:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012b02:	f01b feff 	bl	802e904 <powf>
 8012b06:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012b0a:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012b0e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012b12:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b1a:	bfd8      	it	le
 8012b1c:	eeb0 8a67 	vmovle.f32	s16, s15
 8012b20:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012b24:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012b28:	ee17 2a90 	vmov	r2, s15
 8012b2c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012b2e:	f8c5 2100 	str.w	r2, [r5, #256]	@ 0x100
 8012b32:	443b      	add	r3, r7
 8012b34:	eef0 0a4a 	vmov.f32	s1, s20
 8012b38:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012b3c:	ed93 8a02 	vldr	s16, [r3, #8]
 8012b40:	f01b fee0 	bl	802e904 <powf>
 8012b44:	eef1 7a40 	vneg.f32	s15, s0
 8012b48:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b50:	f100 80e8 	bmi.w	8012d24 <awe_modSTBiquadCascadeSet+0x62c>
 8012b54:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b5c:	f280 80bc 	bge.w	8012cd8 <awe_modSTBiquadCascadeSet+0x5e0>
 8012b60:	eef0 0a69 	vmov.f32	s1, s19
 8012b64:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012b68:	f01b fecc 	bl	802e904 <powf>
 8012b6c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012b70:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012b74:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012b78:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b80:	bfd8      	it	le
 8012b82:	eeb0 8a67 	vmovle.f32	s16, s15
 8012b86:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012b8a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012b8e:	ee17 2a90 	vmov	r2, s15
 8012b92:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012b94:	f8c5 2104 	str.w	r2, [r5, #260]	@ 0x104
 8012b98:	443b      	add	r3, r7
 8012b9a:	eef0 0a4a 	vmov.f32	s1, s20
 8012b9e:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012ba2:	ed93 8a03 	vldr	s16, [r3, #12]
 8012ba6:	f01b fead 	bl	802e904 <powf>
 8012baa:	eef1 7a40 	vneg.f32	s15, s0
 8012bae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bb6:	f100 80b8 	bmi.w	8012d2a <awe_modSTBiquadCascadeSet+0x632>
 8012bba:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bc2:	f280 8087 	bge.w	8012cd4 <awe_modSTBiquadCascadeSet+0x5dc>
 8012bc6:	eef0 0a69 	vmov.f32	s1, s19
 8012bca:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012bce:	f01b fe99 	bl	802e904 <powf>
 8012bd2:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012bd6:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012bda:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012bde:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012be2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012be6:	bfd8      	it	le
 8012be8:	eeb0 8a67 	vmovle.f32	s16, s15
 8012bec:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012bf0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012bf4:	ee17 3a90 	vmov	r3, s15
 8012bf8:	425b      	negs	r3, r3
 8012bfa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012bfc:	f8c5 3108 	str.w	r3, [r5, #264]	@ 0x108
 8012c00:	eef0 0a4a 	vmov.f32	s1, s20
 8012c04:	19d3      	adds	r3, r2, r7
 8012c06:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012c0a:	ed93 8a04 	vldr	s16, [r3, #16]
 8012c0e:	f01b fe79 	bl	802e904 <powf>
 8012c12:	eef1 7a40 	vneg.f32	s15, s0
 8012c16:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8012c1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c1e:	f100 8087 	bmi.w	8012d30 <awe_modSTBiquadCascadeSet+0x638>
 8012c22:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8012c26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c2a:	da51      	bge.n	8012cd0 <awe_modSTBiquadCascadeSet+0x5d8>
 8012c2c:	eef0 0a69 	vmov.f32	s1, s19
 8012c30:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 8012c34:	f01b fe66 	bl	802e904 <powf>
 8012c38:	ee28 0a00 	vmul.f32	s0, s16, s0
 8012c3c:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 8012c40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012c44:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8012c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c4c:	bfd8      	it	le
 8012c4e:	eeb0 8a67 	vmovle.f32	s16, s15
 8012c52:	ee30 0a08 	vadd.f32	s0, s0, s16
 8012c56:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012c5a:	ee17 3a90 	vmov	r3, s15
 8012c5e:	425b      	negs	r3, r3
 8012c60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8012c62:	f8c5 310c 	str.w	r3, [r5, #268]	@ 0x10c
 8012c66:	9b00      	ldr	r3, [sp, #0]
 8012c68:	3301      	adds	r3, #1
 8012c6a:	429a      	cmp	r2, r3
 8012c6c:	9300      	str	r3, [sp, #0]
 8012c6e:	f107 0714 	add.w	r7, r7, #20
 8012c72:	f10a 0a14 	add.w	sl, sl, #20
 8012c76:	f105 0518 	add.w	r5, r5, #24
 8012c7a:	f73f aec6 	bgt.w	8012a0a <awe_modSTBiquadCascadeSet+0x312>
 8012c7e:	9b03      	ldr	r3, [sp, #12]
 8012c80:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
 8012c84:	f103 00f4 	add.w	r0, r3, #244	@ 0xf4
 8012c88:	f00e fdea 	bl	8021860 <biquad_df1_cascade_setParam>
 8012c8c:	b118      	cbz	r0, 8012c96 <awe_modSTBiquadCascadeSet+0x59e>
 8012c8e:	6a23      	ldr	r3, [r4, #32]
 8012c90:	2b00      	cmp	r3, #0
 8012c92:	f43f ae9a 	beq.w	80129ca <awe_modSTBiquadCascadeSet+0x2d2>
 8012c96:	9a03      	ldr	r2, [sp, #12]
 8012c98:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012c9a:	7013      	strb	r3, [r2, #0]
 8012c9c:	9b02      	ldr	r3, [sp, #8]
 8012c9e:	051b      	lsls	r3, r3, #20
 8012ca0:	f57f ae8b 	bpl.w	80129ba <awe_modSTBiquadCascadeSet+0x2c2>
 8012ca4:	e544      	b.n	8012730 <awe_modSTBiquadCascadeSet+0x38>
 8012ca6:	4b24      	ldr	r3, [pc, #144]	@ (8012d38 <awe_modSTBiquadCascadeSet+0x640>)
 8012ca8:	e67a      	b.n	80129a0 <awe_modSTBiquadCascadeSet+0x2a8>
 8012caa:	4b23      	ldr	r3, [pc, #140]	@ (8012d38 <awe_modSTBiquadCascadeSet+0x640>)
 8012cac:	e645      	b.n	801293a <awe_modSTBiquadCascadeSet+0x242>
 8012cae:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012cb2:	e60f      	b.n	80128d4 <awe_modSTBiquadCascadeSet+0x1dc>
 8012cb4:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012cb8:	e5da      	b.n	8012870 <awe_modSTBiquadCascadeSet+0x178>
 8012cba:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012cbe:	e5a5      	b.n	801280c <awe_modSTBiquadCascadeSet+0x114>
 8012cc0:	2200      	movs	r2, #0
 8012cc2:	eeb0 aa49 	vmov.f32	s20, s18
 8012cc6:	9205      	str	r2, [sp, #20]
 8012cc8:	4693      	mov	fp, r2
 8012cca:	eef3 9a0f 	vmov.f32	s19, #63	@ 0x41f80000  31.0
 8012cce:	e56e      	b.n	80127ae <awe_modSTBiquadCascadeSet+0xb6>
 8012cd0:	4b19      	ldr	r3, [pc, #100]	@ (8012d38 <awe_modSTBiquadCascadeSet+0x640>)
 8012cd2:	e7c5      	b.n	8012c60 <awe_modSTBiquadCascadeSet+0x568>
 8012cd4:	4b18      	ldr	r3, [pc, #96]	@ (8012d38 <awe_modSTBiquadCascadeSet+0x640>)
 8012cd6:	e790      	b.n	8012bfa <awe_modSTBiquadCascadeSet+0x502>
 8012cd8:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012cdc:	e759      	b.n	8012b92 <awe_modSTBiquadCascadeSet+0x49a>
 8012cde:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012ce2:	e723      	b.n	8012b2c <awe_modSTBiquadCascadeSet+0x434>
 8012ce4:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8012ce8:	e6ed      	b.n	8012ac6 <awe_modSTBiquadCascadeSet+0x3ce>
 8012cea:	2200      	movs	r2, #0
 8012cec:	eeb0 aa49 	vmov.f32	s20, s18
 8012cf0:	9205      	str	r2, [sp, #20]
 8012cf2:	4693      	mov	fp, r2
 8012cf4:	eef3 9a0f 	vmov.f32	s19, #63	@ 0x41f80000  31.0
 8012cf8:	e6b6      	b.n	8012a68 <awe_modSTBiquadCascadeSet+0x370>
 8012cfa:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012cfe:	e64f      	b.n	80129a0 <awe_modSTBiquadCascadeSet+0x2a8>
 8012d00:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012d04:	e619      	b.n	801293a <awe_modSTBiquadCascadeSet+0x242>
 8012d06:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d0a:	e5e3      	b.n	80128d4 <awe_modSTBiquadCascadeSet+0x1dc>
 8012d0c:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d10:	e5ae      	b.n	8012870 <awe_modSTBiquadCascadeSet+0x178>
 8012d12:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d16:	e579      	b.n	801280c <awe_modSTBiquadCascadeSet+0x114>
 8012d18:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d1c:	e6d3      	b.n	8012ac6 <awe_modSTBiquadCascadeSet+0x3ce>
 8012d1e:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d22:	e703      	b.n	8012b2c <awe_modSTBiquadCascadeSet+0x434>
 8012d24:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8012d28:	e733      	b.n	8012b92 <awe_modSTBiquadCascadeSet+0x49a>
 8012d2a:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012d2e:	e764      	b.n	8012bfa <awe_modSTBiquadCascadeSet+0x502>
 8012d30:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012d34:	e794      	b.n	8012c60 <awe_modSTBiquadCascadeSet+0x568>
 8012d36:	bf00      	nop
 8012d38:	80000001 	.word	0x80000001

08012d3c <awe_modSTGainManagerConstructor>:
 8012d3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d3e:	b085      	sub	sp, #20
 8012d40:	4606      	mov	r6, r0
 8012d42:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8012d44:	e9cd 3000 	strd	r3, r0, [sp]
 8012d48:	4613      	mov	r3, r2
 8012d4a:	4879      	ldr	r0, [pc, #484]	@ (8012f30 <awe_modSTGainManagerConstructor+0x1f4>)
 8012d4c:	460a      	mov	r2, r1
 8012d4e:	4631      	mov	r1, r6
 8012d50:	f00d f9f8 	bl	8020144 <BaseClassModule_Constructor>
 8012d54:	2800      	cmp	r0, #0
 8012d56:	f000 80e6 	beq.w	8012f26 <awe_modSTGainManagerConstructor+0x1ea>
 8012d5a:	4605      	mov	r5, r0
 8012d5c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8012d5e:	4632      	mov	r2, r6
 8012d60:	0080      	lsls	r0, r0, #2
 8012d62:	f240 2131 	movw	r1, #561	@ 0x231
 8012d66:	f00c fc99 	bl	801f69c <awe_fwMalloc>
 8012d6a:	62a8      	str	r0, [r5, #40]	@ 0x28
 8012d6c:	2800      	cmp	r0, #0
 8012d6e:	f000 80da 	beq.w	8012f26 <awe_modSTGainManagerConstructor+0x1ea>
 8012d72:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 8012d74:	4632      	mov	r2, r6
 8012d76:	0080      	lsls	r0, r0, #2
 8012d78:	f240 2131 	movw	r1, #561	@ 0x231
 8012d7c:	f00c fc8e 	bl	801f69c <awe_fwMalloc>
 8012d80:	62e8      	str	r0, [r5, #44]	@ 0x2c
 8012d82:	2800      	cmp	r0, #0
 8012d84:	f000 80cf 	beq.w	8012f26 <awe_modSTGainManagerConstructor+0x1ea>
 8012d88:	4632      	mov	r2, r6
 8012d8a:	f240 2131 	movw	r1, #561	@ 0x231
 8012d8e:	204c      	movs	r0, #76	@ 0x4c
 8012d90:	f00c fc84 	bl	801f69c <awe_fwMalloc>
 8012d94:	4604      	mov	r4, r0
 8012d96:	6328      	str	r0, [r5, #48]	@ 0x30
 8012d98:	2800      	cmp	r0, #0
 8012d9a:	f000 80c4 	beq.w	8012f26 <awe_modSTGainManagerConstructor+0x1ea>
 8012d9e:	4b65      	ldr	r3, [pc, #404]	@ (8012f34 <awe_modSTGainManagerConstructor+0x1f8>)
 8012da0:	4632      	mov	r2, r6
 8012da2:	6818      	ldr	r0, [r3, #0]
 8012da4:	f240 2131 	movw	r1, #561	@ 0x231
 8012da8:	f00c fc78 	bl	801f69c <awe_fwMalloc>
 8012dac:	64a0      	str	r0, [r4, #72]	@ 0x48
 8012dae:	2800      	cmp	r0, #0
 8012db0:	f000 80b9 	beq.w	8012f26 <awe_modSTGainManagerConstructor+0x1ea>
 8012db4:	2100      	movs	r1, #0
 8012db6:	4b60      	ldr	r3, [pc, #384]	@ (8012f38 <awe_modSTGainManagerConstructor+0x1fc>)
 8012db8:	9103      	str	r1, [sp, #12]
 8012dba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8012dbc:	692e      	ldr	r6, [r5, #16]
 8012dbe:	6229      	str	r1, [r5, #32]
 8012dc0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8012dc4:	631a      	str	r2, [r3, #48]	@ 0x30
 8012dc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012dc8:	4a5c      	ldr	r2, [pc, #368]	@ (8012f3c <awe_modSTGainManagerConstructor+0x200>)
 8012dca:	495d      	ldr	r1, [pc, #372]	@ (8012f40 <awe_modSTGainManagerConstructor+0x204>)
 8012dcc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8012dd0:	9303      	str	r3, [sp, #12]
 8012dd2:	2301      	movs	r3, #1
 8012dd4:	9f03      	ldr	r7, [sp, #12]
 8012dd6:	6093      	str	r3, [r2, #8]
 8012dd8:	f010 feb2 	bl	8023b40 <gam_reset>
 8012ddc:	2800      	cmp	r0, #0
 8012dde:	f040 809c 	bne.w	8012f1a <awe_modSTGainManagerConstructor+0x1de>
 8012de2:	6833      	ldr	r3, [r6, #0]
 8012de4:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 8012de6:	68d9      	ldr	r1, [r3, #12]
 8012de8:	695b      	ldr	r3, [r3, #20]
 8012dea:	62a1      	str	r1, [r4, #40]	@ 0x28
 8012dec:	e9d6 0100 	ldrd	r0, r1, [r6]
 8012df0:	6987      	ldr	r7, [r0, #24]
 8012df2:	68c8      	ldr	r0, [r1, #12]
 8012df4:	6949      	ldr	r1, [r1, #20]
 8012df6:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8012df8:	6870      	ldr	r0, [r6, #4]
 8012dfa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8012dfe:	6980      	ldr	r0, [r0, #24]
 8012e00:	6223      	str	r3, [r4, #32]
 8012e02:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8012e06:	f113 33ff 	adds.w	r3, r3, #4294967295
 8012e0a:	bf18      	it	ne
 8012e0c:	2301      	movne	r3, #1
 8012e0e:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8012e12:	f111 36ff 	adds.w	r6, r1, #4294967295
 8012e16:	bf18      	it	ne
 8012e18:	2601      	movne	r6, #1
 8012e1a:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8012e1e:	e9c4 730b 	strd	r7, r3, [r4, #44]	@ 0x2c
 8012e22:	2a00      	cmp	r2, #0
 8012e24:	f04f 0304 	mov.w	r3, #4
 8012e28:	6420      	str	r0, [r4, #64]	@ 0x40
 8012e2a:	6361      	str	r1, [r4, #52]	@ 0x34
 8012e2c:	6466      	str	r6, [r4, #68]	@ 0x44
 8012e2e:	6263      	str	r3, [r4, #36]	@ 0x24
 8012e30:	63a3      	str	r3, [r4, #56]	@ 0x38
 8012e32:	dd67      	ble.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012e34:	e9d5 130a 	ldrd	r1, r3, [r5, #40]	@ 0x28
 8012e38:	edd1 7a00 	vldr	s15, [r1]
 8012e3c:	6818      	ldr	r0, [r3, #0]
 8012e3e:	8220      	strh	r0, [r4, #16]
 8012e40:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012e44:	2a01      	cmp	r2, #1
 8012e46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e4a:	ee17 0a90 	vmov	r0, s15
 8012e4e:	8020      	strh	r0, [r4, #0]
 8012e50:	d058      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012e52:	edd1 7a01 	vldr	s15, [r1, #4]
 8012e56:	6858      	ldr	r0, [r3, #4]
 8012e58:	8260      	strh	r0, [r4, #18]
 8012e5a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012e5e:	2a02      	cmp	r2, #2
 8012e60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e64:	ee17 0a90 	vmov	r0, s15
 8012e68:	8060      	strh	r0, [r4, #2]
 8012e6a:	d04b      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012e6c:	edd1 7a02 	vldr	s15, [r1, #8]
 8012e70:	6898      	ldr	r0, [r3, #8]
 8012e72:	82a0      	strh	r0, [r4, #20]
 8012e74:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012e78:	2a03      	cmp	r2, #3
 8012e7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e7e:	ee17 0a90 	vmov	r0, s15
 8012e82:	80a0      	strh	r0, [r4, #4]
 8012e84:	d03e      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012e86:	edd1 7a03 	vldr	s15, [r1, #12]
 8012e8a:	68d8      	ldr	r0, [r3, #12]
 8012e8c:	82e0      	strh	r0, [r4, #22]
 8012e8e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012e92:	2a04      	cmp	r2, #4
 8012e94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e98:	ee17 0a90 	vmov	r0, s15
 8012e9c:	80e0      	strh	r0, [r4, #6]
 8012e9e:	d031      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012ea0:	edd1 7a04 	vldr	s15, [r1, #16]
 8012ea4:	6918      	ldr	r0, [r3, #16]
 8012ea6:	8320      	strh	r0, [r4, #24]
 8012ea8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012eac:	2a05      	cmp	r2, #5
 8012eae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012eb2:	ee17 0a90 	vmov	r0, s15
 8012eb6:	8120      	strh	r0, [r4, #8]
 8012eb8:	d024      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012eba:	edd1 7a05 	vldr	s15, [r1, #20]
 8012ebe:	6958      	ldr	r0, [r3, #20]
 8012ec0:	8360      	strh	r0, [r4, #26]
 8012ec2:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012ec6:	2a06      	cmp	r2, #6
 8012ec8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012ecc:	ee17 0a90 	vmov	r0, s15
 8012ed0:	8160      	strh	r0, [r4, #10]
 8012ed2:	d017      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012ed4:	edd1 7a06 	vldr	s15, [r1, #24]
 8012ed8:	6998      	ldr	r0, [r3, #24]
 8012eda:	83a0      	strh	r0, [r4, #28]
 8012edc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012ee0:	2a07      	cmp	r2, #7
 8012ee2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012ee6:	ee17 0a90 	vmov	r0, s15
 8012eea:	81a0      	strh	r0, [r4, #12]
 8012eec:	d00a      	beq.n	8012f04 <awe_modSTGainManagerConstructor+0x1c8>
 8012eee:	edd1 7a07 	vldr	s15, [r1, #28]
 8012ef2:	69db      	ldr	r3, [r3, #28]
 8012ef4:	83e3      	strh	r3, [r4, #30]
 8012ef6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8012efa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012efe:	ee17 3a90 	vmov	r3, s15
 8012f02:	81e3      	strh	r3, [r4, #14]
 8012f04:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012f06:	4620      	mov	r0, r4
 8012f08:	f010 fe8a 	bl	8023c20 <gam_setConfig>
 8012f0c:	b110      	cbz	r0, 8012f14 <awe_modSTGainManagerConstructor+0x1d8>
 8012f0e:	6a2b      	ldr	r3, [r5, #32]
 8012f10:	b903      	cbnz	r3, 8012f14 <awe_modSTGainManagerConstructor+0x1d8>
 8012f12:	6228      	str	r0, [r5, #32]
 8012f14:	4628      	mov	r0, r5
 8012f16:	b005      	add	sp, #20
 8012f18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f1a:	6a2b      	ldr	r3, [r5, #32]
 8012f1c:	2b00      	cmp	r3, #0
 8012f1e:	f47f af60 	bne.w	8012de2 <awe_modSTGainManagerConstructor+0xa6>
 8012f22:	6228      	str	r0, [r5, #32]
 8012f24:	e75d      	b.n	8012de2 <awe_modSTGainManagerConstructor+0xa6>
 8012f26:	2500      	movs	r5, #0
 8012f28:	4628      	mov	r0, r5
 8012f2a:	b005      	add	sp, #20
 8012f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f2e:	bf00      	nop
 8012f30:	0803505c 	.word	0x0803505c
 8012f34:	08037364 	.word	0x08037364
 8012f38:	40023800 	.word	0x40023800
 8012f3c:	40023000 	.word	0x40023000
 8012f40:	2001d9f4 	.word	0x2001d9f4

08012f44 <awe_modSTGainManagerProcess>:
 8012f44:	6a03      	ldr	r3, [r0, #32]
 8012f46:	b103      	cbz	r3, 8012f4a <awe_modSTGainManagerProcess+0x6>
 8012f48:	4770      	bx	lr
 8012f4a:	6903      	ldr	r3, [r0, #16]
 8012f4c:	6819      	ldr	r1, [r3, #0]
 8012f4e:	b510      	push	{r4, lr}
 8012f50:	4604      	mov	r4, r0
 8012f52:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8012f54:	68c9      	ldr	r1, [r1, #12]
 8012f56:	6281      	str	r1, [r0, #40]	@ 0x28
 8012f58:	685b      	ldr	r3, [r3, #4]
 8012f5a:	6c82      	ldr	r2, [r0, #72]	@ 0x48
 8012f5c:	68db      	ldr	r3, [r3, #12]
 8012f5e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012f60:	f100 0134 	add.w	r1, r0, #52	@ 0x34
 8012f64:	3020      	adds	r0, #32
 8012f66:	f011 f82b 	bl	8023fc0 <gam_process>
 8012f6a:	b100      	cbz	r0, 8012f6e <awe_modSTGainManagerProcess+0x2a>
 8012f6c:	6220      	str	r0, [r4, #32]
 8012f6e:	bd10      	pop	{r4, pc}

08012f70 <awe_modSTGainManagerSet>:
 8012f70:	b570      	push	{r4, r5, r6, lr}
 8012f72:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8012f74:	4605      	mov	r5, r0
 8012f76:	460e      	mov	r6, r1
 8012f78:	4620      	mov	r0, r4
 8012f7a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012f7c:	f010 ffbe 	bl	8023efc <gam_getConfig>
 8012f80:	b118      	cbz	r0, 8012f8a <awe_modSTGainManagerSet+0x1a>
 8012f82:	6a2b      	ldr	r3, [r5, #32]
 8012f84:	2b00      	cmp	r3, #0
 8012f86:	f000 808e 	beq.w	80130a6 <awe_modSTGainManagerSet+0x136>
 8012f8a:	0533      	lsls	r3, r6, #20
 8012f8c:	d52e      	bpl.n	8012fec <awe_modSTGainManagerSet+0x7c>
 8012f8e:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8012f90:	2b00      	cmp	r3, #0
 8012f92:	dd21      	ble.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8012f94:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 8012f96:	2b01      	cmp	r3, #1
 8012f98:	6811      	ldr	r1, [r2, #0]
 8012f9a:	8221      	strh	r1, [r4, #16]
 8012f9c:	f000 8090 	beq.w	80130c0 <awe_modSTGainManagerSet+0x150>
 8012fa0:	6851      	ldr	r1, [r2, #4]
 8012fa2:	8261      	strh	r1, [r4, #18]
 8012fa4:	2b02      	cmp	r3, #2
 8012fa6:	d015      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fa8:	6891      	ldr	r1, [r2, #8]
 8012faa:	82a1      	strh	r1, [r4, #20]
 8012fac:	2b03      	cmp	r3, #3
 8012fae:	d011      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fb0:	68d1      	ldr	r1, [r2, #12]
 8012fb2:	82e1      	strh	r1, [r4, #22]
 8012fb4:	2b04      	cmp	r3, #4
 8012fb6:	d00d      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fb8:	6911      	ldr	r1, [r2, #16]
 8012fba:	8321      	strh	r1, [r4, #24]
 8012fbc:	2b05      	cmp	r3, #5
 8012fbe:	d009      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fc0:	6951      	ldr	r1, [r2, #20]
 8012fc2:	8361      	strh	r1, [r4, #26]
 8012fc4:	2b06      	cmp	r3, #6
 8012fc6:	d005      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fc8:	6991      	ldr	r1, [r2, #24]
 8012fca:	83a1      	strh	r1, [r4, #28]
 8012fcc:	2b07      	cmp	r3, #7
 8012fce:	d001      	beq.n	8012fd4 <awe_modSTGainManagerSet+0x64>
 8012fd0:	69d2      	ldr	r2, [r2, #28]
 8012fd2:	83e2      	strh	r2, [r4, #30]
 8012fd4:	0572      	lsls	r2, r6, #21
 8012fd6:	d468      	bmi.n	80130aa <awe_modSTGainManagerSet+0x13a>
 8012fd8:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012fda:	4620      	mov	r0, r4
 8012fdc:	f010 fe20 	bl	8023c20 <gam_setConfig>
 8012fe0:	b110      	cbz	r0, 8012fe8 <awe_modSTGainManagerSet+0x78>
 8012fe2:	6a2b      	ldr	r3, [r5, #32]
 8012fe4:	b903      	cbnz	r3, 8012fe8 <awe_modSTGainManagerSet+0x78>
 8012fe6:	6228      	str	r0, [r5, #32]
 8012fe8:	2000      	movs	r0, #0
 8012fea:	bd70      	pop	{r4, r5, r6, pc}
 8012fec:	0570      	lsls	r0, r6, #21
 8012fee:	d5f3      	bpl.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8012ff0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8012ff2:	2b00      	cmp	r3, #0
 8012ff4:	ddf0      	ble.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8012ff6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8012ff8:	edd2 7a00 	vldr	s15, [r2]
 8012ffc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013000:	2b01      	cmp	r3, #1
 8013002:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013006:	ee17 1a90 	vmov	r1, s15
 801300a:	8021      	strh	r1, [r4, #0]
 801300c:	d0e4      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 801300e:	edd2 7a01 	vldr	s15, [r2, #4]
 8013012:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013016:	2b02      	cmp	r3, #2
 8013018:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801301c:	ee17 1a90 	vmov	r1, s15
 8013020:	8061      	strh	r1, [r4, #2]
 8013022:	d0d9      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8013024:	edd2 7a02 	vldr	s15, [r2, #8]
 8013028:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801302c:	2b03      	cmp	r3, #3
 801302e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013032:	ee17 1a90 	vmov	r1, s15
 8013036:	80a1      	strh	r1, [r4, #4]
 8013038:	d0ce      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 801303a:	edd2 7a03 	vldr	s15, [r2, #12]
 801303e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013042:	2b04      	cmp	r3, #4
 8013044:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013048:	ee17 1a90 	vmov	r1, s15
 801304c:	80e1      	strh	r1, [r4, #6]
 801304e:	d0c3      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8013050:	edd2 7a04 	vldr	s15, [r2, #16]
 8013054:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013058:	2b05      	cmp	r3, #5
 801305a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801305e:	ee17 1a90 	vmov	r1, s15
 8013062:	8121      	strh	r1, [r4, #8]
 8013064:	d0b8      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8013066:	edd2 7a05 	vldr	s15, [r2, #20]
 801306a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801306e:	2b06      	cmp	r3, #6
 8013070:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013074:	ee17 1a90 	vmov	r1, s15
 8013078:	8161      	strh	r1, [r4, #10]
 801307a:	d0ad      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 801307c:	edd2 7a06 	vldr	s15, [r2, #24]
 8013080:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013084:	2b07      	cmp	r3, #7
 8013086:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801308a:	ee17 1a90 	vmov	r1, s15
 801308e:	81a1      	strh	r1, [r4, #12]
 8013090:	d0a2      	beq.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 8013092:	edd2 7a07 	vldr	s15, [r2, #28]
 8013096:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801309a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801309e:	ee17 3a90 	vmov	r3, s15
 80130a2:	81e3      	strh	r3, [r4, #14]
 80130a4:	e798      	b.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 80130a6:	6228      	str	r0, [r5, #32]
 80130a8:	e76f      	b.n	8012f8a <awe_modSTGainManagerSet+0x1a>
 80130aa:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80130ac:	edd2 7a00 	vldr	s15, [r2]
 80130b0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80130b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80130b8:	ee17 1a90 	vmov	r1, s15
 80130bc:	8021      	strh	r1, [r4, #0]
 80130be:	e7a6      	b.n	801300e <awe_modSTGainManagerSet+0x9e>
 80130c0:	0571      	lsls	r1, r6, #21
 80130c2:	d589      	bpl.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 80130c4:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80130c6:	edd3 7a00 	vldr	s15, [r3]
 80130ca:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80130ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80130d2:	ee17 3a90 	vmov	r3, s15
 80130d6:	8023      	strh	r3, [r4, #0]
 80130d8:	e77e      	b.n	8012fd8 <awe_modSTGainManagerSet+0x68>
 80130da:	bf00      	nop

080130dc <awe_modSTGraphicEqConstructor>:
 80130dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80130de:	b085      	sub	sp, #20
 80130e0:	4617      	mov	r7, r2
 80130e2:	4606      	mov	r6, r0
 80130e4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80130e6:	9300      	str	r3, [sp, #0]
 80130e8:	460a      	mov	r2, r1
 80130ea:	9001      	str	r0, [sp, #4]
 80130ec:	463b      	mov	r3, r7
 80130ee:	4631      	mov	r1, r6
 80130f0:	4843      	ldr	r0, [pc, #268]	@ (8013200 <awe_modSTGraphicEqConstructor+0x124>)
 80130f2:	f00d f827 	bl	8020144 <BaseClassModule_Constructor>
 80130f6:	2800      	cmp	r0, #0
 80130f8:	d07e      	beq.n	80131f8 <awe_modSTGraphicEqConstructor+0x11c>
 80130fa:	4605      	mov	r5, r0
 80130fc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80130fe:	4632      	mov	r2, r6
 8013100:	0080      	lsls	r0, r0, #2
 8013102:	f240 2131 	movw	r1, #561	@ 0x231
 8013106:	f00c fac9 	bl	801f69c <awe_fwMalloc>
 801310a:	6368      	str	r0, [r5, #52]	@ 0x34
 801310c:	2800      	cmp	r0, #0
 801310e:	d073      	beq.n	80131f8 <awe_modSTGraphicEqConstructor+0x11c>
 8013110:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013112:	4632      	mov	r2, r6
 8013114:	0080      	lsls	r0, r0, #2
 8013116:	f240 2131 	movw	r1, #561	@ 0x231
 801311a:	f00c fabf 	bl	801f69c <awe_fwMalloc>
 801311e:	63a8      	str	r0, [r5, #56]	@ 0x38
 8013120:	2800      	cmp	r0, #0
 8013122:	d069      	beq.n	80131f8 <awe_modSTGraphicEqConstructor+0x11c>
 8013124:	4632      	mov	r2, r6
 8013126:	f240 2131 	movw	r1, #561	@ 0x231
 801312a:	2048      	movs	r0, #72	@ 0x48
 801312c:	f00c fab6 	bl	801f69c <awe_fwMalloc>
 8013130:	4604      	mov	r4, r0
 8013132:	63e8      	str	r0, [r5, #60]	@ 0x3c
 8013134:	2800      	cmp	r0, #0
 8013136:	d05f      	beq.n	80131f8 <awe_modSTGraphicEqConstructor+0x11c>
 8013138:	4b32      	ldr	r3, [pc, #200]	@ (8013204 <awe_modSTGraphicEqConstructor+0x128>)
 801313a:	4632      	mov	r2, r6
 801313c:	6818      	ldr	r0, [r3, #0]
 801313e:	f240 2131 	movw	r1, #561	@ 0x231
 8013142:	f00c faab 	bl	801f69c <awe_fwMalloc>
 8013146:	6460      	str	r0, [r4, #68]	@ 0x44
 8013148:	2800      	cmp	r0, #0
 801314a:	d055      	beq.n	80131f8 <awe_modSTGraphicEqConstructor+0x11c>
 801314c:	2100      	movs	r1, #0
 801314e:	4b2e      	ldr	r3, [pc, #184]	@ (8013208 <awe_modSTGraphicEqConstructor+0x12c>)
 8013150:	9103      	str	r1, [sp, #12]
 8013152:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013154:	6269      	str	r1, [r5, #36]	@ 0x24
 8013156:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 801315a:	631a      	str	r2, [r3, #48]	@ 0x30
 801315c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801315e:	4a2b      	ldr	r2, [pc, #172]	@ (801320c <awe_modSTGraphicEqConstructor+0x130>)
 8013160:	492b      	ldr	r1, [pc, #172]	@ (8013210 <awe_modSTGraphicEqConstructor+0x134>)
 8013162:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8013166:	9303      	str	r3, [sp, #12]
 8013168:	2301      	movs	r3, #1
 801316a:	9e03      	ldr	r6, [sp, #12]
 801316c:	6093      	str	r3, [r2, #8]
 801316e:	f011 f91b 	bl	80243a8 <greq_reset>
 8013172:	b110      	cbz	r0, 801317a <awe_modSTGraphicEqConstructor+0x9e>
 8013174:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8013176:	b903      	cbnz	r3, 801317a <awe_modSTGraphicEqConstructor+0x9e>
 8013178:	6268      	str	r0, [r5, #36]	@ 0x24
 801317a:	683b      	ldr	r3, [r7, #0]
 801317c:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 801317e:	68da      	ldr	r2, [r3, #12]
 8013180:	695b      	ldr	r3, [r3, #20]
 8013182:	6262      	str	r2, [r4, #36]	@ 0x24
 8013184:	e9d7 1200 	ldrd	r1, r2, [r7]
 8013188:	6988      	ldr	r0, [r1, #24]
 801318a:	68d1      	ldr	r1, [r2, #12]
 801318c:	6952      	ldr	r2, [r2, #20]
 801318e:	63a1      	str	r1, [r4, #56]	@ 0x38
 8013190:	6879      	ldr	r1, [r7, #4]
 8013192:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8013196:	6989      	ldr	r1, [r1, #24]
 8013198:	61e3      	str	r3, [r4, #28]
 801319a:	f3c2 0209 	ubfx	r2, r2, #0, #10
 801319e:	f113 33ff 	adds.w	r3, r3, #4294967295
 80131a2:	bf18      	it	ne
 80131a4:	2301      	movne	r3, #1
 80131a6:	8326      	strh	r6, [r4, #24]
 80131a8:	f112 36ff 	adds.w	r6, r2, #4294967295
 80131ac:	f3c0 0010 	ubfx	r0, r0, #0, #17
 80131b0:	f3c1 0110 	ubfx	r1, r1, #0, #17
 80131b4:	bf18      	it	ne
 80131b6:	2601      	movne	r6, #1
 80131b8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80131ba:	2304      	movs	r3, #4
 80131bc:	62a0      	str	r0, [r4, #40]	@ 0x28
 80131be:	63e1      	str	r1, [r4, #60]	@ 0x3c
 80131c0:	6322      	str	r2, [r4, #48]	@ 0x30
 80131c2:	6426      	str	r6, [r4, #64]	@ 0x40
 80131c4:	6223      	str	r3, [r4, #32]
 80131c6:	6363      	str	r3, [r4, #52]	@ 0x34
 80131c8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80131ca:	f104 0018 	add.w	r0, r4, #24
 80131ce:	f012 f991 	bl	80254f4 <greq_setParam>
 80131d2:	b110      	cbz	r0, 80131da <awe_modSTGraphicEqConstructor+0xfe>
 80131d4:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80131d6:	b903      	cbnz	r3, 80131da <awe_modSTGraphicEqConstructor+0xfe>
 80131d8:	6268      	str	r0, [r5, #36]	@ 0x24
 80131da:	e9d5 230b 	ldrd	r2, r3, [r5, #44]	@ 0x2c
 80131de:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80131e0:	82e2      	strh	r2, [r4, #22]
 80131e2:	8023      	strh	r3, [r4, #0]
 80131e4:	4620      	mov	r0, r4
 80131e6:	f011 f9b1 	bl	802454c <greq_setConfig>
 80131ea:	b110      	cbz	r0, 80131f2 <awe_modSTGraphicEqConstructor+0x116>
 80131ec:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80131ee:	b903      	cbnz	r3, 80131f2 <awe_modSTGraphicEqConstructor+0x116>
 80131f0:	6268      	str	r0, [r5, #36]	@ 0x24
 80131f2:	4628      	mov	r0, r5
 80131f4:	b005      	add	sp, #20
 80131f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131f8:	2500      	movs	r5, #0
 80131fa:	4628      	mov	r0, r5
 80131fc:	b005      	add	sp, #20
 80131fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013200:	08035084 	.word	0x08035084
 8013204:	08037634 	.word	0x08037634
 8013208:	40023800 	.word	0x40023800
 801320c:	40023000 	.word	0x40023000
 8013210:	2001d9f4 	.word	0x2001d9f4

08013214 <awe_modSTGraphicEqProcess>:
 8013214:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013216:	b103      	cbz	r3, 801321a <awe_modSTGraphicEqProcess+0x6>
 8013218:	4770      	bx	lr
 801321a:	6903      	ldr	r3, [r0, #16]
 801321c:	6819      	ldr	r1, [r3, #0]
 801321e:	b510      	push	{r4, lr}
 8013220:	4604      	mov	r4, r0
 8013222:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8013224:	68c9      	ldr	r1, [r1, #12]
 8013226:	6241      	str	r1, [r0, #36]	@ 0x24
 8013228:	685b      	ldr	r3, [r3, #4]
 801322a:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 801322c:	68db      	ldr	r3, [r3, #12]
 801322e:	6383      	str	r3, [r0, #56]	@ 0x38
 8013230:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 8013234:	301c      	adds	r0, #28
 8013236:	f012 fa4b 	bl	80256d0 <greq_process>
 801323a:	b100      	cbz	r0, 801323e <awe_modSTGraphicEqProcess+0x2a>
 801323c:	6260      	str	r0, [r4, #36]	@ 0x24
 801323e:	bd10      	pop	{r4, pc}

08013240 <awe_modSTGraphicEqSet>:
 8013240:	b570      	push	{r4, r5, r6, lr}
 8013242:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8013244:	4605      	mov	r5, r0
 8013246:	460e      	mov	r6, r1
 8013248:	4620      	mov	r0, r4
 801324a:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801324c:	f012 f8c4 	bl	80253d8 <greq_getConfig>
 8013250:	b110      	cbz	r0, 8013258 <awe_modSTGraphicEqSet+0x18>
 8013252:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8013254:	2b00      	cmp	r3, #0
 8013256:	d052      	beq.n	80132fe <awe_modSTGraphicEqSet+0xbe>
 8013258:	0530      	lsls	r0, r6, #20
 801325a:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801325c:	d453      	bmi.n	8013306 <awe_modSTGraphicEqSet+0xc6>
 801325e:	04f2      	lsls	r2, r6, #19
 8013260:	bf44      	itt	mi
 8013262:	6b2b      	ldrmi	r3, [r5, #48]	@ 0x30
 8013264:	8023      	strhmi	r3, [r4, #0]
 8013266:	04b3      	lsls	r3, r6, #18
 8013268:	d540      	bpl.n	80132ec <awe_modSTGraphicEqSet+0xac>
 801326a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 801326c:	2b00      	cmp	r3, #0
 801326e:	d13d      	bne.n	80132ec <awe_modSTGraphicEqSet+0xac>
 8013270:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8013272:	2b00      	cmp	r3, #0
 8013274:	dd3a      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 8013276:	e9d5 230d 	ldrd	r2, r3, [r5, #52]	@ 0x34
 801327a:	6810      	ldr	r0, [r2, #0]
 801327c:	8060      	strh	r0, [r4, #2]
 801327e:	6018      	str	r0, [r3, #0]
 8013280:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013282:	2801      	cmp	r0, #1
 8013284:	dd32      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 8013286:	6850      	ldr	r0, [r2, #4]
 8013288:	80a0      	strh	r0, [r4, #4]
 801328a:	6058      	str	r0, [r3, #4]
 801328c:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 801328e:	2802      	cmp	r0, #2
 8013290:	dd2c      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 8013292:	6890      	ldr	r0, [r2, #8]
 8013294:	80e0      	strh	r0, [r4, #6]
 8013296:	6098      	str	r0, [r3, #8]
 8013298:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 801329a:	2803      	cmp	r0, #3
 801329c:	dd26      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 801329e:	68d0      	ldr	r0, [r2, #12]
 80132a0:	8120      	strh	r0, [r4, #8]
 80132a2:	60d8      	str	r0, [r3, #12]
 80132a4:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132a6:	2804      	cmp	r0, #4
 80132a8:	dd20      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132aa:	6910      	ldr	r0, [r2, #16]
 80132ac:	8160      	strh	r0, [r4, #10]
 80132ae:	6118      	str	r0, [r3, #16]
 80132b0:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132b2:	2805      	cmp	r0, #5
 80132b4:	dd1a      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132b6:	6950      	ldr	r0, [r2, #20]
 80132b8:	81a0      	strh	r0, [r4, #12]
 80132ba:	6158      	str	r0, [r3, #20]
 80132bc:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132be:	2806      	cmp	r0, #6
 80132c0:	dd14      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132c2:	6990      	ldr	r0, [r2, #24]
 80132c4:	81e0      	strh	r0, [r4, #14]
 80132c6:	6198      	str	r0, [r3, #24]
 80132c8:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132ca:	2807      	cmp	r0, #7
 80132cc:	dd0e      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132ce:	69d0      	ldr	r0, [r2, #28]
 80132d0:	8220      	strh	r0, [r4, #16]
 80132d2:	61d8      	str	r0, [r3, #28]
 80132d4:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132d6:	2808      	cmp	r0, #8
 80132d8:	dd08      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132da:	6a10      	ldr	r0, [r2, #32]
 80132dc:	8260      	strh	r0, [r4, #18]
 80132de:	6218      	str	r0, [r3, #32]
 80132e0:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80132e2:	2809      	cmp	r0, #9
 80132e4:	dd02      	ble.n	80132ec <awe_modSTGraphicEqSet+0xac>
 80132e6:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80132e8:	82a2      	strh	r2, [r4, #20]
 80132ea:	625a      	str	r2, [r3, #36]	@ 0x24
 80132ec:	4620      	mov	r0, r4
 80132ee:	f011 f92d 	bl	802454c <greq_setConfig>
 80132f2:	b110      	cbz	r0, 80132fa <awe_modSTGraphicEqSet+0xba>
 80132f4:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80132f6:	b903      	cbnz	r3, 80132fa <awe_modSTGraphicEqSet+0xba>
 80132f8:	6268      	str	r0, [r5, #36]	@ 0x24
 80132fa:	2000      	movs	r0, #0
 80132fc:	bd70      	pop	{r4, r5, r6, pc}
 80132fe:	6268      	str	r0, [r5, #36]	@ 0x24
 8013300:	0530      	lsls	r0, r6, #20
 8013302:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8013304:	d5ab      	bpl.n	801325e <awe_modSTGraphicEqSet+0x1e>
 8013306:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 8013308:	82e3      	strh	r3, [r4, #22]
 801330a:	4620      	mov	r0, r4
 801330c:	f011 f91e 	bl	802454c <greq_setConfig>
 8013310:	b110      	cbz	r0, 8013318 <awe_modSTGraphicEqSet+0xd8>
 8013312:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8013314:	b903      	cbnz	r3, 8013318 <awe_modSTGraphicEqSet+0xd8>
 8013316:	6268      	str	r0, [r5, #36]	@ 0x24
 8013318:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801331a:	4620      	mov	r0, r4
 801331c:	f012 f85c 	bl	80253d8 <greq_getConfig>
 8013320:	b110      	cbz	r0, 8013328 <awe_modSTGraphicEqSet+0xe8>
 8013322:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8013324:	b903      	cbnz	r3, 8013328 <awe_modSTGraphicEqSet+0xe8>
 8013326:	6268      	str	r0, [r5, #36]	@ 0x24
 8013328:	e9d5 320a 	ldrd	r3, r2, [r5, #40]	@ 0x28
 801332c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801332e:	2a00      	cmp	r2, #0
 8013330:	d144      	bne.n	80133bc <awe_modSTGraphicEqSet+0x17c>
 8013332:	2b00      	cmp	r3, #0
 8013334:	dd93      	ble.n	801325e <awe_modSTGraphicEqSet+0x1e>
 8013336:	e9d5 230d 	ldrd	r2, r3, [r5, #52]	@ 0x34
 801333a:	6810      	ldr	r0, [r2, #0]
 801333c:	8060      	strh	r0, [r4, #2]
 801333e:	6018      	str	r0, [r3, #0]
 8013340:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013342:	2801      	cmp	r0, #1
 8013344:	dd8b      	ble.n	801325e <awe_modSTGraphicEqSet+0x1e>
 8013346:	6850      	ldr	r0, [r2, #4]
 8013348:	80a0      	strh	r0, [r4, #4]
 801334a:	6058      	str	r0, [r3, #4]
 801334c:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 801334e:	2802      	cmp	r0, #2
 8013350:	dd85      	ble.n	801325e <awe_modSTGraphicEqSet+0x1e>
 8013352:	6890      	ldr	r0, [r2, #8]
 8013354:	80e0      	strh	r0, [r4, #6]
 8013356:	6098      	str	r0, [r3, #8]
 8013358:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 801335a:	2803      	cmp	r0, #3
 801335c:	f77f af7f 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 8013360:	68d0      	ldr	r0, [r2, #12]
 8013362:	8120      	strh	r0, [r4, #8]
 8013364:	60d8      	str	r0, [r3, #12]
 8013366:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013368:	2804      	cmp	r0, #4
 801336a:	f77f af78 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 801336e:	6910      	ldr	r0, [r2, #16]
 8013370:	8160      	strh	r0, [r4, #10]
 8013372:	6118      	str	r0, [r3, #16]
 8013374:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013376:	2805      	cmp	r0, #5
 8013378:	f77f af71 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 801337c:	6950      	ldr	r0, [r2, #20]
 801337e:	81a0      	strh	r0, [r4, #12]
 8013380:	6158      	str	r0, [r3, #20]
 8013382:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013384:	2806      	cmp	r0, #6
 8013386:	f77f af6a 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 801338a:	6990      	ldr	r0, [r2, #24]
 801338c:	81e0      	strh	r0, [r4, #14]
 801338e:	6198      	str	r0, [r3, #24]
 8013390:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8013392:	2807      	cmp	r0, #7
 8013394:	f77f af63 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 8013398:	69d0      	ldr	r0, [r2, #28]
 801339a:	8220      	strh	r0, [r4, #16]
 801339c:	61d8      	str	r0, [r3, #28]
 801339e:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80133a0:	2808      	cmp	r0, #8
 80133a2:	f77f af5c 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133a6:	6a10      	ldr	r0, [r2, #32]
 80133a8:	8260      	strh	r0, [r4, #18]
 80133aa:	6218      	str	r0, [r3, #32]
 80133ac:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80133ae:	2809      	cmp	r0, #9
 80133b0:	f77f af55 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133b4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80133b6:	82a2      	strh	r2, [r4, #20]
 80133b8:	625a      	str	r2, [r3, #36]	@ 0x24
 80133ba:	e750      	b.n	801325e <awe_modSTGraphicEqSet+0x1e>
 80133bc:	2b00      	cmp	r3, #0
 80133be:	f77f af4e 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80133c4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80133c8:	601a      	str	r2, [r3, #0]
 80133ca:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80133cc:	2a01      	cmp	r2, #1
 80133ce:	f77f af46 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133d2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80133d6:	605a      	str	r2, [r3, #4]
 80133d8:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80133da:	2a02      	cmp	r2, #2
 80133dc:	f77f af3f 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133e0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80133e4:	609a      	str	r2, [r3, #8]
 80133e6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80133e8:	2a03      	cmp	r2, #3
 80133ea:	f77f af38 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80133f2:	60da      	str	r2, [r3, #12]
 80133f4:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80133f6:	2a04      	cmp	r2, #4
 80133f8:	f77f af31 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 80133fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013400:	611a      	str	r2, [r3, #16]
 8013402:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8013404:	2a05      	cmp	r2, #5
 8013406:	f77f af2a 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 801340a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801340e:	615a      	str	r2, [r3, #20]
 8013410:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8013412:	2a06      	cmp	r2, #6
 8013414:	f77f af23 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 8013418:	f9b4 200e 	ldrsh.w	r2, [r4, #14]
 801341c:	619a      	str	r2, [r3, #24]
 801341e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8013420:	2a07      	cmp	r2, #7
 8013422:	f77f af1c 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 8013426:	f9b4 2010 	ldrsh.w	r2, [r4, #16]
 801342a:	61da      	str	r2, [r3, #28]
 801342c:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 801342e:	2a08      	cmp	r2, #8
 8013430:	f77f af15 	ble.w	801325e <awe_modSTGraphicEqSet+0x1e>
 8013434:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8013438:	621a      	str	r2, [r3, #32]
 801343a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 801343c:	2a09      	cmp	r2, #9
 801343e:	bfc4      	itt	gt
 8013440:	f9b4 2014 	ldrshgt.w	r2, [r4, #20]
 8013444:	625a      	strgt	r2, [r3, #36]	@ 0x24
 8013446:	e70a      	b.n	801325e <awe_modSTGraphicEqSet+0x1e>

08013448 <awe_modSTHeadphoneVirtConstructor>:
 8013448:	b5f0      	push	{r4, r5, r6, r7, lr}
 801344a:	b085      	sub	sp, #20
 801344c:	4606      	mov	r6, r0
 801344e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8013450:	e9cd 3000 	strd	r3, r0, [sp]
 8013454:	4613      	mov	r3, r2
 8013456:	483e      	ldr	r0, [pc, #248]	@ (8013550 <awe_modSTHeadphoneVirtConstructor+0x108>)
 8013458:	460a      	mov	r2, r1
 801345a:	4631      	mov	r1, r6
 801345c:	f00c fe72 	bl	8020144 <BaseClassModule_Constructor>
 8013460:	2800      	cmp	r0, #0
 8013462:	d071      	beq.n	8013548 <awe_modSTHeadphoneVirtConstructor+0x100>
 8013464:	4605      	mov	r5, r0
 8013466:	4632      	mov	r2, r6
 8013468:	f240 2131 	movw	r1, #561	@ 0x231
 801346c:	2048      	movs	r0, #72	@ 0x48
 801346e:	f00c f915 	bl	801f69c <awe_fwMalloc>
 8013472:	4604      	mov	r4, r0
 8013474:	63e8      	str	r0, [r5, #60]	@ 0x3c
 8013476:	2800      	cmp	r0, #0
 8013478:	d066      	beq.n	8013548 <awe_modSTHeadphoneVirtConstructor+0x100>
 801347a:	4b36      	ldr	r3, [pc, #216]	@ (8013554 <awe_modSTHeadphoneVirtConstructor+0x10c>)
 801347c:	4632      	mov	r2, r6
 801347e:	6818      	ldr	r0, [r3, #0]
 8013480:	f240 2131 	movw	r1, #561	@ 0x231
 8013484:	f00c f90a 	bl	801f69c <awe_fwMalloc>
 8013488:	6460      	str	r0, [r4, #68]	@ 0x44
 801348a:	2800      	cmp	r0, #0
 801348c:	d05c      	beq.n	8013548 <awe_modSTHeadphoneVirtConstructor+0x100>
 801348e:	2100      	movs	r1, #0
 8013490:	4b31      	ldr	r3, [pc, #196]	@ (8013558 <awe_modSTHeadphoneVirtConstructor+0x110>)
 8013492:	9103      	str	r1, [sp, #12]
 8013494:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013496:	692e      	ldr	r6, [r5, #16]
 8013498:	6229      	str	r1, [r5, #32]
 801349a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 801349e:	631a      	str	r2, [r3, #48]	@ 0x30
 80134a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80134a2:	4a2e      	ldr	r2, [pc, #184]	@ (801355c <awe_modSTHeadphoneVirtConstructor+0x114>)
 80134a4:	492e      	ldr	r1, [pc, #184]	@ (8013560 <awe_modSTHeadphoneVirtConstructor+0x118>)
 80134a6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80134aa:	9303      	str	r3, [sp, #12]
 80134ac:	2301      	movs	r3, #1
 80134ae:	9f03      	ldr	r7, [sp, #12]
 80134b0:	6093      	str	r3, [r2, #8]
 80134b2:	f012 fb91 	bl	8025bd8 <hpv_reset>
 80134b6:	b110      	cbz	r0, 80134be <awe_modSTHeadphoneVirtConstructor+0x76>
 80134b8:	6a2b      	ldr	r3, [r5, #32]
 80134ba:	b903      	cbnz	r3, 80134be <awe_modSTHeadphoneVirtConstructor+0x76>
 80134bc:	6228      	str	r0, [r5, #32]
 80134be:	6833      	ldr	r3, [r6, #0]
 80134c0:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 80134c2:	6122      	str	r2, [r4, #16]
 80134c4:	68da      	ldr	r2, [r3, #12]
 80134c6:	6958      	ldr	r0, [r3, #20]
 80134c8:	6262      	str	r2, [r4, #36]	@ 0x24
 80134ca:	e9d6 2300 	ldrd	r2, r3, [r6]
 80134ce:	68df      	ldr	r7, [r3, #12]
 80134d0:	6959      	ldr	r1, [r3, #20]
 80134d2:	6992      	ldr	r2, [r2, #24]
 80134d4:	63a7      	str	r7, [r4, #56]	@ 0x38
 80134d6:	e9d6 7300 	ldrd	r7, r3, [r6]
 80134da:	edd7 7a04 	vldr	s15, [r7, #16]
 80134de:	699b      	ldr	r3, [r3, #24]
 80134e0:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80134e4:	f3c1 0109 	ubfx	r1, r1, #0, #10
 80134e8:	f3c2 0210 	ubfx	r2, r2, #0, #17
 80134ec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80134f0:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80134f4:	61e0      	str	r0, [r4, #28]
 80134f6:	6321      	str	r1, [r4, #48]	@ 0x30
 80134f8:	2004      	movs	r0, #4
 80134fa:	2101      	movs	r1, #1
 80134fc:	62a2      	str	r2, [r4, #40]	@ 0x28
 80134fe:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8013500:	61a2      	str	r2, [r4, #24]
 8013502:	6220      	str	r0, [r4, #32]
 8013504:	6360      	str	r0, [r4, #52]	@ 0x34
 8013506:	62e1      	str	r1, [r4, #44]	@ 0x2c
 8013508:	6421      	str	r1, [r4, #64]	@ 0x40
 801350a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801350c:	edc4 7a05 	vstr	s15, [r4, #20]
 8013510:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8013512:	f104 0010 	add.w	r0, r4, #16
 8013516:	f012 fde7 	bl	80260e8 <hpv_setParam>
 801351a:	b110      	cbz	r0, 8013522 <awe_modSTHeadphoneVirtConstructor+0xda>
 801351c:	6a2b      	ldr	r3, [r5, #32]
 801351e:	b903      	cbnz	r3, 8013522 <awe_modSTHeadphoneVirtConstructor+0xda>
 8013520:	6228      	str	r0, [r5, #32]
 8013522:	e9d5 010b 	ldrd	r0, r1, [r5, #44]	@ 0x2c
 8013526:	e9d5 230d 	ldrd	r2, r3, [r5, #52]	@ 0x34
 801352a:	e9c4 0100 	strd	r0, r1, [r4]
 801352e:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8013532:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8013534:	4620      	mov	r0, r4
 8013536:	f012 fb67 	bl	8025c08 <hpv_setConfig>
 801353a:	b110      	cbz	r0, 8013542 <awe_modSTHeadphoneVirtConstructor+0xfa>
 801353c:	6a2b      	ldr	r3, [r5, #32]
 801353e:	b903      	cbnz	r3, 8013542 <awe_modSTHeadphoneVirtConstructor+0xfa>
 8013540:	6228      	str	r0, [r5, #32]
 8013542:	4628      	mov	r0, r5
 8013544:	b005      	add	sp, #20
 8013546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013548:	2500      	movs	r5, #0
 801354a:	4628      	mov	r0, r5
 801354c:	b005      	add	sp, #20
 801354e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013550:	080350ac 	.word	0x080350ac
 8013554:	08037930 	.word	0x08037930
 8013558:	40023800 	.word	0x40023800
 801355c:	40023000 	.word	0x40023000
 8013560:	2001d9f4 	.word	0x2001d9f4

08013564 <awe_modSTHeadphoneVirtProcess>:
 8013564:	6a03      	ldr	r3, [r0, #32]
 8013566:	b103      	cbz	r3, 801356a <awe_modSTHeadphoneVirtProcess+0x6>
 8013568:	4770      	bx	lr
 801356a:	6903      	ldr	r3, [r0, #16]
 801356c:	6819      	ldr	r1, [r3, #0]
 801356e:	b510      	push	{r4, lr}
 8013570:	4604      	mov	r4, r0
 8013572:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8013574:	68c9      	ldr	r1, [r1, #12]
 8013576:	6241      	str	r1, [r0, #36]	@ 0x24
 8013578:	685b      	ldr	r3, [r3, #4]
 801357a:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 801357c:	68db      	ldr	r3, [r3, #12]
 801357e:	6383      	str	r3, [r0, #56]	@ 0x38
 8013580:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 8013584:	301c      	adds	r0, #28
 8013586:	f012 fdeb 	bl	8026160 <hpv_process>
 801358a:	b100      	cbz	r0, 801358e <awe_modSTHeadphoneVirtProcess+0x2a>
 801358c:	6220      	str	r0, [r4, #32]
 801358e:	bd10      	pop	{r4, pc}

08013590 <awe_modSTHeadphoneVirtSet>:
 8013590:	b570      	push	{r4, r5, r6, lr}
 8013592:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8013594:	4605      	mov	r5, r0
 8013596:	460e      	mov	r6, r1
 8013598:	4620      	mov	r0, r4
 801359a:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801359c:	f012 fd90 	bl	80260c0 <hpv_getConfig>
 80135a0:	b108      	cbz	r0, 80135a6 <awe_modSTHeadphoneVirtSet+0x16>
 80135a2:	6a2b      	ldr	r3, [r5, #32]
 80135a4:	b1cb      	cbz	r3, 80135da <awe_modSTHeadphoneVirtSet+0x4a>
 80135a6:	0530      	lsls	r0, r6, #20
 80135a8:	bf44      	itt	mi
 80135aa:	6aeb      	ldrmi	r3, [r5, #44]	@ 0x2c
 80135ac:	6023      	strmi	r3, [r4, #0]
 80135ae:	04f1      	lsls	r1, r6, #19
 80135b0:	bf44      	itt	mi
 80135b2:	6b2b      	ldrmi	r3, [r5, #48]	@ 0x30
 80135b4:	6063      	strmi	r3, [r4, #4]
 80135b6:	04b2      	lsls	r2, r6, #18
 80135b8:	bf44      	itt	mi
 80135ba:	6b6b      	ldrmi	r3, [r5, #52]	@ 0x34
 80135bc:	60a3      	strmi	r3, [r4, #8]
 80135be:	0473      	lsls	r3, r6, #17
 80135c0:	bf44      	itt	mi
 80135c2:	6bab      	ldrmi	r3, [r5, #56]	@ 0x38
 80135c4:	60e3      	strmi	r3, [r4, #12]
 80135c6:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80135c8:	4620      	mov	r0, r4
 80135ca:	f012 fb1d 	bl	8025c08 <hpv_setConfig>
 80135ce:	b110      	cbz	r0, 80135d6 <awe_modSTHeadphoneVirtSet+0x46>
 80135d0:	6a2b      	ldr	r3, [r5, #32]
 80135d2:	b903      	cbnz	r3, 80135d6 <awe_modSTHeadphoneVirtSet+0x46>
 80135d4:	6228      	str	r0, [r5, #32]
 80135d6:	2000      	movs	r0, #0
 80135d8:	bd70      	pop	{r4, r5, r6, pc}
 80135da:	6228      	str	r0, [r5, #32]
 80135dc:	e7e3      	b.n	80135a6 <awe_modSTHeadphoneVirtSet+0x16>
 80135de:	bf00      	nop

080135e0 <awe_modSTOmni2Constructor>:
 80135e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135e2:	b085      	sub	sp, #20
 80135e4:	4606      	mov	r6, r0
 80135e6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80135e8:	e9cd 3000 	strd	r3, r0, [sp]
 80135ec:	4613      	mov	r3, r2
 80135ee:	4841      	ldr	r0, [pc, #260]	@ (80136f4 <awe_modSTOmni2Constructor+0x114>)
 80135f0:	460a      	mov	r2, r1
 80135f2:	4631      	mov	r1, r6
 80135f4:	f00c fda6 	bl	8020144 <BaseClassModule_Constructor>
 80135f8:	2800      	cmp	r0, #0
 80135fa:	d076      	beq.n	80136ea <awe_modSTOmni2Constructor+0x10a>
 80135fc:	4605      	mov	r5, r0
 80135fe:	4632      	mov	r2, r6
 8013600:	f240 2131 	movw	r1, #561	@ 0x231
 8013604:	2044      	movs	r0, #68	@ 0x44
 8013606:	f00c f849 	bl	801f69c <awe_fwMalloc>
 801360a:	4604      	mov	r4, r0
 801360c:	63a8      	str	r0, [r5, #56]	@ 0x38
 801360e:	2800      	cmp	r0, #0
 8013610:	d06b      	beq.n	80136ea <awe_modSTOmni2Constructor+0x10a>
 8013612:	4b39      	ldr	r3, [pc, #228]	@ (80136f8 <awe_modSTOmni2Constructor+0x118>)
 8013614:	4632      	mov	r2, r6
 8013616:	6818      	ldr	r0, [r3, #0]
 8013618:	f240 2131 	movw	r1, #561	@ 0x231
 801361c:	f00c f83e 	bl	801f69c <awe_fwMalloc>
 8013620:	6420      	str	r0, [r4, #64]	@ 0x40
 8013622:	2800      	cmp	r0, #0
 8013624:	d061      	beq.n	80136ea <awe_modSTOmni2Constructor+0x10a>
 8013626:	2100      	movs	r1, #0
 8013628:	4b34      	ldr	r3, [pc, #208]	@ (80136fc <awe_modSTOmni2Constructor+0x11c>)
 801362a:	9103      	str	r1, [sp, #12]
 801362c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801362e:	692e      	ldr	r6, [r5, #16]
 8013630:	6229      	str	r1, [r5, #32]
 8013632:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8013636:	631a      	str	r2, [r3, #48]	@ 0x30
 8013638:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801363a:	4a31      	ldr	r2, [pc, #196]	@ (8013700 <awe_modSTOmni2Constructor+0x120>)
 801363c:	4931      	ldr	r1, [pc, #196]	@ (8013704 <awe_modSTOmni2Constructor+0x124>)
 801363e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8013642:	9303      	str	r3, [sp, #12]
 8013644:	2301      	movs	r3, #1
 8013646:	9f03      	ldr	r7, [sp, #12]
 8013648:	6093      	str	r3, [r2, #8]
 801364a:	f001 fda1 	bl	8015190 <omni2_sw_reset>
 801364e:	b110      	cbz	r0, 8013656 <awe_modSTOmni2Constructor+0x76>
 8013650:	6a2b      	ldr	r3, [r5, #32]
 8013652:	b903      	cbnz	r3, 8013656 <awe_modSTOmni2Constructor+0x76>
 8013654:	6228      	str	r0, [r5, #32]
 8013656:	6833      	ldr	r3, [r6, #0]
 8013658:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 801365a:	60e2      	str	r2, [r4, #12]
 801365c:	68da      	ldr	r2, [r3, #12]
 801365e:	695b      	ldr	r3, [r3, #20]
 8013660:	6222      	str	r2, [r4, #32]
 8013662:	e9d6 1200 	ldrd	r1, r2, [r6]
 8013666:	6988      	ldr	r0, [r1, #24]
 8013668:	68d1      	ldr	r1, [r2, #12]
 801366a:	6952      	ldr	r2, [r2, #20]
 801366c:	6361      	str	r1, [r4, #52]	@ 0x34
 801366e:	e9d6 7100 	ldrd	r7, r1, [r6]
 8013672:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8013676:	edd7 7a04 	vldr	s15, [r7, #16]
 801367a:	6989      	ldr	r1, [r1, #24]
 801367c:	61a3      	str	r3, [r4, #24]
 801367e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8013682:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8013686:	bf18      	it	ne
 8013688:	2301      	movne	r3, #1
 801368a:	62a3      	str	r3, [r4, #40]	@ 0x28
 801368c:	f112 33ff 	adds.w	r3, r2, #4294967295
 8013690:	bf18      	it	ne
 8013692:	2301      	movne	r3, #1
 8013694:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8013698:	f3c0 0010 	ubfx	r0, r0, #0, #17
 801369c:	f3c1 0110 	ubfx	r1, r1, #0, #17
 80136a0:	62e2      	str	r2, [r4, #44]	@ 0x2c
 80136a2:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 80136a4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80136a6:	2304      	movs	r3, #4
 80136a8:	6260      	str	r0, [r4, #36]	@ 0x24
 80136aa:	63a1      	str	r1, [r4, #56]	@ 0x38
 80136ac:	edc4 7a05 	vstr	s15, [r4, #20]
 80136b0:	6122      	str	r2, [r4, #16]
 80136b2:	61e3      	str	r3, [r4, #28]
 80136b4:	6323      	str	r3, [r4, #48]	@ 0x30
 80136b6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 80136b8:	f104 000c 	add.w	r0, r4, #12
 80136bc:	f001 fe1a 	bl	80152f4 <omni2_sw_setParam>
 80136c0:	b110      	cbz	r0, 80136c8 <awe_modSTOmni2Constructor+0xe8>
 80136c2:	6a2b      	ldr	r3, [r5, #32]
 80136c4:	b903      	cbnz	r3, 80136c8 <awe_modSTOmni2Constructor+0xe8>
 80136c6:	6228      	str	r0, [r5, #32]
 80136c8:	e9d5 120b 	ldrd	r1, r2, [r5, #44]	@ 0x2c
 80136cc:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80136ce:	60a3      	str	r3, [r4, #8]
 80136d0:	e9c4 1200 	strd	r1, r2, [r4]
 80136d4:	4620      	mov	r0, r4
 80136d6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 80136d8:	f001 fdae 	bl	8015238 <omni2_sw_setConfig>
 80136dc:	b110      	cbz	r0, 80136e4 <awe_modSTOmni2Constructor+0x104>
 80136de:	6a2b      	ldr	r3, [r5, #32]
 80136e0:	b903      	cbnz	r3, 80136e4 <awe_modSTOmni2Constructor+0x104>
 80136e2:	6228      	str	r0, [r5, #32]
 80136e4:	4628      	mov	r0, r5
 80136e6:	b005      	add	sp, #20
 80136e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80136ea:	2500      	movs	r5, #0
 80136ec:	4628      	mov	r0, r5
 80136ee:	b005      	add	sp, #20
 80136f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80136f2:	bf00      	nop
 80136f4:	080350d4 	.word	0x080350d4
 80136f8:	08035510 	.word	0x08035510
 80136fc:	40023800 	.word	0x40023800
 8013700:	40023000 	.word	0x40023000
 8013704:	2001d9f4 	.word	0x2001d9f4

08013708 <awe_modSTOmni2Process>:
 8013708:	6a03      	ldr	r3, [r0, #32]
 801370a:	b103      	cbz	r3, 801370e <awe_modSTOmni2Process+0x6>
 801370c:	4770      	bx	lr
 801370e:	6903      	ldr	r3, [r0, #16]
 8013710:	6819      	ldr	r1, [r3, #0]
 8013712:	b510      	push	{r4, lr}
 8013714:	4604      	mov	r4, r0
 8013716:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8013718:	68c9      	ldr	r1, [r1, #12]
 801371a:	6201      	str	r1, [r0, #32]
 801371c:	685b      	ldr	r3, [r3, #4]
 801371e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8013720:	68db      	ldr	r3, [r3, #12]
 8013722:	6343      	str	r3, [r0, #52]	@ 0x34
 8013724:	f100 012c 	add.w	r1, r0, #44	@ 0x2c
 8013728:	3018      	adds	r0, #24
 801372a:	f001 fe21 	bl	8015370 <omni2_sw_process>
 801372e:	b100      	cbz	r0, 8013732 <awe_modSTOmni2Process+0x2a>
 8013730:	6220      	str	r0, [r4, #32]
 8013732:	bd10      	pop	{r4, pc}

08013734 <awe_modSTOmni2Set>:
 8013734:	b570      	push	{r4, r5, r6, lr}
 8013736:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8013738:	4605      	mov	r5, r0
 801373a:	460e      	mov	r6, r1
 801373c:	4620      	mov	r0, r4
 801373e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013740:	f001 fdc6 	bl	80152d0 <omni2_sw_getConfig>
 8013744:	b108      	cbz	r0, 801374a <awe_modSTOmni2Set+0x16>
 8013746:	6a2b      	ldr	r3, [r5, #32]
 8013748:	b1ab      	cbz	r3, 8013776 <awe_modSTOmni2Set+0x42>
 801374a:	0531      	lsls	r1, r6, #20
 801374c:	bf44      	itt	mi
 801374e:	6aeb      	ldrmi	r3, [r5, #44]	@ 0x2c
 8013750:	6023      	strmi	r3, [r4, #0]
 8013752:	04f2      	lsls	r2, r6, #19
 8013754:	bf44      	itt	mi
 8013756:	6b2b      	ldrmi	r3, [r5, #48]	@ 0x30
 8013758:	6063      	strmi	r3, [r4, #4]
 801375a:	04b3      	lsls	r3, r6, #18
 801375c:	bf44      	itt	mi
 801375e:	6b6b      	ldrmi	r3, [r5, #52]	@ 0x34
 8013760:	60a3      	strmi	r3, [r4, #8]
 8013762:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013764:	4620      	mov	r0, r4
 8013766:	f001 fd67 	bl	8015238 <omni2_sw_setConfig>
 801376a:	b110      	cbz	r0, 8013772 <awe_modSTOmni2Set+0x3e>
 801376c:	6a2b      	ldr	r3, [r5, #32]
 801376e:	b903      	cbnz	r3, 8013772 <awe_modSTOmni2Set+0x3e>
 8013770:	6228      	str	r0, [r5, #32]
 8013772:	2000      	movs	r0, #0
 8013774:	bd70      	pop	{r4, r5, r6, pc}
 8013776:	6228      	str	r0, [r5, #32]
 8013778:	e7e7      	b.n	801374a <awe_modSTOmni2Set+0x16>
 801377a:	bf00      	nop

0801377c <awe_modSTOmniSurroundConstructor>:
 801377c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801377e:	b085      	sub	sp, #20
 8013780:	4606      	mov	r6, r0
 8013782:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8013784:	e9cd 3000 	strd	r3, r0, [sp]
 8013788:	4613      	mov	r3, r2
 801378a:	4841      	ldr	r0, [pc, #260]	@ (8013890 <awe_modSTOmniSurroundConstructor+0x114>)
 801378c:	460a      	mov	r2, r1
 801378e:	4631      	mov	r1, r6
 8013790:	f00c fcd8 	bl	8020144 <BaseClassModule_Constructor>
 8013794:	2800      	cmp	r0, #0
 8013796:	d076      	beq.n	8013886 <awe_modSTOmniSurroundConstructor+0x10a>
 8013798:	4605      	mov	r5, r0
 801379a:	4632      	mov	r2, r6
 801379c:	f240 2131 	movw	r1, #561	@ 0x231
 80137a0:	2044      	movs	r0, #68	@ 0x44
 80137a2:	f00b ff7b 	bl	801f69c <awe_fwMalloc>
 80137a6:	4604      	mov	r4, r0
 80137a8:	63a8      	str	r0, [r5, #56]	@ 0x38
 80137aa:	2800      	cmp	r0, #0
 80137ac:	d06b      	beq.n	8013886 <awe_modSTOmniSurroundConstructor+0x10a>
 80137ae:	4b39      	ldr	r3, [pc, #228]	@ (8013894 <awe_modSTOmniSurroundConstructor+0x118>)
 80137b0:	4632      	mov	r2, r6
 80137b2:	6818      	ldr	r0, [r3, #0]
 80137b4:	f240 2131 	movw	r1, #561	@ 0x231
 80137b8:	f00b ff70 	bl	801f69c <awe_fwMalloc>
 80137bc:	6420      	str	r0, [r4, #64]	@ 0x40
 80137be:	2800      	cmp	r0, #0
 80137c0:	d061      	beq.n	8013886 <awe_modSTOmniSurroundConstructor+0x10a>
 80137c2:	2100      	movs	r1, #0
 80137c4:	4b34      	ldr	r3, [pc, #208]	@ (8013898 <awe_modSTOmniSurroundConstructor+0x11c>)
 80137c6:	9103      	str	r1, [sp, #12]
 80137c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80137ca:	692e      	ldr	r6, [r5, #16]
 80137cc:	6229      	str	r1, [r5, #32]
 80137ce:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80137d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80137d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80137d6:	4a31      	ldr	r2, [pc, #196]	@ (801389c <awe_modSTOmniSurroundConstructor+0x120>)
 80137d8:	4931      	ldr	r1, [pc, #196]	@ (80138a0 <awe_modSTOmniSurroundConstructor+0x124>)
 80137da:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80137de:	9303      	str	r3, [sp, #12]
 80137e0:	2301      	movs	r3, #1
 80137e2:	9f03      	ldr	r7, [sp, #12]
 80137e4:	6093      	str	r3, [r2, #8]
 80137e6:	f001 fe39 	bl	801545c <omni2_reset>
 80137ea:	b110      	cbz	r0, 80137f2 <awe_modSTOmniSurroundConstructor+0x76>
 80137ec:	6a2b      	ldr	r3, [r5, #32]
 80137ee:	b903      	cbnz	r3, 80137f2 <awe_modSTOmniSurroundConstructor+0x76>
 80137f0:	6228      	str	r0, [r5, #32]
 80137f2:	6833      	ldr	r3, [r6, #0]
 80137f4:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80137f6:	60e2      	str	r2, [r4, #12]
 80137f8:	68da      	ldr	r2, [r3, #12]
 80137fa:	695b      	ldr	r3, [r3, #20]
 80137fc:	6222      	str	r2, [r4, #32]
 80137fe:	e9d6 1200 	ldrd	r1, r2, [r6]
 8013802:	6988      	ldr	r0, [r1, #24]
 8013804:	68d1      	ldr	r1, [r2, #12]
 8013806:	6952      	ldr	r2, [r2, #20]
 8013808:	6361      	str	r1, [r4, #52]	@ 0x34
 801380a:	e9d6 7100 	ldrd	r7, r1, [r6]
 801380e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8013812:	edd7 7a04 	vldr	s15, [r7, #16]
 8013816:	6989      	ldr	r1, [r1, #24]
 8013818:	61a3      	str	r3, [r4, #24]
 801381a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801381e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8013822:	bf18      	it	ne
 8013824:	2301      	movne	r3, #1
 8013826:	62a3      	str	r3, [r4, #40]	@ 0x28
 8013828:	f112 33ff 	adds.w	r3, r2, #4294967295
 801382c:	bf18      	it	ne
 801382e:	2301      	movne	r3, #1
 8013830:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8013834:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8013838:	f3c1 0110 	ubfx	r1, r1, #0, #17
 801383c:	62e2      	str	r2, [r4, #44]	@ 0x2c
 801383e:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 8013840:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8013842:	2304      	movs	r3, #4
 8013844:	6260      	str	r0, [r4, #36]	@ 0x24
 8013846:	63a1      	str	r1, [r4, #56]	@ 0x38
 8013848:	edc4 7a05 	vstr	s15, [r4, #20]
 801384c:	6122      	str	r2, [r4, #16]
 801384e:	61e3      	str	r3, [r4, #28]
 8013850:	6323      	str	r3, [r4, #48]	@ 0x30
 8013852:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013854:	f104 000c 	add.w	r0, r4, #12
 8013858:	f001 feb2 	bl	80155c0 <omni2_setParam>
 801385c:	b110      	cbz	r0, 8013864 <awe_modSTOmniSurroundConstructor+0xe8>
 801385e:	6a2b      	ldr	r3, [r5, #32]
 8013860:	b903      	cbnz	r3, 8013864 <awe_modSTOmniSurroundConstructor+0xe8>
 8013862:	6228      	str	r0, [r5, #32]
 8013864:	e9d5 120b 	ldrd	r1, r2, [r5, #44]	@ 0x2c
 8013868:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 801386a:	60a3      	str	r3, [r4, #8]
 801386c:	e9c4 1200 	strd	r1, r2, [r4]
 8013870:	4620      	mov	r0, r4
 8013872:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013874:	f001 fe46 	bl	8015504 <omni2_setConfig>
 8013878:	b110      	cbz	r0, 8013880 <awe_modSTOmniSurroundConstructor+0x104>
 801387a:	6a2b      	ldr	r3, [r5, #32]
 801387c:	b903      	cbnz	r3, 8013880 <awe_modSTOmniSurroundConstructor+0x104>
 801387e:	6228      	str	r0, [r5, #32]
 8013880:	4628      	mov	r0, r5
 8013882:	b005      	add	sp, #20
 8013884:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013886:	2500      	movs	r5, #0
 8013888:	4628      	mov	r0, r5
 801388a:	b005      	add	sp, #20
 801388c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801388e:	bf00      	nop
 8013890:	080350fc 	.word	0x080350fc
 8013894:	08035518 	.word	0x08035518
 8013898:	40023800 	.word	0x40023800
 801389c:	40023000 	.word	0x40023000
 80138a0:	2001d9f4 	.word	0x2001d9f4

080138a4 <awe_modSTOmniSurroundProcess>:
 80138a4:	6a03      	ldr	r3, [r0, #32]
 80138a6:	b103      	cbz	r3, 80138aa <awe_modSTOmniSurroundProcess+0x6>
 80138a8:	4770      	bx	lr
 80138aa:	6903      	ldr	r3, [r0, #16]
 80138ac:	6819      	ldr	r1, [r3, #0]
 80138ae:	b510      	push	{r4, lr}
 80138b0:	4604      	mov	r4, r0
 80138b2:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80138b4:	68c9      	ldr	r1, [r1, #12]
 80138b6:	6201      	str	r1, [r0, #32]
 80138b8:	685b      	ldr	r3, [r3, #4]
 80138ba:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80138bc:	68db      	ldr	r3, [r3, #12]
 80138be:	6343      	str	r3, [r0, #52]	@ 0x34
 80138c0:	f100 012c 	add.w	r1, r0, #44	@ 0x2c
 80138c4:	3018      	adds	r0, #24
 80138c6:	f001 feb9 	bl	801563c <omni2_process>
 80138ca:	b100      	cbz	r0, 80138ce <awe_modSTOmniSurroundProcess+0x2a>
 80138cc:	6220      	str	r0, [r4, #32]
 80138ce:	bd10      	pop	{r4, pc}

080138d0 <awe_modSTOmniSurroundSet>:
 80138d0:	b570      	push	{r4, r5, r6, lr}
 80138d2:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 80138d4:	4605      	mov	r5, r0
 80138d6:	460e      	mov	r6, r1
 80138d8:	4620      	mov	r0, r4
 80138da:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 80138dc:	f001 fe5e 	bl	801559c <omni2_getConfig>
 80138e0:	b108      	cbz	r0, 80138e6 <awe_modSTOmniSurroundSet+0x16>
 80138e2:	6a2b      	ldr	r3, [r5, #32]
 80138e4:	b1ab      	cbz	r3, 8013912 <awe_modSTOmniSurroundSet+0x42>
 80138e6:	0531      	lsls	r1, r6, #20
 80138e8:	bf44      	itt	mi
 80138ea:	6aeb      	ldrmi	r3, [r5, #44]	@ 0x2c
 80138ec:	6023      	strmi	r3, [r4, #0]
 80138ee:	04f2      	lsls	r2, r6, #19
 80138f0:	bf44      	itt	mi
 80138f2:	6b2b      	ldrmi	r3, [r5, #48]	@ 0x30
 80138f4:	6063      	strmi	r3, [r4, #4]
 80138f6:	04b3      	lsls	r3, r6, #18
 80138f8:	bf44      	itt	mi
 80138fa:	6b6b      	ldrmi	r3, [r5, #52]	@ 0x34
 80138fc:	60a3      	strmi	r3, [r4, #8]
 80138fe:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013900:	4620      	mov	r0, r4
 8013902:	f001 fdff 	bl	8015504 <omni2_setConfig>
 8013906:	b110      	cbz	r0, 801390e <awe_modSTOmniSurroundSet+0x3e>
 8013908:	6a2b      	ldr	r3, [r5, #32]
 801390a:	b903      	cbnz	r3, 801390e <awe_modSTOmniSurroundSet+0x3e>
 801390c:	6228      	str	r0, [r5, #32]
 801390e:	2000      	movs	r0, #0
 8013910:	bd70      	pop	{r4, r5, r6, pc}
 8013912:	6228      	str	r0, [r5, #32]
 8013914:	e7e7      	b.n	80138e6 <awe_modSTOmniSurroundSet+0x16>
 8013916:	bf00      	nop

08013918 <awe_modSTSmartVolumeProcess>:
 8013918:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801391a:	b103      	cbz	r3, 801391e <awe_modSTSmartVolumeProcess+0x6>
 801391c:	4770      	bx	lr
 801391e:	6903      	ldr	r3, [r0, #16]
 8013920:	6819      	ldr	r1, [r3, #0]
 8013922:	b510      	push	{r4, lr}
 8013924:	4604      	mov	r4, r0
 8013926:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8013928:	68c9      	ldr	r1, [r1, #12]
 801392a:	6201      	str	r1, [r0, #32]
 801392c:	685b      	ldr	r3, [r3, #4]
 801392e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8013930:	68db      	ldr	r3, [r3, #12]
 8013932:	6343      	str	r3, [r0, #52]	@ 0x34
 8013934:	f100 012c 	add.w	r1, r0, #44	@ 0x2c
 8013938:	3018      	adds	r0, #24
 801393a:	f004 fb99 	bl	8018070 <svc_process>
 801393e:	b100      	cbz	r0, 8013942 <awe_modSTSmartVolumeProcess+0x2a>
 8013940:	63a0      	str	r0, [r4, #56]	@ 0x38
 8013942:	bd10      	pop	{r4, pc}

08013944 <awe_modSTSmartVolumeConstructor>:
 8013944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013946:	ed2d 8b02 	vpush	{d8}
 801394a:	b085      	sub	sp, #20
 801394c:	4607      	mov	r7, r0
 801394e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8013950:	e9cd 3000 	strd	r3, r0, [sp]
 8013954:	4613      	mov	r3, r2
 8013956:	487d      	ldr	r0, [pc, #500]	@ (8013b4c <awe_modSTSmartVolumeConstructor+0x208>)
 8013958:	460a      	mov	r2, r1
 801395a:	4639      	mov	r1, r7
 801395c:	f00c fbf2 	bl	8020144 <BaseClassModule_Constructor>
 8013960:	2800      	cmp	r0, #0
 8013962:	f000 80c0 	beq.w	8013ae6 <awe_modSTSmartVolumeConstructor+0x1a2>
 8013966:	4605      	mov	r5, r0
 8013968:	463a      	mov	r2, r7
 801396a:	f240 2131 	movw	r1, #561	@ 0x231
 801396e:	2044      	movs	r0, #68	@ 0x44
 8013970:	f00b fe94 	bl	801f69c <awe_fwMalloc>
 8013974:	4604      	mov	r4, r0
 8013976:	6468      	str	r0, [r5, #68]	@ 0x44
 8013978:	2800      	cmp	r0, #0
 801397a:	f000 80b4 	beq.w	8013ae6 <awe_modSTSmartVolumeConstructor+0x1a2>
 801397e:	692e      	ldr	r6, [r5, #16]
 8013980:	4a73      	ldr	r2, [pc, #460]	@ (8013b50 <awe_modSTSmartVolumeConstructor+0x20c>)
 8013982:	6833      	ldr	r3, [r6, #0]
 8013984:	6810      	ldr	r0, [r2, #0]
 8013986:	ed93 8a04 	vldr	s16, [r3, #16]
 801398a:	463a      	mov	r2, r7
 801398c:	f240 2131 	movw	r1, #561	@ 0x231
 8013990:	f00b fe84 	bl	801f69c <awe_fwMalloc>
 8013994:	6420      	str	r0, [r4, #64]	@ 0x40
 8013996:	2800      	cmp	r0, #0
 8013998:	f000 80a5 	beq.w	8013ae6 <awe_modSTSmartVolumeConstructor+0x1a2>
 801399c:	2100      	movs	r1, #0
 801399e:	4b6d      	ldr	r3, [pc, #436]	@ (8013b54 <awe_modSTSmartVolumeConstructor+0x210>)
 80139a0:	9103      	str	r1, [sp, #12]
 80139a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80139a4:	63a9      	str	r1, [r5, #56]	@ 0x38
 80139a6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80139aa:	631a      	str	r2, [r3, #48]	@ 0x30
 80139ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80139ae:	4a6a      	ldr	r2, [pc, #424]	@ (8013b58 <awe_modSTSmartVolumeConstructor+0x214>)
 80139b0:	496a      	ldr	r1, [pc, #424]	@ (8013b5c <awe_modSTSmartVolumeConstructor+0x218>)
 80139b2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80139b6:	9303      	str	r3, [sp, #12]
 80139b8:	2301      	movs	r3, #1
 80139ba:	9f03      	ldr	r7, [sp, #12]
 80139bc:	6093      	str	r3, [r2, #8]
 80139be:	f004 fa5d 	bl	8017e7c <svc_reset>
 80139c2:	b110      	cbz	r0, 80139ca <awe_modSTSmartVolumeConstructor+0x86>
 80139c4:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80139c6:	b903      	cbnz	r3, 80139ca <awe_modSTSmartVolumeConstructor+0x86>
 80139c8:	63a8      	str	r0, [r5, #56]	@ 0x38
 80139ca:	6833      	ldr	r3, [r6, #0]
 80139cc:	6bef      	ldr	r7, [r5, #60]	@ 0x3c
 80139ce:	68da      	ldr	r2, [r3, #12]
 80139d0:	695b      	ldr	r3, [r3, #20]
 80139d2:	6222      	str	r2, [r4, #32]
 80139d4:	e9d6 1200 	ldrd	r1, r2, [r6]
 80139d8:	6988      	ldr	r0, [r1, #24]
 80139da:	68d1      	ldr	r1, [r2, #12]
 80139dc:	6952      	ldr	r2, [r2, #20]
 80139de:	6361      	str	r1, [r4, #52]	@ 0x34
 80139e0:	6871      	ldr	r1, [r6, #4]
 80139e2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80139e6:	6989      	ldr	r1, [r1, #24]
 80139e8:	61a3      	str	r3, [r4, #24]
 80139ea:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80139ee:	f113 33ff 	adds.w	r3, r3, #4294967295
 80139f2:	bf18      	it	ne
 80139f4:	2301      	movne	r3, #1
 80139f6:	f3c1 0110 	ubfx	r1, r1, #0, #17
 80139fa:	f112 36ff 	adds.w	r6, r2, #4294967295
 80139fe:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8013a02:	bf18      	it	ne
 8013a04:	2601      	movne	r6, #1
 8013a06:	62a3      	str	r3, [r4, #40]	@ 0x28
 8013a08:	63a1      	str	r1, [r4, #56]	@ 0x38
 8013a0a:	2304      	movs	r3, #4
 8013a0c:	6c29      	ldr	r1, [r5, #64]	@ 0x40
 8013a0e:	6260      	str	r0, [r4, #36]	@ 0x24
 8013a10:	82e1      	strh	r1, [r4, #22]
 8013a12:	82a7      	strh	r7, [r4, #20]
 8013a14:	62e2      	str	r2, [r4, #44]	@ 0x2c
 8013a16:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8013a18:	61e3      	str	r3, [r4, #28]
 8013a1a:	6323      	str	r3, [r4, #48]	@ 0x30
 8013a1c:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013a1e:	f104 0014 	add.w	r0, r4, #20
 8013a22:	f004 fb0f 	bl	8018044 <svc_setParam>
 8013a26:	b110      	cbz	r0, 8013a2e <awe_modSTSmartVolumeConstructor+0xea>
 8013a28:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 8013a2a:	b903      	cbnz	r3, 8013a2e <awe_modSTSmartVolumeConstructor+0xea>
 8013a2c:	63a8      	str	r0, [r5, #56]	@ 0x38
 8013a2e:	edd5 7a08 	vldr	s15, [r5, #32]
 8013a32:	ed95 0a0b 	vldr	s0, [r5, #44]	@ 0x2c
 8013a36:	ed9f 7a4a 	vldr	s14, [pc, #296]	@ 8013b60 <awe_modSTSmartVolumeConstructor+0x21c>
 8013a3a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013a3e:	e9d5 2309 	ldrd	r2, r3, [r5, #36]	@ 0x24
 8013a42:	ee20 0a07 	vmul.f32	s0, s0, s14
 8013a46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013a4a:	8062      	strh	r2, [r4, #2]
 8013a4c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8013a50:	ee17 2a90 	vmov	r2, s15
 8013a54:	eeff 8a00 	vmov.f32	s17, #240	@ 0xbf800000 -1.0
 8013a58:	8022      	strh	r2, [r4, #0]
 8013a5a:	ee88 0a80 	vdiv.f32	s0, s17, s0
 8013a5e:	80a3      	strh	r3, [r4, #4]
 8013a60:	f01a fecc 	bl	802e7fc <expf>
 8013a64:	eeb4 0ae8 	vcmpe.f32	s0, s17
 8013a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a6c:	d435      	bmi.n	8013ada <awe_modSTSmartVolumeConstructor+0x196>
 8013a6e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013a72:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8013a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a7a:	db50      	blt.n	8013b1e <awe_modSTSmartVolumeConstructor+0x1da>
 8013a7c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8013a80:	ed95 0a0c 	vldr	s0, [r5, #48]	@ 0x30
 8013a84:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8013b60 <awe_modSTSmartVolumeConstructor+0x21c>
 8013a88:	60a3      	str	r3, [r4, #8]
 8013a8a:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013a8e:	eeff 8a00 	vmov.f32	s17, #240	@ 0xbf800000 -1.0
 8013a92:	ee20 0a08 	vmul.f32	s0, s0, s16
 8013a96:	ee88 0a80 	vdiv.f32	s0, s17, s0
 8013a9a:	f01a feaf 	bl	802e7fc <expf>
 8013a9e:	eeb4 0ae8 	vcmpe.f32	s0, s17
 8013aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013aa6:	d41b      	bmi.n	8013ae0 <awe_modSTSmartVolumeConstructor+0x19c>
 8013aa8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013aac:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8013ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ab4:	db1d      	blt.n	8013af2 <awe_modSTSmartVolumeConstructor+0x1ae>
 8013ab6:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8013aba:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8013abc:	8222      	strh	r2, [r4, #16]
 8013abe:	60e3      	str	r3, [r4, #12]
 8013ac0:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013ac2:	4620      	mov	r0, r4
 8013ac4:	f004 fa1a 	bl	8017efc <svc_setConfig>
 8013ac8:	b110      	cbz	r0, 8013ad0 <awe_modSTSmartVolumeConstructor+0x18c>
 8013aca:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 8013acc:	b903      	cbnz	r3, 8013ad0 <awe_modSTSmartVolumeConstructor+0x18c>
 8013ace:	63a8      	str	r0, [r5, #56]	@ 0x38
 8013ad0:	4628      	mov	r0, r5
 8013ad2:	b005      	add	sp, #20
 8013ad4:	ecbd 8b02 	vpop	{d8}
 8013ad8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ada:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8013ade:	e7cf      	b.n	8013a80 <awe_modSTSmartVolumeConstructor+0x13c>
 8013ae0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8013ae4:	e7e9      	b.n	8013aba <awe_modSTSmartVolumeConstructor+0x176>
 8013ae6:	2500      	movs	r5, #0
 8013ae8:	4628      	mov	r0, r5
 8013aea:	b005      	add	sp, #20
 8013aec:	ecbd 8b02 	vpop	{d8}
 8013af0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013af2:	eddf 7a1c 	vldr	s15, [pc, #112]	@ 8013b64 <awe_modSTSmartVolumeConstructor+0x220>
 8013af6:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013afa:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8013afe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8013b02:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b0a:	bfd8      	it	le
 8013b0c:	eef0 7a47 	vmovle.f32	s15, s14
 8013b10:	ee30 0a27 	vadd.f32	s0, s0, s15
 8013b14:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8013b18:	ee17 3a90 	vmov	r3, s15
 8013b1c:	e7cd      	b.n	8013aba <awe_modSTSmartVolumeConstructor+0x176>
 8013b1e:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8013b64 <awe_modSTSmartVolumeConstructor+0x220>
 8013b22:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013b26:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8013b2a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8013b2e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b36:	bfd8      	it	le
 8013b38:	eef0 7a47 	vmovle.f32	s15, s14
 8013b3c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8013b40:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8013b44:	ee17 3a90 	vmov	r3, s15
 8013b48:	e79a      	b.n	8013a80 <awe_modSTSmartVolumeConstructor+0x13c>
 8013b4a:	bf00      	nop
 8013b4c:	08035124 	.word	0x08035124
 8013b50:	08035e7c 	.word	0x08035e7c
 8013b54:	40023800 	.word	0x40023800
 8013b58:	40023000 	.word	0x40023000
 8013b5c:	2001d9f4 	.word	0x2001d9f4
 8013b60:	3a83126f 	.word	0x3a83126f
 8013b64:	4f000000 	.word	0x4f000000

08013b68 <awe_modSTSmartVolumeSet>:
 8013b68:	b570      	push	{r4, r5, r6, lr}
 8013b6a:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8013b6c:	ed2d 8b02 	vpush	{d8}
 8013b70:	4606      	mov	r6, r0
 8013b72:	460d      	mov	r5, r1
 8013b74:	4620      	mov	r0, r4
 8013b76:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013b78:	f004 fa50 	bl	801801c <svc_getConfig>
 8013b7c:	b108      	cbz	r0, 8013b82 <awe_modSTSmartVolumeSet+0x1a>
 8013b7e:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8013b80:	b333      	cbz	r3, 8013bd0 <awe_modSTSmartVolumeSet+0x68>
 8013b82:	05ea      	lsls	r2, r5, #23
 8013b84:	d508      	bpl.n	8013b98 <awe_modSTSmartVolumeSet+0x30>
 8013b86:	edd6 7a08 	vldr	s15, [r6, #32]
 8013b8a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013b8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013b92:	ee17 3a90 	vmov	r3, s15
 8013b96:	8023      	strh	r3, [r4, #0]
 8013b98:	05ab      	lsls	r3, r5, #22
 8013b9a:	bf44      	itt	mi
 8013b9c:	6a73      	ldrmi	r3, [r6, #36]	@ 0x24
 8013b9e:	8063      	strhmi	r3, [r4, #2]
 8013ba0:	0568      	lsls	r0, r5, #21
 8013ba2:	bf44      	itt	mi
 8013ba4:	6ab3      	ldrmi	r3, [r6, #40]	@ 0x28
 8013ba6:	80a3      	strhmi	r3, [r4, #4]
 8013ba8:	0529      	lsls	r1, r5, #20
 8013baa:	d435      	bmi.n	8013c18 <awe_modSTSmartVolumeSet+0xb0>
 8013bac:	04ea      	lsls	r2, r5, #19
 8013bae:	d411      	bmi.n	8013bd4 <awe_modSTSmartVolumeSet+0x6c>
 8013bb0:	04ab      	lsls	r3, r5, #18
 8013bb2:	bf44      	itt	mi
 8013bb4:	6b73      	ldrmi	r3, [r6, #52]	@ 0x34
 8013bb6:	8223      	strhmi	r3, [r4, #16]
 8013bb8:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013bba:	4620      	mov	r0, r4
 8013bbc:	f004 f99e 	bl	8017efc <svc_setConfig>
 8013bc0:	b110      	cbz	r0, 8013bc8 <awe_modSTSmartVolumeSet+0x60>
 8013bc2:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8013bc4:	b903      	cbnz	r3, 8013bc8 <awe_modSTSmartVolumeSet+0x60>
 8013bc6:	63b0      	str	r0, [r6, #56]	@ 0x38
 8013bc8:	ecbd 8b02 	vpop	{d8}
 8013bcc:	2000      	movs	r0, #0
 8013bce:	bd70      	pop	{r4, r5, r6, pc}
 8013bd0:	63b0      	str	r0, [r6, #56]	@ 0x38
 8013bd2:	e7d6      	b.n	8013b82 <awe_modSTSmartVolumeSet+0x1a>
 8013bd4:	6933      	ldr	r3, [r6, #16]
 8013bd6:	ed96 0a0c 	vldr	s0, [r6, #48]	@ 0x30
 8013bda:	681b      	ldr	r3, [r3, #0]
 8013bdc:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8013cc0 <awe_modSTSmartVolumeSet+0x158>
 8013be0:	edd3 7a04 	vldr	s15, [r3, #16]
 8013be4:	ee20 0a07 	vmul.f32	s0, s0, s14
 8013be8:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8013bec:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013bf0:	ee88 0a00 	vdiv.f32	s0, s16, s0
 8013bf4:	f01a fe02 	bl	802e7fc <expf>
 8013bf8:	eeb4 0ac8 	vcmpe.f32	s0, s16
 8013bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c00:	d45b      	bmi.n	8013cba <awe_modSTSmartVolumeSet+0x152>
 8013c02:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013c06:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8013c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c0e:	db25      	blt.n	8013c5c <awe_modSTSmartVolumeSet+0xf4>
 8013c10:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8013c14:	60e3      	str	r3, [r4, #12]
 8013c16:	e7cb      	b.n	8013bb0 <awe_modSTSmartVolumeSet+0x48>
 8013c18:	6933      	ldr	r3, [r6, #16]
 8013c1a:	ed96 0a0b 	vldr	s0, [r6, #44]	@ 0x2c
 8013c1e:	681b      	ldr	r3, [r3, #0]
 8013c20:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 8013cc0 <awe_modSTSmartVolumeSet+0x158>
 8013c24:	edd3 7a04 	vldr	s15, [r3, #16]
 8013c28:	ee20 0a07 	vmul.f32	s0, s0, s14
 8013c2c:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8013c30:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013c34:	ee88 0a00 	vdiv.f32	s0, s16, s0
 8013c38:	f01a fde0 	bl	802e7fc <expf>
 8013c3c:	eeb4 0ac8 	vcmpe.f32	s0, s16
 8013c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c44:	d436      	bmi.n	8013cb4 <awe_modSTSmartVolumeSet+0x14c>
 8013c46:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013c4a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8013c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c52:	db19      	blt.n	8013c88 <awe_modSTSmartVolumeSet+0x120>
 8013c54:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8013c58:	60a3      	str	r3, [r4, #8]
 8013c5a:	e7a7      	b.n	8013bac <awe_modSTSmartVolumeSet+0x44>
 8013c5c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8013cc4 <awe_modSTSmartVolumeSet+0x15c>
 8013c60:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013c64:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8013c68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8013c6c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c74:	bfd8      	it	le
 8013c76:	eef0 7a47 	vmovle.f32	s15, s14
 8013c7a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8013c7e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8013c82:	ee17 3a90 	vmov	r3, s15
 8013c86:	e7c5      	b.n	8013c14 <awe_modSTSmartVolumeSet+0xac>
 8013c88:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8013cc4 <awe_modSTSmartVolumeSet+0x15c>
 8013c8c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013c90:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 8013c94:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8013c98:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ca0:	bfd8      	it	le
 8013ca2:	eef0 7a47 	vmovle.f32	s15, s14
 8013ca6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8013caa:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8013cae:	ee17 3a90 	vmov	r3, s15
 8013cb2:	e7d1      	b.n	8013c58 <awe_modSTSmartVolumeSet+0xf0>
 8013cb4:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8013cb8:	e7ce      	b.n	8013c58 <awe_modSTSmartVolumeSet+0xf0>
 8013cba:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8013cbe:	e7a9      	b.n	8013c14 <awe_modSTSmartVolumeSet+0xac>
 8013cc0:	3a83126f 	.word	0x3a83126f
 8013cc4:	4f000000 	.word	0x4f000000

08013cc8 <awe_modSTSMRConstructor>:
 8013cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013cca:	b085      	sub	sp, #20
 8013ccc:	4616      	mov	r6, r2
 8013cce:	4607      	mov	r7, r0
 8013cd0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8013cd2:	9300      	str	r3, [sp, #0]
 8013cd4:	460a      	mov	r2, r1
 8013cd6:	9001      	str	r0, [sp, #4]
 8013cd8:	4633      	mov	r3, r6
 8013cda:	4639      	mov	r1, r7
 8013cdc:	483e      	ldr	r0, [pc, #248]	@ (8013dd8 <awe_modSTSMRConstructor+0x110>)
 8013cde:	f00c fa31 	bl	8020144 <BaseClassModule_Constructor>
 8013ce2:	2800      	cmp	r0, #0
 8013ce4:	d074      	beq.n	8013dd0 <awe_modSTSMRConstructor+0x108>
 8013ce6:	4605      	mov	r5, r0
 8013ce8:	463a      	mov	r2, r7
 8013cea:	f240 2131 	movw	r1, #561	@ 0x231
 8013cee:	2040      	movs	r0, #64	@ 0x40
 8013cf0:	f00b fcd4 	bl	801f69c <awe_fwMalloc>
 8013cf4:	4604      	mov	r4, r0
 8013cf6:	63a8      	str	r0, [r5, #56]	@ 0x38
 8013cf8:	2800      	cmp	r0, #0
 8013cfa:	d069      	beq.n	8013dd0 <awe_modSTSMRConstructor+0x108>
 8013cfc:	4b37      	ldr	r3, [pc, #220]	@ (8013ddc <awe_modSTSMRConstructor+0x114>)
 8013cfe:	463a      	mov	r2, r7
 8013d00:	6818      	ldr	r0, [r3, #0]
 8013d02:	f240 2131 	movw	r1, #561	@ 0x231
 8013d06:	f00b fcc9 	bl	801f69c <awe_fwMalloc>
 8013d0a:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8013d0c:	2800      	cmp	r0, #0
 8013d0e:	d05f      	beq.n	8013dd0 <awe_modSTSMRConstructor+0x108>
 8013d10:	2100      	movs	r1, #0
 8013d12:	4b33      	ldr	r3, [pc, #204]	@ (8013de0 <awe_modSTSMRConstructor+0x118>)
 8013d14:	9103      	str	r1, [sp, #12]
 8013d16:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013d18:	6369      	str	r1, [r5, #52]	@ 0x34
 8013d1a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8013d1e:	631a      	str	r2, [r3, #48]	@ 0x30
 8013d20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013d22:	4a30      	ldr	r2, [pc, #192]	@ (8013de4 <awe_modSTSMRConstructor+0x11c>)
 8013d24:	4930      	ldr	r1, [pc, #192]	@ (8013de8 <awe_modSTSMRConstructor+0x120>)
 8013d26:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8013d2a:	9303      	str	r3, [sp, #12]
 8013d2c:	2301      	movs	r3, #1
 8013d2e:	9f03      	ldr	r7, [sp, #12]
 8013d30:	6093      	str	r3, [r2, #8]
 8013d32:	f003 f893 	bl	8016e5c <smr_reset>
 8013d36:	b110      	cbz	r0, 8013d3e <awe_modSTSMRConstructor+0x76>
 8013d38:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8013d3a:	b903      	cbnz	r3, 8013d3e <awe_modSTSMRConstructor+0x76>
 8013d3c:	6368      	str	r0, [r5, #52]	@ 0x34
 8013d3e:	68b3      	ldr	r3, [r6, #8]
 8013d40:	6832      	ldr	r2, [r6, #0]
 8013d42:	68db      	ldr	r3, [r3, #12]
 8013d44:	6952      	ldr	r2, [r2, #20]
 8013d46:	61e3      	str	r3, [r4, #28]
 8013d48:	68b1      	ldr	r1, [r6, #8]
 8013d4a:	6833      	ldr	r3, [r6, #0]
 8013d4c:	68c9      	ldr	r1, [r1, #12]
 8013d4e:	e9d3 3705 	ldrd	r3, r7, [r3, #20]
 8013d52:	6321      	str	r1, [r4, #48]	@ 0x30
 8013d54:	6830      	ldr	r0, [r6, #0]
 8013d56:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8013d58:	edd0 7a04 	vldr	s15, [r0, #16]
 8013d5c:	6980      	ldr	r0, [r0, #24]
 8013d5e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8013d62:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8013d66:	6162      	str	r2, [r4, #20]
 8013d68:	f112 32ff 	adds.w	r2, r2, #4294967295
 8013d6c:	bf18      	it	ne
 8013d6e:	2201      	movne	r2, #1
 8013d70:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8013d74:	62a3      	str	r3, [r4, #40]	@ 0x28
 8013d76:	f113 33ff 	adds.w	r3, r3, #4294967295
 8013d7a:	f3c0 0010 	ubfx	r0, r0, #0, #17
 8013d7e:	bf18      	it	ne
 8013d80:	2301      	movne	r3, #1
 8013d82:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8013d86:	6262      	str	r2, [r4, #36]	@ 0x24
 8013d88:	2204      	movs	r2, #4
 8013d8a:	e9c4 030d 	strd	r0, r3, [r4, #52]	@ 0x34
 8013d8e:	6227      	str	r7, [r4, #32]
 8013d90:	edc4 7a04 	vstr	s15, [r4, #16]
 8013d94:	61a2      	str	r2, [r4, #24]
 8013d96:	62e2      	str	r2, [r4, #44]	@ 0x2c
 8013d98:	f104 0010 	add.w	r0, r4, #16
 8013d9c:	f003 f938 	bl	8017010 <smr_setParam>
 8013da0:	b110      	cbz	r0, 8013da8 <awe_modSTSMRConstructor+0xe0>
 8013da2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8013da4:	b903      	cbnz	r3, 8013da8 <awe_modSTSMRConstructor+0xe0>
 8013da6:	6368      	str	r0, [r5, #52]	@ 0x34
 8013da8:	e9d5 3108 	ldrd	r3, r1, [r5, #32]
 8013dac:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8013dae:	6023      	str	r3, [r4, #0]
 8013db0:	2300      	movs	r3, #0
 8013db2:	80a1      	strh	r1, [r4, #4]
 8013db4:	80e2      	strh	r2, [r4, #6]
 8013db6:	e9c4 3302 	strd	r3, r3, [r4, #8]
 8013dba:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8013dbc:	4620      	mov	r0, r4
 8013dbe:	f003 f865 	bl	8016e8c <smr_setConfig>
 8013dc2:	b110      	cbz	r0, 8013dca <awe_modSTSMRConstructor+0x102>
 8013dc4:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8013dc6:	b903      	cbnz	r3, 8013dca <awe_modSTSMRConstructor+0x102>
 8013dc8:	6368      	str	r0, [r5, #52]	@ 0x34
 8013dca:	4628      	mov	r0, r5
 8013dcc:	b005      	add	sp, #20
 8013dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013dd0:	2500      	movs	r5, #0
 8013dd2:	4628      	mov	r0, r5
 8013dd4:	b005      	add	sp, #20
 8013dd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013dd8:	0803514c 	.word	0x0803514c
 8013ddc:	0803571c 	.word	0x0803571c
 8013de0:	40023800 	.word	0x40023800
 8013de4:	40023000 	.word	0x40023000
 8013de8:	2001d9f4 	.word	0x2001d9f4

08013dec <awe_modSTSMRProcess>:
 8013dec:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8013dee:	b103      	cbz	r3, 8013df2 <awe_modSTSMRProcess+0x6>
 8013df0:	4770      	bx	lr
 8013df2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013df6:	6905      	ldr	r5, [r0, #16]
 8013df8:	6b86      	ldr	r6, [r0, #56]	@ 0x38
 8013dfa:	68a9      	ldr	r1, [r5, #8]
 8013dfc:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013e00:	68cf      	ldr	r7, [r1, #12]
 8013e02:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8013e06:	4604      	mov	r4, r0
 8013e08:	68d0      	ldr	r0, [r2, #12]
 8013e0a:	6337      	str	r7, [r6, #48]	@ 0x30
 8013e0c:	61f7      	str	r7, [r6, #28]
 8013e0e:	682a      	ldr	r2, [r5, #0]
 8013e10:	e9d2 2305 	ldrd	r2, r3, [r2, #20]
 8013e14:	b082      	sub	sp, #8
 8013e16:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8013e1a:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8013e1e:	fb02 f203 	mul.w	r2, r2, r3
 8013e22:	2301      	movs	r3, #1
 8013e24:	9200      	str	r2, [sp, #0]
 8013e26:	4619      	mov	r1, r3
 8013e28:	463a      	mov	r2, r7
 8013e2a:	f007 f91b 	bl	801b064 <awe_vecCopy32>
 8013e2e:	6bf2      	ldr	r2, [r6, #60]	@ 0x3c
 8013e30:	f106 0128 	add.w	r1, r6, #40	@ 0x28
 8013e34:	f106 0014 	add.w	r0, r6, #20
 8013e38:	f003 f916 	bl	8017068 <smr_process>
 8013e3c:	b100      	cbz	r0, 8013e40 <awe_modSTSMRProcess+0x54>
 8013e3e:	6360      	str	r0, [r4, #52]	@ 0x34
 8013e40:	682a      	ldr	r2, [r5, #0]
 8013e42:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 8013e46:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8013e4a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8013e4e:	fb01 f103 	mul.w	r1, r1, r3
 8013e52:	2301      	movs	r3, #1
 8013e54:	9100      	str	r1, [sp, #0]
 8013e56:	4642      	mov	r2, r8
 8013e58:	4638      	mov	r0, r7
 8013e5a:	4619      	mov	r1, r3
 8013e5c:	f007 f902 	bl	801b064 <awe_vecCopy32>
 8013e60:	b002      	add	sp, #8
 8013e62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e66:	bf00      	nop

08013e68 <awe_modSTSMRSet>:
 8013e68:	b570      	push	{r4, r5, r6, lr}
 8013e6a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8013e6c:	4605      	mov	r5, r0
 8013e6e:	460e      	mov	r6, r1
 8013e70:	4620      	mov	r0, r4
 8013e72:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8013e74:	f003 f8b8 	bl	8016fe8 <smr_getConfig>
 8013e78:	b108      	cbz	r0, 8013e7e <awe_modSTSMRSet+0x16>
 8013e7a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8013e7c:	b1ab      	cbz	r3, 8013eaa <awe_modSTSMRSet+0x42>
 8013e7e:	05f1      	lsls	r1, r6, #23
 8013e80:	bf44      	itt	mi
 8013e82:	6a2b      	ldrmi	r3, [r5, #32]
 8013e84:	6023      	strmi	r3, [r4, #0]
 8013e86:	05b2      	lsls	r2, r6, #22
 8013e88:	bf44      	itt	mi
 8013e8a:	6a6b      	ldrmi	r3, [r5, #36]	@ 0x24
 8013e8c:	80a3      	strhmi	r3, [r4, #4]
 8013e8e:	0573      	lsls	r3, r6, #21
 8013e90:	bf44      	itt	mi
 8013e92:	6aab      	ldrmi	r3, [r5, #40]	@ 0x28
 8013e94:	80e3      	strhmi	r3, [r4, #6]
 8013e96:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8013e98:	4620      	mov	r0, r4
 8013e9a:	f002 fff7 	bl	8016e8c <smr_setConfig>
 8013e9e:	b110      	cbz	r0, 8013ea6 <awe_modSTSMRSet+0x3e>
 8013ea0:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8013ea2:	b903      	cbnz	r3, 8013ea6 <awe_modSTSMRSet+0x3e>
 8013ea4:	6368      	str	r0, [r5, #52]	@ 0x34
 8013ea6:	2000      	movs	r0, #0
 8013ea8:	bd70      	pop	{r4, r5, r6, pc}
 8013eaa:	6368      	str	r0, [r5, #52]	@ 0x34
 8013eac:	e7e7      	b.n	8013e7e <awe_modSTSMRSet+0x16>
 8013eae:	bf00      	nop

08013eb0 <awe_modSTSMRGet>:
 8013eb0:	b538      	push	{r3, r4, r5, lr}
 8013eb2:	e9d0 350d 	ldrd	r3, r5, [r0, #52]	@ 0x34
 8013eb6:	4604      	mov	r4, r0
 8013eb8:	b1d3      	cbz	r3, 8013ef0 <awe_modSTSMRGet+0x40>
 8013eba:	edd5 7a02 	vldr	s15, [r5, #8]
 8013ebe:	696b      	ldr	r3, [r5, #20]
 8013ec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013ec4:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 8013ec8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8013ecc:	2b02      	cmp	r3, #2
 8013ece:	edc4 7a0b 	vstr	s15, [r4, #44]	@ 0x2c
 8013ed2:	bf0a      	itet	eq
 8013ed4:	edd5 7a03 	vldreq	s15, [r5, #12]
 8013ed8:	eddf 7a09 	vldrne	s15, [pc, #36]	@ 8013f00 <awe_modSTSMRGet+0x50>
 8013edc:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 8013ee0:	f04f 0000 	mov.w	r0, #0
 8013ee4:	bf08      	it	eq
 8013ee6:	ee67 7a87 	vmuleq.f32	s15, s15, s14
 8013eea:	edc4 7a0c 	vstr	s15, [r4, #48]	@ 0x30
 8013eee:	bd38      	pop	{r3, r4, r5, pc}
 8013ef0:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 8013ef2:	4628      	mov	r0, r5
 8013ef4:	f003 f878 	bl	8016fe8 <smr_getConfig>
 8013ef8:	2800      	cmp	r0, #0
 8013efa:	d0de      	beq.n	8013eba <awe_modSTSMRGet+0xa>
 8013efc:	6360      	str	r0, [r4, #52]	@ 0x34
 8013efe:	e7dc      	b.n	8013eba <awe_modSTSMRGet+0xa>
 8013f00:	c2b40000 	.word	0xc2b40000

08013f04 <awe_modSTSoundDetectConstructor>:
 8013f04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f06:	b085      	sub	sp, #20
 8013f08:	4606      	mov	r6, r0
 8013f0a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8013f0c:	e9cd 3000 	strd	r3, r0, [sp]
 8013f10:	4613      	mov	r3, r2
 8013f12:	483f      	ldr	r0, [pc, #252]	@ (8014010 <awe_modSTSoundDetectConstructor+0x10c>)
 8013f14:	460a      	mov	r2, r1
 8013f16:	4631      	mov	r1, r6
 8013f18:	f00c f914 	bl	8020144 <BaseClassModule_Constructor>
 8013f1c:	2800      	cmp	r0, #0
 8013f1e:	d072      	beq.n	8014006 <awe_modSTSoundDetectConstructor+0x102>
 8013f20:	4605      	mov	r5, r0
 8013f22:	4632      	mov	r2, r6
 8013f24:	f240 2131 	movw	r1, #561	@ 0x231
 8013f28:	2060      	movs	r0, #96	@ 0x60
 8013f2a:	f00b fbb7 	bl	801f69c <awe_fwMalloc>
 8013f2e:	4604      	mov	r4, r0
 8013f30:	6528      	str	r0, [r5, #80]	@ 0x50
 8013f32:	2800      	cmp	r0, #0
 8013f34:	d067      	beq.n	8014006 <awe_modSTSoundDetectConstructor+0x102>
 8013f36:	4b37      	ldr	r3, [pc, #220]	@ (8014014 <awe_modSTSoundDetectConstructor+0x110>)
 8013f38:	4632      	mov	r2, r6
 8013f3a:	6818      	ldr	r0, [r3, #0]
 8013f3c:	f240 2131 	movw	r1, #561	@ 0x231
 8013f40:	f00b fbac 	bl	801f69c <awe_fwMalloc>
 8013f44:	65e0      	str	r0, [r4, #92]	@ 0x5c
 8013f46:	2800      	cmp	r0, #0
 8013f48:	d05d      	beq.n	8014006 <awe_modSTSoundDetectConstructor+0x102>
 8013f4a:	2100      	movs	r1, #0
 8013f4c:	4b32      	ldr	r3, [pc, #200]	@ (8014018 <awe_modSTSoundDetectConstructor+0x114>)
 8013f4e:	9103      	str	r1, [sp, #12]
 8013f50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013f52:	692e      	ldr	r6, [r5, #16]
 8013f54:	6229      	str	r1, [r5, #32]
 8013f56:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8013f5a:	631a      	str	r2, [r3, #48]	@ 0x30
 8013f5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013f5e:	4a2f      	ldr	r2, [pc, #188]	@ (801401c <awe_modSTSoundDetectConstructor+0x118>)
 8013f60:	492f      	ldr	r1, [pc, #188]	@ (8014020 <awe_modSTSoundDetectConstructor+0x11c>)
 8013f62:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8013f66:	9303      	str	r3, [sp, #12]
 8013f68:	2301      	movs	r3, #1
 8013f6a:	9f03      	ldr	r7, [sp, #12]
 8013f6c:	6093      	str	r3, [r2, #8]
 8013f6e:	f002 fd8f 	bl	8016a90 <sdr_reset>
 8013f72:	b110      	cbz	r0, 8013f7a <awe_modSTSoundDetectConstructor+0x76>
 8013f74:	6a2b      	ldr	r3, [r5, #32]
 8013f76:	b903      	cbnz	r3, 8013f7a <awe_modSTSoundDetectConstructor+0x76>
 8013f78:	6228      	str	r0, [r5, #32]
 8013f7a:	68b3      	ldr	r3, [r6, #8]
 8013f7c:	6832      	ldr	r2, [r6, #0]
 8013f7e:	68db      	ldr	r3, [r3, #12]
 8013f80:	6950      	ldr	r0, [r2, #20]
 8013f82:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8013f84:	68b2      	ldr	r2, [r6, #8]
 8013f86:	6833      	ldr	r3, [r6, #0]
 8013f88:	68d7      	ldr	r7, [r2, #12]
 8013f8a:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 8013f8e:	6527      	str	r7, [r4, #80]	@ 0x50
 8013f90:	6833      	ldr	r3, [r6, #0]
 8013f92:	6a6e      	ldr	r6, [r5, #36]	@ 0x24
 8013f94:	edd3 7a04 	vldr	s15, [r3, #16]
 8013f98:	699b      	ldr	r3, [r3, #24]
 8013f9a:	6326      	str	r6, [r4, #48]	@ 0x30
 8013f9c:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8013fa0:	f3c1 0110 	ubfx	r1, r1, #0, #17
 8013fa4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8013fa8:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8013fac:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8013fb0:	6360      	str	r0, [r4, #52]	@ 0x34
 8013fb2:	6421      	str	r1, [r4, #64]	@ 0x40
 8013fb4:	2003      	movs	r0, #3
 8013fb6:	2100      	movs	r1, #0
 8013fb8:	63a0      	str	r0, [r4, #56]	@ 0x38
 8013fba:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8013fbc:	6461      	str	r1, [r4, #68]	@ 0x44
 8013fbe:	65a1      	str	r1, [r4, #88]	@ 0x58
 8013fc0:	64a2      	str	r2, [r4, #72]	@ 0x48
 8013fc2:	6563      	str	r3, [r4, #84]	@ 0x54
 8013fc4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8013fc6:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 8013fca:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8013fcc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
 8013fd0:	f002 fe18 	bl	8016c04 <sdr_setParam>
 8013fd4:	b110      	cbz	r0, 8013fdc <awe_modSTSoundDetectConstructor+0xd8>
 8013fd6:	6a2b      	ldr	r3, [r5, #32]
 8013fd8:	b903      	cbnz	r3, 8013fdc <awe_modSTSoundDetectConstructor+0xd8>
 8013fda:	6228      	str	r0, [r5, #32]
 8013fdc:	e9d5 300a 	ldrd	r3, r0, [r5, #40]	@ 0x28
 8013fe0:	e9d5 120c 	ldrd	r1, r2, [r5, #48]	@ 0x30
 8013fe4:	6023      	str	r3, [r4, #0]
 8013fe6:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 8013fe8:	e9c4 0101 	strd	r0, r1, [r4, #4]
 8013fec:	e9c4 2303 	strd	r2, r3, [r4, #12]
 8013ff0:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8013ff2:	4620      	mov	r0, r4
 8013ff4:	f002 fd98 	bl	8016b28 <sdr_setConfig>
 8013ff8:	b110      	cbz	r0, 8014000 <awe_modSTSoundDetectConstructor+0xfc>
 8013ffa:	6a2b      	ldr	r3, [r5, #32]
 8013ffc:	b903      	cbnz	r3, 8014000 <awe_modSTSoundDetectConstructor+0xfc>
 8013ffe:	6228      	str	r0, [r5, #32]
 8014000:	4628      	mov	r0, r5
 8014002:	b005      	add	sp, #20
 8014004:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014006:	2500      	movs	r5, #0
 8014008:	4628      	mov	r0, r5
 801400a:	b005      	add	sp, #20
 801400c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801400e:	bf00      	nop
 8014010:	08035174 	.word	0x08035174
 8014014:	0803551c 	.word	0x0803551c
 8014018:	40023800 	.word	0x40023800
 801401c:	40023000 	.word	0x40023000
 8014020:	2001d9f4 	.word	0x2001d9f4

08014024 <awe_modSTSoundDetectProcess>:
 8014024:	6a03      	ldr	r3, [r0, #32]
 8014026:	b103      	cbz	r3, 801402a <awe_modSTSoundDetectProcess+0x6>
 8014028:	4770      	bx	lr
 801402a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801402e:	6905      	ldr	r5, [r0, #16]
 8014030:	6d06      	ldr	r6, [r0, #80]	@ 0x50
 8014032:	68a9      	ldr	r1, [r5, #8]
 8014034:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014038:	68cf      	ldr	r7, [r1, #12]
 801403a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801403e:	4604      	mov	r4, r0
 8014040:	68d0      	ldr	r0, [r2, #12]
 8014042:	6537      	str	r7, [r6, #80]	@ 0x50
 8014044:	63f7      	str	r7, [r6, #60]	@ 0x3c
 8014046:	682a      	ldr	r2, [r5, #0]
 8014048:	e9d2 2305 	ldrd	r2, r3, [r2, #20]
 801404c:	b082      	sub	sp, #8
 801404e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014052:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8014056:	fb02 f203 	mul.w	r2, r2, r3
 801405a:	2301      	movs	r3, #1
 801405c:	9200      	str	r2, [sp, #0]
 801405e:	4619      	mov	r1, r3
 8014060:	463a      	mov	r2, r7
 8014062:	f006 ffff 	bl	801b064 <awe_vecCopy32>
 8014066:	6df2      	ldr	r2, [r6, #92]	@ 0x5c
 8014068:	f106 0148 	add.w	r1, r6, #72	@ 0x48
 801406c:	f106 0034 	add.w	r0, r6, #52	@ 0x34
 8014070:	f002 fe36 	bl	8016ce0 <sdr_process>
 8014074:	b100      	cbz	r0, 8014078 <awe_modSTSoundDetectProcess+0x54>
 8014076:	6220      	str	r0, [r4, #32]
 8014078:	682a      	ldr	r2, [r5, #0]
 801407a:	e9d2 1305 	ldrd	r1, r3, [r2, #20]
 801407e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014082:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8014086:	fb01 f103 	mul.w	r1, r1, r3
 801408a:	2301      	movs	r3, #1
 801408c:	9100      	str	r1, [sp, #0]
 801408e:	4642      	mov	r2, r8
 8014090:	4638      	mov	r0, r7
 8014092:	4619      	mov	r1, r3
 8014094:	f006 ffe6 	bl	801b064 <awe_vecCopy32>
 8014098:	b002      	add	sp, #8
 801409a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801409e:	bf00      	nop

080140a0 <awe_modSTSoundDetectSet>:
 80140a0:	b570      	push	{r4, r5, r6, lr}
 80140a2:	6d04      	ldr	r4, [r0, #80]	@ 0x50
 80140a4:	4605      	mov	r5, r0
 80140a6:	460e      	mov	r6, r1
 80140a8:	4620      	mov	r0, r4
 80140aa:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 80140ac:	f002 fd92 	bl	8016bd4 <sdr_getConfig>
 80140b0:	b110      	cbz	r0, 80140b8 <awe_modSTSoundDetectSet+0x18>
 80140b2:	6a2b      	ldr	r3, [r5, #32]
 80140b4:	2b00      	cmp	r3, #0
 80140b6:	d02a      	beq.n	801410e <awe_modSTSoundDetectSet+0x6e>
 80140b8:	0572      	lsls	r2, r6, #21
 80140ba:	bf44      	itt	mi
 80140bc:	6aab      	ldrmi	r3, [r5, #40]	@ 0x28
 80140be:	6023      	strmi	r3, [r4, #0]
 80140c0:	0533      	lsls	r3, r6, #20
 80140c2:	d519      	bpl.n	80140f8 <awe_modSTSoundDetectSet+0x58>
 80140c4:	e9d5 230b 	ldrd	r2, r3, [r5, #44]	@ 0x2c
 80140c8:	429a      	cmp	r2, r3
 80140ca:	dd22      	ble.n	8014112 <awe_modSTSoundDetectSet+0x72>
 80140cc:	04f0      	lsls	r0, r6, #19
 80140ce:	6062      	str	r2, [r4, #4]
 80140d0:	d500      	bpl.n	80140d4 <awe_modSTSoundDetectSet+0x34>
 80140d2:	60a3      	str	r3, [r4, #8]
 80140d4:	04b2      	lsls	r2, r6, #18
 80140d6:	bf44      	itt	mi
 80140d8:	6b6b      	ldrmi	r3, [r5, #52]	@ 0x34
 80140da:	60e3      	strmi	r3, [r4, #12]
 80140dc:	0473      	lsls	r3, r6, #17
 80140de:	bf44      	itt	mi
 80140e0:	6bab      	ldrmi	r3, [r5, #56]	@ 0x38
 80140e2:	6123      	strmi	r3, [r4, #16]
 80140e4:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 80140e6:	4620      	mov	r0, r4
 80140e8:	f002 fd1e 	bl	8016b28 <sdr_setConfig>
 80140ec:	b118      	cbz	r0, 80140f6 <awe_modSTSoundDetectSet+0x56>
 80140ee:	6a2b      	ldr	r3, [r5, #32]
 80140f0:	b9a3      	cbnz	r3, 801411c <awe_modSTSoundDetectSet+0x7c>
 80140f2:	6228      	str	r0, [r5, #32]
 80140f4:	4618      	mov	r0, r3
 80140f6:	bd70      	pop	{r4, r5, r6, pc}
 80140f8:	04f1      	lsls	r1, r6, #19
 80140fa:	d5eb      	bpl.n	80140d4 <awe_modSTSoundDetectSet+0x34>
 80140fc:	e9d5 230b 	ldrd	r2, r3, [r5, #44]	@ 0x2c
 8014100:	429a      	cmp	r2, r3
 8014102:	dce6      	bgt.n	80140d2 <awe_modSTSoundDetectSet+0x32>
 8014104:	68a3      	ldr	r3, [r4, #8]
 8014106:	632b      	str	r3, [r5, #48]	@ 0x30
 8014108:	f06f 0010 	mvn.w	r0, #16
 801410c:	bd70      	pop	{r4, r5, r6, pc}
 801410e:	6228      	str	r0, [r5, #32]
 8014110:	e7d2      	b.n	80140b8 <awe_modSTSoundDetectSet+0x18>
 8014112:	6863      	ldr	r3, [r4, #4]
 8014114:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8014116:	f06f 0010 	mvn.w	r0, #16
 801411a:	bd70      	pop	{r4, r5, r6, pc}
 801411c:	2000      	movs	r0, #0
 801411e:	bd70      	pop	{r4, r5, r6, pc}

08014120 <awe_modSTSoundDetectGet>:
 8014120:	b538      	push	{r3, r4, r5, lr}
 8014122:	4604      	mov	r4, r0
 8014124:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8014126:	e9d0 3505 	ldrd	r3, r5, [r0, #20]
 801412a:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801412e:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8014130:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014132:	e9c4 5110 	strd	r5, r1, [r4, #64]	@ 0x40
 8014136:	e9c4 2312 	strd	r2, r3, [r4, #72]	@ 0x48
 801413a:	6dc1      	ldr	r1, [r0, #92]	@ 0x5c
 801413c:	f002 fd4a 	bl	8016bd4 <sdr_getConfig>
 8014140:	b100      	cbz	r0, 8014144 <awe_modSTSoundDetectGet+0x24>
 8014142:	6220      	str	r0, [r4, #32]
 8014144:	2000      	movs	r0, #0
 8014146:	bd38      	pop	{r3, r4, r5, pc}

08014148 <awe_modSubtractProcess>:
 8014148:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801414c:	6904      	ldr	r4, [r0, #16]
 801414e:	7e02      	ldrb	r2, [r0, #24]
 8014150:	6821      	ldr	r1, [r4, #0]
 8014152:	f102 4580 	add.w	r5, r2, #1073741824	@ 0x40000000
 8014156:	e9d1 7305 	ldrd	r7, r3, [r1, #20]
 801415a:	3d01      	subs	r5, #1
 801415c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014160:	f854 1025 	ldr.w	r1, [r4, r5, lsl #2]
 8014164:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8014168:	00ad      	lsls	r5, r5, #2
 801416a:	2a01      	cmp	r2, #1
 801416c:	b085      	sub	sp, #20
 801416e:	fb07 f703 	mul.w	r7, r7, r3
 8014172:	f8d1 800c 	ldr.w	r8, [r1, #12]
 8014176:	eb04 0605 	add.w	r6, r4, r5
 801417a:	d013      	beq.n	80141a4 <awe_modSubtractProcess+0x5c>
 801417c:	1f35      	subs	r5, r6, #4
 801417e:	3c04      	subs	r4, #4
 8014180:	f04f 0901 	mov.w	r9, #1
 8014184:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8014188:	68d8      	ldr	r0, [r3, #12]
 801418a:	e9cd 9701 	strd	r9, r7, [sp, #4]
 801418e:	f856 2f04 	ldr.w	r2, [r6, #4]!
 8014192:	2301      	movs	r3, #1
 8014194:	68d2      	ldr	r2, [r2, #12]
 8014196:	9200      	str	r2, [sp, #0]
 8014198:	4619      	mov	r1, r3
 801419a:	4642      	mov	r2, r8
 801419c:	f00a fd62 	bl	801ec64 <awe_vecSubtract2x1>
 80141a0:	42a5      	cmp	r5, r4
 80141a2:	d1ef      	bne.n	8014184 <awe_modSubtractProcess+0x3c>
 80141a4:	b005      	add	sp, #20
 80141a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80141aa:	bf00      	nop

080141ac <awe_modSubtractInt32Process>:
 80141ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80141b0:	6904      	ldr	r4, [r0, #16]
 80141b2:	7e02      	ldrb	r2, [r0, #24]
 80141b4:	6821      	ldr	r1, [r4, #0]
 80141b6:	f102 4580 	add.w	r5, r2, #1073741824	@ 0x40000000
 80141ba:	e9d1 7305 	ldrd	r7, r3, [r1, #20]
 80141be:	3d01      	subs	r5, #1
 80141c0:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80141c4:	f854 1025 	ldr.w	r1, [r4, r5, lsl #2]
 80141c8:	f3c7 0709 	ubfx	r7, r7, #0, #10
 80141cc:	00ad      	lsls	r5, r5, #2
 80141ce:	2a01      	cmp	r2, #1
 80141d0:	fb07 f703 	mul.w	r7, r7, r3
 80141d4:	f8d1 800c 	ldr.w	r8, [r1, #12]
 80141d8:	eb04 0605 	add.w	r6, r4, r5
 80141dc:	d00d      	beq.n	80141fa <awe_modSubtractInt32Process+0x4e>
 80141de:	1f35      	subs	r5, r6, #4
 80141e0:	3c04      	subs	r4, #4
 80141e2:	f854 3f04 	ldr.w	r3, [r4, #4]!
 80141e6:	f856 2f04 	ldr.w	r2, [r6, #4]!
 80141ea:	68d8      	ldr	r0, [r3, #12]
 80141ec:	68d2      	ldr	r2, [r2, #12]
 80141ee:	463b      	mov	r3, r7
 80141f0:	4641      	mov	r1, r8
 80141f2:	f00a feef 	bl	801efd4 <awe_vecSubtract2x1Int32>
 80141f6:	42a5      	cmp	r5, r4
 80141f8:	d1f3      	bne.n	80141e2 <awe_modSubtractInt32Process+0x36>
 80141fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80141fe:	bf00      	nop

08014200 <awe_modSumDiffProcess>:
 8014200:	6903      	ldr	r3, [r0, #16]
 8014202:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014204:	681a      	ldr	r2, [r3, #0]
 8014206:	68df      	ldr	r7, [r3, #12]
 8014208:	68d0      	ldr	r0, [r2, #12]
 801420a:	e9d2 4505 	ldrd	r4, r5, [r2, #20]
 801420e:	e9d3 1601 	ldrd	r1, r6, [r3, #4]
 8014212:	b083      	sub	sp, #12
 8014214:	f3c5 0510 	ubfx	r5, r5, #0, #17
 8014218:	f3c4 0409 	ubfx	r4, r4, #0, #10
 801421c:	fb04 f405 	mul.w	r4, r4, r5
 8014220:	68fb      	ldr	r3, [r7, #12]
 8014222:	68f2      	ldr	r2, [r6, #12]
 8014224:	68c9      	ldr	r1, [r1, #12]
 8014226:	9400      	str	r4, [sp, #0]
 8014228:	f009 ffd8 	bl	801e1dc <awe_vecScaleSumDiff>
 801422c:	b003      	add	sp, #12
 801422e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014230 <awe_modSumDiffInt32Process>:
 8014230:	6903      	ldr	r3, [r0, #16]
 8014232:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014234:	681a      	ldr	r2, [r3, #0]
 8014236:	68df      	ldr	r7, [r3, #12]
 8014238:	68d0      	ldr	r0, [r2, #12]
 801423a:	e9d2 4505 	ldrd	r4, r5, [r2, #20]
 801423e:	e9d3 1601 	ldrd	r1, r6, [r3, #4]
 8014242:	b083      	sub	sp, #12
 8014244:	f3c5 0510 	ubfx	r5, r5, #0, #17
 8014248:	f3c4 0409 	ubfx	r4, r4, #0, #10
 801424c:	fb04 f405 	mul.w	r4, r4, r5
 8014250:	68fb      	ldr	r3, [r7, #12]
 8014252:	68f2      	ldr	r2, [r6, #12]
 8014254:	68c9      	ldr	r1, [r1, #12]
 8014256:	9400      	str	r4, [sp, #0]
 8014258:	f00a f862 	bl	801e320 <awe_vecScaleSumDiffInt32>
 801425c:	b003      	add	sp, #12
 801425e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014260 <awe_modTableInterpConstructor>:
 8014260:	b530      	push	{r4, r5, lr}
 8014262:	b083      	sub	sp, #12
 8014264:	4605      	mov	r5, r0
 8014266:	9806      	ldr	r0, [sp, #24]
 8014268:	e9cd 3000 	strd	r3, r0, [sp]
 801426c:	4613      	mov	r3, r2
 801426e:	4810      	ldr	r0, [pc, #64]	@ (80142b0 <awe_modTableInterpConstructor+0x50>)
 8014270:	460a      	mov	r2, r1
 8014272:	4629      	mov	r1, r5
 8014274:	f00b ff66 	bl	8020144 <BaseClassModule_Constructor>
 8014278:	b1b0      	cbz	r0, 80142a8 <awe_modTableInterpConstructor+0x48>
 801427a:	4604      	mov	r4, r0
 801427c:	6a00      	ldr	r0, [r0, #32]
 801427e:	462a      	mov	r2, r5
 8014280:	00c0      	lsls	r0, r0, #3
 8014282:	f240 2131 	movw	r1, #561	@ 0x231
 8014286:	f00b fa09 	bl	801f69c <awe_fwMalloc>
 801428a:	62e0      	str	r0, [r4, #44]	@ 0x2c
 801428c:	b160      	cbz	r0, 80142a8 <awe_modTableInterpConstructor+0x48>
 801428e:	6a20      	ldr	r0, [r4, #32]
 8014290:	3801      	subs	r0, #1
 8014292:	462a      	mov	r2, r5
 8014294:	0100      	lsls	r0, r0, #4
 8014296:	f240 2131 	movw	r1, #561	@ 0x231
 801429a:	f00b f9ff 	bl	801f69c <awe_fwMalloc>
 801429e:	6320      	str	r0, [r4, #48]	@ 0x30
 80142a0:	b110      	cbz	r0, 80142a8 <awe_modTableInterpConstructor+0x48>
 80142a2:	4620      	mov	r0, r4
 80142a4:	b003      	add	sp, #12
 80142a6:	bd30      	pop	{r4, r5, pc}
 80142a8:	2400      	movs	r4, #0
 80142aa:	4620      	mov	r0, r4
 80142ac:	b003      	add	sp, #12
 80142ae:	bd30      	pop	{r4, r5, pc}
 80142b0:	0803523c 	.word	0x0803523c

080142b4 <awe_modTableInterpProcess>:
 80142b4:	b530      	push	{r4, r5, lr}
 80142b6:	6905      	ldr	r5, [r0, #16]
 80142b8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80142ba:	4601      	mov	r1, r0
 80142bc:	6828      	ldr	r0, [r5, #0]
 80142be:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
 80142c2:	b083      	sub	sp, #12
 80142c4:	f3c4 0410 	ubfx	r4, r4, #0, #17
 80142c8:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80142cc:	fb02 f204 	mul.w	r2, r2, r4
 80142d0:	68c0      	ldr	r0, [r0, #12]
 80142d2:	9201      	str	r2, [sp, #4]
 80142d4:	686c      	ldr	r4, [r5, #4]
 80142d6:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80142d8:	68e4      	ldr	r4, [r4, #12]
 80142da:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
 80142dc:	9400      	str	r4, [sp, #0]
 80142de:	3a01      	subs	r2, #1
 80142e0:	f00a feaa 	bl	801f038 <awe_vecTableInterp>
 80142e4:	b003      	add	sp, #12
 80142e6:	bd30      	pop	{r4, r5, pc}

080142e8 <awe_modTableLookupConstructor>:
 80142e8:	b530      	push	{r4, r5, lr}
 80142ea:	b083      	sub	sp, #12
 80142ec:	4605      	mov	r5, r0
 80142ee:	9806      	ldr	r0, [sp, #24]
 80142f0:	e9cd 3000 	strd	r3, r0, [sp]
 80142f4:	4613      	mov	r3, r2
 80142f6:	480b      	ldr	r0, [pc, #44]	@ (8014324 <awe_modTableLookupConstructor+0x3c>)
 80142f8:	460a      	mov	r2, r1
 80142fa:	4629      	mov	r1, r5
 80142fc:	f00b ff22 	bl	8020144 <BaseClassModule_Constructor>
 8014300:	b160      	cbz	r0, 801431c <awe_modTableLookupConstructor+0x34>
 8014302:	4604      	mov	r4, r0
 8014304:	6a00      	ldr	r0, [r0, #32]
 8014306:	462a      	mov	r2, r5
 8014308:	0080      	lsls	r0, r0, #2
 801430a:	f240 2131 	movw	r1, #561	@ 0x231
 801430e:	f00b f9c5 	bl	801f69c <awe_fwMalloc>
 8014312:	6360      	str	r0, [r4, #52]	@ 0x34
 8014314:	b110      	cbz	r0, 801431c <awe_modTableLookupConstructor+0x34>
 8014316:	4620      	mov	r0, r4
 8014318:	b003      	add	sp, #12
 801431a:	bd30      	pop	{r4, r5, pc}
 801431c:	2400      	movs	r4, #0
 801431e:	4620      	mov	r0, r4
 8014320:	b003      	add	sp, #12
 8014322:	bd30      	pop	{r4, r5, pc}
 8014324:	08035264 	.word	0x08035264

08014328 <awe_modTableLookupProcess>:
 8014328:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801432c:	6902      	ldr	r2, [r0, #16]
 801432e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014330:	4607      	mov	r7, r0
 8014332:	ed2d 8b04 	vpush	{d8-d9}
 8014336:	edd0 8a0c 	vldr	s17, [r0, #48]	@ 0x30
 801433a:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
 801433e:	e9d2 1000 	ldrd	r1, r0, [r2]
 8014342:	e9d1 5205 	ldrd	r5, r2, [r1, #20]
 8014346:	f3c2 0210 	ubfx	r2, r2, #0, #17
 801434a:	f3c5 0509 	ubfx	r5, r5, #0, #10
 801434e:	68c6      	ldr	r6, [r0, #12]
 8014350:	68cc      	ldr	r4, [r1, #12]
 8014352:	fb05 f502 	mul.w	r5, r5, r2
 8014356:	b363      	cbz	r3, 80143b2 <awe_modTableLookupProcess+0x8a>
 8014358:	b33d      	cbz	r5, 80143aa <awe_modTableLookupProcess+0x82>
 801435a:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 801435e:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8014362:	f06f 4940 	mvn.w	r9, #3221225472	@ 0xc0000000
 8014366:	e006      	b.n	8014376 <awe_modTableLookupProcess+0x4e>
 8014368:	f8d8 3000 	ldr.w	r3, [r8]
 801436c:	6033      	str	r3, [r6, #0]
 801436e:	42a5      	cmp	r5, r4
 8014370:	f106 0604 	add.w	r6, r6, #4
 8014374:	d019      	beq.n	80143aa <awe_modTableLookupProcess+0x82>
 8014376:	ecf4 7a01 	vldmia	r4!, {s15}
 801437a:	ed97 8a0a 	vldr	s16, [r7, #40]	@ 0x28
 801437e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8014382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014386:	daef      	bge.n	8014368 <awe_modTableLookupProcess+0x40>
 8014388:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 801438c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014394:	d845      	bhi.n	8014422 <awe_modTableLookupProcess+0xfa>
 8014396:	6a3b      	ldr	r3, [r7, #32]
 8014398:	444b      	add	r3, r9
 801439a:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801439e:	42a5      	cmp	r5, r4
 80143a0:	681b      	ldr	r3, [r3, #0]
 80143a2:	6033      	str	r3, [r6, #0]
 80143a4:	f106 0604 	add.w	r6, r6, #4
 80143a8:	d1e5      	bne.n	8014376 <awe_modTableLookupProcess+0x4e>
 80143aa:	ecbd 8b04 	vpop	{d8-d9}
 80143ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80143b2:	2d00      	cmp	r5, #0
 80143b4:	d0f9      	beq.n	80143aa <awe_modTableLookupProcess+0x82>
 80143b6:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 80143ba:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 80143be:	f06f 4940 	mvn.w	r9, #3221225472	@ 0xc0000000
 80143c2:	e006      	b.n	80143d2 <awe_modTableLookupProcess+0xaa>
 80143c4:	f8d8 3000 	ldr.w	r3, [r8]
 80143c8:	6033      	str	r3, [r6, #0]
 80143ca:	42a5      	cmp	r5, r4
 80143cc:	f106 0604 	add.w	r6, r6, #4
 80143d0:	d0eb      	beq.n	80143aa <awe_modTableLookupProcess+0x82>
 80143d2:	ecf4 7a01 	vldmia	r4!, {s15}
 80143d6:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 80143da:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80143de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143e2:	daef      	bge.n	80143c4 <awe_modTableLookupProcess+0x9c>
 80143e4:	edd7 6a0b 	vldr	s13, [r7, #44]	@ 0x2c
 80143e8:	eef4 6ae7 	vcmpe.f32	s13, s15
 80143ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143f0:	d806      	bhi.n	8014400 <awe_modTableLookupProcess+0xd8>
 80143f2:	6a3b      	ldr	r3, [r7, #32]
 80143f4:	444b      	add	r3, r9
 80143f6:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 80143fa:	681b      	ldr	r3, [r3, #0]
 80143fc:	6033      	str	r3, [r6, #0]
 80143fe:	e7e4      	b.n	80143ca <awe_modTableLookupProcess+0xa2>
 8014400:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014404:	eeb0 0a48 	vmov.f32	s0, s16
 8014408:	eea8 0aa7 	vfma.f32	s0, s17, s15
 801440c:	f01a ff96 	bl	802f33c <floorf>
 8014410:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8014414:	ee10 3a10 	vmov	r3, s0
 8014418:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801441c:	681b      	ldr	r3, [r3, #0]
 801441e:	6033      	str	r3, [r6, #0]
 8014420:	e7d3      	b.n	80143ca <awe_modTableLookupProcess+0xa2>
 8014422:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8014426:	ee28 8aa7 	vmul.f32	s16, s17, s15
 801442a:	eeb0 0a48 	vmov.f32	s0, s16
 801442e:	f01a ff85 	bl	802f33c <floorf>
 8014432:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8014436:	ee38 8a40 	vsub.f32	s16, s16, s0
 801443a:	ee17 3a90 	vmov	r3, s15
 801443e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8014442:	edd3 7a01 	vldr	s15, [r3, #4]
 8014446:	ed93 7a00 	vldr	s14, [r3]
 801444a:	ee68 7a27 	vmul.f32	s15, s16, s15
 801444e:	ee39 8a48 	vsub.f32	s16, s18, s16
 8014452:	eee7 7a08 	vfma.f32	s15, s14, s16
 8014456:	edc6 7a00 	vstr	s15, [r6]
 801445a:	e788      	b.n	801436e <awe_modTableLookupProcess+0x46>

0801445c <awe_modTableLookupSet>:
 801445c:	f411 6f40 	tst.w	r1, #3072	@ 0xc00
 8014460:	d011      	beq.n	8014486 <awe_modTableLookupSet+0x2a>
 8014462:	edd0 7a08 	vldr	s15, [r0, #32]
 8014466:	edd0 6a0a 	vldr	s13, [r0, #40]	@ 0x28
 801446a:	ed90 7a0b 	vldr	s14, [r0, #44]	@ 0x2c
 801446e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014472:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8014476:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801447a:	ee37 7a66 	vsub.f32	s14, s14, s13
 801447e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8014482:	edc0 6a0c 	vstr	s13, [r0, #48]	@ 0x30
 8014486:	2000      	movs	r0, #0
 8014488:	4770      	bx	lr
 801448a:	bf00      	nop

0801448c <awe_modTableLookupV2Constructor>:
 801448c:	b530      	push	{r4, r5, lr}
 801448e:	b083      	sub	sp, #12
 8014490:	4605      	mov	r5, r0
 8014492:	9806      	ldr	r0, [sp, #24]
 8014494:	e9cd 3000 	strd	r3, r0, [sp]
 8014498:	4613      	mov	r3, r2
 801449a:	480b      	ldr	r0, [pc, #44]	@ (80144c8 <awe_modTableLookupV2Constructor+0x3c>)
 801449c:	460a      	mov	r2, r1
 801449e:	4629      	mov	r1, r5
 80144a0:	f00b fe50 	bl	8020144 <BaseClassModule_Constructor>
 80144a4:	b158      	cbz	r0, 80144be <awe_modTableLookupV2Constructor+0x32>
 80144a6:	4604      	mov	r4, r0
 80144a8:	6a00      	ldr	r0, [r0, #32]
 80144aa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80144ac:	462a      	mov	r2, r5
 80144ae:	0080      	lsls	r0, r0, #2
 80144b0:	f00b f8f4 	bl	801f69c <awe_fwMalloc>
 80144b4:	63a0      	str	r0, [r4, #56]	@ 0x38
 80144b6:	b110      	cbz	r0, 80144be <awe_modTableLookupV2Constructor+0x32>
 80144b8:	4620      	mov	r0, r4
 80144ba:	b003      	add	sp, #12
 80144bc:	bd30      	pop	{r4, r5, pc}
 80144be:	2400      	movs	r4, #0
 80144c0:	4620      	mov	r0, r4
 80144c2:	b003      	add	sp, #12
 80144c4:	bd30      	pop	{r4, r5, pc}
 80144c6:	bf00      	nop
 80144c8:	0803528c 	.word	0x0803528c

080144cc <awe_modTableLookupV2Process>:
 80144cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80144d0:	6902      	ldr	r2, [r0, #16]
 80144d2:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80144d4:	4607      	mov	r7, r0
 80144d6:	ed2d 8b04 	vpush	{d8-d9}
 80144da:	edd0 8a0c 	vldr	s17, [r0, #48]	@ 0x30
 80144de:	f8d7 8038 	ldr.w	r8, [r7, #56]	@ 0x38
 80144e2:	e9d2 1000 	ldrd	r1, r0, [r2]
 80144e6:	e9d1 5205 	ldrd	r5, r2, [r1, #20]
 80144ea:	f3c2 0210 	ubfx	r2, r2, #0, #17
 80144ee:	f3c5 0509 	ubfx	r5, r5, #0, #10
 80144f2:	68c6      	ldr	r6, [r0, #12]
 80144f4:	68cc      	ldr	r4, [r1, #12]
 80144f6:	fb05 f502 	mul.w	r5, r5, r2
 80144fa:	b363      	cbz	r3, 8014556 <awe_modTableLookupV2Process+0x8a>
 80144fc:	b33d      	cbz	r5, 801454e <awe_modTableLookupV2Process+0x82>
 80144fe:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8014502:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8014506:	f06f 4940 	mvn.w	r9, #3221225472	@ 0xc0000000
 801450a:	e006      	b.n	801451a <awe_modTableLookupV2Process+0x4e>
 801450c:	f8d8 3000 	ldr.w	r3, [r8]
 8014510:	6033      	str	r3, [r6, #0]
 8014512:	42a5      	cmp	r5, r4
 8014514:	f106 0604 	add.w	r6, r6, #4
 8014518:	d019      	beq.n	801454e <awe_modTableLookupV2Process+0x82>
 801451a:	ecf4 7a01 	vldmia	r4!, {s15}
 801451e:	ed97 8a0a 	vldr	s16, [r7, #40]	@ 0x28
 8014522:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8014526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801452a:	daef      	bge.n	801450c <awe_modTableLookupV2Process+0x40>
 801452c:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 8014530:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014538:	d845      	bhi.n	80145c6 <awe_modTableLookupV2Process+0xfa>
 801453a:	6a3b      	ldr	r3, [r7, #32]
 801453c:	444b      	add	r3, r9
 801453e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8014542:	42a5      	cmp	r5, r4
 8014544:	681b      	ldr	r3, [r3, #0]
 8014546:	6033      	str	r3, [r6, #0]
 8014548:	f106 0604 	add.w	r6, r6, #4
 801454c:	d1e5      	bne.n	801451a <awe_modTableLookupV2Process+0x4e>
 801454e:	ecbd 8b04 	vpop	{d8-d9}
 8014552:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014556:	2d00      	cmp	r5, #0
 8014558:	d0f9      	beq.n	801454e <awe_modTableLookupV2Process+0x82>
 801455a:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 801455e:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8014562:	f06f 4940 	mvn.w	r9, #3221225472	@ 0xc0000000
 8014566:	e006      	b.n	8014576 <awe_modTableLookupV2Process+0xaa>
 8014568:	f8d8 3000 	ldr.w	r3, [r8]
 801456c:	6033      	str	r3, [r6, #0]
 801456e:	42a5      	cmp	r5, r4
 8014570:	f106 0604 	add.w	r6, r6, #4
 8014574:	d0eb      	beq.n	801454e <awe_modTableLookupV2Process+0x82>
 8014576:	ecf4 7a01 	vldmia	r4!, {s15}
 801457a:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 801457e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014586:	daef      	bge.n	8014568 <awe_modTableLookupV2Process+0x9c>
 8014588:	edd7 6a0b 	vldr	s13, [r7, #44]	@ 0x2c
 801458c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8014590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014594:	d806      	bhi.n	80145a4 <awe_modTableLookupV2Process+0xd8>
 8014596:	6a3b      	ldr	r3, [r7, #32]
 8014598:	444b      	add	r3, r9
 801459a:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801459e:	681b      	ldr	r3, [r3, #0]
 80145a0:	6033      	str	r3, [r6, #0]
 80145a2:	e7e4      	b.n	801456e <awe_modTableLookupV2Process+0xa2>
 80145a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80145a8:	eeb0 0a48 	vmov.f32	s0, s16
 80145ac:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80145b0:	f01a fec4 	bl	802f33c <floorf>
 80145b4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80145b8:	ee10 3a10 	vmov	r3, s0
 80145bc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 80145c0:	681b      	ldr	r3, [r3, #0]
 80145c2:	6033      	str	r3, [r6, #0]
 80145c4:	e7d3      	b.n	801456e <awe_modTableLookupV2Process+0xa2>
 80145c6:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80145ca:	ee28 8aa7 	vmul.f32	s16, s17, s15
 80145ce:	eeb0 0a48 	vmov.f32	s0, s16
 80145d2:	f01a feb3 	bl	802f33c <floorf>
 80145d6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80145da:	ee38 8a40 	vsub.f32	s16, s16, s0
 80145de:	ee17 3a90 	vmov	r3, s15
 80145e2:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 80145e6:	edd3 7a01 	vldr	s15, [r3, #4]
 80145ea:	ed93 7a00 	vldr	s14, [r3]
 80145ee:	ee68 7a27 	vmul.f32	s15, s16, s15
 80145f2:	ee39 8a48 	vsub.f32	s16, s18, s16
 80145f6:	eee7 7a08 	vfma.f32	s15, s14, s16
 80145fa:	edc6 7a00 	vstr	s15, [r6]
 80145fe:	e788      	b.n	8014512 <awe_modTableLookupV2Process+0x46>

08014600 <awe_modTableLookupV2Set>:
 8014600:	f411 6f40 	tst.w	r1, #3072	@ 0xc00
 8014604:	d011      	beq.n	801462a <awe_modTableLookupV2Set+0x2a>
 8014606:	edd0 7a08 	vldr	s15, [r0, #32]
 801460a:	edd0 6a0a 	vldr	s13, [r0, #40]	@ 0x28
 801460e:	ed90 7a0b 	vldr	s14, [r0, #44]	@ 0x2c
 8014612:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014616:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801461a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801461e:	ee37 7a66 	vsub.f32	s14, s14, s13
 8014622:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8014626:	edc0 6a0c 	vstr	s13, [r0, #48]	@ 0x30
 801462a:	2000      	movs	r0, #0
 801462c:	4770      	bx	lr
 801462e:	bf00      	nop

08014630 <awe_modTanProcess>:
 8014630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014632:	6903      	ldr	r3, [r0, #16]
 8014634:	e9d3 2100 	ldrd	r2, r1, [r3]
 8014638:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 801463c:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014640:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8014644:	fb07 f703 	mul.w	r7, r7, r3
 8014648:	68ce      	ldr	r6, [r1, #12]
 801464a:	68d5      	ldr	r5, [r2, #12]
 801464c:	b14f      	cbz	r7, 8014662 <awe_modTanProcess+0x32>
 801464e:	2400      	movs	r4, #0
 8014650:	ecb5 0a01 	vldmia	r5!, {s0}
 8014654:	f01a fb5c 	bl	802ed10 <tanf>
 8014658:	3401      	adds	r4, #1
 801465a:	42a7      	cmp	r7, r4
 801465c:	eca6 0a01 	vstmia	r6!, {s0}
 8014660:	d1f6      	bne.n	8014650 <awe_modTanProcess+0x20>
 8014662:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014664 <awe_modTanhProcess>:
 8014664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014666:	6903      	ldr	r3, [r0, #16]
 8014668:	e9d3 2100 	ldrd	r2, r1, [r3]
 801466c:	e9d2 7305 	ldrd	r7, r3, [r2, #20]
 8014670:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014674:	f3c7 0709 	ubfx	r7, r7, #0, #10
 8014678:	fb07 f703 	mul.w	r7, r7, r3
 801467c:	68ce      	ldr	r6, [r1, #12]
 801467e:	68d5      	ldr	r5, [r2, #12]
 8014680:	b14f      	cbz	r7, 8014696 <awe_modTanhProcess+0x32>
 8014682:	2400      	movs	r4, #0
 8014684:	ecb5 0a01 	vldmia	r5!, {s0}
 8014688:	f01a fb6e 	bl	802ed68 <tanhf>
 801468c:	3401      	adds	r4, #1
 801468e:	42a7      	cmp	r7, r4
 8014690:	eca6 0a01 	vstmia	r6!, {s0}
 8014694:	d1f6      	bne.n	8014684 <awe_modTanhProcess+0x20>
 8014696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014698 <awe_modThreeBandToneControlConstructor>:
 8014698:	b570      	push	{r4, r5, r6, lr}
 801469a:	b082      	sub	sp, #8
 801469c:	4616      	mov	r6, r2
 801469e:	4605      	mov	r5, r0
 80146a0:	9806      	ldr	r0, [sp, #24]
 80146a2:	9300      	str	r3, [sp, #0]
 80146a4:	460a      	mov	r2, r1
 80146a6:	9001      	str	r0, [sp, #4]
 80146a8:	4633      	mov	r3, r6
 80146aa:	4629      	mov	r1, r5
 80146ac:	4822      	ldr	r0, [pc, #136]	@ (8014738 <awe_modThreeBandToneControlConstructor+0xa0>)
 80146ae:	f00b fd49 	bl	8020144 <BaseClassModule_Constructor>
 80146b2:	2800      	cmp	r0, #0
 80146b4:	d03b      	beq.n	801472e <awe_modThreeBandToneControlConstructor+0x96>
 80146b6:	4604      	mov	r4, r0
 80146b8:	462a      	mov	r2, r5
 80146ba:	f240 2131 	movw	r1, #561	@ 0x231
 80146be:	2014      	movs	r0, #20
 80146c0:	f00a ffec 	bl	801f69c <awe_fwMalloc>
 80146c4:	6520      	str	r0, [r4, #80]	@ 0x50
 80146c6:	b390      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 80146c8:	462a      	mov	r2, r5
 80146ca:	f240 2131 	movw	r1, #561	@ 0x231
 80146ce:	2014      	movs	r0, #20
 80146d0:	f00a ffe4 	bl	801f69c <awe_fwMalloc>
 80146d4:	6560      	str	r0, [r4, #84]	@ 0x54
 80146d6:	b350      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 80146d8:	6833      	ldr	r3, [r6, #0]
 80146da:	6958      	ldr	r0, [r3, #20]
 80146dc:	f3c0 0009 	ubfx	r0, r0, #0, #10
 80146e0:	00c0      	lsls	r0, r0, #3
 80146e2:	462a      	mov	r2, r5
 80146e4:	f240 2131 	movw	r1, #561	@ 0x231
 80146e8:	f00a ffd8 	bl	801f69c <awe_fwMalloc>
 80146ec:	65a0      	str	r0, [r4, #88]	@ 0x58
 80146ee:	b1f0      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 80146f0:	462a      	mov	r2, r5
 80146f2:	f240 2131 	movw	r1, #561	@ 0x231
 80146f6:	2014      	movs	r0, #20
 80146f8:	f00a ffd0 	bl	801f69c <awe_fwMalloc>
 80146fc:	65e0      	str	r0, [r4, #92]	@ 0x5c
 80146fe:	b1b0      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 8014700:	462a      	mov	r2, r5
 8014702:	f240 2131 	movw	r1, #561	@ 0x231
 8014706:	2014      	movs	r0, #20
 8014708:	f00a ffc8 	bl	801f69c <awe_fwMalloc>
 801470c:	6620      	str	r0, [r4, #96]	@ 0x60
 801470e:	b170      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 8014710:	6833      	ldr	r3, [r6, #0]
 8014712:	6958      	ldr	r0, [r3, #20]
 8014714:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8014718:	00c0      	lsls	r0, r0, #3
 801471a:	462a      	mov	r2, r5
 801471c:	f240 2131 	movw	r1, #561	@ 0x231
 8014720:	f00a ffbc 	bl	801f69c <awe_fwMalloc>
 8014724:	6660      	str	r0, [r4, #100]	@ 0x64
 8014726:	b110      	cbz	r0, 801472e <awe_modThreeBandToneControlConstructor+0x96>
 8014728:	4620      	mov	r0, r4
 801472a:	b002      	add	sp, #8
 801472c:	bd70      	pop	{r4, r5, r6, pc}
 801472e:	2400      	movs	r4, #0
 8014730:	4620      	mov	r0, r4
 8014732:	b002      	add	sp, #8
 8014734:	bd70      	pop	{r4, r5, r6, pc}
 8014736:	bf00      	nop
 8014738:	08035304 	.word	0x08035304

0801473c <awe_modThreeBandToneControlProcess>:
 801473c:	6902      	ldr	r2, [r0, #16]
 801473e:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
 8014740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014744:	e9d2 3200 	ldrd	r3, r2, [r2]
 8014748:	e9d3 5705 	ldrd	r5, r7, [r3, #20]
 801474c:	b089      	sub	sp, #36	@ 0x24
 801474e:	68d2      	ldr	r2, [r2, #12]
 8014750:	68db      	ldr	r3, [r3, #12]
 8014752:	9205      	str	r2, [sp, #20]
 8014754:	4606      	mov	r6, r0
 8014756:	9306      	str	r3, [sp, #24]
 8014758:	f3c5 0509 	ubfx	r5, r5, #0, #10
 801475c:	f3c7 0710 	ubfx	r7, r7, #0, #17
 8014760:	2900      	cmp	r1, #0
 8014762:	d06d      	beq.n	8014840 <awe_modThreeBandToneControlProcess+0x104>
 8014764:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8014766:	edd6 7a10 	vldr	s15, [r6, #64]	@ 0x40
 801476a:	6d72      	ldr	r2, [r6, #84]	@ 0x54
 801476c:	edd0 6a00 	vldr	s13, [r0]
 8014770:	ed92 4a00 	vldr	s8, [r2]
 8014774:	6e33      	ldr	r3, [r6, #96]	@ 0x60
 8014776:	6df1      	ldr	r1, [r6, #92]	@ 0x5c
 8014778:	edd2 4a01 	vldr	s9, [r2, #4]
 801477c:	ed92 5a02 	vldr	s10, [r2, #8]
 8014780:	edd2 5a03 	vldr	s11, [r2, #12]
 8014784:	ed92 6a04 	vldr	s12, [r2, #16]
 8014788:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801478c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014790:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014794:	eee7 6a04 	vfma.f32	s13, s14, s8
 8014798:	edc2 6a00 	vstr	s13, [r2]
 801479c:	edd0 6a01 	vldr	s13, [r0, #4]
 80147a0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80147a4:	eee7 6a24 	vfma.f32	s13, s14, s9
 80147a8:	edc2 6a01 	vstr	s13, [r2, #4]
 80147ac:	edd0 6a02 	vldr	s13, [r0, #8]
 80147b0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80147b4:	eee7 6a05 	vfma.f32	s13, s14, s10
 80147b8:	edc2 6a02 	vstr	s13, [r2, #8]
 80147bc:	edd0 6a03 	vldr	s13, [r0, #12]
 80147c0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80147c4:	eee7 6a25 	vfma.f32	s13, s14, s11
 80147c8:	edc2 6a03 	vstr	s13, [r2, #12]
 80147cc:	edd0 6a04 	vldr	s13, [r0, #16]
 80147d0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80147d4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80147d8:	edc2 6a04 	vstr	s13, [r2, #16]
 80147dc:	edd1 6a00 	vldr	s13, [r1]
 80147e0:	edd3 4a00 	vldr	s9, [r3]
 80147e4:	ed93 5a01 	vldr	s10, [r3, #4]
 80147e8:	edd3 5a02 	vldr	s11, [r3, #8]
 80147ec:	ed93 6a03 	vldr	s12, [r3, #12]
 80147f0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80147f4:	eee7 6a24 	vfma.f32	s13, s14, s9
 80147f8:	edc3 6a00 	vstr	s13, [r3]
 80147fc:	edd1 6a01 	vldr	s13, [r1, #4]
 8014800:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014804:	eee7 6a05 	vfma.f32	s13, s14, s10
 8014808:	edc3 6a01 	vstr	s13, [r3, #4]
 801480c:	edd1 6a02 	vldr	s13, [r1, #8]
 8014810:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014814:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014818:	edc3 6a02 	vstr	s13, [r3, #8]
 801481c:	edd1 6a03 	vldr	s13, [r1, #12]
 8014820:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8014824:	eee7 6a06 	vfma.f32	s13, s14, s12
 8014828:	edc3 6a03 	vstr	s13, [r3, #12]
 801482c:	ed91 6a04 	vldr	s12, [r1, #16]
 8014830:	edd3 6a04 	vldr	s13, [r3, #16]
 8014834:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014838:	eee6 7a87 	vfma.f32	s15, s13, s14
 801483c:	edc3 7a04 	vstr	s15, [r3, #16]
 8014840:	2d07      	cmp	r5, #7
 8014842:	f340 80d7 	ble.w	80149f4 <awe_modThreeBandToneControlProcess+0x2b8>
 8014846:	f1a5 0408 	sub.w	r4, r5, #8
 801484a:	08e4      	lsrs	r4, r4, #3
 801484c:	e9dd 9a05 	ldrd	r9, sl, [sp, #20]
 8014850:	3401      	adds	r4, #1
 8014852:	ea4f 1b84 	mov.w	fp, r4, lsl #6
 8014856:	f04f 0800 	mov.w	r8, #0
 801485a:	e9d6 2315 	ldrd	r2, r3, [r6, #84]	@ 0x54
 801485e:	4443      	add	r3, r8
 8014860:	e9cd 2300 	strd	r2, r3, [sp]
 8014864:	4650      	mov	r0, sl
 8014866:	464a      	mov	r2, r9
 8014868:	462b      	mov	r3, r5
 801486a:	4629      	mov	r1, r5
 801486c:	9702      	str	r7, [sp, #8]
 801486e:	f005 fbc7 	bl	801a000 <awe_vecBiquad_8ch>
 8014872:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	@ 0x60
 8014876:	4443      	add	r3, r8
 8014878:	9301      	str	r3, [sp, #4]
 801487a:	9200      	str	r2, [sp, #0]
 801487c:	4648      	mov	r0, r9
 801487e:	464a      	mov	r2, r9
 8014880:	9702      	str	r7, [sp, #8]
 8014882:	f108 0840 	add.w	r8, r8, #64	@ 0x40
 8014886:	462b      	mov	r3, r5
 8014888:	4629      	mov	r1, r5
 801488a:	f005 fbb9 	bl	801a000 <awe_vecBiquad_8ch>
 801488e:	45d8      	cmp	r8, fp
 8014890:	f10a 0a20 	add.w	sl, sl, #32
 8014894:	f109 0920 	add.w	r9, r9, #32
 8014898:	d1df      	bne.n	801485a <awe_modThreeBandToneControlProcess+0x11e>
 801489a:	00e4      	lsls	r4, r4, #3
 801489c:	1eeb      	subs	r3, r5, #3
 801489e:	429c      	cmp	r4, r3
 80148a0:	da35      	bge.n	801490e <awe_modThreeBandToneControlProcess+0x1d2>
 80148a2:	f1a5 0b04 	sub.w	fp, r5, #4
 80148a6:	ebab 0b04 	sub.w	fp, fp, r4
 80148aa:	1d23      	adds	r3, r4, #4
 80148ac:	f02b 0b03 	bic.w	fp, fp, #3
 80148b0:	eb03 0a0b 	add.w	sl, r3, fp
 80148b4:	9307      	str	r3, [sp, #28]
 80148b6:	9b06      	ldr	r3, [sp, #24]
 80148b8:	ea4f 0884 	mov.w	r8, r4, lsl #2
 80148bc:	eb03 0908 	add.w	r9, r3, r8
 80148c0:	9b05      	ldr	r3, [sp, #20]
 80148c2:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 80148c6:	00e4      	lsls	r4, r4, #3
 80148c8:	4498      	add	r8, r3
 80148ca:	e9d6 2315 	ldrd	r2, r3, [r6, #84]	@ 0x54
 80148ce:	4423      	add	r3, r4
 80148d0:	e9cd 2300 	strd	r2, r3, [sp]
 80148d4:	4648      	mov	r0, r9
 80148d6:	4642      	mov	r2, r8
 80148d8:	462b      	mov	r3, r5
 80148da:	4629      	mov	r1, r5
 80148dc:	9702      	str	r7, [sp, #8]
 80148de:	f005 fb71 	bl	8019fc4 <awe_vecBiquad_4ch>
 80148e2:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	@ 0x60
 80148e6:	4423      	add	r3, r4
 80148e8:	9301      	str	r3, [sp, #4]
 80148ea:	9200      	str	r2, [sp, #0]
 80148ec:	4640      	mov	r0, r8
 80148ee:	4642      	mov	r2, r8
 80148f0:	9702      	str	r7, [sp, #8]
 80148f2:	3420      	adds	r4, #32
 80148f4:	462b      	mov	r3, r5
 80148f6:	4629      	mov	r1, r5
 80148f8:	f005 fb64 	bl	8019fc4 <awe_vecBiquad_4ch>
 80148fc:	4554      	cmp	r4, sl
 80148fe:	f109 0910 	add.w	r9, r9, #16
 8014902:	f108 0810 	add.w	r8, r8, #16
 8014906:	d1e0      	bne.n	80148ca <awe_modThreeBandToneControlProcess+0x18e>
 8014908:	9b07      	ldr	r3, [sp, #28]
 801490a:	445b      	add	r3, fp
 801490c:	461c      	mov	r4, r3
 801490e:	1e6b      	subs	r3, r5, #1
 8014910:	42a3      	cmp	r3, r4
 8014912:	dd35      	ble.n	8014980 <awe_modThreeBandToneControlProcess+0x244>
 8014914:	f1a5 0b02 	sub.w	fp, r5, #2
 8014918:	ebab 0b04 	sub.w	fp, fp, r4
 801491c:	1ca3      	adds	r3, r4, #2
 801491e:	f02b 0b01 	bic.w	fp, fp, #1
 8014922:	eb03 0a0b 	add.w	sl, r3, fp
 8014926:	9307      	str	r3, [sp, #28]
 8014928:	9b06      	ldr	r3, [sp, #24]
 801492a:	ea4f 0884 	mov.w	r8, r4, lsl #2
 801492e:	eb03 0908 	add.w	r9, r3, r8
 8014932:	9b05      	ldr	r3, [sp, #20]
 8014934:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 8014938:	00e4      	lsls	r4, r4, #3
 801493a:	4498      	add	r8, r3
 801493c:	e9d6 2315 	ldrd	r2, r3, [r6, #84]	@ 0x54
 8014940:	4423      	add	r3, r4
 8014942:	e9cd 2300 	strd	r2, r3, [sp]
 8014946:	4648      	mov	r0, r9
 8014948:	4642      	mov	r2, r8
 801494a:	462b      	mov	r3, r5
 801494c:	4629      	mov	r1, r5
 801494e:	9702      	str	r7, [sp, #8]
 8014950:	f005 fb1a 	bl	8019f88 <awe_vecBiquad_2ch>
 8014954:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	@ 0x60
 8014958:	4423      	add	r3, r4
 801495a:	9301      	str	r3, [sp, #4]
 801495c:	9200      	str	r2, [sp, #0]
 801495e:	4640      	mov	r0, r8
 8014960:	4642      	mov	r2, r8
 8014962:	9702      	str	r7, [sp, #8]
 8014964:	3410      	adds	r4, #16
 8014966:	462b      	mov	r3, r5
 8014968:	4629      	mov	r1, r5
 801496a:	f005 fb0d 	bl	8019f88 <awe_vecBiquad_2ch>
 801496e:	4554      	cmp	r4, sl
 8014970:	f109 0908 	add.w	r9, r9, #8
 8014974:	f108 0808 	add.w	r8, r8, #8
 8014978:	d1e0      	bne.n	801493c <awe_modThreeBandToneControlProcess+0x200>
 801497a:	9b07      	ldr	r3, [sp, #28]
 801497c:	445b      	add	r3, fp
 801497e:	461c      	mov	r4, r3
 8014980:	42a5      	cmp	r5, r4
 8014982:	dd28      	ble.n	80149d6 <awe_modThreeBandToneControlProcess+0x29a>
 8014984:	9b06      	ldr	r3, [sp, #24]
 8014986:	ea4f 0884 	mov.w	r8, r4, lsl #2
 801498a:	4443      	add	r3, r8
 801498c:	4699      	mov	r9, r3
 801498e:	9b05      	ldr	r3, [sp, #20]
 8014990:	00e4      	lsls	r4, r4, #3
 8014992:	4498      	add	r8, r3
 8014994:	ea4f 0ac5 	mov.w	sl, r5, lsl #3
 8014998:	e9d6 2315 	ldrd	r2, r3, [r6, #84]	@ 0x54
 801499c:	4423      	add	r3, r4
 801499e:	e9cd 2300 	strd	r2, r3, [sp]
 80149a2:	4648      	mov	r0, r9
 80149a4:	4642      	mov	r2, r8
 80149a6:	462b      	mov	r3, r5
 80149a8:	4629      	mov	r1, r5
 80149aa:	9702      	str	r7, [sp, #8]
 80149ac:	f005 f880 	bl	8019ab0 <awe_vecBiquad>
 80149b0:	e9d6 2318 	ldrd	r2, r3, [r6, #96]	@ 0x60
 80149b4:	4423      	add	r3, r4
 80149b6:	9301      	str	r3, [sp, #4]
 80149b8:	9200      	str	r2, [sp, #0]
 80149ba:	4640      	mov	r0, r8
 80149bc:	4642      	mov	r2, r8
 80149be:	9702      	str	r7, [sp, #8]
 80149c0:	3408      	adds	r4, #8
 80149c2:	462b      	mov	r3, r5
 80149c4:	4629      	mov	r1, r5
 80149c6:	f005 f873 	bl	8019ab0 <awe_vecBiquad>
 80149ca:	45a2      	cmp	sl, r4
 80149cc:	f109 0904 	add.w	r9, r9, #4
 80149d0:	f108 0804 	add.w	r8, r8, #4
 80149d4:	d1e0      	bne.n	8014998 <awe_modThreeBandToneControlProcess+0x25c>
 80149d6:	9905      	ldr	r1, [sp, #20]
 80149d8:	edd6 0a13 	vldr	s1, [r6, #76]	@ 0x4c
 80149dc:	ed96 0a11 	vldr	s0, [r6, #68]	@ 0x44
 80149e0:	9700      	str	r7, [sp, #0]
 80149e2:	462a      	mov	r2, r5
 80149e4:	f106 0348 	add.w	r3, r6, #72	@ 0x48
 80149e8:	4608      	mov	r0, r1
 80149ea:	f009 fb97 	bl	801e11c <awe_vecScaleSmooth_Nch>
 80149ee:	b009      	add	sp, #36	@ 0x24
 80149f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149f4:	2400      	movs	r4, #0
 80149f6:	e751      	b.n	801489c <awe_modThreeBandToneControlProcess+0x160>

080149f8 <awe_modThreeBandToneControlSet>:
 80149f8:	b909      	cbnz	r1, 80149fe <awe_modThreeBandToneControlSet+0x6>
 80149fa:	2000      	movs	r0, #0
 80149fc:	4770      	bx	lr
 80149fe:	b570      	push	{r4, r5, r6, lr}
 8014a00:	ed90 0a0a 	vldr	s0, [r0, #40]	@ 0x28
 8014a04:	edd0 7a09 	vldr	s15, [r0, #36]	@ 0x24
 8014a08:	6903      	ldr	r3, [r0, #16]
 8014a0a:	ee60 7a27 	vmul.f32	s15, s0, s15
 8014a0e:	ed2d 8b04 	vpush	{d8-d9}
 8014a12:	681b      	ldr	r3, [r3, #0]
 8014a14:	eef5 7a40 	vcmp.f32	s15, #0.0
 8014a18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014a1c:	b082      	sub	sp, #8
 8014a1e:	4604      	mov	r4, r0
 8014a20:	699e      	ldr	r6, [r3, #24]
 8014a22:	ed93 8a04 	vldr	s16, [r3, #16]
 8014a26:	eef1 0ae7 	vsqrt.f32	s1, s15
 8014a2a:	d44c      	bmi.n	8014ac6 <awe_modThreeBandToneControlSet+0xce>
 8014a2c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8014a30:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014a34:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8014a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014a3c:	eef1 9ac0 	vsqrt.f32	s19, s0
 8014a40:	d44c      	bmi.n	8014adc <awe_modThreeBandToneControlSet+0xe4>
 8014a42:	2300      	movs	r3, #0
 8014a44:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8014a46:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8014a48:	2008      	movs	r0, #8
 8014a4a:	2501      	movs	r5, #1
 8014a4c:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 8014a50:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8014a54:	ed94 1a0c 	vldr	s2, [r4, #48]	@ 0x30
 8014a58:	eddf 1a24 	vldr	s3, [pc, #144]	@ 8014aec <awe_modThreeBandToneControlSet+0xf4>
 8014a5c:	ee39 9a68 	vsub.f32	s18, s18, s17
 8014a60:	ee31 1a68 	vsub.f32	s2, s2, s17
 8014a64:	eeb0 0a48 	vmov.f32	s0, s16
 8014a68:	f00d ff46 	bl	80228f8 <design_second_order_filter>
 8014a6c:	eeb0 1a49 	vmov.f32	s2, s18
 8014a70:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8014a72:	eddf 1a1e 	vldr	s3, [pc, #120]	@ 8014aec <awe_modThreeBandToneControlSet+0xf4>
 8014a76:	eef0 0a69 	vmov.f32	s1, s19
 8014a7a:	eeb0 0a48 	vmov.f32	s0, s16
 8014a7e:	200a      	movs	r0, #10
 8014a80:	f00d ff3a 	bl	80228f8 <design_second_order_filter>
 8014a84:	f3c6 0010 	ubfx	r0, r6, #0, #17
 8014a88:	eef0 0a48 	vmov.f32	s1, s16
 8014a8c:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8014a8e:	ed94 0a08 	vldr	s0, [r4, #32]
 8014a92:	f00e ff85 	bl	80239a0 <design_smoother>
 8014a96:	4628      	mov	r0, r5
 8014a98:	ed84 0a10 	vstr	s0, [r4, #64]	@ 0x40
 8014a9c:	eef0 0a48 	vmov.f32	s1, s16
 8014aa0:	ed94 0a08 	vldr	s0, [r4, #32]
 8014aa4:	f00e ff7c 	bl	80239a0 <design_smoother>
 8014aa8:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8014af0 <awe_modThreeBandToneControlSet+0xf8>
 8014aac:	ed84 0a13 	vstr	s0, [r4, #76]	@ 0x4c
 8014ab0:	ee28 0aa7 	vmul.f32	s0, s17, s15
 8014ab4:	f019 fea2 	bl	802e7fc <expf>
 8014ab8:	2000      	movs	r0, #0
 8014aba:	ed84 0a11 	vstr	s0, [r4, #68]	@ 0x44
 8014abe:	b002      	add	sp, #8
 8014ac0:	ecbd 8b04 	vpop	{d8-d9}
 8014ac4:	bd70      	pop	{r4, r5, r6, pc}
 8014ac6:	eeb0 0a67 	vmov.f32	s0, s15
 8014aca:	edcd 0a01 	vstr	s1, [sp, #4]
 8014ace:	f019 ff9b 	bl	802ea08 <sqrtf>
 8014ad2:	ed94 0a0a 	vldr	s0, [r4, #40]	@ 0x28
 8014ad6:	eddd 0a01 	vldr	s1, [sp, #4]
 8014ada:	e7a7      	b.n	8014a2c <awe_modThreeBandToneControlSet+0x34>
 8014adc:	edcd 0a01 	vstr	s1, [sp, #4]
 8014ae0:	f019 ff92 	bl	802ea08 <sqrtf>
 8014ae4:	eddd 0a01 	vldr	s1, [sp, #4]
 8014ae8:	e7ab      	b.n	8014a42 <awe_modThreeBandToneControlSet+0x4a>
 8014aea:	bf00      	nop
 8014aec:	00000000 	.word	0x00000000
 8014af0:	3debc8e3 	.word	0x3debc8e3

08014af4 <awe_modToggleButtonProcess>:
 8014af4:	6902      	ldr	r2, [r0, #16]
 8014af6:	e9d2 3200 	ldrd	r3, r2, [r2]
 8014afa:	b4f0      	push	{r4, r5, r6, r7}
 8014afc:	699d      	ldr	r5, [r3, #24]
 8014afe:	68d2      	ldr	r2, [r2, #12]
 8014b00:	68db      	ldr	r3, [r3, #12]
 8014b02:	f3c5 0510 	ubfx	r5, r5, #0, #17
 8014b06:	b315      	cbz	r5, 8014b4e <awe_modToggleButtonProcess+0x5a>
 8014b08:	3a04      	subs	r2, #4
 8014b0a:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 8014b0e:	f04f 0c00 	mov.w	ip, #0
 8014b12:	2701      	movs	r7, #1
 8014b14:	e009      	b.n	8014b2a <awe_modToggleButtonProcess+0x36>
 8014b16:	6247      	str	r7, [r0, #36]	@ 0x24
 8014b18:	6819      	ldr	r1, [r3, #0]
 8014b1a:	2401      	movs	r4, #1
 8014b1c:	6201      	str	r1, [r0, #32]
 8014b1e:	f842 4f04 	str.w	r4, [r2, #4]!
 8014b22:	42aa      	cmp	r2, r5
 8014b24:	f103 0304 	add.w	r3, r3, #4
 8014b28:	d011      	beq.n	8014b4e <awe_modToggleButtonProcess+0x5a>
 8014b2a:	e9d0 6408 	ldrd	r6, r4, [r0, #32]
 8014b2e:	6819      	ldr	r1, [r3, #0]
 8014b30:	42b1      	cmp	r1, r6
 8014b32:	ddf3      	ble.n	8014b1c <awe_modToggleButtonProcess+0x28>
 8014b34:	2c00      	cmp	r4, #0
 8014b36:	d0ee      	beq.n	8014b16 <awe_modToggleButtonProcess+0x22>
 8014b38:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8014b3c:	6819      	ldr	r1, [r3, #0]
 8014b3e:	6201      	str	r1, [r0, #32]
 8014b40:	2400      	movs	r4, #0
 8014b42:	f842 4f04 	str.w	r4, [r2, #4]!
 8014b46:	42aa      	cmp	r2, r5
 8014b48:	f103 0304 	add.w	r3, r3, #4
 8014b4c:	d1ed      	bne.n	8014b2a <awe_modToggleButtonProcess+0x36>
 8014b4e:	bcf0      	pop	{r4, r5, r6, r7}
 8014b50:	4770      	bx	lr
 8014b52:	bf00      	nop

08014b54 <awe_modTypeConversionProcess>:
 8014b54:	6902      	ldr	r2, [r0, #16]
 8014b56:	6a03      	ldr	r3, [r0, #32]
 8014b58:	b570      	push	{r4, r5, r6, lr}
 8014b5a:	e9d2 5200 	ldrd	r5, r2, [r2]
 8014b5e:	e9d5 1405 	ldrd	r1, r4, [r5, #20]
 8014b62:	6a46      	ldr	r6, [r0, #36]	@ 0x24
 8014b64:	68d2      	ldr	r2, [r2, #12]
 8014b66:	68e8      	ldr	r0, [r5, #12]
 8014b68:	f3c4 0410 	ubfx	r4, r4, #0, #17
 8014b6c:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8014b70:	42b3      	cmp	r3, r6
 8014b72:	b082      	sub	sp, #8
 8014b74:	fb01 f104 	mul.w	r1, r1, r4
 8014b78:	d013      	beq.n	8014ba2 <awe_modTypeConversionProcess+0x4e>
 8014b7a:	b943      	cbnz	r3, 8014b8e <awe_modTypeConversionProcess+0x3a>
 8014b7c:	2e01      	cmp	r6, #1
 8014b7e:	d01d      	beq.n	8014bbc <awe_modTypeConversionProcess+0x68>
 8014b80:	2301      	movs	r3, #1
 8014b82:	9100      	str	r1, [sp, #0]
 8014b84:	4619      	mov	r1, r3
 8014b86:	f007 f827 	bl	801bbd8 <awe_vecFloatToInt>
 8014b8a:	b002      	add	sp, #8
 8014b8c:	bd70      	pop	{r4, r5, r6, pc}
 8014b8e:	2b01      	cmp	r3, #1
 8014b90:	d01b      	beq.n	8014bca <awe_modTypeConversionProcess+0x76>
 8014b92:	2301      	movs	r3, #1
 8014b94:	9100      	str	r1, [sp, #0]
 8014b96:	4619      	mov	r1, r3
 8014b98:	b166      	cbz	r6, 8014bb4 <awe_modTypeConversionProcess+0x60>
 8014b9a:	f007 fab1 	bl	801c100 <awe_vecIntToFract32>
 8014b9e:	b002      	add	sp, #8
 8014ba0:	bd70      	pop	{r4, r5, r6, pc}
 8014ba2:	4290      	cmp	r0, r2
 8014ba4:	d0f1      	beq.n	8014b8a <awe_modTypeConversionProcess+0x36>
 8014ba6:	2301      	movs	r3, #1
 8014ba8:	9100      	str	r1, [sp, #0]
 8014baa:	4619      	mov	r1, r3
 8014bac:	f006 fa5a 	bl	801b064 <awe_vecCopy32>
 8014bb0:	b002      	add	sp, #8
 8014bb2:	bd70      	pop	{r4, r5, r6, pc}
 8014bb4:	f007 fa3a 	bl	801c02c <awe_vecIntToFloat>
 8014bb8:	b002      	add	sp, #8
 8014bba:	bd70      	pop	{r4, r5, r6, pc}
 8014bbc:	9100      	str	r1, [sp, #0]
 8014bbe:	4633      	mov	r3, r6
 8014bc0:	4631      	mov	r1, r6
 8014bc2:	f006 ff0d 	bl	801b9e0 <awe_vecFloatToFract32>
 8014bc6:	b002      	add	sp, #8
 8014bc8:	bd70      	pop	{r4, r5, r6, pc}
 8014bca:	9100      	str	r1, [sp, #0]
 8014bcc:	4619      	mov	r1, r3
 8014bce:	b916      	cbnz	r6, 8014bd6 <awe_modTypeConversionProcess+0x82>
 8014bd0:	f007 f8b4 	bl	801bd3c <awe_vecFract32ToFloat>
 8014bd4:	e7d9      	b.n	8014b8a <awe_modTypeConversionProcess+0x36>
 8014bd6:	f007 f9df 	bl	801bf98 <awe_vecFract32ToInt>
 8014bda:	e7d6      	b.n	8014b8a <awe_modTypeConversionProcess+0x36>

08014bdc <awe_ctrlGetModuleClass>:
 8014bdc:	b500      	push	{lr}
 8014bde:	b083      	sub	sp, #12
 8014be0:	4613      	mov	r3, r2
 8014be2:	f3c1 3111 	ubfx	r1, r1, #12, #18
 8014be6:	aa01      	add	r2, sp, #4
 8014be8:	f7f4 fe3c 	bl	8009864 <awe_fwGetObjectByID>
 8014bec:	b003      	add	sp, #12
 8014bee:	f85d fb04 	ldr.w	pc, [sp], #4
 8014bf2:	bf00      	nop

08014bf4 <awe_modUndb10Process>:
 8014bf4:	6903      	ldr	r3, [r0, #16]
 8014bf6:	e9d3 0100 	ldrd	r0, r1, [r3]
 8014bfa:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 8014bfe:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014c02:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8014c06:	68c9      	ldr	r1, [r1, #12]
 8014c08:	68c0      	ldr	r0, [r0, #12]
 8014c0a:	fb02 f203 	mul.w	r2, r2, r3
 8014c0e:	f00a ba9d 	b.w	801f14c <awe_vecUnDb10>
 8014c12:	bf00      	nop

08014c14 <awe_modUndb10ApproxProcess>:
 8014c14:	6903      	ldr	r3, [r0, #16]
 8014c16:	e9d3 0100 	ldrd	r0, r1, [r3]
 8014c1a:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 8014c1e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014c22:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8014c26:	68c9      	ldr	r1, [r1, #12]
 8014c28:	68c0      	ldr	r0, [r0, #12]
 8014c2a:	fb02 f203 	mul.w	r2, r2, r3
 8014c2e:	f00a baa7 	b.w	801f180 <awe_vecUnDb10_Approx>
 8014c32:	bf00      	nop

08014c34 <awe_modUndb20Process>:
 8014c34:	6903      	ldr	r3, [r0, #16]
 8014c36:	e9d3 0100 	ldrd	r0, r1, [r3]
 8014c3a:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 8014c3e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014c42:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8014c46:	68c9      	ldr	r1, [r1, #12]
 8014c48:	68c0      	ldr	r0, [r0, #12]
 8014c4a:	fb02 f203 	mul.w	r2, r2, r3
 8014c4e:	f00a bad9 	b.w	801f204 <awe_vecUnDb20>
 8014c52:	bf00      	nop

08014c54 <awe_modUndb20ApproxProcess>:
 8014c54:	6903      	ldr	r3, [r0, #16]
 8014c56:	e9d3 0100 	ldrd	r0, r1, [r3]
 8014c5a:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 8014c5e:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8014c62:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8014c66:	68c9      	ldr	r1, [r1, #12]
 8014c68:	68c0      	ldr	r0, [r0, #12]
 8014c6a:	fb02 f203 	mul.w	r2, r2, r3
 8014c6e:	f00a bae3 	b.w	801f238 <awe_vecUnDb20_Approx>
 8014c72:	bf00      	nop

08014c74 <awe_modVolumeControlProcess>:
 8014c74:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 8014c76:	6943      	ldr	r3, [r0, #20]
 8014c78:	4718      	bx	r3
 8014c7a:	bf00      	nop

08014c7c <awe_modVolumeControlConstructor>:
 8014c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c7e:	b093      	sub	sp, #76	@ 0x4c
 8014c80:	4615      	mov	r5, r2
 8014c82:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8014c84:	9300      	str	r3, [sp, #0]
 8014c86:	4601      	mov	r1, r0
 8014c88:	9201      	str	r2, [sp, #4]
 8014c8a:	4606      	mov	r6, r0
 8014c8c:	462b      	mov	r3, r5
 8014c8e:	f240 1201 	movw	r2, #257	@ 0x101
 8014c92:	4818      	ldr	r0, [pc, #96]	@ (8014cf4 <awe_modVolumeControlConstructor+0x78>)
 8014c94:	f00b fa56 	bl	8020144 <BaseClassModule_Constructor>
 8014c98:	4604      	mov	r4, r0
 8014c9a:	2800      	cmp	r0, #0
 8014c9c:	d026      	beq.n	8014cec <awe_modVolumeControlConstructor+0x70>
 8014c9e:	4a16      	ldr	r2, [pc, #88]	@ (8014cf8 <awe_modVolumeControlConstructor+0x7c>)
 8014ca0:	9208      	str	r2, [sp, #32]
 8014ca2:	920a      	str	r2, [sp, #40]	@ 0x28
 8014ca4:	920d      	str	r2, [sp, #52]	@ 0x34
 8014ca6:	920f      	str	r2, [sp, #60]	@ 0x3c
 8014ca8:	aa05      	add	r2, sp, #20
 8014caa:	9201      	str	r2, [sp, #4]
 8014cac:	220d      	movs	r2, #13
 8014cae:	9200      	str	r2, [sp, #0]
 8014cb0:	2001      	movs	r0, #1
 8014cb2:	9005      	str	r0, [sp, #20]
 8014cb4:	e9d5 0500 	ldrd	r0, r5, [r5]
 8014cb8:	4b10      	ldr	r3, [pc, #64]	@ (8014cfc <awe_modVolumeControlConstructor+0x80>)
 8014cba:	9309      	str	r3, [sp, #36]	@ 0x24
 8014cbc:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8014cc0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014cc2:	930e      	str	r3, [sp, #56]	@ 0x38
 8014cc4:	9310      	str	r3, [sp, #64]	@ 0x40
 8014cc6:	4b0e      	ldr	r3, [pc, #56]	@ (8014d00 <awe_modVolumeControlConstructor+0x84>)
 8014cc8:	9306      	str	r3, [sp, #24]
 8014cca:	9207      	str	r2, [sp, #28]
 8014ccc:	920c      	str	r2, [sp, #48]	@ 0x30
 8014cce:	9003      	str	r0, [sp, #12]
 8014cd0:	4f0c      	ldr	r7, [pc, #48]	@ (8014d04 <awe_modVolumeControlConstructor+0x88>)
 8014cd2:	480d      	ldr	r0, [pc, #52]	@ (8014d08 <awe_modVolumeControlConstructor+0x8c>)
 8014cd4:	9711      	str	r7, [sp, #68]	@ 0x44
 8014cd6:	4631      	mov	r1, r6
 8014cd8:	ab03      	add	r3, sp, #12
 8014cda:	f240 1201 	movw	r2, #257	@ 0x101
 8014cde:	9504      	str	r5, [sp, #16]
 8014ce0:	f00b fc52 	bl	8020588 <ClassModule_Constructor>
 8014ce4:	2800      	cmp	r0, #0
 8014ce6:	6420      	str	r0, [r4, #64]	@ 0x40
 8014ce8:	bf08      	it	eq
 8014cea:	2400      	moveq	r4, #0
 8014cec:	4620      	mov	r0, r4
 8014cee:	b013      	add	sp, #76	@ 0x4c
 8014cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014cf2:	bf00      	nop
 8014cf4:	0803541c 	.word	0x0803541c
 8014cf8:	bffef2d4 	.word	0xbffef2d4
 8014cfc:	3f7dea07 	.word	0x3f7dea07
 8014d00:	41200000 	.word	0x41200000
 8014d04:	3d8414e8 	.word	0x3d8414e8
 8014d08:	beef080d 	.word	0xbeef080d

08014d0c <awe_modVolumeControlSet>:
 8014d0c:	b909      	cbnz	r1, 8014d12 <awe_modVolumeControlSet+0x6>
 8014d0e:	2000      	movs	r0, #0
 8014d10:	4770      	bx	lr
 8014d12:	b510      	push	{r4, lr}
 8014d14:	ed2d 8b06 	vpush	{d8-d10}
 8014d18:	ed90 9a08 	vldr	s18, [r0, #32]
 8014d1c:	eddf 9a23 	vldr	s19, [pc, #140]	@ 8014dac <awe_modVolumeControlSet+0xa0>
 8014d20:	ed90 aa0a 	vldr	s20, [r0, #40]	@ 0x28
 8014d24:	edd0 8a0b 	vldr	s17, [r0, #44]	@ 0x2c
 8014d28:	edd0 aa0c 	vldr	s21, [r0, #48]	@ 0x30
 8014d2c:	ee29 0a29 	vmul.f32	s0, s18, s19
 8014d30:	4604      	mov	r4, r0
 8014d32:	f019 fd63 	bl	802e7fc <expf>
 8014d36:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8014d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d3e:	eeb0 8a40 	vmov.f32	s16, s0
 8014d42:	db28      	blt.n	8014d96 <awe_modVolumeControlSet+0x8a>
 8014d44:	ed9f 0a1a 	vldr	s0, [pc, #104]	@ 8014db0 <awe_modVolumeControlSet+0xa4>
 8014d48:	f019 fd58 	bl	802e7fc <expf>
 8014d4c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014d50:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8014d52:	edd4 5a0d 	vldr	s11, [r4, #52]	@ 0x34
 8014d56:	edd3 6a0d 	vldr	s13, [r3, #52]	@ 0x34
 8014d5a:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8014d5e:	ed94 5a0e 	vldr	s10, [r4, #56]	@ 0x38
 8014d62:	ed94 6a0f 	vldr	s12, [r4, #60]	@ 0x3c
 8014d66:	ee70 7a67 	vsub.f32	s15, s0, s15
 8014d6a:	ee68 6a26 	vmul.f32	s13, s16, s13
 8014d6e:	ee68 7a27 	vmul.f32	s15, s16, s15
 8014d72:	ee28 7a07 	vmul.f32	s14, s16, s14
 8014d76:	eea7 8aa5 	vfma.f32	s16, s15, s11
 8014d7a:	2000      	movs	r0, #0
 8014d7c:	eee7 6a85 	vfma.f32	s13, s15, s10
 8014d80:	ed83 8a0a 	vstr	s16, [r3, #40]	@ 0x28
 8014d84:	ecbd 8b06 	vpop	{d8-d10}
 8014d88:	eea7 7a86 	vfma.f32	s14, s15, s12
 8014d8c:	edc3 6a0b 	vstr	s13, [r3, #44]	@ 0x2c
 8014d90:	ed83 7a0c 	vstr	s14, [r3, #48]	@ 0x30
 8014d94:	bd10      	pop	{r4, pc}
 8014d96:	ee29 0a28 	vmul.f32	s0, s18, s17
 8014d9a:	ee29 aa0a 	vmul.f32	s20, s18, s20
 8014d9e:	eea9 0a0a 	vfma.f32	s0, s18, s20
 8014da2:	ee30 0a2a 	vadd.f32	s0, s0, s21
 8014da6:	ee20 0a29 	vmul.f32	s0, s0, s19
 8014daa:	e7cd      	b.n	8014d48 <awe_modVolumeControlSet+0x3c>
 8014dac:	3debc8e3 	.word	0x3debc8e3
 8014db0:	00000000 	.word	0x00000000

08014db4 <awe_modWetDryProcess>:
 8014db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014db8:	6902      	ldr	r2, [r0, #16]
 8014dba:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 8014dbc:	e9d2 3700 	ldrd	r3, r7, [r2]
 8014dc0:	ed2d 8b02 	vpush	{d8}
 8014dc4:	e9d3 5605 	ldrd	r5, r6, [r3, #20]
 8014dc8:	ed90 8a08 	vldr	s16, [r0, #32]
 8014dcc:	6892      	ldr	r2, [r2, #8]
 8014dce:	f8d7 800c 	ldr.w	r8, [r7, #12]
 8014dd2:	68d7      	ldr	r7, [r2, #12]
 8014dd4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014dd8:	4604      	mov	r4, r0
 8014dda:	b082      	sub	sp, #8
 8014ddc:	68d8      	ldr	r0, [r3, #12]
 8014dde:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8014de2:	f3c6 0610 	ubfx	r6, r6, #0, #17
 8014de6:	ee30 0a48 	vsub.f32	s0, s0, s16
 8014dea:	b119      	cbz	r1, 8014df4 <awe_modWetDryProcess+0x40>
 8014dec:	ee20 0a00 	vmul.f32	s0, s0, s0
 8014df0:	ee28 8a08 	vmul.f32	s16, s16, s16
 8014df4:	edd4 0a0d 	vldr	s1, [r4, #52]	@ 0x34
 8014df8:	9600      	str	r6, [sp, #0]
 8014dfa:	f104 032c 	add.w	r3, r4, #44	@ 0x2c
 8014dfe:	462a      	mov	r2, r5
 8014e00:	4639      	mov	r1, r7
 8014e02:	f009 f98b 	bl	801e11c <awe_vecScaleSmooth_Nch>
 8014e06:	edd4 0a0d 	vldr	s1, [r4, #52]	@ 0x34
 8014e0a:	9600      	str	r6, [sp, #0]
 8014e0c:	eeb0 0a48 	vmov.f32	s0, s16
 8014e10:	462a      	mov	r2, r5
 8014e12:	4639      	mov	r1, r7
 8014e14:	4640      	mov	r0, r8
 8014e16:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8014e1a:	f008 fe6b 	bl	801daf4 <awe_vecScaleAddSmooth_Nch>
 8014e1e:	b002      	add	sp, #8
 8014e20:	ecbd 8b02 	vpop	{d8}
 8014e24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e28 <awe_modWetDrySet>:
 8014e28:	054b      	lsls	r3, r1, #21
 8014e2a:	d401      	bmi.n	8014e30 <awe_modWetDrySet+0x8>
 8014e2c:	2000      	movs	r0, #0
 8014e2e:	4770      	bx	lr
 8014e30:	6903      	ldr	r3, [r0, #16]
 8014e32:	ed90 0a0a 	vldr	s0, [r0, #40]	@ 0x28
 8014e36:	681b      	ldr	r3, [r3, #0]
 8014e38:	b510      	push	{r4, lr}
 8014e3a:	edd3 0a04 	vldr	s1, [r3, #16]
 8014e3e:	4604      	mov	r4, r0
 8014e40:	2001      	movs	r0, #1
 8014e42:	f00e fdad 	bl	80239a0 <design_smoother>
 8014e46:	2000      	movs	r0, #0
 8014e48:	ed84 0a0d 	vstr	s0, [r4, #52]	@ 0x34
 8014e4c:	bd10      	pop	{r4, pc}
 8014e4e:	bf00      	nop

08014e50 <awe_modWhiteNoiseProcess>:
 8014e50:	b510      	push	{r4, lr}
 8014e52:	4604      	mov	r4, r0
 8014e54:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8014e56:	6943      	ldr	r3, [r0, #20]
 8014e58:	4798      	blx	r3
 8014e5a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8014e5c:	6943      	ldr	r3, [r0, #20]
 8014e5e:	4798      	blx	r3
 8014e60:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8014e62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e66:	6943      	ldr	r3, [r0, #20]
 8014e68:	4718      	bx	r3
 8014e6a:	bf00      	nop

08014e6c <awe_modWhiteNoiseConstructor>:
 8014e6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014e70:	b08b      	sub	sp, #44	@ 0x2c
 8014e72:	4615      	mov	r5, r2
 8014e74:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014e76:	9300      	str	r3, [sp, #0]
 8014e78:	4601      	mov	r1, r0
 8014e7a:	9201      	str	r2, [sp, #4]
 8014e7c:	4680      	mov	r8, r0
 8014e7e:	462b      	mov	r3, r5
 8014e80:	4a2b      	ldr	r2, [pc, #172]	@ (8014f30 <awe_modWhiteNoiseConstructor+0xc4>)
 8014e82:	482c      	ldr	r0, [pc, #176]	@ (8014f34 <awe_modWhiteNoiseConstructor+0xc8>)
 8014e84:	f00b f95e 	bl	8020144 <BaseClassModule_Constructor>
 8014e88:	4604      	mov	r4, r0
 8014e8a:	2800      	cmp	r0, #0
 8014e8c:	d046      	beq.n	8014f1c <awe_modWhiteNoiseConstructor+0xb0>
 8014e8e:	ae0a      	add	r6, sp, #40	@ 0x28
 8014e90:	686b      	ldr	r3, [r5, #4]
 8014e92:	f846 3d20 	str.w	r3, [r6, #-32]!
 8014e96:	2201      	movs	r2, #1
 8014e98:	af04      	add	r7, sp, #16
 8014e9a:	e9cd 2700 	strd	r2, r7, [sp]
 8014e9e:	4633      	mov	r3, r6
 8014ea0:	f04f 0900 	mov.w	r9, #0
 8014ea4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8014ea8:	4641      	mov	r1, r8
 8014eaa:	4823      	ldr	r0, [pc, #140]	@ (8014f38 <awe_modWhiteNoiseConstructor+0xcc>)
 8014eac:	f8cd 9010 	str.w	r9, [sp, #16]
 8014eb0:	f00b fb6a 	bl	8020588 <ClassModule_Constructor>
 8014eb4:	6260      	str	r0, [r4, #36]	@ 0x24
 8014eb6:	2800      	cmp	r0, #0
 8014eb8:	d034      	beq.n	8014f24 <awe_modWhiteNoiseConstructor+0xb8>
 8014eba:	2102      	movs	r1, #2
 8014ebc:	e9cd 1700 	strd	r1, r7, [sp]
 8014ec0:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8014ec4:	9104      	str	r1, [sp, #16]
 8014ec6:	481d      	ldr	r0, [pc, #116]	@ (8014f3c <awe_modWhiteNoiseConstructor+0xd0>)
 8014ec8:	f8cd 9014 	str.w	r9, [sp, #20]
 8014ecc:	4633      	mov	r3, r6
 8014ece:	f240 1201 	movw	r2, #257	@ 0x101
 8014ed2:	4641      	mov	r1, r8
 8014ed4:	e9cd cc02 	strd	ip, ip, [sp, #8]
 8014ed8:	f00b fb56 	bl	8020588 <ClassModule_Constructor>
 8014edc:	62a0      	str	r0, [r4, #40]	@ 0x28
 8014ede:	b308      	cbz	r0, 8014f24 <awe_modWhiteNoiseConstructor+0xb8>
 8014ee0:	2006      	movs	r0, #6
 8014ee2:	9701      	str	r7, [sp, #4]
 8014ee4:	9000      	str	r0, [sp, #0]
 8014ee6:	4633      	mov	r3, r6
 8014ee8:	e9d5 5600 	ldrd	r5, r6, [r5]
 8014eec:	f04f 5240 	mov.w	r2, #805306368	@ 0x30000000
 8014ef0:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 8014ef4:	9204      	str	r2, [sp, #16]
 8014ef6:	9207      	str	r2, [sp, #28]
 8014ef8:	9208      	str	r2, [sp, #32]
 8014efa:	9009      	str	r0, [sp, #36]	@ 0x24
 8014efc:	2700      	movs	r7, #0
 8014efe:	4641      	mov	r1, r8
 8014f00:	f240 1201 	movw	r2, #257	@ 0x101
 8014f04:	480e      	ldr	r0, [pc, #56]	@ (8014f40 <awe_modWhiteNoiseConstructor+0xd4>)
 8014f06:	f8cd 9018 	str.w	r9, [sp, #24]
 8014f0a:	9705      	str	r7, [sp, #20]
 8014f0c:	e9cd 6502 	strd	r6, r5, [sp, #8]
 8014f10:	f00b fb3a 	bl	8020588 <ClassModule_Constructor>
 8014f14:	2800      	cmp	r0, #0
 8014f16:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8014f18:	bf08      	it	eq
 8014f1a:	2400      	moveq	r4, #0
 8014f1c:	4620      	mov	r0, r4
 8014f1e:	b00b      	add	sp, #44	@ 0x2c
 8014f20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014f24:	4604      	mov	r4, r0
 8014f26:	4620      	mov	r0, r4
 8014f28:	b00b      	add	sp, #44	@ 0x2c
 8014f2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014f2e:	bf00      	nop
 8014f30:	00010100 	.word	0x00010100
 8014f34:	0803546c 	.word	0x0803546c
 8014f38:	beef087b 	.word	0xbeef087b
 8014f3c:	beef0866 	.word	0xbeef0866
 8014f40:	beef0813 	.word	0xbeef0813

08014f44 <awe_modWhiteNoiseSet>:
 8014f44:	b909      	cbnz	r1, 8014f4a <awe_modWhiteNoiseSet+0x6>
 8014f46:	2000      	movs	r0, #0
 8014f48:	4770      	bx	lr
 8014f4a:	b508      	push	{r3, lr}
 8014f4c:	edd0 7a08 	vldr	s15, [r0, #32]
 8014f50:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 8014f6c <awe_modWhiteNoiseSet+0x28>
 8014f54:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014f56:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014f5a:	4618      	mov	r0, r3
 8014f5c:	edc3 7a08 	vstr	s15, [r3, #32]
 8014f60:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8014f64:	f7f5 fa50 	bl	800a408 <ClassModule_Set>
 8014f68:	2000      	movs	r0, #0
 8014f6a:	bd08      	pop	{r3, pc}
 8014f6c:	30000000 	.word	0x30000000

08014f70 <awe_modWithinRangeProcess>:
 8014f70:	b570      	push	{r4, r5, r6, lr}
 8014f72:	6905      	ldr	r5, [r0, #16]
 8014f74:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8014f76:	4603      	mov	r3, r0
 8014f78:	6828      	ldr	r0, [r5, #0]
 8014f7a:	edd3 0a09 	vldr	s1, [r3, #36]	@ 0x24
 8014f7e:	ed93 0a08 	vldr	s0, [r3, #32]
 8014f82:	e9d0 4105 	ldrd	r4, r1, [r0, #20]
 8014f86:	1e56      	subs	r6, r2, #1
 8014f88:	f3c1 0110 	ubfx	r1, r1, #0, #17
 8014f8c:	2e01      	cmp	r6, #1
 8014f8e:	f3c4 0409 	ubfx	r4, r4, #0, #10
 8014f92:	fb04 f401 	mul.w	r4, r4, r1
 8014f96:	b082      	sub	sp, #8
 8014f98:	bf98      	it	ls
 8014f9a:	6869      	ldrls	r1, [r5, #4]
 8014f9c:	68c0      	ldr	r0, [r0, #12]
 8014f9e:	bf98      	it	ls
 8014fa0:	68c9      	ldrls	r1, [r1, #12]
 8014fa2:	9400      	str	r4, [sp, #0]
 8014fa4:	bf88      	it	hi
 8014fa6:	2100      	movhi	r1, #0
 8014fa8:	3328      	adds	r3, #40	@ 0x28
 8014faa:	f00a f987 	bl	801f2bc <awe_vecWithinRange>
 8014fae:	b002      	add	sp, #8
 8014fb0:	bd70      	pop	{r4, r5, r6, pc}
 8014fb2:	bf00      	nop

08014fb4 <awe_modWithinRangeBypass>:
 8014fb4:	7e42      	ldrb	r2, [r0, #25]
 8014fb6:	2a01      	cmp	r2, #1
 8014fb8:	d000      	beq.n	8014fbc <awe_modWithinRangeBypass+0x8>
 8014fba:	4770      	bx	lr
 8014fbc:	6903      	ldr	r3, [r0, #16]
 8014fbe:	6858      	ldr	r0, [r3, #4]
 8014fc0:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8014fc4:	f3c1 0110 	ubfx	r1, r1, #0, #17
 8014fc8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8014fcc:	fb03 f301 	mul.w	r3, r3, r1
 8014fd0:	2b01      	cmp	r3, #1
 8014fd2:	68c0      	ldr	r0, [r0, #12]
 8014fd4:	d002      	beq.n	8014fdc <awe_modWithinRangeBypass+0x28>
 8014fd6:	4611      	mov	r1, r2
 8014fd8:	f006 bbe8 	b.w	801b7ac <awe_vecFillInt32>
 8014fdc:	6003      	str	r3, [r0, #0]
 8014fde:	4770      	bx	lr

08014fe0 <awe_modZeroCrossingDetectorProcess>:
 8014fe0:	6903      	ldr	r3, [r0, #16]
 8014fe2:	681a      	ldr	r2, [r3, #0]
 8014fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fe8:	e9d2 1605 	ldrd	r1, r6, [r2, #20]
 8014fec:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8014ff0:	f3c6 0610 	ubfx	r6, r6, #0, #17
 8014ff4:	2900      	cmp	r1, #0
 8014ff6:	d03a      	beq.n	801506e <awe_modZeroCrossingDetectorProcess+0x8e>
 8014ff8:	685c      	ldr	r4, [r3, #4]
 8014ffa:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014ffc:	f8d4 800c 	ldr.w	r8, [r4, #12]
 8015000:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015004:	0089      	lsls	r1, r1, #2
 8015006:	f1a3 0c04 	sub.w	ip, r3, #4
 801500a:	f04f 0a00 	mov.w	sl, #0
 801500e:	eb0c 0901 	add.w	r9, ip, r1
 8015012:	f04f 5b7e 	mov.w	fp, #1065353216	@ 0x3f800000
 8015016:	6a05      	ldr	r5, [r0, #32]
 8015018:	f85c 4f04 	ldr.w	r4, [ip, #4]!
 801501c:	2d00      	cmp	r5, #0
 801501e:	4673      	mov	r3, lr
 8015020:	4642      	mov	r2, r8
 8015022:	d02a      	beq.n	801507a <awe_modZeroCrossingDetectorProcess+0x9a>
 8015024:	db50      	blt.n	80150c8 <awe_modZeroCrossingDetectorProcess+0xe8>
 8015026:	b1d6      	cbz	r6, 801505e <awe_modZeroCrossingDetectorProcess+0x7e>
 8015028:	2500      	movs	r5, #0
 801502a:	e008      	b.n	801503e <awe_modZeroCrossingDetectorProcess+0x5e>
 801502c:	3401      	adds	r4, #1
 801502e:	d020      	beq.n	8015072 <awe_modZeroCrossingDetectorProcess+0x92>
 8015030:	4657      	mov	r7, sl
 8015032:	2401      	movs	r4, #1
 8015034:	3501      	adds	r5, #1
 8015036:	42ae      	cmp	r6, r5
 8015038:	6017      	str	r7, [r2, #0]
 801503a:	440a      	add	r2, r1
 801503c:	d00f      	beq.n	801505e <awe_modZeroCrossingDetectorProcess+0x7e>
 801503e:	edd3 7a00 	vldr	s15, [r3]
 8015042:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801504a:	440b      	add	r3, r1
 801504c:	d5ee      	bpl.n	801502c <awe_modZeroCrossingDetectorProcess+0x4c>
 801504e:	3501      	adds	r5, #1
 8015050:	4657      	mov	r7, sl
 8015052:	42ae      	cmp	r6, r5
 8015054:	6017      	str	r7, [r2, #0]
 8015056:	f04f 34ff 	mov.w	r4, #4294967295
 801505a:	440a      	add	r2, r1
 801505c:	d1ef      	bne.n	801503e <awe_modZeroCrossingDetectorProcess+0x5e>
 801505e:	45cc      	cmp	ip, r9
 8015060:	f8cc 4000 	str.w	r4, [ip]
 8015064:	f10e 0e04 	add.w	lr, lr, #4
 8015068:	f108 0804 	add.w	r8, r8, #4
 801506c:	d1d3      	bne.n	8015016 <awe_modZeroCrossingDetectorProcess+0x36>
 801506e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015072:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8015076:	2401      	movs	r4, #1
 8015078:	e7dc      	b.n	8015034 <awe_modZeroCrossingDetectorProcess+0x54>
 801507a:	2e00      	cmp	r6, #0
 801507c:	d0ef      	beq.n	801505e <awe_modZeroCrossingDetectorProcess+0x7e>
 801507e:	edd3 7a00 	vldr	s15, [r3]
 8015082:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801508a:	bf4c      	ite	mi
 801508c:	f04f 37ff 	movmi.w	r7, #4294967295
 8015090:	2701      	movpl	r7, #1
 8015092:	42a7      	cmp	r7, r4
 8015094:	440b      	add	r3, r1
 8015096:	f105 0501 	add.w	r5, r5, #1
 801509a:	d006      	beq.n	80150aa <awe_modZeroCrossingDetectorProcess+0xca>
 801509c:	42b5      	cmp	r5, r6
 801509e:	f8c2 b000 	str.w	fp, [r2]
 80150a2:	440a      	add	r2, r1
 80150a4:	d006      	beq.n	80150b4 <awe_modZeroCrossingDetectorProcess+0xd4>
 80150a6:	463c      	mov	r4, r7
 80150a8:	e7e9      	b.n	801507e <awe_modZeroCrossingDetectorProcess+0x9e>
 80150aa:	42b5      	cmp	r5, r6
 80150ac:	f8c2 a000 	str.w	sl, [r2]
 80150b0:	440a      	add	r2, r1
 80150b2:	d1f8      	bne.n	80150a6 <awe_modZeroCrossingDetectorProcess+0xc6>
 80150b4:	463c      	mov	r4, r7
 80150b6:	45cc      	cmp	ip, r9
 80150b8:	f8cc 4000 	str.w	r4, [ip]
 80150bc:	f10e 0e04 	add.w	lr, lr, #4
 80150c0:	f108 0804 	add.w	r8, r8, #4
 80150c4:	d1a7      	bne.n	8015016 <awe_modZeroCrossingDetectorProcess+0x36>
 80150c6:	e7d2      	b.n	801506e <awe_modZeroCrossingDetectorProcess+0x8e>
 80150c8:	2e00      	cmp	r6, #0
 80150ca:	d0c8      	beq.n	801505e <awe_modZeroCrossingDetectorProcess+0x7e>
 80150cc:	2500      	movs	r5, #0
 80150ce:	e006      	b.n	80150de <awe_modZeroCrossingDetectorProcess+0xfe>
 80150d0:	4657      	mov	r7, sl
 80150d2:	2401      	movs	r4, #1
 80150d4:	3501      	adds	r5, #1
 80150d6:	42b5      	cmp	r5, r6
 80150d8:	6017      	str	r7, [r2, #0]
 80150da:	440a      	add	r2, r1
 80150dc:	d0bf      	beq.n	801505e <awe_modZeroCrossingDetectorProcess+0x7e>
 80150de:	edd3 7a00 	vldr	s15, [r3]
 80150e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80150e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150ea:	440b      	add	r3, r1
 80150ec:	d5f0      	bpl.n	80150d0 <awe_modZeroCrossingDetectorProcess+0xf0>
 80150ee:	2c01      	cmp	r4, #1
 80150f0:	d003      	beq.n	80150fa <awe_modZeroCrossingDetectorProcess+0x11a>
 80150f2:	4657      	mov	r7, sl
 80150f4:	f04f 34ff 	mov.w	r4, #4294967295
 80150f8:	e7ec      	b.n	80150d4 <awe_modZeroCrossingDetectorProcess+0xf4>
 80150fa:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 80150fe:	f04f 34ff 	mov.w	r4, #4294967295
 8015102:	e7e7      	b.n	80150d4 <awe_modZeroCrossingDetectorProcess+0xf4>

08015104 <awe_modZeroCrossingDetectorConstructor>:
 8015104:	b570      	push	{r4, r5, r6, lr}
 8015106:	b082      	sub	sp, #8
 8015108:	4616      	mov	r6, r2
 801510a:	4605      	mov	r5, r0
 801510c:	9806      	ldr	r0, [sp, #24]
 801510e:	9300      	str	r3, [sp, #0]
 8015110:	460a      	mov	r2, r1
 8015112:	9001      	str	r0, [sp, #4]
 8015114:	4633      	mov	r3, r6
 8015116:	4629      	mov	r1, r5
 8015118:	480b      	ldr	r0, [pc, #44]	@ (8015148 <awe_modZeroCrossingDetectorConstructor+0x44>)
 801511a:	f00b f813 	bl	8020144 <BaseClassModule_Constructor>
 801511e:	b178      	cbz	r0, 8015140 <awe_modZeroCrossingDetectorConstructor+0x3c>
 8015120:	6833      	ldr	r3, [r6, #0]
 8015122:	4604      	mov	r4, r0
 8015124:	6958      	ldr	r0, [r3, #20]
 8015126:	f3c0 0009 	ubfx	r0, r0, #0, #10
 801512a:	0080      	lsls	r0, r0, #2
 801512c:	462a      	mov	r2, r5
 801512e:	f240 2131 	movw	r1, #561	@ 0x231
 8015132:	f00a fab3 	bl	801f69c <awe_fwMalloc>
 8015136:	6260      	str	r0, [r4, #36]	@ 0x24
 8015138:	b110      	cbz	r0, 8015140 <awe_modZeroCrossingDetectorConstructor+0x3c>
 801513a:	4620      	mov	r0, r4
 801513c:	b002      	add	sp, #8
 801513e:	bd70      	pop	{r4, r5, r6, pc}
 8015140:	2400      	movs	r4, #0
 8015142:	4620      	mov	r0, r4
 8015144:	b002      	add	sp, #8
 8015146:	bd70      	pop	{r4, r5, r6, pc}
 8015148:	080354bc 	.word	0x080354bc

0801514c <awe_modZeroCrossingDetectorBypass>:
 801514c:	6903      	ldr	r3, [r0, #16]
 801514e:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 801516c <awe_modZeroCrossingDetectorBypass+0x20>
 8015152:	6859      	ldr	r1, [r3, #4]
 8015154:	e9d1 2305 	ldrd	r2, r3, [r1, #20]
 8015158:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801515c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8015160:	68c8      	ldr	r0, [r1, #12]
 8015162:	fb02 f203 	mul.w	r2, r2, r3
 8015166:	2101      	movs	r1, #1
 8015168:	f006 b9fc 	b.w	801b564 <awe_vecFill>
 801516c:	00000000 	.word	0x00000000

08015170 <awe_modZeroSourceProcess>:
 8015170:	6903      	ldr	r3, [r0, #16]
 8015172:	6819      	ldr	r1, [r3, #0]
 8015174:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
 8015178:	f3c2 0210 	ubfx	r2, r2, #0, #17
 801517c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8015180:	68c8      	ldr	r0, [r1, #12]
 8015182:	fb03 f302 	mul.w	r3, r3, r2
 8015186:	2101      	movs	r1, #1
 8015188:	2200      	movs	r2, #0
 801518a:	f006 bae5 	b.w	801b758 <awe_vecFillFract32>
 801518e:	bf00      	nop

08015190 <omni2_sw_reset>:
 8015190:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015194:	4605      	mov	r5, r0
 8015196:	4604      	mov	r4, r0
 8015198:	f845 1b50 	str.w	r1, [r5], #80
 801519c:	1d07      	adds	r7, r0, #4
 801519e:	4689      	mov	r9, r1
 80151a0:	f104 0860 	add.w	r8, r4, #96	@ 0x60
 80151a4:	2654      	movs	r6, #84	@ 0x54
 80151a6:	4638      	mov	r0, r7
 80151a8:	224c      	movs	r2, #76	@ 0x4c
 80151aa:	2100      	movs	r1, #0
 80151ac:	f018 fcd2 	bl	802db54 <memset>
 80151b0:	60e5      	str	r5, [r4, #12]
 80151b2:	4632      	mov	r2, r6
 80151b4:	f104 05b4 	add.w	r5, r4, #180	@ 0xb4
 80151b8:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
 80151bc:	4640      	mov	r0, r8
 80151be:	2100      	movs	r1, #0
 80151c0:	f018 fcc8 	bl	802db54 <memset>
 80151c4:	4632      	mov	r2, r6
 80151c6:	4628      	mov	r0, r5
 80151c8:	2100      	movs	r1, #0
 80151ca:	f018 fcc3 	bl	802db54 <memset>
 80151ce:	f504 7686 	add.w	r6, r4, #268	@ 0x10c
 80151d2:	2300      	movs	r3, #0
 80151d4:	2202      	movs	r2, #2
 80151d6:	2101      	movs	r1, #1
 80151d8:	f504 7c84 	add.w	ip, r4, #264	@ 0x108
 80151dc:	f04f 0e1e 	mov.w	lr, #30
 80151e0:	6325      	str	r5, [r4, #48]	@ 0x30
 80151e2:	f8c4 c028 	str.w	ip, [r4, #40]	@ 0x28
 80151e6:	f8c4 e04c 	str.w	lr, [r4, #76]	@ 0x4c
 80151ea:	7421      	strb	r1, [r4, #16]
 80151ec:	6161      	str	r1, [r4, #20]
 80151ee:	62e1      	str	r1, [r4, #44]	@ 0x2c
 80151f0:	6423      	str	r3, [r4, #64]	@ 0x40
 80151f2:	f884 3108 	strb.w	r3, [r4, #264]	@ 0x108
 80151f6:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 80151fa:	64a3      	str	r3, [r4, #72]	@ 0x48
 80151fc:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
 8015200:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 8015204:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
 8015208:	f8a4 20e0 	strh.w	r2, [r4, #224]	@ 0xe0
 801520c:	f8a4 20e2 	strh.w	r2, [r4, #226]	@ 0xe2
 8015210:	f8c4 8018 	str.w	r8, [r4, #24]
 8015214:	4638      	mov	r0, r7
 8015216:	6066      	str	r6, [r4, #4]
 8015218:	f013 f90a 	bl	8028430 <omni2_sw_process_buffer_info>
 801521c:	f894 3090 	ldrb.w	r3, [r4, #144]	@ 0x90
 8015220:	f884 37d4 	strb.w	r3, [r4, #2004]	@ 0x7d4
 8015224:	4605      	mov	r5, r0
 8015226:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8015228:	4630      	mov	r0, r6
 801522a:	f013 f851 	bl	80282d0 <omni2_sw_init_heap>
 801522e:	4328      	orrs	r0, r5
 8015230:	b240      	sxtb	r0, r0
 8015232:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015236:	bf00      	nop

08015238 <omni2_sw_setConfig>:
 8015238:	6802      	ldr	r2, [r0, #0]
 801523a:	2a01      	cmp	r2, #1
 801523c:	b570      	push	{r4, r5, r6, lr}
 801523e:	4605      	mov	r5, r0
 8015240:	460c      	mov	r4, r1
 8015242:	d01e      	beq.n	8015282 <omni2_sw_setConfig+0x4a>
 8015244:	6886      	ldr	r6, [r0, #8]
 8015246:	2000      	movs	r0, #0
 8015248:	686b      	ldr	r3, [r5, #4]
 801524a:	f884 2108 	strb.w	r2, [r4, #264]	@ 0x108
 801524e:	2b64      	cmp	r3, #100	@ 0x64
 8015250:	64e6      	str	r6, [r4, #76]	@ 0x4c
 8015252:	dd05      	ble.n	8015260 <omni2_sw_setConfig+0x28>
 8015254:	3601      	adds	r6, #1
 8015256:	bf14      	ite	ne
 8015258:	2309      	movne	r3, #9
 801525a:	230a      	moveq	r3, #10
 801525c:	64a3      	str	r3, [r4, #72]	@ 0x48
 801525e:	bd70      	pop	{r4, r5, r6, pc}
 8015260:	2b00      	cmp	r3, #0
 8015262:	db21      	blt.n	80152a8 <omni2_sw_setConfig+0x70>
 8015264:	3601      	adds	r6, #1
 8015266:	d026      	beq.n	80152b6 <omni2_sw_setConfig+0x7e>
 8015268:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801526c:	009b      	lsls	r3, r3, #2
 801526e:	4a16      	ldr	r2, [pc, #88]	@ (80152c8 <omni2_sw_setConfig+0x90>)
 8015270:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8015274:	fb82 1203 	smull	r1, r2, r2, r3
 8015278:	17db      	asrs	r3, r3, #31
 801527a:	ebc3 1362 	rsb	r3, r3, r2, asr #5
 801527e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8015280:	bd70      	pop	{r4, r5, r6, pc}
 8015282:	f891 3108 	ldrb.w	r3, [r1, #264]	@ 0x108
 8015286:	6881      	ldr	r1, [r0, #8]
 8015288:	2b01      	cmp	r3, #1
 801528a:	d008      	beq.n	801529e <omni2_sw_setConfig+0x66>
 801528c:	f504 7086 	add.w	r0, r4, #268	@ 0x10c
 8015290:	f013 f81e 	bl	80282d0 <omni2_sw_init_heap>
 8015294:	2301      	movs	r3, #1
 8015296:	7423      	strb	r3, [r4, #16]
 8015298:	682a      	ldr	r2, [r5, #0]
 801529a:	68ae      	ldr	r6, [r5, #8]
 801529c:	e7d4      	b.n	8015248 <omni2_sw_setConfig+0x10>
 801529e:	6ce6      	ldr	r6, [r4, #76]	@ 0x4c
 80152a0:	42b1      	cmp	r1, r6
 80152a2:	d1f3      	bne.n	801528c <omni2_sw_setConfig+0x54>
 80152a4:	2000      	movs	r0, #0
 80152a6:	e7cf      	b.n	8015248 <omni2_sw_setConfig+0x10>
 80152a8:	3601      	adds	r6, #1
 80152aa:	bf14      	ite	ne
 80152ac:	f06f 030a 	mvnne.w	r3, #10
 80152b0:	2300      	moveq	r3, #0
 80152b2:	64a3      	str	r3, [r4, #72]	@ 0x48
 80152b4:	bd70      	pop	{r4, r5, r6, pc}
 80152b6:	4905      	ldr	r1, [pc, #20]	@ (80152cc <omni2_sw_setConfig+0x94>)
 80152b8:	17da      	asrs	r2, r3, #31
 80152ba:	fb81 1303 	smull	r1, r3, r1, r3
 80152be:	ebc2 03a3 	rsb	r3, r2, r3, asr #2
 80152c2:	64a3      	str	r3, [r4, #72]	@ 0x48
 80152c4:	bd70      	pop	{r4, r5, r6, pc}
 80152c6:	bf00      	nop
 80152c8:	51eb851f 	.word	0x51eb851f
 80152cc:	66666667 	.word	0x66666667

080152d0 <omni2_sw_getConfig>:
 80152d0:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 80152d2:	f891 2108 	ldrb.w	r2, [r1, #264]	@ 0x108
 80152d6:	6083      	str	r3, [r0, #8]
 80152d8:	3301      	adds	r3, #1
 80152da:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
 80152dc:	6002      	str	r2, [r0, #0]
 80152de:	bf15      	itete	ne
 80152e0:	330b      	addne	r3, #11
 80152e2:	eb03 0383 	addeq.w	r3, r3, r3, lsl #2
 80152e6:	eb03 0383 	addne.w	r3, r3, r3, lsl #2
 80152ea:	005b      	lsleq	r3, r3, #1
 80152ec:	6043      	str	r3, [r0, #4]
 80152ee:	2000      	movs	r0, #0
 80152f0:	4770      	bx	lr
 80152f2:	bf00      	nop

080152f4 <omni2_sw_setParam>:
 80152f4:	7802      	ldrb	r2, [r0, #0]
 80152f6:	b538      	push	{r3, r4, r5, lr}
 80152f8:	6883      	ldr	r3, [r0, #8]
 80152fa:	6840      	ldr	r0, [r0, #4]
 80152fc:	f881 2109 	strb.w	r2, [r1, #265]	@ 0x109
 8015300:	460c      	mov	r4, r1
 8015302:	2a01      	cmp	r2, #1
 8015304:	f64a 4144 	movw	r1, #44100	@ 0xac44
 8015308:	bf0c      	ite	eq
 801530a:	2203      	moveq	r2, #3
 801530c:	2202      	movne	r2, #2
 801530e:	428b      	cmp	r3, r1
 8015310:	f884 0092 	strb.w	r0, [r4, #146]	@ 0x92
 8015314:	f8a4 20e0 	strh.w	r2, [r4, #224]	@ 0xe0
 8015318:	f8a4 20e2 	strh.w	r2, [r4, #226]	@ 0xe2
 801531c:	f104 0004 	add.w	r0, r4, #4
 8015320:	d022      	beq.n	8015368 <omni2_sw_setParam+0x74>
 8015322:	f64b 3280 	movw	r2, #48000	@ 0xbb80
 8015326:	4293      	cmp	r3, r2
 8015328:	d01a      	beq.n	8015360 <omni2_sw_setParam+0x6c>
 801532a:	f5b3 4ffa 	cmp.w	r3, #32000	@ 0x7d00
 801532e:	d013      	beq.n	8015358 <omni2_sw_setParam+0x64>
 8015330:	2303      	movs	r3, #3
 8015332:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 8015336:	f013 f87b 	bl	8028430 <omni2_sw_process_buffer_info>
 801533a:	f894 3090 	ldrb.w	r3, [r4, #144]	@ 0x90
 801533e:	f884 37d4 	strb.w	r3, [r4, #2004]	@ 0x7d4
 8015342:	4605      	mov	r5, r0
 8015344:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8015346:	f504 7086 	add.w	r0, r4, #268	@ 0x10c
 801534a:	f012 ffc1 	bl	80282d0 <omni2_sw_init_heap>
 801534e:	2301      	movs	r3, #1
 8015350:	4328      	orrs	r0, r5
 8015352:	b240      	sxtb	r0, r0
 8015354:	7423      	strb	r3, [r4, #16]
 8015356:	bd38      	pop	{r3, r4, r5, pc}
 8015358:	2302      	movs	r3, #2
 801535a:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 801535e:	e7ea      	b.n	8015336 <omni2_sw_setParam+0x42>
 8015360:	2300      	movs	r3, #0
 8015362:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 8015366:	e7e6      	b.n	8015336 <omni2_sw_setParam+0x42>
 8015368:	2301      	movs	r3, #1
 801536a:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 801536e:	e7e2      	b.n	8015336 <omni2_sw_setParam+0x42>

08015370 <omni2_sw_process>:
 8015370:	b570      	push	{r4, r5, r6, lr}
 8015372:	4615      	mov	r5, r2
 8015374:	6802      	ldr	r2, [r0, #0]
 8015376:	69ab      	ldr	r3, [r5, #24]
 8015378:	68c4      	ldr	r4, [r0, #12]
 801537a:	629c      	str	r4, [r3, #40]	@ 0x28
 801537c:	b214      	sxth	r4, r2
 801537e:	859c      	strh	r4, [r3, #44]	@ 0x2c
 8015380:	85dc      	strh	r4, [r3, #46]	@ 0x2e
 8015382:	460e      	mov	r6, r1
 8015384:	1d2c      	adds	r4, r5, #4
 8015386:	b392      	cbz	r2, 80153ee <omni2_sw_process+0x7e>
 8015388:	6881      	ldr	r1, [r0, #8]
 801538a:	6019      	str	r1, [r3, #0]
 801538c:	2a01      	cmp	r2, #1
 801538e:	d029      	beq.n	80153e4 <omni2_sw_process+0x74>
 8015390:	1d08      	adds	r0, r1, #4
 8015392:	2a02      	cmp	r2, #2
 8015394:	6058      	str	r0, [r3, #4]
 8015396:	d025      	beq.n	80153e4 <omni2_sw_process+0x74>
 8015398:	f101 0008 	add.w	r0, r1, #8
 801539c:	2a03      	cmp	r2, #3
 801539e:	6098      	str	r0, [r3, #8]
 80153a0:	d020      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153a2:	f101 000c 	add.w	r0, r1, #12
 80153a6:	2a04      	cmp	r2, #4
 80153a8:	60d8      	str	r0, [r3, #12]
 80153aa:	d01b      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153ac:	f101 0010 	add.w	r0, r1, #16
 80153b0:	2a05      	cmp	r2, #5
 80153b2:	6118      	str	r0, [r3, #16]
 80153b4:	d016      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153b6:	f101 0014 	add.w	r0, r1, #20
 80153ba:	2a06      	cmp	r2, #6
 80153bc:	6158      	str	r0, [r3, #20]
 80153be:	d011      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153c0:	f101 0018 	add.w	r0, r1, #24
 80153c4:	2a07      	cmp	r2, #7
 80153c6:	6198      	str	r0, [r3, #24]
 80153c8:	d00c      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153ca:	f101 001c 	add.w	r0, r1, #28
 80153ce:	2a08      	cmp	r2, #8
 80153d0:	61d8      	str	r0, [r3, #28]
 80153d2:	d007      	beq.n	80153e4 <omni2_sw_process+0x74>
 80153d4:	2a09      	cmp	r2, #9
 80153d6:	f101 0020 	add.w	r0, r1, #32
 80153da:	bf18      	it	ne
 80153dc:	3124      	addne	r1, #36	@ 0x24
 80153de:	6218      	str	r0, [r3, #32]
 80153e0:	bf18      	it	ne
 80153e2:	6259      	strne	r1, [r3, #36]	@ 0x24
 80153e4:	f103 0033 	add.w	r0, r3, #51	@ 0x33
 80153e8:	2101      	movs	r1, #1
 80153ea:	f018 fbb3 	bl	802db54 <memset>
 80153ee:	6832      	ldr	r2, [r6, #0]
 80153f0:	b372      	cbz	r2, 8015450 <omni2_sw_process+0xe0>
 80153f2:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 80153f4:	68b3      	ldr	r3, [r6, #8]
 80153f6:	600b      	str	r3, [r1, #0]
 80153f8:	2a01      	cmp	r2, #1
 80153fa:	d029      	beq.n	8015450 <omni2_sw_process+0xe0>
 80153fc:	1d18      	adds	r0, r3, #4
 80153fe:	2a02      	cmp	r2, #2
 8015400:	6048      	str	r0, [r1, #4]
 8015402:	d025      	beq.n	8015450 <omni2_sw_process+0xe0>
 8015404:	f103 0008 	add.w	r0, r3, #8
 8015408:	2a03      	cmp	r2, #3
 801540a:	6088      	str	r0, [r1, #8]
 801540c:	d020      	beq.n	8015450 <omni2_sw_process+0xe0>
 801540e:	f103 000c 	add.w	r0, r3, #12
 8015412:	2a04      	cmp	r2, #4
 8015414:	60c8      	str	r0, [r1, #12]
 8015416:	d01b      	beq.n	8015450 <omni2_sw_process+0xe0>
 8015418:	f103 0010 	add.w	r0, r3, #16
 801541c:	2a05      	cmp	r2, #5
 801541e:	6108      	str	r0, [r1, #16]
 8015420:	d016      	beq.n	8015450 <omni2_sw_process+0xe0>
 8015422:	f103 0014 	add.w	r0, r3, #20
 8015426:	2a06      	cmp	r2, #6
 8015428:	6148      	str	r0, [r1, #20]
 801542a:	d011      	beq.n	8015450 <omni2_sw_process+0xe0>
 801542c:	f103 0018 	add.w	r0, r3, #24
 8015430:	2a07      	cmp	r2, #7
 8015432:	6188      	str	r0, [r1, #24]
 8015434:	d00c      	beq.n	8015450 <omni2_sw_process+0xe0>
 8015436:	f103 001c 	add.w	r0, r3, #28
 801543a:	2a08      	cmp	r2, #8
 801543c:	61c8      	str	r0, [r1, #28]
 801543e:	d007      	beq.n	8015450 <omni2_sw_process+0xe0>
 8015440:	2a09      	cmp	r2, #9
 8015442:	f103 0020 	add.w	r0, r3, #32
 8015446:	bf18      	it	ne
 8015448:	3324      	addne	r3, #36	@ 0x24
 801544a:	6208      	str	r0, [r1, #32]
 801544c:	bf18      	it	ne
 801544e:	624b      	strne	r3, [r1, #36]	@ 0x24
 8015450:	4620      	mov	r0, r4
 8015452:	f012 fe0f 	bl	8028074 <omni2_sw_decode>
 8015456:	2000      	movs	r0, #0
 8015458:	bd70      	pop	{r4, r5, r6, pc}
 801545a:	bf00      	nop

0801545c <omni2_reset>:
 801545c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015460:	4605      	mov	r5, r0
 8015462:	4604      	mov	r4, r0
 8015464:	f845 1b50 	str.w	r1, [r5], #80
 8015468:	1d07      	adds	r7, r0, #4
 801546a:	4689      	mov	r9, r1
 801546c:	f104 0860 	add.w	r8, r4, #96	@ 0x60
 8015470:	2654      	movs	r6, #84	@ 0x54
 8015472:	4638      	mov	r0, r7
 8015474:	224c      	movs	r2, #76	@ 0x4c
 8015476:	2100      	movs	r1, #0
 8015478:	f018 fb6c 	bl	802db54 <memset>
 801547c:	60e5      	str	r5, [r4, #12]
 801547e:	4632      	mov	r2, r6
 8015480:	f104 05b4 	add.w	r5, r4, #180	@ 0xb4
 8015484:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
 8015488:	4640      	mov	r0, r8
 801548a:	2100      	movs	r1, #0
 801548c:	f018 fb62 	bl	802db54 <memset>
 8015490:	4632      	mov	r2, r6
 8015492:	4628      	mov	r0, r5
 8015494:	2100      	movs	r1, #0
 8015496:	f018 fb5d 	bl	802db54 <memset>
 801549a:	f504 7686 	add.w	r6, r4, #268	@ 0x10c
 801549e:	2300      	movs	r3, #0
 80154a0:	2202      	movs	r2, #2
 80154a2:	2101      	movs	r1, #1
 80154a4:	f504 7c84 	add.w	ip, r4, #264	@ 0x108
 80154a8:	f04f 0e1e 	mov.w	lr, #30
 80154ac:	6325      	str	r5, [r4, #48]	@ 0x30
 80154ae:	f8c4 c028 	str.w	ip, [r4, #40]	@ 0x28
 80154b2:	f8c4 e04c 	str.w	lr, [r4, #76]	@ 0x4c
 80154b6:	7421      	strb	r1, [r4, #16]
 80154b8:	6161      	str	r1, [r4, #20]
 80154ba:	62e1      	str	r1, [r4, #44]	@ 0x2c
 80154bc:	6423      	str	r3, [r4, #64]	@ 0x40
 80154be:	f884 3108 	strb.w	r3, [r4, #264]	@ 0x108
 80154c2:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 80154c6:	64a3      	str	r3, [r4, #72]	@ 0x48
 80154c8:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
 80154cc:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 80154d0:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
 80154d4:	f8a4 20e0 	strh.w	r2, [r4, #224]	@ 0xe0
 80154d8:	f8a4 20e2 	strh.w	r2, [r4, #226]	@ 0xe2
 80154dc:	f8c4 8018 	str.w	r8, [r4, #24]
 80154e0:	4638      	mov	r0, r7
 80154e2:	6066      	str	r6, [r4, #4]
 80154e4:	f011 fb64 	bl	8026bb0 <omni2_process_buffer_info>
 80154e8:	f894 3090 	ldrb.w	r3, [r4, #144]	@ 0x90
 80154ec:	f884 3be4 	strb.w	r3, [r4, #3044]	@ 0xbe4
 80154f0:	4605      	mov	r5, r0
 80154f2:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 80154f4:	4630      	mov	r0, r6
 80154f6:	f011 fa2b 	bl	8026950 <omni2_init_heap>
 80154fa:	4328      	orrs	r0, r5
 80154fc:	b240      	sxtb	r0, r0
 80154fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015502:	bf00      	nop

08015504 <omni2_setConfig>:
 8015504:	6802      	ldr	r2, [r0, #0]
 8015506:	2a01      	cmp	r2, #1
 8015508:	b570      	push	{r4, r5, r6, lr}
 801550a:	4605      	mov	r5, r0
 801550c:	460c      	mov	r4, r1
 801550e:	d01e      	beq.n	801554e <omni2_setConfig+0x4a>
 8015510:	6886      	ldr	r6, [r0, #8]
 8015512:	2000      	movs	r0, #0
 8015514:	686b      	ldr	r3, [r5, #4]
 8015516:	f884 2108 	strb.w	r2, [r4, #264]	@ 0x108
 801551a:	2b64      	cmp	r3, #100	@ 0x64
 801551c:	64e6      	str	r6, [r4, #76]	@ 0x4c
 801551e:	dd05      	ble.n	801552c <omni2_setConfig+0x28>
 8015520:	3601      	adds	r6, #1
 8015522:	bf14      	ite	ne
 8015524:	2309      	movne	r3, #9
 8015526:	230a      	moveq	r3, #10
 8015528:	64a3      	str	r3, [r4, #72]	@ 0x48
 801552a:	bd70      	pop	{r4, r5, r6, pc}
 801552c:	2b00      	cmp	r3, #0
 801552e:	db21      	blt.n	8015574 <omni2_setConfig+0x70>
 8015530:	3601      	adds	r6, #1
 8015532:	d026      	beq.n	8015582 <omni2_setConfig+0x7e>
 8015534:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015538:	009b      	lsls	r3, r3, #2
 801553a:	4a16      	ldr	r2, [pc, #88]	@ (8015594 <omni2_setConfig+0x90>)
 801553c:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8015540:	fb82 1203 	smull	r1, r2, r2, r3
 8015544:	17db      	asrs	r3, r3, #31
 8015546:	ebc3 1362 	rsb	r3, r3, r2, asr #5
 801554a:	64a3      	str	r3, [r4, #72]	@ 0x48
 801554c:	bd70      	pop	{r4, r5, r6, pc}
 801554e:	f891 3108 	ldrb.w	r3, [r1, #264]	@ 0x108
 8015552:	6881      	ldr	r1, [r0, #8]
 8015554:	2b01      	cmp	r3, #1
 8015556:	d008      	beq.n	801556a <omni2_setConfig+0x66>
 8015558:	f504 7086 	add.w	r0, r4, #268	@ 0x10c
 801555c:	f011 f9f8 	bl	8026950 <omni2_init_heap>
 8015560:	2301      	movs	r3, #1
 8015562:	7423      	strb	r3, [r4, #16]
 8015564:	682a      	ldr	r2, [r5, #0]
 8015566:	68ae      	ldr	r6, [r5, #8]
 8015568:	e7d4      	b.n	8015514 <omni2_setConfig+0x10>
 801556a:	6ce6      	ldr	r6, [r4, #76]	@ 0x4c
 801556c:	42b1      	cmp	r1, r6
 801556e:	d1f3      	bne.n	8015558 <omni2_setConfig+0x54>
 8015570:	2000      	movs	r0, #0
 8015572:	e7cf      	b.n	8015514 <omni2_setConfig+0x10>
 8015574:	3601      	adds	r6, #1
 8015576:	bf14      	ite	ne
 8015578:	f06f 030a 	mvnne.w	r3, #10
 801557c:	2300      	moveq	r3, #0
 801557e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8015580:	bd70      	pop	{r4, r5, r6, pc}
 8015582:	4905      	ldr	r1, [pc, #20]	@ (8015598 <omni2_setConfig+0x94>)
 8015584:	17da      	asrs	r2, r3, #31
 8015586:	fb81 1303 	smull	r1, r3, r1, r3
 801558a:	ebc2 03a3 	rsb	r3, r2, r3, asr #2
 801558e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8015590:	bd70      	pop	{r4, r5, r6, pc}
 8015592:	bf00      	nop
 8015594:	51eb851f 	.word	0x51eb851f
 8015598:	66666667 	.word	0x66666667

0801559c <omni2_getConfig>:
 801559c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801559e:	f891 2108 	ldrb.w	r2, [r1, #264]	@ 0x108
 80155a2:	6083      	str	r3, [r0, #8]
 80155a4:	3301      	adds	r3, #1
 80155a6:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
 80155a8:	6002      	str	r2, [r0, #0]
 80155aa:	bf15      	itete	ne
 80155ac:	330b      	addne	r3, #11
 80155ae:	eb03 0383 	addeq.w	r3, r3, r3, lsl #2
 80155b2:	eb03 0383 	addne.w	r3, r3, r3, lsl #2
 80155b6:	005b      	lsleq	r3, r3, #1
 80155b8:	6043      	str	r3, [r0, #4]
 80155ba:	2000      	movs	r0, #0
 80155bc:	4770      	bx	lr
 80155be:	bf00      	nop

080155c0 <omni2_setParam>:
 80155c0:	7802      	ldrb	r2, [r0, #0]
 80155c2:	b538      	push	{r3, r4, r5, lr}
 80155c4:	6883      	ldr	r3, [r0, #8]
 80155c6:	6840      	ldr	r0, [r0, #4]
 80155c8:	f881 2109 	strb.w	r2, [r1, #265]	@ 0x109
 80155cc:	460c      	mov	r4, r1
 80155ce:	2a01      	cmp	r2, #1
 80155d0:	f64a 4144 	movw	r1, #44100	@ 0xac44
 80155d4:	bf0c      	ite	eq
 80155d6:	2203      	moveq	r2, #3
 80155d8:	2202      	movne	r2, #2
 80155da:	428b      	cmp	r3, r1
 80155dc:	f884 0092 	strb.w	r0, [r4, #146]	@ 0x92
 80155e0:	f8a4 20e0 	strh.w	r2, [r4, #224]	@ 0xe0
 80155e4:	f8a4 20e2 	strh.w	r2, [r4, #226]	@ 0xe2
 80155e8:	f104 0004 	add.w	r0, r4, #4
 80155ec:	d022      	beq.n	8015634 <omni2_setParam+0x74>
 80155ee:	f64b 3280 	movw	r2, #48000	@ 0xbb80
 80155f2:	4293      	cmp	r3, r2
 80155f4:	d01a      	beq.n	801562c <omni2_setParam+0x6c>
 80155f6:	f5b3 4ffa 	cmp.w	r3, #32000	@ 0x7d00
 80155fa:	d013      	beq.n	8015624 <omni2_setParam+0x64>
 80155fc:	2303      	movs	r3, #3
 80155fe:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 8015602:	f011 fad5 	bl	8026bb0 <omni2_process_buffer_info>
 8015606:	f894 3090 	ldrb.w	r3, [r4, #144]	@ 0x90
 801560a:	f884 3be4 	strb.w	r3, [r4, #3044]	@ 0xbe4
 801560e:	4605      	mov	r5, r0
 8015610:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8015612:	f504 7086 	add.w	r0, r4, #268	@ 0x10c
 8015616:	f011 f99b 	bl	8026950 <omni2_init_heap>
 801561a:	2301      	movs	r3, #1
 801561c:	4328      	orrs	r0, r5
 801561e:	b240      	sxtb	r0, r0
 8015620:	7423      	strb	r3, [r4, #16]
 8015622:	bd38      	pop	{r3, r4, r5, pc}
 8015624:	2302      	movs	r3, #2
 8015626:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 801562a:	e7ea      	b.n	8015602 <omni2_setParam+0x42>
 801562c:	2300      	movs	r3, #0
 801562e:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 8015632:	e7e6      	b.n	8015602 <omni2_setParam+0x42>
 8015634:	2301      	movs	r3, #1
 8015636:	f884 3090 	strb.w	r3, [r4, #144]	@ 0x90
 801563a:	e7e2      	b.n	8015602 <omni2_setParam+0x42>

0801563c <omni2_process>:
 801563c:	b570      	push	{r4, r5, r6, lr}
 801563e:	4615      	mov	r5, r2
 8015640:	6802      	ldr	r2, [r0, #0]
 8015642:	69ab      	ldr	r3, [r5, #24]
 8015644:	68c4      	ldr	r4, [r0, #12]
 8015646:	629c      	str	r4, [r3, #40]	@ 0x28
 8015648:	b214      	sxth	r4, r2
 801564a:	859c      	strh	r4, [r3, #44]	@ 0x2c
 801564c:	85dc      	strh	r4, [r3, #46]	@ 0x2e
 801564e:	460e      	mov	r6, r1
 8015650:	1d2c      	adds	r4, r5, #4
 8015652:	b392      	cbz	r2, 80156ba <omni2_process+0x7e>
 8015654:	6881      	ldr	r1, [r0, #8]
 8015656:	6019      	str	r1, [r3, #0]
 8015658:	2a01      	cmp	r2, #1
 801565a:	d029      	beq.n	80156b0 <omni2_process+0x74>
 801565c:	1d08      	adds	r0, r1, #4
 801565e:	2a02      	cmp	r2, #2
 8015660:	6058      	str	r0, [r3, #4]
 8015662:	d025      	beq.n	80156b0 <omni2_process+0x74>
 8015664:	f101 0008 	add.w	r0, r1, #8
 8015668:	2a03      	cmp	r2, #3
 801566a:	6098      	str	r0, [r3, #8]
 801566c:	d020      	beq.n	80156b0 <omni2_process+0x74>
 801566e:	f101 000c 	add.w	r0, r1, #12
 8015672:	2a04      	cmp	r2, #4
 8015674:	60d8      	str	r0, [r3, #12]
 8015676:	d01b      	beq.n	80156b0 <omni2_process+0x74>
 8015678:	f101 0010 	add.w	r0, r1, #16
 801567c:	2a05      	cmp	r2, #5
 801567e:	6118      	str	r0, [r3, #16]
 8015680:	d016      	beq.n	80156b0 <omni2_process+0x74>
 8015682:	f101 0014 	add.w	r0, r1, #20
 8015686:	2a06      	cmp	r2, #6
 8015688:	6158      	str	r0, [r3, #20]
 801568a:	d011      	beq.n	80156b0 <omni2_process+0x74>
 801568c:	f101 0018 	add.w	r0, r1, #24
 8015690:	2a07      	cmp	r2, #7
 8015692:	6198      	str	r0, [r3, #24]
 8015694:	d00c      	beq.n	80156b0 <omni2_process+0x74>
 8015696:	f101 001c 	add.w	r0, r1, #28
 801569a:	2a08      	cmp	r2, #8
 801569c:	61d8      	str	r0, [r3, #28]
 801569e:	d007      	beq.n	80156b0 <omni2_process+0x74>
 80156a0:	2a09      	cmp	r2, #9
 80156a2:	f101 0020 	add.w	r0, r1, #32
 80156a6:	bf18      	it	ne
 80156a8:	3124      	addne	r1, #36	@ 0x24
 80156aa:	6218      	str	r0, [r3, #32]
 80156ac:	bf18      	it	ne
 80156ae:	6259      	strne	r1, [r3, #36]	@ 0x24
 80156b0:	f103 0033 	add.w	r0, r3, #51	@ 0x33
 80156b4:	2101      	movs	r1, #1
 80156b6:	f018 fa4d 	bl	802db54 <memset>
 80156ba:	6832      	ldr	r2, [r6, #0]
 80156bc:	b372      	cbz	r2, 801571c <omni2_process+0xe0>
 80156be:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 80156c0:	68b3      	ldr	r3, [r6, #8]
 80156c2:	600b      	str	r3, [r1, #0]
 80156c4:	2a01      	cmp	r2, #1
 80156c6:	d029      	beq.n	801571c <omni2_process+0xe0>
 80156c8:	1d18      	adds	r0, r3, #4
 80156ca:	2a02      	cmp	r2, #2
 80156cc:	6048      	str	r0, [r1, #4]
 80156ce:	d025      	beq.n	801571c <omni2_process+0xe0>
 80156d0:	f103 0008 	add.w	r0, r3, #8
 80156d4:	2a03      	cmp	r2, #3
 80156d6:	6088      	str	r0, [r1, #8]
 80156d8:	d020      	beq.n	801571c <omni2_process+0xe0>
 80156da:	f103 000c 	add.w	r0, r3, #12
 80156de:	2a04      	cmp	r2, #4
 80156e0:	60c8      	str	r0, [r1, #12]
 80156e2:	d01b      	beq.n	801571c <omni2_process+0xe0>
 80156e4:	f103 0010 	add.w	r0, r3, #16
 80156e8:	2a05      	cmp	r2, #5
 80156ea:	6108      	str	r0, [r1, #16]
 80156ec:	d016      	beq.n	801571c <omni2_process+0xe0>
 80156ee:	f103 0014 	add.w	r0, r3, #20
 80156f2:	2a06      	cmp	r2, #6
 80156f4:	6148      	str	r0, [r1, #20]
 80156f6:	d011      	beq.n	801571c <omni2_process+0xe0>
 80156f8:	f103 0018 	add.w	r0, r3, #24
 80156fc:	2a07      	cmp	r2, #7
 80156fe:	6188      	str	r0, [r1, #24]
 8015700:	d00c      	beq.n	801571c <omni2_process+0xe0>
 8015702:	f103 001c 	add.w	r0, r3, #28
 8015706:	2a08      	cmp	r2, #8
 8015708:	61c8      	str	r0, [r1, #28]
 801570a:	d007      	beq.n	801571c <omni2_process+0xe0>
 801570c:	2a09      	cmp	r2, #9
 801570e:	f103 0020 	add.w	r0, r3, #32
 8015712:	bf18      	it	ne
 8015714:	3324      	addne	r3, #36	@ 0x24
 8015716:	6208      	str	r0, [r1, #32]
 8015718:	bf18      	it	ne
 801571a:	624b      	strne	r3, [r1, #36]	@ 0x24
 801571c:	4620      	mov	r0, r4
 801571e:	f010 ffdb 	bl	80266d8 <omni2_decode>
 8015722:	2000      	movs	r0, #0
 8015724:	bd70      	pop	{r4, r5, r6, pc}
 8015726:	bf00      	nop

08015728 <awe_parserResetAccessArray>:
 8015728:	f8d0 3128 	ldr.w	r3, [r0, #296]	@ 0x128
 801572c:	2200      	movs	r2, #0
 801572e:	609a      	str	r2, [r3, #8]
 8015730:	4770      	bx	lr
 8015732:	bf00      	nop

08015734 <awe_parserGetWordsArray>:
 8015734:	b538      	push	{r3, r4, r5, lr}
 8015736:	4603      	mov	r3, r0
 8015738:	3018      	adds	r0, #24
 801573a:	f8d3 5128 	ldr.w	r5, [r3, #296]	@ 0x128
 801573e:	e9d5 4301 	ldrd	r4, r3, [r5, #4]
 8015742:	1ae4      	subs	r4, r4, r3
 8015744:	682a      	ldr	r2, [r5, #0]
 8015746:	428c      	cmp	r4, r1
 8015748:	bf28      	it	cs
 801574a:	460c      	movcs	r4, r1
 801574c:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8015750:	00a2      	lsls	r2, r4, #2
 8015752:	f018 fa7a 	bl	802dc4a <memcpy>
 8015756:	68ab      	ldr	r3, [r5, #8]
 8015758:	4423      	add	r3, r4
 801575a:	60ab      	str	r3, [r5, #8]
 801575c:	4620      	mov	r0, r4
 801575e:	bd38      	pop	{r3, r4, r5, pc}

08015760 <awe_loadAWBfromArrayCustomPacketProcess>:
 8015760:	2800      	cmp	r0, #0
 8015762:	d031      	beq.n	80157c8 <awe_loadAWBfromArrayCustomPacketProcess+0x68>
 8015764:	2900      	cmp	r1, #0
 8015766:	d02c      	beq.n	80157c2 <awe_loadAWBfromArrayCustomPacketProcess+0x62>
 8015768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801576c:	b0d6      	sub	sp, #344	@ 0x158
 801576e:	4605      	mov	r5, r0
 8015770:	460e      	mov	r6, r1
 8015772:	4917      	ldr	r1, [pc, #92]	@ (80157d0 <awe_loadAWBfromArrayCustomPacketProcess+0x70>)
 8015774:	9107      	str	r1, [sp, #28]
 8015776:	2400      	movs	r4, #0
 8015778:	4617      	mov	r7, r2
 801577a:	a907      	add	r1, sp, #28
 801577c:	aa04      	add	r2, sp, #16
 801577e:	4698      	mov	r8, r3
 8015780:	4b14      	ldr	r3, [pc, #80]	@ (80157d4 <awe_loadAWBfromArrayCustomPacketProcess+0x74>)
 8015782:	9308      	str	r3, [sp, #32]
 8015784:	9251      	str	r2, [sp, #324]	@ 0x144
 8015786:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801578a:	9406      	str	r4, [sp, #24]
 801578c:	944d      	str	r4, [sp, #308]	@ 0x134
 801578e:	944e      	str	r4, [sp, #312]	@ 0x138
 8015790:	944f      	str	r4, [sp, #316]	@ 0x13c
 8015792:	9450      	str	r4, [sp, #320]	@ 0x140
 8015794:	f000 ffb2 	bl	80166fc <awe_parserInitSharedData>
 8015798:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 801579a:	b179      	cbz	r1, 80157bc <awe_loadAWBfromArrayCustomPacketProcess+0x5c>
 801579c:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
 801579e:	b16a      	cbz	r2, 80157bc <awe_loadAWBfromArrayCustomPacketProcess+0x5c>
 80157a0:	9b5d      	ldr	r3, [sp, #372]	@ 0x174
 80157a2:	9303      	str	r3, [sp, #12]
 80157a4:	9b5c      	ldr	r3, [sp, #368]	@ 0x170
 80157a6:	e9cd 8301 	strd	r8, r3, [sp, #4]
 80157aa:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
 80157ac:	9300      	str	r3, [sp, #0]
 80157ae:	a807      	add	r0, sp, #28
 80157b0:	463b      	mov	r3, r7
 80157b2:	f000 ffb7 	bl	8016724 <awe_parserLoadAWB>
 80157b6:	b056      	add	sp, #344	@ 0x158
 80157b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80157bc:	f06f 0049 	mvn.w	r0, #73	@ 0x49
 80157c0:	e7f9      	b.n	80157b6 <awe_loadAWBfromArrayCustomPacketProcess+0x56>
 80157c2:	f06f 0026 	mvn.w	r0, #38	@ 0x26
 80157c6:	4770      	bx	lr
 80157c8:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 80157cc:	4770      	bx	lr
 80157ce:	bf00      	nop
 80157d0:	08015735 	.word	0x08015735
 80157d4:	08015729 	.word	0x08015729

080157d8 <awe_loadAWBfromArray>:
 80157d8:	b510      	push	{r4, lr}
 80157da:	4c04      	ldr	r4, [pc, #16]	@ (80157ec <awe_loadAWBfromArray+0x14>)
 80157dc:	b082      	sub	sp, #8
 80157de:	e9cd 4000 	strd	r4, r0, [sp]
 80157e2:	f7ff ffbd 	bl	8015760 <awe_loadAWBfromArrayCustomPacketProcess>
 80157e6:	b002      	add	sp, #8
 80157e8:	bd10      	pop	{r4, pc}
 80157ea:	bf00      	nop
 80157ec:	08015a31 	.word	0x08015a31

080157f0 <awe_parserGetWordsFlash>:
 80157f0:	b538      	push	{r3, r4, r5, lr}
 80157f2:	f8d0 5128 	ldr.w	r5, [r0, #296]	@ 0x128
 80157f6:	e9d5 4202 	ldrd	r4, r2, [r5, #8]
 80157fa:	1aa4      	subs	r4, r4, r2
 80157fc:	428c      	cmp	r4, r1
 80157fe:	bf28      	it	cs
 8015800:	460c      	movcs	r4, r1
 8015802:	f100 0318 	add.w	r3, r0, #24
 8015806:	00a2      	lsls	r2, r4, #2
 8015808:	4618      	mov	r0, r3
 801580a:	2100      	movs	r1, #0
 801580c:	f018 f9a2 	bl	802db54 <memset>
 8015810:	4621      	mov	r1, r4
 8015812:	4602      	mov	r2, r0
 8015814:	2300      	movs	r3, #0
 8015816:	6828      	ldr	r0, [r5, #0]
 8015818:	f7f2 fc9c 	bl	8008154 <awe_fwReadFile>
 801581c:	68eb      	ldr	r3, [r5, #12]
 801581e:	2800      	cmp	r0, #0
 8015820:	bf18      	it	ne
 8015822:	2400      	movne	r4, #0
 8015824:	4423      	add	r3, r4
 8015826:	60eb      	str	r3, [r5, #12]
 8015828:	4620      	mov	r0, r4
 801582a:	bd38      	pop	{r3, r4, r5, pc}

0801582c <awe_parserResetAccessFlash>:
 801582c:	b538      	push	{r3, r4, r5, lr}
 801582e:	f8d0 4128 	ldr.w	r4, [r0, #296]	@ 0x128
 8015832:	4625      	mov	r5, r4
 8015834:	f855 0b08 	ldr.w	r0, [r5], #8
 8015838:	f7f2 f98a 	bl	8007b50 <awe_fwCloseFile>
 801583c:	462b      	mov	r3, r5
 801583e:	e9d4 0200 	ldrd	r0, r2, [r4]
 8015842:	2100      	movs	r1, #0
 8015844:	f7f2 fdbe 	bl	80083c4 <awe_fwOpenFile>
 8015848:	2300      	movs	r3, #0
 801584a:	60e3      	str	r3, [r4, #12]
 801584c:	bd38      	pop	{r3, r4, r5, pc}
 801584e:	bf00      	nop

08015850 <awe_loadAWBfromFlashCustomPacketProcess>:
 8015850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015854:	b0d9      	sub	sp, #356	@ 0x164
 8015856:	2800      	cmp	r0, #0
 8015858:	d04b      	beq.n	80158f2 <awe_loadAWBfromFlashCustomPacketProcess+0xa2>
 801585a:	2900      	cmp	r1, #0
 801585c:	d03a      	beq.n	80158d4 <awe_loadAWBfromFlashCustomPacketProcess+0x84>
 801585e:	4699      	mov	r9, r3
 8015860:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8015862:	4604      	mov	r4, r0
 8015864:	4690      	mov	r8, r2
 8015866:	460e      	mov	r6, r1
 8015868:	2b00      	cmp	r3, #0
 801586a:	d045      	beq.n	80158f8 <awe_loadAWBfromFlashCustomPacketProcess+0xa8>
 801586c:	af05      	add	r7, sp, #20
 801586e:	2500      	movs	r5, #0
 8015870:	4a23      	ldr	r2, [pc, #140]	@ (8015900 <awe_loadAWBfromFlashCustomPacketProcess+0xb0>)
 8015872:	4924      	ldr	r1, [pc, #144]	@ (8015904 <awe_loadAWBfromFlashCustomPacketProcess+0xb4>)
 8015874:	9209      	str	r2, [sp, #36]	@ 0x24
 8015876:	4618      	mov	r0, r3
 8015878:	910a      	str	r1, [sp, #40]	@ 0x28
 801587a:	603b      	str	r3, [r7, #0]
 801587c:	4632      	mov	r2, r6
 801587e:	4629      	mov	r1, r5
 8015880:	ab07      	add	r3, sp, #28
 8015882:	9753      	str	r7, [sp, #332]	@ 0x14c
 8015884:	607e      	str	r6, [r7, #4]
 8015886:	954f      	str	r5, [sp, #316]	@ 0x13c
 8015888:	9550      	str	r5, [sp, #320]	@ 0x140
 801588a:	9551      	str	r5, [sp, #324]	@ 0x144
 801588c:	9552      	str	r5, [sp, #328]	@ 0x148
 801588e:	f7f2 fd99 	bl	80083c4 <awe_fwOpenFile>
 8015892:	42a8      	cmp	r0, r5
 8015894:	db21      	blt.n	80158da <awe_loadAWBfromFlashCustomPacketProcess+0x8a>
 8015896:	a909      	add	r1, sp, #36	@ 0x24
 8015898:	4620      	mov	r0, r4
 801589a:	60fd      	str	r5, [r7, #12]
 801589c:	f000 ff2e 	bl	80166fc <awe_parserInitSharedData>
 80158a0:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80158a2:	b171      	cbz	r1, 80158c2 <awe_loadAWBfromFlashCustomPacketProcess+0x72>
 80158a4:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80158a6:	b162      	cbz	r2, 80158c2 <awe_loadAWBfromFlashCustomPacketProcess+0x72>
 80158a8:	9b60      	ldr	r3, [sp, #384]	@ 0x180
 80158aa:	f8cd 8004 	str.w	r8, [sp, #4]
 80158ae:	e9cd 9302 	strd	r9, r3, [sp, #8]
 80158b2:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80158b4:	68bb      	ldr	r3, [r7, #8]
 80158b6:	9000      	str	r0, [sp, #0]
 80158b8:	a809      	add	r0, sp, #36	@ 0x24
 80158ba:	f000 ff33 	bl	8016724 <awe_parserLoadAWB>
 80158be:	4604      	mov	r4, r0
 80158c0:	e001      	b.n	80158c6 <awe_loadAWBfromFlashCustomPacketProcess+0x76>
 80158c2:	f06f 0449 	mvn.w	r4, #73	@ 0x49
 80158c6:	6838      	ldr	r0, [r7, #0]
 80158c8:	f7f2 f942 	bl	8007b50 <awe_fwCloseFile>
 80158cc:	4620      	mov	r0, r4
 80158ce:	b059      	add	sp, #356	@ 0x164
 80158d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80158d4:	f06f 0426 	mvn.w	r4, #38	@ 0x26
 80158d8:	e7f8      	b.n	80158cc <awe_loadAWBfromFlashCustomPacketProcess+0x7c>
 80158da:	f06f 042a 	mvn.w	r4, #42	@ 0x2a
 80158de:	f1b8 0f00 	cmp.w	r8, #0
 80158e2:	d0f3      	beq.n	80158cc <awe_loadAWBfromFlashCustomPacketProcess+0x7c>
 80158e4:	2300      	movs	r3, #0
 80158e6:	4620      	mov	r0, r4
 80158e8:	f8c8 3000 	str.w	r3, [r8]
 80158ec:	b059      	add	sp, #356	@ 0x164
 80158ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80158f2:	f06f 0450 	mvn.w	r4, #80	@ 0x50
 80158f6:	e7e9      	b.n	80158cc <awe_loadAWBfromFlashCustomPacketProcess+0x7c>
 80158f8:	f06f 0450 	mvn.w	r4, #80	@ 0x50
 80158fc:	e7ef      	b.n	80158de <awe_loadAWBfromFlashCustomPacketProcess+0x8e>
 80158fe:	bf00      	nop
 8015900:	080157f1 	.word	0x080157f1
 8015904:	0801582d 	.word	0x0801582d

08015908 <awe_loadAWBfromFlash>:
 8015908:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801590c:	f5ad 7d1c 	sub.w	sp, sp, #624	@ 0x270
 8015910:	2800      	cmp	r0, #0
 8015912:	d067      	beq.n	80159e4 <awe_loadAWBfromFlash+0xdc>
 8015914:	6e05      	ldr	r5, [r0, #96]	@ 0x60
 8015916:	2d00      	cmp	r5, #0
 8015918:	d064      	beq.n	80159e4 <awe_loadAWBfromFlash+0xdc>
 801591a:	4604      	mov	r4, r0
 801591c:	4690      	mov	r8, r2
 801591e:	460e      	mov	r6, r1
 8015920:	a809      	add	r0, sp, #36	@ 0x24
 8015922:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8015926:	4629      	mov	r1, r5
 8015928:	f018 f98f 	bl	802dc4a <memcpy>
 801592c:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8015930:	f1b9 0f00 	cmp.w	r9, #0
 8015934:	d04c      	beq.n	80159d0 <awe_loadAWBfromFlash+0xc8>
 8015936:	2e00      	cmp	r6, #0
 8015938:	d057      	beq.n	80159ea <awe_loadAWBfromFlash+0xe2>
 801593a:	2700      	movs	r7, #0
 801593c:	f10d 0a14 	add.w	sl, sp, #20
 8015940:	4a2b      	ldr	r2, [pc, #172]	@ (80159f0 <awe_loadAWBfromFlash+0xe8>)
 8015942:	4b2c      	ldr	r3, [pc, #176]	@ (80159f4 <awe_loadAWBfromFlash+0xec>)
 8015944:	924d      	str	r2, [sp, #308]	@ 0x134
 8015946:	934e      	str	r3, [sp, #312]	@ 0x138
 8015948:	4632      	mov	r2, r6
 801594a:	4628      	mov	r0, r5
 801594c:	4639      	mov	r1, r7
 801594e:	ab07      	add	r3, sp, #28
 8015950:	f8cd a25c 	str.w	sl, [sp, #604]	@ 0x25c
 8015954:	f8ca 5000 	str.w	r5, [sl]
 8015958:	f8ca 6004 	str.w	r6, [sl, #4]
 801595c:	9793      	str	r7, [sp, #588]	@ 0x24c
 801595e:	9794      	str	r7, [sp, #592]	@ 0x250
 8015960:	9795      	str	r7, [sp, #596]	@ 0x254
 8015962:	9796      	str	r7, [sp, #600]	@ 0x258
 8015964:	f7f2 fd2e 	bl	80083c4 <awe_fwOpenFile>
 8015968:	42b8      	cmp	r0, r7
 801596a:	db28      	blt.n	80159be <awe_loadAWBfromFlash+0xb6>
 801596c:	a94d      	add	r1, sp, #308	@ 0x134
 801596e:	4620      	mov	r0, r4
 8015970:	f8ca 700c 	str.w	r7, [sl, #12]
 8015974:	f000 fec2 	bl	80166fc <awe_parserInitSharedData>
 8015978:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801597a:	b171      	cbz	r1, 801599a <awe_loadAWBfromFlash+0x92>
 801597c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 801597e:	b162      	cbz	r2, 801599a <awe_loadAWBfromFlash+0x92>
 8015980:	e9cd 9402 	strd	r9, r4, [sp, #8]
 8015984:	f8cd 8004 	str.w	r8, [sp, #4]
 8015988:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 801598a:	f8da 3008 	ldr.w	r3, [sl, #8]
 801598e:	9000      	str	r0, [sp, #0]
 8015990:	a84d      	add	r0, sp, #308	@ 0x134
 8015992:	f000 fec7 	bl	8016724 <awe_parserLoadAWB>
 8015996:	4606      	mov	r6, r0
 8015998:	e001      	b.n	801599e <awe_loadAWBfromFlash+0x96>
 801599a:	f06f 0649 	mvn.w	r6, #73	@ 0x49
 801599e:	f8da 0000 	ldr.w	r0, [sl]
 80159a2:	f7f2 f8d5 	bl	8007b50 <awe_fwCloseFile>
 80159a6:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 80159a8:	a909      	add	r1, sp, #36	@ 0x24
 80159aa:	4628      	mov	r0, r5
 80159ac:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80159b0:	f018 f94b 	bl	802dc4a <memcpy>
 80159b4:	4630      	mov	r0, r6
 80159b6:	f50d 7d1c 	add.w	sp, sp, #624	@ 0x270
 80159ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80159be:	f1b8 0f00 	cmp.w	r8, #0
 80159c2:	d001      	beq.n	80159c8 <awe_loadAWBfromFlash+0xc0>
 80159c4:	f8c8 7000 	str.w	r7, [r8]
 80159c8:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 80159ca:	f06f 062a 	mvn.w	r6, #42	@ 0x2a
 80159ce:	e7eb      	b.n	80159a8 <awe_loadAWBfromFlash+0xa0>
 80159d0:	4631      	mov	r1, r6
 80159d2:	9400      	str	r4, [sp, #0]
 80159d4:	4642      	mov	r2, r8
 80159d6:	4b08      	ldr	r3, [pc, #32]	@ (80159f8 <awe_loadAWBfromFlash+0xf0>)
 80159d8:	4620      	mov	r0, r4
 80159da:	f7ff ff39 	bl	8015850 <awe_loadAWBfromFlashCustomPacketProcess>
 80159de:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 80159e0:	4606      	mov	r6, r0
 80159e2:	e7e1      	b.n	80159a8 <awe_loadAWBfromFlash+0xa0>
 80159e4:	f06f 0650 	mvn.w	r6, #80	@ 0x50
 80159e8:	e7e4      	b.n	80159b4 <awe_loadAWBfromFlash+0xac>
 80159ea:	f06f 0626 	mvn.w	r6, #38	@ 0x26
 80159ee:	e7db      	b.n	80159a8 <awe_loadAWBfromFlash+0xa0>
 80159f0:	080157f1 	.word	0x080157f1
 80159f4:	0801582d 	.word	0x0801582d
 80159f8:	08015a31 	.word	0x08015a31

080159fc <ComputeCheckSum>:
 80159fc:	b430      	push	{r4, r5}
 80159fe:	8845      	ldrh	r5, [r0, #2]
 8015a00:	2d01      	cmp	r5, #1
 8015a02:	d012      	beq.n	8015a2a <ComputeCheckSum+0x2e>
 8015a04:	f1a0 0408 	sub.w	r4, r0, #8
 8015a08:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8015a0c:	1f03      	subs	r3, r0, #4
 8015a0e:	2200      	movs	r2, #0
 8015a10:	f853 1f04 	ldr.w	r1, [r3, #4]!
 8015a14:	429c      	cmp	r4, r3
 8015a16:	ea82 0201 	eor.w	r2, r2, r1
 8015a1a:	d1f9      	bne.n	8015a10 <ComputeCheckSum+0x14>
 8015a1c:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 8015a20:	3b01      	subs	r3, #1
 8015a22:	bc30      	pop	{r4, r5}
 8015a24:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8015a28:	4770      	bx	lr
 8015a2a:	2200      	movs	r2, #0
 8015a2c:	e7f6      	b.n	8015a1c <ComputeCheckSum+0x20>
 8015a2e:	bf00      	nop

08015a30 <awe_packetProcessUnified>:
 8015a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015a34:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 8015a36:	4d9a      	ldr	r5, [pc, #616]	@ (8015ca0 <awe_packetProcessUnified+0x270>)
 8015a38:	f8d0 310c 	ldr.w	r3, [r0, #268]	@ 0x10c
 8015a3c:	6817      	ldr	r7, [r2, #0]
 8015a3e:	682e      	ldr	r6, [r5, #0]
 8015a40:	6028      	str	r0, [r5, #0]
 8015a42:	b08c      	sub	sp, #48	@ 0x30
 8015a44:	4604      	mov	r4, r0
 8015a46:	b14b      	cbz	r3, 8015a5c <awe_packetProcessUnified+0x2c>
 8015a48:	4798      	blx	r3
 8015a4a:	f110 0f3b 	cmn.w	r0, #59	@ 0x3b
 8015a4e:	4680      	mov	r8, r0
 8015a50:	d004      	beq.n	8015a5c <awe_packetProcessUnified+0x2c>
 8015a52:	4640      	mov	r0, r8
 8015a54:	602e      	str	r6, [r5, #0]
 8015a56:	b00c      	add	sp, #48	@ 0x30
 8015a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015a5c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8015a5e:	0c39      	lsrs	r1, r7, #16
 8015a60:	428b      	cmp	r3, r1
 8015a62:	d316      	bcc.n	8015a92 <awe_packetProcessUnified+0x62>
 8015a64:	f8d4 c038 	ldr.w	ip, [r4, #56]	@ 0x38
 8015a68:	b379      	cbz	r1, 8015aca <awe_packetProcessUnified+0x9a>
 8015a6a:	f1ac 0304 	sub.w	r3, ip, #4
 8015a6e:	eb03 0e81 	add.w	lr, r3, r1, lsl #2
 8015a72:	2200      	movs	r2, #0
 8015a74:	e000      	b.n	8015a78 <awe_packetProcessUnified+0x48>
 8015a76:	463a      	mov	r2, r7
 8015a78:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8015a7c:	459e      	cmp	lr, r3
 8015a7e:	ea80 0702 	eor.w	r7, r0, r2
 8015a82:	d1f8      	bne.n	8015a76 <awe_packetProcessUnified+0x46>
 8015a84:	4290      	cmp	r0, r2
 8015a86:	d020      	beq.n	8015aca <awe_packetProcessUnified+0x9a>
 8015a88:	f06f 034b 	mvn.w	r3, #75	@ 0x4b
 8015a8c:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015a8e:	4698      	mov	r8, r3
 8015a90:	e003      	b.n	8015a9a <awe_packetProcessUnified+0x6a>
 8015a92:	f06f 034a 	mvn.w	r3, #74	@ 0x4a
 8015a96:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015a98:	4698      	mov	r8, r3
 8015a9a:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8015a9e:	e9c7 2300 	strd	r2, r3, [r7]
 8015aa2:	f04f 0e08 	mov.w	lr, #8
 8015aa6:	2402      	movs	r4, #2
 8015aa8:	2200      	movs	r2, #0
 8015aaa:	4613      	mov	r3, r2
 8015aac:	1f39      	subs	r1, r7, #4
 8015aae:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8015ab2:	3301      	adds	r3, #1
 8015ab4:	42a3      	cmp	r3, r4
 8015ab6:	ea82 0200 	eor.w	r2, r2, r0
 8015aba:	d3f8      	bcc.n	8015aae <awe_packetProcessUnified+0x7e>
 8015abc:	4640      	mov	r0, r8
 8015abe:	f847 200e 	str.w	r2, [r7, lr]
 8015ac2:	602e      	str	r6, [r5, #0]
 8015ac4:	b00c      	add	sp, #48	@ 0x30
 8015ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015aca:	f89c 3000 	ldrb.w	r3, [ip]
 8015ace:	9306      	str	r3, [sp, #24]
 8015ad0:	9b06      	ldr	r3, [sp, #24]
 8015ad2:	9307      	str	r3, [sp, #28]
 8015ad4:	9b07      	ldr	r3, [sp, #28]
 8015ad6:	3b01      	subs	r3, #1
 8015ad8:	2b83      	cmp	r3, #131	@ 0x83
 8015ada:	f200 8598 	bhi.w	801660e <awe_packetProcessUnified+0xbde>
 8015ade:	e8df f013 	tbh	[pc, r3, lsl #1]
 8015ae2:	03bc      	.short	0x03bc
 8015ae4:	059603b6 	.word	0x059603b6
 8015ae8:	037e03a4 	.word	0x037e03a4
 8015aec:	03610367 	.word	0x03610367
 8015af0:	033f034e 	.word	0x033f034e
 8015af4:	032f033b 	.word	0x032f033b
 8015af8:	0317031b 	.word	0x0317031b
 8015afc:	02df0306 	.word	0x02df0306
 8015b00:	059602ce 	.word	0x059602ce
 8015b04:	02bf0596 	.word	0x02bf0596
 8015b08:	029f02b2 	.word	0x029f02b2
 8015b0c:	0267027f 	.word	0x0267027f
 8015b10:	0221024b 	.word	0x0221024b
 8015b14:	01a401f0 	.word	0x01a401f0
 8015b18:	01750189 	.word	0x01750189
 8015b1c:	0150015c 	.word	0x0150015c
 8015b20:	05960596 	.word	0x05960596
 8015b24:	05960596 	.word	0x05960596
 8015b28:	05960596 	.word	0x05960596
 8015b2c:	05960596 	.word	0x05960596
 8015b30:	01440596 	.word	0x01440596
 8015b34:	01340596 	.word	0x01340596
 8015b38:	05960128 	.word	0x05960128
 8015b3c:	0495049c 	.word	0x0495049c
 8015b40:	0596033f 	.word	0x0596033f
 8015b44:	05960596 	.word	0x05960596
 8015b48:	05960596 	.word	0x05960596
 8015b4c:	0596048a 	.word	0x0596048a
 8015b50:	05960596 	.word	0x05960596
 8015b54:	05960474 	.word	0x05960474
 8015b58:	04550465 	.word	0x04550465
 8015b5c:	04390449 	.word	0x04390449
 8015b60:	05960596 	.word	0x05960596
 8015b64:	05960596 	.word	0x05960596
 8015b68:	05960596 	.word	0x05960596
 8015b6c:	05960596 	.word	0x05960596
 8015b70:	05960596 	.word	0x05960596
 8015b74:	05960596 	.word	0x05960596
 8015b78:	04310596 	.word	0x04310596
 8015b7c:	05960596 	.word	0x05960596
 8015b80:	04240596 	.word	0x04240596
 8015b84:	05960596 	.word	0x05960596
 8015b88:	03f50413 	.word	0x03f50413
 8015b8c:	059603ef 	.word	0x059603ef
 8015b90:	05960596 	.word	0x05960596
 8015b94:	05960596 	.word	0x05960596
 8015b98:	031b0596 	.word	0x031b0596
 8015b9c:	05960596 	.word	0x05960596
 8015ba0:	05960596 	.word	0x05960596
 8015ba4:	03d103e2 	.word	0x03d103e2
 8015ba8:	051003c2 	.word	0x051003c2
 8015bac:	04fa0506 	.word	0x04fa0506
 8015bb0:	053f04e9 	.word	0x053f04e9
 8015bb4:	05960596 	.word	0x05960596
 8015bb8:	05960596 	.word	0x05960596
 8015bbc:	05960596 	.word	0x05960596
 8015bc0:	05220596 	.word	0x05220596
 8015bc4:	05960596 	.word	0x05960596
 8015bc8:	04a104b0 	.word	0x04a104b0
 8015bcc:	05960596 	.word	0x05960596
 8015bd0:	05660571 	.word	0x05660571
 8015bd4:	054e0555 	.word	0x054e0555
 8015bd8:	011a0585 	.word	0x011a0585
 8015bdc:	00e700f9 	.word	0x00e700f9
 8015be0:	00c200e1 	.word	0x00c200e1
 8015be4:	00a600b6 	.word	0x00a600b6
 8015be8:	0084      	.short	0x0084
 8015bea:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8015bec:	f44f 20a0 	mov.w	r0, #327680	@ 0x50000
 8015bf0:	2903      	cmp	r1, #3
 8015bf2:	f04f 0101 	mov.w	r1, #1
 8015bf6:	f102 030c 	add.w	r3, r2, #12
 8015bfa:	f842 0b08 	str.w	r0, [r2], #8
 8015bfe:	9100      	str	r1, [sp, #0]
 8015c00:	f000 80b0 	beq.w	8015d64 <awe_packetProcessUnified+0x334>
 8015c04:	f04f 31ff 	mov.w	r1, #4294967295
 8015c08:	4620      	mov	r0, r4
 8015c0a:	f7f3 ff91 	bl	8009b30 <awe_fwGetProfileValues>
 8015c0e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015c10:	6078      	str	r0, [r7, #4]
 8015c12:	683c      	ldr	r4, [r7, #0]
 8015c14:	0c24      	lsrs	r4, r4, #16
 8015c16:	f104 4e80 	add.w	lr, r4, #1073741824	@ 0x40000000
 8015c1a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015c1e:	3c01      	subs	r4, #1
 8015c20:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8015c24:	f000 84f9 	beq.w	801661a <awe_packetProcessUnified+0xbea>
 8015c28:	f04f 0800 	mov.w	r8, #0
 8015c2c:	e73c      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015c2e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015c32:	4620      	mov	r0, r4
 8015c34:	f7f4 f87c 	bl	8009d30 <awe_fwGetLayoutCoreAffinity>
 8015c38:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015c3a:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8015c3e:	e9c7 3000 	strd	r3, r0, [r7]
 8015c42:	f04f 0e08 	mov.w	lr, #8
 8015c46:	2402      	movs	r4, #2
 8015c48:	f04f 0800 	mov.w	r8, #0
 8015c4c:	e72c      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015c4e:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8015c50:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
 8015c54:	4620      	mov	r0, r4
 8015c56:	f841 3b08 	str.w	r3, [r1], #8
 8015c5a:	f009 fcd7 	bl	801f60c <awe_fwGetSharedHeapSize>
 8015c5e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015c60:	6078      	str	r0, [r7, #4]
 8015c62:	683c      	ldr	r4, [r7, #0]
 8015c64:	e7d6      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015c66:	a90c      	add	r1, sp, #48	@ 0x30
 8015c68:	2300      	movs	r3, #0
 8015c6a:	f841 3d04 	str.w	r3, [r1, #-4]!
 8015c6e:	f8dc 0014 	ldr.w	r0, [ip, #20]
 8015c72:	e9dc 2301 	ldrd	r2, r3, [ip, #4]
 8015c76:	9002      	str	r0, [sp, #8]
 8015c78:	f8dc 0010 	ldr.w	r0, [ip, #16]
 8015c7c:	9001      	str	r0, [sp, #4]
 8015c7e:	f8dc 000c 	ldr.w	r0, [ip, #12]
 8015c82:	9000      	str	r0, [sp, #0]
 8015c84:	4620      	mov	r0, r4
 8015c86:	f00a fd69 	bl	802075c <awe_fwCreateWireInBufferPool>
 8015c8a:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015c8c:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8015c90:	603b      	str	r3, [r7, #0]
 8015c92:	b100      	cbz	r0, 8015c96 <awe_packetProcessUnified+0x266>
 8015c94:	6880      	ldr	r0, [r0, #8]
 8015c96:	6078      	str	r0, [r7, #4]
 8015c98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015c9a:	60bb      	str	r3, [r7, #8]
 8015c9c:	683c      	ldr	r4, [r7, #0]
 8015c9e:	e7b9      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015ca0:	20000ac0 	.word	0x20000ac0
 8015ca4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015ca8:	4620      	mov	r0, r4
 8015caa:	f00a fd43 	bl	8020734 <awe_fwCreateWireBufferPool>
 8015cae:	e7c3      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8015cb0:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015cb2:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8015cb6:	2301      	movs	r3, #1
 8015cb8:	e9c7 2300 	strd	r2, r3, [r7]
 8015cbc:	6823      	ldr	r3, [r4, #0]
 8015cbe:	60bb      	str	r3, [r7, #8]
 8015cc0:	4053      	eors	r3, r2
 8015cc2:	f083 0301 	eor.w	r3, r3, #1
 8015cc6:	60fb      	str	r3, [r7, #12]
 8015cc8:	f04f 0e0c 	mov.w	lr, #12
 8015ccc:	2403      	movs	r4, #3
 8015cce:	f04f 0800 	mov.w	r8, #0
 8015cd2:	e6e9      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015cd4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8015cd6:	f44f 1180 	mov.w	r1, #1048576	@ 0x100000
 8015cda:	2200      	movs	r2, #0
 8015cdc:	e9c3 1200 	strd	r1, r2, [r3]
 8015ce0:	3308      	adds	r3, #8
 8015ce2:	f104 02ac 	add.w	r2, r4, #172	@ 0xac
 8015ce6:	f104 01dc 	add.w	r1, r4, #220	@ 0xdc
 8015cea:	f8d2 c000 	ldr.w	ip, [r2]
 8015cee:	6857      	ldr	r7, [r2, #4]
 8015cf0:	6890      	ldr	r0, [r2, #8]
 8015cf2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015cf6:	f8c3 e00c 	str.w	lr, [r3, #12]
 8015cfa:	3210      	adds	r2, #16
 8015cfc:	428a      	cmp	r2, r1
 8015cfe:	f8c3 c000 	str.w	ip, [r3]
 8015d02:	605f      	str	r7, [r3, #4]
 8015d04:	6098      	str	r0, [r3, #8]
 8015d06:	f103 0310 	add.w	r3, r3, #16
 8015d0a:	d1ee      	bne.n	8015cea <awe_packetProcessUnified+0x2ba>
 8015d0c:	6812      	ldr	r2, [r2, #0]
 8015d0e:	601a      	str	r2, [r3, #0]
 8015d10:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015d12:	683c      	ldr	r4, [r7, #0]
 8015d14:	e77e      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015d16:	e9dc 3203 	ldrd	r3, r2, [ip, #12]
 8015d1a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015d1e:	9201      	str	r2, [sp, #4]
 8015d20:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8015d24:	9200      	str	r2, [sp, #0]
 8015d26:	4620      	mov	r0, r4
 8015d28:	f10c 0214 	add.w	r2, ip, #20
 8015d2c:	f7f4 f8e4 	bl	8009ef8 <awe_ctrlSetValueMask>
 8015d30:	e782      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8015d32:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015d34:	4ba8      	ldr	r3, [pc, #672]	@ (8015fd8 <awe_packetProcessUnified+0x5a8>)
 8015d36:	60bb      	str	r3, [r7, #8]
 8015d38:	f06f 023a 	mvn.w	r2, #58	@ 0x3a
 8015d3c:	f44f 3140 	mov.w	r1, #196608	@ 0x30000
 8015d40:	4613      	mov	r3, r2
 8015d42:	e9c7 1200 	strd	r1, r2, [r7]
 8015d46:	4690      	mov	r8, r2
 8015d48:	e6a7      	b.n	8015a9a <awe_packetProcessUnified+0x6a>
 8015d4a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8015d4c:	f44f 20a0 	mov.w	r0, #327680	@ 0x50000
 8015d50:	2903      	cmp	r1, #3
 8015d52:	f04f 0100 	mov.w	r1, #0
 8015d56:	f102 030c 	add.w	r3, r2, #12
 8015d5a:	f842 0b08 	str.w	r0, [r2], #8
 8015d5e:	9100      	str	r1, [sp, #0]
 8015d60:	f47f af50 	bne.w	8015c04 <awe_packetProcessUnified+0x1d4>
 8015d64:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015d68:	e74e      	b.n	8015c08 <awe_packetProcessUnified+0x1d8>
 8015d6a:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8015d6c:	f44f 2360 	mov.w	r3, #917504	@ 0xe0000
 8015d70:	4620      	mov	r0, r4
 8015d72:	f841 3b08 	str.w	r3, [r1], #8
 8015d76:	f7f2 ff85 	bl	8008c84 <awe_fwGetTargetInfo>
 8015d7a:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015d7c:	6078      	str	r0, [r7, #4]
 8015d7e:	683c      	ldr	r4, [r7, #0]
 8015d80:	e748      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015d82:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015d84:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8015d88:	2304      	movs	r3, #4
 8015d8a:	e9c7 2300 	strd	r2, r3, [r7]
 8015d8e:	f04f 0e08 	mov.w	lr, #8
 8015d92:	2402      	movs	r4, #2
 8015d94:	f04f 0800 	mov.w	r8, #0
 8015d98:	e686      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015d9a:	f04f 0800 	mov.w	r8, #0
 8015d9e:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8015da2:	e9cd 8802 	strd	r8, r8, [sp, #8]
 8015da6:	f10c 0310 	add.w	r3, ip, #16
 8015daa:	9301      	str	r3, [sp, #4]
 8015dac:	f8dc 300c 	ldr.w	r3, [ip, #12]
 8015db0:	9300      	str	r3, [sp, #0]
 8015db2:	4643      	mov	r3, r8
 8015db4:	4620      	mov	r0, r4
 8015db6:	f7f4 f857 	bl	8009e68 <awe_fwModuleClassSetCommon>
 8015dba:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015dbc:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8015dc0:	e9c7 3000 	strd	r3, r0, [r7]
 8015dc4:	f04f 0e08 	mov.w	lr, #8
 8015dc8:	2402      	movs	r4, #2
 8015dca:	e66d      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015dcc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8015dce:	f8dc 700c 	ldr.w	r7, [ip, #12]
 8015dd2:	2300      	movs	r3, #0
 8015dd4:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8015dd8:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8015ddc:	3008      	adds	r0, #8
 8015dde:	9700      	str	r7, [sp, #0]
 8015de0:	9001      	str	r0, [sp, #4]
 8015de2:	4620      	mov	r0, r4
 8015de4:	f7f3 fff8 	bl	8009dd8 <awe_fwModuleClassGetCommon>
 8015de8:	1cfb      	adds	r3, r7, #3
 8015dea:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015dec:	041c      	lsls	r4, r3, #16
 8015dee:	e9c7 4000 	strd	r4, r0, [r7]
 8015df2:	e70f      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015df4:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 8015df8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8015dfa:	f422 72a0 	bic.w	r2, r2, #320	@ 0x140
 8015dfe:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 8015e02:	b11b      	cbz	r3, 8015e0c <awe_packetProcessUnified+0x3dc>
 8015e04:	685a      	ldr	r2, [r3, #4]
 8015e06:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8015e0a:	605a      	str	r2, [r3, #4]
 8015e0c:	6a23      	ldr	r3, [r4, #32]
 8015e0e:	b10b      	cbz	r3, 8015e14 <awe_packetProcessUnified+0x3e4>
 8015e10:	4620      	mov	r0, r4
 8015e12:	4798      	blx	r3
 8015e14:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015e16:	2300      	movs	r3, #0
 8015e18:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8015e1c:	e9c7 2300 	strd	r2, r3, [r7]
 8015e20:	4698      	mov	r8, r3
 8015e22:	f04f 0e08 	mov.w	lr, #8
 8015e26:	2402      	movs	r4, #2
 8015e28:	e63e      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 8015e2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8015e2c:	6b1f      	ldr	r7, [r3, #48]	@ 0x30
 8015e2e:	2307      	movs	r3, #7
 8015e30:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 8015e34:	b1c7      	cbz	r7, 8015e68 <awe_packetProcessUnified+0x438>
 8015e36:	69bb      	ldr	r3, [r7, #24]
 8015e38:	ed97 6a04 	vldr	s12, [r7, #16]
 8015e3c:	ed9f 7a67 	vldr	s14, [pc, #412]	@ 8015fdc <awe_packetProcessUnified+0x5ac>
 8015e40:	f3c3 0310 	ubfx	r3, r3, #0, #17
 8015e44:	ee07 3a90 	vmov	s15, r3
 8015e48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015e4c:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8015e50:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8015e54:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8015e58:	ee17 3a90 	vmov	r3, s15
 8015e5c:	2b06      	cmp	r3, #6
 8015e5e:	f200 83ed 	bhi.w	801663c <awe_packetProcessUnified+0xc0c>
 8015e62:	2305      	movs	r3, #5
 8015e64:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 8015e68:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 8015e6c:	69e3      	ldr	r3, [r4, #28]
 8015e6e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8015e72:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 8015e76:	b11b      	cbz	r3, 8015e80 <awe_packetProcessUnified+0x450>
 8015e78:	4620      	mov	r0, r4
 8015e7a:	4798      	blx	r3
 8015e7c:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 8015e80:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8015e82:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015e86:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 8015e8a:	2b00      	cmp	r3, #0
 8015e8c:	d0c2      	beq.n	8015e14 <awe_packetProcessUnified+0x3e4>
 8015e8e:	6822      	ldr	r2, [r4, #0]
 8015e90:	2a00      	cmp	r2, #0
 8015e92:	f040 83c6 	bne.w	8016622 <awe_packetProcessUnified+0xbf2>
 8015e96:	2f00      	cmp	r7, #0
 8015e98:	f000 83c3 	beq.w	8016622 <awe_packetProcessUnified+0xbf2>
 8015e9c:	69ba      	ldr	r2, [r7, #24]
 8015e9e:	6a67      	ldr	r7, [r4, #36]	@ 0x24
 8015ea0:	f3c2 0210 	ubfx	r2, r2, #0, #17
 8015ea4:	611a      	str	r2, [r3, #16]
 8015ea6:	b13f      	cbz	r7, 8015eb8 <awe_packetProcessUnified+0x488>
 8015ea8:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8015eaa:	3304      	adds	r3, #4
 8015eac:	005a      	lsls	r2, r3, #1
 8015eae:	f104 0164 	add.w	r1, r4, #100	@ 0x64
 8015eb2:	4620      	mov	r0, r4
 8015eb4:	47b8      	blx	r7
 8015eb6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8015eb8:	685a      	ldr	r2, [r3, #4]
 8015eba:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015ebe:	605a      	str	r2, [r3, #4]
 8015ec0:	e7a8      	b.n	8015e14 <awe_packetProcessUnified+0x3e4>
 8015ec2:	ab0c      	add	r3, sp, #48	@ 0x30
 8015ec4:	2000      	movs	r0, #0
 8015ec6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8015ec8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8015ecc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015ed0:	900a      	str	r0, [sp, #40]	@ 0x28
 8015ed2:	f102 0028 	add.w	r0, r2, #40	@ 0x28
 8015ed6:	f102 0724 	add.w	r7, r2, #36	@ 0x24
 8015eda:	9005      	str	r0, [sp, #20]
 8015edc:	f102 0020 	add.w	r0, r2, #32
 8015ee0:	9704      	str	r7, [sp, #16]
 8015ee2:	9003      	str	r0, [sp, #12]
 8015ee4:	f102 071c 	add.w	r7, r2, #28
 8015ee8:	f102 0018 	add.w	r0, r2, #24
 8015eec:	3214      	adds	r2, #20
 8015eee:	e9cd 0701 	strd	r0, r7, [sp, #4]
 8015ef2:	9200      	str	r2, [sp, #0]
 8015ef4:	4620      	mov	r0, r4
 8015ef6:	aa0a      	add	r2, sp, #40	@ 0x28
 8015ef8:	f7f4 fc70 	bl	800a7dc <awe_fwGetNextIO>
 8015efc:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015efe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015f00:	6078      	str	r0, [r7, #4]
 8015f02:	f44f 2240 	mov.w	r2, #786432	@ 0xc0000
 8015f06:	603a      	str	r2, [r7, #0]
 8015f08:	2b00      	cmp	r3, #0
 8015f0a:	f000 8393 	beq.w	8016634 <awe_packetProcessUnified+0xc04>
 8015f0e:	689a      	ldr	r2, [r3, #8]
 8015f10:	60ba      	str	r2, [r7, #8]
 8015f12:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015f14:	60fa      	str	r2, [r7, #12]
 8015f16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015f18:	3300      	adds	r3, #0
 8015f1a:	bf18      	it	ne
 8015f1c:	2301      	movne	r3, #1
 8015f1e:	613b      	str	r3, [r7, #16]
 8015f20:	683c      	ldr	r4, [r7, #0]
 8015f22:	e677      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015f24:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8015f26:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8015f2a:	f103 0724 	add.w	r7, r3, #36	@ 0x24
 8015f2e:	f103 0020 	add.w	r0, r3, #32
 8015f32:	f103 011c 	add.w	r1, r3, #28
 8015f36:	9204      	str	r2, [sp, #16]
 8015f38:	f103 0218 	add.w	r2, r3, #24
 8015f3c:	e9cd 0702 	strd	r0, r7, [sp, #8]
 8015f40:	e9cd 2100 	strd	r2, r1, [sp]
 8015f44:	3314      	adds	r3, #20
 8015f46:	2700      	movs	r7, #0
 8015f48:	aa0b      	add	r2, sp, #44	@ 0x2c
 8015f4a:	a90a      	add	r1, sp, #40	@ 0x28
 8015f4c:	4620      	mov	r0, r4
 8015f4e:	970a      	str	r7, [sp, #40]	@ 0x28
 8015f50:	f7f4 fc22 	bl	800a798 <awe_fwGetFirstIO>
 8015f54:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015f56:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015f58:	6078      	str	r0, [r7, #4]
 8015f5a:	f44f 2240 	mov.w	r2, #786432	@ 0xc0000
 8015f5e:	603a      	str	r2, [r7, #0]
 8015f60:	2b00      	cmp	r3, #0
 8015f62:	f000 8367 	beq.w	8016634 <awe_packetProcessUnified+0xc04>
 8015f66:	689a      	ldr	r2, [r3, #8]
 8015f68:	68db      	ldr	r3, [r3, #12]
 8015f6a:	60ba      	str	r2, [r7, #8]
 8015f6c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015f6e:	60fa      	str	r2, [r7, #12]
 8015f70:	3300      	adds	r3, #0
 8015f72:	bf18      	it	ne
 8015f74:	2301      	movne	r3, #1
 8015f76:	e7d2      	b.n	8015f1e <awe_packetProcessUnified+0x4ee>
 8015f78:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015f7c:	ab0a      	add	r3, sp, #40	@ 0x28
 8015f7e:	2700      	movs	r7, #0
 8015f80:	aa0b      	add	r2, sp, #44	@ 0x2c
 8015f82:	4620      	mov	r0, r4
 8015f84:	9709      	str	r7, [sp, #36]	@ 0x24
 8015f86:	f7f3 fc6d 	bl	8009864 <awe_fwGetObjectByID>
 8015f8a:	2800      	cmp	r0, #0
 8015f8c:	db04      	blt.n	8015f98 <awe_packetProcessUnified+0x568>
 8015f8e:	aa0a      	add	r2, sp, #40	@ 0x28
 8015f90:	a909      	add	r1, sp, #36	@ 0x24
 8015f92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015f94:	f7f3 fc3a 	bl	800980c <awe_fwGetNextObject>
 8015f98:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015f9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f9c:	6078      	str	r0, [r7, #4]
 8015f9e:	f44f 22a0 	mov.w	r2, #327680	@ 0x50000
 8015fa2:	603a      	str	r2, [r7, #0]
 8015fa4:	b103      	cbz	r3, 8015fa8 <awe_packetProcessUnified+0x578>
 8015fa6:	689b      	ldr	r3, [r3, #8]
 8015fa8:	60bb      	str	r3, [r7, #8]
 8015faa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015fac:	60fb      	str	r3, [r7, #12]
 8015fae:	e630      	b.n	8015c12 <awe_packetProcessUnified+0x1e2>
 8015fb0:	2300      	movs	r3, #0
 8015fb2:	aa0b      	add	r2, sp, #44	@ 0x2c
 8015fb4:	a90a      	add	r1, sp, #40	@ 0x28
 8015fb6:	4620      	mov	r0, r4
 8015fb8:	930a      	str	r3, [sp, #40]	@ 0x28
 8015fba:	f7f3 fc41 	bl	8009840 <awe_fwGetFirstLayoutObject>
 8015fbe:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8015fc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015fc2:	6078      	str	r0, [r7, #4]
 8015fc4:	f44f 22a0 	mov.w	r2, #327680	@ 0x50000
 8015fc8:	603a      	str	r2, [r7, #0]
 8015fca:	b103      	cbz	r3, 8015fce <awe_packetProcessUnified+0x59e>
 8015fcc:	689b      	ldr	r3, [r3, #8]
 8015fce:	60bb      	str	r3, [r7, #8]
 8015fd0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015fd2:	60fb      	str	r3, [r7, #12]
 8015fd4:	683c      	ldr	r4, [r7, #0]
 8015fd6:	e61d      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8015fd8:	fffcffc5 	.word	0xfffcffc5
 8015fdc:	4126aaab 	.word	0x4126aaab
 8015fe0:	2300      	movs	r3, #0
 8015fe2:	9309      	str	r3, [sp, #36]	@ 0x24
 8015fe4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015fe8:	9308      	str	r3, [sp, #32]
 8015fea:	930a      	str	r3, [sp, #40]	@ 0x28
 8015fec:	2900      	cmp	r1, #0
 8015fee:	f040 834f 	bne.w	8016690 <awe_packetProcessUnified+0xc60>
 8015ff2:	f8d4 3080 	ldr.w	r3, [r4, #128]	@ 0x80
 8015ff6:	930a      	str	r3, [sp, #40]	@ 0x28
 8015ff8:	4688      	mov	r8, r1
 8015ffa:	2b00      	cmp	r3, #0
 8015ffc:	f000 8345 	beq.w	801668a <awe_packetProcessUnified+0xc5a>
 8016000:	695a      	ldr	r2, [r3, #20]
 8016002:	2a00      	cmp	r2, #0
 8016004:	f000 8369 	beq.w	80166da <awe_packetProcessUnified+0xcaa>
 8016008:	3a01      	subs	r2, #1
 801600a:	615a      	str	r2, [r3, #20]
 801600c:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801600e:	f44f 24a0 	mov.w	r4, #327680	@ 0x50000
 8016012:	603c      	str	r4, [r7, #0]
 8016014:	9b08      	ldr	r3, [sp, #32]
 8016016:	e9c7 8301 	strd	r8, r3, [r7, #4]
 801601a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801601c:	60fb      	str	r3, [r7, #12]
 801601e:	e5f9      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8016020:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016024:	ab0b      	add	r3, sp, #44	@ 0x2c
 8016026:	aa0a      	add	r2, sp, #40	@ 0x28
 8016028:	4620      	mov	r0, r4
 801602a:	f7f3 fc1b 	bl	8009864 <awe_fwGetObjectByID>
 801602e:	2800      	cmp	r0, #0
 8016030:	db03      	blt.n	801603a <awe_packetProcessUnified+0x60a>
 8016032:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8016034:	4620      	mov	r0, r4
 8016036:	f7f4 fb2d 	bl	800a694 <awe_fwPumpModule>
 801603a:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801603c:	f44f 3440 	mov.w	r4, #196608	@ 0x30000
 8016040:	e9c7 4000 	strd	r4, r0, [r7]
 8016044:	e5e6      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8016046:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801604a:	ab0b      	add	r3, sp, #44	@ 0x2c
 801604c:	aa0a      	add	r2, sp, #40	@ 0x28
 801604e:	4620      	mov	r0, r4
 8016050:	f7f3 fc08 	bl	8009864 <awe_fwGetObjectByID>
 8016054:	2800      	cmp	r0, #0
 8016056:	dbf0      	blt.n	801603a <awe_packetProcessUnified+0x60a>
 8016058:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801605a:	f7f4 f8f7 	bl	800a24c <awe_fwGetModuleState>
 801605e:	e7ec      	b.n	801603a <awe_packetProcessUnified+0x60a>
 8016060:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016064:	ab0b      	add	r3, sp, #44	@ 0x2c
 8016066:	aa0a      	add	r2, sp, #40	@ 0x28
 8016068:	4620      	mov	r0, r4
 801606a:	f7f3 fbfb 	bl	8009864 <awe_fwGetObjectByID>
 801606e:	2800      	cmp	r0, #0
 8016070:	dbe3      	blt.n	801603a <awe_packetProcessUnified+0x60a>
 8016072:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8016074:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8016076:	6899      	ldr	r1, [r3, #8]
 8016078:	f7f4 f8b2 	bl	800a1e0 <awe_fwSetModuleState>
 801607c:	e7dd      	b.n	801603a <awe_packetProcessUnified+0x60a>
 801607e:	a90c      	add	r1, sp, #48	@ 0x30
 8016080:	2300      	movs	r3, #0
 8016082:	f841 3d04 	str.w	r3, [r1, #-4]!
 8016086:	4620      	mov	r0, r4
 8016088:	e9dc 2301 	ldrd	r2, r3, [ip, #4]
 801608c:	f7f2 ff52 	bl	8008f34 <awe_fwLayoutConstructor>
 8016090:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016092:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8016096:	603b      	str	r3, [r7, #0]
 8016098:	2800      	cmp	r0, #0
 801609a:	f47f adfb 	bne.w	8015c94 <awe_packetProcessUnified+0x264>
 801609e:	e5fa      	b.n	8015c96 <awe_packetProcessUnified+0x266>
 80160a0:	aa0c      	add	r2, sp, #48	@ 0x30
 80160a2:	2300      	movs	r3, #0
 80160a4:	f842 3d04 	str.w	r3, [r2, #-4]!
 80160a8:	e9dc 1301 	ldrd	r1, r3, [ip, #4]
 80160ac:	b2d8      	uxtb	r0, r3
 80160ae:	1d07      	adds	r7, r0, #4
 80160b0:	f3c3 2007 	ubfx	r0, r3, #8, #8
 80160b4:	4438      	add	r0, r7
 80160b6:	f3c3 4707 	ubfx	r7, r3, #16, #8
 80160ba:	4438      	add	r0, r7
 80160bc:	eb0c 0080 	add.w	r0, ip, r0, lsl #2
 80160c0:	9002      	str	r0, [sp, #8]
 80160c2:	f8dc 000c 	ldr.w	r0, [ip, #12]
 80160c6:	9001      	str	r0, [sp, #4]
 80160c8:	f10c 0010 	add.w	r0, ip, #16
 80160cc:	9000      	str	r0, [sp, #0]
 80160ce:	4620      	mov	r0, r4
 80160d0:	f00a f9ee 	bl	80204b0 <awe_fwModuleClassConstructorIDs>
 80160d4:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80160d6:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 80160da:	603b      	str	r3, [r7, #0]
 80160dc:	2800      	cmp	r0, #0
 80160de:	f000 82b3 	beq.w	8016648 <awe_packetProcessUnified+0xc18>
 80160e2:	6883      	ldr	r3, [r0, #8]
 80160e4:	607b      	str	r3, [r7, #4]
 80160e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80160e8:	60bb      	str	r3, [r7, #8]
 80160ea:	683c      	ldr	r4, [r7, #0]
 80160ec:	e592      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 80160ee:	ab0b      	add	r3, sp, #44	@ 0x2c
 80160f0:	4620      	mov	r0, r4
 80160f2:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80160f6:	aa0a      	add	r2, sp, #40	@ 0x28
 80160f8:	f7f2 fe96 	bl	8008e28 <awe_fwGetAweInstanceModuleInfo>
 80160fc:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80160fe:	f44f 24a0 	mov.w	r4, #327680	@ 0x50000
 8016102:	e9c7 4000 	strd	r4, r0, [r7]
 8016106:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016108:	60bb      	str	r3, [r7, #8]
 801610a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801610c:	60fb      	str	r3, [r7, #12]
 801610e:	e581      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8016110:	4620      	mov	r0, r4
 8016112:	f7f2 fe87 	bl	8008e24 <awe_fwGetAweInstanceModuleCount>
 8016116:	e58f      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8016118:	6a23      	ldr	r3, [r4, #32]
 801611a:	b10b      	cbz	r3, 8016120 <awe_packetProcessUnified+0x6f0>
 801611c:	4620      	mov	r0, r4
 801611e:	4798      	blx	r3
 8016120:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 8016124:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8016126:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 801612a:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 801612e:	b11b      	cbz	r3, 8016138 <awe_packetProcessUnified+0x708>
 8016130:	685a      	ldr	r2, [r3, #4]
 8016132:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8016136:	605a      	str	r2, [r3, #4]
 8016138:	4620      	mov	r0, r4
 801613a:	f009 ff25 	bl	801ff88 <awe_fwDestroy>
 801613e:	e669      	b.n	8015e14 <awe_packetProcessUnified+0x3e4>
 8016140:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8016142:	f44f 2310 	mov.w	r3, #589824	@ 0x90000
 8016146:	4620      	mov	r0, r4
 8016148:	f841 3b08 	str.w	r3, [r1], #8
 801614c:	f009 fa32 	bl	801f5b4 <awe_fwGetHeapSize>
 8016150:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016152:	6078      	str	r0, [r7, #4]
 8016154:	683c      	ldr	r4, [r7, #0]
 8016156:	e55d      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8016158:	4620      	mov	r0, r4
 801615a:	f009 fa1b 	bl	801f594 <awe_fwGetHeapCount>
 801615e:	e56b      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8016160:	f04f 0800 	mov.w	r8, #0
 8016164:	f10c 0308 	add.w	r3, ip, #8
 8016168:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801616c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016170:	9301      	str	r3, [sp, #4]
 8016172:	e9cd 8802 	strd	r8, r8, [sp, #8]
 8016176:	f8cd 8000 	str.w	r8, [sp]
 801617a:	4643      	mov	r3, r8
 801617c:	e61a      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 801617e:	2300      	movs	r3, #0
 8016180:	a80b      	add	r0, sp, #44	@ 0x2c
 8016182:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8016186:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801618a:	e9cd 3000 	strd	r3, r0, [sp]
 801618e:	4620      	mov	r0, r4
 8016190:	f7f3 fe22 	bl	8009dd8 <awe_fwModuleClassGetCommon>
 8016194:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016196:	f44f 2480 	mov.w	r4, #262144	@ 0x40000
 801619a:	e9c7 4000 	strd	r4, r0, [r7]
 801619e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80161a0:	60bb      	str	r3, [r7, #8]
 80161a2:	e537      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 80161a4:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 80161a8:	4620      	mov	r0, r4
 80161aa:	f7f4 fba9 	bl	800a900 <awe_fwBindIOToWire>
 80161ae:	e543      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 80161b0:	a90c      	add	r1, sp, #48	@ 0x30
 80161b2:	2300      	movs	r3, #0
 80161b4:	f841 3d04 	str.w	r3, [r1, #-4]!
 80161b8:	f8dc 0010 	ldr.w	r0, [ip, #16]
 80161bc:	e9dc 2301 	ldrd	r2, r3, [ip, #4]
 80161c0:	9001      	str	r0, [sp, #4]
 80161c2:	f8dc 000c 	ldr.w	r0, [ip, #12]
 80161c6:	9000      	str	r0, [sp, #0]
 80161c8:	4620      	mov	r0, r4
 80161ca:	f00a fa3f 	bl	802064c <ClassWire_Constructor>
 80161ce:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80161d0:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 80161d4:	603b      	str	r3, [r7, #0]
 80161d6:	2800      	cmp	r0, #0
 80161d8:	f47f ad5c 	bne.w	8015c94 <awe_packetProcessUnified+0x264>
 80161dc:	e55b      	b.n	8015c96 <awe_packetProcessUnified+0x266>
 80161de:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80161e0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80161e4:	f102 0724 	add.w	r7, r2, #36	@ 0x24
 80161e8:	f102 0020 	add.w	r0, r2, #32
 80161ec:	f102 031c 	add.w	r3, r2, #28
 80161f0:	9705      	str	r7, [sp, #20]
 80161f2:	9004      	str	r0, [sp, #16]
 80161f4:	f102 0718 	add.w	r7, r2, #24
 80161f8:	f102 0014 	add.w	r0, r2, #20
 80161fc:	9303      	str	r3, [sp, #12]
 80161fe:	f102 0310 	add.w	r3, r2, #16
 8016202:	e9cd 0701 	strd	r0, r7, [sp, #4]
 8016206:	9300      	str	r3, [sp, #0]
 8016208:	4620      	mov	r0, r4
 801620a:	f102 030c 	add.w	r3, r2, #12
 801620e:	3208      	adds	r2, #8
 8016210:	f7f4 fb2c 	bl	800a86c <awe_fwGetPinType>
 8016214:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016216:	f44f 2330 	mov.w	r3, #720896	@ 0xb0000
 801621a:	e9c7 3000 	strd	r3, r0, [r7]
 801621e:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 8016222:	240a      	movs	r4, #10
 8016224:	f04f 0800 	mov.w	r8, #0
 8016228:	e43e      	b.n	8015aa8 <awe_packetProcessUnified+0x78>
 801622a:	ab0c      	add	r3, sp, #48	@ 0x30
 801622c:	2200      	movs	r2, #0
 801622e:	f843 2d08 	str.w	r2, [r3, #-8]!
 8016232:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016236:	aa0b      	add	r2, sp, #44	@ 0x2c
 8016238:	4620      	mov	r0, r4
 801623a:	f7f3 fb13 	bl	8009864 <awe_fwGetObjectByID>
 801623e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016240:	f44f 2480 	mov.w	r4, #262144	@ 0x40000
 8016244:	e9c7 4000 	strd	r4, r0, [r7]
 8016248:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801624a:	60bb      	str	r3, [r7, #8]
 801624c:	e4e2      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 801624e:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8016252:	4620      	mov	r0, r4
 8016254:	f7f3 fda0 	bl	8009d98 <awe_fwGetCallModID>
 8016258:	e4ee      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 801625a:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 801625e:	4620      	mov	r0, r4
 8016260:	f7f3 fd7a 	bl	8009d58 <awe_fwSetCallModID>
 8016264:	e4e8      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8016266:	f04f 0800 	mov.w	r8, #0
 801626a:	2001      	movs	r0, #1
 801626c:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8016270:	e9cd 0802 	strd	r0, r8, [sp, #8]
 8016274:	f10c 0310 	add.w	r3, ip, #16
 8016278:	9301      	str	r3, [sp, #4]
 801627a:	f8dc 300c 	ldr.w	r3, [ip, #12]
 801627e:	9300      	str	r3, [sp, #0]
 8016280:	4643      	mov	r3, r8
 8016282:	e597      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 8016284:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8016286:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801628a:	f8dc 7010 	ldr.w	r7, [ip, #16]
 801628e:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
 8016292:	3008      	adds	r0, #8
 8016294:	f04f 0c01 	mov.w	ip, #1
 8016298:	9700      	str	r7, [sp, #0]
 801629a:	9001      	str	r0, [sp, #4]
 801629c:	f8cd c00c 	str.w	ip, [sp, #12]
 80162a0:	f8cd c008 	str.w	ip, [sp, #8]
 80162a4:	e59d      	b.n	8015de2 <awe_packetProcessUnified+0x3b2>
 80162a6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80162a8:	f8dc 700c 	ldr.w	r7, [ip, #12]
 80162ac:	3008      	adds	r0, #8
 80162ae:	2300      	movs	r3, #0
 80162b0:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 80162b4:	9700      	str	r7, [sp, #0]
 80162b6:	f04f 0c01 	mov.w	ip, #1
 80162ba:	9001      	str	r0, [sp, #4]
 80162bc:	9303      	str	r3, [sp, #12]
 80162be:	e7ef      	b.n	80162a0 <awe_packetProcessUnified+0x870>
 80162c0:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 80162c4:	4620      	mov	r0, r4
 80162c6:	f7f3 fb69 	bl	800999c <awe_fwSetObjectID>
 80162ca:	e4b5      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 80162cc:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80162ce:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80162d2:	f102 0718 	add.w	r7, r2, #24
 80162d6:	f102 0014 	add.w	r0, r2, #20
 80162da:	f102 0310 	add.w	r3, r2, #16
 80162de:	e9cd 0701 	strd	r0, r7, [sp, #4]
 80162e2:	9300      	str	r3, [sp, #0]
 80162e4:	4620      	mov	r0, r4
 80162e6:	f102 030c 	add.w	r3, r2, #12
 80162ea:	3208      	adds	r2, #8
 80162ec:	f00a f9f6 	bl	80206dc <awe_fwGetWireType>
 80162f0:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80162f2:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80162f6:	e9c7 3000 	strd	r3, r0, [r7]
 80162fa:	f04f 0e1c 	mov.w	lr, #28
 80162fe:	2407      	movs	r4, #7
 8016300:	f04f 0800 	mov.w	r8, #0
 8016304:	f7ff bbd0 	b.w	8015aa8 <awe_packetProcessUnified+0x78>
 8016308:	aa0c      	add	r2, sp, #48	@ 0x30
 801630a:	2300      	movs	r3, #0
 801630c:	f842 3d04 	str.w	r3, [r2, #-4]!
 8016310:	4620      	mov	r0, r4
 8016312:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016316:	f7f4 f849 	bl	800a3ac <awe_fwDerefPointer>
 801631a:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801631c:	f44f 2480 	mov.w	r4, #262144	@ 0x40000
 8016320:	603c      	str	r4, [r7, #0]
 8016322:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016324:	e9c7 3001 	strd	r3, r0, [r7, #4]
 8016328:	e474      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 801632a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801632c:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8016330:	601a      	str	r2, [r3, #0]
 8016332:	4620      	mov	r0, r4
 8016334:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016338:	f7f3 faec 	bl	8009914 <awe_fwcreateLookupTable>
 801633c:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801633e:	6078      	str	r0, [r7, #4]
 8016340:	683c      	ldr	r4, [r7, #0]
 8016342:	e467      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 8016344:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
 8016348:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801634c:	4620      	mov	r0, r4
 801634e:	f7f3 fff7 	bl	800a340 <awe_fwSetPointer>
 8016352:	e471      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 8016354:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8016356:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801635a:	f8dc 7010 	ldr.w	r7, [ip, #16]
 801635e:	3008      	adds	r0, #8
 8016360:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
 8016364:	f04f 0c01 	mov.w	ip, #1
 8016368:	9001      	str	r0, [sp, #4]
 801636a:	2000      	movs	r0, #0
 801636c:	9700      	str	r7, [sp, #0]
 801636e:	e9cd 0c02 	strd	r0, ip, [sp, #8]
 8016372:	e536      	b.n	8015de2 <awe_packetProcessUnified+0x3b2>
 8016374:	2701      	movs	r7, #1
 8016376:	e9dc 3202 	ldrd	r3, r2, [ip, #8]
 801637a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801637e:	9703      	str	r7, [sp, #12]
 8016380:	2000      	movs	r0, #0
 8016382:	af0b      	add	r7, sp, #44	@ 0x2c
 8016384:	9002      	str	r0, [sp, #8]
 8016386:	e9cd 0700 	strd	r0, r7, [sp]
 801638a:	e700      	b.n	801618e <awe_packetProcessUnified+0x75e>
 801638c:	2701      	movs	r7, #1
 801638e:	f04f 0800 	mov.w	r8, #0
 8016392:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
 8016396:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801639a:	e9cd 8702 	strd	r8, r7, [sp, #8]
 801639e:	f10c 0014 	add.w	r0, ip, #20
 80163a2:	9001      	str	r0, [sp, #4]
 80163a4:	f8dc 0010 	ldr.w	r0, [ip, #16]
 80163a8:	9000      	str	r0, [sp, #0]
 80163aa:	e503      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 80163ac:	f04f 0800 	mov.w	r8, #0
 80163b0:	f10c 0708 	add.w	r7, ip, #8
 80163b4:	2001      	movs	r0, #1
 80163b6:	e9dc 3203 	ldrd	r3, r2, [ip, #12]
 80163ba:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80163be:	9701      	str	r7, [sp, #4]
 80163c0:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80163c4:	f8cd 8000 	str.w	r8, [sp]
 80163c8:	e4f4      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 80163ca:	f04f 0800 	mov.w	r8, #0
 80163ce:	f8dc 701c 	ldr.w	r7, [ip, #28]
 80163d2:	e9cd 880a 	strd	r8, r8, [sp, #40]	@ 0x28
 80163d6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80163da:	4543      	cmp	r3, r8
 80163dc:	f2c0 8136 	blt.w	801664c <awe_packetProcessUnified+0xc1c>
 80163e0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80163e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80163e4:	2b00      	cmp	r3, #0
 80163e6:	f040 8164 	bne.w	80166b2 <awe_packetProcessUnified+0xc82>
 80163ea:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80163ec:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80163f0:	e9c7 2300 	strd	r2, r3, [r7]
 80163f4:	e40d      	b.n	8015c12 <awe_packetProcessUnified+0x1e2>
 80163f6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80163f8:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80163fc:	4620      	mov	r0, r4
 80163fe:	601a      	str	r2, [r3, #0]
 8016400:	f7f3 f972 	bl	80096e8 <awe_fwTick>
 8016404:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016406:	6078      	str	r0, [r7, #4]
 8016408:	683c      	ldr	r4, [r7, #0]
 801640a:	e403      	b.n	8015c14 <awe_packetProcessUnified+0x1e4>
 801640c:	f10c 0204 	add.w	r2, ip, #4
 8016410:	3902      	subs	r1, #2
 8016412:	4620      	mov	r0, r4
 8016414:	f7f2 fe80 	bl	8009118 <awe_fwAddModuleToLayout>
 8016418:	e40e      	b.n	8015c38 <awe_packetProcessUnified+0x208>
 801641a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801641e:	ab0a      	add	r3, sp, #40	@ 0x28
 8016420:	aa0b      	add	r2, sp, #44	@ 0x2c
 8016422:	e709      	b.n	8016238 <awe_packetProcessUnified+0x808>
 8016424:	f8d4 20a0 	ldr.w	r2, [r4, #160]	@ 0xa0
 8016428:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801642a:	f422 72a0 	bic.w	r2, r2, #320	@ 0x140
 801642e:	f8c4 20a0 	str.w	r2, [r4, #160]	@ 0xa0
 8016432:	2b00      	cmp	r3, #0
 8016434:	f43f acee 	beq.w	8015e14 <awe_packetProcessUnified+0x3e4>
 8016438:	685a      	ldr	r2, [r3, #4]
 801643a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 801643e:	605a      	str	r2, [r3, #4]
 8016440:	e4e8      	b.n	8015e14 <awe_packetProcessUnified+0x3e4>
 8016442:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8016444:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8016446:	2307      	movs	r3, #7
 8016448:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 801644c:	b1c2      	cbz	r2, 8016480 <awe_packetProcessUnified+0xa50>
 801644e:	6993      	ldr	r3, [r2, #24]
 8016450:	ed92 6a04 	vldr	s12, [r2, #16]
 8016454:	ed9f 7aa7 	vldr	s14, [pc, #668]	@ 80166f4 <awe_packetProcessUnified+0xcc4>
 8016458:	f3c3 0310 	ubfx	r3, r3, #0, #17
 801645c:	ee07 3a90 	vmov	s15, r3
 8016460:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016464:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8016468:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801646c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8016470:	ee17 3a90 	vmov	r3, s15
 8016474:	2b06      	cmp	r3, #6
 8016476:	f200 8116 	bhi.w	80166a6 <awe_packetProcessUnified+0xc76>
 801647a:	2305      	movs	r3, #5
 801647c:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 8016480:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
 8016484:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8016486:	f441 71a0 	orr.w	r1, r1, #320	@ 0x140
 801648a:	f8c4 10a0 	str.w	r1, [r4, #160]	@ 0xa0
 801648e:	2b00      	cmp	r3, #0
 8016490:	f43f acc0 	beq.w	8015e14 <awe_packetProcessUnified+0x3e4>
 8016494:	6821      	ldr	r1, [r4, #0]
 8016496:	2900      	cmp	r1, #0
 8016498:	f040 80c3 	bne.w	8016622 <awe_packetProcessUnified+0xbf2>
 801649c:	2a00      	cmp	r2, #0
 801649e:	f000 80c0 	beq.w	8016622 <awe_packetProcessUnified+0xbf2>
 80164a2:	6992      	ldr	r2, [r2, #24]
 80164a4:	6a67      	ldr	r7, [r4, #36]	@ 0x24
 80164a6:	f3c2 0210 	ubfx	r2, r2, #0, #17
 80164aa:	611a      	str	r2, [r3, #16]
 80164ac:	2f00      	cmp	r7, #0
 80164ae:	f47f acfb 	bne.w	8015ea8 <awe_packetProcessUnified+0x478>
 80164b2:	e501      	b.n	8015eb8 <awe_packetProcessUnified+0x488>
 80164b4:	f04f 0800 	mov.w	r8, #0
 80164b8:	f10c 0308 	add.w	r3, ip, #8
 80164bc:	2001      	movs	r0, #1
 80164be:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80164c2:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80164c6:	9301      	str	r3, [sp, #4]
 80164c8:	f8cd 800c 	str.w	r8, [sp, #12]
 80164cc:	f8cd 8000 	str.w	r8, [sp]
 80164d0:	4643      	mov	r3, r8
 80164d2:	9002      	str	r0, [sp, #8]
 80164d4:	e46e      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 80164d6:	2001      	movs	r0, #1
 80164d8:	e9dc 3202 	ldrd	r3, r2, [ip, #8]
 80164dc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80164e0:	af0b      	add	r7, sp, #44	@ 0x2c
 80164e2:	e9cd 0002 	strd	r0, r0, [sp, #8]
 80164e6:	2000      	movs	r0, #0
 80164e8:	e9cd 0700 	strd	r0, r7, [sp]
 80164ec:	e64f      	b.n	801618e <awe_packetProcessUnified+0x75e>
 80164ee:	2300      	movs	r3, #0
 80164f0:	2701      	movs	r7, #1
 80164f2:	a80b      	add	r0, sp, #44	@ 0x2c
 80164f4:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 80164f8:	9303      	str	r3, [sp, #12]
 80164fa:	9300      	str	r3, [sp, #0]
 80164fc:	e9cd 0701 	strd	r0, r7, [sp, #4]
 8016500:	e645      	b.n	801618e <awe_packetProcessUnified+0x75e>
 8016502:	2001      	movs	r0, #1
 8016504:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
 8016508:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801650c:	e9cd 0002 	strd	r0, r0, [sp, #8]
 8016510:	f10c 0714 	add.w	r7, ip, #20
 8016514:	9701      	str	r7, [sp, #4]
 8016516:	f8dc 0010 	ldr.w	r0, [ip, #16]
 801651a:	9000      	str	r0, [sp, #0]
 801651c:	4620      	mov	r0, r4
 801651e:	f7f3 fca3 	bl	8009e68 <awe_fwModuleClassSetCommon>
 8016522:	f7ff bb89 	b.w	8015c38 <awe_packetProcessUnified+0x208>
 8016526:	f8dc 3008 	ldr.w	r3, [ip, #8]
 801652a:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801652c:	b173      	cbz	r3, 801654c <awe_packetProcessUnified+0xb1c>
 801652e:	f10c 0008 	add.w	r0, ip, #8
 8016532:	f107 0108 	add.w	r1, r7, #8
 8016536:	2200      	movs	r2, #0
 8016538:	f850 3f04 	ldr.w	r3, [r0, #4]!
 801653c:	43db      	mvns	r3, r3
 801653e:	f841 3f04 	str.w	r3, [r1, #4]!
 8016542:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8016546:	3201      	adds	r2, #1
 8016548:	4293      	cmp	r3, r2
 801654a:	d8f5      	bhi.n	8016538 <awe_packetProcessUnified+0xb08>
 801654c:	1d1c      	adds	r4, r3, #4
 801654e:	0424      	lsls	r4, r4, #16
 8016550:	2300      	movs	r3, #0
 8016552:	e9c7 4300 	strd	r4, r3, [r7]
 8016556:	f8dc 3008 	ldr.w	r3, [ip, #8]
 801655a:	60bb      	str	r3, [r7, #8]
 801655c:	f7ff bb5a 	b.w	8015c14 <awe_packetProcessUnified+0x1e4>
 8016560:	f10c 0708 	add.w	r7, ip, #8
 8016564:	2001      	movs	r0, #1
 8016566:	f04f 0800 	mov.w	r8, #0
 801656a:	e9dc 3203 	ldrd	r3, r2, [ip, #12]
 801656e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016572:	9701      	str	r7, [sp, #4]
 8016574:	e9cd 0002 	strd	r0, r0, [sp, #8]
 8016578:	f8cd 8000 	str.w	r8, [sp]
 801657c:	e41a      	b.n	8015db4 <awe_packetProcessUnified+0x384>
 801657e:	e9dc 1201 	ldrd	r1, r2, [ip, #4]
 8016582:	4620      	mov	r0, r4
 8016584:	f7f3 fe74 	bl	800a270 <awe_ctrlSetStatus>
 8016588:	f7ff bb56 	b.w	8015c38 <awe_packetProcessUnified+0x208>
 801658c:	4620      	mov	r0, r4
 801658e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8016592:	aa0b      	add	r2, sp, #44	@ 0x2c
 8016594:	f7f3 feb0 	bl	800a2f8 <awe_ctrlGetStatus>
 8016598:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801659a:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 801659e:	603b      	str	r3, [r7, #0]
 80165a0:	1e03      	subs	r3, r0, #0
 80165a2:	bfa8      	it	ge
 80165a4:	9b0b      	ldrge	r3, [sp, #44]	@ 0x2c
 80165a6:	607b      	str	r3, [r7, #4]
 80165a8:	683c      	ldr	r4, [r7, #0]
 80165aa:	f7ff bb33 	b.w	8015c14 <awe_packetProcessUnified+0x1e4>
 80165ae:	f10c 0104 	add.w	r1, ip, #4
 80165b2:	c90e      	ldmia	r1, {r1, r2, r3}
 80165b4:	4620      	mov	r0, r4
 80165b6:	9200      	str	r2, [sp, #0]
 80165b8:	f10c 0210 	add.w	r2, ip, #16
 80165bc:	f7f3 fcfc 	bl	8009fb8 <awe_ctrlSetValue>
 80165c0:	f7ff bb3a 	b.w	8015c38 <awe_packetProcessUnified+0x208>
 80165c4:	e9dc 1701 	ldrd	r1, r7, [ip, #4]
 80165c8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80165ca:	f8dc 300c 	ldr.w	r3, [ip, #12]
 80165ce:	9700      	str	r7, [sp, #0]
 80165d0:	3208      	adds	r2, #8
 80165d2:	4620      	mov	r0, r4
 80165d4:	f7f3 fdc0 	bl	800a158 <awe_ctrlGetValue>
 80165d8:	2800      	cmp	r0, #0
 80165da:	f6ff ab2d 	blt.w	8015c38 <awe_packetProcessUnified+0x208>
 80165de:	1cfb      	adds	r3, r7, #3
 80165e0:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80165e2:	041c      	lsls	r4, r3, #16
 80165e4:	e9c7 4000 	strd	r4, r0, [r7]
 80165e8:	f7ff bb14 	b.w	8015c14 <awe_packetProcessUnified+0x1e4>
 80165ec:	e9dc 1701 	ldrd	r1, r7, [ip, #4]
 80165f0:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80165f2:	f8dc 0010 	ldr.w	r0, [ip, #16]
 80165f6:	f8dc 300c 	ldr.w	r3, [ip, #12]
 80165fa:	9001      	str	r0, [sp, #4]
 80165fc:	3208      	adds	r2, #8
 80165fe:	9700      	str	r7, [sp, #0]
 8016600:	4620      	mov	r0, r4
 8016602:	f7f3 fd3f 	bl	800a084 <awe_ctrlGetValueMask>
 8016606:	2800      	cmp	r0, #0
 8016608:	dae9      	bge.n	80165de <awe_packetProcessUnified+0xbae>
 801660a:	f7ff bb15 	b.w	8015c38 <awe_packetProcessUnified+0x208>
 801660e:	f06f 0326 	mvn.w	r3, #38	@ 0x26
 8016612:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8016614:	4698      	mov	r8, r3
 8016616:	f7ff ba40 	b.w	8015a9a <awe_packetProcessUnified+0x6a>
 801661a:	4622      	mov	r2, r4
 801661c:	46a0      	mov	r8, r4
 801661e:	f7ff ba4d 	b.w	8015abc <awe_packetProcessUnified+0x8c>
 8016622:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8016626:	2100      	movs	r1, #0
 8016628:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 801662c:	f017 fa92 	bl	802db54 <memset>
 8016630:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8016632:	e441      	b.n	8015eb8 <awe_packetProcessUnified+0x488>
 8016634:	60bb      	str	r3, [r7, #8]
 8016636:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016638:	60fa      	str	r2, [r7, #12]
 801663a:	e470      	b.n	8015f1e <awe_packetProcessUnified+0x4ee>
 801663c:	2b0c      	cmp	r3, #12
 801663e:	bf9c      	itt	ls
 8016640:	2306      	movls	r3, #6
 8016642:	f8c4 30f4 	strls.w	r3, [r4, #244]	@ 0xf4
 8016646:	e40f      	b.n	8015e68 <awe_packetProcessUnified+0x438>
 8016648:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801664a:	e54b      	b.n	80160e4 <awe_packetProcessUnified+0x6b4>
 801664c:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 801664e:	f8d4 3080 	ldr.w	r3, [r4, #128]	@ 0x80
 8016652:	f8c7 8014 	str.w	r8, [r7, #20]
 8016656:	f44f 22e0 	mov.w	r2, #458752	@ 0x70000
 801665a:	e9c7 8801 	strd	r8, r8, [r7, #4]
 801665e:	e9c7 8803 	strd	r8, r8, [r7, #12]
 8016662:	603a      	str	r2, [r7, #0]
 8016664:	2b00      	cmp	r3, #0
 8016666:	f43f aad4 	beq.w	8015c12 <awe_packetProcessUnified+0x1e2>
 801666a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801666c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801666e:	b112      	cbz	r2, 8016676 <awe_packetProcessUnified+0xc46>
 8016670:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016672:	695b      	ldr	r3, [r3, #20]
 8016674:	613b      	str	r3, [r7, #16]
 8016676:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8016678:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801667a:	2a00      	cmp	r2, #0
 801667c:	f43f aac9 	beq.w	8015c12 <awe_packetProcessUnified+0x1e2>
 8016680:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016682:	695b      	ldr	r3, [r3, #20]
 8016684:	617b      	str	r3, [r7, #20]
 8016686:	f7ff bac4 	b.w	8015c12 <awe_packetProcessUnified+0x1e2>
 801668a:	f06f 0819 	mvn.w	r8, #25
 801668e:	e4bd      	b.n	801600c <awe_packetProcessUnified+0x5dc>
 8016690:	ab0b      	add	r3, sp, #44	@ 0x2c
 8016692:	aa0a      	add	r2, sp, #40	@ 0x28
 8016694:	4620      	mov	r0, r4
 8016696:	f7f3 f8e5 	bl	8009864 <awe_fwGetObjectByID>
 801669a:	f1b0 0800 	subs.w	r8, r0, #0
 801669e:	f6ff acb5 	blt.w	801600c <awe_packetProcessUnified+0x5dc>
 80166a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80166a4:	e4a9      	b.n	8015ffa <awe_packetProcessUnified+0x5ca>
 80166a6:	2b0c      	cmp	r3, #12
 80166a8:	bf9c      	itt	ls
 80166aa:	2306      	movls	r3, #6
 80166ac:	f8c4 30f4 	strls.w	r3, [r4, #244]	@ 0xf4
 80166b0:	e6e6      	b.n	8016480 <awe_packetProcessUnified+0xa50>
 80166b2:	ab0b      	add	r3, sp, #44	@ 0x2c
 80166b4:	9300      	str	r3, [sp, #0]
 80166b6:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 80166ba:	ab0a      	add	r3, sp, #40	@ 0x28
 80166bc:	4620      	mov	r0, r4
 80166be:	2201      	movs	r2, #1
 80166c0:	f7f2 fd88 	bl	80091d4 <awe_fwLayoutProcess>
 80166c4:	1d7b      	adds	r3, r7, #5
 80166c6:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80166c8:	041c      	lsls	r4, r3, #16
 80166ca:	e9c7 4800 	strd	r4, r8, [r7]
 80166ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80166d0:	60bb      	str	r3, [r7, #8]
 80166d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80166d4:	60fb      	str	r3, [r7, #12]
 80166d6:	f7ff ba9d 	b.w	8015c14 <awe_packetProcessUnified+0x1e4>
 80166da:	691a      	ldr	r2, [r3, #16]
 80166dc:	a809      	add	r0, sp, #36	@ 0x24
 80166de:	3a01      	subs	r2, #1
 80166e0:	615a      	str	r2, [r3, #20]
 80166e2:	4619      	mov	r1, r3
 80166e4:	9000      	str	r0, [sp, #0]
 80166e6:	ab08      	add	r3, sp, #32
 80166e8:	2201      	movs	r2, #1
 80166ea:	4620      	mov	r0, r4
 80166ec:	f7f2 fd72 	bl	80091d4 <awe_fwLayoutProcess>
 80166f0:	e48c      	b.n	801600c <awe_packetProcessUnified+0x5dc>
 80166f2:	bf00      	nop
 80166f4:	4126aaab 	.word	0x4126aaab

080166f8 <awe_packetProcess>:
 80166f8:	f7ff b99a 	b.w	8015a30 <awe_packetProcessUnified>

080166fc <awe_parserInitSharedData>:
 80166fc:	b430      	push	{r4, r5}
 80166fe:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
 8016702:	6805      	ldr	r5, [r0, #0]
 8016704:	6ec4      	ldr	r4, [r0, #108]	@ 0x6c
 8016706:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8016708:	f8c1 2138 	str.w	r2, [r1, #312]	@ 0x138
 801670c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8016710:	f8c1 5130 	str.w	r5, [r1, #304]	@ 0x130
 8016714:	f8c1 4134 	str.w	r4, [r1, #308]	@ 0x134
 8016718:	2000      	movs	r0, #0
 801671a:	f8c1 312c 	str.w	r3, [r1, #300]	@ 0x12c
 801671e:	bc30      	pop	{r4, r5}
 8016720:	4770      	bx	lr
 8016722:	bf00      	nop

08016724 <awe_parserLoadAWB>:
 8016724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016728:	b087      	sub	sp, #28
 801672a:	4604      	mov	r4, r0
 801672c:	f100 0618 	add.w	r6, r0, #24
 8016730:	460f      	mov	r7, r1
 8016732:	2100      	movs	r1, #0
 8016734:	460d      	mov	r5, r1
 8016736:	9202      	str	r2, [sp, #8]
 8016738:	4630      	mov	r0, r6
 801673a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801673e:	9300      	str	r3, [sp, #0]
 8016740:	f017 fa08 	bl	802db54 <memset>
 8016744:	4620      	mov	r0, r4
 8016746:	49b2      	ldr	r1, [pc, #712]	@ (8016a10 <awe_parserLoadAWB+0x2ec>)
 8016748:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
 801674c:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 8016750:	f8c4 5120 	str.w	r5, [r4, #288]	@ 0x120
 8016754:	f012 fbd0 	bl	8028ef8 <awe_parserInitKey>
 8016758:	6823      	ldr	r3, [r4, #0]
 801675a:	4620      	mov	r0, r4
 801675c:	2101      	movs	r1, #1
 801675e:	4798      	blx	r3
 8016760:	2801      	cmp	r0, #1
 8016762:	f040 814f 	bne.w	8016a04 <awe_parserLoadAWB+0x2e0>
 8016766:	4bab      	ldr	r3, [pc, #684]	@ (8016a14 <awe_parserLoadAWB+0x2f0>)
 8016768:	69a2      	ldr	r2, [r4, #24]
 801676a:	429a      	cmp	r2, r3
 801676c:	f000 80f1 	beq.w	8016952 <awe_parserLoadAWB+0x22e>
 8016770:	6863      	ldr	r3, [r4, #4]
 8016772:	b10b      	cbz	r3, 8016778 <awe_parserLoadAWB+0x54>
 8016774:	4620      	mov	r0, r4
 8016776:	4798      	blx	r3
 8016778:	9b00      	ldr	r3, [sp, #0]
 801677a:	2b00      	cmp	r3, #0
 801677c:	d06c      	beq.n	8016858 <awe_parserLoadAWB+0x134>
 801677e:	f04f 0a00 	mov.w	sl, #0
 8016782:	46d3      	mov	fp, sl
 8016784:	46d1      	mov	r9, sl
 8016786:	f8d4 511c 	ldr.w	r5, [r4, #284]	@ 0x11c
 801678a:	f8d4 3118 	ldr.w	r3, [r4, #280]	@ 0x118
 801678e:	e00d      	b.n	80167ac <awe_parserLoadAWB+0x88>
 8016790:	6823      	ldr	r3, [r4, #0]
 8016792:	4798      	blx	r3
 8016794:	f8d4 3124 	ldr.w	r3, [r4, #292]	@ 0x124
 8016798:	4605      	mov	r5, r0
 801679a:	2b00      	cmp	r3, #0
 801679c:	d170      	bne.n	8016880 <awe_parserLoadAWB+0x15c>
 801679e:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
 80167a2:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80167a6:	2d00      	cmp	r5, #0
 80167a8:	d056      	beq.n	8016858 <awe_parserLoadAWB+0x134>
 80167aa:	2300      	movs	r3, #0
 80167ac:	42ab      	cmp	r3, r5
 80167ae:	f04f 0140 	mov.w	r1, #64	@ 0x40
 80167b2:	4620      	mov	r0, r4
 80167b4:	d0ec      	beq.n	8016790 <awe_parserLoadAWB+0x6c>
 80167b6:	3306      	adds	r3, #6
 80167b8:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80167bc:	603b      	str	r3, [r7, #0]
 80167be:	f8d4 1118 	ldr.w	r1, [r4, #280]	@ 0x118
 80167c2:	3101      	adds	r1, #1
 80167c4:	f8c4 1118 	str.w	r1, [r4, #280]	@ 0x118
 80167c8:	683e      	ldr	r6, [r7, #0]
 80167ca:	2e00      	cmp	r6, #0
 80167cc:	d044      	beq.n	8016858 <awe_parserLoadAWB+0x134>
 80167ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80167d0:	0c36      	lsrs	r6, r6, #16
 80167d2:	42b3      	cmp	r3, r6
 80167d4:	f0c0 810d 	bcc.w	80169f2 <awe_parserLoadAWB+0x2ce>
 80167d8:	1eb3      	subs	r3, r6, #2
 80167da:	9301      	str	r3, [sp, #4]
 80167dc:	d160      	bne.n	80168a0 <awe_parserLoadAWB+0x17c>
 80167de:	f1b6 0a01 	subs.w	sl, r6, #1
 80167e2:	f000 80a7 	beq.w	8016934 <awe_parserLoadAWB+0x210>
 80167e6:	f1a7 0308 	sub.w	r3, r7, #8
 80167ea:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 80167ee:	2200      	movs	r2, #0
 80167f0:	1f3b      	subs	r3, r7, #4
 80167f2:	f853 1f04 	ldr.w	r1, [r3, #4]!
 80167f6:	429e      	cmp	r6, r3
 80167f8:	ea82 0201 	eor.w	r2, r2, r1
 80167fc:	d1f9      	bne.n	80167f2 <awe_parserLoadAWB+0xce>
 80167fe:	eb07 038a 	add.w	r3, r7, sl, lsl #2
 8016802:	eb0a 050b 	add.w	r5, sl, fp
 8016806:	601a      	str	r2, [r3, #0]
 8016808:	683b      	ldr	r3, [r7, #0]
 801680a:	f8d4 212c 	ldr.w	r2, [r4, #300]	@ 0x12c
 801680e:	b2de      	uxtb	r6, r3
 8016810:	2a00      	cmp	r2, #0
 8016812:	f040 80bd 	bne.w	8016990 <awe_parserLoadAWB+0x26c>
 8016816:	e9dd 3012 	ldrd	r3, r0, [sp, #72]	@ 0x48
 801681a:	4798      	blx	r3
 801681c:	4680      	mov	r8, r0
 801681e:	f1b8 0f00 	cmp.w	r8, #0
 8016822:	d13b      	bne.n	801689c <awe_parserLoadAWB+0x178>
 8016824:	9b02      	ldr	r3, [sp, #8]
 8016826:	885b      	ldrh	r3, [r3, #2]
 8016828:	2b02      	cmp	r3, #2
 801682a:	d911      	bls.n	8016850 <awe_parserLoadAWB+0x12c>
 801682c:	2e06      	cmp	r6, #6
 801682e:	d019      	beq.n	8016864 <awe_parserLoadAWB+0x140>
 8016830:	f1a6 030f 	sub.w	r3, r6, #15
 8016834:	2b01      	cmp	r3, #1
 8016836:	d915      	bls.n	8016864 <awe_parserLoadAWB+0x140>
 8016838:	2e81      	cmp	r6, #129	@ 0x81
 801683a:	d013      	beq.n	8016864 <awe_parserLoadAWB+0x140>
 801683c:	9b02      	ldr	r3, [sp, #8]
 801683e:	4a76      	ldr	r2, [pc, #472]	@ (8016a18 <awe_parserLoadAWB+0x2f4>)
 8016840:	685b      	ldr	r3, [r3, #4]
 8016842:	0c19      	lsrs	r1, r3, #16
 8016844:	0409      	lsls	r1, r1, #16
 8016846:	4291      	cmp	r1, r2
 8016848:	d002      	beq.n	8016850 <awe_parserLoadAWB+0x12c>
 801684a:	f1b3 0800 	subs.w	r8, r3, #0
 801684e:	db0f      	blt.n	8016870 <awe_parserLoadAWB+0x14c>
 8016850:	9b00      	ldr	r3, [sp, #0]
 8016852:	42ab      	cmp	r3, r5
 8016854:	46ab      	mov	fp, r5
 8016856:	d896      	bhi.n	8016786 <awe_parserLoadAWB+0x62>
 8016858:	f04f 0800 	mov.w	r8, #0
 801685c:	4640      	mov	r0, r8
 801685e:	b007      	add	sp, #28
 8016860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016864:	9b02      	ldr	r3, [sp, #8]
 8016866:	f8d3 8008 	ldr.w	r8, [r3, #8]
 801686a:	f1b8 0f00 	cmp.w	r8, #0
 801686e:	dae5      	bge.n	801683c <awe_parserLoadAWB+0x118>
 8016870:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016872:	b10b      	cbz	r3, 8016878 <awe_parserLoadAWB+0x154>
 8016874:	f8c3 b000 	str.w	fp, [r3]
 8016878:	4640      	mov	r0, r8
 801687a:	b007      	add	sp, #28
 801687c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016880:	f06f 013f 	mvn.w	r1, #63	@ 0x3f
 8016884:	4620      	mov	r0, r4
 8016886:	f012 fb77 	bl	8028f78 <awe_parserXxteaex>
 801688a:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
 801688e:	f8c4 9118 	str.w	r9, [r4, #280]	@ 0x118
 8016892:	2d00      	cmp	r5, #0
 8016894:	d189      	bne.n	80167aa <awe_parserLoadAWB+0x86>
 8016896:	f04f 0800 	mov.w	r8, #0
 801689a:	e7df      	b.n	801685c <awe_parserLoadAWB+0x138>
 801689c:	daec      	bge.n	8016878 <awe_parserLoadAWB+0x154>
 801689e:	e7e7      	b.n	8016870 <awe_parserLoadAWB+0x14c>
 80168a0:	1d3b      	adds	r3, r7, #4
 80168a2:	1eb2      	subs	r2, r6, #2
 80168a4:	9603      	str	r6, [sp, #12]
 80168a6:	e9cd a704 	strd	sl, r7, [sp, #16]
 80168aa:	f8d4 511c 	ldr.w	r5, [r4, #284]	@ 0x11c
 80168ae:	f04f 0800 	mov.w	r8, #0
 80168b2:	4616      	mov	r6, r2
 80168b4:	461f      	mov	r7, r3
 80168b6:	e00d      	b.n	80168d4 <awe_parserLoadAWB+0x1b0>
 80168b8:	6823      	ldr	r3, [r4, #0]
 80168ba:	2140      	movs	r1, #64	@ 0x40
 80168bc:	4620      	mov	r0, r4
 80168be:	4798      	blx	r3
 80168c0:	f8d4 3124 	ldr.w	r3, [r4, #292]	@ 0x124
 80168c4:	4605      	mov	r5, r0
 80168c6:	b9eb      	cbnz	r3, 8016904 <awe_parserLoadAWB+0x1e0>
 80168c8:	f8c4 011c 	str.w	r0, [r4, #284]	@ 0x11c
 80168cc:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80168d0:	b318      	cbz	r0, 801691a <awe_parserLoadAWB+0x1f6>
 80168d2:	2100      	movs	r1, #0
 80168d4:	1a6d      	subs	r5, r5, r1
 80168d6:	d0ef      	beq.n	80168b8 <awe_parserLoadAWB+0x194>
 80168d8:	42b5      	cmp	r5, r6
 80168da:	bf28      	it	cs
 80168dc:	4635      	movcs	r5, r6
 80168de:	3106      	adds	r1, #6
 80168e0:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 80168e4:	4652      	mov	r2, sl
 80168e6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80168ea:	4638      	mov	r0, r7
 80168ec:	f017 f9ad 	bl	802dc4a <memcpy>
 80168f0:	f8d4 2118 	ldr.w	r2, [r4, #280]	@ 0x118
 80168f4:	1b76      	subs	r6, r6, r5
 80168f6:	442a      	add	r2, r5
 80168f8:	44a8      	add	r8, r5
 80168fa:	f8c4 2118 	str.w	r2, [r4, #280]	@ 0x118
 80168fe:	d00c      	beq.n	801691a <awe_parserLoadAWB+0x1f6>
 8016900:	4457      	add	r7, sl
 8016902:	e7d9      	b.n	80168b8 <awe_parserLoadAWB+0x194>
 8016904:	f06f 013f 	mvn.w	r1, #63	@ 0x3f
 8016908:	4620      	mov	r0, r4
 801690a:	f012 fb35 	bl	8028f78 <awe_parserXxteaex>
 801690e:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
 8016912:	f8c4 9118 	str.w	r9, [r4, #280]	@ 0x118
 8016916:	2d00      	cmp	r5, #0
 8016918:	d1db      	bne.n	80168d2 <awe_parserLoadAWB+0x1ae>
 801691a:	f1b8 0f00 	cmp.w	r8, #0
 801691e:	e9dd 6a03 	ldrd	r6, sl, [sp, #12]
 8016922:	9f05      	ldr	r7, [sp, #20]
 8016924:	db0a      	blt.n	801693c <awe_parserLoadAWB+0x218>
 8016926:	9b01      	ldr	r3, [sp, #4]
 8016928:	4543      	cmp	r3, r8
 801692a:	d195      	bne.n	8016858 <awe_parserLoadAWB+0x134>
 801692c:	f1b6 0a01 	subs.w	sl, r6, #1
 8016930:	f47f af59 	bne.w	80167e6 <awe_parserLoadAWB+0xc2>
 8016934:	465d      	mov	r5, fp
 8016936:	463b      	mov	r3, r7
 8016938:	4652      	mov	r2, sl
 801693a:	e764      	b.n	8016806 <awe_parserLoadAWB+0xe2>
 801693c:	f118 0f37 	cmn.w	r8, #55	@ 0x37
 8016940:	d08a      	beq.n	8016858 <awe_parserLoadAWB+0x134>
 8016942:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016944:	2b00      	cmp	r3, #0
 8016946:	d097      	beq.n	8016878 <awe_parserLoadAWB+0x154>
 8016948:	461a      	mov	r2, r3
 801694a:	ebab 030a 	sub.w	r3, fp, sl
 801694e:	6013      	str	r3, [r2, #0]
 8016950:	e792      	b.n	8016878 <awe_parserLoadAWB+0x154>
 8016952:	68a3      	ldr	r3, [r4, #8]
 8016954:	2b00      	cmp	r3, #0
 8016956:	d058      	beq.n	8016a0a <awe_parserLoadAWB+0x2e6>
 8016958:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801695c:	f8c4 0124 	str.w	r0, [r4, #292]	@ 0x124
 8016960:	4629      	mov	r1, r5
 8016962:	4630      	mov	r0, r6
 8016964:	f017 f8f6 	bl	802db54 <memset>
 8016968:	6823      	ldr	r3, [r4, #0]
 801696a:	2140      	movs	r1, #64	@ 0x40
 801696c:	4620      	mov	r0, r4
 801696e:	4798      	blx	r3
 8016970:	f06f 013f 	mvn.w	r1, #63	@ 0x3f
 8016974:	4620      	mov	r0, r4
 8016976:	f012 faff 	bl	8028f78 <awe_parserXxteaex>
 801697a:	4b28      	ldr	r3, [pc, #160]	@ (8016a1c <awe_parserLoadAWB+0x2f8>)
 801697c:	69a2      	ldr	r2, [r4, #24]
 801697e:	429a      	cmp	r2, r3
 8016980:	4629      	mov	r1, r5
 8016982:	4620      	mov	r0, r4
 8016984:	d032      	beq.n	80169ec <awe_parserLoadAWB+0x2c8>
 8016986:	f012 fae3 	bl	8028f50 <awe_parserModKey>
 801698a:	f06f 085f 	mvn.w	r8, #95	@ 0x5f
 801698e:	e773      	b.n	8016878 <awe_parserLoadAWB+0x154>
 8016990:	f8d4 2134 	ldr.w	r2, [r4, #308]	@ 0x134
 8016994:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016998:	429a      	cmp	r2, r3
 801699a:	d92d      	bls.n	80169f8 <awe_parserLoadAWB+0x2d4>
 801699c:	f1a6 031b 	sub.w	r3, r6, #27
 80169a0:	9301      	str	r3, [sp, #4]
 80169a2:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 80169a6:	e002      	b.n	80169ae <awe_parserLoadAWB+0x28a>
 80169a8:	f8d8 3110 	ldr.w	r3, [r8, #272]	@ 0x110
 80169ac:	b943      	cbnz	r3, 80169c0 <awe_parserLoadAWB+0x29c>
 80169ae:	2101      	movs	r1, #1
 80169b0:	4640      	mov	r0, r8
 80169b2:	f012 fc43 	bl	802923c <awe_packetProcessMulti>
 80169b6:	f110 0f75 	cmn.w	r0, #117	@ 0x75
 80169ba:	d0f5      	beq.n	80169a8 <awe_parserLoadAWB+0x284>
 80169bc:	4680      	mov	r8, r0
 80169be:	e72e      	b.n	801681e <awe_parserLoadAWB+0xfa>
 80169c0:	2e0c      	cmp	r6, #12
 80169c2:	f8d4 2138 	ldr.w	r2, [r4, #312]	@ 0x138
 80169c6:	f04f 0100 	mov.w	r1, #0
 80169ca:	d008      	beq.n	80169de <awe_parserLoadAWB+0x2ba>
 80169cc:	9801      	ldr	r0, [sp, #4]
 80169ce:	2801      	cmp	r0, #1
 80169d0:	d905      	bls.n	80169de <awe_parserLoadAWB+0x2ba>
 80169d2:	68d2      	ldr	r2, [r2, #12]
 80169d4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80169d8:	f012 fc30 	bl	802923c <awe_packetProcessMulti>
 80169dc:	e7e7      	b.n	80169ae <awe_parserLoadAWB+0x28a>
 80169de:	6952      	ldr	r2, [r2, #20]
 80169e0:	2100      	movs	r1, #0
 80169e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80169e6:	f012 fc29 	bl	802923c <awe_packetProcessMulti>
 80169ea:	e7e0      	b.n	80169ae <awe_parserLoadAWB+0x28a>
 80169ec:	f012 fab0 	bl	8028f50 <awe_parserModKey>
 80169f0:	e6c2      	b.n	8016778 <awe_parserLoadAWB+0x54>
 80169f2:	f06f 084a 	mvn.w	r8, #74	@ 0x4a
 80169f6:	e7a4      	b.n	8016942 <awe_parserLoadAWB+0x21e>
 80169f8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80169fa:	f06f 0872 	mvn.w	r8, #114	@ 0x72
 80169fe:	f8c3 b000 	str.w	fp, [r3]
 8016a02:	e739      	b.n	8016878 <awe_parserLoadAWB+0x154>
 8016a04:	f06f 086a 	mvn.w	r8, #106	@ 0x6a
 8016a08:	e736      	b.n	8016878 <awe_parserLoadAWB+0x154>
 8016a0a:	f06f 085f 	mvn.w	r8, #95	@ 0x5f
 8016a0e:	e733      	b.n	8016878 <awe_parserLoadAWB+0x154>
 8016a10:	0803ae8c 	.word	0x0803ae8c
 8016a14:	7a6b5c4d 	.word	0x7a6b5c4d
 8016a18:	beef0000 	.word	0xbeef0000
 8016a1c:	deadbeef 	.word	0xdeadbeef

08016a20 <awe_fwSetPackedVersionInit>:
 8016a20:	b410      	push	{r4}
 8016a22:	b083      	sub	sp, #12
 8016a24:	4b0e      	ldr	r3, [pc, #56]	@ (8016a60 <awe_fwSetPackedVersionInit+0x40>)
 8016a26:	490f      	ldr	r1, [pc, #60]	@ (8016a64 <awe_fwSetPackedVersionInit+0x44>)
 8016a28:	2200      	movs	r2, #0
 8016a2a:	9201      	str	r2, [sp, #4]
 8016a2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8016a2e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8016a32:	631a      	str	r2, [r3, #48]	@ 0x30
 8016a34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016a36:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8016a3a:	9301      	str	r3, [sp, #4]
 8016a3c:	2201      	movs	r2, #1
 8016a3e:	f04f 33a5 	mov.w	r3, #2779096485	@ 0xa5a5a5a5
 8016a42:	9c01      	ldr	r4, [sp, #4]
 8016a44:	608a      	str	r2, [r1, #8]
 8016a46:	600b      	str	r3, [r1, #0]
 8016a48:	b130      	cbz	r0, 8016a58 <awe_fwSetPackedVersionInit+0x38>
 8016a4a:	f103 4355 	add.w	r3, r3, #3573547008	@ 0xd5000000
 8016a4e:	f5a3 1369 	sub.w	r3, r3, #3817472	@ 0x3a4000
 8016a52:	f6a3 135c 	subw	r3, r3, #2396	@ 0x95c
 8016a56:	6283      	str	r3, [r0, #40]	@ 0x28
 8016a58:	b003      	add	sp, #12
 8016a5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016a5e:	4770      	bx	lr
 8016a60:	40023800 	.word	0x40023800
 8016a64:	40023000 	.word	0x40023000

08016a68 <awe_fwSetPackedVersion>:
 8016a68:	b082      	sub	sp, #8
 8016a6a:	4b08      	ldr	r3, [pc, #32]	@ (8016a8c <awe_fwSetPackedVersion+0x24>)
 8016a6c:	f04f 32cd 	mov.w	r2, #3452816845	@ 0xcdcdcdcd
 8016a70:	2100      	movs	r1, #0
 8016a72:	9101      	str	r1, [sp, #4]
 8016a74:	601a      	str	r2, [r3, #0]
 8016a76:	6819      	ldr	r1, [r3, #0]
 8016a78:	601a      	str	r2, [r3, #0]
 8016a7a:	681b      	ldr	r3, [r3, #0]
 8016a7c:	4299      	cmp	r1, r3
 8016a7e:	bf04      	itt	eq
 8016a80:	f06f 034b 	mvneq.w	r3, #75	@ 0x4b
 8016a84:	6003      	streq	r3, [r0, #0]
 8016a86:	b002      	add	sp, #8
 8016a88:	4770      	bx	lr
 8016a8a:	bf00      	nop
 8016a8c:	40023000 	.word	0x40023000

08016a90 <sdr_reset>:
 8016a90:	b4f0      	push	{r4, r5, r6, r7}
 8016a92:	4d1c      	ldr	r5, [pc, #112]	@ (8016b04 <sdr_reset+0x74>)
 8016a94:	4c1c      	ldr	r4, [pc, #112]	@ (8016b08 <sdr_reset+0x78>)
 8016a96:	682a      	ldr	r2, [r5, #0]
 8016a98:	4f1c      	ldr	r7, [pc, #112]	@ (8016b0c <sdr_reset+0x7c>)
 8016a9a:	6001      	str	r1, [r0, #0]
 8016a9c:	f022 0201 	bic.w	r2, r2, #1
 8016aa0:	602a      	str	r2, [r5, #0]
 8016aa2:	6027      	str	r7, [r4, #0]
 8016aa4:	4e1a      	ldr	r6, [pc, #104]	@ (8016b10 <sdr_reset+0x80>)
 8016aa6:	6822      	ldr	r2, [r4, #0]
 8016aa8:	42b2      	cmp	r2, r6
 8016aaa:	4603      	mov	r3, r0
 8016aac:	d126      	bne.n	8016afc <sdr_reset+0x6c>
 8016aae:	4a19      	ldr	r2, [pc, #100]	@ (8016b14 <sdr_reset+0x84>)
 8016ab0:	4919      	ldr	r1, [pc, #100]	@ (8016b18 <sdr_reset+0x88>)
 8016ab2:	6242      	str	r2, [r0, #36]	@ 0x24
 8016ab4:	f504 04e1 	add.w	r4, r4, #7372800	@ 0x708000
 8016ab8:	f504 44cd 	add.w	r4, r4, #26240	@ 0x6680
 8016abc:	6299      	str	r1, [r3, #40]	@ 0x28
 8016abe:	2104      	movs	r1, #4
 8016ac0:	4d16      	ldr	r5, [pc, #88]	@ (8016b1c <sdr_reset+0x8c>)
 8016ac2:	6419      	str	r1, [r3, #64]	@ 0x40
 8016ac4:	3407      	adds	r4, #7
 8016ac6:	f240 2119 	movw	r1, #537	@ 0x219
 8016aca:	2000      	movs	r0, #0
 8016acc:	2201      	movs	r2, #1
 8016ace:	4f14      	ldr	r7, [pc, #80]	@ (8016b20 <sdr_reset+0x90>)
 8016ad0:	4e14      	ldr	r6, [pc, #80]	@ (8016b24 <sdr_reset+0x94>)
 8016ad2:	65dd      	str	r5, [r3, #92]	@ 0x5c
 8016ad4:	661c      	str	r4, [r3, #96]	@ 0x60
 8016ad6:	2510      	movs	r5, #16
 8016ad8:	24a0      	movs	r4, #160	@ 0xa0
 8016ada:	6559      	str	r1, [r3, #84]	@ 0x54
 8016adc:	2114      	movs	r1, #20
 8016ade:	609a      	str	r2, [r3, #8]
 8016ae0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8016ae2:	60d8      	str	r0, [r3, #12]
 8016ae4:	6118      	str	r0, [r3, #16]
 8016ae6:	6458      	str	r0, [r3, #68]	@ 0x44
 8016ae8:	6498      	str	r0, [r3, #72]	@ 0x48
 8016aea:	6518      	str	r0, [r3, #80]	@ 0x50
 8016aec:	665f      	str	r7, [r3, #100]	@ 0x64
 8016aee:	669e      	str	r6, [r3, #104]	@ 0x68
 8016af0:	635d      	str	r5, [r3, #52]	@ 0x34
 8016af2:	639c      	str	r4, [r3, #56]	@ 0x38
 8016af4:	66d9      	str	r1, [r3, #108]	@ 0x6c
 8016af6:	605a      	str	r2, [r3, #4]
 8016af8:	bcf0      	pop	{r4, r5, r6, r7}
 8016afa:	4770      	bx	lr
 8016afc:	2200      	movs	r2, #0
 8016afe:	f06f 0006 	mvn.w	r0, #6
 8016b02:	e7f8      	b.n	8016af6 <sdr_reset+0x66>
 8016b04:	e0002000 	.word	0xe0002000
 8016b08:	40023000 	.word	0x40023000
 8016b0c:	a62c49b4 	.word	0xa62c49b4
 8016b10:	ce7b91ef 	.word	0xce7b91ef
 8016b14:	40fe147b 	.word	0x40fe147b
 8016b18:	40a051ec 	.word	0x40a051ec
 8016b1c:	3cb28502 	.word	0x3cb28502
 8016b20:	7d70a2c6 	.word	0x7d70a2c6
 8016b24:	06664787 	.word	0x06664787

08016b28 <sdr_setConfig>:
 8016b28:	b538      	push	{r3, r4, r5, lr}
 8016b2a:	6882      	ldr	r2, [r0, #8]
 8016b2c:	6843      	ldr	r3, [r0, #4]
 8016b2e:	6804      	ldr	r4, [r0, #0]
 8016b30:	608c      	str	r4, [r1, #8]
 8016b32:	4293      	cmp	r3, r2
 8016b34:	ed2d 8b02 	vpush	{d8}
 8016b38:	618b      	str	r3, [r1, #24]
 8016b3a:	61ca      	str	r2, [r1, #28]
 8016b3c:	dd40      	ble.n	8016bc0 <sdr_setConfig+0x98>
 8016b3e:	1e5a      	subs	r2, r3, #1
 8016b40:	2a27      	cmp	r2, #39	@ 0x27
 8016b42:	d83d      	bhi.n	8016bc0 <sdr_setConfig+0x98>
 8016b44:	ee07 3a90 	vmov	s15, r3
 8016b48:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8016b4c:	460c      	mov	r4, r1
 8016b4e:	eeb2 8a04 	vmov.f32	s16, #36	@ 0x41200000  10.0
 8016b52:	eec0 0a88 	vdiv.f32	s1, s1, s16
 8016b56:	4605      	mov	r5, r0
 8016b58:	eeb0 0a48 	vmov.f32	s0, s16
 8016b5c:	f017 fed2 	bl	802e904 <powf>
 8016b60:	69e3      	ldr	r3, [r4, #28]
 8016b62:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 8016b66:	1e5a      	subs	r2, r3, #1
 8016b68:	2a27      	cmp	r2, #39	@ 0x27
 8016b6a:	d829      	bhi.n	8016bc0 <sdr_setConfig+0x98>
 8016b6c:	ee07 3a90 	vmov	s15, r3
 8016b70:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8016b74:	eeb0 0a48 	vmov.f32	s0, s16
 8016b78:	eec0 0a88 	vdiv.f32	s1, s1, s16
 8016b7c:	f017 fec2 	bl	802e904 <powf>
 8016b80:	68eb      	ldr	r3, [r5, #12]
 8016b82:	65a3      	str	r3, [r4, #88]	@ 0x58
 8016b84:	f103 0257 	add.w	r2, r3, #87	@ 0x57
 8016b88:	2a57      	cmp	r2, #87	@ 0x57
 8016b8a:	ed84 0a0a 	vstr	s0, [r4, #40]	@ 0x28
 8016b8e:	d81c      	bhi.n	8016bca <sdr_setConfig+0xa2>
 8016b90:	ee07 3a90 	vmov	s15, r3
 8016b94:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8016b98:	eeb0 0a48 	vmov.f32	s0, s16
 8016b9c:	eec0 0a88 	vdiv.f32	s1, s1, s16
 8016ba0:	f017 feb0 	bl	802e904 <powf>
 8016ba4:	692b      	ldr	r3, [r5, #16]
 8016ba6:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8016ba8:	2000      	movs	r0, #0
 8016baa:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8016bd0 <sdr_setConfig+0xa8>
 8016bae:	ee20 0a27 	vmul.f32	s0, s0, s15
 8016bb2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8016bb6:	ed84 0a15 	vstr	s0, [r4, #84]	@ 0x54
 8016bba:	ecbd 8b02 	vpop	{d8}
 8016bbe:	bd38      	pop	{r3, r4, r5, pc}
 8016bc0:	ecbd 8b02 	vpop	{d8}
 8016bc4:	f06f 0004 	mvn.w	r0, #4
 8016bc8:	bd38      	pop	{r3, r4, r5, pc}
 8016bca:	f06f 0005 	mvn.w	r0, #5
 8016bce:	e7f4      	b.n	8016bba <sdr_setConfig+0x92>
 8016bd0:	4dfffc00 	.word	0x4dfffc00

08016bd4 <sdr_getConfig>:
 8016bd4:	b4f0      	push	{r4, r5, r6, r7}
 8016bd6:	698a      	ldr	r2, [r1, #24]
 8016bd8:	688c      	ldr	r4, [r1, #8]
 8016bda:	69cb      	ldr	r3, [r1, #28]
 8016bdc:	6d8f      	ldr	r7, [r1, #88]	@ 0x58
 8016bde:	6ece      	ldr	r6, [r1, #108]	@ 0x6c
 8016be0:	68cd      	ldr	r5, [r1, #12]
 8016be2:	6004      	str	r4, [r0, #0]
 8016be4:	694c      	ldr	r4, [r1, #20]
 8016be6:	6042      	str	r2, [r0, #4]
 8016be8:	6cca      	ldr	r2, [r1, #76]	@ 0x4c
 8016bea:	6083      	str	r3, [r0, #8]
 8016bec:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8016bee:	6b09      	ldr	r1, [r1, #48]	@ 0x30
 8016bf0:	6241      	str	r1, [r0, #36]	@ 0x24
 8016bf2:	60c7      	str	r7, [r0, #12]
 8016bf4:	6106      	str	r6, [r0, #16]
 8016bf6:	6145      	str	r5, [r0, #20]
 8016bf8:	6184      	str	r4, [r0, #24]
 8016bfa:	61c2      	str	r2, [r0, #28]
 8016bfc:	6203      	str	r3, [r0, #32]
 8016bfe:	bcf0      	pop	{r4, r5, r6, r7}
 8016c00:	2000      	movs	r0, #0
 8016c02:	4770      	bx	lr

08016c04 <sdr_setParam>:
 8016c04:	b538      	push	{r3, r4, r5, lr}
 8016c06:	4a2e      	ldr	r2, [pc, #184]	@ (8016cc0 <sdr_setParam+0xbc>)
 8016c08:	6803      	ldr	r3, [r0, #0]
 8016c0a:	6885      	ldr	r5, [r0, #8]
 8016c0c:	6840      	ldr	r0, [r0, #4]
 8016c0e:	6388      	str	r0, [r1, #56]	@ 0x38
 8016c10:	fb82 4203 	smull	r4, r2, r2, r3
 8016c14:	17db      	asrs	r3, r3, #31
 8016c16:	ebc3 13a2 	rsb	r3, r3, r2, asr #6
 8016c1a:	1eaa      	subs	r2, r5, #2
 8016c1c:	2a12      	cmp	r2, #18
 8016c1e:	ed2d 8b04 	vpush	{d8-d9}
 8016c22:	fb90 f4f3 	sdiv	r4, r0, r3
 8016c26:	634b      	str	r3, [r1, #52]	@ 0x34
 8016c28:	640d      	str	r5, [r1, #64]	@ 0x40
 8016c2a:	d845      	bhi.n	8016cb8 <sdr_setParam+0xb4>
 8016c2c:	4263      	negs	r3, r4
 8016c2e:	ee09 3a10 	vmov	s18, r3
 8016c32:	ed9f 0a24 	vldr	s0, [pc, #144]	@ 8016cc4 <sdr_setParam+0xc0>
 8016c36:	eddf 8a24 	vldr	s17, [pc, #144]	@ 8016cc8 <sdr_setParam+0xc4>
 8016c3a:	ed9f 8a24 	vldr	s16, [pc, #144]	@ 8016ccc <sdr_setParam+0xc8>
 8016c3e:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8016c42:	460d      	mov	r5, r1
 8016c44:	ee89 0a00 	vdiv.f32	s0, s18, s0
 8016c48:	f017 fdd8 	bl	802e7fc <expf>
 8016c4c:	ee20 0a28 	vmul.f32	s0, s0, s17
 8016c50:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 8016cd0 <sdr_setParam+0xcc>
 8016c54:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8016c58:	ee89 0a27 	vdiv.f32	s0, s18, s15
 8016c5c:	ed85 7a1a 	vstr	s14, [r5, #104]	@ 0x68
 8016c60:	f017 fdcc 	bl	802e7fc <expf>
 8016c64:	ee07 4a90 	vmov	s15, r4
 8016c68:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8016cd4 <sdr_setParam+0xd0>
 8016c6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016c70:	ee20 0a28 	vmul.f32	s0, s0, s17
 8016c74:	ee87 9a87 	vdiv.f32	s18, s15, s14
 8016c78:	eefd 8ac0 	vcvt.s32.f32	s17, s0
 8016c7c:	eef0 0a49 	vmov.f32	s1, s18
 8016c80:	ed9f 0a15 	vldr	s0, [pc, #84]	@ 8016cd8 <sdr_setParam+0xd4>
 8016c84:	edc5 8a19 	vstr	s17, [r5, #100]	@ 0x64
 8016c88:	f017 fe3c 	bl	802e904 <powf>
 8016c8c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8016c90:	eef0 0a49 	vmov.f32	s1, s18
 8016c94:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8016c98:	ed9f 0a10 	vldr	s0, [pc, #64]	@ 8016cdc <sdr_setParam+0xd8>
 8016c9c:	edc5 7a17 	vstr	s15, [r5, #92]	@ 0x5c
 8016ca0:	f017 fe30 	bl	802e904 <powf>
 8016ca4:	ee20 0a08 	vmul.f32	s0, s0, s16
 8016ca8:	2000      	movs	r0, #0
 8016caa:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8016cae:	ed85 0a18 	vstr	s0, [r5, #96]	@ 0x60
 8016cb2:	ecbd 8b04 	vpop	{d8-d9}
 8016cb6:	bd38      	pop	{r3, r4, r5, pc}
 8016cb8:	f06f 0003 	mvn.w	r0, #3
 8016cbc:	e7f9      	b.n	8016cb2 <sdr_setParam+0xae>
 8016cbe:	bf00      	nop
 8016cc0:	10624dd3 	.word	0x10624dd3
 8016cc4:	4055a1cb 	.word	0x4055a1cb
 8016cc8:	4f000000 	.word	0x4f000000
 8016ccc:	4e800000 	.word	0x4e800000
 8016cd0:	43f77d71 	.word	0x43f77d71
 8016cd4:	447a0000 	.word	0x447a0000
 8016cd8:	3ba3d70a 	.word	0x3ba3d70a
 8016cdc:	4000e0dc 	.word	0x4000e0dc

08016ce0 <sdr_process>:
 8016ce0:	6843      	ldr	r3, [r0, #4]
 8016ce2:	2b03      	cmp	r3, #3
 8016ce4:	f040 80a2 	bne.w	8016e2c <sdr_process+0x14c>
 8016ce8:	684b      	ldr	r3, [r1, #4]
 8016cea:	2b03      	cmp	r3, #3
 8016cec:	f040 809e 	bne.w	8016e2c <sdr_process+0x14c>
 8016cf0:	6853      	ldr	r3, [r2, #4]
 8016cf2:	2b00      	cmp	r3, #0
 8016cf4:	f000 80a8 	beq.w	8016e48 <sdr_process+0x168>
 8016cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016cfc:	6889      	ldr	r1, [r1, #8]
 8016cfe:	f8d0 e008 	ldr.w	lr, [r0, #8]
 8016d02:	68c7      	ldr	r7, [r0, #12]
 8016d04:	f8d0 c000 	ldr.w	ip, [r0]
 8016d08:	458e      	cmp	lr, r1
 8016d0a:	d010      	beq.n	8016d2e <sdr_process+0x4e>
 8016d0c:	fb0c f607 	mul.w	r6, ip, r7
 8016d10:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 8016d14:	1076      	asrs	r6, r6, #1
 8016d16:	2e00      	cmp	r6, #0
 8016d18:	dd09      	ble.n	8016d2e <sdr_process+0x4e>
 8016d1a:	3908      	subs	r1, #8
 8016d1c:	4670      	mov	r0, lr
 8016d1e:	2300      	movs	r3, #0
 8016d20:	e8f0 4502 	ldrd	r4, r5, [r0], #8
 8016d24:	3301      	adds	r3, #1
 8016d26:	42b3      	cmp	r3, r6
 8016d28:	e9e1 4502 	strd	r4, r5, [r1, #8]!
 8016d2c:	d1f8      	bne.n	8016d20 <sdr_process+0x40>
 8016d2e:	f1bc 0f01 	cmp.w	ip, #1
 8016d32:	f040 8083 	bne.w	8016e3c <sdr_process+0x15c>
 8016d36:	6893      	ldr	r3, [r2, #8]
 8016d38:	3b01      	subs	r3, #1
 8016d3a:	2b01      	cmp	r3, #1
 8016d3c:	d902      	bls.n	8016d44 <sdr_process+0x64>
 8016d3e:	2000      	movs	r0, #0
 8016d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016d44:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8016d46:	429f      	cmp	r7, r3
 8016d48:	f040 8081 	bne.w	8016e4e <sdr_process+0x16e>
 8016d4c:	2f00      	cmp	r7, #0
 8016d4e:	463e      	mov	r6, r7
 8016d50:	bfb8      	it	lt
 8016d52:	1cfe      	addlt	r6, r7, #3
 8016d54:	10b6      	asrs	r6, r6, #2
 8016d56:	2e00      	cmp	r6, #0
 8016d58:	dd7d      	ble.n	8016e56 <sdr_process+0x176>
 8016d5a:	f10e 0310 	add.w	r3, lr, #16
 8016d5e:	2400      	movs	r4, #0
 8016d60:	2500      	movs	r5, #0
 8016d62:	2100      	movs	r1, #0
 8016d64:	f1a3 0810 	sub.w	r8, r3, #16
 8016d68:	e898 5100 	ldmia.w	r8, {r8, ip, lr}
 8016d6c:	fbc8 4508 	smlal	r4, r5, r8, r8
 8016d70:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8016d74:	fbcc 450c 	smlal	r4, r5, ip, ip
 8016d78:	3101      	adds	r1, #1
 8016d7a:	fbce 450e 	smlal	r4, r5, lr, lr
 8016d7e:	42b1      	cmp	r1, r6
 8016d80:	fbc0 4500 	smlal	r4, r5, r0, r0
 8016d84:	f103 0310 	add.w	r3, r3, #16
 8016d88:	d1ec      	bne.n	8016d64 <sdr_process+0x84>
 8016d8a:	0c20      	lsrs	r0, r4, #16
 8016d8c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8016d90:	1429      	asrs	r1, r5, #16
 8016d92:	4614      	mov	r4, r2
 8016d94:	17fb      	asrs	r3, r7, #31
 8016d96:	463a      	mov	r2, r7
 8016d98:	f7e9 ff02 	bl	8000ba0 <__aeabi_ldivmod>
 8016d9c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8016d9e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8016da0:	429a      	cmp	r2, r3
 8016da2:	dd3b      	ble.n	8016e1c <sdr_process+0x13c>
 8016da4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8016da6:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 8016da8:	fb52 f313 	smmulr	r3, r2, r3
 8016dac:	009b      	lsls	r3, r3, #2
 8016dae:	6e21      	ldr	r1, [r4, #96]	@ 0x60
 8016db0:	fb52 f211 	smmulr	r2, r2, r1
 8016db4:	4298      	cmp	r0, r3
 8016db6:	db03      	blt.n	8016dc0 <sdr_process+0xe0>
 8016db8:	0093      	lsls	r3, r2, #2
 8016dba:	4283      	cmp	r3, r0
 8016dbc:	bfa8      	it	ge
 8016dbe:	4603      	movge	r3, r0
 8016dc0:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8016dc2:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8016dc6:	edd4 6a0a 	vldr	s13, [r4, #40]	@ 0x28
 8016dca:	6925      	ldr	r5, [r4, #16]
 8016dcc:	4299      	cmp	r1, r3
 8016dce:	bfb8      	it	lt
 8016dd0:	4619      	movlt	r1, r3
 8016dd2:	ee07 1a90 	vmov	s15, r1
 8016dd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016dda:	ee27 7a87 	vmul.f32	s14, s15, s14
 8016dde:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016de2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8016de6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016dea:	ee17 2a10 	vmov	r2, s14
 8016dee:	ee17 3a90 	vmov	r3, s15
 8016df2:	2d01      	cmp	r5, #1
 8016df4:	bf0c      	ite	eq
 8016df6:	461e      	moveq	r6, r3
 8016df8:	4616      	movne	r6, r2
 8016dfa:	42b0      	cmp	r0, r6
 8016dfc:	6226      	str	r6, [r4, #32]
 8016dfe:	dd18      	ble.n	8016e32 <sdr_process+0x152>
 8016e00:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 8016e02:	6461      	str	r1, [r4, #68]	@ 0x44
 8016e04:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8016e06:	2501      	movs	r5, #1
 8016e08:	6160      	str	r0, [r4, #20]
 8016e0a:	6125      	str	r5, [r4, #16]
 8016e0c:	60e5      	str	r5, [r4, #12]
 8016e0e:	64e1      	str	r1, [r4, #76]	@ 0x4c
 8016e10:	6521      	str	r1, [r4, #80]	@ 0x50
 8016e12:	62e2      	str	r2, [r4, #44]	@ 0x2c
 8016e14:	6323      	str	r3, [r4, #48]	@ 0x30
 8016e16:	2000      	movs	r0, #0
 8016e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016e1c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8016e1e:	1c51      	adds	r1, r2, #1
 8016e20:	4403      	add	r3, r0
 8016e22:	64a3      	str	r3, [r4, #72]	@ 0x48
 8016e24:	63e1      	str	r1, [r4, #60]	@ 0x3c
 8016e26:	fb93 f3f2 	sdiv	r3, r3, r2
 8016e2a:	e7c9      	b.n	8016dc0 <sdr_process+0xe0>
 8016e2c:	f06f 0002 	mvn.w	r0, #2
 8016e30:	4770      	bx	lr
 8016e32:	6c66      	ldr	r6, [r4, #68]	@ 0x44
 8016e34:	b136      	cbz	r6, 8016e44 <sdr_process+0x164>
 8016e36:	3e01      	subs	r6, #1
 8016e38:	6466      	str	r6, [r4, #68]	@ 0x44
 8016e3a:	e7e5      	b.n	8016e08 <sdr_process+0x128>
 8016e3c:	f06f 0001 	mvn.w	r0, #1
 8016e40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016e44:	4635      	mov	r5, r6
 8016e46:	e7df      	b.n	8016e08 <sdr_process+0x128>
 8016e48:	f06f 0006 	mvn.w	r0, #6
 8016e4c:	4770      	bx	lr
 8016e4e:	f06f 0007 	mvn.w	r0, #7
 8016e52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016e56:	2000      	movs	r0, #0
 8016e58:	4601      	mov	r1, r0
 8016e5a:	e79a      	b.n	8016d92 <sdr_process+0xb2>

08016e5c <smr_reset>:
 8016e5c:	b538      	push	{r3, r4, r5, lr}
 8016e5e:	227d      	movs	r2, #125	@ 0x7d
 8016e60:	2400      	movs	r4, #0
 8016e62:	f06f 032c 	mvn.w	r3, #44	@ 0x2c
 8016e66:	2501      	movs	r5, #1
 8016e68:	6001      	str	r1, [r0, #0]
 8016e6a:	f8c0 516c 	str.w	r5, [r0, #364]	@ 0x16c
 8016e6e:	f8a0 2170 	strh.w	r2, [r0, #368]	@ 0x170
 8016e72:	f8a0 4172 	strh.w	r4, [r0, #370]	@ 0x172
 8016e76:	f880 4054 	strb.w	r4, [r0, #84]	@ 0x54
 8016e7a:	f8c0 3178 	str.w	r3, [r0, #376]	@ 0x178
 8016e7e:	f8c0 317c 	str.w	r3, [r0, #380]	@ 0x17c
 8016e82:	30a0      	adds	r0, #160	@ 0xa0
 8016e84:	f012 fb50 	bl	8029528 <smr_biquad_reset>
 8016e88:	4620      	mov	r0, r4
 8016e8a:	bd38      	pop	{r3, r4, r5, pc}

08016e8c <smr_setConfig>:
 8016e8c:	6803      	ldr	r3, [r0, #0]
 8016e8e:	f8d1 216c 	ldr.w	r2, [r1, #364]	@ 0x16c
 8016e92:	429a      	cmp	r2, r3
 8016e94:	b510      	push	{r4, lr}
 8016e96:	d00f      	beq.n	8016eb8 <smr_setConfig+0x2c>
 8016e98:	8882      	ldrh	r2, [r0, #4]
 8016e9a:	f8c1 316c 	str.w	r3, [r1, #364]	@ 0x16c
 8016e9e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016ea2:	f8a1 2170 	strh.w	r2, [r1, #368]	@ 0x170
 8016ea6:	f8a1 3172 	strh.w	r3, [r1, #370]	@ 0x172
 8016eaa:	2b03      	cmp	r3, #3
 8016eac:	f200 8090 	bhi.w	8016fd0 <smr_setConfig+0x144>
 8016eb0:	e8df f003 	tbb	[pc, r3]
 8016eb4:	18414378 	.word	0x18414378
 8016eb8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016ebc:	f9b1 2172 	ldrsh.w	r2, [r1, #370]	@ 0x172
 8016ec0:	429a      	cmp	r2, r3
 8016ec2:	d073      	beq.n	8016fac <smr_setConfig+0x120>
 8016ec4:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8016ec8:	f9b1 2170 	ldrsh.w	r2, [r1, #368]	@ 0x170
 8016ecc:	f8a1 3172 	strh.w	r3, [r1, #370]	@ 0x172
 8016ed0:	4290      	cmp	r0, r2
 8016ed2:	d0e8      	beq.n	8016ea6 <smr_setConfig+0x1a>
 8016ed4:	b292      	uxth	r2, r2
 8016ed6:	f242 7410 	movw	r4, #10000	@ 0x2710
 8016eda:	42a2      	cmp	r2, r4
 8016edc:	d975      	bls.n	8016fca <smr_setConfig+0x13e>
 8016ede:	f06f 0003 	mvn.w	r0, #3
 8016ee2:	bd10      	pop	{r4, pc}
 8016ee4:	4b3d      	ldr	r3, [pc, #244]	@ (8016fdc <smr_setConfig+0x150>)
 8016ee6:	681b      	ldr	r3, [r3, #0]
 8016ee8:	2201      	movs	r2, #1
 8016eea:	f881 2054 	strb.w	r2, [r1, #84]	@ 0x54
 8016eee:	2202      	movs	r2, #2
 8016ef0:	f881 2055 	strb.w	r2, [r1, #85]	@ 0x55
 8016ef4:	681a      	ldr	r2, [r3, #0]
 8016ef6:	658a      	str	r2, [r1, #88]	@ 0x58
 8016ef8:	685a      	ldr	r2, [r3, #4]
 8016efa:	65ca      	str	r2, [r1, #92]	@ 0x5c
 8016efc:	689a      	ldr	r2, [r3, #8]
 8016efe:	660a      	str	r2, [r1, #96]	@ 0x60
 8016f00:	68da      	ldr	r2, [r3, #12]
 8016f02:	664a      	str	r2, [r1, #100]	@ 0x64
 8016f04:	691a      	ldr	r2, [r3, #16]
 8016f06:	668a      	str	r2, [r1, #104]	@ 0x68
 8016f08:	695a      	ldr	r2, [r3, #20]
 8016f0a:	66ca      	str	r2, [r1, #108]	@ 0x6c
 8016f0c:	699a      	ldr	r2, [r3, #24]
 8016f0e:	670a      	str	r2, [r1, #112]	@ 0x70
 8016f10:	69da      	ldr	r2, [r3, #28]
 8016f12:	674a      	str	r2, [r1, #116]	@ 0x74
 8016f14:	6a1a      	ldr	r2, [r3, #32]
 8016f16:	678a      	str	r2, [r1, #120]	@ 0x78
 8016f18:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8016f1a:	67ca      	str	r2, [r1, #124]	@ 0x7c
 8016f1c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8016f1e:	f8c1 2080 	str.w	r2, [r1, #128]	@ 0x80
 8016f22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f24:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8016f28:	4608      	mov	r0, r1
 8016f2a:	3054      	adds	r0, #84	@ 0x54
 8016f2c:	31a0      	adds	r1, #160	@ 0xa0
 8016f2e:	f012 fb1b 	bl	8029568 <smr_biquad_setConfig>
 8016f32:	2000      	movs	r0, #0
 8016f34:	bd10      	pop	{r4, pc}
 8016f36:	4b2a      	ldr	r3, [pc, #168]	@ (8016fe0 <smr_setConfig+0x154>)
 8016f38:	e7d5      	b.n	8016ee6 <smr_setConfig+0x5a>
 8016f3a:	4b2a      	ldr	r3, [pc, #168]	@ (8016fe4 <smr_setConfig+0x158>)
 8016f3c:	2201      	movs	r2, #1
 8016f3e:	681b      	ldr	r3, [r3, #0]
 8016f40:	f881 2054 	strb.w	r2, [r1, #84]	@ 0x54
 8016f44:	2203      	movs	r2, #3
 8016f46:	f881 2055 	strb.w	r2, [r1, #85]	@ 0x55
 8016f4a:	681a      	ldr	r2, [r3, #0]
 8016f4c:	658a      	str	r2, [r1, #88]	@ 0x58
 8016f4e:	685a      	ldr	r2, [r3, #4]
 8016f50:	65ca      	str	r2, [r1, #92]	@ 0x5c
 8016f52:	689a      	ldr	r2, [r3, #8]
 8016f54:	660a      	str	r2, [r1, #96]	@ 0x60
 8016f56:	68da      	ldr	r2, [r3, #12]
 8016f58:	664a      	str	r2, [r1, #100]	@ 0x64
 8016f5a:	691a      	ldr	r2, [r3, #16]
 8016f5c:	668a      	str	r2, [r1, #104]	@ 0x68
 8016f5e:	695a      	ldr	r2, [r3, #20]
 8016f60:	66ca      	str	r2, [r1, #108]	@ 0x6c
 8016f62:	699a      	ldr	r2, [r3, #24]
 8016f64:	670a      	str	r2, [r1, #112]	@ 0x70
 8016f66:	69da      	ldr	r2, [r3, #28]
 8016f68:	674a      	str	r2, [r1, #116]	@ 0x74
 8016f6a:	6a1a      	ldr	r2, [r3, #32]
 8016f6c:	678a      	str	r2, [r1, #120]	@ 0x78
 8016f6e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8016f70:	67ca      	str	r2, [r1, #124]	@ 0x7c
 8016f72:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8016f74:	f8c1 2080 	str.w	r2, [r1, #128]	@ 0x80
 8016f78:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8016f7a:	f8c1 2084 	str.w	r2, [r1, #132]	@ 0x84
 8016f7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8016f80:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8016f84:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8016f86:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
 8016f8a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8016f8c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
 8016f90:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8016f92:	f8c1 2094 	str.w	r2, [r1, #148]	@ 0x94
 8016f96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8016f98:	f8c1 2098 	str.w	r2, [r1, #152]	@ 0x98
 8016f9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016f9e:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 8016fa2:	e7c1      	b.n	8016f28 <smr_setConfig+0x9c>
 8016fa4:	2300      	movs	r3, #0
 8016fa6:	f881 3054 	strb.w	r3, [r1, #84]	@ 0x54
 8016faa:	e7bd      	b.n	8016f28 <smr_setConfig+0x9c>
 8016fac:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8016fb0:	f9b1 3170 	ldrsh.w	r3, [r1, #368]	@ 0x170
 8016fb4:	429a      	cmp	r2, r3
 8016fb6:	d00e      	beq.n	8016fd6 <smr_setConfig+0x14a>
 8016fb8:	b29b      	uxth	r3, r3
 8016fba:	f242 7010 	movw	r0, #10000	@ 0x2710
 8016fbe:	4283      	cmp	r3, r0
 8016fc0:	d88d      	bhi.n	8016ede <smr_setConfig+0x52>
 8016fc2:	f8a1 2170 	strh.w	r2, [r1, #368]	@ 0x170
 8016fc6:	2000      	movs	r0, #0
 8016fc8:	bd10      	pop	{r4, pc}
 8016fca:	f8a1 0170 	strh.w	r0, [r1, #368]	@ 0x170
 8016fce:	e76a      	b.n	8016ea6 <smr_setConfig+0x1a>
 8016fd0:	f06f 0004 	mvn.w	r0, #4
 8016fd4:	bd10      	pop	{r4, pc}
 8016fd6:	2000      	movs	r0, #0
 8016fd8:	bd10      	pop	{r4, pc}
 8016fda:	bf00      	nop
 8016fdc:	2001f074 	.word	0x2001f074
 8016fe0:	2001f078 	.word	0x2001f078
 8016fe4:	2001f07c 	.word	0x2001f07c

08016fe8 <smr_getConfig>:
 8016fe8:	b470      	push	{r4, r5, r6}
 8016fea:	f8d1 2180 	ldr.w	r2, [r1, #384]	@ 0x180
 8016fee:	f8d1 616c 	ldr.w	r6, [r1, #364]	@ 0x16c
 8016ff2:	f8b1 5172 	ldrh.w	r5, [r1, #370]	@ 0x172
 8016ff6:	f8b1 4170 	ldrh.w	r4, [r1, #368]	@ 0x170
 8016ffa:	f8d1 3184 	ldr.w	r3, [r1, #388]	@ 0x184
 8016ffe:	60c3      	str	r3, [r0, #12]
 8017000:	6006      	str	r6, [r0, #0]
 8017002:	80c5      	strh	r5, [r0, #6]
 8017004:	8084      	strh	r4, [r0, #4]
 8017006:	6082      	str	r2, [r0, #8]
 8017008:	bc70      	pop	{r4, r5, r6}
 801700a:	2000      	movs	r0, #0
 801700c:	4770      	bx	lr
 801700e:	bf00      	nop

08017010 <smr_setParam>:
 8017010:	6803      	ldr	r3, [r0, #0]
 8017012:	f8c1 3174 	str.w	r3, [r1, #372]	@ 0x174
 8017016:	f5b3 5f7a 	cmp.w	r3, #16000	@ 0x3e80
 801701a:	d017      	beq.n	801704c <smr_setParam+0x3c>
 801701c:	f64b 3280 	movw	r2, #48000	@ 0xbb80
 8017020:	4293      	cmp	r3, r2
 8017022:	d011      	beq.n	8017048 <smr_setParam+0x38>
 8017024:	f5b3 5ffa 	cmp.w	r3, #8000	@ 0x1f40
 8017028:	d002      	beq.n	8017030 <smr_setParam+0x20>
 801702a:	f06f 0005 	mvn.w	r0, #5
 801702e:	4770      	bx	lr
 8017030:	4b07      	ldr	r3, [pc, #28]	@ (8017050 <smr_setParam+0x40>)
 8017032:	4808      	ldr	r0, [pc, #32]	@ (8017054 <smr_setParam+0x44>)
 8017034:	4908      	ldr	r1, [pc, #32]	@ (8017058 <smr_setParam+0x48>)
 8017036:	4a09      	ldr	r2, [pc, #36]	@ (801705c <smr_setParam+0x4c>)
 8017038:	6003      	str	r3, [r0, #0]
 801703a:	f103 0048 	add.w	r0, r3, #72	@ 0x48
 801703e:	3378      	adds	r3, #120	@ 0x78
 8017040:	6008      	str	r0, [r1, #0]
 8017042:	6013      	str	r3, [r2, #0]
 8017044:	2000      	movs	r0, #0
 8017046:	4770      	bx	lr
 8017048:	4b05      	ldr	r3, [pc, #20]	@ (8017060 <smr_setParam+0x50>)
 801704a:	e7f2      	b.n	8017032 <smr_setParam+0x22>
 801704c:	4b05      	ldr	r3, [pc, #20]	@ (8017064 <smr_setParam+0x54>)
 801704e:	e7f0      	b.n	8017032 <smr_setParam+0x22>
 8017050:	08035674 	.word	0x08035674
 8017054:	2001f07c 	.word	0x2001f07c
 8017058:	2001f078 	.word	0x2001f078
 801705c:	2001f074 	.word	0x2001f074
 8017060:	08035524 	.word	0x08035524
 8017064:	080355cc 	.word	0x080355cc

08017068 <smr_process>:
 8017068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801706c:	6843      	ldr	r3, [r0, #4]
 801706e:	2b04      	cmp	r3, #4
 8017070:	d134      	bne.n	80170dc <smr_process+0x74>
 8017072:	684b      	ldr	r3, [r1, #4]
 8017074:	2b04      	cmp	r3, #4
 8017076:	d131      	bne.n	80170dc <smr_process+0x74>
 8017078:	6889      	ldr	r1, [r1, #8]
 801707a:	f8d0 e008 	ldr.w	lr, [r0, #8]
 801707e:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8017082:	6803      	ldr	r3, [r0, #0]
 8017084:	458e      	cmp	lr, r1
 8017086:	d013      	beq.n	80170b0 <smr_process+0x48>
 8017088:	fb03 f70c 	mul.w	r7, r3, ip
 801708c:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8017090:	107f      	asrs	r7, r7, #1
 8017092:	2f00      	cmp	r7, #0
 8017094:	dd0c      	ble.n	80170b0 <smr_process+0x48>
 8017096:	f1a1 0608 	sub.w	r6, r1, #8
 801709a:	4675      	mov	r5, lr
 801709c:	2400      	movs	r4, #0
 801709e:	e8f5 8902 	ldrd	r8, r9, [r5], #8
 80170a2:	3401      	adds	r4, #1
 80170a4:	42bc      	cmp	r4, r7
 80170a6:	e9e6 8902 	strd	r8, r9, [r6, #8]!
 80170aa:	d1f8      	bne.n	801709e <smr_process+0x36>
 80170ac:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 80170b0:	f8d2 416c 	ldr.w	r4, [r2, #364]	@ 0x16c
 80170b4:	2c01      	cmp	r4, #1
 80170b6:	d002      	beq.n	80170be <smr_process+0x56>
 80170b8:	2000      	movs	r0, #0
 80170ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170be:	2b02      	cmp	r3, #2
 80170c0:	4615      	mov	r5, r2
 80170c2:	d00f      	beq.n	80170e4 <smr_process+0x7c>
 80170c4:	2b01      	cmp	r3, #1
 80170c6:	d11a      	bne.n	80170fe <smr_process+0x96>
 80170c8:	460a      	mov	r2, r1
 80170ca:	fa0f f38c 	sxth.w	r3, ip
 80170ce:	4671      	mov	r1, lr
 80170d0:	4628      	mov	r0, r5
 80170d2:	f000 f81d 	bl	8017110 <soundmeter_mono_compute>
 80170d6:	2000      	movs	r0, #0
 80170d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170dc:	f06f 0002 	mvn.w	r0, #2
 80170e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170e4:	6903      	ldr	r3, [r0, #16]
 80170e6:	2b01      	cmp	r3, #1
 80170e8:	d10d      	bne.n	8017106 <smr_process+0x9e>
 80170ea:	460a      	mov	r2, r1
 80170ec:	fa0f f38c 	sxth.w	r3, ip
 80170f0:	4671      	mov	r1, lr
 80170f2:	4628      	mov	r0, r5
 80170f4:	f000 f8b8 	bl	8017268 <soundmeter_stereo_compute>
 80170f8:	2000      	movs	r0, #0
 80170fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170fe:	f06f 0001 	mvn.w	r0, #1
 8017102:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017106:	f04f 30ff 	mov.w	r0, #4294967295
 801710a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801710e:	bf00      	nop

08017110 <soundmeter_mono_compute>:
 8017110:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017112:	461d      	mov	r5, r3
 8017114:	f9b0 3170 	ldrsh.w	r3, [r0, #368]	@ 0x170
 8017118:	ee07 5a10 	vmov	s14, r5
 801711c:	ee07 3a90 	vmov	s15, r3
 8017120:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017124:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017128:	4604      	mov	r4, r0
 801712a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801712e:	f8d0 3174 	ldr.w	r3, [r0, #372]	@ 0x174
 8017132:	484b      	ldr	r0, [pc, #300]	@ (8017260 <soundmeter_mono_compute+0x150>)
 8017134:	6822      	ldr	r2, [r4, #0]
 8017136:	fb80 6003 	smull	r6, r0, r0, r3
 801713a:	17db      	asrs	r3, r3, #31
 801713c:	ebc3 13a0 	rsb	r3, r3, r0, asr #6
 8017140:	2704      	movs	r7, #4
 8017142:	2001      	movs	r0, #1
 8017144:	460e      	mov	r6, r1
 8017146:	ee07 3a90 	vmov	s15, r3
 801714a:	ed2d 8b04 	vpush	{d8-d9}
 801714e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017152:	b087      	sub	sp, #28
 8017154:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017158:	eebf 0a00 	vmov.f32	s0, #240	@ 0xbf800000 -1.0
 801715c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8017160:	9702      	str	r7, [sp, #8]
 8017162:	9001      	str	r0, [sp, #4]
 8017164:	9005      	str	r0, [sp, #20]
 8017166:	9504      	str	r5, [sp, #16]
 8017168:	9203      	str	r2, [sp, #12]
 801716a:	ed94 8a5e 	vldr	s16, [r4, #376]	@ 0x178
 801716e:	f017 fb45 	bl	802e7fc <expf>
 8017172:	2d00      	cmp	r5, #0
 8017174:	bfb4      	ite	lt
 8017176:	1cef      	addlt	r7, r5, #3
 8017178:	462f      	movge	r7, r5
 801717a:	10bf      	asrs	r7, r7, #2
 801717c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017180:	2f00      	cmp	r7, #0
 8017182:	eeb0 9a40 	vmov.f32	s18, s0
 8017186:	ee77 8a40 	vsub.f32	s17, s14, s0
 801718a:	6820      	ldr	r0, [r4, #0]
 801718c:	dd12      	ble.n	80171b4 <soundmeter_mono_compute+0xa4>
 801718e:	f106 0110 	add.w	r1, r6, #16
 8017192:	3010      	adds	r0, #16
 8017194:	2600      	movs	r6, #0
 8017196:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 801719a:	e940 2304 	strd	r2, r3, [r0, #-16]
 801719e:	e951 2302 	ldrd	r2, r3, [r1, #-8]
 80171a2:	3601      	adds	r6, #1
 80171a4:	42be      	cmp	r6, r7
 80171a6:	e940 2302 	strd	r2, r3, [r0, #-8]
 80171aa:	f101 0110 	add.w	r1, r1, #16
 80171ae:	f100 0010 	add.w	r0, r0, #16
 80171b2:	d1f0      	bne.n	8017196 <soundmeter_mono_compute+0x86>
 80171b4:	a901      	add	r1, sp, #4
 80171b6:	4608      	mov	r0, r1
 80171b8:	f104 02a0 	add.w	r2, r4, #160	@ 0xa0
 80171bc:	f012 fa18 	bl	80295f0 <smr_biquad_process>
 80171c0:	2d00      	cmp	r5, #0
 80171c2:	6821      	ldr	r1, [r4, #0]
 80171c4:	dd49      	ble.n	801725a <soundmeter_mono_compute+0x14a>
 80171c6:	2600      	movs	r6, #0
 80171c8:	2700      	movs	r7, #0
 80171ca:	2300      	movs	r3, #0
 80171cc:	f851 2b04 	ldr.w	r2, [r1], #4
 80171d0:	3301      	adds	r3, #1
 80171d2:	1212      	asrs	r2, r2, #8
 80171d4:	429d      	cmp	r5, r3
 80171d6:	fbc2 6702 	smlal	r6, r7, r2, r2
 80171da:	d1f7      	bne.n	80171cc <soundmeter_mono_compute+0xbc>
 80171dc:	0c30      	lsrs	r0, r6, #16
 80171de:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80171e2:	1439      	asrs	r1, r7, #16
 80171e4:	b22a      	sxth	r2, r5
 80171e6:	17d3      	asrs	r3, r2, #31
 80171e8:	f7e9 fcda 	bl	8000ba0 <__aeabi_ldivmod>
 80171ec:	fab0 f280 	clz	r2, r0
 80171f0:	4090      	lsls	r0, r2
 80171f2:	4d1c      	ldr	r5, [pc, #112]	@ (8017264 <soundmeter_mono_compute+0x154>)
 80171f4:	1703      	asrs	r3, r0, #28
 80171f6:	f003 0304 	and.w	r3, r3, #4
 80171fa:	eb05 0183 	add.w	r1, r5, r3, lsl #2
 80171fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8017202:	684d      	ldr	r5, [r1, #4]
 8017204:	fb30 5313 	smlawt	r3, r0, r3, r5
 8017208:	688d      	ldr	r5, [r1, #8]
 801720a:	fb30 5313 	smlawt	r3, r0, r3, r5
 801720e:	68c9      	ldr	r1, [r1, #12]
 8017210:	fb30 1013 	smlawt	r0, r0, r3, r1
 8017214:	1340      	asrs	r0, r0, #13
 8017216:	0412      	lsls	r2, r2, #16
 8017218:	fa82 f0a0 	qsub	r0, r0, r2
 801721c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017220:	1200      	asrs	r0, r0, #8
 8017222:	f500 63c0 	add.w	r3, r0, #1536	@ 0x600
 8017226:	ee07 3a90 	vmov	s15, r3
 801722a:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 801722e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017232:	2000      	movs	r0, #0
 8017234:	ee27 7aa8 	vmul.f32	s14, s15, s17
 8017238:	ee68 7a09 	vmul.f32	s15, s16, s18
 801723c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017244:	ee17 3a90 	vmov	r3, s15
 8017248:	119a      	asrs	r2, r3, #6
 801724a:	edc4 7a5e 	vstr	s15, [r4, #376]	@ 0x178
 801724e:	f8c4 2180 	str.w	r2, [r4, #384]	@ 0x180
 8017252:	b007      	add	sp, #28
 8017254:	ecbd 8b04 	vpop	{d8-d9}
 8017258:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801725a:	2000      	movs	r0, #0
 801725c:	4601      	mov	r1, r0
 801725e:	e7c1      	b.n	80171e4 <soundmeter_mono_compute+0xd4>
 8017260:	10624dd3 	.word	0x10624dd3
 8017264:	080370a0 	.word	0x080370a0

08017268 <soundmeter_stereo_compute>:
 8017268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801726c:	4699      	mov	r9, r3
 801726e:	f9b0 3170 	ldrsh.w	r3, [r0, #368]	@ 0x170
 8017272:	ee07 9a10 	vmov	s14, r9
 8017276:	ee07 3a90 	vmov	s15, r3
 801727a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801727e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017282:	4680      	mov	r8, r0
 8017284:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017288:	f8d0 3174 	ldr.w	r3, [r0, #372]	@ 0x174
 801728c:	4874      	ldr	r0, [pc, #464]	@ (8017460 <soundmeter_stereo_compute+0x1f8>)
 801728e:	f8d8 2000 	ldr.w	r2, [r8]
 8017292:	fb80 4003 	smull	r4, r0, r0, r3
 8017296:	17db      	asrs	r3, r3, #31
 8017298:	ebc3 13a0 	rsb	r3, r3, r0, asr #6
 801729c:	2502      	movs	r5, #2
 801729e:	2004      	movs	r0, #4
 80172a0:	460c      	mov	r4, r1
 80172a2:	ee07 3a90 	vmov	s15, r3
 80172a6:	ed2d 8b04 	vpush	{d8-d9}
 80172aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80172ae:	b087      	sub	sp, #28
 80172b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80172b4:	eebf 0a00 	vmov.f32	s0, #240	@ 0xbf800000 -1.0
 80172b8:	9203      	str	r2, [sp, #12]
 80172ba:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80172be:	2201      	movs	r2, #1
 80172c0:	9501      	str	r5, [sp, #4]
 80172c2:	9002      	str	r0, [sp, #8]
 80172c4:	f8cd 9010 	str.w	r9, [sp, #16]
 80172c8:	9205      	str	r2, [sp, #20]
 80172ca:	eb09 75d9 	add.w	r5, r9, r9, lsr #31
 80172ce:	106d      	asrs	r5, r5, #1
 80172d0:	edd8 8a5e 	vldr	s17, [r8, #376]	@ 0x178
 80172d4:	ed98 8a5f 	vldr	s16, [r8, #380]	@ 0x17c
 80172d8:	f017 fa90 	bl	802e7fc <expf>
 80172dc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80172e0:	2d00      	cmp	r5, #0
 80172e2:	eef0 9a40 	vmov.f32	s19, s0
 80172e6:	ee37 9ac0 	vsub.f32	s18, s15, s0
 80172ea:	f8d8 0000 	ldr.w	r0, [r8]
 80172ee:	dd12      	ble.n	8017316 <soundmeter_stereo_compute+0xae>
 80172f0:	f104 0110 	add.w	r1, r4, #16
 80172f4:	3010      	adds	r0, #16
 80172f6:	2400      	movs	r4, #0
 80172f8:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 80172fc:	e940 2304 	strd	r2, r3, [r0, #-16]
 8017300:	e951 2302 	ldrd	r2, r3, [r1, #-8]
 8017304:	3401      	adds	r4, #1
 8017306:	42ac      	cmp	r4, r5
 8017308:	e940 2302 	strd	r2, r3, [r0, #-8]
 801730c:	f101 0110 	add.w	r1, r1, #16
 8017310:	f100 0010 	add.w	r0, r0, #16
 8017314:	d1f0      	bne.n	80172f8 <soundmeter_stereo_compute+0x90>
 8017316:	a901      	add	r1, sp, #4
 8017318:	4608      	mov	r0, r1
 801731a:	f108 02a0 	add.w	r2, r8, #160	@ 0xa0
 801731e:	f012 f967 	bl	80295f0 <smr_biquad_process>
 8017322:	f1b9 0f00 	cmp.w	r9, #0
 8017326:	f8d8 3000 	ldr.w	r3, [r8]
 801732a:	f340 8094 	ble.w	8017456 <soundmeter_stereo_compute+0x1ee>
 801732e:	2400      	movs	r4, #0
 8017330:	2500      	movs	r5, #0
 8017332:	3308      	adds	r3, #8
 8017334:	4626      	mov	r6, r4
 8017336:	462f      	mov	r7, r5
 8017338:	2200      	movs	r2, #0
 801733a:	e913 0003 	ldmdb	r3, {r0, r1}
 801733e:	3201      	adds	r2, #1
 8017340:	1200      	asrs	r0, r0, #8
 8017342:	1209      	asrs	r1, r1, #8
 8017344:	4591      	cmp	r9, r2
 8017346:	fbc0 6700 	smlal	r6, r7, r0, r0
 801734a:	fbc1 4501 	smlal	r4, r5, r1, r1
 801734e:	f103 0308 	add.w	r3, r3, #8
 8017352:	d1f2      	bne.n	801733a <soundmeter_stereo_compute+0xd2>
 8017354:	0c30      	lsrs	r0, r6, #16
 8017356:	0c26      	lsrs	r6, r4, #16
 8017358:	ea46 4605 	orr.w	r6, r6, r5, lsl #16
 801735c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8017360:	1439      	asrs	r1, r7, #16
 8017362:	142d      	asrs	r5, r5, #16
 8017364:	fa0f fa89 	sxth.w	sl, r9
 8017368:	ea4f 7bea 	mov.w	fp, sl, asr #31
 801736c:	4652      	mov	r2, sl
 801736e:	465b      	mov	r3, fp
 8017370:	f7e9 fc16 	bl	8000ba0 <__aeabi_ldivmod>
 8017374:	4604      	mov	r4, r0
 8017376:	4652      	mov	r2, sl
 8017378:	465b      	mov	r3, fp
 801737a:	4630      	mov	r0, r6
 801737c:	4629      	mov	r1, r5
 801737e:	fab4 f584 	clz	r5, r4
 8017382:	f7e9 fc0d 	bl	8000ba0 <__aeabi_ldivmod>
 8017386:	fa04 f305 	lsl.w	r3, r4, r5
 801738a:	4936      	ldr	r1, [pc, #216]	@ (8017464 <soundmeter_stereo_compute+0x1fc>)
 801738c:	171a      	asrs	r2, r3, #28
 801738e:	f002 0204 	and.w	r2, r2, #4
 8017392:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 8017396:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 801739a:	6872      	ldr	r2, [r6, #4]
 801739c:	fb33 2214 	smlawt	r2, r3, r4, r2
 80173a0:	68b4      	ldr	r4, [r6, #8]
 80173a2:	fb33 4212 	smlawt	r2, r3, r2, r4
 80173a6:	68f4      	ldr	r4, [r6, #12]
 80173a8:	fb33 4312 	smlawt	r3, r3, r2, r4
 80173ac:	135b      	asrs	r3, r3, #13
 80173ae:	042d      	lsls	r5, r5, #16
 80173b0:	fa85 f3a3 	qsub	r3, r3, r5
 80173b4:	fab0 f480 	clz	r4, r0
 80173b8:	40a0      	lsls	r0, r4
 80173ba:	1702      	asrs	r2, r0, #28
 80173bc:	f002 0204 	and.w	r2, r2, #4
 80173c0:	eb01 0582 	add.w	r5, r1, r2, lsl #2
 80173c4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80173c8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80173cc:	6869      	ldr	r1, [r5, #4]
 80173ce:	fb30 1212 	smlawt	r2, r0, r2, r1
 80173d2:	68a9      	ldr	r1, [r5, #8]
 80173d4:	fb30 1212 	smlawt	r2, r0, r2, r1
 80173d8:	68e9      	ldr	r1, [r5, #12]
 80173da:	fb30 1012 	smlawt	r0, r0, r2, r1
 80173de:	1340      	asrs	r0, r0, #13
 80173e0:	0424      	lsls	r4, r4, #16
 80173e2:	fa84 f0a0 	qsub	r0, r0, r4
 80173e6:	121b      	asrs	r3, r3, #8
 80173e8:	f503 63c0 	add.w	r3, r3, #1536	@ 0x600
 80173ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80173f0:	1200      	asrs	r0, r0, #8
 80173f2:	ee07 3a10 	vmov	s14, r3
 80173f6:	f500 62c0 	add.w	r2, r0, #1536	@ 0x600
 80173fa:	ee07 2a90 	vmov	s15, r2
 80173fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017402:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8017406:	ee67 6a09 	vmul.f32	s13, s14, s18
 801740a:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 801740e:	ee28 7aa9 	vmul.f32	s14, s17, s19
 8017412:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017416:	ee28 0a29 	vmul.f32	s0, s16, s19
 801741a:	ee67 7a89 	vmul.f32	s15, s15, s18
 801741e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017422:	ee37 0a80 	vadd.f32	s0, s15, s0
 8017426:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801742a:	ee17 2a90 	vmov	r2, s15
 801742e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8017432:	1190      	asrs	r0, r2, #6
 8017434:	ee17 3a90 	vmov	r3, s15
 8017438:	f8c8 0180 	str.w	r0, [r8, #384]	@ 0x180
 801743c:	1199      	asrs	r1, r3, #6
 801743e:	2000      	movs	r0, #0
 8017440:	f8c8 2178 	str.w	r2, [r8, #376]	@ 0x178
 8017444:	edc8 7a5f 	vstr	s15, [r8, #380]	@ 0x17c
 8017448:	f8c8 1184 	str.w	r1, [r8, #388]	@ 0x184
 801744c:	b007      	add	sp, #28
 801744e:	ecbd 8b04 	vpop	{d8-d9}
 8017452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017456:	2600      	movs	r6, #0
 8017458:	4635      	mov	r5, r6
 801745a:	4630      	mov	r0, r6
 801745c:	4631      	mov	r1, r6
 801745e:	e781      	b.n	8017364 <soundmeter_stereo_compute+0xfc>
 8017460:	10624dd3 	.word	0x10624dd3
 8017464:	080370a0 	.word	0x080370a0

08017468 <svc_abs_subs_block>:
 8017468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801746c:	f9b3 4a3a 	ldrsh.w	r4, [r3, #2618]	@ 0xa3a
 8017470:	2c01      	cmp	r4, #1
 8017472:	b087      	sub	sp, #28
 8017474:	d002      	beq.n	801747c <svc_abs_subs_block+0x14>
 8017476:	b007      	add	sp, #28
 8017478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801747c:	f9b3 4a34 	ldrsh.w	r4, [r3, #2612]	@ 0xa34
 8017480:	2c00      	cmp	r4, #0
 8017482:	dd3d      	ble.n	8017500 <svc_abs_subs_block+0x98>
 8017484:	6904      	ldr	r4, [r0, #16]
 8017486:	68c7      	ldr	r7, [r0, #12]
 8017488:	2c01      	cmp	r4, #1
 801748a:	ea4f 0767 	mov.w	r7, r7, asr #1
 801748e:	d03c      	beq.n	801750a <svc_abs_subs_block+0xa2>
 8017490:	2f00      	cmp	r7, #0
 8017492:	ddf0      	ble.n	8017476 <svc_abs_subs_block+0xe>
 8017494:	2000      	movs	r0, #0
 8017496:	f9b3 6a2a 	ldrsh.w	r6, [r3, #2602]	@ 0xa2a
 801749a:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 801749e:	4603      	mov	r3, r0
 80174a0:	e006      	b.n	80174b0 <svc_abs_subs_block+0x48>
 80174a2:	3301      	adds	r3, #1
 80174a4:	f842 0b04 	str.w	r0, [r2], #4
 80174a8:	4297      	cmp	r7, r2
 80174aa:	f101 0104 	add.w	r1, r1, #4
 80174ae:	d0e2      	beq.n	8017476 <svc_abs_subs_block+0xe>
 80174b0:	42b3      	cmp	r3, r6
 80174b2:	d001      	beq.n	80174b8 <svc_abs_subs_block+0x50>
 80174b4:	2b00      	cmp	r3, #0
 80174b6:	d1f4      	bne.n	80174a2 <svc_abs_subs_block+0x3a>
 80174b8:	2e01      	cmp	r6, #1
 80174ba:	dd10      	ble.n	80174de <svc_abs_subs_block+0x76>
 80174bc:	2e00      	cmp	r6, #0
 80174be:	460c      	mov	r4, r1
 80174c0:	f04f 0000 	mov.w	r0, #0
 80174c4:	dd17      	ble.n	80174f6 <svc_abs_subs_block+0x8e>
 80174c6:	4603      	mov	r3, r0
 80174c8:	f854 5b04 	ldr.w	r5, [r4], #4
 80174cc:	3301      	adds	r3, #1
 80174ce:	42b3      	cmp	r3, r6
 80174d0:	eb00 1025 	add.w	r0, r0, r5, asr #4
 80174d4:	d1f8      	bne.n	80174c8 <svc_abs_subs_block+0x60>
 80174d6:	2800      	cmp	r0, #0
 80174d8:	dd0b      	ble.n	80174f2 <svc_abs_subs_block+0x8a>
 80174da:	2301      	movs	r3, #1
 80174dc:	e7e2      	b.n	80174a4 <svc_abs_subs_block+0x3c>
 80174de:	6808      	ldr	r0, [r1, #0]
 80174e0:	2800      	cmp	r0, #0
 80174e2:	dcfa      	bgt.n	80174da <svc_abs_subs_block+0x72>
 80174e4:	1040      	asrs	r0, r0, #1
 80174e6:	2301      	movs	r3, #1
 80174e8:	4240      	negs	r0, r0
 80174ea:	f300 001e 	ssat	r0, #31, r0
 80174ee:	4098      	lsls	r0, r3
 80174f0:	e7d8      	b.n	80174a4 <svc_abs_subs_block+0x3c>
 80174f2:	1040      	asrs	r0, r0, #1
 80174f4:	4240      	negs	r0, r0
 80174f6:	2301      	movs	r3, #1
 80174f8:	f300 001e 	ssat	r0, #31, r0
 80174fc:	4098      	lsls	r0, r3
 80174fe:	e7d1      	b.n	80174a4 <svc_abs_subs_block+0x3c>
 8017500:	f9b3 4a28 	ldrsh.w	r4, [r3, #2600]	@ 0xa28
 8017504:	2c01      	cmp	r4, #1
 8017506:	d1b6      	bne.n	8017476 <svc_abs_subs_block+0xe>
 8017508:	e7bc      	b.n	8017484 <svc_abs_subs_block+0x1c>
 801750a:	6800      	ldr	r0, [r0, #0]
 801750c:	2801      	cmp	r0, #1
 801750e:	4605      	mov	r5, r0
 8017510:	ddbe      	ble.n	8017490 <svc_abs_subs_block+0x28>
 8017512:	f9b3 0a3c 	ldrsh.w	r0, [r3, #2620]	@ 0xa3c
 8017516:	2801      	cmp	r0, #1
 8017518:	d1ba      	bne.n	8017490 <svc_abs_subs_block+0x28>
 801751a:	2f00      	cmp	r7, #0
 801751c:	ddab      	ble.n	8017476 <svc_abs_subs_block+0xe>
 801751e:	f9b3 ba2a 	ldrsh.w	fp, [r3, #2602]	@ 0xa2a
 8017522:	9102      	str	r1, [sp, #8]
 8017524:	eb02 0087 	add.w	r0, r2, r7, lsl #2
 8017528:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 801752c:	009b      	lsls	r3, r3, #2
 801752e:	9001      	str	r0, [sp, #4]
 8017530:	00a8      	lsls	r0, r5, #2
 8017532:	f04f 0900 	mov.w	r9, #0
 8017536:	4606      	mov	r6, r0
 8017538:	9305      	str	r3, [sp, #20]
 801753a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 801753e:	9304      	str	r3, [sp, #16]
 8017540:	464c      	mov	r4, r9
 8017542:	4648      	mov	r0, r9
 8017544:	46aa      	mov	sl, r5
 8017546:	46b0      	mov	r8, r6
 8017548:	e008      	b.n	801755c <svc_abs_subs_block+0xf4>
 801754a:	3401      	adds	r4, #1
 801754c:	eb0a 0309 	add.w	r3, sl, r9
 8017550:	f842 0b04 	str.w	r0, [r2], #4
 8017554:	4699      	mov	r9, r3
 8017556:	9b01      	ldr	r3, [sp, #4]
 8017558:	4293      	cmp	r3, r2
 801755a:	d08c      	beq.n	8017476 <svc_abs_subs_block+0xe>
 801755c:	455c      	cmp	r4, fp
 801755e:	d001      	beq.n	8017564 <svc_abs_subs_block+0xfc>
 8017560:	2c00      	cmp	r4, #0
 8017562:	d1f2      	bne.n	801754a <svc_abs_subs_block+0xe2>
 8017564:	f1bb 0f01 	cmp.w	fp, #1
 8017568:	dd4d      	ble.n	8017606 <svc_abs_subs_block+0x19e>
 801756a:	9b02      	ldr	r3, [sp, #8]
 801756c:	f1ba 0f03 	cmp.w	sl, #3
 8017570:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 8017574:	dd33      	ble.n	80175de <svc_abs_subs_block+0x176>
 8017576:	f1bb 0f00 	cmp.w	fp, #0
 801757a:	f340 8096 	ble.w	80176aa <svc_abs_subs_block+0x242>
 801757e:	2000      	movs	r0, #0
 8017580:	330c      	adds	r3, #12
 8017582:	4604      	mov	r4, r0
 8017584:	4686      	mov	lr, r0
 8017586:	4601      	mov	r1, r0
 8017588:	4684      	mov	ip, r0
 801758a:	9203      	str	r2, [sp, #12]
 801758c:	e913 00e0 	ldmdb	r3, {r5, r6, r7}
 8017590:	681a      	ldr	r2, [r3, #0]
 8017592:	f10c 0c01 	add.w	ip, ip, #1
 8017596:	45dc      	cmp	ip, fp
 8017598:	eb01 1122 	add.w	r1, r1, r2, asr #4
 801759c:	eb0e 1e27 	add.w	lr, lr, r7, asr #4
 80175a0:	eb04 1426 	add.w	r4, r4, r6, asr #4
 80175a4:	eb00 1025 	add.w	r0, r0, r5, asr #4
 80175a8:	4443      	add	r3, r8
 80175aa:	d1ef      	bne.n	801758c <svc_abs_subs_block+0x124>
 80175ac:	2900      	cmp	r1, #0
 80175ae:	9a03      	ldr	r2, [sp, #12]
 80175b0:	dd75      	ble.n	801769e <svc_abs_subs_block+0x236>
 80175b2:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80175b6:	f1be 0f00 	cmp.w	lr, #0
 80175ba:	dd67      	ble.n	801768c <svc_abs_subs_block+0x224>
 80175bc:	458e      	cmp	lr, r1
 80175be:	bfb8      	it	lt
 80175c0:	468e      	movlt	lr, r1
 80175c2:	2c00      	cmp	r4, #0
 80175c4:	dd42      	ble.n	801764c <svc_abs_subs_block+0x1e4>
 80175c6:	4574      	cmp	r4, lr
 80175c8:	bfb8      	it	lt
 80175ca:	4674      	movlt	r4, lr
 80175cc:	2800      	cmp	r0, #0
 80175ce:	dd34      	ble.n	801763a <svc_abs_subs_block+0x1d2>
 80175d0:	42a0      	cmp	r0, r4
 80175d2:	bfb8      	it	lt
 80175d4:	4620      	movlt	r0, r4
 80175d6:	eb0a 0309 	add.w	r3, sl, r9
 80175da:	2401      	movs	r4, #1
 80175dc:	e7b8      	b.n	8017550 <svc_abs_subs_block+0xe8>
 80175de:	d03b      	beq.n	8017658 <svc_abs_subs_block+0x1f0>
 80175e0:	f1bb 0f00 	cmp.w	fp, #0
 80175e4:	dd2f      	ble.n	8017646 <svc_abs_subs_block+0x1de>
 80175e6:	9904      	ldr	r1, [sp, #16]
 80175e8:	2000      	movs	r0, #0
 80175ea:	185e      	adds	r6, r3, r1
 80175ec:	4604      	mov	r4, r0
 80175ee:	685d      	ldr	r5, [r3, #4]
 80175f0:	f853 1b08 	ldr.w	r1, [r3], #8
 80175f4:	42b3      	cmp	r3, r6
 80175f6:	eb04 1425 	add.w	r4, r4, r5, asr #4
 80175fa:	eb00 1021 	add.w	r0, r0, r1, asr #4
 80175fe:	d1f6      	bne.n	80175ee <svc_abs_subs_block+0x186>
 8017600:	f04f 0e00 	mov.w	lr, #0
 8017604:	e7dd      	b.n	80175c2 <svc_abs_subs_block+0x15a>
 8017606:	9802      	ldr	r0, [sp, #8]
 8017608:	eb0a 0309 	add.w	r3, sl, r9
 801760c:	eb00 0483 	add.w	r4, r0, r3, lsl #2
 8017610:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 8017614:	2000      	movs	r0, #0
 8017616:	e004      	b.n	8017622 <svc_abs_subs_block+0x1ba>
 8017618:	4288      	cmp	r0, r1
 801761a:	bfb8      	it	lt
 801761c:	4608      	movlt	r0, r1
 801761e:	454c      	cmp	r4, r9
 8017620:	d009      	beq.n	8017636 <svc_abs_subs_block+0x1ce>
 8017622:	f859 1b04 	ldr.w	r1, [r9], #4
 8017626:	2900      	cmp	r1, #0
 8017628:	dcf6      	bgt.n	8017618 <svc_abs_subs_block+0x1b0>
 801762a:	1049      	asrs	r1, r1, #1
 801762c:	4249      	negs	r1, r1
 801762e:	f301 011e 	ssat	r1, #31, r1
 8017632:	0049      	lsls	r1, r1, #1
 8017634:	e7f0      	b.n	8017618 <svc_abs_subs_block+0x1b0>
 8017636:	2401      	movs	r4, #1
 8017638:	e78a      	b.n	8017550 <svc_abs_subs_block+0xe8>
 801763a:	1040      	asrs	r0, r0, #1
 801763c:	4240      	negs	r0, r0
 801763e:	f300 001e 	ssat	r0, #31, r0
 8017642:	0040      	lsls	r0, r0, #1
 8017644:	e7c4      	b.n	80175d0 <svc_abs_subs_block+0x168>
 8017646:	2400      	movs	r4, #0
 8017648:	4620      	mov	r0, r4
 801764a:	46a6      	mov	lr, r4
 801764c:	1064      	asrs	r4, r4, #1
 801764e:	4264      	negs	r4, r4
 8017650:	f304 041e 	ssat	r4, #31, r4
 8017654:	0064      	lsls	r4, r4, #1
 8017656:	e7b6      	b.n	80175c6 <svc_abs_subs_block+0x15e>
 8017658:	f1bb 0f00 	cmp.w	fp, #0
 801765c:	dd12      	ble.n	8017684 <svc_abs_subs_block+0x21c>
 801765e:	9905      	ldr	r1, [sp, #20]
 8017660:	2000      	movs	r0, #0
 8017662:	185f      	adds	r7, r3, r1
 8017664:	4604      	mov	r4, r0
 8017666:	4686      	mov	lr, r0
 8017668:	689e      	ldr	r6, [r3, #8]
 801766a:	685d      	ldr	r5, [r3, #4]
 801766c:	f853 1b0c 	ldr.w	r1, [r3], #12
 8017670:	42bb      	cmp	r3, r7
 8017672:	eb0e 1e26 	add.w	lr, lr, r6, asr #4
 8017676:	eb04 1425 	add.w	r4, r4, r5, asr #4
 801767a:	eb00 1021 	add.w	r0, r0, r1, asr #4
 801767e:	d1f3      	bne.n	8017668 <svc_abs_subs_block+0x200>
 8017680:	2100      	movs	r1, #0
 8017682:	e798      	b.n	80175b6 <svc_abs_subs_block+0x14e>
 8017684:	2100      	movs	r1, #0
 8017686:	460c      	mov	r4, r1
 8017688:	4608      	mov	r0, r1
 801768a:	468e      	mov	lr, r1
 801768c:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8017690:	f1ce 0e00 	rsb	lr, lr, #0
 8017694:	f30e 0e1e 	ssat	lr, #31, lr
 8017698:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801769c:	e78e      	b.n	80175bc <svc_abs_subs_block+0x154>
 801769e:	104b      	asrs	r3, r1, #1
 80176a0:	425b      	negs	r3, r3
 80176a2:	f303 031e 	ssat	r3, #31, r3
 80176a6:	0059      	lsls	r1, r3, #1
 80176a8:	e783      	b.n	80175b2 <svc_abs_subs_block+0x14a>
 80176aa:	2300      	movs	r3, #0
 80176ac:	4618      	mov	r0, r3
 80176ae:	461c      	mov	r4, r3
 80176b0:	469e      	mov	lr, r3
 80176b2:	e7f6      	b.n	80176a2 <svc_abs_subs_block+0x23a>

080176b4 <svc_gain_application_block>:
 80176b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176b8:	b087      	sub	sp, #28
 80176ba:	68c6      	ldr	r6, [r0, #12]
 80176bc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80176be:	f8d0 9008 	ldr.w	r9, [r0, #8]
 80176c2:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 80176c6:	f8d5 7a2c 	ldr.w	r7, [r5, #2604]	@ 0xa2c
 80176ca:	f9b5 ba34 	ldrsh.w	fp, [r5, #2612]	@ 0xa34
 80176ce:	f8d0 c000 	ldr.w	ip, [r0]
 80176d2:	f9b5 8a3c 	ldrsh.w	r8, [r5, #2620]	@ 0xa3c
 80176d6:	f9bd e044 	ldrsh.w	lr, [sp, #68]	@ 0x44
 80176da:	f9bd a048 	ldrsh.w	sl, [sp, #72]	@ 0x48
 80176de:	1b3f      	subs	r7, r7, r4
 80176e0:	ea4f 0666 	mov.w	r6, r6, asr #1
 80176e4:	bf18      	it	ne
 80176e6:	fb97 f7f6 	sdivne	r7, r7, r6
 80176ea:	f1bb 0f00 	cmp.w	fp, #0
 80176ee:	dd3b      	ble.n	8017768 <svc_gain_application_block+0xb4>
 80176f0:	6900      	ldr	r0, [r0, #16]
 80176f2:	2801      	cmp	r0, #1
 80176f4:	d06d      	beq.n	80177d2 <svc_gain_application_block+0x11e>
 80176f6:	f1be 0f01 	cmp.w	lr, #1
 80176fa:	f9b5 e014 	ldrsh.w	lr, [r5, #20]
 80176fe:	f105 0c28 	add.w	ip, r5, #40	@ 0x28
 8017702:	ea4f 008e 	mov.w	r0, lr, lsl #2
 8017706:	bf08      	it	eq
 8017708:	4484      	addeq	ip, r0
 801770a:	2e00      	cmp	r6, #0
 801770c:	f1c0 0000 	rsb	r0, r0, #0
 8017710:	dd27      	ble.n	8017762 <svc_gain_application_block+0xae>
 8017712:	4402      	add	r2, r0
 8017714:	3b04      	subs	r3, #4
 8017716:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 801771a:	2000      	movs	r0, #0
 801771c:	46a1      	mov	r9, r4
 801771e:	e001      	b.n	8017724 <svc_gain_application_block+0x70>
 8017720:	f8d5 9a30 	ldr.w	r9, [r5, #2608]	@ 0xa30
 8017724:	f851 ab04 	ldr.w	sl, [r1], #4
 8017728:	4570      	cmp	r0, lr
 801772a:	bfb4      	ite	lt
 801772c:	4664      	movlt	r4, ip
 801772e:	4614      	movge	r4, r2
 8017730:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 8017734:	ea4f 08a4 	mov.w	r8, r4, asr #2
 8017738:	fb58 f81a 	smmulr	r8, r8, sl
 801773c:	eb07 0409 	add.w	r4, r7, r9
 8017740:	f8c5 4a30 	str.w	r4, [r5, #2608]	@ 0xa30
 8017744:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8017748:	fb58 f414 	smmulr	r4, r8, r4
 801774c:	0264      	lsls	r4, r4, #9
 801774e:	428e      	cmp	r6, r1
 8017750:	f304 0419 	ssat	r4, #26, r4
 8017754:	ea4f 1484 	mov.w	r4, r4, lsl #6
 8017758:	f843 4f04 	str.w	r4, [r3, #4]!
 801775c:	f100 0001 	add.w	r0, r0, #1
 8017760:	d1de      	bne.n	8017720 <svc_gain_application_block+0x6c>
 8017762:	b007      	add	sp, #28
 8017764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017768:	f9b5 ba28 	ldrsh.w	fp, [r5, #2600]	@ 0xa28
 801776c:	f1bb 0f01 	cmp.w	fp, #1
 8017770:	d0be      	beq.n	80176f0 <svc_gain_application_block+0x3c>
 8017772:	6901      	ldr	r1, [r0, #16]
 8017774:	2901      	cmp	r1, #1
 8017776:	d06f      	beq.n	8017858 <svc_gain_application_block+0x1a4>
 8017778:	f1be 0f01 	cmp.w	lr, #1
 801777c:	f9b5 e014 	ldrsh.w	lr, [r5, #20]
 8017780:	f105 0c28 	add.w	ip, r5, #40	@ 0x28
 8017784:	ea4f 018e 	mov.w	r1, lr, lsl #2
 8017788:	bf08      	it	eq
 801778a:	448c      	addeq	ip, r1
 801778c:	2e00      	cmp	r6, #0
 801778e:	f1c1 0100 	rsb	r1, r1, #0
 8017792:	dde6      	ble.n	8017762 <svc_gain_application_block+0xae>
 8017794:	440a      	add	r2, r1
 8017796:	3b04      	subs	r3, #4
 8017798:	2000      	movs	r0, #0
 801779a:	4621      	mov	r1, r4
 801779c:	e001      	b.n	80177a2 <svc_gain_application_block+0xee>
 801779e:	f8d5 1a30 	ldr.w	r1, [r5, #2608]	@ 0xa30
 80177a2:	4570      	cmp	r0, lr
 80177a4:	bfb4      	ite	lt
 80177a6:	46e0      	movlt	r8, ip
 80177a8:	4690      	movge	r8, r2
 80177aa:	187c      	adds	r4, r7, r1
 80177ac:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
 80177b0:	f8c5 4a30 	str.w	r4, [r5, #2608]	@ 0xa30
 80177b4:	fb51 f114 	smmulr	r1, r1, r4
 80177b8:	3001      	adds	r0, #1
 80177ba:	0189      	lsls	r1, r1, #6
 80177bc:	4286      	cmp	r6, r0
 80177be:	f301 011e 	ssat	r1, #31, r1
 80177c2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80177c6:	f843 1f04 	str.w	r1, [r3, #4]!
 80177ca:	d1e8      	bne.n	801779e <svc_gain_application_block+0xea>
 80177cc:	b007      	add	sp, #28
 80177ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177d2:	f1bc 0f01 	cmp.w	ip, #1
 80177d6:	dd8e      	ble.n	80176f6 <svc_gain_application_block+0x42>
 80177d8:	f1b8 0f01 	cmp.w	r8, #1
 80177dc:	d07a      	beq.n	80178d4 <svc_gain_application_block+0x220>
 80177de:	f1bc 0f02 	cmp.w	ip, #2
 80177e2:	d188      	bne.n	80176f6 <svc_gain_application_block+0x42>
 80177e4:	f1be 0f01 	cmp.w	lr, #1
 80177e8:	f9b5 e014 	ldrsh.w	lr, [r5, #20]
 80177ec:	d068      	beq.n	80178c0 <svc_gain_application_block+0x20c>
 80177ee:	eba9 09ce 	sub.w	r9, r9, lr, lsl #3
 80177f2:	f105 0c28 	add.w	ip, r5, #40	@ 0x28
 80177f6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80177fa:	ea4f 0846 	mov.w	r8, r6, lsl #1
 80177fe:	fb0a f808 	mul.w	r8, sl, r8
 8017802:	2e00      	cmp	r6, #0
 8017804:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8017808:	ddab      	ble.n	8017762 <svc_gain_application_block+0xae>
 801780a:	3b04      	subs	r3, #4
 801780c:	2000      	movs	r0, #0
 801780e:	4622      	mov	r2, r4
 8017810:	e001      	b.n	8017816 <svc_gain_application_block+0x162>
 8017812:	f8d5 2a30 	ldr.w	r2, [r5, #2608]	@ 0xa30
 8017816:	f851 bb04 	ldr.w	fp, [r1], #4
 801781a:	0044      	lsls	r4, r0, #1
 801781c:	eb09 0ac0 	add.w	sl, r9, r0, lsl #3
 8017820:	4574      	cmp	r4, lr
 8017822:	bfb4      	ite	lt
 8017824:	f85c 4024 	ldrlt.w	r4, [ip, r4, lsl #2]
 8017828:	f85a 4008 	ldrge.w	r4, [sl, r8]
 801782c:	ea4f 0aa4 	mov.w	sl, r4, asr #2
 8017830:	fb5a fa1b 	smmulr	sl, sl, fp
 8017834:	18bc      	adds	r4, r7, r2
 8017836:	f8c5 4a30 	str.w	r4, [r5, #2608]	@ 0xa30
 801783a:	ea4f 024a 	mov.w	r2, sl, lsl #1
 801783e:	fb52 f214 	smmulr	r2, r2, r4
 8017842:	3001      	adds	r0, #1
 8017844:	0252      	lsls	r2, r2, #9
 8017846:	4286      	cmp	r6, r0
 8017848:	f302 0219 	ssat	r2, #26, r2
 801784c:	ea4f 1282 	mov.w	r2, r2, lsl #6
 8017850:	f843 2f04 	str.w	r2, [r3, #4]!
 8017854:	d1dd      	bne.n	8017812 <svc_gain_application_block+0x15e>
 8017856:	e784      	b.n	8017762 <svc_gain_application_block+0xae>
 8017858:	f1bc 0f01 	cmp.w	ip, #1
 801785c:	dd8c      	ble.n	8017778 <svc_gain_application_block+0xc4>
 801785e:	f1b8 0f01 	cmp.w	r8, #1
 8017862:	f000 8140 	beq.w	8017ae6 <svc_gain_application_block+0x432>
 8017866:	f1bc 0f02 	cmp.w	ip, #2
 801786a:	d185      	bne.n	8017778 <svc_gain_application_block+0xc4>
 801786c:	f1be 0f01 	cmp.w	lr, #1
 8017870:	f9b5 0014 	ldrsh.w	r0, [r5, #20]
 8017874:	f000 816e 	beq.w	8017b54 <svc_gain_application_block+0x4a0>
 8017878:	eba9 09c0 	sub.w	r9, r9, r0, lsl #3
 801787c:	f105 0e28 	add.w	lr, r5, #40	@ 0x28
 8017880:	0040      	lsls	r0, r0, #1
 8017882:	2e00      	cmp	r6, #0
 8017884:	f77f af6d 	ble.w	8017762 <svc_gain_application_block+0xae>
 8017888:	3b04      	subs	r3, #4
 801788a:	2100      	movs	r1, #0
 801788c:	e001      	b.n	8017892 <svc_gain_application_block+0x1de>
 801788e:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 8017892:	004a      	lsls	r2, r1, #1
 8017894:	4288      	cmp	r0, r1
 8017896:	443c      	add	r4, r7
 8017898:	bfcc      	ite	gt
 801789a:	f85e 2022 	ldrgt.w	r2, [lr, r2, lsl #2]
 801789e:	f859 2022 	ldrle.w	r2, [r9, r2, lsl #2]
 80178a2:	f8c5 4a30 	str.w	r4, [r5, #2608]	@ 0xa30
 80178a6:	fb52 f214 	smmulr	r2, r2, r4
 80178aa:	3101      	adds	r1, #1
 80178ac:	0192      	lsls	r2, r2, #6
 80178ae:	428e      	cmp	r6, r1
 80178b0:	f302 021e 	ssat	r2, #31, r2
 80178b4:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80178b8:	f843 2f04 	str.w	r2, [r3, #4]!
 80178bc:	d1e7      	bne.n	801788e <svc_gain_application_block+0x1da>
 80178be:	e750      	b.n	8017762 <svc_gain_application_block+0xae>
 80178c0:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80178c4:	ea4f 028e 	mov.w	r2, lr, lsl #2
 80178c8:	f1c2 0204 	rsb	r2, r2, #4
 80178cc:	4491      	add	r9, r2
 80178ce:	f105 0c2c 	add.w	ip, r5, #44	@ 0x2c
 80178d2:	e792      	b.n	80177fa <svc_gain_application_block+0x146>
 80178d4:	f9b5 0014 	ldrsh.w	r0, [r5, #20]
 80178d8:	fb0c f000 	mul.w	r0, ip, r0
 80178dc:	9001      	str	r0, [sp, #4]
 80178de:	eba2 0280 	sub.w	r2, r2, r0, lsl #2
 80178e2:	f1bc 0f03 	cmp.w	ip, #3
 80178e6:	f105 0028 	add.w	r0, r5, #40	@ 0x28
 80178ea:	4681      	mov	r9, r0
 80178ec:	dd67      	ble.n	80179be <svc_gain_application_block+0x30a>
 80178ee:	2e00      	cmp	r6, #0
 80178f0:	f77f af37 	ble.w	8017762 <svc_gain_application_block+0xae>
 80178f4:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80178f8:	f04f 0900 	mov.w	r9, #0
 80178fc:	9602      	str	r6, [sp, #8]
 80178fe:	ea4f 068c 	mov.w	r6, ip, lsl #2
 8017902:	4698      	mov	r8, r3
 8017904:	f8cd c010 	str.w	ip, [sp, #16]
 8017908:	9305      	str	r3, [sp, #20]
 801790a:	46ca      	mov	sl, r9
 801790c:	9703      	str	r7, [sp, #12]
 801790e:	4684      	mov	ip, r0
 8017910:	4693      	mov	fp, r2
 8017912:	46b6      	mov	lr, r6
 8017914:	463b      	mov	r3, r7
 8017916:	e040      	b.n	801799a <svc_gain_application_block+0x2e6>
 8017918:	68d4      	ldr	r4, [r2, #12]
 801791a:	6890      	ldr	r0, [r2, #8]
 801791c:	f85c 302a 	ldr.w	r3, [ip, sl, lsl #2]
 8017920:	6852      	ldr	r2, [r2, #4]
 8017922:	10a4      	asrs	r4, r4, #2
 8017924:	fb54 f417 	smmulr	r4, r4, r7
 8017928:	1080      	asrs	r0, r0, #2
 801792a:	fb50 f017 	smmulr	r0, r0, r7
 801792e:	1092      	asrs	r2, r2, #2
 8017930:	fb52 f217 	smmulr	r2, r2, r7
 8017934:	109b      	asrs	r3, r3, #2
 8017936:	fb53 f317 	smmulr	r3, r3, r7
 801793a:	0064      	lsls	r4, r4, #1
 801793c:	fb54 f416 	smmulr	r4, r4, r6
 8017940:	0040      	lsls	r0, r0, #1
 8017942:	fb50 f016 	smmulr	r0, r0, r6
 8017946:	0052      	lsls	r2, r2, #1
 8017948:	fb52 f216 	smmulr	r2, r2, r6
 801794c:	005b      	lsls	r3, r3, #1
 801794e:	fb53 f316 	smmulr	r3, r3, r6
 8017952:	0252      	lsls	r2, r2, #9
 8017954:	f302 0219 	ssat	r2, #26, r2
 8017958:	0192      	lsls	r2, r2, #6
 801795a:	f8c8 2004 	str.w	r2, [r8, #4]
 801795e:	9a05      	ldr	r2, [sp, #20]
 8017960:	0264      	lsls	r4, r4, #9
 8017962:	0240      	lsls	r0, r0, #9
 8017964:	f304 0419 	ssat	r4, #26, r4
 8017968:	f300 0019 	ssat	r0, #26, r0
 801796c:	01a4      	lsls	r4, r4, #6
 801796e:	0180      	lsls	r0, r0, #6
 8017970:	025b      	lsls	r3, r3, #9
 8017972:	f303 0319 	ssat	r3, #26, r3
 8017976:	019b      	lsls	r3, r3, #6
 8017978:	f8c8 400c 	str.w	r4, [r8, #12]
 801797c:	f8c8 0008 	str.w	r0, [r8, #8]
 8017980:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8017984:	9b04      	ldr	r3, [sp, #16]
 8017986:	449a      	add	sl, r3
 8017988:	9b02      	ldr	r3, [sp, #8]
 801798a:	4299      	cmp	r1, r3
 801798c:	44f1      	add	r9, lr
 801798e:	44f0      	add	r8, lr
 8017990:	f43f aee7 	beq.w	8017762 <svc_gain_application_block+0xae>
 8017994:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 8017998:	9b03      	ldr	r3, [sp, #12]
 801799a:	f851 7b04 	ldr.w	r7, [r1], #4
 801799e:	191e      	adds	r6, r3, r4
 80179a0:	9b01      	ldr	r3, [sp, #4]
 80179a2:	f8c5 6a30 	str.w	r6, [r5, #2608]	@ 0xa30
 80179a6:	4553      	cmp	r3, sl
 80179a8:	eb0c 0209 	add.w	r2, ip, r9
 80179ac:	eb0b 0309 	add.w	r3, fp, r9
 80179b0:	dcb2      	bgt.n	8017918 <svc_gain_application_block+0x264>
 80179b2:	68dc      	ldr	r4, [r3, #12]
 80179b4:	6898      	ldr	r0, [r3, #8]
 80179b6:	685a      	ldr	r2, [r3, #4]
 80179b8:	f85b 302a 	ldr.w	r3, [fp, sl, lsl #2]
 80179bc:	e7b1      	b.n	8017922 <svc_gain_application_block+0x26e>
 80179be:	d042      	beq.n	8017a46 <svc_gain_application_block+0x392>
 80179c0:	2e00      	cmp	r6, #0
 80179c2:	f77f aece 	ble.w	8017762 <svc_gain_application_block+0xae>
 80179c6:	2000      	movs	r0, #0
 80179c8:	46cc      	mov	ip, r9
 80179ca:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80179ce:	4686      	mov	lr, r0
 80179d0:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80179d4:	4690      	mov	r8, r2
 80179d6:	e001      	b.n	80179dc <svc_gain_application_block+0x328>
 80179d8:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 80179dc:	f851 bb04 	ldr.w	fp, [r1], #4
 80179e0:	eb0c 0a00 	add.w	sl, ip, r0
 80179e4:	443c      	add	r4, r7
 80179e6:	f8c5 4a30 	str.w	r4, [r5, #2608]	@ 0xa30
 80179ea:	45f1      	cmp	r9, lr
 80179ec:	eb08 0200 	add.w	r2, r8, r0
 80179f0:	bfd3      	iteet	le
 80179f2:	f858 a02e 	ldrle.w	sl, [r8, lr, lsl #2]
 80179f6:	f8da 2004 	ldrgt.w	r2, [sl, #4]
 80179fa:	f85c a02e 	ldrgt.w	sl, [ip, lr, lsl #2]
 80179fe:	6852      	ldrle	r2, [r2, #4]
 8017a00:	ea4f 0aaa 	mov.w	sl, sl, asr #2
 8017a04:	fb5a fa1b 	smmulr	sl, sl, fp
 8017a08:	1092      	asrs	r2, r2, #2
 8017a0a:	fb52 f21b 	smmulr	r2, r2, fp
 8017a0e:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8017a12:	fb5a fa14 	smmulr	sl, sl, r4
 8017a16:	0052      	lsls	r2, r2, #1
 8017a18:	fb52 f214 	smmulr	r2, r2, r4
 8017a1c:	181c      	adds	r4, r3, r0
 8017a1e:	ea4f 2a4a 	mov.w	sl, sl, lsl #9
 8017a22:	0252      	lsls	r2, r2, #9
 8017a24:	f30a 0a19 	ssat	sl, #26, sl
 8017a28:	f302 0219 	ssat	r2, #26, r2
 8017a2c:	ea4f 1a8a 	mov.w	sl, sl, lsl #6
 8017a30:	0192      	lsls	r2, r2, #6
 8017a32:	428e      	cmp	r6, r1
 8017a34:	f843 a02e 	str.w	sl, [r3, lr, lsl #2]
 8017a38:	f100 0008 	add.w	r0, r0, #8
 8017a3c:	f10e 0e02 	add.w	lr, lr, #2
 8017a40:	6062      	str	r2, [r4, #4]
 8017a42:	d1c9      	bne.n	80179d8 <svc_gain_application_block+0x324>
 8017a44:	e68d      	b.n	8017762 <svc_gain_application_block+0xae>
 8017a46:	2e00      	cmp	r6, #0
 8017a48:	f77f ae8b 	ble.w	8017762 <svc_gain_application_block+0xae>
 8017a4c:	f04f 0c00 	mov.w	ip, #0
 8017a50:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8017a54:	46e0      	mov	r8, ip
 8017a56:	4682      	mov	sl, r0
 8017a58:	4693      	mov	fp, r2
 8017a5a:	468e      	mov	lr, r1
 8017a5c:	4699      	mov	r9, r3
 8017a5e:	e031      	b.n	8017ac4 <svc_gain_application_block+0x410>
 8017a60:	6884      	ldr	r4, [r0, #8]
 8017a62:	f85a 2028 	ldr.w	r2, [sl, r8, lsl #2]
 8017a66:	6840      	ldr	r0, [r0, #4]
 8017a68:	10a4      	asrs	r4, r4, #2
 8017a6a:	fb54 f411 	smmulr	r4, r4, r1
 8017a6e:	1080      	asrs	r0, r0, #2
 8017a70:	fb50 f011 	smmulr	r0, r0, r1
 8017a74:	1092      	asrs	r2, r2, #2
 8017a76:	fb52 f211 	smmulr	r2, r2, r1
 8017a7a:	0064      	lsls	r4, r4, #1
 8017a7c:	fb54 f413 	smmulr	r4, r4, r3
 8017a80:	0040      	lsls	r0, r0, #1
 8017a82:	fb50 f013 	smmulr	r0, r0, r3
 8017a86:	0052      	lsls	r2, r2, #1
 8017a88:	fb52 f313 	smmulr	r3, r2, r3
 8017a8c:	eb09 020c 	add.w	r2, r9, ip
 8017a90:	0264      	lsls	r4, r4, #9
 8017a92:	0240      	lsls	r0, r0, #9
 8017a94:	f304 0419 	ssat	r4, #26, r4
 8017a98:	f300 0019 	ssat	r0, #26, r0
 8017a9c:	01a4      	lsls	r4, r4, #6
 8017a9e:	0180      	lsls	r0, r0, #6
 8017aa0:	025b      	lsls	r3, r3, #9
 8017aa2:	45b6      	cmp	lr, r6
 8017aa4:	f303 0319 	ssat	r3, #26, r3
 8017aa8:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8017aac:	6094      	str	r4, [r2, #8]
 8017aae:	6050      	str	r0, [r2, #4]
 8017ab0:	f10c 0c0c 	add.w	ip, ip, #12
 8017ab4:	f849 3028 	str.w	r3, [r9, r8, lsl #2]
 8017ab8:	f108 0803 	add.w	r8, r8, #3
 8017abc:	f43f ae51 	beq.w	8017762 <svc_gain_application_block+0xae>
 8017ac0:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 8017ac4:	9a01      	ldr	r2, [sp, #4]
 8017ac6:	f85e 1b04 	ldr.w	r1, [lr], #4
 8017aca:	193b      	adds	r3, r7, r4
 8017acc:	4542      	cmp	r2, r8
 8017ace:	eb0a 000c 	add.w	r0, sl, ip
 8017ad2:	f8c5 3a30 	str.w	r3, [r5, #2608]	@ 0xa30
 8017ad6:	eb0b 020c 	add.w	r2, fp, ip
 8017ada:	dcc1      	bgt.n	8017a60 <svc_gain_application_block+0x3ac>
 8017adc:	6894      	ldr	r4, [r2, #8]
 8017ade:	6850      	ldr	r0, [r2, #4]
 8017ae0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
 8017ae4:	e7c0      	b.n	8017a68 <svc_gain_application_block+0x3b4>
 8017ae6:	f9b5 e014 	ldrsh.w	lr, [r5, #20]
 8017aea:	2e00      	cmp	r6, #0
 8017aec:	fb0c fe0e 	mul.w	lr, ip, lr
 8017af0:	ea4f 088e 	mov.w	r8, lr, lsl #2
 8017af4:	f105 0928 	add.w	r9, r5, #40	@ 0x28
 8017af8:	f77f ae33 	ble.w	8017762 <svc_gain_application_block+0xae>
 8017afc:	2100      	movs	r1, #0
 8017afe:	ebc8 0802 	rsb	r8, r8, r2
 8017b02:	ea4f 028c 	mov.w	r2, ip, lsl #2
 8017b06:	468a      	mov	sl, r1
 8017b08:	9201      	str	r2, [sp, #4]
 8017b0a:	193a      	adds	r2, r7, r4
 8017b0c:	f8c5 2a30 	str.w	r2, [r5, #2608]	@ 0xa30
 8017b10:	eb0c 0b01 	add.w	fp, ip, r1
 8017b14:	461c      	mov	r4, r3
 8017b16:	e001      	b.n	8017b1c <svc_gain_application_block+0x468>
 8017b18:	f8d5 2a30 	ldr.w	r2, [r5, #2608]	@ 0xa30
 8017b1c:	458e      	cmp	lr, r1
 8017b1e:	bfcc      	ite	gt
 8017b20:	f859 0021 	ldrgt.w	r0, [r9, r1, lsl #2]
 8017b24:	f858 0021 	ldrle.w	r0, [r8, r1, lsl #2]
 8017b28:	fb50 f212 	smmulr	r2, r0, r2
 8017b2c:	3101      	adds	r1, #1
 8017b2e:	0112      	lsls	r2, r2, #4
 8017b30:	4559      	cmp	r1, fp
 8017b32:	f302 021c 	ssat	r2, #29, r2
 8017b36:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017b3a:	f844 2b04 	str.w	r2, [r4], #4
 8017b3e:	d1eb      	bne.n	8017b18 <svc_gain_application_block+0x464>
 8017b40:	f10a 0a01 	add.w	sl, sl, #1
 8017b44:	9a01      	ldr	r2, [sp, #4]
 8017b46:	4556      	cmp	r6, sl
 8017b48:	4413      	add	r3, r2
 8017b4a:	f43f ae0a 	beq.w	8017762 <svc_gain_application_block+0xae>
 8017b4e:	f8d5 4a30 	ldr.w	r4, [r5, #2608]	@ 0xa30
 8017b52:	e7da      	b.n	8017b0a <svc_gain_application_block+0x456>
 8017b54:	0040      	lsls	r0, r0, #1
 8017b56:	0082      	lsls	r2, r0, #2
 8017b58:	f1c2 0204 	rsb	r2, r2, #4
 8017b5c:	4491      	add	r9, r2
 8017b5e:	f105 0e2c 	add.w	lr, r5, #44	@ 0x2c
 8017b62:	e68e      	b.n	8017882 <svc_gain_application_block+0x1ce>

08017b64 <svc_update_static_block>:
 8017b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b68:	6804      	ldr	r4, [r0, #0]
 8017b6a:	68c6      	ldr	r6, [r0, #12]
 8017b6c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8017b70:	2c01      	cmp	r4, #1
 8017b72:	ea4f 0666 	mov.w	r6, r6, asr #1
 8017b76:	dd13      	ble.n	8017ba0 <svc_update_static_block+0x3c>
 8017b78:	f1be 0f00 	cmp.w	lr, #0
 8017b7c:	d110      	bne.n	8017ba0 <svc_update_static_block+0x3c>
 8017b7e:	6904      	ldr	r4, [r0, #16]
 8017b80:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 8017b84:	2c01      	cmp	r4, #1
 8017b86:	d119      	bne.n	8017bbc <svc_update_static_block+0x58>
 8017b88:	f9b2 3a3e 	ldrsh.w	r3, [r2, #2622]	@ 0xa3e
 8017b8c:	b133      	cbz	r3, 8017b9c <svc_update_static_block+0x38>
 8017b8e:	6803      	ldr	r3, [r0, #0]
 8017b90:	2b02      	cmp	r3, #2
 8017b92:	f000 8083 	beq.w	8017c9c <svc_update_static_block+0x138>
 8017b96:	2300      	movs	r3, #0
 8017b98:	f8a2 3a3e 	strh.w	r3, [r2, #2622]	@ 0xa3e
 8017b9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ba0:	f9b2 3a38 	ldrsh.w	r3, [r2, #2616]	@ 0xa38
 8017ba4:	2b01      	cmp	r3, #1
 8017ba6:	d04b      	beq.n	8017c40 <svc_update_static_block+0xdc>
 8017ba8:	f8d2 3a2c 	ldr.w	r3, [r2, #2604]	@ 0xa2c
 8017bac:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 8017bb0:	6903      	ldr	r3, [r0, #16]
 8017bb2:	2b01      	cmp	r3, #1
 8017bb4:	d04c      	beq.n	8017c50 <svc_update_static_block+0xec>
 8017bb6:	f1be 0f01 	cmp.w	lr, #1
 8017bba:	d03a      	beq.n	8017c32 <svc_update_static_block+0xce>
 8017bbc:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8017bc0:	f102 0c28 	add.w	ip, r2, #40	@ 0x28
 8017bc4:	4546      	cmp	r6, r8
 8017bc6:	da16      	bge.n	8017bf6 <svc_update_static_block+0x92>
 8017bc8:	1073      	asrs	r3, r6, #1
 8017bca:	2b00      	cmp	r3, #0
 8017bcc:	f340 808f 	ble.w	8017cee <svc_update_static_block+0x18a>
 8017bd0:	ea4f 08c3 	mov.w	r8, r3, lsl #3
 8017bd4:	eb01 0708 	add.w	r7, r1, r8
 8017bd8:	f1ac 0308 	sub.w	r3, ip, #8
 8017bdc:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8017be0:	42b9      	cmp	r1, r7
 8017be2:	e9e3 4502 	strd	r4, r5, [r3, #8]!
 8017be6:	d1f9      	bne.n	8017bdc <svc_update_static_block+0x78>
 8017be8:	44c4      	add	ip, r8
 8017bea:	07f3      	lsls	r3, r6, #31
 8017bec:	d5cc      	bpl.n	8017b88 <svc_update_static_block+0x24>
 8017bee:	683b      	ldr	r3, [r7, #0]
 8017bf0:	f8cc 3000 	str.w	r3, [ip]
 8017bf4:	e7c8      	b.n	8017b88 <svc_update_static_block+0x24>
 8017bf6:	ea4f 0968 	mov.w	r9, r8, asr #1
 8017bfa:	ebc8 0606 	rsb	r6, r8, r6
 8017bfe:	f1b9 0f00 	cmp.w	r9, #0
 8017c02:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8017c06:	464b      	mov	r3, r9
 8017c08:	dd0c      	ble.n	8017c24 <svc_update_static_block+0xc0>
 8017c0a:	f1ac 0508 	sub.w	r5, ip, #8
 8017c0e:	460c      	mov	r4, r1
 8017c10:	e8f4 6702 	ldrd	r6, r7, [r4], #8
 8017c14:	3b01      	subs	r3, #1
 8017c16:	e9e5 6702 	strd	r6, r7, [r5, #8]!
 8017c1a:	d1f9      	bne.n	8017c10 <svc_update_static_block+0xac>
 8017c1c:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8017c20:	44cc      	add	ip, r9
 8017c22:	4449      	add	r1, r9
 8017c24:	f018 0f01 	tst.w	r8, #1
 8017c28:	bf1c      	itt	ne
 8017c2a:	680b      	ldrne	r3, [r1, #0]
 8017c2c:	f8cc 3000 	strne.w	r3, [ip]
 8017c30:	e7aa      	b.n	8017b88 <svc_update_static_block+0x24>
 8017c32:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8017c36:	f102 0c28 	add.w	ip, r2, #40	@ 0x28
 8017c3a:	eb0c 0c88 	add.w	ip, ip, r8, lsl #2
 8017c3e:	e7c1      	b.n	8017bc4 <svc_update_static_block+0x60>
 8017c40:	2300      	movs	r3, #0
 8017c42:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 8017c46:	f8c2 3a2c 	str.w	r3, [r2, #2604]	@ 0xa2c
 8017c4a:	6903      	ldr	r3, [r0, #16]
 8017c4c:	2b01      	cmp	r3, #1
 8017c4e:	d1b2      	bne.n	8017bb6 <svc_update_static_block+0x52>
 8017c50:	2c01      	cmp	r4, #1
 8017c52:	ddb0      	ble.n	8017bb6 <svc_update_static_block+0x52>
 8017c54:	f1be 0f01 	cmp.w	lr, #1
 8017c58:	d196      	bne.n	8017b88 <svc_update_static_block+0x24>
 8017c5a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8017c5e:	4546      	cmp	r6, r8
 8017c60:	f102 0728 	add.w	r7, r2, #40	@ 0x28
 8017c64:	da23      	bge.n	8017cae <svc_update_static_block+0x14a>
 8017c66:	fb04 f406 	mul.w	r4, r4, r6
 8017c6a:	ea4f 0a64 	mov.w	sl, r4, asr #1
 8017c6e:	f1ba 0f00 	cmp.w	sl, #0
 8017c72:	dd0d      	ble.n	8017c90 <svc_update_static_block+0x12c>
 8017c74:	f102 0c20 	add.w	ip, r2, #32
 8017c78:	460d      	mov	r5, r1
 8017c7a:	4653      	mov	r3, sl
 8017c7c:	e8f5 8902 	ldrd	r8, r9, [r5], #8
 8017c80:	3b01      	subs	r3, #1
 8017c82:	e9ec 8902 	strd	r8, r9, [ip, #8]!
 8017c86:	d1f9      	bne.n	8017c7c <svc_update_static_block+0x118>
 8017c88:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 8017c8c:	4457      	add	r7, sl
 8017c8e:	4451      	add	r1, sl
 8017c90:	07e4      	lsls	r4, r4, #31
 8017c92:	f57f af79 	bpl.w	8017b88 <svc_update_static_block+0x24>
 8017c96:	680b      	ldr	r3, [r1, #0]
 8017c98:	603b      	str	r3, [r7, #0]
 8017c9a:	e775      	b.n	8017b88 <svc_update_static_block+0x24>
 8017c9c:	f1be 0f00 	cmp.w	lr, #0
 8017ca0:	f47f af79 	bne.w	8017b96 <svc_update_static_block+0x32>
 8017ca4:	2301      	movs	r3, #1
 8017ca6:	f8a2 3a3e 	strh.w	r3, [r2, #2622]	@ 0xa3e
 8017caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017cae:	ebc8 0606 	rsb	r6, r8, r6
 8017cb2:	fb08 f804 	mul.w	r8, r8, r4
 8017cb6:	ea4f 0968 	mov.w	r9, r8, asr #1
 8017cba:	fb04 f406 	mul.w	r4, r4, r6
 8017cbe:	f1b9 0f00 	cmp.w	r9, #0
 8017cc2:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8017cc6:	dd0d      	ble.n	8017ce4 <svc_update_static_block+0x180>
 8017cc8:	f102 0c20 	add.w	ip, r2, #32
 8017ccc:	460e      	mov	r6, r1
 8017cce:	464b      	mov	r3, r9
 8017cd0:	e8f6 4502 	ldrd	r4, r5, [r6], #8
 8017cd4:	3b01      	subs	r3, #1
 8017cd6:	e9ec 4502 	strd	r4, r5, [ip, #8]!
 8017cda:	d1f9      	bne.n	8017cd0 <svc_update_static_block+0x16c>
 8017cdc:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8017ce0:	444f      	add	r7, r9
 8017ce2:	4449      	add	r1, r9
 8017ce4:	f018 0f01 	tst.w	r8, #1
 8017ce8:	f43f af4e 	beq.w	8017b88 <svc_update_static_block+0x24>
 8017cec:	e7d3      	b.n	8017c96 <svc_update_static_block+0x132>
 8017cee:	460f      	mov	r7, r1
 8017cf0:	e77b      	b.n	8017bea <svc_update_static_block+0x86>
 8017cf2:	bf00      	nop

08017cf4 <svc_gain_computer_block.isra.1>:
 8017cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cf8:	f9b3 4a3e 	ldrsh.w	r4, [r3, #2622]	@ 0xa3e
 8017cfc:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8017cfe:	699f      	ldr	r7, [r3, #24]
 8017d00:	69dd      	ldr	r5, [r3, #28]
 8017d02:	f8d3 e020 	ldr.w	lr, [r3, #32]
 8017d06:	b085      	sub	sp, #20
 8017d08:	1040      	asrs	r0, r0, #1
 8017d0a:	9600      	str	r6, [sp, #0]
 8017d0c:	b144      	cbz	r4, 8017d20 <svc_gain_computer_block.isra.1+0x2c>
 8017d0e:	f8d3 4a4c 	ldr.w	r4, [r3, #2636]	@ 0xa4c
 8017d12:	f8d3 7a40 	ldr.w	r7, [r3, #2624]	@ 0xa40
 8017d16:	f8d3 5a44 	ldr.w	r5, [r3, #2628]	@ 0xa44
 8017d1a:	f8d3 ea48 	ldr.w	lr, [r3, #2632]	@ 0xa48
 8017d1e:	9400      	str	r4, [sp, #0]
 8017d20:	f9b3 4a34 	ldrsh.w	r4, [r3, #2612]	@ 0xa34
 8017d24:	2c00      	cmp	r4, #0
 8017d26:	dd10      	ble.n	8017d4a <svc_gain_computer_block.isra.1+0x56>
 8017d28:	f9b3 4a3a 	ldrsh.w	r4, [r3, #2618]	@ 0xa3a
 8017d2c:	2c01      	cmp	r4, #1
 8017d2e:	d013      	beq.n	8017d58 <svc_gain_computer_block.isra.1+0x64>
 8017d30:	2800      	cmp	r0, #0
 8017d32:	dd07      	ble.n	8017d44 <svc_gain_computer_block.isra.1+0x50>
 8017d34:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8017d38:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8017d3c:	f842 3b04 	str.w	r3, [r2], #4
 8017d40:	4282      	cmp	r2, r0
 8017d42:	d1fb      	bne.n	8017d3c <svc_gain_computer_block.isra.1+0x48>
 8017d44:	b005      	add	sp, #20
 8017d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d4a:	f9b3 4a28 	ldrsh.w	r4, [r3, #2600]	@ 0xa28
 8017d4e:	2c01      	cmp	r4, #1
 8017d50:	d0ea      	beq.n	8017d28 <svc_gain_computer_block.isra.1+0x34>
 8017d52:	b005      	add	sp, #20
 8017d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d58:	2800      	cmp	r0, #0
 8017d5a:	ddf3      	ble.n	8017d44 <svc_gain_computer_block.isra.1+0x50>
 8017d5c:	132c      	asrs	r4, r5, #12
 8017d5e:	2600      	movs	r6, #0
 8017d60:	eb01 0980 	add.w	r9, r1, r0, lsl #2
 8017d64:	1338      	asrs	r0, r7, #12
 8017d66:	9403      	str	r4, [sp, #12]
 8017d68:	9001      	str	r0, [sp, #4]
 8017d6a:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8017e78 <svc_gain_computer_block.isra.1+0x184>
 8017d6e:	f9b3 ca2a 	ldrsh.w	ip, [r3, #2602]	@ 0xa2a
 8017d72:	9702      	str	r7, [sp, #8]
 8017d74:	4635      	mov	r5, r6
 8017d76:	4634      	mov	r4, r6
 8017d78:	4648      	mov	r0, r9
 8017d7a:	e005      	b.n	8017d88 <svc_gain_computer_block.isra.1+0x94>
 8017d7c:	4435      	add	r5, r6
 8017d7e:	3401      	adds	r4, #1
 8017d80:	4281      	cmp	r1, r0
 8017d82:	f842 5b04 	str.w	r5, [r2], #4
 8017d86:	d0dd      	beq.n	8017d44 <svc_gain_computer_block.isra.1+0x50>
 8017d88:	4564      	cmp	r4, ip
 8017d8a:	f101 0104 	add.w	r1, r1, #4
 8017d8e:	d001      	beq.n	8017d94 <svc_gain_computer_block.isra.1+0xa0>
 8017d90:	2c00      	cmp	r4, #0
 8017d92:	d1f3      	bne.n	8017d7c <svc_gain_computer_block.isra.1+0x88>
 8017d94:	f851 4c04 	ldr.w	r4, [r1, #-4]
 8017d98:	fab4 f984 	clz	r9, r4
 8017d9c:	fa04 f409 	lsl.w	r4, r4, r9
 8017da0:	1725      	asrs	r5, r4, #28
 8017da2:	f005 0504 	and.w	r5, r5, #4
 8017da6:	eb08 0a85 	add.w	sl, r8, r5, lsl #2
 8017daa:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
 8017dae:	f8da 7004 	ldr.w	r7, [sl, #4]
 8017db2:	fb34 7b15 	smlawt	fp, r4, r5, r7
 8017db6:	f8da 5008 	ldr.w	r5, [sl, #8]
 8017dba:	fb34 551b 	smlawt	r5, r4, fp, r5
 8017dbe:	f8da b00c 	ldr.w	fp, [sl, #12]
 8017dc2:	fb34 bb15 	smlawt	fp, r4, r5, fp
 8017dc6:	ea4f 3b6b 	mov.w	fp, fp, asr #13
 8017dca:	ea4f 4909 	mov.w	r9, r9, lsl #16
 8017dce:	fa89 f9ab 	qsub	r9, fp, r9
 8017dd2:	9c01      	ldr	r4, [sp, #4]
 8017dd4:	ebc4 0909 	rsb	r9, r4, r9
 8017dd8:	f1b9 0f00 	cmp.w	r9, #0
 8017ddc:	dd3a      	ble.n	8017e54 <svc_gain_computer_block.isra.1+0x160>
 8017dde:	9c02      	ldr	r4, [sp, #8]
 8017de0:	ebc4 3509 	rsb	r5, r4, r9, lsl #12
 8017de4:	fb55 f51e 	smmulr	r5, r5, lr
 8017de8:	12ed      	asrs	r5, r5, #11
 8017dea:	b35d      	cbz	r5, 8017e44 <svc_gain_computer_block.isra.1+0x150>
 8017dec:	426d      	negs	r5, r5
 8017dee:	4f21      	ldr	r7, [pc, #132]	@ (8017e74 <svc_gain_computer_block.isra.1+0x180>)
 8017df0:	136c      	asrs	r4, r5, #13
 8017df2:	f004 0404 	and.w	r4, r4, #4
 8017df6:	eb07 0984 	add.w	r9, r7, r4, lsl #2
 8017dfa:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
 8017dfe:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8017e02:	fb15 7a14 	smlabt	sl, r5, r4, r7
 8017e06:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8017e0a:	fb15 441a 	smlabt	r4, r5, sl, r4
 8017e0e:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 8017e12:	fb15 a414 	smlabt	r4, r5, r4, sl
 8017e16:	ea4f 4a25 	mov.w	sl, r5, asr #16
 8017e1a:	f1bc 0f01 	cmp.w	ip, #1
 8017e1e:	f1ca 0a00 	rsb	sl, sl, #0
 8017e22:	f30a 0a05 	ssat	sl, #6, sl
 8017e26:	fa44 f40a 	asr.w	r4, r4, sl
 8017e2a:	f304 041e 	ssat	r4, #31, r4
 8017e2e:	f344 1459 	sbfx	r4, r4, #5, #26
 8017e32:	dd0c      	ble.n	8017e4e <svc_gain_computer_block.isra.1+0x15a>
 8017e34:	f8d3 5a50 	ldr.w	r5, [r3, #2640]	@ 0xa50
 8017e38:	f8c3 4a50 	str.w	r4, [r3, #2640]	@ 0xa50
 8017e3c:	1b66      	subs	r6, r4, r5
 8017e3e:	1136      	asrs	r6, r6, #4
 8017e40:	2401      	movs	r4, #1
 8017e42:	e79d      	b.n	8017d80 <svc_gain_computer_block.isra.1+0x8c>
 8017e44:	f1bc 0f01 	cmp.w	ip, #1
 8017e48:	f06f 447e 	mvn.w	r4, #4261412864	@ 0xfe000000
 8017e4c:	dcf2      	bgt.n	8017e34 <svc_gain_computer_block.isra.1+0x140>
 8017e4e:	4625      	mov	r5, r4
 8017e50:	2401      	movs	r4, #1
 8017e52:	e795      	b.n	8017d80 <svc_gain_computer_block.isra.1+0x8c>
 8017e54:	9c03      	ldr	r4, [sp, #12]
 8017e56:	ebc4 0909 	rsb	r9, r4, r9
 8017e5a:	f1b9 0f00 	cmp.w	r9, #0
 8017e5e:	ddf1      	ble.n	8017e44 <svc_gain_computer_block.isra.1+0x150>
 8017e60:	ea4f 3909 	mov.w	r9, r9, lsl #12
 8017e64:	fb59 f919 	smmulr	r9, r9, r9
 8017e68:	9c00      	ldr	r4, [sp, #0]
 8017e6a:	fb59 f514 	smmulr	r5, r9, r4
 8017e6e:	116d      	asrs	r5, r5, #5
 8017e70:	e7bb      	b.n	8017dea <svc_gain_computer_block.isra.1+0xf6>
 8017e72:	bf00      	nop
 8017e74:	0803574c 	.word	0x0803574c
 8017e78:	0803572c 	.word	0x0803572c

08017e7c <svc_reset>:
 8017e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017e7e:	4b1d      	ldr	r3, [pc, #116]	@ (8017ef4 <svc_reset+0x78>)
 8017e80:	6001      	str	r1, [r0, #0]
 8017e82:	2400      	movs	r4, #0
 8017e84:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8017e88:	60c3      	str	r3, [r0, #12]
 8017e8a:	4f1b      	ldr	r7, [pc, #108]	@ (8017ef8 <svc_reset+0x7c>)
 8017e8c:	6107      	str	r7, [r0, #16]
 8017e8e:	2301      	movs	r3, #1
 8017e90:	2664      	movs	r6, #100	@ 0x64
 8017e92:	2506      	movs	r5, #6
 8017e94:	2110      	movs	r1, #16
 8017e96:	8286      	strh	r6, [r0, #20]
 8017e98:	82c5      	strh	r5, [r0, #22]
 8017e9a:	f8a0 1a2a 	strh.w	r1, [r0, #2602]	@ 0xa2a
 8017e9e:	f8a0 4a34 	strh.w	r4, [r0, #2612]	@ 0xa34
 8017ea2:	f8a0 4a36 	strh.w	r4, [r0, #2614]	@ 0xa36
 8017ea6:	f8a0 4a38 	strh.w	r4, [r0, #2616]	@ 0xa38
 8017eaa:	6044      	str	r4, [r0, #4]
 8017eac:	6084      	str	r4, [r0, #8]
 8017eae:	61c4      	str	r4, [r0, #28]
 8017eb0:	6184      	str	r4, [r0, #24]
 8017eb2:	6204      	str	r4, [r0, #32]
 8017eb4:	6244      	str	r4, [r0, #36]	@ 0x24
 8017eb6:	f8c0 4a44 	str.w	r4, [r0, #2628]	@ 0xa44
 8017eba:	f8c0 4a40 	str.w	r4, [r0, #2624]	@ 0xa40
 8017ebe:	f8c0 4a48 	str.w	r4, [r0, #2632]	@ 0xa48
 8017ec2:	f8c0 4a4c 	str.w	r4, [r0, #2636]	@ 0xa4c
 8017ec6:	f8a0 4a3e 	strh.w	r4, [r0, #2622]	@ 0xa3e
 8017eca:	f8c0 2a2c 	str.w	r2, [r0, #2604]	@ 0xa2c
 8017ece:	f8c0 2a30 	str.w	r2, [r0, #2608]	@ 0xa30
 8017ed2:	f8c0 2a50 	str.w	r2, [r0, #2640]	@ 0xa50
 8017ed6:	f8a0 3a3a 	strh.w	r3, [r0, #2618]	@ 0xa3a
 8017eda:	f8a0 3a28 	strh.w	r3, [r0, #2600]	@ 0xa28
 8017ede:	f8a0 3a3c 	strh.w	r3, [r0, #2620]	@ 0xa3c
 8017ee2:	4621      	mov	r1, r4
 8017ee4:	f44f 6220 	mov.w	r2, #2560	@ 0xa00
 8017ee8:	3028      	adds	r0, #40	@ 0x28
 8017eea:	f015 fe33 	bl	802db54 <memset>
 8017eee:	4620      	mov	r0, r4
 8017ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017ef2:	bf00      	nop
 8017ef4:	7d5c6534 	.word	0x7d5c6534
 8017ef8:	7ff777c0 	.word	0x7ff777c0

08017efc <svc_setConfig>:
 8017efc:	f9b0 3010 	ldrsh.w	r3, [r0, #16]
 8017f00:	b29a      	uxth	r2, r3
 8017f02:	2a01      	cmp	r2, #1
 8017f04:	d87d      	bhi.n	8018002 <svc_setConfig+0x106>
 8017f06:	f9b0 2000 	ldrsh.w	r2, [r0]
 8017f0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f0e:	f102 04a0 	add.w	r4, r2, #160	@ 0xa0
 8017f12:	b2a4      	uxth	r4, r4
 8017f14:	2ce8      	cmp	r4, #232	@ 0xe8
 8017f16:	d877      	bhi.n	8018008 <svc_setConfig+0x10c>
 8017f18:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8017f1c:	2c01      	cmp	r4, #1
 8017f1e:	d043      	beq.n	8017fa8 <svc_setConfig+0xac>
 8017f20:	2c00      	cmp	r4, #0
 8017f22:	d175      	bne.n	8018010 <svc_setConfig+0x114>
 8017f24:	f9b1 5a34 	ldrsh.w	r5, [r1, #2612]	@ 0xa34
 8017f28:	4295      	cmp	r5, r2
 8017f2a:	dd0e      	ble.n	8017f4a <svc_setConfig+0x4e>
 8017f2c:	698e      	ldr	r6, [r1, #24]
 8017f2e:	69cd      	ldr	r5, [r1, #28]
 8017f30:	6a0f      	ldr	r7, [r1, #32]
 8017f32:	f8c1 6a40 	str.w	r6, [r1, #2624]	@ 0xa40
 8017f36:	f8c1 5a44 	str.w	r5, [r1, #2628]	@ 0xa44
 8017f3a:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 8017f3c:	f8c1 7a48 	str.w	r7, [r1, #2632]	@ 0xa48
 8017f40:	2501      	movs	r5, #1
 8017f42:	f8c1 6a4c 	str.w	r6, [r1, #2636]	@ 0xa4c
 8017f46:	f8a1 5a3e 	strh.w	r5, [r1, #2622]	@ 0xa3e
 8017f4a:	2a00      	cmp	r2, #0
 8017f4c:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8017f50:	dd01      	ble.n	8017f56 <svc_setConfig+0x5a>
 8017f52:	2e01      	cmp	r6, #1
 8017f54:	d033      	beq.n	8017fbe <svc_setConfig+0xc2>
 8017f56:	4d30      	ldr	r5, [pc, #192]	@ (8018018 <svc_setConfig+0x11c>)
 8017f58:	f8a1 2a34 	strh.w	r2, [r1, #2612]	@ 0xa34
 8017f5c:	f1c2 0748 	rsb	r7, r2, #72	@ 0x48
 8017f60:	eb05 0787 	add.w	r7, r5, r7, lsl #2
 8017f64:	2500      	movs	r5, #0
 8017f66:	f8d7 73ac 	ldr.w	r7, [r7, #940]	@ 0x3ac
 8017f6a:	f8a1 2a36 	strh.w	r2, [r1, #2614]	@ 0xa36
 8017f6e:	61cd      	str	r5, [r1, #28]
 8017f70:	618d      	str	r5, [r1, #24]
 8017f72:	620d      	str	r5, [r1, #32]
 8017f74:	624d      	str	r5, [r1, #36]	@ 0x24
 8017f76:	6885      	ldr	r5, [r0, #8]
 8017f78:	68c2      	ldr	r2, [r0, #12]
 8017f7a:	610a      	str	r2, [r1, #16]
 8017f7c:	f8a1 4a38 	strh.w	r4, [r1, #2616]	@ 0xa38
 8017f80:	f8c1 7a2c 	str.w	r7, [r1, #2604]	@ 0xa2c
 8017f84:	f8a1 6a3a 	strh.w	r6, [r1, #2618]	@ 0xa3a
 8017f88:	60cd      	str	r5, [r1, #12]
 8017f8a:	f8a1 3a28 	strh.w	r3, [r1, #2600]	@ 0xa28
 8017f8e:	b12b      	cbz	r3, 8017f9c <svc_setConfig+0xa0>
 8017f90:	2301      	movs	r3, #1
 8017f92:	f8a1 3a2a 	strh.w	r3, [r1, #2602]	@ 0xa2a
 8017f96:	2000      	movs	r0, #0
 8017f98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f9c:	2210      	movs	r2, #16
 8017f9e:	4618      	mov	r0, r3
 8017fa0:	f8a1 2a2a 	strh.w	r2, [r1, #2602]	@ 0xa2a
 8017fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017fa8:	f64f 7560 	movw	r5, #65376	@ 0xff60
 8017fac:	f8a1 2a36 	strh.w	r2, [r1, #2614]	@ 0xa36
 8017fb0:	f8a1 5a34 	strh.w	r5, [r1, #2612]	@ 0xa34
 8017fb4:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8017fb8:	f640 571b 	movw	r7, #3355	@ 0xd1b
 8017fbc:	e7db      	b.n	8017f76 <svc_setConfig+0x7a>
 8017fbe:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8018018 <svc_setConfig+0x11c>
 8017fc2:	f8a1 2a36 	strh.w	r2, [r1, #2614]	@ 0xa36
 8017fc6:	eb0e 0882 	add.w	r8, lr, r2, lsl #2
 8017fca:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 8017fce:	f8d8 5040 	ldr.w	r5, [r8, #64]	@ 0x40
 8017fd2:	f8d8 7164 	ldr.w	r7, [r8, #356]	@ 0x164
 8017fd6:	f8a1 2a34 	strh.w	r2, [r1, #2612]	@ 0xa34
 8017fda:	426d      	negs	r5, r5
 8017fdc:	ebc7 0c0c 	rsb	ip, r7, ip
 8017fe0:	106f      	asrs	r7, r5, #1
 8017fe2:	61cd      	str	r5, [r1, #28]
 8017fe4:	618f      	str	r7, [r1, #24]
 8017fe6:	f8d8 5288 	ldr.w	r5, [r8, #648]	@ 0x288
 8017fea:	f8c1 c020 	str.w	ip, [r1, #32]
 8017fee:	fb55 f51c 	smmulr	r5, r5, ip
 8017ff2:	f1c2 0248 	rsb	r2, r2, #72	@ 0x48
 8017ff6:	eb0e 0e82 	add.w	lr, lr, r2, lsl #2
 8017ffa:	624d      	str	r5, [r1, #36]	@ 0x24
 8017ffc:	f8de 73ac 	ldr.w	r7, [lr, #940]	@ 0x3ac
 8018000:	e7b9      	b.n	8017f76 <svc_setConfig+0x7a>
 8018002:	f06f 0003 	mvn.w	r0, #3
 8018006:	4770      	bx	lr
 8018008:	f06f 0001 	mvn.w	r0, #1
 801800c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018010:	f06f 0002 	mvn.w	r0, #2
 8018014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018018:	0803572c 	.word	0x0803572c

0801801c <svc_getConfig>:
 801801c:	b4f0      	push	{r4, r5, r6, r7}
 801801e:	690a      	ldr	r2, [r1, #16]
 8018020:	f8b1 7a38 	ldrh.w	r7, [r1, #2616]	@ 0xa38
 8018024:	f8b1 6a36 	ldrh.w	r6, [r1, #2614]	@ 0xa36
 8018028:	f8b1 5a3a 	ldrh.w	r5, [r1, #2618]	@ 0xa3a
 801802c:	68cc      	ldr	r4, [r1, #12]
 801802e:	f8b1 3a28 	ldrh.w	r3, [r1, #2600]	@ 0xa28
 8018032:	8203      	strh	r3, [r0, #16]
 8018034:	8047      	strh	r7, [r0, #2]
 8018036:	8006      	strh	r6, [r0, #0]
 8018038:	8085      	strh	r5, [r0, #4]
 801803a:	6084      	str	r4, [r0, #8]
 801803c:	60c2      	str	r2, [r0, #12]
 801803e:	bcf0      	pop	{r4, r5, r6, r7}
 8018040:	2000      	movs	r0, #0
 8018042:	4770      	bx	lr

08018044 <svc_setParam>:
 8018044:	f9b0 3000 	ldrsh.w	r3, [r0]
 8018048:	b29a      	uxth	r2, r3
 801804a:	2aa0      	cmp	r2, #160	@ 0xa0
 801804c:	d80c      	bhi.n	8018068 <svc_setParam+0x24>
 801804e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018052:	b290      	uxth	r0, r2
 8018054:	2801      	cmp	r0, #1
 8018056:	d804      	bhi.n	8018062 <svc_setParam+0x1e>
 8018058:	828b      	strh	r3, [r1, #20]
 801805a:	f8a1 2a3c 	strh.w	r2, [r1, #2620]	@ 0xa3c
 801805e:	2000      	movs	r0, #0
 8018060:	4770      	bx	lr
 8018062:	f06f 0004 	mvn.w	r0, #4
 8018066:	4770      	bx	lr
 8018068:	f04f 30ff 	mov.w	r0, #4294967295
 801806c:	4770      	bx	lr
 801806e:	bf00      	nop

08018070 <svc_process>:
 8018070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018074:	68c3      	ldr	r3, [r0, #12]
 8018076:	f9b2 4014 	ldrsh.w	r4, [r2, #20]
 801807a:	6815      	ldr	r5, [r2, #0]
 801807c:	b09f      	sub	sp, #124	@ 0x7c
 801807e:	429c      	cmp	r4, r3
 8018080:	9513      	str	r5, [sp, #76]	@ 0x4c
 8018082:	f300 8361 	bgt.w	8018748 <svc_process+0x6d8>
 8018086:	105c      	asrs	r4, r3, #1
 8018088:	4627      	mov	r7, r4
 801808a:	00be      	lsls	r6, r7, #2
 801808c:	9414      	str	r4, [sp, #80]	@ 0x50
 801808e:	6844      	ldr	r4, [r0, #4]
 8018090:	961b      	str	r6, [sp, #108]	@ 0x6c
 8018092:	19ae      	adds	r6, r5, r6
 8018094:	960a      	str	r6, [sp, #40]	@ 0x28
 8018096:	2c04      	cmp	r4, #4
 8018098:	f505 6670 	add.w	r6, r5, #3840	@ 0xf00
 801809c:	9605      	str	r6, [sp, #20]
 801809e:	f040 82bb 	bne.w	8018618 <svc_process+0x5a8>
 80180a2:	684c      	ldr	r4, [r1, #4]
 80180a4:	2c04      	cmp	r4, #4
 80180a6:	f040 82b7 	bne.w	8018618 <svc_process+0x5a8>
 80180aa:	9117      	str	r1, [sp, #92]	@ 0x5c
 80180ac:	6881      	ldr	r1, [r0, #8]
 80180ae:	9106      	str	r1, [sp, #24]
 80180b0:	109b      	asrs	r3, r3, #2
 80180b2:	f9b2 1a3c 	ldrsh.w	r1, [r2, #2620]	@ 0xa3c
 80180b6:	9316      	str	r3, [sp, #88]	@ 0x58
 80180b8:	4616      	mov	r6, r2
 80180ba:	00db      	lsls	r3, r3, #3
 80180bc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80180be:	911c      	str	r1, [sp, #112]	@ 0x70
 80180c0:	2100      	movs	r1, #0
 80180c2:	4680      	mov	r8, r0
 80180c4:	9318      	str	r3, [sp, #96]	@ 0x60
 80180c6:	4608      	mov	r0, r1
 80180c8:	9112      	str	r1, [sp, #72]	@ 0x48
 80180ca:	4619      	mov	r1, r3
 80180cc:	18eb      	adds	r3, r5, r3
 80180ce:	931a      	str	r3, [sp, #104]	@ 0x68
 80180d0:	4613      	mov	r3, r2
 80180d2:	440b      	add	r3, r1
 80180d4:	931d      	str	r3, [sp, #116]	@ 0x74
 80180d6:	00fb      	lsls	r3, r7, #3
 80180d8:	930d      	str	r3, [sp, #52]	@ 0x34
 80180da:	f007 0301 	and.w	r3, r7, #1
 80180de:	9315      	str	r3, [sp, #84]	@ 0x54
 80180e0:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 80180e4:	900f      	str	r0, [sp, #60]	@ 0x3c
 80180e6:	4647      	mov	r7, r8
 80180e8:	4693      	mov	fp, r2
 80180ea:	9319      	str	r3, [sp, #100]	@ 0x64
 80180ec:	9507      	str	r5, [sp, #28]
 80180ee:	46b0      	mov	r8, r6
 80180f0:	693b      	ldr	r3, [r7, #16]
 80180f2:	683a      	ldr	r2, [r7, #0]
 80180f4:	2b01      	cmp	r3, #1
 80180f6:	f000 818e 	beq.w	8018416 <svc_process+0x3a6>
 80180fa:	f8d8 3a30 	ldr.w	r3, [r8, #2608]	@ 0xa30
 80180fe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018100:	2a00      	cmp	r2, #0
 8018102:	dd61      	ble.n	80181c8 <svc_process+0x158>
 8018104:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8018108:	930c      	str	r3, [sp, #48]	@ 0x30
 801810a:	2400      	movs	r4, #0
 801810c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801810e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018112:	9308      	str	r3, [sp, #32]
 8018114:	9406      	str	r4, [sp, #24]
 8018116:	4643      	mov	r3, r8
 8018118:	4659      	mov	r1, fp
 801811a:	9a05      	ldr	r2, [sp, #20]
 801811c:	4638      	mov	r0, r7
 801811e:	f7ff f9a3 	bl	8017468 <svc_abs_subs_block>
 8018122:	f9b8 6a3a 	ldrsh.w	r6, [r8, #2618]	@ 0xa3a
 8018126:	68f9      	ldr	r1, [r7, #12]
 8018128:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801812c:	9307      	str	r3, [sp, #28]
 801812e:	2e01      	cmp	r6, #1
 8018130:	ea4f 0161 	mov.w	r1, r1, asr #1
 8018134:	f9b8 9a34 	ldrsh.w	r9, [r8, #2612]	@ 0xa34
 8018138:	f000 8081 	beq.w	801823e <svc_process+0x1ce>
 801813c:	f9b8 2a3e 	ldrsh.w	r2, [r8, #2622]	@ 0xa3e
 8018140:	f8d8 0024 	ldr.w	r0, [r8, #36]	@ 0x24
 8018144:	f8d8 4018 	ldr.w	r4, [r8, #24]
 8018148:	f8d8 301c 	ldr.w	r3, [r8, #28]
 801814c:	f8d8 5020 	ldr.w	r5, [r8, #32]
 8018150:	9009      	str	r0, [sp, #36]	@ 0x24
 8018152:	b142      	cbz	r2, 8018166 <svc_process+0xf6>
 8018154:	f8d8 2a4c 	ldr.w	r2, [r8, #2636]	@ 0xa4c
 8018158:	f8d8 4a40 	ldr.w	r4, [r8, #2624]	@ 0xa40
 801815c:	f8d8 3a44 	ldr.w	r3, [r8, #2628]	@ 0xa44
 8018160:	f8d8 5a48 	ldr.w	r5, [r8, #2632]	@ 0xa48
 8018164:	9209      	str	r2, [sp, #36]	@ 0x24
 8018166:	f1b9 0f00 	cmp.w	r9, #0
 801816a:	f340 80b5 	ble.w	80182d8 <svc_process+0x268>
 801816e:	2e01      	cmp	r6, #1
 8018170:	f000 80b8 	beq.w	80182e4 <svc_process+0x274>
 8018174:	2900      	cmp	r1, #0
 8018176:	dd08      	ble.n	801818a <svc_process+0x11a>
 8018178:	9b05      	ldr	r3, [sp, #20]
 801817a:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 801817e:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8018182:	f843 2b04 	str.w	r2, [r3], #4
 8018186:	4299      	cmp	r1, r3
 8018188:	d1fb      	bne.n	8018182 <svc_process+0x112>
 801818a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801818c:	9c07      	ldr	r4, [sp, #28]
 801818e:	9302      	str	r3, [sp, #8]
 8018190:	465a      	mov	r2, fp
 8018192:	9b08      	ldr	r3, [sp, #32]
 8018194:	9905      	ldr	r1, [sp, #20]
 8018196:	9401      	str	r4, [sp, #4]
 8018198:	4638      	mov	r0, r7
 801819a:	f8cd 8000 	str.w	r8, [sp]
 801819e:	f7ff fa89 	bl	80176b4 <svc_gain_application_block>
 80181a2:	4659      	mov	r1, fp
 80181a4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80181a6:	9400      	str	r4, [sp, #0]
 80181a8:	4642      	mov	r2, r8
 80181aa:	4638      	mov	r0, r7
 80181ac:	f7ff fcda 	bl	8017b64 <svc_update_static_block>
 80181b0:	9b06      	ldr	r3, [sp, #24]
 80181b2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80181b4:	683a      	ldr	r2, [r7, #0]
 80181b6:	3301      	adds	r3, #1
 80181b8:	448b      	add	fp, r1
 80181ba:	429a      	cmp	r2, r3
 80181bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80181be:	9306      	str	r3, [sp, #24]
 80181c0:	9108      	str	r1, [sp, #32]
 80181c2:	dca8      	bgt.n	8018116 <svc_process+0xa6>
 80181c4:	f8cd b018 	str.w	fp, [sp, #24]
 80181c8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80181ca:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80181cc:	689d      	ldr	r5, [r3, #8]
 80181ce:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80181d0:	2900      	cmp	r1, #0
 80181d2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80181d6:	f340 8224 	ble.w	8018622 <svc_process+0x5b2>
 80181da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80181dc:	f1a5 0608 	sub.w	r6, r5, #8
 80181e0:	2300      	movs	r3, #0
 80181e2:	468e      	mov	lr, r1
 80181e4:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80181e8:	3301      	adds	r3, #1
 80181ea:	4573      	cmp	r3, lr
 80181ec:	e9e6 0102 	strd	r0, r1, [r6, #8]!
 80181f0:	d1f8      	bne.n	80181e4 <svc_process+0x174>
 80181f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80181f4:	441d      	add	r5, r3
 80181f6:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80181f8:	9307      	str	r3, [sp, #28]
 80181fa:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80181fc:	b13b      	cbz	r3, 801820e <svc_process+0x19e>
 80181fe:	9907      	ldr	r1, [sp, #28]
 8018200:	680b      	ldr	r3, [r1, #0]
 8018202:	602b      	str	r3, [r5, #0]
 8018204:	460b      	mov	r3, r1
 8018206:	3304      	adds	r3, #4
 8018208:	683a      	ldr	r2, [r7, #0]
 801820a:	9307      	str	r3, [sp, #28]
 801820c:	3504      	adds	r5, #4
 801820e:	2a02      	cmp	r2, #2
 8018210:	f000 81b4 	beq.w	801857c <svc_process+0x50c>
 8018214:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
 8018218:	9b06      	ldr	r3, [sp, #24]
 801821a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801821c:	eba3 0382 	sub.w	r3, r3, r2, lsl #2
 8018220:	9306      	str	r3, [sp, #24]
 8018222:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018224:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018226:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018228:	3301      	adds	r3, #1
 801822a:	440a      	add	r2, r1
 801822c:	2b02      	cmp	r3, #2
 801822e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018230:	9212      	str	r2, [sp, #72]	@ 0x48
 8018232:	f47f af5d 	bne.w	80180f0 <svc_process+0x80>
 8018236:	2000      	movs	r0, #0
 8018238:	b01f      	add	sp, #124	@ 0x7c
 801823a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801823e:	f1b9 0f00 	cmp.w	r9, #0
 8018242:	f340 80e2 	ble.w	801840a <svc_process+0x39a>
 8018246:	9b07      	ldr	r3, [sp, #28]
 8018248:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801824c:	2b01      	cmp	r3, #1
 801824e:	bf12      	itee	ne
 8018250:	f108 0404 	addne.w	r4, r8, #4
 8018254:	f8d8 2008 	ldreq.w	r2, [r8, #8]
 8018258:	f108 0408 	addeq.w	r4, r8, #8
 801825c:	2900      	cmp	r1, #0
 801825e:	f77f af6d 	ble.w	801813c <svc_process+0xcc>
 8018262:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8018266:	f8d8 a00c 	ldr.w	sl, [r8, #12]
 801826a:	9805      	ldr	r0, [sp, #20]
 801826c:	9309      	str	r3, [sp, #36]	@ 0x24
 801826e:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 8018272:	46e6      	mov	lr, ip
 8018274:	ebc3 0e0e 	rsb	lr, r3, lr
 8018278:	960e      	str	r6, [sp, #56]	@ 0x38
 801827a:	f9b8 5a2a 	ldrsh.w	r5, [r8, #2602]	@ 0xa2a
 801827e:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8018280:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8018284:	ebca 0c0c 	rsb	ip, sl, ip
 8018288:	2300      	movs	r3, #0
 801828a:	e005      	b.n	8018298 <svc_process+0x228>
 801828c:	f840 2b04 	str.w	r2, [r0], #4
 8018290:	4281      	cmp	r1, r0
 8018292:	f103 0301 	add.w	r3, r3, #1
 8018296:	d014      	beq.n	80182c2 <svc_process+0x252>
 8018298:	429d      	cmp	r5, r3
 801829a:	d001      	beq.n	80182a0 <svc_process+0x230>
 801829c:	2b00      	cmp	r3, #0
 801829e:	d1f5      	bne.n	801828c <svc_process+0x21c>
 80182a0:	6803      	ldr	r3, [r0, #0]
 80182a2:	4293      	cmp	r3, r2
 80182a4:	6822      	ldr	r2, [r4, #0]
 80182a6:	db10      	blt.n	80182ca <svc_process+0x25a>
 80182a8:	fb5a f212 	smmulr	r2, sl, r2
 80182ac:	fb5c f313 	smmulr	r3, ip, r3
 80182b0:	441a      	add	r2, r3
 80182b2:	0052      	lsls	r2, r2, #1
 80182b4:	6022      	str	r2, [r4, #0]
 80182b6:	f840 2b04 	str.w	r2, [r0], #4
 80182ba:	4281      	cmp	r1, r0
 80182bc:	f04f 0301 	mov.w	r3, #1
 80182c0:	d1ea      	bne.n	8018298 <svc_process+0x228>
 80182c2:	68f9      	ldr	r1, [r7, #12]
 80182c4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80182c6:	1049      	asrs	r1, r1, #1
 80182c8:	e738      	b.n	801813c <svc_process+0xcc>
 80182ca:	fb56 f212 	smmulr	r2, r6, r2
 80182ce:	fb5e f313 	smmulr	r3, lr, r3
 80182d2:	441a      	add	r2, r3
 80182d4:	0052      	lsls	r2, r2, #1
 80182d6:	e7ed      	b.n	80182b4 <svc_process+0x244>
 80182d8:	f9b8 2a28 	ldrsh.w	r2, [r8, #2600]	@ 0xa28
 80182dc:	2a01      	cmp	r2, #1
 80182de:	f47f af54 	bne.w	801818a <svc_process+0x11a>
 80182e2:	e744      	b.n	801816e <svc_process+0xfe>
 80182e4:	2900      	cmp	r1, #0
 80182e6:	f77f af50 	ble.w	801818a <svc_process+0x11a>
 80182ea:	9e05      	ldr	r6, [sp, #20]
 80182ec:	f9b8 ea2a 	ldrsh.w	lr, [r8, #2602]	@ 0xa2a
 80182f0:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 80182f4:	2000      	movs	r0, #0
 80182f6:	131b      	asrs	r3, r3, #12
 80182f8:	1322      	asrs	r2, r4, #12
 80182fa:	930e      	str	r3, [sp, #56]	@ 0x38
 80182fc:	4694      	mov	ip, r2
 80182fe:	eb06 0181 	add.w	r1, r6, r1, lsl #2
 8018302:	4603      	mov	r3, r0
 8018304:	4602      	mov	r2, r0
 8018306:	9711      	str	r7, [sp, #68]	@ 0x44
 8018308:	e005      	b.n	8018316 <svc_process+0x2a6>
 801830a:	4402      	add	r2, r0
 801830c:	3301      	adds	r3, #1
 801830e:	f846 2b04 	str.w	r2, [r6], #4
 8018312:	42b1      	cmp	r1, r6
 8018314:	d05e      	beq.n	80183d4 <svc_process+0x364>
 8018316:	459e      	cmp	lr, r3
 8018318:	d001      	beq.n	801831e <svc_process+0x2ae>
 801831a:	2b00      	cmp	r3, #0
 801831c:	d1f5      	bne.n	801830a <svc_process+0x29a>
 801831e:	6833      	ldr	r3, [r6, #0]
 8018320:	4fc1      	ldr	r7, [pc, #772]	@ (8018628 <svc_process+0x5b8>)
 8018322:	fab3 f983 	clz	r9, r3
 8018326:	fa03 f309 	lsl.w	r3, r3, r9
 801832a:	171a      	asrs	r2, r3, #28
 801832c:	f002 0204 	and.w	r2, r2, #4
 8018330:	eb07 0a82 	add.w	sl, r7, r2, lsl #2
 8018334:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8018338:	f8da 7004 	ldr.w	r7, [sl, #4]
 801833c:	fb33 7b12 	smlawt	fp, r3, r2, r7
 8018340:	f8da 2008 	ldr.w	r2, [sl, #8]
 8018344:	fb33 221b 	smlawt	r2, r3, fp, r2
 8018348:	f8da b00c 	ldr.w	fp, [sl, #12]
 801834c:	fb33 bb12 	smlawt	fp, r3, r2, fp
 8018350:	ea4f 3b6b 	mov.w	fp, fp, asr #13
 8018354:	ea4f 4909 	mov.w	r9, r9, lsl #16
 8018358:	fa89 f9ab 	qsub	r9, fp, r9
 801835c:	ebcc 0909 	rsb	r9, ip, r9
 8018360:	f1b9 0f00 	cmp.w	r9, #0
 8018364:	dd42      	ble.n	80183ec <svc_process+0x37c>
 8018366:	ebc4 3209 	rsb	r2, r4, r9, lsl #12
 801836a:	fb52 f215 	smmulr	r2, r2, r5
 801836e:	12d2      	asrs	r2, r2, #11
 8018370:	b3a2      	cbz	r2, 80183dc <svc_process+0x36c>
 8018372:	4252      	negs	r2, r2
 8018374:	4fad      	ldr	r7, [pc, #692]	@ (801862c <svc_process+0x5bc>)
 8018376:	1353      	asrs	r3, r2, #13
 8018378:	f003 0304 	and.w	r3, r3, #4
 801837c:	eb07 0983 	add.w	r9, r7, r3, lsl #2
 8018380:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8018384:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8018388:	fb12 7a13 	smlabt	sl, r2, r3, r7
 801838c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8018390:	fb12 331a 	smlabt	r3, r2, sl, r3
 8018394:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 8018398:	fb12 a313 	smlabt	r3, r2, r3, sl
 801839c:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80183a0:	f1be 0f01 	cmp.w	lr, #1
 80183a4:	f1ca 0a00 	rsb	sl, sl, #0
 80183a8:	f30a 0a05 	ssat	sl, #6, sl
 80183ac:	fa43 f30a 	asr.w	r3, r3, sl
 80183b0:	f303 031e 	ssat	r3, #31, r3
 80183b4:	f343 1359 	sbfx	r3, r3, #5, #26
 80183b8:	dd15      	ble.n	80183e6 <svc_process+0x376>
 80183ba:	f8d8 2a50 	ldr.w	r2, [r8, #2640]	@ 0xa50
 80183be:	f8c8 3a50 	str.w	r3, [r8, #2640]	@ 0xa50
 80183c2:	f846 2b04 	str.w	r2, [r6], #4
 80183c6:	1a98      	subs	r0, r3, r2
 80183c8:	42b1      	cmp	r1, r6
 80183ca:	ea4f 1020 	mov.w	r0, r0, asr #4
 80183ce:	f04f 0301 	mov.w	r3, #1
 80183d2:	d1a0      	bne.n	8018316 <svc_process+0x2a6>
 80183d4:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 80183d8:	9f11      	ldr	r7, [sp, #68]	@ 0x44
 80183da:	e6d6      	b.n	801818a <svc_process+0x11a>
 80183dc:	f1be 0f01 	cmp.w	lr, #1
 80183e0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80183e4:	dce9      	bgt.n	80183ba <svc_process+0x34a>
 80183e6:	461a      	mov	r2, r3
 80183e8:	2301      	movs	r3, #1
 80183ea:	e790      	b.n	801830e <svc_process+0x29e>
 80183ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80183ee:	ebc3 0909 	rsb	r9, r3, r9
 80183f2:	f1b9 0f00 	cmp.w	r9, #0
 80183f6:	ddf1      	ble.n	80183dc <svc_process+0x36c>
 80183f8:	ea4f 3909 	mov.w	r9, r9, lsl #12
 80183fc:	fb59 f919 	smmulr	r9, r9, r9
 8018400:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018402:	fb59 f213 	smmulr	r2, r9, r3
 8018406:	1152      	asrs	r2, r2, #5
 8018408:	e7b2      	b.n	8018370 <svc_process+0x300>
 801840a:	f9b8 3a28 	ldrsh.w	r3, [r8, #2600]	@ 0xa28
 801840e:	2b01      	cmp	r3, #1
 8018410:	f47f ae94 	bne.w	801813c <svc_process+0xcc>
 8018414:	e717      	b.n	8018246 <svc_process+0x1d6>
 8018416:	2a01      	cmp	r2, #1
 8018418:	f77f ae6f 	ble.w	80180fa <svc_process+0x8a>
 801841c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801841e:	2b01      	cmp	r3, #1
 8018420:	f000 8106 	beq.w	8018630 <svc_process+0x5c0>
 8018424:	2a02      	cmp	r2, #2
 8018426:	f040 81ff 	bne.w	8018828 <svc_process+0x7b8>
 801842a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801842c:	2b00      	cmp	r3, #0
 801842e:	f340 8191 	ble.w	8018754 <svc_process+0x6e4>
 8018432:	9b07      	ldr	r3, [sp, #28]
 8018434:	9d06      	ldr	r5, [sp, #24]
 8018436:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8018438:	1f19      	subs	r1, r3, #4
 801843a:	f1ab 0204 	sub.w	r2, fp, #4
 801843e:	462b      	mov	r3, r5
 8018440:	460c      	mov	r4, r1
 8018442:	4610      	mov	r0, r2
 8018444:	4435      	add	r5, r6
 8018446:	681e      	ldr	r6, [r3, #0]
 8018448:	f844 6f04 	str.w	r6, [r4, #4]!
 801844c:	3308      	adds	r3, #8
 801844e:	f853 6c04 	ldr.w	r6, [r3, #-4]
 8018452:	f840 6f04 	str.w	r6, [r0, #4]!
 8018456:	429d      	cmp	r5, r3
 8018458:	d1f5      	bne.n	8018446 <svc_process+0x3d6>
 801845a:	683b      	ldr	r3, [r7, #0]
 801845c:	f8d8 0a30 	ldr.w	r0, [r8, #2608]	@ 0xa30
 8018460:	9009      	str	r0, [sp, #36]	@ 0x24
 8018462:	2b00      	cmp	r3, #0
 8018464:	f340 817a 	ble.w	801875c <svc_process+0x6ec>
 8018468:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801846c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801846e:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8018472:	9c05      	ldr	r4, [sp, #20]
 8018474:	f8cd b020 	str.w	fp, [sp, #32]
 8018478:	f04f 0900 	mov.w	r9, #0
 801847c:	e01f      	b.n	80184be <svc_process+0x44e>
 801847e:	4643      	mov	r3, r8
 8018480:	4622      	mov	r2, r4
 8018482:	4621      	mov	r1, r4
 8018484:	f7ff fc36 	bl	8017cf4 <svc_gain_computer_block.isra.1>
 8018488:	9d06      	ldr	r5, [sp, #24]
 801848a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801848c:	9302      	str	r3, [sp, #8]
 801848e:	462a      	mov	r2, r5
 8018490:	4653      	mov	r3, sl
 8018492:	4621      	mov	r1, r4
 8018494:	4638      	mov	r0, r7
 8018496:	e88d 0900 	stmia.w	sp, {r8, fp}
 801849a:	f7ff f90b 	bl	80176b4 <svc_gain_application_block>
 801849e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80184a0:	f8cd b000 	str.w	fp, [sp]
 80184a4:	4642      	mov	r2, r8
 80184a6:	4629      	mov	r1, r5
 80184a8:	4638      	mov	r0, r7
 80184aa:	f7ff fb5b 	bl	8017b64 <svc_update_static_block>
 80184ae:	683b      	ldr	r3, [r7, #0]
 80184b0:	f8dd a020 	ldr.w	sl, [sp, #32]
 80184b4:	f109 0901 	add.w	r9, r9, #1
 80184b8:	454b      	cmp	r3, r9
 80184ba:	f340 8084 	ble.w	80185c6 <svc_process+0x556>
 80184be:	4643      	mov	r3, r8
 80184c0:	4638      	mov	r0, r7
 80184c2:	4622      	mov	r2, r4
 80184c4:	4651      	mov	r1, sl
 80184c6:	f7fe ffcf 	bl	8017468 <svc_abs_subs_block>
 80184ca:	f9b8 3a3a 	ldrsh.w	r3, [r8, #2618]	@ 0xa3a
 80184ce:	68f8      	ldr	r0, [r7, #12]
 80184d0:	2b01      	cmp	r3, #1
 80184d2:	fa0f fb89 	sxth.w	fp, r9
 80184d6:	d1d2      	bne.n	801847e <svc_process+0x40e>
 80184d8:	f9b8 3a34 	ldrsh.w	r3, [r8, #2612]	@ 0xa34
 80184dc:	2b00      	cmp	r3, #0
 80184de:	dd6c      	ble.n	80185ba <svc_process+0x54a>
 80184e0:	f1bb 0f01 	cmp.w	fp, #1
 80184e4:	ea4f 0360 	mov.w	r3, r0, asr #1
 80184e8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80184ec:	bf0a      	itet	eq
 80184ee:	f8d8 2008 	ldreq.w	r2, [r8, #8]
 80184f2:	f108 0504 	addne.w	r5, r8, #4
 80184f6:	f108 0508 	addeq.w	r5, r8, #8
 80184fa:	2b00      	cmp	r3, #0
 80184fc:	ddbf      	ble.n	801847e <svc_process+0x40e>
 80184fe:	f8d8 100c 	ldr.w	r1, [r8, #12]
 8018502:	f8d8 0010 	ldr.w	r0, [r8, #16]
 8018506:	900c      	str	r0, [sp, #48]	@ 0x30
 8018508:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 801850c:	910e      	str	r1, [sp, #56]	@ 0x38
 801850e:	46e6      	mov	lr, ip
 8018510:	ebc1 0c0c 	rsb	ip, r1, ip
 8018514:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018516:	9410      	str	r4, [sp, #64]	@ 0x40
 8018518:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 801851c:	ebc1 0e0e 	rsb	lr, r1, lr
 8018520:	f9b8 6a2a 	ldrsh.w	r6, [r8, #2602]	@ 0xa2a
 8018524:	4621      	mov	r1, r4
 8018526:	2300      	movs	r3, #0
 8018528:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801852a:	970e      	str	r7, [sp, #56]	@ 0x38
 801852c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801852e:	e005      	b.n	801853c <svc_process+0x4cc>
 8018530:	f841 2b04 	str.w	r2, [r1], #4
 8018534:	4288      	cmp	r0, r1
 8018536:	f103 0301 	add.w	r3, r3, #1
 801853a:	d014      	beq.n	8018566 <svc_process+0x4f6>
 801853c:	42b3      	cmp	r3, r6
 801853e:	d001      	beq.n	8018544 <svc_process+0x4d4>
 8018540:	2b00      	cmp	r3, #0
 8018542:	d1f5      	bne.n	8018530 <svc_process+0x4c0>
 8018544:	680b      	ldr	r3, [r1, #0]
 8018546:	4293      	cmp	r3, r2
 8018548:	682a      	ldr	r2, [r5, #0]
 801854a:	db10      	blt.n	801856e <svc_process+0x4fe>
 801854c:	fb54 f212 	smmulr	r2, r4, r2
 8018550:	fb5c f313 	smmulr	r3, ip, r3
 8018554:	441a      	add	r2, r3
 8018556:	0052      	lsls	r2, r2, #1
 8018558:	602a      	str	r2, [r5, #0]
 801855a:	f841 2b04 	str.w	r2, [r1], #4
 801855e:	4288      	cmp	r0, r1
 8018560:	f04f 0301 	mov.w	r3, #1
 8018564:	d1ea      	bne.n	801853c <svc_process+0x4cc>
 8018566:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018568:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801856a:	68f8      	ldr	r0, [r7, #12]
 801856c:	e787      	b.n	801847e <svc_process+0x40e>
 801856e:	fb57 f212 	smmulr	r2, r7, r2
 8018572:	fb5e f313 	smmulr	r3, lr, r3
 8018576:	441a      	add	r2, r3
 8018578:	0052      	lsls	r2, r2, #1
 801857a:	e7ed      	b.n	8018558 <svc_process+0x4e8>
 801857c:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801857e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018580:	2e00      	cmp	r6, #0
 8018582:	441d      	add	r5, r3
 8018584:	f340 80e3 	ble.w	801874e <svc_process+0x6de>
 8018588:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801858a:	f1a5 0408 	sub.w	r4, r5, #8
 801858e:	2300      	movs	r3, #0
 8018590:	e8f2 0102 	ldrd	r0, r1, [r2], #8
 8018594:	3301      	adds	r3, #1
 8018596:	42b3      	cmp	r3, r6
 8018598:	e9e4 0102 	strd	r0, r1, [r4, #8]!
 801859c:	d1f8      	bne.n	8018590 <svc_process+0x520>
 801859e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80185a0:	f8dd b074 	ldr.w	fp, [sp, #116]	@ 0x74
 80185a4:	441d      	add	r5, r3
 80185a6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80185a8:	2b00      	cmp	r3, #0
 80185aa:	f43f ae35 	beq.w	8018218 <svc_process+0x1a8>
 80185ae:	f8db 3000 	ldr.w	r3, [fp]
 80185b2:	602b      	str	r3, [r5, #0]
 80185b4:	f10b 0b04 	add.w	fp, fp, #4
 80185b8:	e62e      	b.n	8018218 <svc_process+0x1a8>
 80185ba:	f9b8 3a28 	ldrsh.w	r3, [r8, #2600]	@ 0xa28
 80185be:	2b01      	cmp	r3, #1
 80185c0:	f47f af5d 	bne.w	801847e <svc_process+0x40e>
 80185c4:	e78c      	b.n	80184e0 <svc_process+0x470>
 80185c6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80185c8:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80185ca:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80185cc:	6892      	ldr	r2, [r2, #8]
 80185ce:	fb03 f301 	mul.w	r3, r3, r1
 80185d2:	fb00 f403 	mul.w	r4, r0, r3
 80185d6:	2900      	cmp	r1, #0
 80185d8:	46d3      	mov	fp, sl
 80185da:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 80185de:	dd16      	ble.n	801860e <svc_process+0x59e>
 80185e0:	9b07      	ldr	r3, [sp, #28]
 80185e2:	f1aa 0204 	sub.w	r2, sl, #4
 80185e6:	1f19      	subs	r1, r3, #4
 80185e8:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80185ea:	4620      	mov	r0, r4
 80185ec:	2300      	movs	r3, #0
 80185ee:	f851 5f04 	ldr.w	r5, [r1, #4]!
 80185f2:	f844 5033 	str.w	r5, [r4, r3, lsl #3]
 80185f6:	3301      	adds	r3, #1
 80185f8:	f852 5f04 	ldr.w	r5, [r2, #4]!
 80185fc:	6045      	str	r5, [r0, #4]
 80185fe:	429e      	cmp	r6, r3
 8018600:	f100 0008 	add.w	r0, r0, #8
 8018604:	dcf3      	bgt.n	80185ee <svc_process+0x57e>
 8018606:	683b      	ldr	r3, [r7, #0]
 8018608:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801860a:	fb03 f302 	mul.w	r3, r3, r2
 801860e:	9a06      	ldr	r2, [sp, #24]
 8018610:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018614:	9306      	str	r3, [sp, #24]
 8018616:	e604      	b.n	8018222 <svc_process+0x1b2>
 8018618:	f06f 0005 	mvn.w	r0, #5
 801861c:	b01f      	add	sp, #124	@ 0x7c
 801861e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018622:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018624:	9307      	str	r3, [sp, #28]
 8018626:	e5e8      	b.n	80181fa <svc_process+0x18a>
 8018628:	0803572c 	.word	0x0803572c
 801862c:	0803574c 	.word	0x0803574c
 8018630:	4643      	mov	r3, r8
 8018632:	9a05      	ldr	r2, [sp, #20]
 8018634:	9906      	ldr	r1, [sp, #24]
 8018636:	f8d8 9a30 	ldr.w	r9, [r8, #2608]	@ 0xa30
 801863a:	4638      	mov	r0, r7
 801863c:	f7fe ff14 	bl	8017468 <svc_abs_subs_block>
 8018640:	f9b8 3a3a 	ldrsh.w	r3, [r8, #2618]	@ 0xa3a
 8018644:	2b01      	cmp	r3, #1
 8018646:	f000 80ae 	beq.w	80187a6 <svc_process+0x736>
 801864a:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801864e:	9d05      	ldr	r5, [sp, #20]
 8018650:	f8c8 2008 	str.w	r2, [r8, #8]
 8018654:	68f8      	ldr	r0, [r7, #12]
 8018656:	4643      	mov	r3, r8
 8018658:	462a      	mov	r2, r5
 801865a:	4629      	mov	r1, r5
 801865c:	f7ff fb4a 	bl	8017cf4 <svc_gain_computer_block.isra.1>
 8018660:	2400      	movs	r4, #0
 8018662:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8018666:	9302      	str	r3, [sp, #8]
 8018668:	f8cd 8000 	str.w	r8, [sp]
 801866c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801866e:	9401      	str	r4, [sp, #4]
 8018670:	9a06      	ldr	r2, [sp, #24]
 8018672:	4629      	mov	r1, r5
 8018674:	4638      	mov	r0, r7
 8018676:	f7ff f81d 	bl	80176b4 <svc_gain_application_block>
 801867a:	683b      	ldr	r3, [r7, #0]
 801867c:	68fe      	ldr	r6, [r7, #12]
 801867e:	2b01      	cmp	r3, #1
 8018680:	ea4f 0666 	mov.w	r6, r6, asr #1
 8018684:	f340 80d3 	ble.w	801882e <svc_process+0x7be>
 8018688:	693b      	ldr	r3, [r7, #16]
 801868a:	f8c8 9a30 	str.w	r9, [r8, #2608]	@ 0xa30
 801868e:	2b01      	cmp	r3, #1
 8018690:	d01a      	beq.n	80186c8 <svc_process+0x658>
 8018692:	f9b8 5014 	ldrsh.w	r5, [r8, #20]
 8018696:	42ae      	cmp	r6, r5
 8018698:	f108 0e28 	add.w	lr, r8, #40	@ 0x28
 801869c:	da69      	bge.n	8018772 <svc_process+0x702>
 801869e:	1072      	asrs	r2, r6, #1
 80186a0:	2a00      	cmp	r2, #0
 80186a2:	f340 80d1 	ble.w	8018848 <svc_process+0x7d8>
 80186a6:	9b06      	ldr	r3, [sp, #24]
 80186a8:	00d2      	lsls	r2, r2, #3
 80186aa:	189c      	adds	r4, r3, r2
 80186ac:	f108 0520 	add.w	r5, r8, #32
 80186b0:	e8f3 0102 	ldrd	r0, r1, [r3], #8
 80186b4:	42a3      	cmp	r3, r4
 80186b6:	e9e5 0102 	strd	r0, r1, [r5, #8]!
 80186ba:	d1f9      	bne.n	80186b0 <svc_process+0x640>
 80186bc:	4496      	add	lr, r2
 80186be:	07f0      	lsls	r0, r6, #31
 80186c0:	d502      	bpl.n	80186c8 <svc_process+0x658>
 80186c2:	6823      	ldr	r3, [r4, #0]
 80186c4:	f8ce 3000 	str.w	r3, [lr]
 80186c8:	f9b8 3a3e 	ldrsh.w	r3, [r8, #2622]	@ 0xa3e
 80186cc:	b133      	cbz	r3, 80186dc <svc_process+0x66c>
 80186ce:	683b      	ldr	r3, [r7, #0]
 80186d0:	2b02      	cmp	r3, #2
 80186d2:	bf0c      	ite	eq
 80186d4:	2301      	moveq	r3, #1
 80186d6:	2300      	movne	r3, #0
 80186d8:	f8a8 3a3e 	strh.w	r3, [r8, #2622]	@ 0xa3e
 80186dc:	2201      	movs	r2, #1
 80186de:	464b      	mov	r3, r9
 80186e0:	9200      	str	r2, [sp, #0]
 80186e2:	9906      	ldr	r1, [sp, #24]
 80186e4:	4642      	mov	r2, r8
 80186e6:	4638      	mov	r0, r7
 80186e8:	f7ff fa3c 	bl	8017b64 <svc_update_static_block>
 80186ec:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80186ee:	683b      	ldr	r3, [r7, #0]
 80186f0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80186f2:	fb03 f301 	mul.w	r3, r3, r1
 80186f6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80186f8:	6892      	ldr	r2, [r2, #8]
 80186fa:	ea4f 0e63 	mov.w	lr, r3, asr #1
 80186fe:	fb01 f603 	mul.w	r6, r1, r3
 8018702:	f1be 0f00 	cmp.w	lr, #0
 8018706:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801870a:	f340 809f 	ble.w	801884c <svc_process+0x7dc>
 801870e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018710:	f1a6 0508 	sub.w	r5, r6, #8
 8018714:	2200      	movs	r2, #0
 8018716:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 801871a:	3201      	adds	r2, #1
 801871c:	4572      	cmp	r2, lr
 801871e:	e9e5 0102 	strd	r0, r1, [r5, #8]!
 8018722:	d1f8      	bne.n	8018716 <svc_process+0x6a6>
 8018724:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8018726:	00d2      	lsls	r2, r2, #3
 8018728:	4416      	add	r6, r2
 801872a:	188a      	adds	r2, r1, r2
 801872c:	9207      	str	r2, [sp, #28]
 801872e:	07da      	lsls	r2, r3, #31
 8018730:	f57f af6d 	bpl.w	801860e <svc_process+0x59e>
 8018734:	9a07      	ldr	r2, [sp, #28]
 8018736:	6813      	ldr	r3, [r2, #0]
 8018738:	6033      	str	r3, [r6, #0]
 801873a:	3204      	adds	r2, #4
 801873c:	683b      	ldr	r3, [r7, #0]
 801873e:	9207      	str	r2, [sp, #28]
 8018740:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018742:	fb03 f302 	mul.w	r3, r3, r2
 8018746:	e762      	b.n	801860e <svc_process+0x59e>
 8018748:	f04f 30ff 	mov.w	r0, #4294967295
 801874c:	e574      	b.n	8018238 <svc_process+0x1c8>
 801874e:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
 8018752:	e728      	b.n	80185a6 <svc_process+0x536>
 8018754:	f8d8 3a30 	ldr.w	r3, [r8, #2608]	@ 0xa30
 8018758:	9309      	str	r3, [sp, #36]	@ 0x24
 801875a:	e685      	b.n	8018468 <svc_process+0x3f8>
 801875c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801875e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018760:	fb03 f300 	mul.w	r3, r3, r0
 8018764:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8018766:	6880      	ldr	r0, [r0, #8]
 8018768:	fb04 f303 	mul.w	r3, r4, r3
 801876c:	eb00 0483 	add.w	r4, r0, r3, lsl #2
 8018770:	e73a      	b.n	80185e8 <svc_process+0x578>
 8018772:	106a      	asrs	r2, r5, #1
 8018774:	9906      	ldr	r1, [sp, #24]
 8018776:	1b73      	subs	r3, r6, r5
 8018778:	2a00      	cmp	r2, #0
 801877a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801877e:	4614      	mov	r4, r2
 8018780:	dd0b      	ble.n	801879a <svc_process+0x72a>
 8018782:	f108 0c20 	add.w	ip, r8, #32
 8018786:	461e      	mov	r6, r3
 8018788:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 801878c:	3c01      	subs	r4, #1
 801878e:	e9ec 0102 	strd	r0, r1, [ip, #8]!
 8018792:	d1f9      	bne.n	8018788 <svc_process+0x718>
 8018794:	00d2      	lsls	r2, r2, #3
 8018796:	4496      	add	lr, r2
 8018798:	4413      	add	r3, r2
 801879a:	07e9      	lsls	r1, r5, #31
 801879c:	bf44      	itt	mi
 801879e:	681b      	ldrmi	r3, [r3, #0]
 80187a0:	f8ce 3000 	strmi.w	r3, [lr]
 80187a4:	e790      	b.n	80186c8 <svc_process+0x658>
 80187a6:	f9b8 3a34 	ldrsh.w	r3, [r8, #2612]	@ 0xa34
 80187aa:	2b00      	cmp	r3, #0
 80187ac:	dd36      	ble.n	801881c <svc_process+0x7ac>
 80187ae:	68fb      	ldr	r3, [r7, #12]
 80187b0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80187b4:	105b      	asrs	r3, r3, #1
 80187b6:	2b00      	cmp	r3, #0
 80187b8:	f77f af49 	ble.w	801864e <svc_process+0x5de>
 80187bc:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 80187c0:	f8d8 500c 	ldr.w	r5, [r8, #12]
 80187c4:	f8d8 6010 	ldr.w	r6, [r8, #16]
 80187c8:	9905      	ldr	r1, [sp, #20]
 80187ca:	f9b8 ca2a 	ldrsh.w	ip, [r8, #2602]	@ 0xa2a
 80187ce:	4620      	mov	r0, r4
 80187d0:	eb01 0e83 	add.w	lr, r1, r3, lsl #2
 80187d4:	1b64      	subs	r4, r4, r5
 80187d6:	1b80      	subs	r0, r0, r6
 80187d8:	2300      	movs	r3, #0
 80187da:	e005      	b.n	80187e8 <svc_process+0x778>
 80187dc:	3301      	adds	r3, #1
 80187de:	f841 2b04 	str.w	r2, [r1], #4
 80187e2:	4571      	cmp	r1, lr
 80187e4:	f43f af31 	beq.w	801864a <svc_process+0x5da>
 80187e8:	4563      	cmp	r3, ip
 80187ea:	d001      	beq.n	80187f0 <svc_process+0x780>
 80187ec:	2b00      	cmp	r3, #0
 80187ee:	d1f5      	bne.n	80187dc <svc_process+0x76c>
 80187f0:	680b      	ldr	r3, [r1, #0]
 80187f2:	4293      	cmp	r3, r2
 80187f4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80187f8:	db09      	blt.n	801880e <svc_process+0x79e>
 80187fa:	fb55 f212 	smmulr	r2, r5, r2
 80187fe:	fb54 f313 	smmulr	r3, r4, r3
 8018802:	441a      	add	r2, r3
 8018804:	0052      	lsls	r2, r2, #1
 8018806:	2301      	movs	r3, #1
 8018808:	f8c8 2004 	str.w	r2, [r8, #4]
 801880c:	e7e7      	b.n	80187de <svc_process+0x76e>
 801880e:	fb56 f212 	smmulr	r2, r6, r2
 8018812:	fb50 f313 	smmulr	r3, r0, r3
 8018816:	441a      	add	r2, r3
 8018818:	0052      	lsls	r2, r2, #1
 801881a:	e7f4      	b.n	8018806 <svc_process+0x796>
 801881c:	f9b8 3a28 	ldrsh.w	r3, [r8, #2600]	@ 0xa28
 8018820:	2b01      	cmp	r3, #1
 8018822:	f47f af12 	bne.w	801864a <svc_process+0x5da>
 8018826:	e7c2      	b.n	80187ae <svc_process+0x73e>
 8018828:	f06f 0004 	mvn.w	r0, #4
 801882c:	e504      	b.n	8018238 <svc_process+0x1c8>
 801882e:	f9b8 3a38 	ldrsh.w	r3, [r8, #2616]	@ 0xa38
 8018832:	2b01      	cmp	r3, #1
 8018834:	bf13      	iteet	ne
 8018836:	f8d8 3a2c 	ldrne.w	r3, [r8, #2604]	@ 0xa2c
 801883a:	f8c8 4a30 	streq.w	r4, [r8, #2608]	@ 0xa30
 801883e:	f8c8 4a2c 	streq.w	r4, [r8, #2604]	@ 0xa2c
 8018842:	f8c8 3a30 	strne.w	r3, [r8, #2608]	@ 0xa30
 8018846:	e724      	b.n	8018692 <svc_process+0x622>
 8018848:	9c06      	ldr	r4, [sp, #24]
 801884a:	e738      	b.n	80186be <svc_process+0x64e>
 801884c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801884e:	9207      	str	r2, [sp, #28]
 8018850:	e76d      	b.n	801872e <svc_process+0x6be>
 8018852:	bf00      	nop

08018854 <awe_vecAbs>:
 8018854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018858:	b089      	sub	sp, #36	@ 0x24
 801885a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801885e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018860:	2901      	cmp	r1, #1
 8018862:	ea4f 02e2 	mov.w	r2, r2, asr #3
 8018866:	9205      	str	r2, [sp, #20]
 8018868:	f000 80c4 	beq.w	80189f4 <awe_vecAbs+0x1a0>
 801886c:	9e03      	ldr	r6, [sp, #12]
 801886e:	9f04      	ldr	r7, [sp, #16]
 8018870:	9c05      	ldr	r4, [sp, #20]
 8018872:	008a      	lsls	r2, r1, #2
 8018874:	0098      	lsls	r0, r3, #2
 8018876:	9206      	str	r2, [sp, #24]
 8018878:	9007      	str	r0, [sp, #28]
 801887a:	18b5      	adds	r5, r6, r2
 801887c:	eb07 0c00 	add.w	ip, r7, r0
 8018880:	2c00      	cmp	r4, #0
 8018882:	d067      	beq.n	8018954 <awe_vecAbs+0x100>
 8018884:	00c8      	lsls	r0, r1, #3
 8018886:	00da      	lsls	r2, r3, #3
 8018888:	0149      	lsls	r1, r1, #5
 801888a:	015b      	lsls	r3, r3, #5
 801888c:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8018890:	9400      	str	r4, [sp, #0]
 8018892:	4664      	mov	r4, ip
 8018894:	eb06 0e00 	add.w	lr, r6, r0
 8018898:	eb05 0c00 	add.w	ip, r5, r0
 801889c:	eb0e 0900 	add.w	r9, lr, r0
 80188a0:	eb0c 0800 	add.w	r8, ip, r0
 80188a4:	9b01      	ldr	r3, [sp, #4]
 80188a6:	ed96 4a00 	vldr	s8, [r6]
 80188aa:	edd5 4a00 	vldr	s9, [r5]
 80188ae:	ed99 6a00 	vldr	s12, [r9]
 80188b2:	edd8 6a00 	vldr	s13, [r8]
 80188b6:	ed9e 5a00 	vldr	s10, [lr]
 80188ba:	eddc 5a00 	vldr	s11, [ip]
 80188be:	eb09 0b00 	add.w	fp, r9, r0
 80188c2:	eb08 0a00 	add.w	sl, r8, r0
 80188c6:	ed9b 7a00 	vldr	s14, [fp]
 80188ca:	edda 7a00 	vldr	s15, [sl]
 80188ce:	441e      	add	r6, r3
 80188d0:	441d      	add	r5, r3
 80188d2:	f3bf 8f4f 	dsb	sy
 80188d6:	f3bf 8f4f 	dsb	sy
 80188da:	9b02      	ldr	r3, [sp, #8]
 80188dc:	eeb0 4ac4 	vabs.f32	s8, s8
 80188e0:	eef0 4ae4 	vabs.f32	s9, s9
 80188e4:	ed87 4a00 	vstr	s8, [r7]
 80188e8:	eb07 0902 	add.w	r9, r7, r2
 80188ec:	edc4 4a00 	vstr	s9, [r4]
 80188f0:	eb04 0802 	add.w	r8, r4, r2
 80188f4:	441f      	add	r7, r3
 80188f6:	441c      	add	r4, r3
 80188f8:	9b00      	ldr	r3, [sp, #0]
 80188fa:	eb09 0e02 	add.w	lr, r9, r2
 80188fe:	eb08 0c02 	add.w	ip, r8, r2
 8018902:	eeb0 5ac5 	vabs.f32	s10, s10
 8018906:	eef0 5ae5 	vabs.f32	s11, s11
 801890a:	eeb0 6ac6 	vabs.f32	s12, s12
 801890e:	eef0 6ae6 	vabs.f32	s13, s13
 8018912:	eeb0 7ac7 	vabs.f32	s14, s14
 8018916:	eef0 7ae7 	vabs.f32	s15, s15
 801891a:	eb0e 0b02 	add.w	fp, lr, r2
 801891e:	eb0c 0a02 	add.w	sl, ip, r2
 8018922:	3b01      	subs	r3, #1
 8018924:	ed89 5a00 	vstr	s10, [r9]
 8018928:	9300      	str	r3, [sp, #0]
 801892a:	edc8 5a00 	vstr	s11, [r8]
 801892e:	ed8e 6a00 	vstr	s12, [lr]
 8018932:	edcc 6a00 	vstr	s13, [ip]
 8018936:	ed8b 7a00 	vstr	s14, [fp]
 801893a:	edca 7a00 	vstr	s15, [sl]
 801893e:	d1a9      	bne.n	8018894 <awe_vecAbs+0x40>
 8018940:	9b05      	ldr	r3, [sp, #20]
 8018942:	9903      	ldr	r1, [sp, #12]
 8018944:	009b      	lsls	r3, r3, #2
 8018946:	fb03 1100 	mla	r1, r3, r0, r1
 801894a:	9103      	str	r1, [sp, #12]
 801894c:	9904      	ldr	r1, [sp, #16]
 801894e:	fb03 1302 	mla	r3, r3, r2, r1
 8018952:	9304      	str	r3, [sp, #16]
 8018954:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8018956:	f013 0307 	ands.w	r3, r3, #7
 801895a:	d048      	beq.n	80189ee <awe_vecAbs+0x19a>
 801895c:	9a03      	ldr	r2, [sp, #12]
 801895e:	9c04      	ldr	r4, [sp, #16]
 8018960:	edd2 7a00 	vldr	s15, [r2]
 8018964:	9906      	ldr	r1, [sp, #24]
 8018966:	9d07      	ldr	r5, [sp, #28]
 8018968:	eef0 7ae7 	vabs.f32	s15, s15
 801896c:	2b01      	cmp	r3, #1
 801896e:	eb02 0001 	add.w	r0, r2, r1
 8018972:	edc4 7a00 	vstr	s15, [r4]
 8018976:	eb04 0205 	add.w	r2, r4, r5
 801897a:	d038      	beq.n	80189ee <awe_vecAbs+0x19a>
 801897c:	edd0 7a00 	vldr	s15, [r0]
 8018980:	2b02      	cmp	r3, #2
 8018982:	eef0 7ae7 	vabs.f32	s15, s15
 8018986:	edc2 7a00 	vstr	s15, [r2]
 801898a:	4408      	add	r0, r1
 801898c:	442a      	add	r2, r5
 801898e:	d02e      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018990:	edd0 7a00 	vldr	s15, [r0]
 8018994:	2b03      	cmp	r3, #3
 8018996:	eef0 7ae7 	vabs.f32	s15, s15
 801899a:	edc2 7a00 	vstr	s15, [r2]
 801899e:	4408      	add	r0, r1
 80189a0:	442a      	add	r2, r5
 80189a2:	d024      	beq.n	80189ee <awe_vecAbs+0x19a>
 80189a4:	edd0 7a00 	vldr	s15, [r0]
 80189a8:	2b04      	cmp	r3, #4
 80189aa:	eef0 7ae7 	vabs.f32	s15, s15
 80189ae:	edc2 7a00 	vstr	s15, [r2]
 80189b2:	4408      	add	r0, r1
 80189b4:	442a      	add	r2, r5
 80189b6:	d01a      	beq.n	80189ee <awe_vecAbs+0x19a>
 80189b8:	edd0 7a00 	vldr	s15, [r0]
 80189bc:	2b05      	cmp	r3, #5
 80189be:	eef0 7ae7 	vabs.f32	s15, s15
 80189c2:	edc2 7a00 	vstr	s15, [r2]
 80189c6:	4408      	add	r0, r1
 80189c8:	462c      	mov	r4, r5
 80189ca:	442a      	add	r2, r5
 80189cc:	d00f      	beq.n	80189ee <awe_vecAbs+0x19a>
 80189ce:	edd0 7a00 	vldr	s15, [r0]
 80189d2:	2b06      	cmp	r3, #6
 80189d4:	eef0 7ae7 	vabs.f32	s15, s15
 80189d8:	4408      	add	r0, r1
 80189da:	4414      	add	r4, r2
 80189dc:	edc2 7a00 	vstr	s15, [r2]
 80189e0:	d005      	beq.n	80189ee <awe_vecAbs+0x19a>
 80189e2:	edd0 7a00 	vldr	s15, [r0]
 80189e6:	eef0 7ae7 	vabs.f32	s15, s15
 80189ea:	edc4 7a00 	vstr	s15, [r4]
 80189ee:	b009      	add	sp, #36	@ 0x24
 80189f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189f4:	2b00      	cmp	r3, #0
 80189f6:	f47f af39 	bne.w	801886c <awe_vecAbs+0x18>
 80189fa:	4611      	mov	r1, r2
 80189fc:	2a00      	cmp	r2, #0
 80189fe:	d045      	beq.n	8018a8c <awe_vecAbs+0x238>
 8018a00:	9b04      	ldr	r3, [sp, #16]
 8018a02:	f100 0220 	add.w	r2, r0, #32
 8018a06:	3320      	adds	r3, #32
 8018a08:	ed12 4a08 	vldr	s8, [r2, #-32]	@ 0xffffffe0
 8018a0c:	ed52 4a07 	vldr	s9, [r2, #-28]	@ 0xffffffe4
 8018a10:	ed12 5a06 	vldr	s10, [r2, #-24]	@ 0xffffffe8
 8018a14:	ed52 5a05 	vldr	s11, [r2, #-20]	@ 0xffffffec
 8018a18:	ed12 6a04 	vldr	s12, [r2, #-16]
 8018a1c:	ed52 6a03 	vldr	s13, [r2, #-12]
 8018a20:	ed12 7a02 	vldr	s14, [r2, #-8]
 8018a24:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018a28:	f3bf 8f4f 	dsb	sy
 8018a2c:	f3bf 8f4f 	dsb	sy
 8018a30:	eeb0 4ac4 	vabs.f32	s8, s8
 8018a34:	eef0 4ae4 	vabs.f32	s9, s9
 8018a38:	eeb0 5ac5 	vabs.f32	s10, s10
 8018a3c:	eef0 5ae5 	vabs.f32	s11, s11
 8018a40:	eeb0 6ac6 	vabs.f32	s12, s12
 8018a44:	eef0 6ae6 	vabs.f32	s13, s13
 8018a48:	eeb0 7ac7 	vabs.f32	s14, s14
 8018a4c:	eef0 7ae7 	vabs.f32	s15, s15
 8018a50:	3901      	subs	r1, #1
 8018a52:	ed03 4a08 	vstr	s8, [r3, #-32]	@ 0xffffffe0
 8018a56:	ed43 4a07 	vstr	s9, [r3, #-28]	@ 0xffffffe4
 8018a5a:	ed03 5a06 	vstr	s10, [r3, #-24]	@ 0xffffffe8
 8018a5e:	ed43 5a05 	vstr	s11, [r3, #-20]	@ 0xffffffec
 8018a62:	ed03 6a04 	vstr	s12, [r3, #-16]
 8018a66:	ed43 6a03 	vstr	s13, [r3, #-12]
 8018a6a:	ed03 7a02 	vstr	s14, [r3, #-8]
 8018a6e:	ed43 7a01 	vstr	s15, [r3, #-4]
 8018a72:	f102 0220 	add.w	r2, r2, #32
 8018a76:	f103 0320 	add.w	r3, r3, #32
 8018a7a:	d1c5      	bne.n	8018a08 <awe_vecAbs+0x1b4>
 8018a7c:	9b05      	ldr	r3, [sp, #20]
 8018a7e:	9a03      	ldr	r2, [sp, #12]
 8018a80:	015b      	lsls	r3, r3, #5
 8018a82:	441a      	add	r2, r3
 8018a84:	9203      	str	r2, [sp, #12]
 8018a86:	9a04      	ldr	r2, [sp, #16]
 8018a88:	441a      	add	r2, r3
 8018a8a:	9204      	str	r2, [sp, #16]
 8018a8c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8018a8e:	f013 0307 	ands.w	r3, r3, #7
 8018a92:	d0ac      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018a94:	9a03      	ldr	r2, [sp, #12]
 8018a96:	9804      	ldr	r0, [sp, #16]
 8018a98:	edd2 7a00 	vldr	s15, [r2]
 8018a9c:	2b01      	cmp	r3, #1
 8018a9e:	eef0 7ae7 	vabs.f32	s15, s15
 8018aa2:	edc0 7a00 	vstr	s15, [r0]
 8018aa6:	d0a2      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018aa8:	edd2 7a01 	vldr	s15, [r2, #4]
 8018aac:	2b02      	cmp	r3, #2
 8018aae:	eef0 7ae7 	vabs.f32	s15, s15
 8018ab2:	edc0 7a01 	vstr	s15, [r0, #4]
 8018ab6:	d09a      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018ab8:	edd2 7a02 	vldr	s15, [r2, #8]
 8018abc:	2b03      	cmp	r3, #3
 8018abe:	eef0 7ae7 	vabs.f32	s15, s15
 8018ac2:	edc0 7a02 	vstr	s15, [r0, #8]
 8018ac6:	d092      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018ac8:	edd2 7a03 	vldr	s15, [r2, #12]
 8018acc:	2b04      	cmp	r3, #4
 8018ace:	eef0 7ae7 	vabs.f32	s15, s15
 8018ad2:	edc0 7a03 	vstr	s15, [r0, #12]
 8018ad6:	d08a      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018ad8:	edd2 7a04 	vldr	s15, [r2, #16]
 8018adc:	2b05      	cmp	r3, #5
 8018ade:	eef0 7ae7 	vabs.f32	s15, s15
 8018ae2:	edc0 7a04 	vstr	s15, [r0, #16]
 8018ae6:	d082      	beq.n	80189ee <awe_vecAbs+0x19a>
 8018ae8:	edd2 7a05 	vldr	s15, [r2, #20]
 8018aec:	2b06      	cmp	r3, #6
 8018aee:	eef0 7ae7 	vabs.f32	s15, s15
 8018af2:	edc0 7a05 	vstr	s15, [r0, #20]
 8018af6:	f43f af7a 	beq.w	80189ee <awe_vecAbs+0x19a>
 8018afa:	edd2 7a06 	vldr	s15, [r2, #24]
 8018afe:	eef0 7ae7 	vabs.f32	s15, s15
 8018b02:	edc0 7a06 	vstr	s15, [r0, #24]
 8018b06:	e772      	b.n	80189ee <awe_vecAbs+0x19a>

08018b08 <awe_vecAcos>:
 8018b08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018b0c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8018b10:	f1b9 0f00 	cmp.w	r9, #0
 8018b14:	dd10      	ble.n	8018b38 <awe_vecAcos+0x30>
 8018b16:	4604      	mov	r4, r0
 8018b18:	4615      	mov	r5, r2
 8018b1a:	ea4f 0881 	mov.w	r8, r1, lsl #2
 8018b1e:	009f      	lsls	r7, r3, #2
 8018b20:	2600      	movs	r6, #0
 8018b22:	ed94 0a00 	vldr	s0, [r4]
 8018b26:	f015 fde7 	bl	802e6f8 <acosf>
 8018b2a:	3601      	adds	r6, #1
 8018b2c:	45b1      	cmp	r9, r6
 8018b2e:	ed85 0a00 	vstr	s0, [r5]
 8018b32:	4444      	add	r4, r8
 8018b34:	443d      	add	r5, r7
 8018b36:	d1f4      	bne.n	8018b22 <awe_vecAcos+0x1a>
 8018b38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08018b3c <awe_vecAdd2x1>:
 8018b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b40:	b08b      	sub	sp, #44	@ 0x2c
 8018b42:	2901      	cmp	r1, #1
 8018b44:	9308      	str	r3, [sp, #32]
 8018b46:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018b48:	9109      	str	r1, [sp, #36]	@ 0x24
 8018b4a:	ea4f 03e3 	mov.w	r3, r3, asr #3
 8018b4e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8018b52:	9307      	str	r3, [sp, #28]
 8018b54:	f000 80f8 	beq.w	8018d48 <awe_vecAdd2x1+0x20c>
 8018b58:	9b07      	ldr	r3, [sp, #28]
 8018b5a:	2b00      	cmp	r3, #0
 8018b5c:	f000 808e 	beq.w	8018c7c <awe_vecAdd2x1+0x140>
 8018b60:	469e      	mov	lr, r3
 8018b62:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8018b64:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8018b66:	9a08      	ldr	r2, [sp, #32]
 8018b68:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 8018b6c:	009c      	lsls	r4, r3, #2
 8018b6e:	00dd      	lsls	r5, r3, #3
 8018b70:	192b      	adds	r3, r5, r4
 8018b72:	005b      	lsls	r3, r3, #1
 8018b74:	9304      	str	r3, [sp, #16]
 8018b76:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8018b78:	ea4f 1846 	mov.w	r8, r6, lsl #5
 8018b7c:	441c      	add	r4, r3
 8018b7e:	0136      	lsls	r6, r6, #4
 8018b80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018b82:	9603      	str	r6, [sp, #12]
 8018b84:	e9dd 6705 	ldrd	r6, r7, [sp, #20]
 8018b88:	0098      	lsls	r0, r3, #2
 8018b8a:	015b      	lsls	r3, r3, #5
 8018b8c:	0091      	lsls	r1, r2, #2
 8018b8e:	9302      	str	r3, [sp, #8]
 8018b90:	ea4f 1942 	mov.w	r9, r2, lsl #5
 8018b94:	ed96 6a00 	vldr	s12, [r6]
 8018b98:	edd7 6a00 	vldr	s13, [r7]
 8018b9c:	1832      	adds	r2, r6, r0
 8018b9e:	187b      	adds	r3, r7, r1
 8018ba0:	ed92 7a00 	vldr	s14, [r2]
 8018ba4:	edd3 7a00 	vldr	s15, [r3]
 8018ba8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018bac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018bb0:	edcc 6a00 	vstr	s13, [ip]
 8018bb4:	4402      	add	r2, r0
 8018bb6:	440b      	add	r3, r1
 8018bb8:	ed92 6a00 	vldr	s12, [r2]
 8018bbc:	edd3 6a00 	vldr	s13, [r3]
 8018bc0:	edc4 7a00 	vstr	s15, [r4]
 8018bc4:	4402      	add	r2, r0
 8018bc6:	440b      	add	r3, r1
 8018bc8:	ed92 7a00 	vldr	s14, [r2]
 8018bcc:	edd3 7a00 	vldr	s15, [r3]
 8018bd0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018bd4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018bd8:	eb0c 0a05 	add.w	sl, ip, r5
 8018bdc:	edca 6a00 	vstr	s13, [sl]
 8018be0:	eb04 0b05 	add.w	fp, r4, r5
 8018be4:	4402      	add	r2, r0
 8018be6:	440b      	add	r3, r1
 8018be8:	ed92 6a00 	vldr	s12, [r2]
 8018bec:	edd3 6a00 	vldr	s13, [r3]
 8018bf0:	edcb 7a00 	vstr	s15, [fp]
 8018bf4:	4402      	add	r2, r0
 8018bf6:	440b      	add	r3, r1
 8018bf8:	ed92 7a00 	vldr	s14, [r2]
 8018bfc:	edd3 7a00 	vldr	s15, [r3]
 8018c00:	4402      	add	r2, r0
 8018c02:	440b      	add	r3, r1
 8018c04:	9201      	str	r2, [sp, #4]
 8018c06:	461a      	mov	r2, r3
 8018c08:	9b03      	ldr	r3, [sp, #12]
 8018c0a:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018c0e:	eb04 0b03 	add.w	fp, r4, r3
 8018c12:	44aa      	add	sl, r5
 8018c14:	9b01      	ldr	r3, [sp, #4]
 8018c16:	edca 6a00 	vstr	s13, [sl]
 8018c1a:	ed93 6a00 	vldr	s12, [r3]
 8018c1e:	edd2 6a00 	vldr	s13, [r2]
 8018c22:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018c26:	4613      	mov	r3, r2
 8018c28:	9a01      	ldr	r2, [sp, #4]
 8018c2a:	edcb 7a00 	vstr	s15, [fp]
 8018c2e:	4402      	add	r2, r0
 8018c30:	440b      	add	r3, r1
 8018c32:	ed92 7a00 	vldr	s14, [r2]
 8018c36:	edd3 7a00 	vldr	s15, [r3]
 8018c3a:	9b04      	ldr	r3, [sp, #16]
 8018c3c:	9a02      	ldr	r2, [sp, #8]
 8018c3e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018c42:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018c46:	18e3      	adds	r3, r4, r3
 8018c48:	44aa      	add	sl, r5
 8018c4a:	f1be 0e01 	subs.w	lr, lr, #1
 8018c4e:	edca 6a00 	vstr	s13, [sl]
 8018c52:	4416      	add	r6, r2
 8018c54:	444f      	add	r7, r9
 8018c56:	44c4      	add	ip, r8
 8018c58:	4444      	add	r4, r8
 8018c5a:	edc3 7a00 	vstr	s15, [r3]
 8018c5e:	d199      	bne.n	8018b94 <awe_vecAdd2x1+0x58>
 8018c60:	9b07      	ldr	r3, [sp, #28]
 8018c62:	9805      	ldr	r0, [sp, #20]
 8018c64:	4611      	mov	r1, r2
 8018c66:	fb01 0203 	mla	r2, r1, r3, r0
 8018c6a:	9906      	ldr	r1, [sp, #24]
 8018c6c:	9205      	str	r2, [sp, #20]
 8018c6e:	fb09 1203 	mla	r2, r9, r3, r1
 8018c72:	9206      	str	r2, [sp, #24]
 8018c74:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018c76:	fb08 2303 	mla	r3, r8, r3, r2
 8018c7a:	9314      	str	r3, [sp, #80]	@ 0x50
 8018c7c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018c7e:	f013 0507 	ands.w	r5, r3, #7
 8018c82:	d05e      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018c84:	9a06      	ldr	r2, [sp, #24]
 8018c86:	9805      	ldr	r0, [sp, #20]
 8018c88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c8a:	edd2 7a00 	vldr	s15, [r2]
 8018c8e:	ed90 7a00 	vldr	s14, [r0]
 8018c92:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018c94:	0099      	lsls	r1, r3, #2
 8018c96:	9b08      	ldr	r3, [sp, #32]
 8018c98:	00a6      	lsls	r6, r4, #2
 8018c9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018c9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018ca0:	009b      	lsls	r3, r3, #2
 8018ca2:	2d01      	cmp	r5, #1
 8018ca4:	edc4 7a00 	vstr	s15, [r4]
 8018ca8:	441a      	add	r2, r3
 8018caa:	4408      	add	r0, r1
 8018cac:	4434      	add	r4, r6
 8018cae:	d048      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018cb0:	edd2 7a00 	vldr	s15, [r2]
 8018cb4:	ed90 7a00 	vldr	s14, [r0]
 8018cb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018cbc:	2d02      	cmp	r5, #2
 8018cbe:	edc4 7a00 	vstr	s15, [r4]
 8018cc2:	441a      	add	r2, r3
 8018cc4:	4408      	add	r0, r1
 8018cc6:	4434      	add	r4, r6
 8018cc8:	d03b      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018cca:	edd0 7a00 	vldr	s15, [r0]
 8018cce:	ed92 7a00 	vldr	s14, [r2]
 8018cd2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018cd6:	2d03      	cmp	r5, #3
 8018cd8:	edc4 7a00 	vstr	s15, [r4]
 8018cdc:	4408      	add	r0, r1
 8018cde:	441a      	add	r2, r3
 8018ce0:	4434      	add	r4, r6
 8018ce2:	d02e      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018ce4:	edd0 7a00 	vldr	s15, [r0]
 8018ce8:	ed92 7a00 	vldr	s14, [r2]
 8018cec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018cf0:	2d04      	cmp	r5, #4
 8018cf2:	edc4 7a00 	vstr	s15, [r4]
 8018cf6:	4408      	add	r0, r1
 8018cf8:	441a      	add	r2, r3
 8018cfa:	4434      	add	r4, r6
 8018cfc:	d021      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018cfe:	edd0 7a00 	vldr	s15, [r0]
 8018d02:	ed92 7a00 	vldr	s14, [r2]
 8018d06:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018d0a:	2d05      	cmp	r5, #5
 8018d0c:	edc4 7a00 	vstr	s15, [r4]
 8018d10:	4408      	add	r0, r1
 8018d12:	441a      	add	r2, r3
 8018d14:	4434      	add	r4, r6
 8018d16:	d014      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018d18:	edd0 7a00 	vldr	s15, [r0]
 8018d1c:	ed92 7a00 	vldr	s14, [r2]
 8018d20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018d24:	2d06      	cmp	r5, #6
 8018d26:	4408      	add	r0, r1
 8018d28:	441a      	add	r2, r3
 8018d2a:	4426      	add	r6, r4
 8018d2c:	edc4 7a00 	vstr	s15, [r4]
 8018d30:	d007      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018d32:	edd0 7a00 	vldr	s15, [r0]
 8018d36:	ed92 7a00 	vldr	s14, [r2]
 8018d3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018d3e:	edc6 7a00 	vstr	s15, [r6]
 8018d42:	b00b      	add	sp, #44	@ 0x2c
 8018d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d48:	9b08      	ldr	r3, [sp, #32]
 8018d4a:	2b01      	cmp	r3, #1
 8018d4c:	f47f af04 	bne.w	8018b58 <awe_vecAdd2x1+0x1c>
 8018d50:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8018d52:	2b01      	cmp	r3, #1
 8018d54:	f47f af00 	bne.w	8018b58 <awe_vecAdd2x1+0x1c>
 8018d58:	9807      	ldr	r0, [sp, #28]
 8018d5a:	2800      	cmp	r0, #0
 8018d5c:	d05a      	beq.n	8018e14 <awe_vecAdd2x1+0x2d8>
 8018d5e:	9b05      	ldr	r3, [sp, #20]
 8018d60:	f103 0120 	add.w	r1, r3, #32
 8018d64:	9b06      	ldr	r3, [sp, #24]
 8018d66:	f103 0220 	add.w	r2, r3, #32
 8018d6a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8018d6c:	3320      	adds	r3, #32
 8018d6e:	ed11 0a07 	vldr	s0, [r1, #-28]	@ 0xffffffe4
 8018d72:	ed52 0a07 	vldr	s1, [r2, #-28]	@ 0xffffffe4
 8018d76:	ed11 1a06 	vldr	s2, [r1, #-24]	@ 0xffffffe8
 8018d7a:	ed52 1a06 	vldr	s3, [r2, #-24]	@ 0xffffffe8
 8018d7e:	ed11 2a05 	vldr	s4, [r1, #-20]	@ 0xffffffec
 8018d82:	ed52 2a05 	vldr	s5, [r2, #-20]	@ 0xffffffec
 8018d86:	ed11 3a04 	vldr	s6, [r1, #-16]
 8018d8a:	ed52 3a04 	vldr	s7, [r2, #-16]
 8018d8e:	ed11 4a03 	vldr	s8, [r1, #-12]
 8018d92:	ed52 4a03 	vldr	s9, [r2, #-12]
 8018d96:	ed11 5a02 	vldr	s10, [r1, #-8]
 8018d9a:	ed52 5a02 	vldr	s11, [r2, #-8]
 8018d9e:	ed11 6a01 	vldr	s12, [r1, #-4]
 8018da2:	ed52 6a01 	vldr	s13, [r2, #-4]
 8018da6:	ed11 7a08 	vldr	s14, [r1, #-32]	@ 0xffffffe0
 8018daa:	ed52 7a08 	vldr	s15, [r2, #-32]	@ 0xffffffe0
 8018dae:	ee70 0a20 	vadd.f32	s1, s0, s1
 8018db2:	ee71 1a21 	vadd.f32	s3, s2, s3
 8018db6:	ee72 2a22 	vadd.f32	s5, s4, s5
 8018dba:	ee73 3a23 	vadd.f32	s7, s6, s7
 8018dbe:	ee74 4a24 	vadd.f32	s9, s8, s9
 8018dc2:	ee75 5a25 	vadd.f32	s11, s10, s11
 8018dc6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018dca:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018dce:	3801      	subs	r0, #1
 8018dd0:	ed43 0a07 	vstr	s1, [r3, #-28]	@ 0xffffffe4
 8018dd4:	ed43 1a06 	vstr	s3, [r3, #-24]	@ 0xffffffe8
 8018dd8:	ed43 2a05 	vstr	s5, [r3, #-20]	@ 0xffffffec
 8018ddc:	ed43 3a04 	vstr	s7, [r3, #-16]
 8018de0:	ed43 4a03 	vstr	s9, [r3, #-12]
 8018de4:	ed43 5a02 	vstr	s11, [r3, #-8]
 8018de8:	ed43 6a01 	vstr	s13, [r3, #-4]
 8018dec:	ed43 7a08 	vstr	s15, [r3, #-32]	@ 0xffffffe0
 8018df0:	f101 0120 	add.w	r1, r1, #32
 8018df4:	f102 0220 	add.w	r2, r2, #32
 8018df8:	f103 0320 	add.w	r3, r3, #32
 8018dfc:	d1b7      	bne.n	8018d6e <awe_vecAdd2x1+0x232>
 8018dfe:	9b07      	ldr	r3, [sp, #28]
 8018e00:	9a05      	ldr	r2, [sp, #20]
 8018e02:	015b      	lsls	r3, r3, #5
 8018e04:	441a      	add	r2, r3
 8018e06:	9205      	str	r2, [sp, #20]
 8018e08:	9a06      	ldr	r2, [sp, #24]
 8018e0a:	441a      	add	r2, r3
 8018e0c:	9206      	str	r2, [sp, #24]
 8018e0e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018e10:	441a      	add	r2, r3
 8018e12:	9214      	str	r2, [sp, #80]	@ 0x50
 8018e14:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018e16:	f013 0307 	ands.w	r3, r3, #7
 8018e1a:	d092      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018e1c:	9a06      	ldr	r2, [sp, #24]
 8018e1e:	9805      	ldr	r0, [sp, #20]
 8018e20:	edd2 7a00 	vldr	s15, [r2]
 8018e24:	ed90 7a00 	vldr	s14, [r0]
 8018e28:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018e2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018e2e:	2b01      	cmp	r3, #1
 8018e30:	edc1 7a00 	vstr	s15, [r1]
 8018e34:	d085      	beq.n	8018d42 <awe_vecAdd2x1+0x206>
 8018e36:	edd2 7a01 	vldr	s15, [r2, #4]
 8018e3a:	ed90 7a01 	vldr	s14, [r0, #4]
 8018e3e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018e40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018e44:	2b02      	cmp	r3, #2
 8018e46:	edc1 7a01 	vstr	s15, [r1, #4]
 8018e4a:	f43f af7a 	beq.w	8018d42 <awe_vecAdd2x1+0x206>
 8018e4e:	edd2 7a02 	vldr	s15, [r2, #8]
 8018e52:	ed90 7a02 	vldr	s14, [r0, #8]
 8018e56:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018e58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018e5c:	2b03      	cmp	r3, #3
 8018e5e:	edc1 7a02 	vstr	s15, [r1, #8]
 8018e62:	f43f af6e 	beq.w	8018d42 <awe_vecAdd2x1+0x206>
 8018e66:	edd2 7a03 	vldr	s15, [r2, #12]
 8018e6a:	ed90 7a03 	vldr	s14, [r0, #12]
 8018e6e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018e70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018e74:	2b04      	cmp	r3, #4
 8018e76:	edc1 7a03 	vstr	s15, [r1, #12]
 8018e7a:	f43f af62 	beq.w	8018d42 <awe_vecAdd2x1+0x206>
 8018e7e:	edd2 7a04 	vldr	s15, [r2, #16]
 8018e82:	ed90 7a04 	vldr	s14, [r0, #16]
 8018e86:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018e88:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018e8c:	2b05      	cmp	r3, #5
 8018e8e:	edc1 7a04 	vstr	s15, [r1, #16]
 8018e92:	f43f af56 	beq.w	8018d42 <awe_vecAdd2x1+0x206>
 8018e96:	edd2 7a05 	vldr	s15, [r2, #20]
 8018e9a:	ed90 7a05 	vldr	s14, [r0, #20]
 8018e9e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018ea0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018ea4:	2b06      	cmp	r3, #6
 8018ea6:	edc1 7a05 	vstr	s15, [r1, #20]
 8018eaa:	f43f af4a 	beq.w	8018d42 <awe_vecAdd2x1+0x206>
 8018eae:	edd0 7a06 	vldr	s15, [r0, #24]
 8018eb2:	ed92 7a06 	vldr	s14, [r2, #24]
 8018eb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018eba:	edc1 7a06 	vstr	s15, [r1, #24]
 8018ebe:	e740      	b.n	8018d42 <awe_vecAdd2x1+0x206>

08018ec0 <awe_vecAdd2x1Int32>:
 8018ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ec2:	9f07      	ldr	r7, [sp, #28]
 8018ec4:	9d05      	ldr	r5, [sp, #20]
 8018ec6:	2f00      	cmp	r7, #0
 8018ec8:	dd10      	ble.n	8018eec <awe_vecAdd2x1Int32+0x2c>
 8018eca:	9c06      	ldr	r4, [sp, #24]
 8018ecc:	0089      	lsls	r1, r1, #2
 8018ece:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8018ed2:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8018ed6:	2600      	movs	r6, #0
 8018ed8:	6803      	ldr	r3, [r0, #0]
 8018eda:	6814      	ldr	r4, [r2, #0]
 8018edc:	3601      	adds	r6, #1
 8018ede:	4423      	add	r3, r4
 8018ee0:	42b7      	cmp	r7, r6
 8018ee2:	602b      	str	r3, [r5, #0]
 8018ee4:	4408      	add	r0, r1
 8018ee6:	4472      	add	r2, lr
 8018ee8:	4465      	add	r5, ip
 8018eea:	d1f5      	bne.n	8018ed8 <awe_vecAdd2x1Int32+0x18>
 8018eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018eee:	bf00      	nop

08018ef0 <awe_vecAGCLimiterCore>:
 8018ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ef4:	ed2d 8b10 	vpush	{d8-d15}
 8018ef8:	eef5 1a40 	vcmp.f32	s3, #0.0
 8018efc:	b085      	sub	sp, #20
 8018efe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f02:	edcd 1a03 	vstr	s3, [sp, #12]
 8018f06:	4690      	mov	r8, r2
 8018f08:	469a      	mov	sl, r3
 8018f0a:	4606      	mov	r6, r0
 8018f0c:	460f      	mov	r7, r1
 8018f0e:	eef0 9a40 	vmov.f32	s19, s0
 8018f12:	eeb0 aa60 	vmov.f32	s20, s1
 8018f16:	eef0 aa41 	vmov.f32	s21, s2
 8018f1a:	eef0 ba42 	vmov.f32	s23, s4
 8018f1e:	eeb0 ba43 	vmov.f32	s22, s6
 8018f22:	edd3 fa00 	vldr	s31, [r3]
 8018f26:	ea4f 0992 	mov.w	r9, r2, lsr #2
 8018f2a:	f000 812a 	beq.w	8019182 <awe_vecAGCLimiterCore+0x292>
 8018f2e:	eef0 ca62 	vmov.f32	s25, s5
 8018f32:	f1b9 0f00 	cmp.w	r9, #0
 8018f36:	f000 8344 	beq.w	80195c2 <awe_vecAGCLimiterCore+0x6d2>
 8018f3a:	ed9f ea9c 	vldr	s28, [pc, #624]	@ 80191ac <awe_vecAGCLimiterCore+0x2bc>
 8018f3e:	eddf ea9c 	vldr	s29, [pc, #624]	@ 80191b0 <awe_vecAGCLimiterCore+0x2c0>
 8018f42:	eef1 da61 	vneg.f32	s27, s3
 8018f46:	f100 0510 	add.w	r5, r0, #16
 8018f4a:	f101 0410 	add.w	r4, r1, #16
 8018f4e:	46cb      	mov	fp, r9
 8018f50:	eeb7 fa00 	vmov.f32	s30, #112	@ 0x3f800000  1.0
 8018f54:	eebf da00 	vmov.f32	s26, #240	@ 0xbf800000 -1.0
 8018f58:	e072      	b.n	8019040 <awe_vecAGCLimiterCore+0x150>
 8018f5a:	eef4 5acf 	vcmpe.f32	s11, s30
 8018f5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f62:	dc0f      	bgt.n	8018f84 <awe_vecAGCLimiterCore+0x94>
 8018f64:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8018f68:	eef6 4a00 	vmov.f32	s9, #96	@ 0x3f000000  0.5
 8018f6c:	eef0 7a45 	vmov.f32	s15, s10
 8018f70:	eee5 7aa4 	vfma.f32	s15, s11, s9
 8018f74:	ee25 5a85 	vmul.f32	s10, s11, s10
 8018f78:	eef0 4a67 	vmov.f32	s9, s15
 8018f7c:	eee5 4a25 	vfma.f32	s9, s10, s11
 8018f80:	eef0 5a64 	vmov.f32	s11, s9
 8018f84:	eef4 6acd 	vcmpe.f32	s13, s26
 8018f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f8c:	ee65 5aab 	vmul.f32	s11, s11, s23
 8018f90:	f100 80e4 	bmi.w	801915c <awe_vecAGCLimiterCore+0x26c>
 8018f94:	eef4 6acf 	vcmpe.f32	s13, s30
 8018f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f9c:	f340 822d 	ble.w	80193fa <awe_vecAGCLimiterCore+0x50a>
 8018fa0:	ee2b 9aa6 	vmul.f32	s18, s23, s13
 8018fa4:	eeb4 7acd 	vcmpe.f32	s14, s26
 8018fa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fac:	f100 80de 	bmi.w	801916c <awe_vecAGCLimiterCore+0x27c>
 8018fb0:	eeb4 7acf 	vcmpe.f32	s14, s30
 8018fb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fb8:	f340 8210 	ble.w	80193dc <awe_vecAGCLimiterCore+0x4ec>
 8018fbc:	ee6b 8a87 	vmul.f32	s17, s23, s14
 8018fc0:	eeb4 0acd 	vcmpe.f32	s0, s26
 8018fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fc8:	f100 80d8 	bmi.w	801917c <awe_vecAGCLimiterCore+0x28c>
 8018fcc:	eeb4 0acf 	vcmpe.f32	s0, s30
 8018fd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fd4:	f340 8220 	ble.w	8019418 <awe_vecAGCLimiterCore+0x528>
 8018fd8:	ee2b 8a80 	vmul.f32	s16, s23, s0
 8018fdc:	eeb0 0a4b 	vmov.f32	s0, s22
 8018fe0:	eea5 0aad 	vfma.f32	s0, s11, s27
 8018fe4:	3510      	adds	r5, #16
 8018fe6:	3410      	adds	r4, #16
 8018fe8:	ed9f ca72 	vldr	s24, [pc, #456]	@ 80191b4 <awe_vecAGCLimiterCore+0x2c4>
 8018fec:	ee20 0a0c 	vmul.f32	s0, s0, s24
 8018ff0:	f015 fc04 	bl	802e7fc <expf>
 8018ff4:	eeb0 7a4b 	vmov.f32	s14, s22
 8018ff8:	eea9 7a2d 	vfma.f32	s14, s18, s27
 8018ffc:	ed04 0a08 	vstr	s0, [r4, #-32]	@ 0xffffffe0
 8019000:	ee27 0a0c 	vmul.f32	s0, s14, s24
 8019004:	f015 fbfa 	bl	802e7fc <expf>
 8019008:	eeb0 7a4b 	vmov.f32	s14, s22
 801900c:	eea8 7aad 	vfma.f32	s14, s17, s27
 8019010:	ed04 0a07 	vstr	s0, [r4, #-28]	@ 0xffffffe4
 8019014:	ee27 0a0c 	vmul.f32	s0, s14, s24
 8019018:	f015 fbf0 	bl	802e7fc <expf>
 801901c:	eeb0 7a4b 	vmov.f32	s14, s22
 8019020:	eea8 7a2d 	vfma.f32	s14, s16, s27
 8019024:	ed04 0a06 	vstr	s0, [r4, #-24]	@ 0xffffffe8
 8019028:	ee27 ca0c 	vmul.f32	s24, s14, s24
 801902c:	eeb0 0a4c 	vmov.f32	s0, s24
 8019030:	f015 fbe4 	bl	802e7fc <expf>
 8019034:	f1bb 0b01 	subs.w	fp, fp, #1
 8019038:	ed04 0a05 	vstr	s0, [r4, #-20]	@ 0xffffffec
 801903c:	f000 8253 	beq.w	80194e6 <awe_vecAGCLimiterCore+0x5f6>
 8019040:	ed55 5a04 	vldr	s11, [r5, #-16]
 8019044:	ed15 9a03 	vldr	s18, [r5, #-12]
 8019048:	ed55 6a02 	vldr	s13, [r5, #-8]
 801904c:	ed15 7a01 	vldr	s14, [r5, #-4]
 8019050:	eef4 5aef 	vcmpe.f32	s11, s31
 8019054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019058:	bfd4      	ite	le
 801905a:	eeb0 5a4a 	vmovle.f32	s10, s20
 801905e:	eeb0 5a69 	vmovgt.f32	s10, s19
 8019062:	ee7f 8a45 	vsub.f32	s17, s30, s10
 8019066:	ee68 8aaf 	vmul.f32	s17, s17, s31
 801906a:	eee5 8a25 	vfma.f32	s17, s10, s11
 801906e:	eeb0 0ae8 	vabs.f32	s0, s17
 8019072:	eeb4 0ace 	vcmpe.f32	s0, s28
 8019076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801907a:	f140 81a0 	bpl.w	80193be <awe_vecAGCLimiterCore+0x4ce>
 801907e:	eeb0 ca6e 	vmov.f32	s24, s29
 8019082:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8019086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801908a:	bfd4      	ite	le
 801908c:	eef0 7a4a 	vmovle.f32	s15, s20
 8019090:	eef0 7a69 	vmovgt.f32	s15, s19
 8019094:	ee3f 8a67 	vsub.f32	s16, s30, s15
 8019098:	ee28 8a28 	vmul.f32	s16, s16, s17
 801909c:	eea7 8a89 	vfma.f32	s16, s15, s18
 80190a0:	eeb0 0ac8 	vabs.f32	s0, s16
 80190a4:	eeb4 0ace 	vcmpe.f32	s0, s28
 80190a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190ac:	eef0 8a48 	vmov.f32	s17, s16
 80190b0:	f140 8176 	bpl.w	80193a0 <awe_vecAGCLimiterCore+0x4b0>
 80190b4:	eeb0 9a6e 	vmov.f32	s18, s29
 80190b8:	eef4 6ae8 	vcmpe.f32	s13, s17
 80190bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c0:	bfd4      	ite	le
 80190c2:	eef0 7a4a 	vmovle.f32	s15, s20
 80190c6:	eef0 7a69 	vmovgt.f32	s15, s19
 80190ca:	ee3f 8a67 	vsub.f32	s16, s30, s15
 80190ce:	ee28 8a28 	vmul.f32	s16, s16, s17
 80190d2:	eea7 8aa6 	vfma.f32	s16, s15, s13
 80190d6:	eeb0 0ac8 	vabs.f32	s0, s16
 80190da:	eeb4 0ace 	vcmpe.f32	s0, s28
 80190de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190e2:	f140 8152 	bpl.w	801938a <awe_vecAGCLimiterCore+0x49a>
 80190e6:	eef0 8a6e 	vmov.f32	s17, s29
 80190ea:	eeb4 7ac8 	vcmpe.f32	s14, s16
 80190ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f2:	bfd4      	ite	le
 80190f4:	eef0 6a4a 	vmovle.f32	s13, s20
 80190f8:	eef0 6a69 	vmovgt.f32	s13, s19
 80190fc:	ee7f 7a66 	vsub.f32	s15, s30, s13
 8019100:	ee67 7a88 	vmul.f32	s15, s15, s16
 8019104:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019108:	eeb0 0ae7 	vabs.f32	s0, s15
 801910c:	eeb4 0ace 	vcmpe.f32	s0, s28
 8019110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019114:	eef0 fa67 	vmov.f32	s31, s15
 8019118:	f140 8130 	bpl.w	801937c <awe_vecAGCLimiterCore+0x48c>
 801911c:	eeb0 0a6e 	vmov.f32	s0, s29
 8019120:	ee7c 5a6a 	vsub.f32	s11, s24, s21
 8019124:	ee39 9a6a 	vsub.f32	s18, s18, s21
 8019128:	ee6c 5aa5 	vmul.f32	s11, s25, s11
 801912c:	ee78 8aea 	vsub.f32	s17, s17, s21
 8019130:	ee30 0a6a 	vsub.f32	s0, s0, s21
 8019134:	eef4 5acd 	vcmpe.f32	s11, s26
 8019138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801913c:	ee6c 6a89 	vmul.f32	s13, s25, s18
 8019140:	ee2c 7aa8 	vmul.f32	s14, s25, s17
 8019144:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8019148:	f57f af07 	bpl.w	8018f5a <awe_vecAGCLimiterCore+0x6a>
 801914c:	eef4 6acd 	vcmpe.f32	s13, s26
 8019150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019154:	eddf 5a18 	vldr	s11, [pc, #96]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019158:	f57f af1c 	bpl.w	8018f94 <awe_vecAGCLimiterCore+0xa4>
 801915c:	eeb4 7acd 	vcmpe.f32	s14, s26
 8019160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019164:	ed9f 9a14 	vldr	s18, [pc, #80]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019168:	f57f af22 	bpl.w	8018fb0 <awe_vecAGCLimiterCore+0xc0>
 801916c:	eeb4 0acd 	vcmpe.f32	s0, s26
 8019170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019174:	eddf 8a10 	vldr	s17, [pc, #64]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019178:	f57f af28 	bpl.w	8018fcc <awe_vecAGCLimiterCore+0xdc>
 801917c:	ed9f 8a0e 	vldr	s16, [pc, #56]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019180:	e72c      	b.n	8018fdc <awe_vecAGCLimiterCore+0xec>
 8019182:	f1b9 0f00 	cmp.w	r9, #0
 8019186:	f000 821f 	beq.w	80195c8 <awe_vecAGCLimiterCore+0x6d8>
 801918a:	eddf ca08 	vldr	s25, [pc, #32]	@ 80191ac <awe_vecAGCLimiterCore+0x2bc>
 801918e:	ed9f da08 	vldr	s26, [pc, #32]	@ 80191b0 <awe_vecAGCLimiterCore+0x2c0>
 8019192:	eddf da0a 	vldr	s27, [pc, #40]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 8019196:	ed9f 9a07 	vldr	s18, [pc, #28]	@ 80191b4 <awe_vecAGCLimiterCore+0x2c4>
 801919a:	f100 0510 	add.w	r5, r0, #16
 801919e:	f101 0410 	add.w	r4, r1, #16
 80191a2:	46cb      	mov	fp, r9
 80191a4:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 80191a8:	e0ad      	b.n	8019306 <awe_vecAGCLimiterCore+0x416>
 80191aa:	bf00      	nop
 80191ac:	00800000 	.word	0x00800000
 80191b0:	c43da61e 	.word	0xc43da61e
 80191b4:	3debc8e3 	.word	0x3debc8e3
 80191b8:	00000000 	.word	0x00000000
 80191bc:	410af967 	.word	0x410af967
 80191c0:	eef0 ea4d 	vmov.f32	s29, s26
 80191c4:	eeb4 eacc 	vcmpe.f32	s28, s24
 80191c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191cc:	bfd4      	ite	le
 80191ce:	eef0 7a4a 	vmovle.f32	s15, s20
 80191d2:	eef0 7a69 	vmovgt.f32	s15, s19
 80191d6:	ee38 8ae7 	vsub.f32	s16, s17, s15
 80191da:	ee28 8a0c 	vmul.f32	s16, s16, s24
 80191de:	eea7 8a8e 	vfma.f32	s16, s15, s28
 80191e2:	eeb0 0ac8 	vabs.f32	s0, s16
 80191e6:	eeb4 0aec 	vcmpe.f32	s0, s25
 80191ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191ee:	eeb0 ca48 	vmov.f32	s24, s16
 80191f2:	f140 80ba 	bpl.w	801936a <awe_vecAGCLimiterCore+0x47a>
 80191f6:	eeb0 ea4d 	vmov.f32	s28, s26
 80191fa:	eeb4 6acc 	vcmpe.f32	s12, s24
 80191fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019202:	bfd4      	ite	le
 8019204:	eef0 7a4a 	vmovle.f32	s15, s20
 8019208:	eef0 7a69 	vmovgt.f32	s15, s19
 801920c:	ee38 8ae7 	vsub.f32	s16, s17, s15
 8019210:	ee28 8a0c 	vmul.f32	s16, s16, s24
 8019214:	eea7 8a86 	vfma.f32	s16, s15, s12
 8019218:	eeb0 0ac8 	vabs.f32	s0, s16
 801921c:	eeb4 0aec 	vcmpe.f32	s0, s25
 8019220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019224:	f140 809c 	bpl.w	8019360 <awe_vecAGCLimiterCore+0x470>
 8019228:	eeb0 ca4d 	vmov.f32	s24, s26
 801922c:	eeb4 fac8 	vcmpe.f32	s30, s16
 8019230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019234:	bfd4      	ite	le
 8019236:	eeb0 7a4a 	vmovle.f32	s14, s20
 801923a:	eeb0 7a69 	vmovgt.f32	s14, s19
 801923e:	ee78 7ac7 	vsub.f32	s15, s17, s14
 8019242:	ee67 7a88 	vmul.f32	s15, s15, s16
 8019246:	eee7 7a0f 	vfma.f32	s15, s14, s30
 801924a:	eeb0 0ae7 	vabs.f32	s0, s15
 801924e:	eeb4 0aec 	vcmpe.f32	s0, s25
 8019252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019256:	eef0 fa67 	vmov.f32	s31, s15
 801925a:	d57c      	bpl.n	8019356 <awe_vecAGCLimiterCore+0x466>
 801925c:	eeb0 7a4d 	vmov.f32	s14, s26
 8019260:	ee3e 0aea 	vsub.f32	s0, s29, s21
 8019264:	ee3e 6a6a 	vsub.f32	s12, s28, s21
 8019268:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801926c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019270:	bf5c      	itt	pl
 8019272:	eef0 7a4b 	vmovpl.f32	s15, s22
 8019276:	eeeb 7ac0 	vfmspl.f32	s15, s23, s0
 801927a:	f105 0510 	add.w	r5, r5, #16
 801927e:	f104 0410 	add.w	r4, r4, #16
 8019282:	ee7c 6a6a 	vsub.f32	s13, s24, s21
 8019286:	ee37 7a6a 	vsub.f32	s14, s14, s21
 801928a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801928e:	bf54      	ite	pl
 8019290:	eeb0 0a67 	vmovpl.f32	s0, s15
 8019294:	eeb0 0a4b 	vmovmi.f32	s0, s22
 8019298:	eeb0 ea4b 	vmov.f32	s28, s22
 801929c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80192a4:	bf58      	it	pl
 80192a6:	eeab eac6 	vfmspl.f32	s28, s23, s12
 80192aa:	eeb0 8a4b 	vmov.f32	s16, s22
 80192ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192b2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80192b6:	bf58      	it	pl
 80192b8:	eeab 8ae6 	vfmspl.f32	s16, s23, s13
 80192bc:	eeb0 ca4b 	vmov.f32	s24, s22
 80192c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192c4:	ee20 0a09 	vmul.f32	s0, s0, s18
 80192c8:	bf58      	it	pl
 80192ca:	eeab cac7 	vfmspl.f32	s24, s23, s14
 80192ce:	f015 fa95 	bl	802e7fc <expf>
 80192d2:	ed04 0a08 	vstr	s0, [r4, #-32]	@ 0xffffffe0
 80192d6:	ee2e 0a09 	vmul.f32	s0, s28, s18
 80192da:	f015 fa8f 	bl	802e7fc <expf>
 80192de:	ed04 0a07 	vstr	s0, [r4, #-28]	@ 0xffffffe4
 80192e2:	ee28 0a09 	vmul.f32	s0, s16, s18
 80192e6:	f015 fa89 	bl	802e7fc <expf>
 80192ea:	ee2c ca09 	vmul.f32	s24, s24, s18
 80192ee:	ed04 0a06 	vstr	s0, [r4, #-24]	@ 0xffffffe8
 80192f2:	eeb0 0a4c 	vmov.f32	s0, s24
 80192f6:	f015 fa81 	bl	802e7fc <expf>
 80192fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80192fe:	ed04 0a05 	vstr	s0, [r4, #-20]	@ 0xffffffec
 8019302:	f000 8098 	beq.w	8019436 <awe_vecAGCLimiterCore+0x546>
 8019306:	ed15 7a04 	vldr	s14, [r5, #-16]
 801930a:	ed15 ea03 	vldr	s28, [r5, #-12]
 801930e:	ed15 6a02 	vldr	s12, [r5, #-8]
 8019312:	ed15 fa01 	vldr	s30, [r5, #-4]
 8019316:	eeb4 7aef 	vcmpe.f32	s14, s31
 801931a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801931e:	bfd4      	ite	le
 8019320:	eef0 6a4a 	vmovle.f32	s13, s20
 8019324:	eef0 6a69 	vmovgt.f32	s13, s19
 8019328:	ee38 cae6 	vsub.f32	s24, s17, s13
 801932c:	ee2c ca2f 	vmul.f32	s24, s24, s31
 8019330:	eea6 ca87 	vfma.f32	s24, s13, s14
 8019334:	eeb0 0acc 	vabs.f32	s0, s24
 8019338:	eeb4 0aec 	vcmpe.f32	s0, s25
 801933c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019340:	f53f af3e 	bmi.w	80191c0 <awe_vecAGCLimiterCore+0x2d0>
 8019344:	ed8d 6a01 	vstr	s12, [sp, #4]
 8019348:	f015 faae 	bl	802e8a8 <logf>
 801934c:	ed9d 6a01 	vldr	s12, [sp, #4]
 8019350:	ee60 ea2d 	vmul.f32	s29, s0, s27
 8019354:	e736      	b.n	80191c4 <awe_vecAGCLimiterCore+0x2d4>
 8019356:	f015 faa7 	bl	802e8a8 <logf>
 801935a:	ee20 7a2d 	vmul.f32	s14, s0, s27
 801935e:	e77f      	b.n	8019260 <awe_vecAGCLimiterCore+0x370>
 8019360:	f015 faa2 	bl	802e8a8 <logf>
 8019364:	ee20 ca2d 	vmul.f32	s24, s0, s27
 8019368:	e760      	b.n	801922c <awe_vecAGCLimiterCore+0x33c>
 801936a:	ed8d 6a01 	vstr	s12, [sp, #4]
 801936e:	f015 fa9b 	bl	802e8a8 <logf>
 8019372:	ed9d 6a01 	vldr	s12, [sp, #4]
 8019376:	ee20 ea2d 	vmul.f32	s28, s0, s27
 801937a:	e73e      	b.n	80191fa <awe_vecAGCLimiterCore+0x30a>
 801937c:	f015 fa94 	bl	802e8a8 <logf>
 8019380:	ed5f 7a72 	vldr	s15, [pc, #-456]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 8019384:	ee20 0a27 	vmul.f32	s0, s0, s15
 8019388:	e6ca      	b.n	8019120 <awe_vecAGCLimiterCore+0x230>
 801938a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801938e:	f015 fa8b 	bl	802e8a8 <logf>
 8019392:	ed5f 7a76 	vldr	s15, [pc, #-472]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 8019396:	ed9d 7a01 	vldr	s14, [sp, #4]
 801939a:	ee60 8a27 	vmul.f32	s17, s0, s15
 801939e:	e6a4      	b.n	80190ea <awe_vecAGCLimiterCore+0x1fa>
 80193a0:	ed8d 7a02 	vstr	s14, [sp, #8]
 80193a4:	edcd 6a01 	vstr	s13, [sp, #4]
 80193a8:	f015 fa7e 	bl	802e8a8 <logf>
 80193ac:	ed5f 7a7d 	vldr	s15, [pc, #-500]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 80193b0:	eddd 6a01 	vldr	s13, [sp, #4]
 80193b4:	ed9d 7a02 	vldr	s14, [sp, #8]
 80193b8:	ee20 9a27 	vmul.f32	s18, s0, s15
 80193bc:	e67c      	b.n	80190b8 <awe_vecAGCLimiterCore+0x1c8>
 80193be:	ed8d 7a02 	vstr	s14, [sp, #8]
 80193c2:	edcd 6a01 	vstr	s13, [sp, #4]
 80193c6:	f015 fa6f 	bl	802e8a8 <logf>
 80193ca:	ed5f 7a84 	vldr	s15, [pc, #-528]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 80193ce:	eddd 6a01 	vldr	s13, [sp, #4]
 80193d2:	ed9d 7a02 	vldr	s14, [sp, #8]
 80193d6:	ee20 ca27 	vmul.f32	s24, s0, s15
 80193da:	e652      	b.n	8019082 <awe_vecAGCLimiterCore+0x192>
 80193dc:	eef5 6a00 	vmov.f32	s13, #80	@ 0x3e800000  0.250
 80193e0:	eef0 8a66 	vmov.f32	s17, s13
 80193e4:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
 80193e8:	eee7 8a05 	vfma.f32	s17, s14, s10
 80193ec:	ee67 6a26 	vmul.f32	s13, s14, s13
 80193f0:	eee6 8a87 	vfma.f32	s17, s13, s14
 80193f4:	ee68 8aab 	vmul.f32	s17, s17, s23
 80193f8:	e5e2      	b.n	8018fc0 <awe_vecAGCLimiterCore+0xd0>
 80193fa:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80193fe:	eeb0 9a45 	vmov.f32	s18, s10
 8019402:	eef6 4a00 	vmov.f32	s9, #96	@ 0x3f000000  0.5
 8019406:	eea6 9aa4 	vfma.f32	s18, s13, s9
 801940a:	ee26 5a85 	vmul.f32	s10, s13, s10
 801940e:	eea5 9a26 	vfma.f32	s18, s10, s13
 8019412:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8019416:	e5c5      	b.n	8018fa4 <awe_vecAGCLimiterCore+0xb4>
 8019418:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801941c:	eeb0 8a47 	vmov.f32	s16, s14
 8019420:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8019424:	eea0 8a26 	vfma.f32	s16, s0, s13
 8019428:	ee20 7a07 	vmul.f32	s14, s0, s14
 801942c:	eea7 8a00 	vfma.f32	s16, s14, s0
 8019430:	ee28 8a2b 	vmul.f32	s16, s16, s23
 8019434:	e5d2      	b.n	8018fdc <awe_vecAGCLimiterCore+0xec>
 8019436:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801943a:	444e      	add	r6, r9
 801943c:	444f      	add	r7, r9
 801943e:	f018 0803 	ands.w	r8, r8, #3
 8019442:	d040      	beq.n	80194c6 <awe_vecAGCLimiterCore+0x5d6>
 8019444:	ed5f caa7 	vldr	s25, [pc, #-668]	@ 80191ac <awe_vecAGCLimiterCore+0x2bc>
 8019448:	ed1f 9aa7 	vldr	s18, [pc, #-668]	@ 80191b0 <awe_vecAGCLimiterCore+0x2c0>
 801944c:	ed5f daa5 	vldr	s27, [pc, #-660]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 8019450:	ed1f daa7 	vldr	s26, [pc, #-668]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019454:	ed5f 8aa9 	vldr	s17, [pc, #-676]	@ 80191b4 <awe_vecAGCLimiterCore+0x2c4>
 8019458:	eb06 0888 	add.w	r8, r6, r8, lsl #2
 801945c:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 8019460:	ecb6 6a01 	vldmia	r6!, {s12}
 8019464:	eeb4 6aef 	vcmpe.f32	s12, s31
 8019468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801946c:	bfd4      	ite	le
 801946e:	eef0 5a4a 	vmovle.f32	s11, s20
 8019472:	eef0 5a69 	vmovgt.f32	s11, s19
 8019476:	ee78 6a65 	vsub.f32	s13, s16, s11
 801947a:	eeb0 7a49 	vmov.f32	s14, s18
 801947e:	ee66 7aaf 	vmul.f32	s15, s13, s31
 8019482:	eee5 7a86 	vfma.f32	s15, s11, s12
 8019486:	eeb0 0ae7 	vabs.f32	s0, s15
 801948a:	eeb4 0aec 	vcmpe.f32	s0, s25
 801948e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019492:	eef0 fa67 	vmov.f32	s31, s15
 8019496:	d521      	bpl.n	80194dc <awe_vecAGCLimiterCore+0x5ec>
 8019498:	ee37 0a6a 	vsub.f32	s0, s14, s21
 801949c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80194a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194a4:	bf5a      	itte	pl
 80194a6:	eeb0 ca4b 	vmovpl.f32	s24, s22
 80194aa:	eeab cac0 	vfmspl.f32	s24, s23, s0
 80194ae:	ee3b ca0d 	vaddmi.f32	s24, s22, s26
 80194b2:	ee2c ca28 	vmul.f32	s24, s24, s17
 80194b6:	eeb0 0a4c 	vmov.f32	s0, s24
 80194ba:	f015 f99f 	bl	802e7fc <expf>
 80194be:	4546      	cmp	r6, r8
 80194c0:	eca7 0a01 	vstmia	r7!, {s0}
 80194c4:	d1cc      	bne.n	8019460 <awe_vecAGCLimiterCore+0x570>
 80194c6:	eeb0 0a4c 	vmov.f32	s0, s24
 80194ca:	edca fa00 	vstr	s31, [sl]
 80194ce:	b005      	add	sp, #20
 80194d0:	ecbd 8b10 	vpop	{d8-d15}
 80194d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194d8:	f015 b990 	b.w	802e7fc <expf>
 80194dc:	f015 f9e4 	bl	802e8a8 <logf>
 80194e0:	ee20 7a2d 	vmul.f32	s14, s0, s27
 80194e4:	e7d8      	b.n	8019498 <awe_vecAGCLimiterCore+0x5a8>
 80194e6:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80194ea:	444e      	add	r6, r9
 80194ec:	444f      	add	r7, r9
 80194ee:	f018 0803 	ands.w	r8, r8, #3
 80194f2:	d0e8      	beq.n	80194c6 <awe_vecAGCLimiterCore+0x5d6>
 80194f4:	eddd 7a03 	vldr	s15, [sp, #12]
 80194f8:	ed1f dad4 	vldr	s26, [pc, #-848]	@ 80191ac <awe_vecAGCLimiterCore+0x2bc>
 80194fc:	ed1f 9ad4 	vldr	s18, [pc, #-848]	@ 80191b0 <awe_vecAGCLimiterCore+0x2c0>
 8019500:	ed1f ead2 	vldr	s28, [pc, #-840]	@ 80191bc <awe_vecAGCLimiterCore+0x2cc>
 8019504:	ed5f dad4 	vldr	s27, [pc, #-848]	@ 80191b8 <awe_vecAGCLimiterCore+0x2c8>
 8019508:	ed5f 8ad6 	vldr	s17, [pc, #-856]	@ 80191b4 <awe_vecAGCLimiterCore+0x2c4>
 801950c:	eef1 ea67 	vneg.f32	s29, s15
 8019510:	eb06 0888 	add.w	r8, r6, r8, lsl #2
 8019514:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 8019518:	ecb6 6a01 	vldmia	r6!, {s12}
 801951c:	eeb4 6aef 	vcmpe.f32	s12, s31
 8019520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019524:	bfd4      	ite	le
 8019526:	eef0 5a4a 	vmovle.f32	s11, s20
 801952a:	eef0 5a69 	vmovgt.f32	s11, s19
 801952e:	ee78 6a65 	vsub.f32	s13, s16, s11
 8019532:	eeb0 7a49 	vmov.f32	s14, s18
 8019536:	ee66 7aaf 	vmul.f32	s15, s13, s31
 801953a:	eee5 7a86 	vfma.f32	s15, s11, s12
 801953e:	eeb0 0ae7 	vabs.f32	s0, s15
 8019542:	eeb4 0acd 	vcmpe.f32	s0, s26
 8019546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801954a:	eef0 fa67 	vmov.f32	s31, s15
 801954e:	d533      	bpl.n	80195b8 <awe_vecAGCLimiterCore+0x6c8>
 8019550:	ee37 0a6a 	vsub.f32	s0, s14, s21
 8019554:	eeff 6a00 	vmov.f32	s13, #240	@ 0xbf800000 -1.0
 8019558:	ee20 0a2c 	vmul.f32	s0, s0, s25
 801955c:	eeb4 0ae6 	vcmpe.f32	s0, s13
 8019560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019564:	d425      	bmi.n	80195b2 <awe_vecAGCLimiterCore+0x6c2>
 8019566:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801956a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801956e:	dc0f      	bgt.n	8019590 <awe_vecAGCLimiterCore+0x6a0>
 8019570:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 8019574:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8019578:	eef0 7a47 	vmov.f32	s15, s14
 801957c:	eee0 7a26 	vfma.f32	s15, s0, s13
 8019580:	ee20 7a07 	vmul.f32	s14, s0, s14
 8019584:	eef0 6a67 	vmov.f32	s13, s15
 8019588:	eee7 6a00 	vfma.f32	s13, s14, s0
 801958c:	eeb0 0a66 	vmov.f32	s0, s13
 8019590:	ee20 0a2b 	vmul.f32	s0, s0, s23
 8019594:	eeb0 ca4b 	vmov.f32	s24, s22
 8019598:	eea0 ca2e 	vfma.f32	s24, s0, s29
 801959c:	ee2c ca28 	vmul.f32	s24, s24, s17
 80195a0:	eeb0 0a4c 	vmov.f32	s0, s24
 80195a4:	f015 f92a 	bl	802e7fc <expf>
 80195a8:	4546      	cmp	r6, r8
 80195aa:	eca7 0a01 	vstmia	r7!, {s0}
 80195ae:	d1b3      	bne.n	8019518 <awe_vecAGCLimiterCore+0x628>
 80195b0:	e789      	b.n	80194c6 <awe_vecAGCLimiterCore+0x5d6>
 80195b2:	eeb0 0a6d 	vmov.f32	s0, s27
 80195b6:	e7ed      	b.n	8019594 <awe_vecAGCLimiterCore+0x6a4>
 80195b8:	f015 f976 	bl	802e8a8 <logf>
 80195bc:	ee20 7a0e 	vmul.f32	s14, s0, s28
 80195c0:	e7c6      	b.n	8019550 <awe_vecAGCLimiterCore+0x660>
 80195c2:	ed9f ca03 	vldr	s24, [pc, #12]	@ 80195d0 <awe_vecAGCLimiterCore+0x6e0>
 80195c6:	e792      	b.n	80194ee <awe_vecAGCLimiterCore+0x5fe>
 80195c8:	ed9f ca01 	vldr	s24, [pc, #4]	@ 80195d0 <awe_vecAGCLimiterCore+0x6e0>
 80195cc:	e737      	b.n	801943e <awe_vecAGCLimiterCore+0x54e>
 80195ce:	bf00      	nop
 80195d0:	00000000 	.word	0x00000000

080195d4 <awe_vecAGCLimiterCore_Nch>:
 80195d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195d8:	b08b      	sub	sp, #44	@ 0x2c
 80195da:	e9dd 7414 	ldrd	r7, r4, [sp, #80]	@ 0x50
 80195de:	2c00      	cmp	r4, #0
 80195e0:	d050      	beq.n	8019684 <awe_vecAGCLimiterCore_Nch+0xb0>
 80195e2:	469b      	mov	fp, r3
 80195e4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80195e6:	f8dd 8074 	ldr.w	r8, [sp, #116]	@ 0x74
 80195ea:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 80195ec:	f8dd 9078 	ldr.w	r9, [sp, #120]	@ 0x78
 80195f0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80195f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80195f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80195f8:	9307      	str	r3, [sp, #28]
 80195fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80195fc:	9306      	str	r3, [sp, #24]
 80195fe:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8019600:	9305      	str	r3, [sp, #20]
 8019602:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8019604:	9304      	str	r3, [sp, #16]
 8019606:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019608:	9303      	str	r3, [sp, #12]
 801960a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801960c:	9308      	str	r3, [sp, #32]
 801960e:	4692      	mov	sl, r2
 8019610:	4604      	mov	r4, r0
 8019612:	460d      	mov	r5, r1
 8019614:	4620      	mov	r0, r4
 8019616:	2301      	movs	r3, #1
 8019618:	4652      	mov	r2, sl
 801961a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801961c:	9700      	str	r7, [sp, #0]
 801961e:	f001 fd21 	bl	801b064 <awe_vecCopy32>
 8019622:	9b08      	ldr	r3, [sp, #32]
 8019624:	ecb8 3a01 	vldmia	r8!, {s6}
 8019628:	ecf3 2a01 	vldmia	r3!, {s5}
 801962c:	9308      	str	r3, [sp, #32]
 801962e:	9b03      	ldr	r3, [sp, #12]
 8019630:	ecb3 2a01 	vldmia	r3!, {s4}
 8019634:	9303      	str	r3, [sp, #12]
 8019636:	9b04      	ldr	r3, [sp, #16]
 8019638:	ecf3 1a01 	vldmia	r3!, {s3}
 801963c:	9304      	str	r3, [sp, #16]
 801963e:	9b05      	ldr	r3, [sp, #20]
 8019640:	ecb3 1a01 	vldmia	r3!, {s2}
 8019644:	9305      	str	r3, [sp, #20]
 8019646:	9b06      	ldr	r3, [sp, #24]
 8019648:	ecf3 0a01 	vldmia	r3!, {s1}
 801964c:	9306      	str	r3, [sp, #24]
 801964e:	9b07      	ldr	r3, [sp, #28]
 8019650:	ecb3 0a01 	vldmia	r3!, {s0}
 8019654:	463a      	mov	r2, r7
 8019656:	9307      	str	r3, [sp, #28]
 8019658:	4659      	mov	r1, fp
 801965a:	4633      	mov	r3, r6
 801965c:	4650      	mov	r0, sl
 801965e:	f7ff fc47 	bl	8018ef0 <awe_vecAGCLimiterCore>
 8019662:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019664:	eca9 0a01 	vstmia	r9!, {s0}
 8019668:	462a      	mov	r2, r5
 801966a:	9700      	str	r7, [sp, #0]
 801966c:	2101      	movs	r1, #1
 801966e:	4658      	mov	r0, fp
 8019670:	f001 fcf8 	bl	801b064 <awe_vecCopy32>
 8019674:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019676:	3404      	adds	r4, #4
 8019678:	429c      	cmp	r4, r3
 801967a:	f106 0604 	add.w	r6, r6, #4
 801967e:	f105 0504 	add.w	r5, r5, #4
 8019682:	d1c7      	bne.n	8019614 <awe_vecAGCLimiterCore_Nch+0x40>
 8019684:	b00b      	add	sp, #44	@ 0x2c
 8019686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801968a:	bf00      	nop

0801968c <awe_vecAnd2x1>:
 801968c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801968e:	9f07      	ldr	r7, [sp, #28]
 8019690:	9d05      	ldr	r5, [sp, #20]
 8019692:	2f00      	cmp	r7, #0
 8019694:	dd10      	ble.n	80196b8 <awe_vecAnd2x1+0x2c>
 8019696:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801969a:	9b06      	ldr	r3, [sp, #24]
 801969c:	0089      	lsls	r1, r1, #2
 801969e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 80196a2:	2600      	movs	r6, #0
 80196a4:	6804      	ldr	r4, [r0, #0]
 80196a6:	6813      	ldr	r3, [r2, #0]
 80196a8:	3601      	adds	r6, #1
 80196aa:	401c      	ands	r4, r3
 80196ac:	42b7      	cmp	r7, r6
 80196ae:	602c      	str	r4, [r5, #0]
 80196b0:	4408      	add	r0, r1
 80196b2:	4472      	add	r2, lr
 80196b4:	4465      	add	r5, ip
 80196b6:	d1f5      	bne.n	80196a4 <awe_vecAnd2x1+0x18>
 80196b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80196ba:	bf00      	nop

080196bc <awe_vecAndConstInt32>:
 80196bc:	ea5f 0ca3 	movs.w	ip, r3, asr #2
 80196c0:	b4f0      	push	{r4, r5, r6, r7}
 80196c2:	d023      	beq.n	801970c <awe_vecAndConstInt32+0x50>
 80196c4:	f100 0510 	add.w	r5, r0, #16
 80196c8:	f101 0410 	add.w	r4, r1, #16
 80196cc:	4667      	mov	r7, ip
 80196ce:	f855 6c10 	ldr.w	r6, [r5, #-16]
 80196d2:	4016      	ands	r6, r2
 80196d4:	f844 6c10 	str.w	r6, [r4, #-16]
 80196d8:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 80196dc:	4016      	ands	r6, r2
 80196de:	f844 6c0c 	str.w	r6, [r4, #-12]
 80196e2:	f855 6c08 	ldr.w	r6, [r5, #-8]
 80196e6:	4016      	ands	r6, r2
 80196e8:	f844 6c08 	str.w	r6, [r4, #-8]
 80196ec:	f855 6c04 	ldr.w	r6, [r5, #-4]
 80196f0:	3f01      	subs	r7, #1
 80196f2:	ea06 0602 	and.w	r6, r6, r2
 80196f6:	f844 6c04 	str.w	r6, [r4, #-4]
 80196fa:	f105 0510 	add.w	r5, r5, #16
 80196fe:	f104 0410 	add.w	r4, r4, #16
 8019702:	d1e4      	bne.n	80196ce <awe_vecAndConstInt32+0x12>
 8019704:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8019708:	4460      	add	r0, ip
 801970a:	4461      	add	r1, ip
 801970c:	f013 0303 	ands.w	r3, r3, #3
 8019710:	d00e      	beq.n	8019730 <awe_vecAndConstInt32+0x74>
 8019712:	6804      	ldr	r4, [r0, #0]
 8019714:	2b01      	cmp	r3, #1
 8019716:	ea04 0402 	and.w	r4, r4, r2
 801971a:	600c      	str	r4, [r1, #0]
 801971c:	d008      	beq.n	8019730 <awe_vecAndConstInt32+0x74>
 801971e:	6844      	ldr	r4, [r0, #4]
 8019720:	2b02      	cmp	r3, #2
 8019722:	ea04 0402 	and.w	r4, r4, r2
 8019726:	604c      	str	r4, [r1, #4]
 8019728:	d002      	beq.n	8019730 <awe_vecAndConstInt32+0x74>
 801972a:	6883      	ldr	r3, [r0, #8]
 801972c:	401a      	ands	r2, r3
 801972e:	608a      	str	r2, [r1, #8]
 8019730:	bcf0      	pop	{r4, r5, r6, r7}
 8019732:	4770      	bx	lr

08019734 <awe_vecAsin>:
 8019734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019738:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801973c:	f1b9 0f00 	cmp.w	r9, #0
 8019740:	dd10      	ble.n	8019764 <awe_vecAsin+0x30>
 8019742:	4604      	mov	r4, r0
 8019744:	4615      	mov	r5, r2
 8019746:	ea4f 0881 	mov.w	r8, r1, lsl #2
 801974a:	009f      	lsls	r7, r3, #2
 801974c:	2600      	movs	r6, #0
 801974e:	ed94 0a00 	vldr	s0, [r4]
 8019752:	f014 fffd 	bl	802e750 <asinf>
 8019756:	3601      	adds	r6, #1
 8019758:	45b1      	cmp	r9, r6
 801975a:	ed85 0a00 	vstr	s0, [r5]
 801975e:	4444      	add	r4, r8
 8019760:	443d      	add	r5, r7
 8019762:	d1f4      	bne.n	801974e <awe_vecAsin+0x1a>
 8019764:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08019768 <awe_vecAttackRelease>:
 8019768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801976c:	b085      	sub	sp, #20
 801976e:	e9cd 1302 	strd	r1, r3, [sp, #8]
 8019772:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019774:	edd4 7a00 	vldr	s15, [r4]
 8019778:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801977a:	10e6      	asrs	r6, r4, #3
 801977c:	9601      	str	r6, [sp, #4]
 801977e:	f000 80d6 	beq.w	801992e <awe_vecAttackRelease+0x1c6>
 8019782:	009d      	lsls	r5, r3, #2
 8019784:	ea4f 0bc3 	mov.w	fp, r3, lsl #3
 8019788:	eb0b 0905 	add.w	r9, fp, r5
 801978c:	46b6      	mov	lr, r6
 801978e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019792:	eb02 0c05 	add.w	ip, r2, r5
 8019796:	008c      	lsls	r4, r1, #2
 8019798:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801979c:	ea4f 1a41 	mov.w	sl, r1, lsl #5
 80197a0:	4617      	mov	r7, r2
 80197a2:	4606      	mov	r6, r0
 80197a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80197a8:	edd6 5a00 	vldr	s11, [r6]
 80197ac:	eef0 5ae5 	vabs.f32	s11, s11
 80197b0:	eef4 5ae7 	vcmpe.f32	s11, s15
 80197b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197b8:	bfd4      	ite	le
 80197ba:	eeb0 5a60 	vmovle.f32	s10, s1
 80197be:	eeb0 5a40 	vmovgt.f32	s10, s0
 80197c2:	ee36 7ac5 	vsub.f32	s14, s13, s10
 80197c6:	1933      	adds	r3, r6, r4
 80197c8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80197cc:	ed93 6a00 	vldr	s12, [r3]
 80197d0:	eee5 7a25 	vfma.f32	s15, s10, s11
 80197d4:	4423      	add	r3, r4
 80197d6:	1919      	adds	r1, r3, r4
 80197d8:	eeb0 6ac6 	vabs.f32	s12, s12
 80197dc:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80197e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197e4:	bfd4      	ite	le
 80197e6:	eeb0 5a60 	vmovle.f32	s10, s1
 80197ea:	eeb0 5a40 	vmovgt.f32	s10, s0
 80197ee:	ee36 7ac5 	vsub.f32	s14, s13, s10
 80197f2:	edc7 7a00 	vstr	s15, [r7]
 80197f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80197fa:	edd3 5a00 	vldr	s11, [r3]
 80197fe:	eee5 7a06 	vfma.f32	s15, s10, s12
 8019802:	eb07 030b 	add.w	r3, r7, fp
 8019806:	4456      	add	r6, sl
 8019808:	eef0 5ae5 	vabs.f32	s11, s11
 801980c:	eef4 5ae7 	vcmpe.f32	s11, s15
 8019810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019814:	bfd4      	ite	le
 8019816:	eeb0 5a60 	vmovle.f32	s10, s1
 801981a:	eeb0 5a40 	vmovgt.f32	s10, s0
 801981e:	ee36 7ac5 	vsub.f32	s14, s13, s10
 8019822:	edcc 7a00 	vstr	s15, [ip]
 8019826:	ee67 7a27 	vmul.f32	s15, s14, s15
 801982a:	ed91 6a00 	vldr	s12, [r1]
 801982e:	eee5 7a25 	vfma.f32	s15, s10, s11
 8019832:	4421      	add	r1, r4
 8019834:	4447      	add	r7, r8
 8019836:	eeb0 6ac6 	vabs.f32	s12, s12
 801983a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801983e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019842:	bfd4      	ite	le
 8019844:	eeb0 5a60 	vmovle.f32	s10, s1
 8019848:	eeb0 5a40 	vmovgt.f32	s10, s0
 801984c:	ee36 7ac5 	vsub.f32	s14, s13, s10
 8019850:	edc3 7a00 	vstr	s15, [r3]
 8019854:	ee67 7a27 	vmul.f32	s15, s14, s15
 8019858:	edd1 5a00 	vldr	s11, [r1]
 801985c:	eee5 7a06 	vfma.f32	s15, s10, s12
 8019860:	442b      	add	r3, r5
 8019862:	4421      	add	r1, r4
 8019864:	eef0 5ae5 	vabs.f32	s11, s11
 8019868:	eef4 5ae7 	vcmpe.f32	s11, s15
 801986c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019870:	bfd4      	ite	le
 8019872:	eeb0 5a60 	vmovle.f32	s10, s1
 8019876:	eeb0 5a40 	vmovgt.f32	s10, s0
 801987a:	ee36 7ac5 	vsub.f32	s14, s13, s10
 801987e:	edc3 7a00 	vstr	s15, [r3]
 8019882:	ee67 7a27 	vmul.f32	s15, s14, s15
 8019886:	ed91 6a00 	vldr	s12, [r1]
 801988a:	eee5 7a25 	vfma.f32	s15, s10, s11
 801988e:	442b      	add	r3, r5
 8019890:	4421      	add	r1, r4
 8019892:	eeb0 6ac6 	vabs.f32	s12, s12
 8019896:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801989a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801989e:	bfd4      	ite	le
 80198a0:	eeb0 5a60 	vmovle.f32	s10, s1
 80198a4:	eeb0 5a40 	vmovgt.f32	s10, s0
 80198a8:	ee36 7ac5 	vsub.f32	s14, s13, s10
 80198ac:	edc3 7a00 	vstr	s15, [r3]
 80198b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80198b4:	edd1 5a00 	vldr	s11, [r1]
 80198b8:	eee5 7a06 	vfma.f32	s15, s10, s12
 80198bc:	442b      	add	r3, r5
 80198be:	4421      	add	r1, r4
 80198c0:	eef0 5ae5 	vabs.f32	s11, s11
 80198c4:	eef4 7ae5 	vcmpe.f32	s15, s11
 80198c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198cc:	bf54      	ite	pl
 80198ce:	eeb0 5a60 	vmovpl.f32	s10, s1
 80198d2:	eeb0 5a40 	vmovmi.f32	s10, s0
 80198d6:	ee36 7ac5 	vsub.f32	s14, s13, s10
 80198da:	edc3 7a00 	vstr	s15, [r3]
 80198de:	ee67 7a27 	vmul.f32	s15, s14, s15
 80198e2:	ed91 6a00 	vldr	s12, [r1]
 80198e6:	eee5 7a85 	vfma.f32	s15, s11, s10
 80198ea:	442b      	add	r3, r5
 80198ec:	eb0c 0109 	add.w	r1, ip, r9
 80198f0:	eeb0 6ac6 	vabs.f32	s12, s12
 80198f4:	eef4 7ac6 	vcmpe.f32	s15, s12
 80198f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198fc:	bf54      	ite	pl
 80198fe:	eef0 5a60 	vmovpl.f32	s11, s1
 8019902:	eef0 5a40 	vmovmi.f32	s11, s0
 8019906:	ee36 7ae5 	vsub.f32	s14, s13, s11
 801990a:	edc3 7a00 	vstr	s15, [r3]
 801990e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8019912:	f1be 0e01 	subs.w	lr, lr, #1
 8019916:	eee6 7a25 	vfma.f32	s15, s12, s11
 801991a:	44c4      	add	ip, r8
 801991c:	edc1 7a00 	vstr	s15, [r1]
 8019920:	f47f af42 	bne.w	80197a8 <awe_vecAttackRelease+0x40>
 8019924:	9b01      	ldr	r3, [sp, #4]
 8019926:	fb0a 0003 	mla	r0, sl, r3, r0
 801992a:	fb08 2203 	mla	r2, r8, r3, r2
 801992e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019930:	f013 0407 	ands.w	r4, r3, #7
 8019934:	f000 80b5 	beq.w	8019aa2 <awe_vecAttackRelease+0x33a>
 8019938:	edd0 6a00 	vldr	s13, [r0]
 801993c:	9b02      	ldr	r3, [sp, #8]
 801993e:	eef0 6ae6 	vabs.f32	s13, s13
 8019942:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801994a:	bf54      	ite	pl
 801994c:	eef0 5a60 	vmovpl.f32	s11, s1
 8019950:	eef0 5a40 	vmovmi.f32	s11, s0
 8019954:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019958:	ee37 6a65 	vsub.f32	s12, s14, s11
 801995c:	0099      	lsls	r1, r3, #2
 801995e:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019962:	9b03      	ldr	r3, [sp, #12]
 8019964:	eee6 7aa5 	vfma.f32	s15, s13, s11
 8019968:	009b      	lsls	r3, r3, #2
 801996a:	2c01      	cmp	r4, #1
 801996c:	4408      	add	r0, r1
 801996e:	eb02 0503 	add.w	r5, r2, r3
 8019972:	edc2 7a00 	vstr	s15, [r2]
 8019976:	f000 8094 	beq.w	8019aa2 <awe_vecAttackRelease+0x33a>
 801997a:	edd0 6a00 	vldr	s13, [r0]
 801997e:	eef0 6ae6 	vabs.f32	s13, s13
 8019982:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801998a:	bf54      	ite	pl
 801998c:	eef0 5a60 	vmovpl.f32	s11, s1
 8019990:	eef0 5a40 	vmovmi.f32	s11, s0
 8019994:	ee37 6a65 	vsub.f32	s12, s14, s11
 8019998:	2c02      	cmp	r4, #2
 801999a:	ee66 7a27 	vmul.f32	s15, s12, s15
 801999e:	4408      	add	r0, r1
 80199a0:	eee6 7aa5 	vfma.f32	s15, s13, s11
 80199a4:	eb05 0203 	add.w	r2, r5, r3
 80199a8:	edc5 7a00 	vstr	s15, [r5]
 80199ac:	d079      	beq.n	8019aa2 <awe_vecAttackRelease+0x33a>
 80199ae:	edd0 6a00 	vldr	s13, [r0]
 80199b2:	eef0 6ae6 	vabs.f32	s13, s13
 80199b6:	eef4 7ae6 	vcmpe.f32	s15, s13
 80199ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199be:	bf54      	ite	pl
 80199c0:	eef0 5a60 	vmovpl.f32	s11, s1
 80199c4:	eef0 5a40 	vmovmi.f32	s11, s0
 80199c8:	ee37 6a65 	vsub.f32	s12, s14, s11
 80199cc:	2c03      	cmp	r4, #3
 80199ce:	ee66 7a27 	vmul.f32	s15, s12, s15
 80199d2:	4408      	add	r0, r1
 80199d4:	eee5 7aa6 	vfma.f32	s15, s11, s13
 80199d8:	eb02 0503 	add.w	r5, r2, r3
 80199dc:	edc2 7a00 	vstr	s15, [r2]
 80199e0:	d05f      	beq.n	8019aa2 <awe_vecAttackRelease+0x33a>
 80199e2:	edd0 6a00 	vldr	s13, [r0]
 80199e6:	eef0 6ae6 	vabs.f32	s13, s13
 80199ea:	eef4 7ae6 	vcmpe.f32	s15, s13
 80199ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199f2:	bf54      	ite	pl
 80199f4:	eef0 5a60 	vmovpl.f32	s11, s1
 80199f8:	eef0 5a40 	vmovmi.f32	s11, s0
 80199fc:	ee37 6a65 	vsub.f32	s12, s14, s11
 8019a00:	2c04      	cmp	r4, #4
 8019a02:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019a06:	4408      	add	r0, r1
 8019a08:	eee5 7aa6 	vfma.f32	s15, s11, s13
 8019a0c:	eb05 0203 	add.w	r2, r5, r3
 8019a10:	edc5 7a00 	vstr	s15, [r5]
 8019a14:	d045      	beq.n	8019aa2 <awe_vecAttackRelease+0x33a>
 8019a16:	edd0 6a00 	vldr	s13, [r0]
 8019a1a:	eef0 6ae6 	vabs.f32	s13, s13
 8019a1e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019a22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a26:	bf54      	ite	pl
 8019a28:	eef0 5a60 	vmovpl.f32	s11, s1
 8019a2c:	eef0 5a40 	vmovmi.f32	s11, s0
 8019a30:	ee37 6a65 	vsub.f32	s12, s14, s11
 8019a34:	2c05      	cmp	r4, #5
 8019a36:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019a3a:	4408      	add	r0, r1
 8019a3c:	eee6 7aa5 	vfma.f32	s15, s13, s11
 8019a40:	eb02 0503 	add.w	r5, r2, r3
 8019a44:	edc2 7a00 	vstr	s15, [r2]
 8019a48:	d02b      	beq.n	8019aa2 <awe_vecAttackRelease+0x33a>
 8019a4a:	edd0 6a00 	vldr	s13, [r0]
 8019a4e:	eef0 6ae6 	vabs.f32	s13, s13
 8019a52:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a5a:	bf54      	ite	pl
 8019a5c:	eef0 5a60 	vmovpl.f32	s11, s1
 8019a60:	eef0 5a40 	vmovmi.f32	s11, s0
 8019a64:	ee37 6a65 	vsub.f32	s12, s14, s11
 8019a68:	2c06      	cmp	r4, #6
 8019a6a:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019a6e:	4408      	add	r0, r1
 8019a70:	eee6 7aa5 	vfma.f32	s15, s13, s11
 8019a74:	442b      	add	r3, r5
 8019a76:	edc5 7a00 	vstr	s15, [r5]
 8019a7a:	d012      	beq.n	8019aa2 <awe_vecAttackRelease+0x33a>
 8019a7c:	edd0 6a00 	vldr	s13, [r0]
 8019a80:	eef0 6ae6 	vabs.f32	s13, s13
 8019a84:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a8c:	bf58      	it	pl
 8019a8e:	eeb0 0a60 	vmovpl.f32	s0, s1
 8019a92:	ee37 7a40 	vsub.f32	s14, s14, s0
 8019a96:	ee67 7a27 	vmul.f32	s15, s14, s15
 8019a9a:	eee0 7a26 	vfma.f32	s15, s0, s13
 8019a9e:	edc3 7a00 	vstr	s15, [r3]
 8019aa2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019aa4:	edc3 7a00 	vstr	s15, [r3]
 8019aa8:	b005      	add	sp, #20
 8019aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019aae:	bf00      	nop

08019ab0 <awe_vecBiquad>:
 8019ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ab4:	ed2d 8b08 	vpush	{d8-d11}
 8019ab8:	b085      	sub	sp, #20
 8019aba:	9103      	str	r1, [sp, #12]
 8019abc:	9302      	str	r3, [sp, #8]
 8019abe:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019ac0:	edd3 3a00 	vldr	s7, [r3]
 8019ac4:	ed93 3a01 	vldr	s6, [r3, #4]
 8019ac8:	edd3 2a02 	vldr	s5, [r3, #8]
 8019acc:	edd3 4a03 	vldr	s9, [r3, #12]
 8019ad0:	ed93 4a04 	vldr	s8, [r3, #16]
 8019ad4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019ad6:	edd3 5a00 	vldr	s11, [r3]
 8019ada:	edd3 7a01 	vldr	s15, [r3, #4]
 8019ade:	eef1 4a64 	vneg.f32	s9, s9
 8019ae2:	eeb1 4a44 	vneg.f32	s8, s8
 8019ae6:	4b9e      	ldr	r3, [pc, #632]	@ (8019d60 <awe_vecBiquad+0x2b0>)
 8019ae8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8019aea:	fba3 4304 	umull	r4, r3, r3, r4
 8019aee:	085b      	lsrs	r3, r3, #1
 8019af0:	9301      	str	r3, [sp, #4]
 8019af2:	469e      	mov	lr, r3
 8019af4:	2901      	cmp	r1, #1
 8019af6:	f000 8135 	beq.w	8019d64 <awe_vecBiquad+0x2b4>
 8019afa:	9b01      	ldr	r3, [sp, #4]
 8019afc:	2b00      	cmp	r3, #0
 8019afe:	f000 80f6 	beq.w	8019cee <awe_vecBiquad+0x23e>
 8019b02:	9e03      	ldr	r6, [sp, #12]
 8019b04:	00b1      	lsls	r1, r6, #2
 8019b06:	9f02      	ldr	r7, [sp, #8]
 8019b08:	00bb      	lsls	r3, r7, #2
 8019b0a:	eb01 1846 	add.w	r8, r1, r6, lsl #5
 8019b0e:	1844      	adds	r4, r0, r1
 8019b10:	1865      	adds	r5, r4, r1
 8019b12:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8019b16:	ea4f 0941 	mov.w	r9, r1, lsl #1
 8019b1a:	eb03 1b47 	add.w	fp, r3, r7, lsl #5
 8019b1e:	4694      	mov	ip, r2
 8019b20:	4607      	mov	r7, r0
 8019b22:	ed97 6a00 	vldr	s12, [r7]
 8019b26:	187e      	adds	r6, r7, r1
 8019b28:	4447      	add	r7, r8
 8019b2a:	ee24 7aa5 	vmul.f32	s14, s9, s11
 8019b2e:	ee64 6a27 	vmul.f32	s13, s8, s15
 8019b32:	ee37 7a26 	vadd.f32	s14, s14, s13
 8019b36:	ee36 7a07 	vadd.f32	s14, s12, s14
 8019b3a:	ee23 6a25 	vmul.f32	s12, s6, s11
 8019b3e:	ee63 6a87 	vmul.f32	s13, s7, s14
 8019b42:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019b46:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019b4a:	ee77 6aa6 	vadd.f32	s13, s15, s13
 8019b4e:	ee24 1a25 	vmul.f32	s2, s8, s11
 8019b52:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019b56:	ee31 1a27 	vadd.f32	s2, s2, s15
 8019b5a:	edd4 7a00 	vldr	s15, [r4]
 8019b5e:	ee31 1a27 	vadd.f32	s2, s2, s15
 8019b62:	ee23 0a07 	vmul.f32	s0, s6, s14
 8019b66:	ee63 7a81 	vmul.f32	s15, s7, s2
 8019b6a:	ee70 7a27 	vadd.f32	s15, s0, s15
 8019b6e:	ee62 5aa5 	vmul.f32	s11, s5, s11
 8019b72:	ee35 0aa7 	vadd.f32	s0, s11, s15
 8019b76:	ee64 1a07 	vmul.f32	s3, s8, s14
 8019b7a:	ee64 7a81 	vmul.f32	s15, s9, s2
 8019b7e:	ee71 1aa7 	vadd.f32	s3, s3, s15
 8019b82:	edd5 7a00 	vldr	s15, [r5]
 8019b86:	ee71 1aa7 	vadd.f32	s3, s3, s15
 8019b8a:	ee63 0a01 	vmul.f32	s1, s6, s2
 8019b8e:	ee63 7aa1 	vmul.f32	s15, s7, s3
 8019b92:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8019b96:	ee24 2a01 	vmul.f32	s4, s8, s2
 8019b9a:	ee64 7aa1 	vmul.f32	s15, s9, s3
 8019b9e:	ee32 2a27 	vadd.f32	s4, s4, s15
 8019ba2:	edd6 7a00 	vldr	s15, [r6]
 8019ba6:	ee32 2a27 	vadd.f32	s4, s4, s15
 8019baa:	ee23 8a21 	vmul.f32	s16, s6, s3
 8019bae:	ee63 7a82 	vmul.f32	s15, s7, s4
 8019bb2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8019bb6:	ee24 5a21 	vmul.f32	s10, s8, s3
 8019bba:	ee64 7a82 	vmul.f32	s15, s9, s4
 8019bbe:	ee35 5a27 	vadd.f32	s10, s10, s15
 8019bc2:	eb04 0a01 	add.w	sl, r4, r1
 8019bc6:	edda 7a00 	vldr	s15, [sl]
 8019bca:	ee35 5a27 	vadd.f32	s10, s10, s15
 8019bce:	ee63 8a02 	vmul.f32	s17, s6, s4
 8019bd2:	ee63 7a85 	vmul.f32	s15, s7, s10
 8019bd6:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8019bda:	ee24 6a02 	vmul.f32	s12, s8, s4
 8019bde:	ee64 7a85 	vmul.f32	s15, s9, s10
 8019be2:	ee36 6a27 	vadd.f32	s12, s12, s15
 8019be6:	eb05 0a01 	add.w	sl, r5, r1
 8019bea:	edda 7a00 	vldr	s15, [sl]
 8019bee:	ee36 6a27 	vadd.f32	s12, s12, s15
 8019bf2:	ee23 9a05 	vmul.f32	s18, s6, s10
 8019bf6:	ee63 7a86 	vmul.f32	s15, s7, s12
 8019bfa:	ee39 9a27 	vadd.f32	s18, s18, s15
 8019bfe:	ee24 aa05 	vmul.f32	s20, s8, s10
 8019c02:	ee64 7a86 	vmul.f32	s15, s9, s12
 8019c06:	ee7a 7a27 	vadd.f32	s15, s20, s15
 8019c0a:	440e      	add	r6, r1
 8019c0c:	ed96 aa00 	vldr	s20, [r6]
 8019c10:	ee37 aa8a 	vadd.f32	s20, s15, s20
 8019c14:	ee63 9a06 	vmul.f32	s19, s6, s12
 8019c18:	ee63 7a8a 	vmul.f32	s15, s7, s20
 8019c1c:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8019c20:	ee64 5a06 	vmul.f32	s11, s8, s12
 8019c24:	ee64 7a8a 	vmul.f32	s15, s9, s20
 8019c28:	ee75 7aa7 	vadd.f32	s15, s11, s15
 8019c2c:	eb04 0609 	add.w	r6, r4, r9
 8019c30:	edd6 5a00 	vldr	s11, [r6]
 8019c34:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8019c38:	ee63 aa0a 	vmul.f32	s21, s6, s20
 8019c3c:	ee63 5aa7 	vmul.f32	s11, s7, s15
 8019c40:	ee7a aaa5 	vadd.f32	s21, s21, s11
 8019c44:	ee24 ba0a 	vmul.f32	s22, s8, s20
 8019c48:	ee64 5aa7 	vmul.f32	s11, s9, s15
 8019c4c:	ee7b 5a25 	vadd.f32	s11, s22, s11
 8019c50:	eb05 0609 	add.w	r6, r5, r9
 8019c54:	ed96 ba00 	vldr	s22, [r6]
 8019c58:	ee75 5a8b 	vadd.f32	s11, s11, s22
 8019c5c:	edcc 6a00 	vstr	s13, [ip]
 8019c60:	ee23 ba27 	vmul.f32	s22, s6, s15
 8019c64:	ee63 6aa5 	vmul.f32	s13, s7, s11
 8019c68:	ee7b 6a26 	vadd.f32	s13, s22, s13
 8019c6c:	eb0c 0603 	add.w	r6, ip, r3
 8019c70:	ed86 0a00 	vstr	s0, [r6]
 8019c74:	441e      	add	r6, r3
 8019c76:	ee22 0a87 	vmul.f32	s0, s5, s14
 8019c7a:	ee70 0a20 	vadd.f32	s1, s0, s1
 8019c7e:	edc6 0a00 	vstr	s1, [r6]
 8019c82:	441e      	add	r6, r3
 8019c84:	ee22 1a81 	vmul.f32	s2, s5, s2
 8019c88:	ee31 1a08 	vadd.f32	s2, s2, s16
 8019c8c:	ed86 1a00 	vstr	s2, [r6]
 8019c90:	441e      	add	r6, r3
 8019c92:	ee62 1aa1 	vmul.f32	s3, s5, s3
 8019c96:	ee71 1aa8 	vadd.f32	s3, s3, s17
 8019c9a:	edc6 1a00 	vstr	s3, [r6]
 8019c9e:	441e      	add	r6, r3
 8019ca0:	ee22 2a82 	vmul.f32	s4, s5, s4
 8019ca4:	ee32 2a09 	vadd.f32	s4, s4, s18
 8019ca8:	ed86 2a00 	vstr	s4, [r6]
 8019cac:	441e      	add	r6, r3
 8019cae:	ee22 5a85 	vmul.f32	s10, s5, s10
 8019cb2:	ee35 5a29 	vadd.f32	s10, s10, s19
 8019cb6:	ed86 5a00 	vstr	s10, [r6]
 8019cba:	441e      	add	r6, r3
 8019cbc:	ee22 6a86 	vmul.f32	s12, s5, s12
 8019cc0:	ee36 6a2a 	vadd.f32	s12, s12, s21
 8019cc4:	ed86 6a00 	vstr	s12, [r6]
 8019cc8:	441e      	add	r6, r3
 8019cca:	ee22 7a8a 	vmul.f32	s14, s5, s20
 8019cce:	ee37 7a26 	vadd.f32	s14, s14, s13
 8019cd2:	ed86 7a00 	vstr	s14, [r6]
 8019cd6:	44dc      	add	ip, fp
 8019cd8:	4444      	add	r4, r8
 8019cda:	4445      	add	r5, r8
 8019cdc:	f1be 0e01 	subs.w	lr, lr, #1
 8019ce0:	f47f af1f 	bne.w	8019b22 <awe_vecBiquad+0x72>
 8019ce4:	9b01      	ldr	r3, [sp, #4]
 8019ce6:	fb08 0003 	mla	r0, r8, r3, r0
 8019cea:	fb0b 2203 	mla	r2, fp, r3, r2
 8019cee:	4c1c      	ldr	r4, [pc, #112]	@ (8019d60 <awe_vecBiquad+0x2b0>)
 8019cf0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019cf2:	fba4 3403 	umull	r3, r4, r4, r3
 8019cf6:	0864      	lsrs	r4, r4, #1
 8019cf8:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
 8019cfc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019cfe:	1b1c      	subs	r4, r3, r4
 8019d00:	f000 8136 	beq.w	8019f70 <awe_vecBiquad+0x4c0>
 8019d04:	9b03      	ldr	r3, [sp, #12]
 8019d06:	0099      	lsls	r1, r3, #2
 8019d08:	9b02      	ldr	r3, [sp, #8]
 8019d0a:	009b      	lsls	r3, r3, #2
 8019d0c:	e001      	b.n	8019d12 <awe_vecBiquad+0x262>
 8019d0e:	eef0 5a47 	vmov.f32	s11, s14
 8019d12:	edd0 6a00 	vldr	s13, [r0]
 8019d16:	4408      	add	r0, r1
 8019d18:	ee24 7aa5 	vmul.f32	s14, s9, s11
 8019d1c:	ee24 6a27 	vmul.f32	s12, s8, s15
 8019d20:	ee37 7a06 	vadd.f32	s14, s14, s12
 8019d24:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019d28:	ee63 6a25 	vmul.f32	s13, s6, s11
 8019d2c:	ee23 6a87 	vmul.f32	s12, s7, s14
 8019d30:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019d34:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019d38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019d3c:	edc2 7a00 	vstr	s15, [r2]
 8019d40:	441a      	add	r2, r3
 8019d42:	eef0 7a65 	vmov.f32	s15, s11
 8019d46:	3c01      	subs	r4, #1
 8019d48:	d1e1      	bne.n	8019d0e <awe_vecBiquad+0x25e>
 8019d4a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019d4c:	ed83 7a00 	vstr	s14, [r3]
 8019d50:	edc3 5a01 	vstr	s11, [r3, #4]
 8019d54:	b005      	add	sp, #20
 8019d56:	ecbd 8b08 	vpop	{d8-d11}
 8019d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d5e:	bf00      	nop
 8019d60:	38e38e39 	.word	0x38e38e39
 8019d64:	9b02      	ldr	r3, [sp, #8]
 8019d66:	2b01      	cmp	r3, #1
 8019d68:	f47f aec7 	bne.w	8019afa <awe_vecBiquad+0x4a>
 8019d6c:	9b01      	ldr	r3, [sp, #4]
 8019d6e:	2b00      	cmp	r3, #0
 8019d70:	f000 80d6 	beq.w	8019f20 <awe_vecBiquad+0x470>
 8019d74:	f100 0124 	add.w	r1, r0, #36	@ 0x24
 8019d78:	f102 0324 	add.w	r3, r2, #36	@ 0x24
 8019d7c:	ee64 6aa5 	vmul.f32	s13, s9, s11
 8019d80:	ee24 7a27 	vmul.f32	s14, s8, s15
 8019d84:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019d88:	ed51 6a09 	vldr	s13, [r1, #-36]	@ 0xffffffdc
 8019d8c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8019d90:	ee23 ba25 	vmul.f32	s22, s6, s11
 8019d94:	ee63 6a87 	vmul.f32	s13, s7, s14
 8019d98:	ee7b 6a26 	vadd.f32	s13, s22, s13
 8019d9c:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019da0:	ee37 baa6 	vadd.f32	s22, s15, s13
 8019da4:	ee24 1a25 	vmul.f32	s2, s8, s11
 8019da8:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019dac:	ee71 7a27 	vadd.f32	s15, s2, s15
 8019db0:	ed11 1a08 	vldr	s2, [r1, #-32]	@ 0xffffffe0
 8019db4:	ee37 1a81 	vadd.f32	s2, s15, s2
 8019db8:	ee23 0a07 	vmul.f32	s0, s6, s14
 8019dbc:	ee63 7a81 	vmul.f32	s15, s7, s2
 8019dc0:	ee70 7a27 	vadd.f32	s15, s0, s15
 8019dc4:	ee62 5aa5 	vmul.f32	s11, s5, s11
 8019dc8:	ee35 0aa7 	vadd.f32	s0, s11, s15
 8019dcc:	ee64 1a07 	vmul.f32	s3, s8, s14
 8019dd0:	ee64 7a81 	vmul.f32	s15, s9, s2
 8019dd4:	ee71 7aa7 	vadd.f32	s15, s3, s15
 8019dd8:	ed51 1a07 	vldr	s3, [r1, #-28]	@ 0xffffffe4
 8019ddc:	ee77 1aa1 	vadd.f32	s3, s15, s3
 8019de0:	ee63 0a01 	vmul.f32	s1, s6, s2
 8019de4:	ee63 7aa1 	vmul.f32	s15, s7, s3
 8019de8:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8019dec:	ee24 2a01 	vmul.f32	s4, s8, s2
 8019df0:	ee64 7aa1 	vmul.f32	s15, s9, s3
 8019df4:	ee72 7a27 	vadd.f32	s15, s4, s15
 8019df8:	ed11 2a06 	vldr	s4, [r1, #-24]	@ 0xffffffe8
 8019dfc:	ee37 2a82 	vadd.f32	s4, s15, s4
 8019e00:	ee23 8a21 	vmul.f32	s16, s6, s3
 8019e04:	ee63 7a82 	vmul.f32	s15, s7, s4
 8019e08:	ee38 8a27 	vadd.f32	s16, s16, s15
 8019e0c:	ee24 5a21 	vmul.f32	s10, s8, s3
 8019e10:	ee64 7a82 	vmul.f32	s15, s9, s4
 8019e14:	ee75 7a27 	vadd.f32	s15, s10, s15
 8019e18:	ed11 5a05 	vldr	s10, [r1, #-20]	@ 0xffffffec
 8019e1c:	ee37 5a85 	vadd.f32	s10, s15, s10
 8019e20:	ee63 8a02 	vmul.f32	s17, s6, s4
 8019e24:	ee63 7a85 	vmul.f32	s15, s7, s10
 8019e28:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8019e2c:	ee24 6a02 	vmul.f32	s12, s8, s4
 8019e30:	ee64 7a85 	vmul.f32	s15, s9, s10
 8019e34:	ee76 7a27 	vadd.f32	s15, s12, s15
 8019e38:	ed11 6a04 	vldr	s12, [r1, #-16]
 8019e3c:	ee37 6a86 	vadd.f32	s12, s15, s12
 8019e40:	ee23 9a05 	vmul.f32	s18, s6, s10
 8019e44:	ee63 7a86 	vmul.f32	s15, s7, s12
 8019e48:	ee39 9a27 	vadd.f32	s18, s18, s15
 8019e4c:	ee24 aa05 	vmul.f32	s20, s8, s10
 8019e50:	ee64 7a86 	vmul.f32	s15, s9, s12
 8019e54:	ee7a 7a27 	vadd.f32	s15, s20, s15
 8019e58:	ed11 aa03 	vldr	s20, [r1, #-12]
 8019e5c:	ee37 aa8a 	vadd.f32	s20, s15, s20
 8019e60:	ee63 9a06 	vmul.f32	s19, s6, s12
 8019e64:	ee63 7a8a 	vmul.f32	s15, s7, s20
 8019e68:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8019e6c:	ee64 6a06 	vmul.f32	s13, s8, s12
 8019e70:	ee64 7a8a 	vmul.f32	s15, s9, s20
 8019e74:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8019e78:	ed51 6a02 	vldr	s13, [r1, #-8]
 8019e7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019e80:	ee63 aa0a 	vmul.f32	s21, s6, s20
 8019e84:	ee63 6aa7 	vmul.f32	s13, s7, s15
 8019e88:	ee7a aaa6 	vadd.f32	s21, s21, s13
 8019e8c:	ee64 5a0a 	vmul.f32	s11, s8, s20
 8019e90:	ee64 6aa7 	vmul.f32	s13, s9, s15
 8019e94:	ee75 6aa6 	vadd.f32	s13, s11, s13
 8019e98:	ed51 5a01 	vldr	s11, [r1, #-4]
 8019e9c:	ee76 5aa5 	vadd.f32	s11, s13, s11
 8019ea0:	ee63 ba27 	vmul.f32	s23, s6, s15
 8019ea4:	ee63 6aa5 	vmul.f32	s13, s7, s11
 8019ea8:	ee7b 6aa6 	vadd.f32	s13, s23, s13
 8019eac:	ed03 ba09 	vstr	s22, [r3, #-36]	@ 0xffffffdc
 8019eb0:	ed03 0a08 	vstr	s0, [r3, #-32]	@ 0xffffffe0
 8019eb4:	ee22 0a87 	vmul.f32	s0, s5, s14
 8019eb8:	ee70 0a20 	vadd.f32	s1, s0, s1
 8019ebc:	ed43 0a07 	vstr	s1, [r3, #-28]	@ 0xffffffe4
 8019ec0:	ee22 1a81 	vmul.f32	s2, s5, s2
 8019ec4:	ee31 1a08 	vadd.f32	s2, s2, s16
 8019ec8:	ed03 1a06 	vstr	s2, [r3, #-24]	@ 0xffffffe8
 8019ecc:	ee62 1aa1 	vmul.f32	s3, s5, s3
 8019ed0:	ee71 1aa8 	vadd.f32	s3, s3, s17
 8019ed4:	ed43 1a05 	vstr	s3, [r3, #-20]	@ 0xffffffec
 8019ed8:	ee22 2a82 	vmul.f32	s4, s5, s4
 8019edc:	ee32 2a09 	vadd.f32	s4, s4, s18
 8019ee0:	ed03 2a04 	vstr	s4, [r3, #-16]
 8019ee4:	ee22 5a85 	vmul.f32	s10, s5, s10
 8019ee8:	ee35 5a29 	vadd.f32	s10, s10, s19
 8019eec:	ed03 5a03 	vstr	s10, [r3, #-12]
 8019ef0:	ee22 6a86 	vmul.f32	s12, s5, s12
 8019ef4:	ee36 6a2a 	vadd.f32	s12, s12, s21
 8019ef8:	ed03 6a02 	vstr	s12, [r3, #-8]
 8019efc:	ee22 7a8a 	vmul.f32	s14, s5, s20
 8019f00:	ee37 7a26 	vadd.f32	s14, s14, s13
 8019f04:	ed03 7a01 	vstr	s14, [r3, #-4]
 8019f08:	3124      	adds	r1, #36	@ 0x24
 8019f0a:	3324      	adds	r3, #36	@ 0x24
 8019f0c:	f1be 0e01 	subs.w	lr, lr, #1
 8019f10:	f47f af34 	bne.w	8019d7c <awe_vecBiquad+0x2cc>
 8019f14:	9b01      	ldr	r3, [sp, #4]
 8019f16:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8019f1a:	009b      	lsls	r3, r3, #2
 8019f1c:	4418      	add	r0, r3
 8019f1e:	441a      	add	r2, r3
 8019f20:	4b18      	ldr	r3, [pc, #96]	@ (8019f84 <awe_vecBiquad+0x4d4>)
 8019f22:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8019f24:	fba3 1301 	umull	r1, r3, r3, r1
 8019f28:	085b      	lsrs	r3, r3, #1
 8019f2a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8019f2e:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8019f30:	1acb      	subs	r3, r1, r3
 8019f32:	d102      	bne.n	8019f3a <awe_vecBiquad+0x48a>
 8019f34:	e021      	b.n	8019f7a <awe_vecBiquad+0x4ca>
 8019f36:	eef0 5a47 	vmov.f32	s11, s14
 8019f3a:	ecf0 6a01 	vldmia	r0!, {s13}
 8019f3e:	ee24 7aa5 	vmul.f32	s14, s9, s11
 8019f42:	ee24 6a27 	vmul.f32	s12, s8, s15
 8019f46:	ee37 7a06 	vadd.f32	s14, s14, s12
 8019f4a:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019f4e:	ee63 6a25 	vmul.f32	s13, s6, s11
 8019f52:	ee23 6a87 	vmul.f32	s12, s7, s14
 8019f56:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019f5a:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019f5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019f62:	ece2 7a01 	vstmia	r2!, {s15}
 8019f66:	eef0 7a65 	vmov.f32	s15, s11
 8019f6a:	3b01      	subs	r3, #1
 8019f6c:	d1e3      	bne.n	8019f36 <awe_vecBiquad+0x486>
 8019f6e:	e6ec      	b.n	8019d4a <awe_vecBiquad+0x29a>
 8019f70:	eeb0 7a65 	vmov.f32	s14, s11
 8019f74:	eef0 5a67 	vmov.f32	s11, s15
 8019f78:	e6e7      	b.n	8019d4a <awe_vecBiquad+0x29a>
 8019f7a:	eeb0 7a65 	vmov.f32	s14, s11
 8019f7e:	eef0 5a67 	vmov.f32	s11, s15
 8019f82:	e6e2      	b.n	8019d4a <awe_vecBiquad+0x29a>
 8019f84:	38e38e39 	.word	0x38e38e39

08019f88 <awe_vecBiquad_2ch>:
 8019f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019f8c:	b084      	sub	sp, #16
 8019f8e:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 8019f92:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019f94:	9502      	str	r5, [sp, #8]
 8019f96:	e9cd 6400 	strd	r6, r4, [sp]
 8019f9a:	4607      	mov	r7, r0
 8019f9c:	4688      	mov	r8, r1
 8019f9e:	4691      	mov	r9, r2
 8019fa0:	469a      	mov	sl, r3
 8019fa2:	f7ff fd85 	bl	8019ab0 <awe_vecBiquad>
 8019fa6:	3408      	adds	r4, #8
 8019fa8:	4653      	mov	r3, sl
 8019faa:	f109 0204 	add.w	r2, r9, #4
 8019fae:	4641      	mov	r1, r8
 8019fb0:	1d38      	adds	r0, r7, #4
 8019fb2:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
 8019fb6:	950e      	str	r5, [sp, #56]	@ 0x38
 8019fb8:	b004      	add	sp, #16
 8019fba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019fbe:	f7ff bd77 	b.w	8019ab0 <awe_vecBiquad>
 8019fc2:	bf00      	nop

08019fc4 <awe_vecBiquad_4ch>:
 8019fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019fc8:	b084      	sub	sp, #16
 8019fca:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 8019fce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019fd0:	9502      	str	r5, [sp, #8]
 8019fd2:	e9cd 6400 	strd	r6, r4, [sp]
 8019fd6:	4607      	mov	r7, r0
 8019fd8:	4688      	mov	r8, r1
 8019fda:	4691      	mov	r9, r2
 8019fdc:	469a      	mov	sl, r3
 8019fde:	f7ff ffd3 	bl	8019f88 <awe_vecBiquad_2ch>
 8019fe2:	3410      	adds	r4, #16
 8019fe4:	4653      	mov	r3, sl
 8019fe6:	f109 0208 	add.w	r2, r9, #8
 8019fea:	4641      	mov	r1, r8
 8019fec:	f107 0008 	add.w	r0, r7, #8
 8019ff0:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
 8019ff4:	950e      	str	r5, [sp, #56]	@ 0x38
 8019ff6:	b004      	add	sp, #16
 8019ff8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019ffc:	f7ff bfc4 	b.w	8019f88 <awe_vecBiquad_2ch>

0801a000 <awe_vecBiquad_8ch>:
 801a000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a004:	b084      	sub	sp, #16
 801a006:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 801a00a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a00c:	9502      	str	r5, [sp, #8]
 801a00e:	e9cd 6400 	strd	r6, r4, [sp]
 801a012:	4607      	mov	r7, r0
 801a014:	4688      	mov	r8, r1
 801a016:	4691      	mov	r9, r2
 801a018:	469a      	mov	sl, r3
 801a01a:	f7ff ffd3 	bl	8019fc4 <awe_vecBiquad_4ch>
 801a01e:	3420      	adds	r4, #32
 801a020:	4653      	mov	r3, sl
 801a022:	f109 0210 	add.w	r2, r9, #16
 801a026:	4641      	mov	r1, r8
 801a028:	f107 0010 	add.w	r0, r7, #16
 801a02c:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
 801a030:	950e      	str	r5, [sp, #56]	@ 0x38
 801a032:	b004      	add	sp, #16
 801a034:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a038:	f7ff bfc4 	b.w	8019fc4 <awe_vecBiquad_4ch>

0801a03c <awe_vecBiquadCascade>:
 801a03c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a040:	ed2d 8b0a 	vpush	{d8-d12}
 801a044:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a048:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 801a04c:	2901      	cmp	r1, #1
 801a04e:	f000 81d4 	beq.w	801a3fa <awe_vecBiquadCascade+0x3be>
 801a052:	ea4f 1928 	mov.w	r9, r8, asr #4
 801a056:	0089      	lsls	r1, r1, #2
 801a058:	009c      	lsls	r4, r3, #2
 801a05a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a05c:	f103 0614 	add.w	r6, r3, #20
 801a060:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a062:	f103 0708 	add.w	r7, r3, #8
 801a066:	ed56 6a05 	vldr	s13, [r6, #-20]	@ 0xffffffec
 801a06a:	ed16 6a04 	vldr	s12, [r6, #-16]
 801a06e:	ed56 5a03 	vldr	s11, [r6, #-12]
 801a072:	ed56 7a02 	vldr	s15, [r6, #-8]
 801a076:	ed16 7a01 	vldr	s14, [r6, #-4]
 801a07a:	46be      	mov	lr, r7
 801a07c:	ed57 ba02 	vldr	s23, [r7, #-8]
 801a080:	ed17 ca01 	vldr	s24, [r7, #-4]
 801a084:	eef1 7a67 	vneg.f32	s15, s15
 801a088:	eeb1 7a47 	vneg.f32	s14, s14
 801a08c:	f1b9 0f00 	cmp.w	r9, #0
 801a090:	f000 81b1 	beq.w	801a3f6 <awe_vecBiquadCascade+0x3ba>
 801a094:	464d      	mov	r5, r9
 801a096:	4613      	mov	r3, r2
 801a098:	ed90 9a00 	vldr	s18, [r0]
 801a09c:	4408      	add	r0, r1
 801a09e:	edd0 8a00 	vldr	s17, [r0]
 801a0a2:	4408      	add	r0, r1
 801a0a4:	ed90 8a00 	vldr	s16, [r0]
 801a0a8:	4408      	add	r0, r1
 801a0aa:	ed90 0a00 	vldr	s0, [r0]
 801a0ae:	4408      	add	r0, r1
 801a0b0:	edd0 0a00 	vldr	s1, [r0]
 801a0b4:	4408      	add	r0, r1
 801a0b6:	ed90 1a00 	vldr	s2, [r0]
 801a0ba:	4408      	add	r0, r1
 801a0bc:	edd0 1a00 	vldr	s3, [r0]
 801a0c0:	4408      	add	r0, r1
 801a0c2:	ed90 2a00 	vldr	s4, [r0]
 801a0c6:	4408      	add	r0, r1
 801a0c8:	edd0 2a00 	vldr	s5, [r0]
 801a0cc:	4408      	add	r0, r1
 801a0ce:	ed90 3a00 	vldr	s6, [r0]
 801a0d2:	4408      	add	r0, r1
 801a0d4:	edd0 3a00 	vldr	s7, [r0]
 801a0d8:	4408      	add	r0, r1
 801a0da:	ed90 4a00 	vldr	s8, [r0]
 801a0de:	4408      	add	r0, r1
 801a0e0:	edd0 4a00 	vldr	s9, [r0]
 801a0e4:	4408      	add	r0, r1
 801a0e6:	ed90 5a00 	vldr	s10, [r0]
 801a0ea:	4408      	add	r0, r1
 801a0ec:	ed90 aa00 	vldr	s20, [r0]
 801a0f0:	4408      	add	r0, r1
 801a0f2:	ed90 ba00 	vldr	s22, [r0]
 801a0f6:	4408      	add	r0, r1
 801a0f8:	ee66 aa89 	vmul.f32	s21, s13, s18
 801a0fc:	ee7a aaab 	vadd.f32	s21, s21, s23
 801a100:	ee66 9a09 	vmul.f32	s19, s12, s18
 801a104:	ee67 baaa 	vmul.f32	s23, s15, s21
 801a108:	ee79 9aab 	vadd.f32	s19, s19, s23
 801a10c:	ee79 9a8c 	vadd.f32	s19, s19, s24
 801a110:	ee66 baa8 	vmul.f32	s23, s13, s17
 801a114:	ee79 9aab 	vadd.f32	s19, s19, s23
 801a118:	ee25 9a89 	vmul.f32	s18, s11, s18
 801a11c:	ee67 ba2a 	vmul.f32	s23, s14, s21
 801a120:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a124:	ee66 ba28 	vmul.f32	s23, s12, s17
 801a128:	ee27 caa9 	vmul.f32	s24, s15, s19
 801a12c:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a130:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a134:	ee66 ba88 	vmul.f32	s23, s13, s16
 801a138:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a13c:	ee65 8aa8 	vmul.f32	s17, s11, s17
 801a140:	ee67 ba29 	vmul.f32	s23, s14, s19
 801a144:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a148:	ee66 ba08 	vmul.f32	s23, s12, s16
 801a14c:	ee27 ca89 	vmul.f32	s24, s15, s18
 801a150:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a154:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a158:	ee66 ba80 	vmul.f32	s23, s13, s0
 801a15c:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a160:	ee25 8a88 	vmul.f32	s16, s11, s16
 801a164:	ee67 ba09 	vmul.f32	s23, s14, s18
 801a168:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a16c:	ee66 ba00 	vmul.f32	s23, s12, s0
 801a170:	ee27 caa8 	vmul.f32	s24, s15, s17
 801a174:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a178:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a17c:	ee66 baa0 	vmul.f32	s23, s13, s1
 801a180:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a184:	ee25 0a80 	vmul.f32	s0, s11, s0
 801a188:	ee67 ba28 	vmul.f32	s23, s14, s17
 801a18c:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a190:	ee66 ba20 	vmul.f32	s23, s12, s1
 801a194:	ee27 ca88 	vmul.f32	s24, s15, s16
 801a198:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a19c:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a1a0:	ee66 ba81 	vmul.f32	s23, s13, s2
 801a1a4:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a1a8:	ee65 0aa0 	vmul.f32	s1, s11, s1
 801a1ac:	ee67 ba08 	vmul.f32	s23, s14, s16
 801a1b0:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a1b4:	ee66 ba01 	vmul.f32	s23, s12, s2
 801a1b8:	ee27 ca80 	vmul.f32	s24, s15, s0
 801a1bc:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a1c0:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a1c4:	ee66 baa1 	vmul.f32	s23, s13, s3
 801a1c8:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a1cc:	ee25 1a81 	vmul.f32	s2, s11, s2
 801a1d0:	ee67 ba00 	vmul.f32	s23, s14, s0
 801a1d4:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a1d8:	ee66 ba21 	vmul.f32	s23, s12, s3
 801a1dc:	ee27 caa0 	vmul.f32	s24, s15, s1
 801a1e0:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a1e4:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a1e8:	ee66 ba82 	vmul.f32	s23, s13, s4
 801a1ec:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a1f0:	ee65 1aa1 	vmul.f32	s3, s11, s3
 801a1f4:	ee67 ba20 	vmul.f32	s23, s14, s1
 801a1f8:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a1fc:	ee66 ba02 	vmul.f32	s23, s12, s4
 801a200:	ee27 ca81 	vmul.f32	s24, s15, s2
 801a204:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a208:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a20c:	ee66 baa2 	vmul.f32	s23, s13, s5
 801a210:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a214:	ee25 2a82 	vmul.f32	s4, s11, s4
 801a218:	ee67 ba01 	vmul.f32	s23, s14, s2
 801a21c:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a220:	ee66 ba22 	vmul.f32	s23, s12, s5
 801a224:	ee27 caa1 	vmul.f32	s24, s15, s3
 801a228:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a22c:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a230:	ee66 ba83 	vmul.f32	s23, s13, s6
 801a234:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a238:	ee65 2aa2 	vmul.f32	s5, s11, s5
 801a23c:	ee67 ba21 	vmul.f32	s23, s14, s3
 801a240:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a244:	ee66 ba03 	vmul.f32	s23, s12, s6
 801a248:	ee27 ca82 	vmul.f32	s24, s15, s4
 801a24c:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a250:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a254:	ee66 baa3 	vmul.f32	s23, s13, s7
 801a258:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a25c:	ee25 3a83 	vmul.f32	s6, s11, s6
 801a260:	ee67 ba02 	vmul.f32	s23, s14, s4
 801a264:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a268:	ee66 ba23 	vmul.f32	s23, s12, s7
 801a26c:	ee27 caa2 	vmul.f32	s24, s15, s5
 801a270:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a274:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a278:	ee66 ba84 	vmul.f32	s23, s13, s8
 801a27c:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a280:	ee65 3aa3 	vmul.f32	s7, s11, s7
 801a284:	ee67 ba22 	vmul.f32	s23, s14, s5
 801a288:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a28c:	ee66 ba04 	vmul.f32	s23, s12, s8
 801a290:	ee27 ca83 	vmul.f32	s24, s15, s6
 801a294:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a298:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a29c:	ee66 baa4 	vmul.f32	s23, s13, s9
 801a2a0:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a2a4:	ee25 4a84 	vmul.f32	s8, s11, s8
 801a2a8:	ee67 ba03 	vmul.f32	s23, s14, s6
 801a2ac:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a2b0:	ee66 ba24 	vmul.f32	s23, s12, s9
 801a2b4:	ee27 caa3 	vmul.f32	s24, s15, s7
 801a2b8:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a2bc:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a2c0:	ee66 ba85 	vmul.f32	s23, s13, s10
 801a2c4:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a2c8:	ee65 4aa4 	vmul.f32	s9, s11, s9
 801a2cc:	ee67 ba23 	vmul.f32	s23, s14, s7
 801a2d0:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a2d4:	ee66 ba05 	vmul.f32	s23, s12, s10
 801a2d8:	ee27 ca84 	vmul.f32	s24, s15, s8
 801a2dc:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a2e0:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a2e4:	ee66 ba8a 	vmul.f32	s23, s13, s20
 801a2e8:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a2ec:	ee25 5a85 	vmul.f32	s10, s11, s10
 801a2f0:	ee67 ba04 	vmul.f32	s23, s14, s8
 801a2f4:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a2f8:	ee66 ba0a 	vmul.f32	s23, s12, s20
 801a2fc:	ee27 caa4 	vmul.f32	s24, s15, s9
 801a300:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a304:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a308:	ee66 ba8b 	vmul.f32	s23, s13, s22
 801a30c:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a310:	ee25 aa8a 	vmul.f32	s20, s11, s20
 801a314:	ee67 ba24 	vmul.f32	s23, s14, s9
 801a318:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a31c:	ee66 ba0b 	vmul.f32	s23, s12, s22
 801a320:	ee27 ca85 	vmul.f32	s24, s15, s10
 801a324:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a328:	ee7a ba2b 	vadd.f32	s23, s20, s23
 801a32c:	ee25 ba8b 	vmul.f32	s22, s11, s22
 801a330:	ee27 ca05 	vmul.f32	s24, s14, s10
 801a334:	ee3b ca0c 	vadd.f32	s24, s22, s24
 801a338:	edc3 aa00 	vstr	s21, [r3]
 801a33c:	4423      	add	r3, r4
 801a33e:	edc3 9a00 	vstr	s19, [r3]
 801a342:	4423      	add	r3, r4
 801a344:	ed83 9a00 	vstr	s18, [r3]
 801a348:	4423      	add	r3, r4
 801a34a:	edc3 8a00 	vstr	s17, [r3]
 801a34e:	4423      	add	r3, r4
 801a350:	ed83 8a00 	vstr	s16, [r3]
 801a354:	4423      	add	r3, r4
 801a356:	ed83 0a00 	vstr	s0, [r3]
 801a35a:	4423      	add	r3, r4
 801a35c:	edc3 0a00 	vstr	s1, [r3]
 801a360:	4423      	add	r3, r4
 801a362:	ed83 1a00 	vstr	s2, [r3]
 801a366:	4423      	add	r3, r4
 801a368:	edc3 1a00 	vstr	s3, [r3]
 801a36c:	4423      	add	r3, r4
 801a36e:	ed83 2a00 	vstr	s4, [r3]
 801a372:	4423      	add	r3, r4
 801a374:	edc3 2a00 	vstr	s5, [r3]
 801a378:	4423      	add	r3, r4
 801a37a:	ed83 3a00 	vstr	s6, [r3]
 801a37e:	4423      	add	r3, r4
 801a380:	edc3 3a00 	vstr	s7, [r3]
 801a384:	4423      	add	r3, r4
 801a386:	ed83 4a00 	vstr	s8, [r3]
 801a38a:	4423      	add	r3, r4
 801a38c:	edc3 4a00 	vstr	s9, [r3]
 801a390:	4423      	add	r3, r4
 801a392:	ed83 5a00 	vstr	s10, [r3]
 801a396:	4423      	add	r3, r4
 801a398:	3d01      	subs	r5, #1
 801a39a:	f47f ae7d 	bne.w	801a098 <awe_vecBiquadCascade+0x5c>
 801a39e:	f018 050f 	ands.w	r5, r8, #15
 801a3a2:	d019      	beq.n	801a3d8 <awe_vecBiquadCascade+0x39c>
 801a3a4:	ed90 ba00 	vldr	s22, [r0]
 801a3a8:	4408      	add	r0, r1
 801a3aa:	ee26 5a8b 	vmul.f32	s10, s13, s22
 801a3ae:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a3b2:	ed83 5a00 	vstr	s10, [r3]
 801a3b6:	4423      	add	r3, r4
 801a3b8:	ee66 ba0b 	vmul.f32	s23, s12, s22
 801a3bc:	ee27 aa85 	vmul.f32	s20, s15, s10
 801a3c0:	ee7b ba8a 	vadd.f32	s23, s23, s20
 801a3c4:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a3c8:	ee25 ba8b 	vmul.f32	s22, s11, s22
 801a3cc:	ee27 5a05 	vmul.f32	s10, s14, s10
 801a3d0:	ee3b ca05 	vadd.f32	s24, s22, s10
 801a3d4:	3d01      	subs	r5, #1
 801a3d6:	d1e5      	bne.n	801a3a4 <awe_vecBiquadCascade+0x368>
 801a3d8:	ed4e ba02 	vstr	s23, [lr, #-8]
 801a3dc:	ed0e ca01 	vstr	s24, [lr, #-4]
 801a3e0:	3614      	adds	r6, #20
 801a3e2:	3708      	adds	r7, #8
 801a3e4:	4610      	mov	r0, r2
 801a3e6:	f1bc 0c01 	subs.w	ip, ip, #1
 801a3ea:	f47f ae3c 	bne.w	801a066 <awe_vecBiquadCascade+0x2a>
 801a3ee:	ecbd 8b0a 	vpop	{d8-d12}
 801a3f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a3f6:	4613      	mov	r3, r2
 801a3f8:	e7d1      	b.n	801a39e <awe_vecBiquadCascade+0x362>
 801a3fa:	2b01      	cmp	r3, #1
 801a3fc:	f47f ae29 	bne.w	801a052 <awe_vecBiquadCascade+0x16>
 801a400:	ea4f 1e28 	mov.w	lr, r8, asr #4
 801a404:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a406:	f103 0514 	add.w	r5, r3, #20
 801a40a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a40c:	f103 0608 	add.w	r6, r3, #8
 801a410:	ea4f 198e 	mov.w	r9, lr, lsl #6
 801a414:	eb02 0a09 	add.w	sl, r2, r9
 801a418:	ed55 6a05 	vldr	s13, [r5, #-20]	@ 0xffffffec
 801a41c:	ed15 6a04 	vldr	s12, [r5, #-16]
 801a420:	ed55 5a03 	vldr	s11, [r5, #-12]
 801a424:	ed55 7a02 	vldr	s15, [r5, #-8]
 801a428:	ed15 7a01 	vldr	s14, [r5, #-4]
 801a42c:	4637      	mov	r7, r6
 801a42e:	ed56 ba02 	vldr	s23, [r6, #-8]
 801a432:	ed16 ca01 	vldr	s24, [r6, #-4]
 801a436:	eef1 7a67 	vneg.f32	s15, s15
 801a43a:	eeb1 7a47 	vneg.f32	s14, s14
 801a43e:	f1be 0f00 	cmp.w	lr, #0
 801a442:	f000 8193 	beq.w	801a76c <awe_vecBiquadCascade+0x730>
 801a446:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801a44a:	f102 0340 	add.w	r3, r2, #64	@ 0x40
 801a44e:	4674      	mov	r4, lr
 801a450:	ed11 9a10 	vldr	s18, [r1, #-64]	@ 0xffffffc0
 801a454:	ed51 8a0f 	vldr	s17, [r1, #-60]	@ 0xffffffc4
 801a458:	ed11 8a0e 	vldr	s16, [r1, #-56]	@ 0xffffffc8
 801a45c:	ed11 0a0d 	vldr	s0, [r1, #-52]	@ 0xffffffcc
 801a460:	ed51 0a0c 	vldr	s1, [r1, #-48]	@ 0xffffffd0
 801a464:	ed11 1a0b 	vldr	s2, [r1, #-44]	@ 0xffffffd4
 801a468:	ed51 1a0a 	vldr	s3, [r1, #-40]	@ 0xffffffd8
 801a46c:	ed11 2a09 	vldr	s4, [r1, #-36]	@ 0xffffffdc
 801a470:	ed51 2a08 	vldr	s5, [r1, #-32]	@ 0xffffffe0
 801a474:	ed11 3a07 	vldr	s6, [r1, #-28]	@ 0xffffffe4
 801a478:	ed51 3a06 	vldr	s7, [r1, #-24]	@ 0xffffffe8
 801a47c:	ed11 4a05 	vldr	s8, [r1, #-20]	@ 0xffffffec
 801a480:	ed51 4a04 	vldr	s9, [r1, #-16]
 801a484:	ed11 5a03 	vldr	s10, [r1, #-12]
 801a488:	ed11 aa02 	vldr	s20, [r1, #-8]
 801a48c:	ed11 ba01 	vldr	s22, [r1, #-4]
 801a490:	ee66 aa89 	vmul.f32	s21, s13, s18
 801a494:	ee7a aaab 	vadd.f32	s21, s21, s23
 801a498:	ee66 9a09 	vmul.f32	s19, s12, s18
 801a49c:	ee67 baaa 	vmul.f32	s23, s15, s21
 801a4a0:	ee79 9aab 	vadd.f32	s19, s19, s23
 801a4a4:	ee79 9a8c 	vadd.f32	s19, s19, s24
 801a4a8:	ee66 baa8 	vmul.f32	s23, s13, s17
 801a4ac:	ee79 9aab 	vadd.f32	s19, s19, s23
 801a4b0:	ee25 9a89 	vmul.f32	s18, s11, s18
 801a4b4:	ee67 ba2a 	vmul.f32	s23, s14, s21
 801a4b8:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a4bc:	ee66 ba28 	vmul.f32	s23, s12, s17
 801a4c0:	ee27 caa9 	vmul.f32	s24, s15, s19
 801a4c4:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a4c8:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a4cc:	ee66 ba88 	vmul.f32	s23, s13, s16
 801a4d0:	ee39 9a2b 	vadd.f32	s18, s18, s23
 801a4d4:	ee65 8aa8 	vmul.f32	s17, s11, s17
 801a4d8:	ee67 ba29 	vmul.f32	s23, s14, s19
 801a4dc:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a4e0:	ee66 ba08 	vmul.f32	s23, s12, s16
 801a4e4:	ee27 ca89 	vmul.f32	s24, s15, s18
 801a4e8:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a4ec:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a4f0:	ee66 ba80 	vmul.f32	s23, s13, s0
 801a4f4:	ee78 8aab 	vadd.f32	s17, s17, s23
 801a4f8:	ee25 8a88 	vmul.f32	s16, s11, s16
 801a4fc:	ee67 ba09 	vmul.f32	s23, s14, s18
 801a500:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a504:	ee66 ba00 	vmul.f32	s23, s12, s0
 801a508:	ee27 caa8 	vmul.f32	s24, s15, s17
 801a50c:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a510:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a514:	ee66 baa0 	vmul.f32	s23, s13, s1
 801a518:	ee38 8a2b 	vadd.f32	s16, s16, s23
 801a51c:	ee25 0a80 	vmul.f32	s0, s11, s0
 801a520:	ee67 ba28 	vmul.f32	s23, s14, s17
 801a524:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a528:	ee66 ba20 	vmul.f32	s23, s12, s1
 801a52c:	ee27 ca88 	vmul.f32	s24, s15, s16
 801a530:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a534:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a538:	ee66 ba81 	vmul.f32	s23, s13, s2
 801a53c:	ee30 0a2b 	vadd.f32	s0, s0, s23
 801a540:	ee65 0aa0 	vmul.f32	s1, s11, s1
 801a544:	ee67 ba08 	vmul.f32	s23, s14, s16
 801a548:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a54c:	ee66 ba01 	vmul.f32	s23, s12, s2
 801a550:	ee27 ca80 	vmul.f32	s24, s15, s0
 801a554:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a558:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a55c:	ee66 baa1 	vmul.f32	s23, s13, s3
 801a560:	ee70 0aab 	vadd.f32	s1, s1, s23
 801a564:	ee25 1a81 	vmul.f32	s2, s11, s2
 801a568:	ee67 ba00 	vmul.f32	s23, s14, s0
 801a56c:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a570:	ee66 ba21 	vmul.f32	s23, s12, s3
 801a574:	ee27 caa0 	vmul.f32	s24, s15, s1
 801a578:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a57c:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a580:	ee66 ba82 	vmul.f32	s23, s13, s4
 801a584:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801a588:	ee65 1aa1 	vmul.f32	s3, s11, s3
 801a58c:	ee67 ba20 	vmul.f32	s23, s14, s1
 801a590:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a594:	ee66 ba02 	vmul.f32	s23, s12, s4
 801a598:	ee27 ca81 	vmul.f32	s24, s15, s2
 801a59c:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a5a0:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a5a4:	ee66 baa2 	vmul.f32	s23, s13, s5
 801a5a8:	ee71 1aab 	vadd.f32	s3, s3, s23
 801a5ac:	ee25 2a82 	vmul.f32	s4, s11, s4
 801a5b0:	ee67 ba01 	vmul.f32	s23, s14, s2
 801a5b4:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a5b8:	ee66 ba22 	vmul.f32	s23, s12, s5
 801a5bc:	ee27 caa1 	vmul.f32	s24, s15, s3
 801a5c0:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a5c4:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a5c8:	ee66 ba83 	vmul.f32	s23, s13, s6
 801a5cc:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801a5d0:	ee65 2aa2 	vmul.f32	s5, s11, s5
 801a5d4:	ee67 ba21 	vmul.f32	s23, s14, s3
 801a5d8:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a5dc:	ee66 ba03 	vmul.f32	s23, s12, s6
 801a5e0:	ee27 ca82 	vmul.f32	s24, s15, s4
 801a5e4:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a5e8:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a5ec:	ee66 baa3 	vmul.f32	s23, s13, s7
 801a5f0:	ee72 2aab 	vadd.f32	s5, s5, s23
 801a5f4:	ee25 3a83 	vmul.f32	s6, s11, s6
 801a5f8:	ee67 ba02 	vmul.f32	s23, s14, s4
 801a5fc:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a600:	ee66 ba23 	vmul.f32	s23, s12, s7
 801a604:	ee27 caa2 	vmul.f32	s24, s15, s5
 801a608:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a60c:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a610:	ee66 ba84 	vmul.f32	s23, s13, s8
 801a614:	ee33 3a2b 	vadd.f32	s6, s6, s23
 801a618:	ee65 3aa3 	vmul.f32	s7, s11, s7
 801a61c:	ee67 ba22 	vmul.f32	s23, s14, s5
 801a620:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a624:	ee66 ba04 	vmul.f32	s23, s12, s8
 801a628:	ee27 ca83 	vmul.f32	s24, s15, s6
 801a62c:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a630:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a634:	ee66 baa4 	vmul.f32	s23, s13, s9
 801a638:	ee73 3aab 	vadd.f32	s7, s7, s23
 801a63c:	ee25 4a84 	vmul.f32	s8, s11, s8
 801a640:	ee67 ba03 	vmul.f32	s23, s14, s6
 801a644:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a648:	ee66 ba24 	vmul.f32	s23, s12, s9
 801a64c:	ee27 caa3 	vmul.f32	s24, s15, s7
 801a650:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a654:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a658:	ee66 ba85 	vmul.f32	s23, s13, s10
 801a65c:	ee34 4a2b 	vadd.f32	s8, s8, s23
 801a660:	ee65 4aa4 	vmul.f32	s9, s11, s9
 801a664:	ee67 ba23 	vmul.f32	s23, s14, s7
 801a668:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a66c:	ee66 ba05 	vmul.f32	s23, s12, s10
 801a670:	ee27 ca84 	vmul.f32	s24, s15, s8
 801a674:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a678:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a67c:	ee66 ba8a 	vmul.f32	s23, s13, s20
 801a680:	ee74 4aab 	vadd.f32	s9, s9, s23
 801a684:	ee25 5a85 	vmul.f32	s10, s11, s10
 801a688:	ee67 ba04 	vmul.f32	s23, s14, s8
 801a68c:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a690:	ee66 ba0a 	vmul.f32	s23, s12, s20
 801a694:	ee27 caa4 	vmul.f32	s24, s15, s9
 801a698:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a69c:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a6a0:	ee66 ba8b 	vmul.f32	s23, s13, s22
 801a6a4:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a6a8:	ee25 aa8a 	vmul.f32	s20, s11, s20
 801a6ac:	ee67 ba24 	vmul.f32	s23, s14, s9
 801a6b0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a6b4:	ee66 ba0b 	vmul.f32	s23, s12, s22
 801a6b8:	ee27 ca85 	vmul.f32	s24, s15, s10
 801a6bc:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a6c0:	ee7a ba2b 	vadd.f32	s23, s20, s23
 801a6c4:	ee25 ba8b 	vmul.f32	s22, s11, s22
 801a6c8:	ee27 ca05 	vmul.f32	s24, s14, s10
 801a6cc:	ee3b ca0c 	vadd.f32	s24, s22, s24
 801a6d0:	ed43 aa10 	vstr	s21, [r3, #-64]	@ 0xffffffc0
 801a6d4:	ed43 9a0f 	vstr	s19, [r3, #-60]	@ 0xffffffc4
 801a6d8:	ed03 9a0e 	vstr	s18, [r3, #-56]	@ 0xffffffc8
 801a6dc:	ed43 8a0d 	vstr	s17, [r3, #-52]	@ 0xffffffcc
 801a6e0:	ed03 8a0c 	vstr	s16, [r3, #-48]	@ 0xffffffd0
 801a6e4:	ed03 0a0b 	vstr	s0, [r3, #-44]	@ 0xffffffd4
 801a6e8:	ed43 0a0a 	vstr	s1, [r3, #-40]	@ 0xffffffd8
 801a6ec:	ed03 1a09 	vstr	s2, [r3, #-36]	@ 0xffffffdc
 801a6f0:	ed43 1a08 	vstr	s3, [r3, #-32]	@ 0xffffffe0
 801a6f4:	ed03 2a07 	vstr	s4, [r3, #-28]	@ 0xffffffe4
 801a6f8:	ed43 2a06 	vstr	s5, [r3, #-24]	@ 0xffffffe8
 801a6fc:	ed03 3a05 	vstr	s6, [r3, #-20]	@ 0xffffffec
 801a700:	ed43 3a04 	vstr	s7, [r3, #-16]
 801a704:	ed03 4a03 	vstr	s8, [r3, #-12]
 801a708:	ed43 4a02 	vstr	s9, [r3, #-8]
 801a70c:	ed03 5a01 	vstr	s10, [r3, #-4]
 801a710:	3140      	adds	r1, #64	@ 0x40
 801a712:	3340      	adds	r3, #64	@ 0x40
 801a714:	3c01      	subs	r4, #1
 801a716:	f47f ae9b 	bne.w	801a450 <awe_vecBiquadCascade+0x414>
 801a71a:	4448      	add	r0, r9
 801a71c:	4651      	mov	r1, sl
 801a71e:	f018 030f 	ands.w	r3, r8, #15
 801a722:	d017      	beq.n	801a754 <awe_vecBiquadCascade+0x718>
 801a724:	ecb0 ba01 	vldmia	r0!, {s22}
 801a728:	ee26 5a8b 	vmul.f32	s10, s13, s22
 801a72c:	ee35 5a2b 	vadd.f32	s10, s10, s23
 801a730:	eca1 5a01 	vstmia	r1!, {s10}
 801a734:	ee66 ba0b 	vmul.f32	s23, s12, s22
 801a738:	ee67 4a85 	vmul.f32	s9, s15, s10
 801a73c:	ee7b baa4 	vadd.f32	s23, s23, s9
 801a740:	ee7b ba8c 	vadd.f32	s23, s23, s24
 801a744:	ee25 ba8b 	vmul.f32	s22, s11, s22
 801a748:	ee27 5a05 	vmul.f32	s10, s14, s10
 801a74c:	ee3b ca05 	vadd.f32	s24, s22, s10
 801a750:	3b01      	subs	r3, #1
 801a752:	d1e7      	bne.n	801a724 <awe_vecBiquadCascade+0x6e8>
 801a754:	ed47 ba02 	vstr	s23, [r7, #-8]
 801a758:	ed07 ca01 	vstr	s24, [r7, #-4]
 801a75c:	3514      	adds	r5, #20
 801a75e:	3608      	adds	r6, #8
 801a760:	4610      	mov	r0, r2
 801a762:	f1bc 0c01 	subs.w	ip, ip, #1
 801a766:	f47f ae57 	bne.w	801a418 <awe_vecBiquadCascade+0x3dc>
 801a76a:	e640      	b.n	801a3ee <awe_vecBiquadCascade+0x3b2>
 801a76c:	4611      	mov	r1, r2
 801a76e:	e7d6      	b.n	801a71e <awe_vecBiquadCascade+0x6e2>

0801a770 <awe_vecBiquadCascade_2ch>:
 801a770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a774:	b085      	sub	sp, #20
 801a776:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 801a77a:	e9dd 5610 	ldrd	r5, r6, [sp, #64]	@ 0x40
 801a77e:	e9cd 7400 	strd	r7, r4, [sp]
 801a782:	e9cd 5602 	strd	r5, r6, [sp, #8]
 801a786:	4680      	mov	r8, r0
 801a788:	4689      	mov	r9, r1
 801a78a:	4692      	mov	sl, r2
 801a78c:	469b      	mov	fp, r3
 801a78e:	f7ff fc55 	bl	801a03c <awe_vecBiquadCascade>
 801a792:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 801a796:	465b      	mov	r3, fp
 801a798:	f10a 0204 	add.w	r2, sl, #4
 801a79c:	4649      	mov	r1, r9
 801a79e:	f108 0004 	add.w	r0, r8, #4
 801a7a2:	e9cd 740e 	strd	r7, r4, [sp, #56]	@ 0x38
 801a7a6:	e9cd 5610 	strd	r5, r6, [sp, #64]	@ 0x40
 801a7aa:	b005      	add	sp, #20
 801a7ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7b0:	f7ff bc44 	b.w	801a03c <awe_vecBiquadCascade>

0801a7b4 <awe_vecBiquadCascade_4ch>:
 801a7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7b8:	b085      	sub	sp, #20
 801a7ba:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 801a7be:	e9dd 5610 	ldrd	r5, r6, [sp, #64]	@ 0x40
 801a7c2:	e9cd 7400 	strd	r7, r4, [sp]
 801a7c6:	e9cd 5602 	strd	r5, r6, [sp, #8]
 801a7ca:	4680      	mov	r8, r0
 801a7cc:	4689      	mov	r9, r1
 801a7ce:	4692      	mov	sl, r2
 801a7d0:	469b      	mov	fp, r3
 801a7d2:	f7ff ffcd 	bl	801a770 <awe_vecBiquadCascade_2ch>
 801a7d6:	eb04 1405 	add.w	r4, r4, r5, lsl #4
 801a7da:	465b      	mov	r3, fp
 801a7dc:	f10a 0208 	add.w	r2, sl, #8
 801a7e0:	4649      	mov	r1, r9
 801a7e2:	f108 0008 	add.w	r0, r8, #8
 801a7e6:	e9cd 740e 	strd	r7, r4, [sp, #56]	@ 0x38
 801a7ea:	e9cd 5610 	strd	r5, r6, [sp, #64]	@ 0x40
 801a7ee:	b005      	add	sp, #20
 801a7f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7f4:	f7ff bfbc 	b.w	801a770 <awe_vecBiquadCascade_2ch>

0801a7f8 <awe_vecBiquadCascade_8ch>:
 801a7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7fc:	b085      	sub	sp, #20
 801a7fe:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 801a802:	e9dd 5610 	ldrd	r5, r6, [sp, #64]	@ 0x40
 801a806:	e9cd 7400 	strd	r7, r4, [sp]
 801a80a:	e9cd 5602 	strd	r5, r6, [sp, #8]
 801a80e:	4680      	mov	r8, r0
 801a810:	4689      	mov	r9, r1
 801a812:	4692      	mov	sl, r2
 801a814:	469b      	mov	fp, r3
 801a816:	f7ff ffcd 	bl	801a7b4 <awe_vecBiquadCascade_4ch>
 801a81a:	eb04 1445 	add.w	r4, r4, r5, lsl #5
 801a81e:	465b      	mov	r3, fp
 801a820:	f10a 0210 	add.w	r2, sl, #16
 801a824:	4649      	mov	r1, r9
 801a826:	f108 0010 	add.w	r0, r8, #16
 801a82a:	e9cd 740e 	strd	r7, r4, [sp, #56]	@ 0x38
 801a82e:	e9cd 5610 	strd	r5, r6, [sp, #64]	@ 0x40
 801a832:	b005      	add	sp, #20
 801a834:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a838:	f7ff bfbc 	b.w	801a7b4 <awe_vecBiquadCascade_4ch>

0801a83c <awe_vecBiquadCascadeConstructor>:
 801a83c:	2001      	movs	r0, #1
 801a83e:	4770      	bx	lr

0801a840 <awe_vecBiquadCascadeSet>:
 801a840:	4770      	bx	lr
 801a842:	bf00      	nop

0801a844 <awe_vecBiquadCascadeProcess>:
 801a844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a848:	b089      	sub	sp, #36	@ 0x24
 801a84a:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801a84e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a850:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a852:	2c07      	cmp	r4, #7
 801a854:	469a      	mov	sl, r3
 801a856:	f340 80c9 	ble.w	801a9ec <awe_vecBiquadCascadeProcess+0x1a8>
 801a85a:	f1a4 0508 	sub.w	r5, r4, #8
 801a85e:	08eb      	lsrs	r3, r5, #3
 801a860:	f101 0920 	add.w	r9, r1, #32
 801a864:	ea4f 1b86 	mov.w	fp, r6, lsl #6
 801a868:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 801a86a:	9306      	str	r3, [sp, #24]
 801a86c:	4656      	mov	r6, sl
 801a86e:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801a872:	460d      	mov	r5, r1
 801a874:	eb09 1943 	add.w	r9, r9, r3, lsl #5
 801a878:	4690      	mov	r8, r2
 801a87a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a87c:	9701      	str	r7, [sp, #4]
 801a87e:	9300      	str	r3, [sp, #0]
 801a880:	4642      	mov	r2, r8
 801a882:	4628      	mov	r0, r5
 801a884:	e9cd a602 	strd	sl, r6, [sp, #8]
 801a888:	4623      	mov	r3, r4
 801a88a:	4621      	mov	r1, r4
 801a88c:	3520      	adds	r5, #32
 801a88e:	f7ff ffb3 	bl	801a7f8 <awe_vecBiquadCascade_8ch>
 801a892:	454d      	cmp	r5, r9
 801a894:	445f      	add	r7, fp
 801a896:	f108 0820 	add.w	r8, r8, #32
 801a89a:	d1ee      	bne.n	801a87a <awe_vecBiquadCascadeProcess+0x36>
 801a89c:	9d06      	ldr	r5, [sp, #24]
 801a89e:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801a8a2:	3501      	adds	r5, #1
 801a8a4:	46b2      	mov	sl, r6
 801a8a6:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a8a8:	00ed      	lsls	r5, r5, #3
 801a8aa:	1ee3      	subs	r3, r4, #3
 801a8ac:	42ab      	cmp	r3, r5
 801a8ae:	dd39      	ble.n	801a924 <awe_vecBiquadCascadeProcess+0xe0>
 801a8b0:	9904      	ldr	r1, [sp, #16]
 801a8b2:	9615      	str	r6, [sp, #84]	@ 0x54
 801a8b4:	1f23      	subs	r3, r4, #4
 801a8b6:	1b5b      	subs	r3, r3, r5
 801a8b8:	f023 0203 	bic.w	r2, r3, #3
 801a8bc:	9306      	str	r3, [sp, #24]
 801a8be:	460b      	mov	r3, r1
 801a8c0:	442a      	add	r2, r5
 801a8c2:	3310      	adds	r3, #16
 801a8c4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801a8c8:	9a05      	ldr	r2, [sp, #20]
 801a8ca:	9507      	str	r5, [sp, #28]
 801a8cc:	ea4f 0885 	mov.w	r8, r5, lsl #2
 801a8d0:	eb01 0708 	add.w	r7, r1, r8
 801a8d4:	4490      	add	r8, r2
 801a8d6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a8d8:	fb05 f906 	mul.w	r9, r5, r6
 801a8dc:	eb02 09c9 	add.w	r9, r2, r9, lsl #3
 801a8e0:	ea4f 1b46 	mov.w	fp, r6, lsl #5
 801a8e4:	4656      	mov	r6, sl
 801a8e6:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801a8ea:	464d      	mov	r5, r9
 801a8ec:	4699      	mov	r9, r3
 801a8ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a8f0:	9501      	str	r5, [sp, #4]
 801a8f2:	9300      	str	r3, [sp, #0]
 801a8f4:	4642      	mov	r2, r8
 801a8f6:	4638      	mov	r0, r7
 801a8f8:	e9cd a602 	strd	sl, r6, [sp, #8]
 801a8fc:	4623      	mov	r3, r4
 801a8fe:	4621      	mov	r1, r4
 801a900:	3710      	adds	r7, #16
 801a902:	f7ff ff57 	bl	801a7b4 <awe_vecBiquadCascade_4ch>
 801a906:	454f      	cmp	r7, r9
 801a908:	445d      	add	r5, fp
 801a90a:	f108 0810 	add.w	r8, r8, #16
 801a90e:	d1ee      	bne.n	801a8ee <awe_vecBiquadCascadeProcess+0xaa>
 801a910:	9d07      	ldr	r5, [sp, #28]
 801a912:	9b06      	ldr	r3, [sp, #24]
 801a914:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801a918:	3504      	adds	r5, #4
 801a91a:	46b2      	mov	sl, r6
 801a91c:	f023 0303 	bic.w	r3, r3, #3
 801a920:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a922:	441d      	add	r5, r3
 801a924:	1e63      	subs	r3, r4, #1
 801a926:	42ab      	cmp	r3, r5
 801a928:	dd39      	ble.n	801a99e <awe_vecBiquadCascadeProcess+0x15a>
 801a92a:	9904      	ldr	r1, [sp, #16]
 801a92c:	9615      	str	r6, [sp, #84]	@ 0x54
 801a92e:	1ea3      	subs	r3, r4, #2
 801a930:	1b5b      	subs	r3, r3, r5
 801a932:	f023 0201 	bic.w	r2, r3, #1
 801a936:	9306      	str	r3, [sp, #24]
 801a938:	460b      	mov	r3, r1
 801a93a:	442a      	add	r2, r5
 801a93c:	3308      	adds	r3, #8
 801a93e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801a942:	9a05      	ldr	r2, [sp, #20]
 801a944:	9507      	str	r5, [sp, #28]
 801a946:	ea4f 0885 	mov.w	r8, r5, lsl #2
 801a94a:	eb01 0708 	add.w	r7, r1, r8
 801a94e:	4490      	add	r8, r2
 801a950:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a952:	fb05 f906 	mul.w	r9, r5, r6
 801a956:	eb02 09c9 	add.w	r9, r2, r9, lsl #3
 801a95a:	ea4f 1b06 	mov.w	fp, r6, lsl #4
 801a95e:	4656      	mov	r6, sl
 801a960:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801a964:	464d      	mov	r5, r9
 801a966:	4699      	mov	r9, r3
 801a968:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a96a:	9501      	str	r5, [sp, #4]
 801a96c:	9300      	str	r3, [sp, #0]
 801a96e:	4642      	mov	r2, r8
 801a970:	4638      	mov	r0, r7
 801a972:	e9cd a602 	strd	sl, r6, [sp, #8]
 801a976:	4623      	mov	r3, r4
 801a978:	4621      	mov	r1, r4
 801a97a:	3708      	adds	r7, #8
 801a97c:	f7ff fef8 	bl	801a770 <awe_vecBiquadCascade_2ch>
 801a980:	454f      	cmp	r7, r9
 801a982:	445d      	add	r5, fp
 801a984:	f108 0808 	add.w	r8, r8, #8
 801a988:	d1ee      	bne.n	801a968 <awe_vecBiquadCascadeProcess+0x124>
 801a98a:	9d07      	ldr	r5, [sp, #28]
 801a98c:	9b06      	ldr	r3, [sp, #24]
 801a98e:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801a992:	3502      	adds	r5, #2
 801a994:	46b2      	mov	sl, r6
 801a996:	f023 0301 	bic.w	r3, r3, #1
 801a99a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801a99c:	441d      	add	r5, r3
 801a99e:	42ac      	cmp	r4, r5
 801a9a0:	dd21      	ble.n	801a9e6 <awe_vecBiquadCascadeProcess+0x1a2>
 801a9a2:	9b05      	ldr	r3, [sp, #20]
 801a9a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a9a6:	ea4f 0985 	mov.w	r9, r5, lsl #2
 801a9aa:	444b      	add	r3, r9
 801a9ac:	4698      	mov	r8, r3
 801a9ae:	9b04      	ldr	r3, [sp, #16]
 801a9b0:	fb05 f506 	mul.w	r5, r5, r6
 801a9b4:	4499      	add	r9, r3
 801a9b6:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 801a9ba:	eb03 0784 	add.w	r7, r3, r4, lsl #2
 801a9be:	ea4f 0bc6 	mov.w	fp, r6, lsl #3
 801a9c2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a9c4:	9501      	str	r5, [sp, #4]
 801a9c6:	9300      	str	r3, [sp, #0]
 801a9c8:	4642      	mov	r2, r8
 801a9ca:	4648      	mov	r0, r9
 801a9cc:	e9cd 6a02 	strd	r6, sl, [sp, #8]
 801a9d0:	4623      	mov	r3, r4
 801a9d2:	4621      	mov	r1, r4
 801a9d4:	f109 0904 	add.w	r9, r9, #4
 801a9d8:	f7ff fb30 	bl	801a03c <awe_vecBiquadCascade>
 801a9dc:	454f      	cmp	r7, r9
 801a9de:	445d      	add	r5, fp
 801a9e0:	f108 0804 	add.w	r8, r8, #4
 801a9e4:	d1ed      	bne.n	801a9c2 <awe_vecBiquadCascadeProcess+0x17e>
 801a9e6:	b009      	add	sp, #36	@ 0x24
 801a9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9ec:	2500      	movs	r5, #0
 801a9ee:	e75c      	b.n	801a8aa <awe_vecBiquadCascadeProcess+0x66>

0801a9f0 <awe_vecBiquadNCascadeConstructor>:
 801a9f0:	2001      	movs	r0, #1
 801a9f2:	4770      	bx	lr

0801a9f4 <awe_vecBiquadNCascadeSet>:
 801a9f4:	4770      	bx	lr
 801a9f6:	bf00      	nop

0801a9f8 <awe_vecBiquadNCascadeProcess>:
 801a9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9fc:	b08d      	sub	sp, #52	@ 0x34
 801a9fe:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 801aa02:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801aa06:	f8dd 9064 	ldr.w	r9, [sp, #100]	@ 0x64
 801aa0a:	9306      	str	r3, [sp, #24]
 801aa0c:	f1b8 0f01 	cmp.w	r8, #1
 801aa10:	dd61      	ble.n	801aad6 <awe_vecBiquadNCascadeProcess+0xde>
 801aa12:	f1a8 0302 	sub.w	r3, r8, #2
 801aa16:	0858      	lsrs	r0, r3, #1
 801aa18:	460b      	mov	r3, r1
 801aa1a:	3308      	adds	r3, #8
 801aa1c:	eb09 0a89 	add.w	sl, r9, r9, lsl #2
 801aa20:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 801aa24:	e9dd 4617 	ldrd	r4, r6, [sp, #92]	@ 0x5c
 801aa28:	9307      	str	r3, [sp, #28]
 801aa2a:	ea4f 038a 	mov.w	r3, sl, lsl #2
 801aa2e:	9009      	str	r0, [sp, #36]	@ 0x24
 801aa30:	9308      	str	r3, [sp, #32]
 801aa32:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 801aa36:	ea4f 1b09 	mov.w	fp, r9, lsl #4
 801aa3a:	460d      	mov	r5, r1
 801aa3c:	4617      	mov	r7, r2
 801aa3e:	9b08      	ldr	r3, [sp, #32]
 801aa40:	9a06      	ldr	r2, [sp, #24]
 801aa42:	9602      	str	r6, [sp, #8]
 801aa44:	18e3      	adds	r3, r4, r3
 801aa46:	e9cd 4300 	strd	r4, r3, [sp]
 801aa4a:	e9cd 9203 	strd	r9, r2, [sp, #12]
 801aa4e:	4643      	mov	r3, r8
 801aa50:	463a      	mov	r2, r7
 801aa52:	4628      	mov	r0, r5
 801aa54:	4641      	mov	r1, r8
 801aa56:	f00f f945 	bl	8029ce4 <awe_vecBiquadNCascade_2ch>
 801aa5a:	9b07      	ldr	r3, [sp, #28]
 801aa5c:	3508      	adds	r5, #8
 801aa5e:	429d      	cmp	r5, r3
 801aa60:	445e      	add	r6, fp
 801aa62:	4454      	add	r4, sl
 801aa64:	f107 0708 	add.w	r7, r7, #8
 801aa68:	d1e9      	bne.n	801aa3e <awe_vecBiquadNCascadeProcess+0x46>
 801aa6a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801aa6c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801aa6e:	3401      	adds	r4, #1
 801aa70:	fb04 330a 	mla	r3, r4, sl, r3
 801aa74:	9317      	str	r3, [sp, #92]	@ 0x5c
 801aa76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801aa78:	fb04 330b 	mla	r3, r4, fp, r3
 801aa7c:	9318      	str	r3, [sp, #96]	@ 0x60
 801aa7e:	0064      	lsls	r4, r4, #1
 801aa80:	45a0      	cmp	r8, r4
 801aa82:	dd25      	ble.n	801aad0 <awe_vecBiquadNCascadeProcess+0xd8>
 801aa84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aa86:	f8cd 9064 	str.w	r9, [sp, #100]	@ 0x64
 801aa8a:	00a4      	lsls	r4, r4, #2
 801aa8c:	4423      	add	r3, r4
 801aa8e:	461d      	mov	r5, r3
 801aa90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aa92:	eb09 0789 	add.w	r7, r9, r9, lsl #2
 801aa96:	eb03 0688 	add.w	r6, r3, r8, lsl #2
 801aa9a:	00bf      	lsls	r7, r7, #2
 801aa9c:	ea4f 0ac9 	mov.w	sl, r9, lsl #3
 801aaa0:	46bb      	mov	fp, r7
 801aaa2:	46b1      	mov	r9, r6
 801aaa4:	9f18      	ldr	r7, [sp, #96]	@ 0x60
 801aaa6:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801aaa8:	441c      	add	r4, r3
 801aaaa:	9b06      	ldr	r3, [sp, #24]
 801aaac:	9303      	str	r3, [sp, #12]
 801aaae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801aab0:	9600      	str	r6, [sp, #0]
 801aab2:	e9cd 7301 	strd	r7, r3, [sp, #4]
 801aab6:	462a      	mov	r2, r5
 801aab8:	4620      	mov	r0, r4
 801aaba:	4643      	mov	r3, r8
 801aabc:	4641      	mov	r1, r8
 801aabe:	3404      	adds	r4, #4
 801aac0:	f7ff fabc 	bl	801a03c <awe_vecBiquadCascade>
 801aac4:	454c      	cmp	r4, r9
 801aac6:	4457      	add	r7, sl
 801aac8:	445e      	add	r6, fp
 801aaca:	f105 0504 	add.w	r5, r5, #4
 801aace:	d1ec      	bne.n	801aaaa <awe_vecBiquadNCascadeProcess+0xb2>
 801aad0:	b00d      	add	sp, #52	@ 0x34
 801aad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aad6:	2400      	movs	r4, #0
 801aad8:	e7d2      	b.n	801aa80 <awe_vecBiquadNCascadeProcess+0x88>
 801aada:	bf00      	nop

0801aadc <awe_vecCircRead>:
 801aadc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aae0:	b087      	sub	sp, #28
 801aae2:	460c      	mov	r4, r1
 801aae4:	9205      	str	r2, [sp, #20]
 801aae6:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
 801aaea:	6812      	ldr	r2, [r2, #0]
 801aaec:	9102      	str	r1, [sp, #8]
 801aaee:	eb02 010b 	add.w	r1, r2, fp
 801aaf2:	42a1      	cmp	r1, r4
 801aaf4:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 801aaf6:	9001      	str	r0, [sp, #4]
 801aaf8:	dc51      	bgt.n	801ab9e <awe_vecCircRead+0xc2>
 801aafa:	ea5f 04ab 	movs.w	r4, fp, asr #2
 801aafe:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801ab02:	9403      	str	r4, [sp, #12]
 801ab04:	d025      	beq.n	801ab52 <awe_vecCircRead+0x76>
 801ab06:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ab08:	9304      	str	r3, [sp, #16]
 801ab0a:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 801ab0e:	009d      	lsls	r5, r3, #2
 801ab10:	eb0c 0ac2 	add.w	sl, ip, r2, lsl #3
 801ab14:	ea4f 1802 	mov.w	r8, r2, lsl #4
 801ab18:	eb05 09c3 	add.w	r9, r5, r3, lsl #3
 801ab1c:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 801ab20:	4608      	mov	r0, r1
 801ab22:	463a      	mov	r2, r7
 801ab24:	6806      	ldr	r6, [r0, #0]
 801ab26:	6016      	str	r6, [r2, #0]
 801ab28:	5946      	ldr	r6, [r0, r5]
 801ab2a:	f842 600c 	str.w	r6, [r2, ip]
 801ab2e:	f850 3015 	ldr.w	r3, [r0, r5, lsl #1]
 801ab32:	f850 6009 	ldr.w	r6, [r0, r9]
 801ab36:	f842 301c 	str.w	r3, [r2, ip, lsl #1]
 801ab3a:	3c01      	subs	r4, #1
 801ab3c:	f842 600a 	str.w	r6, [r2, sl]
 801ab40:	4470      	add	r0, lr
 801ab42:	4442      	add	r2, r8
 801ab44:	d1ee      	bne.n	801ab24 <awe_vecCircRead+0x48>
 801ab46:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 801ab4a:	fb08 7702 	mla	r7, r8, r2, r7
 801ab4e:	fb0e 1102 	mla	r1, lr, r2, r1
 801ab52:	f01b 0003 	ands.w	r0, fp, #3
 801ab56:	d016      	beq.n	801ab86 <awe_vecCircRead+0xaa>
 801ab58:	680a      	ldr	r2, [r1, #0]
 801ab5a:	603a      	str	r2, [r7, #0]
 801ab5c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ab5e:	009c      	lsls	r4, r3, #2
 801ab60:	2801      	cmp	r0, #1
 801ab62:	eb01 0604 	add.w	r6, r1, r4
 801ab66:	eb07 0c82 	add.w	ip, r7, r2, lsl #2
 801ab6a:	d00a      	beq.n	801ab82 <awe_vecCircRead+0xa6>
 801ab6c:	2802      	cmp	r0, #2
 801ab6e:	f851 5023 	ldr.w	r5, [r1, r3, lsl #2]
 801ab72:	bf18      	it	ne
 801ab74:	f856 3023 	ldrne.w	r3, [r6, r3, lsl #2]
 801ab78:	f847 5022 	str.w	r5, [r7, r2, lsl #2]
 801ab7c:	bf18      	it	ne
 801ab7e:	f84c 3022 	strne.w	r3, [ip, r2, lsl #2]
 801ab82:	fb00 1104 	mla	r1, r0, r4, r1
 801ab86:	9b01      	ldr	r3, [sp, #4]
 801ab88:	1ac9      	subs	r1, r1, r3
 801ab8a:	9b02      	ldr	r3, [sp, #8]
 801ab8c:	1089      	asrs	r1, r1, #2
 801ab8e:	4299      	cmp	r1, r3
 801ab90:	bfa8      	it	ge
 801ab92:	1ac9      	subge	r1, r1, r3
 801ab94:	9b05      	ldr	r3, [sp, #20]
 801ab96:	6019      	str	r1, [r3, #0]
 801ab98:	b007      	add	sp, #28
 801ab9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab9e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801aba0:	0098      	lsls	r0, r3, #2
 801aba2:	011e      	lsls	r6, r3, #4
 801aba4:	008c      	lsls	r4, r1, #2
 801aba6:	eb00 09c3 	add.w	r9, r0, r3, lsl #3
 801abaa:	9b02      	ldr	r3, [sp, #8]
 801abac:	eb04 08c1 	add.w	r8, r4, r1, lsl #3
 801abb0:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 801abb4:	46b4      	mov	ip, r6
 801abb6:	eba3 0a02 	sub.w	sl, r3, r2
 801abba:	9b01      	ldr	r3, [sp, #4]
 801abbc:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 801abc0:	ea5f 03aa 	movs.w	r3, sl, asr #2
 801abc4:	9303      	str	r3, [sp, #12]
 801abc6:	d019      	beq.n	801abfc <awe_vecCircRead+0x120>
 801abc8:	461d      	mov	r5, r3
 801abca:	4611      	mov	r1, r2
 801abcc:	463b      	mov	r3, r7
 801abce:	9204      	str	r2, [sp, #16]
 801abd0:	680e      	ldr	r6, [r1, #0]
 801abd2:	601e      	str	r6, [r3, #0]
 801abd4:	580e      	ldr	r6, [r1, r0]
 801abd6:	511e      	str	r6, [r3, r4]
 801abd8:	f851 2010 	ldr.w	r2, [r1, r0, lsl #1]
 801abdc:	f851 6009 	ldr.w	r6, [r1, r9]
 801abe0:	f843 2014 	str.w	r2, [r3, r4, lsl #1]
 801abe4:	3d01      	subs	r5, #1
 801abe6:	f843 6008 	str.w	r6, [r3, r8]
 801abea:	4461      	add	r1, ip
 801abec:	4473      	add	r3, lr
 801abee:	d1ef      	bne.n	801abd0 <awe_vecCircRead+0xf4>
 801abf0:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 801abf4:	fb0e 7703 	mla	r7, lr, r3, r7
 801abf8:	fb0c 2203 	mla	r2, ip, r3, r2
 801abfc:	f01a 0103 	ands.w	r1, sl, #3
 801ac00:	d00f      	beq.n	801ac22 <awe_vecCircRead+0x146>
 801ac02:	6813      	ldr	r3, [r2, #0]
 801ac04:	603b      	str	r3, [r7, #0]
 801ac06:	2901      	cmp	r1, #1
 801ac08:	4402      	add	r2, r0
 801ac0a:	4427      	add	r7, r4
 801ac0c:	d009      	beq.n	801ac22 <awe_vecCircRead+0x146>
 801ac0e:	6813      	ldr	r3, [r2, #0]
 801ac10:	603b      	str	r3, [r7, #0]
 801ac12:	2902      	cmp	r1, #2
 801ac14:	4402      	add	r2, r0
 801ac16:	4427      	add	r7, r4
 801ac18:	d003      	beq.n	801ac22 <awe_vecCircRead+0x146>
 801ac1a:	6813      	ldr	r3, [r2, #0]
 801ac1c:	603b      	str	r3, [r7, #0]
 801ac1e:	4402      	add	r2, r0
 801ac20:	4427      	add	r7, r4
 801ac22:	9b02      	ldr	r3, [sp, #8]
 801ac24:	9d01      	ldr	r5, [sp, #4]
 801ac26:	ebab 0b0a 	sub.w	fp, fp, sl
 801ac2a:	1b52      	subs	r2, r2, r5
 801ac2c:	455b      	cmp	r3, fp
 801ac2e:	ebc3 02a2 	rsb	r2, r3, r2, asr #2
 801ac32:	ddc0      	ble.n	801abb6 <awe_vecCircRead+0xda>
 801ac34:	ea5f 0aab 	movs.w	sl, fp, asr #2
 801ac38:	4666      	mov	r6, ip
 801ac3a:	eb05 0182 	add.w	r1, r5, r2, lsl #2
 801ac3e:	d019      	beq.n	801ac74 <awe_vecCircRead+0x198>
 801ac40:	460a      	mov	r2, r1
 801ac42:	4655      	mov	r5, sl
 801ac44:	463b      	mov	r3, r7
 801ac46:	468c      	mov	ip, r1
 801ac48:	9710      	str	r7, [sp, #64]	@ 0x40
 801ac4a:	6811      	ldr	r1, [r2, #0]
 801ac4c:	6019      	str	r1, [r3, #0]
 801ac4e:	5811      	ldr	r1, [r2, r0]
 801ac50:	5119      	str	r1, [r3, r4]
 801ac52:	f852 7010 	ldr.w	r7, [r2, r0, lsl #1]
 801ac56:	f852 1009 	ldr.w	r1, [r2, r9]
 801ac5a:	f843 7014 	str.w	r7, [r3, r4, lsl #1]
 801ac5e:	3d01      	subs	r5, #1
 801ac60:	f843 1008 	str.w	r1, [r3, r8]
 801ac64:	4432      	add	r2, r6
 801ac66:	4473      	add	r3, lr
 801ac68:	d1ef      	bne.n	801ac4a <awe_vecCircRead+0x16e>
 801ac6a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 801ac6c:	fb06 c10a 	mla	r1, r6, sl, ip
 801ac70:	fb0e 770a 	mla	r7, lr, sl, r7
 801ac74:	f01b 0203 	ands.w	r2, fp, #3
 801ac78:	d085      	beq.n	801ab86 <awe_vecCircRead+0xaa>
 801ac7a:	680b      	ldr	r3, [r1, #0]
 801ac7c:	603b      	str	r3, [r7, #0]
 801ac7e:	2a01      	cmp	r2, #1
 801ac80:	4401      	add	r1, r0
 801ac82:	d080      	beq.n	801ab86 <awe_vecCircRead+0xaa>
 801ac84:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ac86:	680b      	ldr	r3, [r1, #0]
 801ac88:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
 801ac8c:	2a02      	cmp	r2, #2
 801ac8e:	443c      	add	r4, r7
 801ac90:	4401      	add	r1, r0
 801ac92:	f43f af78 	beq.w	801ab86 <awe_vecCircRead+0xaa>
 801ac96:	680b      	ldr	r3, [r1, #0]
 801ac98:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
 801ac9c:	4401      	add	r1, r0
 801ac9e:	e772      	b.n	801ab86 <awe_vecCircRead+0xaa>

0801aca0 <awe_vecClip32To16>:
 801aca0:	b470      	push	{r4, r5, r6}
 801aca2:	9e03      	ldr	r6, [sp, #12]
 801aca4:	2e00      	cmp	r6, #0
 801aca6:	dd0a      	ble.n	801acbe <awe_vecClip32To16+0x1e>
 801aca8:	005b      	lsls	r3, r3, #1
 801acaa:	0089      	lsls	r1, r1, #2
 801acac:	2400      	movs	r4, #0
 801acae:	3401      	adds	r4, #1
 801acb0:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 801acb4:	8015      	strh	r5, [r2, #0]
 801acb6:	42a6      	cmp	r6, r4
 801acb8:	4408      	add	r0, r1
 801acba:	441a      	add	r2, r3
 801acbc:	d1f7      	bne.n	801acae <awe_vecClip32To16+0xe>
 801acbe:	bc70      	pop	{r4, r5, r6}
 801acc0:	4770      	bx	lr
 801acc2:	bf00      	nop

0801acc4 <awe_vecClip32To24R>:
 801acc4:	b470      	push	{r4, r5, r6}
 801acc6:	9e03      	ldr	r6, [sp, #12]
 801acc8:	2e00      	cmp	r6, #0
 801acca:	dd0a      	ble.n	801ace2 <awe_vecClip32To24R+0x1e>
 801accc:	009b      	lsls	r3, r3, #2
 801acce:	0089      	lsls	r1, r1, #2
 801acd0:	2500      	movs	r5, #0
 801acd2:	6804      	ldr	r4, [r0, #0]
 801acd4:	3501      	adds	r5, #1
 801acd6:	1224      	asrs	r4, r4, #8
 801acd8:	42ae      	cmp	r6, r5
 801acda:	6014      	str	r4, [r2, #0]
 801acdc:	4408      	add	r0, r1
 801acde:	441a      	add	r2, r3
 801ace0:	d1f7      	bne.n	801acd2 <awe_vecClip32To24R+0xe>
 801ace2:	bc70      	pop	{r4, r5, r6}
 801ace4:	4770      	bx	lr
 801ace6:	bf00      	nop

0801ace8 <awe_vecClipAsym>:
 801ace8:	b470      	push	{r4, r5, r6}
 801acea:	10d6      	asrs	r6, r2, #3
 801acec:	f000 809e 	beq.w	801ae2c <awe_vecClipAsym+0x144>
 801acf0:	f100 0420 	add.w	r4, r0, #32
 801acf4:	f101 0320 	add.w	r3, r1, #32
 801acf8:	4635      	mov	r5, r6
 801acfa:	ed14 6a08 	vldr	s12, [r4, #-32]	@ 0xffffffe0
 801acfe:	ed54 6a07 	vldr	s13, [r4, #-28]	@ 0xffffffe4
 801ad02:	ed14 7a06 	vldr	s14, [r4, #-24]	@ 0xffffffe8
 801ad06:	ed54 7a05 	vldr	s15, [r4, #-20]	@ 0xffffffec
 801ad0a:	eeb4 0a46 	vcmp.f32	s0, s12
 801ad0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad12:	bfc8      	it	gt
 801ad14:	eeb0 6a40 	vmovgt.f32	s12, s0
 801ad18:	eef4 0a46 	vcmp.f32	s1, s12
 801ad1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad20:	eeb4 0a66 	vcmp.f32	s0, s13
 801ad24:	bf48      	it	mi
 801ad26:	eeb0 6a60 	vmovmi.f32	s12, s1
 801ad2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad2e:	bfc8      	it	gt
 801ad30:	eef0 6a40 	vmovgt.f32	s13, s0
 801ad34:	eef4 0a66 	vcmp.f32	s1, s13
 801ad38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad3c:	eeb4 0a47 	vcmp.f32	s0, s14
 801ad40:	bf48      	it	mi
 801ad42:	eef0 6a60 	vmovmi.f32	s13, s1
 801ad46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad4a:	bfc8      	it	gt
 801ad4c:	eeb0 7a40 	vmovgt.f32	s14, s0
 801ad50:	eef4 0a47 	vcmp.f32	s1, s14
 801ad54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad58:	eeb4 0a67 	vcmp.f32	s0, s15
 801ad5c:	ed03 6a08 	vstr	s12, [r3, #-32]	@ 0xffffffe0
 801ad60:	ed43 6a07 	vstr	s13, [r3, #-28]	@ 0xffffffe4
 801ad64:	bf48      	it	mi
 801ad66:	eeb0 7a60 	vmovmi.f32	s14, s1
 801ad6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad6e:	ed54 6a04 	vldr	s13, [r4, #-16]
 801ad72:	ed03 7a06 	vstr	s14, [r3, #-24]	@ 0xffffffe8
 801ad76:	bfc8      	it	gt
 801ad78:	eef0 7a40 	vmovgt.f32	s15, s0
 801ad7c:	eef4 0a67 	vcmp.f32	s1, s15
 801ad80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad84:	eeb4 0a66 	vcmp.f32	s0, s13
 801ad88:	bf48      	it	mi
 801ad8a:	eef0 7a60 	vmovmi.f32	s15, s1
 801ad8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad92:	ed14 7a03 	vldr	s14, [r4, #-12]
 801ad96:	ed43 7a05 	vstr	s15, [r3, #-20]	@ 0xffffffec
 801ad9a:	bfc8      	it	gt
 801ad9c:	eef0 6a40 	vmovgt.f32	s13, s0
 801ada0:	eef4 0a66 	vcmp.f32	s1, s13
 801ada4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ada8:	eeb4 0a47 	vcmp.f32	s0, s14
 801adac:	bf48      	it	mi
 801adae:	eef0 6a60 	vmovmi.f32	s13, s1
 801adb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adb6:	ed54 7a02 	vldr	s15, [r4, #-8]
 801adba:	ed14 6a01 	vldr	s12, [r4, #-4]
 801adbe:	ed43 6a04 	vstr	s13, [r3, #-16]
 801adc2:	bfc8      	it	gt
 801adc4:	eeb0 7a40 	vmovgt.f32	s14, s0
 801adc8:	eef4 0a47 	vcmp.f32	s1, s14
 801adcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801add0:	eeb4 0a67 	vcmp.f32	s0, s15
 801add4:	bf48      	it	mi
 801add6:	eeb0 7a60 	vmovmi.f32	s14, s1
 801adda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adde:	bfc8      	it	gt
 801ade0:	eef0 7a40 	vmovgt.f32	s15, s0
 801ade4:	eef4 0a67 	vcmp.f32	s1, s15
 801ade8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adec:	eeb4 0a46 	vcmp.f32	s0, s12
 801adf0:	bf48      	it	mi
 801adf2:	eef0 7a60 	vmovmi.f32	s15, s1
 801adf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adfa:	bfc8      	it	gt
 801adfc:	eeb0 6a40 	vmovgt.f32	s12, s0
 801ae00:	eef4 0ac6 	vcmpe.f32	s1, s12
 801ae04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae08:	ed03 7a03 	vstr	s14, [r3, #-12]
 801ae0c:	ed43 7a02 	vstr	s15, [r3, #-8]
 801ae10:	f100 809c 	bmi.w	801af4c <awe_vecClipAsym+0x264>
 801ae14:	3d01      	subs	r5, #1
 801ae16:	ed03 6a01 	vstr	s12, [r3, #-4]
 801ae1a:	f104 0420 	add.w	r4, r4, #32
 801ae1e:	f103 0320 	add.w	r3, r3, #32
 801ae22:	f47f af6a 	bne.w	801acfa <awe_vecClipAsym+0x12>
 801ae26:	0176      	lsls	r6, r6, #5
 801ae28:	4430      	add	r0, r6
 801ae2a:	4431      	add	r1, r6
 801ae2c:	f012 0207 	ands.w	r2, r2, #7
 801ae30:	f000 808a 	beq.w	801af48 <awe_vecClipAsym+0x260>
 801ae34:	edd0 7a00 	vldr	s15, [r0]
 801ae38:	eeb4 0a67 	vcmp.f32	s0, s15
 801ae3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae40:	bfc8      	it	gt
 801ae42:	eef0 7a40 	vmovgt.f32	s15, s0
 801ae46:	eef4 0a67 	vcmp.f32	s1, s15
 801ae4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae4e:	bf48      	it	mi
 801ae50:	eef0 7a60 	vmovmi.f32	s15, s1
 801ae54:	2a01      	cmp	r2, #1
 801ae56:	edc1 7a00 	vstr	s15, [r1]
 801ae5a:	d075      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801ae5c:	edd0 7a01 	vldr	s15, [r0, #4]
 801ae60:	eeb4 0a67 	vcmp.f32	s0, s15
 801ae64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae68:	bfc8      	it	gt
 801ae6a:	eef0 7a40 	vmovgt.f32	s15, s0
 801ae6e:	eef4 0a67 	vcmp.f32	s1, s15
 801ae72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae76:	bf48      	it	mi
 801ae78:	eef0 7a60 	vmovmi.f32	s15, s1
 801ae7c:	2a02      	cmp	r2, #2
 801ae7e:	edc1 7a01 	vstr	s15, [r1, #4]
 801ae82:	d061      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801ae84:	edd0 7a02 	vldr	s15, [r0, #8]
 801ae88:	eef4 7a40 	vcmp.f32	s15, s0
 801ae8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae90:	bf48      	it	mi
 801ae92:	eef0 7a40 	vmovmi.f32	s15, s0
 801ae96:	eef4 0a67 	vcmp.f32	s1, s15
 801ae9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae9e:	bf48      	it	mi
 801aea0:	eef0 7a60 	vmovmi.f32	s15, s1
 801aea4:	2a03      	cmp	r2, #3
 801aea6:	edc1 7a02 	vstr	s15, [r1, #8]
 801aeaa:	d04d      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801aeac:	edd0 7a03 	vldr	s15, [r0, #12]
 801aeb0:	eeb4 0a67 	vcmp.f32	s0, s15
 801aeb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeb8:	bfc8      	it	gt
 801aeba:	eef0 7a40 	vmovgt.f32	s15, s0
 801aebe:	eef4 7a60 	vcmp.f32	s15, s1
 801aec2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aec6:	bfc8      	it	gt
 801aec8:	eef0 7a60 	vmovgt.f32	s15, s1
 801aecc:	2a04      	cmp	r2, #4
 801aece:	edc1 7a03 	vstr	s15, [r1, #12]
 801aed2:	d039      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801aed4:	edd0 7a04 	vldr	s15, [r0, #16]
 801aed8:	eeb4 0a67 	vcmp.f32	s0, s15
 801aedc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aee0:	bfc8      	it	gt
 801aee2:	eef0 7a40 	vmovgt.f32	s15, s0
 801aee6:	eef4 0a67 	vcmp.f32	s1, s15
 801aeea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeee:	bf48      	it	mi
 801aef0:	eef0 7a60 	vmovmi.f32	s15, s1
 801aef4:	2a05      	cmp	r2, #5
 801aef6:	edc1 7a04 	vstr	s15, [r1, #16]
 801aefa:	d025      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801aefc:	edd0 7a05 	vldr	s15, [r0, #20]
 801af00:	eeb4 0a67 	vcmp.f32	s0, s15
 801af04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af08:	bfc8      	it	gt
 801af0a:	eef0 7a40 	vmovgt.f32	s15, s0
 801af0e:	eef4 0a67 	vcmp.f32	s1, s15
 801af12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af16:	bf48      	it	mi
 801af18:	eef0 7a60 	vmovmi.f32	s15, s1
 801af1c:	2a06      	cmp	r2, #6
 801af1e:	edc1 7a05 	vstr	s15, [r1, #20]
 801af22:	d011      	beq.n	801af48 <awe_vecClipAsym+0x260>
 801af24:	edd0 7a06 	vldr	s15, [r0, #24]
 801af28:	eeb4 0a67 	vcmp.f32	s0, s15
 801af2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af30:	bfc8      	it	gt
 801af32:	eef0 7a40 	vmovgt.f32	s15, s0
 801af36:	eef4 0a67 	vcmp.f32	s1, s15
 801af3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af3e:	bf48      	it	mi
 801af40:	eef0 7a60 	vmovmi.f32	s15, s1
 801af44:	edc1 7a06 	vstr	s15, [r1, #24]
 801af48:	bc70      	pop	{r4, r5, r6}
 801af4a:	4770      	bx	lr
 801af4c:	3d01      	subs	r5, #1
 801af4e:	ed43 0a01 	vstr	s1, [r3, #-4]
 801af52:	f104 0420 	add.w	r4, r4, #32
 801af56:	f103 0320 	add.w	r3, r3, #32
 801af5a:	f47f aece 	bne.w	801acfa <awe_vecClipAsym+0x12>
 801af5e:	e762      	b.n	801ae26 <awe_vecClipAsym+0x13e>

0801af60 <awe_vecClipAsymFract32>:
 801af60:	b5f0      	push	{r4, r5, r6, r7, lr}
 801af62:	9f05      	ldr	r7, [sp, #20]
 801af64:	ea5f 0ea7 	movs.w	lr, r7, asr #2
 801af68:	d037      	beq.n	801afda <awe_vecClipAsymFract32+0x7a>
 801af6a:	f100 0510 	add.w	r5, r0, #16
 801af6e:	f101 0410 	add.w	r4, r1, #16
 801af72:	46f4      	mov	ip, lr
 801af74:	f855 6c10 	ldr.w	r6, [r5, #-16]
 801af78:	4296      	cmp	r6, r2
 801af7a:	bfb8      	it	lt
 801af7c:	4616      	movlt	r6, r2
 801af7e:	429e      	cmp	r6, r3
 801af80:	bfa8      	it	ge
 801af82:	461e      	movge	r6, r3
 801af84:	f844 6c10 	str.w	r6, [r4, #-16]
 801af88:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 801af8c:	4296      	cmp	r6, r2
 801af8e:	bfb8      	it	lt
 801af90:	4616      	movlt	r6, r2
 801af92:	429e      	cmp	r6, r3
 801af94:	bfa8      	it	ge
 801af96:	461e      	movge	r6, r3
 801af98:	f844 6c0c 	str.w	r6, [r4, #-12]
 801af9c:	f855 6c08 	ldr.w	r6, [r5, #-8]
 801afa0:	4296      	cmp	r6, r2
 801afa2:	bfb8      	it	lt
 801afa4:	4616      	movlt	r6, r2
 801afa6:	429e      	cmp	r6, r3
 801afa8:	bfa8      	it	ge
 801afaa:	461e      	movge	r6, r3
 801afac:	f844 6c08 	str.w	r6, [r4, #-8]
 801afb0:	f855 6c04 	ldr.w	r6, [r5, #-4]
 801afb4:	4296      	cmp	r6, r2
 801afb6:	bfb8      	it	lt
 801afb8:	4616      	movlt	r6, r2
 801afba:	429e      	cmp	r6, r3
 801afbc:	bfa8      	it	ge
 801afbe:	461e      	movge	r6, r3
 801afc0:	f1bc 0c01 	subs.w	ip, ip, #1
 801afc4:	f844 6c04 	str.w	r6, [r4, #-4]
 801afc8:	f105 0510 	add.w	r5, r5, #16
 801afcc:	f104 0410 	add.w	r4, r4, #16
 801afd0:	d1d0      	bne.n	801af74 <awe_vecClipAsymFract32+0x14>
 801afd2:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
 801afd6:	4470      	add	r0, lr
 801afd8:	4471      	add	r1, lr
 801afda:	f017 0703 	ands.w	r7, r7, #3
 801afde:	d01b      	beq.n	801b018 <awe_vecClipAsymFract32+0xb8>
 801afe0:	6804      	ldr	r4, [r0, #0]
 801afe2:	4294      	cmp	r4, r2
 801afe4:	bfb8      	it	lt
 801afe6:	4614      	movlt	r4, r2
 801afe8:	429c      	cmp	r4, r3
 801afea:	bfa8      	it	ge
 801afec:	461c      	movge	r4, r3
 801afee:	2f01      	cmp	r7, #1
 801aff0:	600c      	str	r4, [r1, #0]
 801aff2:	d011      	beq.n	801b018 <awe_vecClipAsymFract32+0xb8>
 801aff4:	6844      	ldr	r4, [r0, #4]
 801aff6:	4294      	cmp	r4, r2
 801aff8:	bfb8      	it	lt
 801affa:	4614      	movlt	r4, r2
 801affc:	429c      	cmp	r4, r3
 801affe:	bfa8      	it	ge
 801b000:	461c      	movge	r4, r3
 801b002:	2f02      	cmp	r7, #2
 801b004:	604c      	str	r4, [r1, #4]
 801b006:	d007      	beq.n	801b018 <awe_vecClipAsymFract32+0xb8>
 801b008:	6880      	ldr	r0, [r0, #8]
 801b00a:	4282      	cmp	r2, r0
 801b00c:	bfb8      	it	lt
 801b00e:	4602      	movlt	r2, r0
 801b010:	4293      	cmp	r3, r2
 801b012:	bfa8      	it	ge
 801b014:	4613      	movge	r3, r2
 801b016:	608b      	str	r3, [r1, #8]
 801b018:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b01a:	bf00      	nop

0801b01c <awe_vecCopy16To32>:
 801b01c:	b470      	push	{r4, r5, r6}
 801b01e:	9e03      	ldr	r6, [sp, #12]
 801b020:	2e00      	cmp	r6, #0
 801b022:	dd0b      	ble.n	801b03c <awe_vecCopy16To32+0x20>
 801b024:	009b      	lsls	r3, r3, #2
 801b026:	0049      	lsls	r1, r1, #1
 801b028:	2500      	movs	r5, #0
 801b02a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b02e:	3501      	adds	r5, #1
 801b030:	0424      	lsls	r4, r4, #16
 801b032:	42ae      	cmp	r6, r5
 801b034:	6014      	str	r4, [r2, #0]
 801b036:	4408      	add	r0, r1
 801b038:	441a      	add	r2, r3
 801b03a:	d1f6      	bne.n	801b02a <awe_vecCopy16To32+0xe>
 801b03c:	bc70      	pop	{r4, r5, r6}
 801b03e:	4770      	bx	lr

0801b040 <awe_vecCopy24RTo32>:
 801b040:	b470      	push	{r4, r5, r6}
 801b042:	9e03      	ldr	r6, [sp, #12]
 801b044:	2e00      	cmp	r6, #0
 801b046:	dd0a      	ble.n	801b05e <awe_vecCopy24RTo32+0x1e>
 801b048:	009b      	lsls	r3, r3, #2
 801b04a:	0089      	lsls	r1, r1, #2
 801b04c:	2500      	movs	r5, #0
 801b04e:	6804      	ldr	r4, [r0, #0]
 801b050:	3501      	adds	r5, #1
 801b052:	0224      	lsls	r4, r4, #8
 801b054:	42ae      	cmp	r6, r5
 801b056:	6014      	str	r4, [r2, #0]
 801b058:	4408      	add	r0, r1
 801b05a:	441a      	add	r2, r3
 801b05c:	d1f7      	bne.n	801b04e <awe_vecCopy24RTo32+0xe>
 801b05e:	bc70      	pop	{r4, r5, r6}
 801b060:	4770      	bx	lr
 801b062:	bf00      	nop

0801b064 <awe_vecCopy32>:
 801b064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b068:	b08b      	sub	sp, #44	@ 0x2c
 801b06a:	4698      	mov	r8, r3
 801b06c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b06e:	9203      	str	r2, [sp, #12]
 801b070:	10db      	asrs	r3, r3, #3
 801b072:	2901      	cmp	r1, #1
 801b074:	4682      	mov	sl, r0
 801b076:	9304      	str	r3, [sp, #16]
 801b078:	f000 8096 	beq.w	801b1a8 <awe_vecCopy32+0x144>
 801b07c:	2b00      	cmp	r3, #0
 801b07e:	d04f      	beq.n	801b120 <awe_vecCopy32+0xbc>
 801b080:	ea4f 0088 	mov.w	r0, r8, lsl #2
 801b084:	eb00 03c8 	add.w	r3, r0, r8, lsl #3
 801b088:	ea4f 1c48 	mov.w	ip, r8, lsl #5
 801b08c:	eb00 1208 	add.w	r2, r0, r8, lsl #4
 801b090:	ebac 0500 	sub.w	r5, ip, r0
 801b094:	9301      	str	r3, [sp, #4]
 801b096:	005b      	lsls	r3, r3, #1
 801b098:	9306      	str	r3, [sp, #24]
 801b09a:	9505      	str	r5, [sp, #20]
 801b09c:	9202      	str	r2, [sp, #8]
 801b09e:	e9dd 2503 	ldrd	r2, r5, [sp, #12]
 801b0a2:	008c      	lsls	r4, r1, #2
 801b0a4:	4653      	mov	r3, sl
 801b0a6:	e9cd a107 	strd	sl, r1, [sp, #28]
 801b0aa:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801b0ae:	e9dd 8a05 	ldrd	r8, sl, [sp, #20]
 801b0b2:	eb04 07c1 	add.w	r7, r4, r1, lsl #3
 801b0b6:	014e      	lsls	r6, r1, #5
 801b0b8:	ea4f 0b47 	mov.w	fp, r7, lsl #1
 801b0bc:	eb04 1901 	add.w	r9, r4, r1, lsl #4
 801b0c0:	eba6 0e04 	sub.w	lr, r6, r4
 801b0c4:	9500      	str	r5, [sp, #0]
 801b0c6:	6819      	ldr	r1, [r3, #0]
 801b0c8:	6011      	str	r1, [r2, #0]
 801b0ca:	5919      	ldr	r1, [r3, r4]
 801b0cc:	5011      	str	r1, [r2, r0]
 801b0ce:	f853 1014 	ldr.w	r1, [r3, r4, lsl #1]
 801b0d2:	f842 1010 	str.w	r1, [r2, r0, lsl #1]
 801b0d6:	9901      	ldr	r1, [sp, #4]
 801b0d8:	460d      	mov	r5, r1
 801b0da:	59d9      	ldr	r1, [r3, r7]
 801b0dc:	5151      	str	r1, [r2, r5]
 801b0de:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 801b0e2:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
 801b0e6:	9d02      	ldr	r5, [sp, #8]
 801b0e8:	f853 1009 	ldr.w	r1, [r3, r9]
 801b0ec:	5151      	str	r1, [r2, r5]
 801b0ee:	f853 100b 	ldr.w	r1, [r3, fp]
 801b0f2:	f842 100a 	str.w	r1, [r2, sl]
 801b0f6:	f853 100e 	ldr.w	r1, [r3, lr]
 801b0fa:	f842 1008 	str.w	r1, [r2, r8]
 801b0fe:	9900      	ldr	r1, [sp, #0]
 801b100:	3901      	subs	r1, #1
 801b102:	4433      	add	r3, r6
 801b104:	4462      	add	r2, ip
 801b106:	9100      	str	r1, [sp, #0]
 801b108:	d1dd      	bne.n	801b0c6 <awe_vecCopy32+0x62>
 801b10a:	e9dd a107 	ldrd	sl, r1, [sp, #28]
 801b10e:	9b04      	ldr	r3, [sp, #16]
 801b110:	9a03      	ldr	r2, [sp, #12]
 801b112:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 801b116:	fb06 aa03 	mla	sl, r6, r3, sl
 801b11a:	fb0c 2303 	mla	r3, ip, r3, r2
 801b11e:	9303      	str	r3, [sp, #12]
 801b120:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b122:	f013 0007 	ands.w	r0, r3, #7
 801b126:	d03c      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b128:	9f03      	ldr	r7, [sp, #12]
 801b12a:	f8da 4000 	ldr.w	r4, [sl]
 801b12e:	603c      	str	r4, [r7, #0]
 801b130:	ea4f 0388 	mov.w	r3, r8, lsl #2
 801b134:	008a      	lsls	r2, r1, #2
 801b136:	2801      	cmp	r0, #1
 801b138:	eb07 0403 	add.w	r4, r7, r3
 801b13c:	eb0a 0602 	add.w	r6, sl, r2
 801b140:	d02f      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b142:	f85a 5021 	ldr.w	r5, [sl, r1, lsl #2]
 801b146:	f847 5028 	str.w	r5, [r7, r8, lsl #2]
 801b14a:	2802      	cmp	r0, #2
 801b14c:	eb04 0503 	add.w	r5, r4, r3
 801b150:	eb06 0702 	add.w	r7, r6, r2
 801b154:	d025      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b156:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 801b15a:	f844 6028 	str.w	r6, [r4, r8, lsl #2]
 801b15e:	2803      	cmp	r0, #3
 801b160:	eb05 0403 	add.w	r4, r5, r3
 801b164:	eb07 0c02 	add.w	ip, r7, r2
 801b168:	d01b      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b16a:	f857 6021 	ldr.w	r6, [r7, r1, lsl #2]
 801b16e:	f845 6028 	str.w	r6, [r5, r8, lsl #2]
 801b172:	2804      	cmp	r0, #4
 801b174:	eb04 0503 	add.w	r5, r4, r3
 801b178:	eb0c 0702 	add.w	r7, ip, r2
 801b17c:	d011      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b17e:	f85c 6021 	ldr.w	r6, [ip, r1, lsl #2]
 801b182:	f844 6028 	str.w	r6, [r4, r8, lsl #2]
 801b186:	2805      	cmp	r0, #5
 801b188:	442b      	add	r3, r5
 801b18a:	443a      	add	r2, r7
 801b18c:	d009      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b18e:	f857 4021 	ldr.w	r4, [r7, r1, lsl #2]
 801b192:	f845 4028 	str.w	r4, [r5, r8, lsl #2]
 801b196:	2806      	cmp	r0, #6
 801b198:	bf1c      	itt	ne
 801b19a:	f852 2021 	ldrne.w	r2, [r2, r1, lsl #2]
 801b19e:	f843 2028 	strne.w	r2, [r3, r8, lsl #2]
 801b1a2:	b00b      	add	sp, #44	@ 0x2c
 801b1a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1a8:	f1b8 0f01 	cmp.w	r8, #1
 801b1ac:	f47f af66 	bne.w	801b07c <awe_vecCopy32+0x18>
 801b1b0:	4619      	mov	r1, r3
 801b1b2:	b31b      	cbz	r3, 801b1fc <awe_vecCopy32+0x198>
 801b1b4:	4613      	mov	r3, r2
 801b1b6:	3320      	adds	r3, #32
 801b1b8:	f100 0220 	add.w	r2, r0, #32
 801b1bc:	468c      	mov	ip, r1
 801b1be:	e952 8e08 	ldrd	r8, lr, [r2, #-32]
 801b1c2:	e952 7606 	ldrd	r7, r6, [r2, #-24]
 801b1c6:	e952 5404 	ldrd	r5, r4, [r2, #-16]
 801b1ca:	e952 0102 	ldrd	r0, r1, [r2, #-8]
 801b1ce:	f1bc 0c01 	subs.w	ip, ip, #1
 801b1d2:	f843 1c04 	str.w	r1, [r3, #-4]
 801b1d6:	e943 8e08 	strd	r8, lr, [r3, #-32]
 801b1da:	e943 7606 	strd	r7, r6, [r3, #-24]
 801b1de:	e943 5404 	strd	r5, r4, [r3, #-16]
 801b1e2:	f843 0c08 	str.w	r0, [r3, #-8]
 801b1e6:	f102 0220 	add.w	r2, r2, #32
 801b1ea:	f103 0320 	add.w	r3, r3, #32
 801b1ee:	d1e6      	bne.n	801b1be <awe_vecCopy32+0x15a>
 801b1f0:	9b04      	ldr	r3, [sp, #16]
 801b1f2:	9a03      	ldr	r2, [sp, #12]
 801b1f4:	015b      	lsls	r3, r3, #5
 801b1f6:	441a      	add	r2, r3
 801b1f8:	449a      	add	sl, r3
 801b1fa:	9203      	str	r2, [sp, #12]
 801b1fc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b1fe:	f013 0307 	ands.w	r3, r3, #7
 801b202:	d0ce      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b204:	9903      	ldr	r1, [sp, #12]
 801b206:	f8da 2000 	ldr.w	r2, [sl]
 801b20a:	600a      	str	r2, [r1, #0]
 801b20c:	2b01      	cmp	r3, #1
 801b20e:	d0c8      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b210:	f8da 2004 	ldr.w	r2, [sl, #4]
 801b214:	604a      	str	r2, [r1, #4]
 801b216:	2b02      	cmp	r3, #2
 801b218:	d0c3      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b21a:	f8da 2008 	ldr.w	r2, [sl, #8]
 801b21e:	608a      	str	r2, [r1, #8]
 801b220:	2b03      	cmp	r3, #3
 801b222:	d0be      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b224:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b228:	60ca      	str	r2, [r1, #12]
 801b22a:	2b04      	cmp	r3, #4
 801b22c:	d0b9      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b22e:	f8da 2010 	ldr.w	r2, [sl, #16]
 801b232:	610a      	str	r2, [r1, #16]
 801b234:	2b05      	cmp	r3, #5
 801b236:	d0b4      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b238:	f8da 2014 	ldr.w	r2, [sl, #20]
 801b23c:	614a      	str	r2, [r1, #20]
 801b23e:	2b06      	cmp	r3, #6
 801b240:	d0af      	beq.n	801b1a2 <awe_vecCopy32+0x13e>
 801b242:	f8da 3018 	ldr.w	r3, [sl, #24]
 801b246:	618b      	str	r3, [r1, #24]
 801b248:	e7ab      	b.n	801b1a2 <awe_vecCopy32+0x13e>
 801b24a:	bf00      	nop

0801b24c <awe_vecCopy_2ch>:
 801b24c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b250:	b082      	sub	sp, #8
 801b252:	4605      	mov	r5, r0
 801b254:	9c08      	ldr	r4, [sp, #32]
 801b256:	9400      	str	r4, [sp, #0]
 801b258:	460e      	mov	r6, r1
 801b25a:	4617      	mov	r7, r2
 801b25c:	4698      	mov	r8, r3
 801b25e:	f7ff ff01 	bl	801b064 <awe_vecCopy32>
 801b262:	4643      	mov	r3, r8
 801b264:	1d3a      	adds	r2, r7, #4
 801b266:	4631      	mov	r1, r6
 801b268:	1d28      	adds	r0, r5, #4
 801b26a:	9408      	str	r4, [sp, #32]
 801b26c:	b002      	add	sp, #8
 801b26e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b272:	f7ff bef7 	b.w	801b064 <awe_vecCopy32>
 801b276:	bf00      	nop

0801b278 <awe_vecDb10>:
 801b278:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b27c:	1e17      	subs	r7, r2, #0
 801b27e:	ed2d 8b02 	vpush	{d8}
 801b282:	dd16      	ble.n	801b2b2 <awe_vecDb10+0x3a>
 801b284:	ed9f 8a13 	vldr	s16, [pc, #76]	@ 801b2d4 <awe_vecDb10+0x5c>
 801b288:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 801b2dc <awe_vecDb10+0x64>
 801b28c:	eddf 8a12 	vldr	s17, [pc, #72]	@ 801b2d8 <awe_vecDb10+0x60>
 801b290:	4606      	mov	r6, r0
 801b292:	460d      	mov	r5, r1
 801b294:	2400      	movs	r4, #0
 801b296:	ecb6 0a01 	vldmia	r6!, {s0}
 801b29a:	eeb0 0ac0 	vabs.f32	s0, s0
 801b29e:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801b2a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b2a6:	d508      	bpl.n	801b2ba <awe_vecDb10+0x42>
 801b2a8:	3401      	adds	r4, #1
 801b2aa:	42a7      	cmp	r7, r4
 801b2ac:	f845 8b04 	str.w	r8, [r5], #4
 801b2b0:	d1f1      	bne.n	801b296 <awe_vecDb10+0x1e>
 801b2b2:	ecbd 8b02 	vpop	{d8}
 801b2b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b2ba:	f013 faf5 	bl	802e8a8 <logf>
 801b2be:	3401      	adds	r4, #1
 801b2c0:	ee20 0a28 	vmul.f32	s0, s0, s17
 801b2c4:	42a7      	cmp	r7, r4
 801b2c6:	eca5 0a01 	vstmia	r5!, {s0}
 801b2ca:	d1e4      	bne.n	801b296 <awe_vecDb10+0x1e>
 801b2cc:	ecbd 8b02 	vpop	{d8}
 801b2d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b2d4:	00800000 	.word	0x00800000
 801b2d8:	408af967 	.word	0x408af967
 801b2dc:	c3bda61e 	.word	0xc3bda61e

0801b2e0 <awe_vecDb10_Approx>:
 801b2e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b2e4:	ed2d 8b02 	vpush	{d8}
 801b2e8:	1e17      	subs	r7, r2, #0
 801b2ea:	b082      	sub	sp, #8
 801b2ec:	dd16      	ble.n	801b31c <awe_vecDb10_Approx+0x3c>
 801b2ee:	ed9f 8a20 	vldr	s16, [pc, #128]	@ 801b370 <awe_vecDb10_Approx+0x90>
 801b2f2:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 801b37c <awe_vecDb10_Approx+0x9c>
 801b2f6:	eddf 8a1f 	vldr	s17, [pc, #124]	@ 801b374 <awe_vecDb10_Approx+0x94>
 801b2fa:	4606      	mov	r6, r0
 801b2fc:	460d      	mov	r5, r1
 801b2fe:	2400      	movs	r4, #0
 801b300:	ecb6 0a01 	vldmia	r6!, {s0}
 801b304:	eeb0 0ac0 	vabs.f32	s0, s0
 801b308:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801b30c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b310:	d509      	bpl.n	801b326 <awe_vecDb10_Approx+0x46>
 801b312:	3401      	adds	r4, #1
 801b314:	42a7      	cmp	r7, r4
 801b316:	f845 8b04 	str.w	r8, [r5], #4
 801b31a:	d1f1      	bne.n	801b300 <awe_vecDb10_Approx+0x20>
 801b31c:	b002      	add	sp, #8
 801b31e:	ecbd 8b02 	vpop	{d8}
 801b322:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b326:	a801      	add	r0, sp, #4
 801b328:	f012 fcc4 	bl	802dcb4 <frexpf>
 801b32c:	4b12      	ldr	r3, [pc, #72]	@ (801b378 <awe_vecDb10_Approx+0x98>)
 801b32e:	ed93 7a00 	vldr	s14, [r3]
 801b332:	ed93 6a01 	vldr	s12, [r3, #4]
 801b336:	edd3 6a02 	vldr	s13, [r3, #8]
 801b33a:	edd3 7a03 	vldr	s15, [r3, #12]
 801b33e:	eea0 6a07 	vfma.f32	s12, s0, s14
 801b342:	3401      	adds	r4, #1
 801b344:	42a7      	cmp	r7, r4
 801b346:	ed9d 7a01 	vldr	s14, [sp, #4]
 801b34a:	eee0 6a06 	vfma.f32	s13, s0, s12
 801b34e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b352:	eee0 7a26 	vfma.f32	s15, s0, s13
 801b356:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b35a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801b35e:	ece5 7a01 	vstmia	r5!, {s15}
 801b362:	d1cd      	bne.n	801b300 <awe_vecDb10_Approx+0x20>
 801b364:	b002      	add	sp, #8
 801b366:	ecbd 8b02 	vpop	{d8}
 801b36a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b36e:	bf00      	nop
 801b370:	00800000 	.word	0x00800000
 801b374:	4040a8c1 	.word	0x4040a8c1
 801b378:	20000078 	.word	0x20000078
 801b37c:	c3bda61e 	.word	0xc3bda61e

0801b380 <awe_vecDb20>:
 801b380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b384:	1e17      	subs	r7, r2, #0
 801b386:	ed2d 8b02 	vpush	{d8}
 801b38a:	dd16      	ble.n	801b3ba <awe_vecDb20+0x3a>
 801b38c:	ed9f 8a13 	vldr	s16, [pc, #76]	@ 801b3dc <awe_vecDb20+0x5c>
 801b390:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 801b3e4 <awe_vecDb20+0x64>
 801b394:	eddf 8a12 	vldr	s17, [pc, #72]	@ 801b3e0 <awe_vecDb20+0x60>
 801b398:	4606      	mov	r6, r0
 801b39a:	460d      	mov	r5, r1
 801b39c:	2400      	movs	r4, #0
 801b39e:	ecb6 0a01 	vldmia	r6!, {s0}
 801b3a2:	eeb0 0ac0 	vabs.f32	s0, s0
 801b3a6:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801b3aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3ae:	d508      	bpl.n	801b3c2 <awe_vecDb20+0x42>
 801b3b0:	3401      	adds	r4, #1
 801b3b2:	42a7      	cmp	r7, r4
 801b3b4:	f845 8b04 	str.w	r8, [r5], #4
 801b3b8:	d1f1      	bne.n	801b39e <awe_vecDb20+0x1e>
 801b3ba:	ecbd 8b02 	vpop	{d8}
 801b3be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b3c2:	f013 fa71 	bl	802e8a8 <logf>
 801b3c6:	3401      	adds	r4, #1
 801b3c8:	ee20 0a28 	vmul.f32	s0, s0, s17
 801b3cc:	42a7      	cmp	r7, r4
 801b3ce:	eca5 0a01 	vstmia	r5!, {s0}
 801b3d2:	d1e4      	bne.n	801b39e <awe_vecDb20+0x1e>
 801b3d4:	ecbd 8b02 	vpop	{d8}
 801b3d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b3dc:	00800000 	.word	0x00800000
 801b3e0:	410af967 	.word	0x410af967
 801b3e4:	c43da61e 	.word	0xc43da61e

0801b3e8 <awe_vecDb20_Approx>:
 801b3e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b3ec:	ed2d 8b02 	vpush	{d8}
 801b3f0:	1e17      	subs	r7, r2, #0
 801b3f2:	b082      	sub	sp, #8
 801b3f4:	dd16      	ble.n	801b424 <awe_vecDb20_Approx+0x3c>
 801b3f6:	ed9f 8a20 	vldr	s16, [pc, #128]	@ 801b478 <awe_vecDb20_Approx+0x90>
 801b3fa:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 801b484 <awe_vecDb20_Approx+0x9c>
 801b3fe:	eddf 8a1f 	vldr	s17, [pc, #124]	@ 801b47c <awe_vecDb20_Approx+0x94>
 801b402:	4606      	mov	r6, r0
 801b404:	460d      	mov	r5, r1
 801b406:	2400      	movs	r4, #0
 801b408:	ecb6 0a01 	vldmia	r6!, {s0}
 801b40c:	eeb0 0ac0 	vabs.f32	s0, s0
 801b410:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801b414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b418:	d509      	bpl.n	801b42e <awe_vecDb20_Approx+0x46>
 801b41a:	3401      	adds	r4, #1
 801b41c:	42a7      	cmp	r7, r4
 801b41e:	f845 8b04 	str.w	r8, [r5], #4
 801b422:	d1f1      	bne.n	801b408 <awe_vecDb20_Approx+0x20>
 801b424:	b002      	add	sp, #8
 801b426:	ecbd 8b02 	vpop	{d8}
 801b42a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b42e:	a801      	add	r0, sp, #4
 801b430:	f012 fc40 	bl	802dcb4 <frexpf>
 801b434:	4b12      	ldr	r3, [pc, #72]	@ (801b480 <awe_vecDb20_Approx+0x98>)
 801b436:	ed93 7a00 	vldr	s14, [r3]
 801b43a:	ed93 6a01 	vldr	s12, [r3, #4]
 801b43e:	edd3 6a02 	vldr	s13, [r3, #8]
 801b442:	edd3 7a03 	vldr	s15, [r3, #12]
 801b446:	eea0 6a07 	vfma.f32	s12, s0, s14
 801b44a:	3401      	adds	r4, #1
 801b44c:	42a7      	cmp	r7, r4
 801b44e:	ed9d 7a01 	vldr	s14, [sp, #4]
 801b452:	eee0 6a06 	vfma.f32	s13, s0, s12
 801b456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b45a:	eee0 7a26 	vfma.f32	s15, s0, s13
 801b45e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b462:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801b466:	ece5 7a01 	vstmia	r5!, {s15}
 801b46a:	d1cd      	bne.n	801b408 <awe_vecDb20_Approx+0x20>
 801b46c:	b002      	add	sp, #8
 801b46e:	ecbd 8b02 	vpop	{d8}
 801b472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b476:	bf00      	nop
 801b478:	00800000 	.word	0x00800000
 801b47c:	40c0a8c1 	.word	0x40c0a8c1
 801b480:	20000078 	.word	0x20000078
 801b484:	c43da61e 	.word	0xc43da61e

0801b488 <awe_vecDcBlock>:
 801b488:	b470      	push	{r4, r5, r6}
 801b48a:	9d05      	ldr	r5, [sp, #20]
 801b48c:	e9dd 4603 	ldrd	r4, r6, [sp, #12]
 801b490:	2d00      	cmp	r5, #0
 801b492:	ed94 6a00 	vldr	s12, [r4]
 801b496:	ed96 7a00 	vldr	s14, [r6]
 801b49a:	dd17      	ble.n	801b4cc <awe_vecDcBlock+0x44>
 801b49c:	0089      	lsls	r1, r1, #2
 801b49e:	009b      	lsls	r3, r3, #2
 801b4a0:	eeb1 6a46 	vneg.f32	s12, s12
 801b4a4:	2400      	movs	r4, #0
 801b4a6:	edd0 7a00 	vldr	s15, [r0]
 801b4aa:	eee6 7a07 	vfma.f32	s15, s12, s14
 801b4ae:	3401      	adds	r4, #1
 801b4b0:	42a5      	cmp	r5, r4
 801b4b2:	4408      	add	r0, r1
 801b4b4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801b4b8:	eeb0 7a67 	vmov.f32	s14, s15
 801b4bc:	edc2 6a00 	vstr	s13, [r2]
 801b4c0:	441a      	add	r2, r3
 801b4c2:	d1f0      	bne.n	801b4a6 <awe_vecDcBlock+0x1e>
 801b4c4:	edc6 7a00 	vstr	s15, [r6]
 801b4c8:	bc70      	pop	{r4, r5, r6}
 801b4ca:	4770      	bx	lr
 801b4cc:	eef0 7a47 	vmov.f32	s15, s14
 801b4d0:	edc6 7a00 	vstr	s15, [r6]
 801b4d4:	bc70      	pop	{r4, r5, r6}
 801b4d6:	4770      	bx	lr

0801b4d8 <awe_vecDelayConstructor>:
 801b4d8:	b510      	push	{r4, lr}
 801b4da:	fb03 2102 	mla	r1, r3, r2, r2
 801b4de:	4604      	mov	r4, r0
 801b4e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801b4e4:	0088      	lsls	r0, r1, #2
 801b4e6:	2108      	movs	r1, #8
 801b4e8:	f004 faee 	bl	801fac8 <awe_fwMallocAligned>
 801b4ec:	6020      	str	r0, [r4, #0]
 801b4ee:	3000      	adds	r0, #0
 801b4f0:	bf18      	it	ne
 801b4f2:	2001      	movne	r0, #1
 801b4f4:	bd10      	pop	{r4, pc}
 801b4f6:	bf00      	nop

0801b4f8 <awe_vecDelayProcess>:
 801b4f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b4fa:	b089      	sub	sp, #36	@ 0x24
 801b4fc:	9f11      	ldr	r7, [sp, #68]	@ 0x44
 801b4fe:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b500:	683c      	ldr	r4, [r7, #0]
 801b502:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 801b504:	9407      	str	r4, [sp, #28]
 801b506:	fb06 4415 	mls	r4, r6, r5, r4
 801b50a:	460e      	mov	r6, r1
 801b50c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b50e:	2c00      	cmp	r4, #0
 801b510:	fb01 5105 	mla	r1, r1, r5, r5
 801b514:	fb03 f505 	mul.w	r5, r3, r5
 801b518:	f04f 0301 	mov.w	r3, #1
 801b51c:	bfb8      	it	lt
 801b51e:	1864      	addlt	r4, r4, r1
 801b520:	e9cd 6201 	strd	r6, r2, [sp, #4]
 801b524:	9303      	str	r3, [sp, #12]
 801b526:	9300      	str	r3, [sp, #0]
 801b528:	9504      	str	r5, [sp, #16]
 801b52a:	ab06      	add	r3, sp, #24
 801b52c:	aa07      	add	r2, sp, #28
 801b52e:	9406      	str	r4, [sp, #24]
 801b530:	f00e fbfc 	bl	8029d2c <awe_vecCircWriteRead>
 801b534:	9b07      	ldr	r3, [sp, #28]
 801b536:	603b      	str	r3, [r7, #0]
 801b538:	b009      	add	sp, #36	@ 0x24
 801b53a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b53c <awe_vecDivide2x1>:
 801b53c:	2b00      	cmp	r3, #0
 801b53e:	dd0f      	ble.n	801b560 <awe_vecDivide2x1+0x24>
 801b540:	b410      	push	{r4}
 801b542:	2400      	movs	r4, #0
 801b544:	ecf0 6a01 	vldmia	r0!, {s13}
 801b548:	ecb1 7a01 	vldmia	r1!, {s14}
 801b54c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801b550:	3401      	adds	r4, #1
 801b552:	42a3      	cmp	r3, r4
 801b554:	ece2 7a01 	vstmia	r2!, {s15}
 801b558:	d1f4      	bne.n	801b544 <awe_vecDivide2x1+0x8>
 801b55a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b55e:	4770      	bx	lr
 801b560:	4770      	bx	lr
 801b562:	bf00      	nop

0801b564 <awe_vecFill>:
 801b564:	2901      	cmp	r1, #1
 801b566:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b56a:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b56e:	d041      	beq.n	801b5f4 <awe_vecFill+0x90>
 801b570:	f1ba 0f00 	cmp.w	sl, #0
 801b574:	d02e      	beq.n	801b5d4 <awe_vecFill+0x70>
 801b576:	008b      	lsls	r3, r1, #2
 801b578:	00cc      	lsls	r4, r1, #3
 801b57a:	eb04 0903 	add.w	r9, r4, r3
 801b57e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b582:	4403      	add	r3, r0
 801b584:	ea4f 1e41 	mov.w	lr, r1, lsl #5
 801b588:	ea4f 1b01 	mov.w	fp, r1, lsl #4
 801b58c:	4656      	mov	r6, sl
 801b58e:	4605      	mov	r5, r0
 801b590:	eb05 0c04 	add.w	ip, r5, r4
 801b594:	eb0c 0704 	add.w	r7, ip, r4
 801b598:	eb03 0804 	add.w	r8, r3, r4
 801b59c:	ed85 0a00 	vstr	s0, [r5]
 801b5a0:	3e01      	subs	r6, #1
 801b5a2:	ed83 0a00 	vstr	s0, [r3]
 801b5a6:	ed8c 0a00 	vstr	s0, [ip]
 801b5aa:	ed88 0a00 	vstr	s0, [r8]
 801b5ae:	eb07 0c04 	add.w	ip, r7, r4
 801b5b2:	ed87 0a00 	vstr	s0, [r7]
 801b5b6:	eb03 080b 	add.w	r8, r3, fp
 801b5ba:	eb03 0709 	add.w	r7, r3, r9
 801b5be:	ed88 0a00 	vstr	s0, [r8]
 801b5c2:	4475      	add	r5, lr
 801b5c4:	ed8c 0a00 	vstr	s0, [ip]
 801b5c8:	4473      	add	r3, lr
 801b5ca:	ed87 0a00 	vstr	s0, [r7]
 801b5ce:	d1df      	bne.n	801b590 <awe_vecFill+0x2c>
 801b5d0:	fb0a 000e 	mla	r0, sl, lr, r0
 801b5d4:	4253      	negs	r3, r2
 801b5d6:	f003 0307 	and.w	r3, r3, #7
 801b5da:	f002 0207 	and.w	r2, r2, #7
 801b5de:	bf58      	it	pl
 801b5e0:	425a      	negpl	r2, r3
 801b5e2:	b12a      	cbz	r2, 801b5f0 <awe_vecFill+0x8c>
 801b5e4:	0089      	lsls	r1, r1, #2
 801b5e6:	3a01      	subs	r2, #1
 801b5e8:	ed80 0a00 	vstr	s0, [r0]
 801b5ec:	4408      	add	r0, r1
 801b5ee:	d1fa      	bne.n	801b5e6 <awe_vecFill+0x82>
 801b5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5f4:	f1ba 0f00 	cmp.w	sl, #0
 801b5f8:	d018      	beq.n	801b62c <awe_vecFill+0xc8>
 801b5fa:	f100 0320 	add.w	r3, r0, #32
 801b5fe:	4651      	mov	r1, sl
 801b600:	3901      	subs	r1, #1
 801b602:	ed03 0a08 	vstr	s0, [r3, #-32]	@ 0xffffffe0
 801b606:	ed03 0a07 	vstr	s0, [r3, #-28]	@ 0xffffffe4
 801b60a:	ed03 0a06 	vstr	s0, [r3, #-24]	@ 0xffffffe8
 801b60e:	ed03 0a05 	vstr	s0, [r3, #-20]	@ 0xffffffec
 801b612:	ed03 0a04 	vstr	s0, [r3, #-16]
 801b616:	ed03 0a03 	vstr	s0, [r3, #-12]
 801b61a:	ed03 0a02 	vstr	s0, [r3, #-8]
 801b61e:	ed03 0a01 	vstr	s0, [r3, #-4]
 801b622:	f103 0320 	add.w	r3, r3, #32
 801b626:	d1eb      	bne.n	801b600 <awe_vecFill+0x9c>
 801b628:	eb00 104a 	add.w	r0, r0, sl, lsl #5
 801b62c:	4253      	negs	r3, r2
 801b62e:	f003 0307 	and.w	r3, r3, #7
 801b632:	f002 0207 	and.w	r2, r2, #7
 801b636:	bf58      	it	pl
 801b638:	425a      	negpl	r2, r3
 801b63a:	2a00      	cmp	r2, #0
 801b63c:	d0d8      	beq.n	801b5f0 <awe_vecFill+0x8c>
 801b63e:	3a01      	subs	r2, #1
 801b640:	eca0 0a01 	vstmia	r0!, {s0}
 801b644:	d1fb      	bne.n	801b63e <awe_vecFill+0xda>
 801b646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b64a:	bf00      	nop

0801b64c <awe_vecFill_2ch>:
 801b64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b650:	b083      	sub	sp, #12
 801b652:	460e      	mov	r6, r1
 801b654:	4614      	mov	r4, r2
 801b656:	4605      	mov	r5, r0
 801b658:	9101      	str	r1, [sp, #4]
 801b65a:	eef0 7a40 	vmov.f32	s15, s0
 801b65e:	f7ff ff81 	bl	801b564 <awe_vecFill>
 801b662:	2e01      	cmp	r6, #1
 801b664:	f105 0204 	add.w	r2, r5, #4
 801b668:	ea4f 0be4 	mov.w	fp, r4, asr #3
 801b66c:	d047      	beq.n	801b6fe <awe_vecFill_2ch+0xb2>
 801b66e:	f1bb 0f00 	cmp.w	fp, #0
 801b672:	d032      	beq.n	801b6da <awe_vecFill_2ch+0x8e>
 801b674:	9b01      	ldr	r3, [sp, #4]
 801b676:	ea4f 0a83 	mov.w	sl, r3, lsl #2
 801b67a:	eb05 0e0a 	add.w	lr, r5, sl
 801b67e:	eb0e 0c0a 	add.w	ip, lr, sl
 801b682:	eb0c 070a 	add.w	r7, ip, sl
 801b686:	eb07 060a 	add.w	r6, r7, sl
 801b68a:	4628      	mov	r0, r5
 801b68c:	eb06 050a 	add.w	r5, r6, sl
 801b690:	eb05 010a 	add.w	r1, r5, sl
 801b694:	eb01 090a 	add.w	r9, r1, sl
 801b698:	015b      	lsls	r3, r3, #5
 801b69a:	46d8      	mov	r8, fp
 801b69c:	f1b8 0801 	subs.w	r8, r8, #1
 801b6a0:	edc0 7a01 	vstr	s15, [r0, #4]
 801b6a4:	edce 7a01 	vstr	s15, [lr, #4]
 801b6a8:	4418      	add	r0, r3
 801b6aa:	edcc 7a01 	vstr	s15, [ip, #4]
 801b6ae:	449e      	add	lr, r3
 801b6b0:	edc7 7a01 	vstr	s15, [r7, #4]
 801b6b4:	449c      	add	ip, r3
 801b6b6:	edc6 7a01 	vstr	s15, [r6, #4]
 801b6ba:	441f      	add	r7, r3
 801b6bc:	edc5 7a01 	vstr	s15, [r5, #4]
 801b6c0:	441e      	add	r6, r3
 801b6c2:	edc1 7a01 	vstr	s15, [r1, #4]
 801b6c6:	441d      	add	r5, r3
 801b6c8:	edc9 7a01 	vstr	s15, [r9, #4]
 801b6cc:	4419      	add	r1, r3
 801b6ce:	4499      	add	r9, r3
 801b6d0:	d1e4      	bne.n	801b69c <awe_vecFill_2ch+0x50>
 801b6d2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801b6d6:	fb0a 220b 	mla	r2, sl, fp, r2
 801b6da:	4263      	negs	r3, r4
 801b6dc:	f003 0307 	and.w	r3, r3, #7
 801b6e0:	f004 0407 	and.w	r4, r4, #7
 801b6e4:	bf58      	it	pl
 801b6e6:	425c      	negpl	r4, r3
 801b6e8:	b134      	cbz	r4, 801b6f8 <awe_vecFill_2ch+0xac>
 801b6ea:	9b01      	ldr	r3, [sp, #4]
 801b6ec:	009b      	lsls	r3, r3, #2
 801b6ee:	3c01      	subs	r4, #1
 801b6f0:	edc2 7a00 	vstr	s15, [r2]
 801b6f4:	441a      	add	r2, r3
 801b6f6:	d1fa      	bne.n	801b6ee <awe_vecFill_2ch+0xa2>
 801b6f8:	b003      	add	sp, #12
 801b6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6fe:	f1bb 0f00 	cmp.w	fp, #0
 801b702:	d018      	beq.n	801b736 <awe_vecFill_2ch+0xea>
 801b704:	f105 0024 	add.w	r0, r5, #36	@ 0x24
 801b708:	465b      	mov	r3, fp
 801b70a:	3b01      	subs	r3, #1
 801b70c:	ed40 7a08 	vstr	s15, [r0, #-32]	@ 0xffffffe0
 801b710:	ed40 7a07 	vstr	s15, [r0, #-28]	@ 0xffffffe4
 801b714:	ed40 7a06 	vstr	s15, [r0, #-24]	@ 0xffffffe8
 801b718:	ed40 7a05 	vstr	s15, [r0, #-20]	@ 0xffffffec
 801b71c:	ed40 7a04 	vstr	s15, [r0, #-16]
 801b720:	ed40 7a03 	vstr	s15, [r0, #-12]
 801b724:	ed40 7a02 	vstr	s15, [r0, #-8]
 801b728:	ed40 7a01 	vstr	s15, [r0, #-4]
 801b72c:	f100 0020 	add.w	r0, r0, #32
 801b730:	d1eb      	bne.n	801b70a <awe_vecFill_2ch+0xbe>
 801b732:	eb02 124b 	add.w	r2, r2, fp, lsl #5
 801b736:	4263      	negs	r3, r4
 801b738:	f003 0307 	and.w	r3, r3, #7
 801b73c:	f004 0407 	and.w	r4, r4, #7
 801b740:	bf58      	it	pl
 801b742:	425c      	negpl	r4, r3
 801b744:	2c00      	cmp	r4, #0
 801b746:	d0d7      	beq.n	801b6f8 <awe_vecFill_2ch+0xac>
 801b748:	3c01      	subs	r4, #1
 801b74a:	ece2 7a01 	vstmia	r2!, {s15}
 801b74e:	d1fb      	bne.n	801b748 <awe_vecFill_2ch+0xfc>
 801b750:	b003      	add	sp, #12
 801b752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b756:	bf00      	nop

0801b758 <awe_vecFillFract32>:
 801b758:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b75a:	ea5f 0ea3 	movs.w	lr, r3, asr #2
 801b75e:	d010      	beq.n	801b782 <awe_vecFillFract32+0x2a>
 801b760:	008e      	lsls	r6, r1, #2
 801b762:	eb06 0cc1 	add.w	ip, r6, r1, lsl #3
 801b766:	010f      	lsls	r7, r1, #4
 801b768:	4675      	mov	r5, lr
 801b76a:	4604      	mov	r4, r0
 801b76c:	3d01      	subs	r5, #1
 801b76e:	6022      	str	r2, [r4, #0]
 801b770:	51a2      	str	r2, [r4, r6]
 801b772:	f844 2016 	str.w	r2, [r4, r6, lsl #1]
 801b776:	f844 200c 	str.w	r2, [r4, ip]
 801b77a:	443c      	add	r4, r7
 801b77c:	d1f6      	bne.n	801b76c <awe_vecFillFract32+0x14>
 801b77e:	fb07 000e 	mla	r0, r7, lr, r0
 801b782:	425c      	negs	r4, r3
 801b784:	f004 0403 	and.w	r4, r4, #3
 801b788:	f003 0303 	and.w	r3, r3, #3
 801b78c:	bf58      	it	pl
 801b78e:	4263      	negpl	r3, r4
 801b790:	b153      	cbz	r3, 801b7a8 <awe_vecFillFract32+0x50>
 801b792:	2b01      	cmp	r3, #1
 801b794:	6002      	str	r2, [r0, #0]
 801b796:	eb00 0481 	add.w	r4, r0, r1, lsl #2
 801b79a:	d005      	beq.n	801b7a8 <awe_vecFillFract32+0x50>
 801b79c:	2b02      	cmp	r3, #2
 801b79e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 801b7a2:	bf18      	it	ne
 801b7a4:	f844 2021 	strne.w	r2, [r4, r1, lsl #2]
 801b7a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b7aa:	bf00      	nop

0801b7ac <awe_vecFillInt32>:
 801b7ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b7ae:	ea5f 0ea3 	movs.w	lr, r3, asr #2
 801b7b2:	d010      	beq.n	801b7d6 <awe_vecFillInt32+0x2a>
 801b7b4:	008e      	lsls	r6, r1, #2
 801b7b6:	eb06 0cc1 	add.w	ip, r6, r1, lsl #3
 801b7ba:	010f      	lsls	r7, r1, #4
 801b7bc:	4675      	mov	r5, lr
 801b7be:	4604      	mov	r4, r0
 801b7c0:	3d01      	subs	r5, #1
 801b7c2:	6022      	str	r2, [r4, #0]
 801b7c4:	51a2      	str	r2, [r4, r6]
 801b7c6:	f844 2016 	str.w	r2, [r4, r6, lsl #1]
 801b7ca:	f844 200c 	str.w	r2, [r4, ip]
 801b7ce:	443c      	add	r4, r7
 801b7d0:	d1f6      	bne.n	801b7c0 <awe_vecFillInt32+0x14>
 801b7d2:	fb07 000e 	mla	r0, r7, lr, r0
 801b7d6:	f013 0303 	ands.w	r3, r3, #3
 801b7da:	d00a      	beq.n	801b7f2 <awe_vecFillInt32+0x46>
 801b7dc:	2b01      	cmp	r3, #1
 801b7de:	6002      	str	r2, [r0, #0]
 801b7e0:	eb00 0481 	add.w	r4, r0, r1, lsl #2
 801b7e4:	d005      	beq.n	801b7f2 <awe_vecFillInt32+0x46>
 801b7e6:	2b02      	cmp	r3, #2
 801b7e8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 801b7ec:	bf18      	it	ne
 801b7ee:	f844 2021 	strne.w	r2, [r4, r1, lsl #2]
 801b7f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b7f4 <awe_vecFirstOrderSmoother>:
 801b7f4:	b430      	push	{r4, r5}
 801b7f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b7fa:	ee36 7ae0 	vsub.f32	s14, s13, s1
 801b7fe:	ed2d 8b0a 	vpush	{d8-d12}
 801b802:	ee77 6a26 	vadd.f32	s13, s14, s13
 801b806:	ee27 8a07 	vmul.f32	s16, s14, s14
 801b80a:	ee20 0a80 	vmul.f32	s0, s1, s0
 801b80e:	ee78 2a26 	vadd.f32	s5, s16, s13
 801b812:	ee67 8a08 	vmul.f32	s17, s14, s16
 801b816:	10d5      	asrs	r5, r2, #3
 801b818:	ee38 2aa2 	vadd.f32	s4, s17, s5
 801b81c:	ee27 9a28 	vmul.f32	s18, s14, s17
 801b820:	ee60 6a26 	vmul.f32	s13, s0, s13
 801b824:	ee79 1a02 	vadd.f32	s3, s18, s4
 801b828:	ee67 9a09 	vmul.f32	s19, s14, s18
 801b82c:	ee60 2a22 	vmul.f32	s5, s0, s5
 801b830:	ee39 1aa1 	vadd.f32	s2, s19, s3
 801b834:	ee27 aa29 	vmul.f32	s20, s14, s19
 801b838:	ee20 2a02 	vmul.f32	s4, s0, s4
 801b83c:	ee7a 0a01 	vadd.f32	s1, s20, s2
 801b840:	ee67 aa0a 	vmul.f32	s21, s14, s20
 801b844:	ee60 1a21 	vmul.f32	s3, s0, s3
 801b848:	ee3a baa0 	vadd.f32	s22, s21, s1
 801b84c:	ee20 1a01 	vmul.f32	s2, s0, s2
 801b850:	ee2b ba00 	vmul.f32	s22, s22, s0
 801b854:	ee60 0a20 	vmul.f32	s1, s0, s1
 801b858:	ee67 ba2a 	vmul.f32	s23, s14, s21
 801b85c:	edd1 7a00 	vldr	s15, [r1]
 801b860:	d03a      	beq.n	801b8d8 <awe_vecFirstOrderSmoother+0xe4>
 801b862:	f100 0320 	add.w	r3, r0, #32
 801b866:	462c      	mov	r4, r5
 801b868:	eeb0 3a40 	vmov.f32	s6, s0
 801b86c:	eef0 3a66 	vmov.f32	s7, s13
 801b870:	eeb0 4a62 	vmov.f32	s8, s5
 801b874:	eef0 4a42 	vmov.f32	s9, s4
 801b878:	eeb0 5a61 	vmov.f32	s10, s3
 801b87c:	eef0 5a41 	vmov.f32	s11, s2
 801b880:	eeb0 6a60 	vmov.f32	s12, s1
 801b884:	eeb0 ca4b 	vmov.f32	s24, s22
 801b888:	eea7 3a27 	vfma.f32	s6, s14, s15
 801b88c:	3c01      	subs	r4, #1
 801b88e:	f103 0320 	add.w	r3, r3, #32
 801b892:	eee8 3a27 	vfma.f32	s7, s16, s15
 801b896:	eea8 4aa7 	vfma.f32	s8, s17, s15
 801b89a:	eee9 4a27 	vfma.f32	s9, s18, s15
 801b89e:	eea9 5aa7 	vfma.f32	s10, s19, s15
 801b8a2:	eeea 5a27 	vfma.f32	s11, s20, s15
 801b8a6:	eeaa 6aa7 	vfma.f32	s12, s21, s15
 801b8aa:	eeab caa7 	vfma.f32	s24, s23, s15
 801b8ae:	ed03 3a10 	vstr	s6, [r3, #-64]	@ 0xffffffc0
 801b8b2:	ed43 3a0f 	vstr	s7, [r3, #-60]	@ 0xffffffc4
 801b8b6:	ed03 4a0e 	vstr	s8, [r3, #-56]	@ 0xffffffc8
 801b8ba:	ed43 4a0d 	vstr	s9, [r3, #-52]	@ 0xffffffcc
 801b8be:	ed03 5a0c 	vstr	s10, [r3, #-48]	@ 0xffffffd0
 801b8c2:	ed43 5a0b 	vstr	s11, [r3, #-44]	@ 0xffffffd4
 801b8c6:	ed03 6a0a 	vstr	s12, [r3, #-40]	@ 0xffffffd8
 801b8ca:	ed03 ca09 	vstr	s24, [r3, #-36]	@ 0xffffffdc
 801b8ce:	eef0 7a4c 	vmov.f32	s15, s24
 801b8d2:	d1c9      	bne.n	801b868 <awe_vecFirstOrderSmoother+0x74>
 801b8d4:	eb00 1045 	add.w	r0, r0, r5, lsl #5
 801b8d8:	f012 0207 	ands.w	r2, r2, #7
 801b8dc:	d041      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b8de:	eef0 6a40 	vmov.f32	s13, s0
 801b8e2:	eee7 6a27 	vfma.f32	s13, s14, s15
 801b8e6:	2a01      	cmp	r2, #1
 801b8e8:	eef0 7a66 	vmov.f32	s15, s13
 801b8ec:	edc0 6a00 	vstr	s13, [r0]
 801b8f0:	d037      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b8f2:	eef0 6a40 	vmov.f32	s13, s0
 801b8f6:	eee7 6a27 	vfma.f32	s13, s14, s15
 801b8fa:	2a02      	cmp	r2, #2
 801b8fc:	eef0 7a66 	vmov.f32	s15, s13
 801b900:	edc0 6a01 	vstr	s13, [r0, #4]
 801b904:	d02d      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b906:	eef0 6a40 	vmov.f32	s13, s0
 801b90a:	eee7 6a27 	vfma.f32	s13, s14, s15
 801b90e:	2a03      	cmp	r2, #3
 801b910:	eef0 7a66 	vmov.f32	s15, s13
 801b914:	edc0 6a02 	vstr	s13, [r0, #8]
 801b918:	d023      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b91a:	eef0 6a40 	vmov.f32	s13, s0
 801b91e:	eee7 6a87 	vfma.f32	s13, s15, s14
 801b922:	2a04      	cmp	r2, #4
 801b924:	eef0 7a66 	vmov.f32	s15, s13
 801b928:	edc0 6a03 	vstr	s13, [r0, #12]
 801b92c:	d019      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b92e:	eef0 6a40 	vmov.f32	s13, s0
 801b932:	eee7 6a27 	vfma.f32	s13, s14, s15
 801b936:	2a05      	cmp	r2, #5
 801b938:	eef0 7a66 	vmov.f32	s15, s13
 801b93c:	edc0 6a04 	vstr	s13, [r0, #16]
 801b940:	d00f      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b942:	eef0 6a40 	vmov.f32	s13, s0
 801b946:	eee7 6a27 	vfma.f32	s13, s14, s15
 801b94a:	2a06      	cmp	r2, #6
 801b94c:	eef0 7a66 	vmov.f32	s15, s13
 801b950:	edc0 6a05 	vstr	s13, [r0, #20]
 801b954:	d005      	beq.n	801b962 <awe_vecFirstOrderSmoother+0x16e>
 801b956:	eea7 0a26 	vfma.f32	s0, s14, s13
 801b95a:	eef0 7a40 	vmov.f32	s15, s0
 801b95e:	ed80 0a06 	vstr	s0, [r0, #24]
 801b962:	ecbd 8b0a 	vpop	{d8-d12}
 801b966:	edc1 7a00 	vstr	s15, [r1]
 801b96a:	bc30      	pop	{r4, r5}
 801b96c:	4770      	bx	lr
 801b96e:	bf00      	nop

0801b970 <awe_vecFIRConstructor>:
 801b970:	2001      	movs	r0, #1
 801b972:	4770      	bx	lr

0801b974 <awe_vecFIRProcess>:
 801b974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b978:	b08b      	sub	sp, #44	@ 0x2c
 801b97a:	e9dd 0917 	ldrd	r0, r9, [sp, #92]	@ 0x5c
 801b97e:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 801b980:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801b982:	2f00      	cmp	r7, #0
 801b984:	eb00 0803 	add.w	r8, r0, r3
 801b988:	dd22      	ble.n	801b9d0 <awe_vecFIRProcess+0x5c>
 801b98a:	f108 0803 	add.w	r8, r8, #3
 801b98e:	9307      	str	r3, [sp, #28]
 801b990:	460c      	mov	r4, r1
 801b992:	ea4f 0888 	mov.w	r8, r8, lsl #2
 801b996:	4615      	mov	r5, r2
 801b998:	eb01 0b87 	add.w	fp, r1, r7, lsl #2
 801b99c:	f10d 0a24 	add.w	sl, sp, #36	@ 0x24
 801b9a0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b9a2:	9303      	str	r3, [sp, #12]
 801b9a4:	9b07      	ldr	r3, [sp, #28]
 801b9a6:	f8cd a010 	str.w	sl, [sp, #16]
 801b9aa:	e9cd 6301 	strd	r6, r3, [sp, #4]
 801b9ae:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801b9b0:	9300      	str	r3, [sp, #0]
 801b9b2:	f8d9 3000 	ldr.w	r3, [r9]
 801b9b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9b8:	462a      	mov	r2, r5
 801b9ba:	4620      	mov	r0, r4
 801b9bc:	463b      	mov	r3, r7
 801b9be:	4639      	mov	r1, r7
 801b9c0:	3404      	adds	r4, #4
 801b9c2:	f00e fb47 	bl	802a054 <awe_vecFIR>
 801b9c6:	45a3      	cmp	fp, r4
 801b9c8:	4446      	add	r6, r8
 801b9ca:	f105 0504 	add.w	r5, r5, #4
 801b9ce:	d1e7      	bne.n	801b9a0 <awe_vecFIRProcess+0x2c>
 801b9d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9d2:	f8c9 3000 	str.w	r3, [r9]
 801b9d6:	b00b      	add	sp, #44	@ 0x2c
 801b9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9dc <awe_vecFIRSet>:
 801b9dc:	2000      	movs	r0, #0
 801b9de:	4770      	bx	lr

0801b9e0 <awe_vecFloatToFract32>:
 801b9e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9e4:	b08b      	sub	sp, #44	@ 0x2c
 801b9e6:	9104      	str	r1, [sp, #16]
 801b9e8:	9303      	str	r3, [sp, #12]
 801b9ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b9ec:	2901      	cmp	r1, #1
 801b9ee:	f000 809c 	beq.w	801bb2a <awe_vecFloatToFract32+0x14a>
 801b9f2:	9505      	str	r5, [sp, #20]
 801b9f4:	2d07      	cmp	r5, #7
 801b9f6:	f240 8086 	bls.w	801bb06 <awe_vecFloatToFract32+0x126>
 801b9fa:	9c04      	ldr	r4, [sp, #16]
 801b9fc:	00a7      	lsls	r7, r4, #2
 801b9fe:	9706      	str	r7, [sp, #24]
 801ba00:	9903      	ldr	r1, [sp, #12]
 801ba02:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801ba06:	4623      	mov	r3, r4
 801ba08:	ea4f 1844 	mov.w	r8, r4, lsl #5
 801ba0c:	19c4      	adds	r4, r0, r7
 801ba0e:	00de      	lsls	r6, r3, #3
 801ba10:	011b      	lsls	r3, r3, #4
 801ba12:	9300      	str	r3, [sp, #0]
 801ba14:	19f3      	adds	r3, r6, r7
 801ba16:	005b      	lsls	r3, r3, #1
 801ba18:	9301      	str	r3, [sp, #4]
 801ba1a:	460b      	mov	r3, r1
 801ba1c:	eb0c 0ac1 	add.w	sl, ip, r1, lsl #3
 801ba20:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
 801ba24:	ea4f 074a 	mov.w	r7, sl, lsl #1
 801ba28:	9707      	str	r7, [sp, #28]
 801ba2a:	ebcc 1743 	rsb	r7, ip, r3, lsl #5
 801ba2e:	9708      	str	r7, [sp, #32]
 801ba30:	ea4f 1943 	mov.w	r9, r3, lsl #5
 801ba34:	46ae      	mov	lr, r5
 801ba36:	4613      	mov	r3, r2
 801ba38:	4607      	mov	r7, r0
 801ba3a:	9102      	str	r1, [sp, #8]
 801ba3c:	9009      	str	r0, [sp, #36]	@ 0x24
 801ba3e:	9807      	ldr	r0, [sp, #28]
 801ba40:	9207      	str	r2, [sp, #28]
 801ba42:	9514      	str	r5, [sp, #80]	@ 0x50
 801ba44:	9d08      	ldr	r5, [sp, #32]
 801ba46:	ed97 6a00 	vldr	s12, [r7]
 801ba4a:	edd4 6a00 	vldr	s13, [r4]
 801ba4e:	19ba      	adds	r2, r7, r6
 801ba50:	ed92 7a00 	vldr	s14, [r2]
 801ba54:	eb04 0b06 	add.w	fp, r4, r6
 801ba58:	eddb 7a00 	vldr	s15, [fp]
 801ba5c:	eebe 6ae0 	vcvt.s32.f32	s12, s12, #31
 801ba60:	ed83 6a00 	vstr	s12, [r3]
 801ba64:	4432      	add	r2, r6
 801ba66:	ed92 6a00 	vldr	s12, [r2]
 801ba6a:	eefe 6ae0 	vcvt.s32.f32	s13, s13, #31
 801ba6e:	ee16 1a90 	vmov	r1, s13
 801ba72:	f843 100c 	str.w	r1, [r3, ip]
 801ba76:	9900      	ldr	r1, [sp, #0]
 801ba78:	eb04 0b01 	add.w	fp, r4, r1
 801ba7c:	eddb 6a00 	vldr	s13, [fp]
 801ba80:	eebe 7ae0 	vcvt.s32.f32	s14, s14, #31
 801ba84:	ee17 1a10 	vmov	r1, s14
 801ba88:	f843 101c 	str.w	r1, [r3, ip, lsl #1]
 801ba8c:	4432      	add	r2, r6
 801ba8e:	ed92 7a00 	vldr	s14, [r2]
 801ba92:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801ba96:	ee17 2a90 	vmov	r2, s15
 801ba9a:	f843 200a 	str.w	r2, [r3, sl]
 801ba9e:	9a01      	ldr	r2, [sp, #4]
 801baa0:	18a2      	adds	r2, r4, r2
 801baa2:	edd2 7a00 	vldr	s15, [r2]
 801baa6:	4447      	add	r7, r8
 801baa8:	eebe 6ae0 	vcvt.s32.f32	s12, s12, #31
 801baac:	ee16 2a10 	vmov	r2, s12
 801bab0:	f843 202c 	str.w	r2, [r3, ip, lsl #2]
 801bab4:	eefe 6ae0 	vcvt.s32.f32	s13, s13, #31
 801bab8:	ee16 2a90 	vmov	r2, s13
 801babc:	9902      	ldr	r1, [sp, #8]
 801babe:	505a      	str	r2, [r3, r1]
 801bac0:	eebe 7ae0 	vcvt.s32.f32	s14, s14, #31
 801bac4:	ee17 2a10 	vmov	r2, s14
 801bac8:	501a      	str	r2, [r3, r0]
 801baca:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801bace:	ee17 2a90 	vmov	r2, s15
 801bad2:	515a      	str	r2, [r3, r5]
 801bad4:	444b      	add	r3, r9
 801bad6:	f1ae 0e08 	sub.w	lr, lr, #8
 801bada:	4444      	add	r4, r8
 801badc:	f1be 0f07 	cmp.w	lr, #7
 801bae0:	d8b1      	bhi.n	801ba46 <awe_vecFloatToFract32+0x66>
 801bae2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801bae4:	9a07      	ldr	r2, [sp, #28]
 801bae6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bae8:	9b05      	ldr	r3, [sp, #20]
 801baea:	3b08      	subs	r3, #8
 801baec:	08db      	lsrs	r3, r3, #3
 801baee:	1c59      	adds	r1, r3, #1
 801baf0:	00cc      	lsls	r4, r1, #3
 801baf2:	9e06      	ldr	r6, [sp, #24]
 801baf4:	fb06 0004 	mla	r0, r6, r4, r0
 801baf8:	fb09 2201 	mla	r2, r9, r1, r2
 801bafc:	3d08      	subs	r5, #8
 801bafe:	ebc3 7343 	rsb	r3, r3, r3, lsl #29
 801bb02:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 801bb06:	b16d      	cbz	r5, 801bb24 <awe_vecFloatToFract32+0x144>
 801bb08:	9b04      	ldr	r3, [sp, #16]
 801bb0a:	0099      	lsls	r1, r3, #2
 801bb0c:	9b03      	ldr	r3, [sp, #12]
 801bb0e:	009b      	lsls	r3, r3, #2
 801bb10:	edd0 7a00 	vldr	s15, [r0]
 801bb14:	4408      	add	r0, r1
 801bb16:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801bb1a:	edc2 7a00 	vstr	s15, [r2]
 801bb1e:	441a      	add	r2, r3
 801bb20:	3d01      	subs	r5, #1
 801bb22:	d1f5      	bne.n	801bb10 <awe_vecFloatToFract32+0x130>
 801bb24:	b00b      	add	sp, #44	@ 0x2c
 801bb26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb2a:	9b03      	ldr	r3, [sp, #12]
 801bb2c:	2b01      	cmp	r3, #1
 801bb2e:	f47f af60 	bne.w	801b9f2 <awe_vecFloatToFract32+0x12>
 801bb32:	462e      	mov	r6, r5
 801bb34:	2d07      	cmp	r5, #7
 801bb36:	d944      	bls.n	801bbc2 <awe_vecFloatToFract32+0x1e2>
 801bb38:	f100 0120 	add.w	r1, r0, #32
 801bb3c:	f102 0320 	add.w	r3, r2, #32
 801bb40:	462c      	mov	r4, r5
 801bb42:	ed11 6a08 	vldr	s12, [r1, #-32]	@ 0xffffffe0
 801bb46:	ed51 6a07 	vldr	s13, [r1, #-28]	@ 0xffffffe4
 801bb4a:	ed11 7a06 	vldr	s14, [r1, #-24]	@ 0xffffffe8
 801bb4e:	ed51 7a05 	vldr	s15, [r1, #-20]	@ 0xffffffec
 801bb52:	eebe 6ae0 	vcvt.s32.f32	s12, s12, #31
 801bb56:	ed03 6a08 	vstr	s12, [r3, #-32]	@ 0xffffffe0
 801bb5a:	ed11 6a04 	vldr	s12, [r1, #-16]
 801bb5e:	eefe 6ae0 	vcvt.s32.f32	s13, s13, #31
 801bb62:	ed43 6a07 	vstr	s13, [r3, #-28]	@ 0xffffffe4
 801bb66:	ed51 6a03 	vldr	s13, [r1, #-12]
 801bb6a:	eebe 7ae0 	vcvt.s32.f32	s14, s14, #31
 801bb6e:	ed03 7a06 	vstr	s14, [r3, #-24]	@ 0xffffffe8
 801bb72:	ed11 7a02 	vldr	s14, [r1, #-8]
 801bb76:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801bb7a:	ed43 7a05 	vstr	s15, [r3, #-20]	@ 0xffffffec
 801bb7e:	ed51 7a01 	vldr	s15, [r1, #-4]
 801bb82:	eebe 6ae0 	vcvt.s32.f32	s12, s12, #31
 801bb86:	ed03 6a04 	vstr	s12, [r3, #-16]
 801bb8a:	eefe 6ae0 	vcvt.s32.f32	s13, s13, #31
 801bb8e:	ed43 6a03 	vstr	s13, [r3, #-12]
 801bb92:	eebe 7ae0 	vcvt.s32.f32	s14, s14, #31
 801bb96:	ed03 7a02 	vstr	s14, [r3, #-8]
 801bb9a:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801bb9e:	ed43 7a01 	vstr	s15, [r3, #-4]
 801bba2:	3c08      	subs	r4, #8
 801bba4:	3120      	adds	r1, #32
 801bba6:	3320      	adds	r3, #32
 801bba8:	2c07      	cmp	r4, #7
 801bbaa:	d8ca      	bhi.n	801bb42 <awe_vecFloatToFract32+0x162>
 801bbac:	3e08      	subs	r6, #8
 801bbae:	08f6      	lsrs	r6, r6, #3
 801bbb0:	1c73      	adds	r3, r6, #1
 801bbb2:	015b      	lsls	r3, r3, #5
 801bbb4:	4418      	add	r0, r3
 801bbb6:	441a      	add	r2, r3
 801bbb8:	3d08      	subs	r5, #8
 801bbba:	ebc6 7646 	rsb	r6, r6, r6, lsl #29
 801bbbe:	eb05 05c6 	add.w	r5, r5, r6, lsl #3
 801bbc2:	2d00      	cmp	r5, #0
 801bbc4:	d0ae      	beq.n	801bb24 <awe_vecFloatToFract32+0x144>
 801bbc6:	ecf0 7a01 	vldmia	r0!, {s15}
 801bbca:	eefe 7ae0 	vcvt.s32.f32	s15, s15, #31
 801bbce:	ece2 7a01 	vstmia	r2!, {s15}
 801bbd2:	3d01      	subs	r5, #1
 801bbd4:	d1f7      	bne.n	801bbc6 <awe_vecFloatToFract32+0x1e6>
 801bbd6:	e7a5      	b.n	801bb24 <awe_vecFloatToFract32+0x144>

0801bbd8 <awe_vecFloatToInt>:
 801bbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbdc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bbde:	ea5f 0ba4 	movs.w	fp, r4, asr #2
 801bbe2:	d065      	beq.n	801bcb0 <awe_vecFloatToInt+0xd8>
 801bbe4:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801bbe8:	eb0e 0ac3 	add.w	sl, lr, r3, lsl #3
 801bbec:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801bbf0:	ea4f 1901 	mov.w	r9, r1, lsl #4
 801bbf4:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801bbf8:	465f      	mov	r7, fp
 801bbfa:	4615      	mov	r5, r2
 801bbfc:	4606      	mov	r6, r0
 801bbfe:	eef6 4a00 	vmov.f32	s9, #96	@ 0x3f000000  0.5
 801bc02:	eebe 4a00 	vmov.f32	s8, #224	@ 0xbf000000 -0.5
 801bc06:	edd6 5a00 	vldr	s11, [r6]
 801bc0a:	eb06 040c 	add.w	r4, r6, ip
 801bc0e:	edd4 6a00 	vldr	s13, [r4]
 801bc12:	4464      	add	r4, ip
 801bc14:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801bc18:	edd4 7a00 	vldr	s15, [r4]
 801bc1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc20:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bc24:	bfd4      	ite	le
 801bc26:	eeb0 5a44 	vmovle.f32	s10, s8
 801bc2a:	eeb0 5a64 	vmovgt.f32	s10, s9
 801bc2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bc36:	bfd4      	ite	le
 801bc38:	eeb0 6a44 	vmovle.f32	s12, s8
 801bc3c:	eeb0 6a64 	vmovgt.f32	s12, s9
 801bc40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc44:	bfd4      	ite	le
 801bc46:	eeb0 7a44 	vmovle.f32	s14, s8
 801bc4a:	eeb0 7a64 	vmovgt.f32	s14, s9
 801bc4e:	4464      	add	r4, ip
 801bc50:	ee77 7a87 	vadd.f32	s15, s15, s14
 801bc54:	ee76 6a86 	vadd.f32	s13, s13, s12
 801bc58:	ed94 7a00 	vldr	s14, [r4]
 801bc5c:	ee75 5a25 	vadd.f32	s11, s10, s11
 801bc60:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801bc64:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 801bc68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc6c:	ee16 4a90 	vmov	r4, s13
 801bc70:	bfcc      	ite	gt
 801bc72:	ee37 7a24 	vaddgt.f32	s14, s14, s9
 801bc76:	ee37 7a64 	vsuble.f32	s14, s14, s9
 801bc7a:	eefd 5ae5 	vcvt.s32.f32	s11, s11
 801bc7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bc82:	edc5 5a00 	vstr	s11, [r5]
 801bc86:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bc8a:	f845 400e 	str.w	r4, [r5, lr]
 801bc8e:	ee17 4a90 	vmov	r4, s15
 801bc92:	f845 401e 	str.w	r4, [r5, lr, lsl #1]
 801bc96:	ee17 4a10 	vmov	r4, s14
 801bc9a:	3f01      	subs	r7, #1
 801bc9c:	f845 400a 	str.w	r4, [r5, sl]
 801bca0:	444e      	add	r6, r9
 801bca2:	4445      	add	r5, r8
 801bca4:	d1af      	bne.n	801bc06 <awe_vecFloatToInt+0x2e>
 801bca6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bca8:	fb09 000b 	mla	r0, r9, fp, r0
 801bcac:	fb0b 2208 	mla	r2, fp, r8, r2
 801bcb0:	f014 0403 	ands.w	r4, r4, #3
 801bcb4:	d03f      	beq.n	801bd36 <awe_vecFloatToInt+0x15e>
 801bcb6:	ed90 6a00 	vldr	s12, [r0]
 801bcba:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801bcbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcc2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801bcc6:	eefe 6a00 	vmov.f32	s13, #224	@ 0xbf000000 -0.5
 801bcca:	bfd4      	ite	le
 801bccc:	eeb0 7a66 	vmovle.f32	s14, s13
 801bcd0:	eeb0 7a67 	vmovgt.f32	s14, s15
 801bcd4:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bcd8:	0089      	lsls	r1, r1, #2
 801bcda:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bcde:	2c01      	cmp	r4, #1
 801bce0:	ed82 7a00 	vstr	s14, [r2]
 801bce4:	4408      	add	r0, r1
 801bce6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 801bcea:	d024      	beq.n	801bd36 <awe_vecFloatToInt+0x15e>
 801bcec:	ed90 6a00 	vldr	s12, [r0]
 801bcf0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801bcf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcf8:	bfd4      	ite	le
 801bcfa:	eeb0 7a66 	vmovle.f32	s14, s13
 801bcfe:	eeb0 7a67 	vmovgt.f32	s14, s15
 801bd02:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bd06:	2c02      	cmp	r4, #2
 801bd08:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bd0c:	4408      	add	r0, r1
 801bd0e:	ed82 7a00 	vstr	s14, [r2]
 801bd12:	d010      	beq.n	801bd36 <awe_vecFloatToInt+0x15e>
 801bd14:	ed90 7a00 	vldr	s14, [r0]
 801bd18:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801bd1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd20:	bfd8      	it	le
 801bd22:	eef0 7a66 	vmovle.f32	s15, s13
 801bd26:	ee77 7a87 	vadd.f32	s15, s15, s14
 801bd2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bd2e:	ee17 1a90 	vmov	r1, s15
 801bd32:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801bd36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd3a:	bf00      	nop

0801bd3c <awe_vecFract32ToFloat>:
 801bd3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd40:	b08b      	sub	sp, #44	@ 0x2c
 801bd42:	9105      	str	r1, [sp, #20]
 801bd44:	9304      	str	r3, [sp, #16]
 801bd46:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bd48:	2901      	cmp	r1, #1
 801bd4a:	f000 80b1 	beq.w	801beb0 <awe_vecFract32ToFloat+0x174>
 801bd4e:	9506      	str	r5, [sp, #24]
 801bd50:	2d07      	cmp	r5, #7
 801bd52:	f240 8097 	bls.w	801be84 <awe_vecFract32ToFloat+0x148>
 801bd56:	9b05      	ldr	r3, [sp, #20]
 801bd58:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bd5c:	9f04      	ldr	r7, [sp, #16]
 801bd5e:	ea4f 0987 	mov.w	r9, r7, lsl #2
 801bd62:	ea4f 1847 	mov.w	r8, r7, lsl #5
 801bd66:	eb02 0409 	add.w	r4, r2, r9
 801bd6a:	eb0c 0ac3 	add.w	sl, ip, r3, lsl #3
 801bd6e:	eb0c 1103 	add.w	r1, ip, r3, lsl #4
 801bd72:	9101      	str	r1, [sp, #4]
 801bd74:	00fe      	lsls	r6, r7, #3
 801bd76:	ea4f 014a 	mov.w	r1, sl, lsl #1
 801bd7a:	9102      	str	r1, [sp, #8]
 801bd7c:	ebcc 1143 	rsb	r1, ip, r3, lsl #5
 801bd80:	015b      	lsls	r3, r3, #5
 801bd82:	9308      	str	r3, [sp, #32]
 801bd84:	013f      	lsls	r7, r7, #4
 801bd86:	9707      	str	r7, [sp, #28]
 801bd88:	44b1      	add	r9, r6
 801bd8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bd8e:	46ae      	mov	lr, r5
 801bd90:	4617      	mov	r7, r2
 801bd92:	4603      	mov	r3, r0
 801bd94:	eddf 7a7f 	vldr	s15, [pc, #508]	@ 801bf94 <awe_vecFract32ToFloat+0x258>
 801bd98:	9103      	str	r1, [sp, #12]
 801bd9a:	9009      	str	r0, [sp, #36]	@ 0x24
 801bd9c:	9807      	ldr	r0, [sp, #28]
 801bd9e:	9207      	str	r2, [sp, #28]
 801bda0:	9514      	str	r5, [sp, #80]	@ 0x50
 801bda2:	9d08      	ldr	r5, [sp, #32]
 801bda4:	ed93 7a00 	vldr	s14, [r3]
 801bda8:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801bdac:	f853 200c 	ldr.w	r2, [r3, ip]
 801bdb0:	ee07 2a10 	vmov	s14, r2
 801bdb4:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 801bdb8:	f853 200a 	ldr.w	r2, [r3, sl]
 801bdbc:	ee07 2a10 	vmov	s14, r2
 801bdc0:	f853 201c 	ldr.w	r2, [r3, ip, lsl #1]
 801bdc4:	ee06 2a90 	vmov	s13, r2
 801bdc8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bdcc:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801bdd0:	edc7 5a00 	vstr	s11, [r7]
 801bdd4:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 801bdd8:	ee05 2a90 	vmov	s11, r2
 801bddc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bde0:	ee26 6a27 	vmul.f32	s12, s12, s15
 801bde4:	ed84 6a00 	vstr	s12, [r4]
 801bde8:	9a01      	ldr	r2, [sp, #4]
 801bdea:	589a      	ldr	r2, [r3, r2]
 801bdec:	ee06 2a10 	vmov	s12, r2
 801bdf0:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801bdf4:	19ba      	adds	r2, r7, r6
 801bdf6:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801bdfa:	edc2 6a00 	vstr	s13, [r2]
 801bdfe:	9902      	ldr	r1, [sp, #8]
 801be00:	5859      	ldr	r1, [r3, r1]
 801be02:	ee06 1a90 	vmov	s13, r1
 801be06:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801be0a:	eb04 0b06 	add.w	fp, r4, r6
 801be0e:	ee27 7a27 	vmul.f32	s14, s14, s15
 801be12:	ed8b 7a00 	vstr	s14, [fp]
 801be16:	9903      	ldr	r1, [sp, #12]
 801be18:	5859      	ldr	r1, [r3, r1]
 801be1a:	ee07 1a10 	vmov	s14, r1
 801be1e:	442b      	add	r3, r5
 801be20:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801be24:	4432      	add	r2, r6
 801be26:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801be2a:	edc2 5a00 	vstr	s11, [r2]
 801be2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801be32:	eb04 0b00 	add.w	fp, r4, r0
 801be36:	ee26 6a27 	vmul.f32	s12, s12, s15
 801be3a:	ed8b 6a00 	vstr	s12, [fp]
 801be3e:	4432      	add	r2, r6
 801be40:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801be44:	edc2 6a00 	vstr	s13, [r2]
 801be48:	eb04 0209 	add.w	r2, r4, r9
 801be4c:	ee27 7a27 	vmul.f32	s14, s14, s15
 801be50:	ed82 7a00 	vstr	s14, [r2]
 801be54:	4447      	add	r7, r8
 801be56:	f1ae 0e08 	sub.w	lr, lr, #8
 801be5a:	4444      	add	r4, r8
 801be5c:	f1be 0f07 	cmp.w	lr, #7
 801be60:	d8a0      	bhi.n	801bda4 <awe_vecFract32ToFloat+0x68>
 801be62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801be64:	9a07      	ldr	r2, [sp, #28]
 801be66:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801be68:	9b06      	ldr	r3, [sp, #24]
 801be6a:	3b08      	subs	r3, #8
 801be6c:	08db      	lsrs	r3, r3, #3
 801be6e:	1c59      	adds	r1, r3, #1
 801be70:	00cc      	lsls	r4, r1, #3
 801be72:	fb0c 0004 	mla	r0, ip, r4, r0
 801be76:	fb08 2201 	mla	r2, r8, r1, r2
 801be7a:	3d08      	subs	r5, #8
 801be7c:	ebc3 7343 	rsb	r3, r3, r3, lsl #29
 801be80:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 801be84:	b18d      	cbz	r5, 801beaa <awe_vecFract32ToFloat+0x16e>
 801be86:	9b05      	ldr	r3, [sp, #20]
 801be88:	0099      	lsls	r1, r3, #2
 801be8a:	9b04      	ldr	r3, [sp, #16]
 801be8c:	009b      	lsls	r3, r3, #2
 801be8e:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 801bf94 <awe_vecFract32ToFloat+0x258>
 801be92:	edd0 7a00 	vldr	s15, [r0]
 801be96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801be9a:	ee67 7a87 	vmul.f32	s15, s15, s14
 801be9e:	edc2 7a00 	vstr	s15, [r2]
 801bea2:	4408      	add	r0, r1
 801bea4:	441a      	add	r2, r3
 801bea6:	3d01      	subs	r5, #1
 801bea8:	d1f3      	bne.n	801be92 <awe_vecFract32ToFloat+0x156>
 801beaa:	b00b      	add	sp, #44	@ 0x2c
 801beac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801beb0:	9b04      	ldr	r3, [sp, #16]
 801beb2:	2b01      	cmp	r3, #1
 801beb4:	f47f af4b 	bne.w	801bd4e <awe_vecFract32ToFloat+0x12>
 801beb8:	462e      	mov	r6, r5
 801beba:	2d07      	cmp	r5, #7
 801bebc:	d957      	bls.n	801bf6e <awe_vecFract32ToFloat+0x232>
 801bebe:	f100 0120 	add.w	r1, r0, #32
 801bec2:	f102 0320 	add.w	r3, r2, #32
 801bec6:	462c      	mov	r4, r5
 801bec8:	eddf 7a32 	vldr	s15, [pc, #200]	@ 801bf94 <awe_vecFract32ToFloat+0x258>
 801becc:	ed11 7a08 	vldr	s14, [r1, #-32]	@ 0xffffffe0
 801bed0:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801bed4:	ed11 7a07 	vldr	s14, [r1, #-28]	@ 0xffffffe4
 801bed8:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 801bedc:	ed11 7a05 	vldr	s14, [r1, #-20]	@ 0xffffffec
 801bee0:	ed51 6a06 	vldr	s13, [r1, #-24]	@ 0xffffffe8
 801bee4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bee8:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801beec:	ed43 5a08 	vstr	s11, [r3, #-32]	@ 0xffffffe0
 801bef0:	ed51 5a04 	vldr	s11, [r1, #-16]
 801bef4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bef8:	ee26 6a27 	vmul.f32	s12, s12, s15
 801befc:	ed03 6a07 	vstr	s12, [r3, #-28]	@ 0xffffffe4
 801bf00:	ed11 6a03 	vldr	s12, [r1, #-12]
 801bf04:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801bf08:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801bf0c:	ed43 6a06 	vstr	s13, [r3, #-24]	@ 0xffffffe8
 801bf10:	ed51 6a02 	vldr	s13, [r1, #-8]
 801bf14:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801bf18:	ee27 7a27 	vmul.f32	s14, s14, s15
 801bf1c:	ed03 7a05 	vstr	s14, [r3, #-20]	@ 0xffffffec
 801bf20:	ed11 7a01 	vldr	s14, [r1, #-4]
 801bf24:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bf28:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801bf2c:	ed43 5a04 	vstr	s11, [r3, #-16]
 801bf30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bf34:	ee26 6a27 	vmul.f32	s12, s12, s15
 801bf38:	ed03 6a03 	vstr	s12, [r3, #-12]
 801bf3c:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801bf40:	ed43 6a02 	vstr	s13, [r3, #-8]
 801bf44:	ee27 7a27 	vmul.f32	s14, s14, s15
 801bf48:	ed03 7a01 	vstr	s14, [r3, #-4]
 801bf4c:	3c08      	subs	r4, #8
 801bf4e:	3120      	adds	r1, #32
 801bf50:	3320      	adds	r3, #32
 801bf52:	2c07      	cmp	r4, #7
 801bf54:	d8ba      	bhi.n	801becc <awe_vecFract32ToFloat+0x190>
 801bf56:	f1a6 0308 	sub.w	r3, r6, #8
 801bf5a:	08db      	lsrs	r3, r3, #3
 801bf5c:	1c59      	adds	r1, r3, #1
 801bf5e:	0149      	lsls	r1, r1, #5
 801bf60:	4408      	add	r0, r1
 801bf62:	440a      	add	r2, r1
 801bf64:	3d08      	subs	r5, #8
 801bf66:	ebc3 7343 	rsb	r3, r3, r3, lsl #29
 801bf6a:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 801bf6e:	2d00      	cmp	r5, #0
 801bf70:	d09b      	beq.n	801beaa <awe_vecFract32ToFloat+0x16e>
 801bf72:	3804      	subs	r0, #4
 801bf74:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 801bf94 <awe_vecFract32ToFloat+0x258>
 801bf78:	f850 3f04 	ldr.w	r3, [r0, #4]!
 801bf7c:	ee07 3a90 	vmov	s15, r3
 801bf80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bf84:	ee67 7a87 	vmul.f32	s15, s15, s14
 801bf88:	ece2 7a01 	vstmia	r2!, {s15}
 801bf8c:	3d01      	subs	r5, #1
 801bf8e:	d1f3      	bne.n	801bf78 <awe_vecFract32ToFloat+0x23c>
 801bf90:	e78b      	b.n	801beaa <awe_vecFract32ToFloat+0x16e>
 801bf92:	bf00      	nop
 801bf94:	30000000 	.word	0x30000000

0801bf98 <awe_vecFract32ToInt>:
 801bf98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf9c:	b083      	sub	sp, #12
 801bf9e:	469b      	mov	fp, r3
 801bfa0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bfa2:	109b      	asrs	r3, r3, #2
 801bfa4:	9300      	str	r3, [sp, #0]
 801bfa6:	d026      	beq.n	801bff6 <awe_vecFract32ToInt+0x5e>
 801bfa8:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801bfac:	ea4f 078b 	mov.w	r7, fp, lsl #2
 801bfb0:	eb0c 0ac1 	add.w	sl, ip, r1, lsl #3
 801bfb4:	eb07 09cb 	add.w	r9, r7, fp, lsl #3
 801bfb8:	ea4f 1801 	mov.w	r8, r1, lsl #4
 801bfbc:	ea4f 1e0b 	mov.w	lr, fp, lsl #4
 801bfc0:	461e      	mov	r6, r3
 801bfc2:	4615      	mov	r5, r2
 801bfc4:	4604      	mov	r4, r0
 801bfc6:	9201      	str	r2, [sp, #4]
 801bfc8:	6823      	ldr	r3, [r4, #0]
 801bfca:	602b      	str	r3, [r5, #0]
 801bfcc:	f854 300c 	ldr.w	r3, [r4, ip]
 801bfd0:	51eb      	str	r3, [r5, r7]
 801bfd2:	f854 201c 	ldr.w	r2, [r4, ip, lsl #1]
 801bfd6:	f854 300a 	ldr.w	r3, [r4, sl]
 801bfda:	f845 2017 	str.w	r2, [r5, r7, lsl #1]
 801bfde:	3e01      	subs	r6, #1
 801bfe0:	f845 3009 	str.w	r3, [r5, r9]
 801bfe4:	4444      	add	r4, r8
 801bfe6:	4475      	add	r5, lr
 801bfe8:	d1ee      	bne.n	801bfc8 <awe_vecFract32ToInt+0x30>
 801bfea:	e9dd 3200 	ldrd	r3, r2, [sp]
 801bfee:	fb08 0003 	mla	r0, r8, r3, r0
 801bff2:	fb0e 2203 	mla	r2, lr, r3, r2
 801bff6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bff8:	f013 0303 	ands.w	r3, r3, #3
 801bffc:	d012      	beq.n	801c024 <awe_vecFract32ToInt+0x8c>
 801bffe:	6804      	ldr	r4, [r0, #0]
 801c000:	6014      	str	r4, [r2, #0]
 801c002:	2b01      	cmp	r3, #1
 801c004:	eb00 0581 	add.w	r5, r0, r1, lsl #2
 801c008:	eb02 048b 	add.w	r4, r2, fp, lsl #2
 801c00c:	d00a      	beq.n	801c024 <awe_vecFract32ToInt+0x8c>
 801c00e:	2b02      	cmp	r3, #2
 801c010:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 801c014:	bf18      	it	ne
 801c016:	f855 3021 	ldrne.w	r3, [r5, r1, lsl #2]
 801c01a:	f842 002b 	str.w	r0, [r2, fp, lsl #2]
 801c01e:	bf18      	it	ne
 801c020:	f844 302b 	strne.w	r3, [r4, fp, lsl #2]
 801c024:	b003      	add	sp, #12
 801c026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c02a:	bf00      	nop

0801c02c <awe_vecIntToFloat>:
 801c02c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c030:	b085      	sub	sp, #20
 801c032:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c034:	9302      	str	r3, [sp, #8]
 801c036:	10a6      	asrs	r6, r4, #2
 801c038:	9601      	str	r6, [sp, #4]
 801c03a:	d03a      	beq.n	801c0b2 <awe_vecIntToFloat+0x86>
 801c03c:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801c040:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801c044:	011f      	lsls	r7, r3, #4
 801c046:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 801c04a:	eb0c 0bc1 	add.w	fp, ip, r1, lsl #3
 801c04e:	ea4f 1a01 	mov.w	sl, r1, lsl #4
 801c052:	4614      	mov	r4, r2
 801c054:	4603      	mov	r3, r0
 801c056:	9203      	str	r2, [sp, #12]
 801c058:	edd3 7a00 	vldr	s15, [r3]
 801c05c:	f853 200c 	ldr.w	r2, [r3, ip]
 801c060:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801c064:	ee07 2a90 	vmov	s15, r2
 801c068:	f853 201c 	ldr.w	r2, [r3, ip, lsl #1]
 801c06c:	ed84 6a00 	vstr	s12, [r4]
 801c070:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 801c074:	ee07 2a90 	vmov	s15, r2
 801c078:	f853 200b 	ldr.w	r2, [r3, fp]
 801c07c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c080:	ee07 2a90 	vmov	s15, r2
 801c084:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c088:	eb04 090e 	add.w	r9, r4, lr
 801c08c:	eb05 080e 	add.w	r8, r5, lr
 801c090:	3e01      	subs	r6, #1
 801c092:	edc9 6a00 	vstr	s13, [r9]
 801c096:	4453      	add	r3, sl
 801c098:	ed85 7a00 	vstr	s14, [r5]
 801c09c:	443c      	add	r4, r7
 801c09e:	edc8 7a00 	vstr	s15, [r8]
 801c0a2:	443d      	add	r5, r7
 801c0a4:	d1d8      	bne.n	801c058 <awe_vecIntToFloat+0x2c>
 801c0a6:	9b01      	ldr	r3, [sp, #4]
 801c0a8:	9a03      	ldr	r2, [sp, #12]
 801c0aa:	fb03 000a 	mla	r0, r3, sl, r0
 801c0ae:	fb07 2203 	mla	r2, r7, r3, r2
 801c0b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c0b4:	f013 0403 	ands.w	r4, r3, #3
 801c0b8:	d01f      	beq.n	801c0fa <awe_vecIntToFloat+0xce>
 801c0ba:	edd0 7a00 	vldr	s15, [r0]
 801c0be:	9b02      	ldr	r3, [sp, #8]
 801c0c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c0c4:	009b      	lsls	r3, r3, #2
 801c0c6:	2c01      	cmp	r4, #1
 801c0c8:	edc2 7a00 	vstr	s15, [r2]
 801c0cc:	eb00 0581 	add.w	r5, r0, r1, lsl #2
 801c0d0:	441a      	add	r2, r3
 801c0d2:	d012      	beq.n	801c0fa <awe_vecIntToFloat+0xce>
 801c0d4:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 801c0d8:	ee07 0a90 	vmov	s15, r0
 801c0dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c0e0:	2c02      	cmp	r4, #2
 801c0e2:	4413      	add	r3, r2
 801c0e4:	edc2 7a00 	vstr	s15, [r2]
 801c0e8:	d007      	beq.n	801c0fa <awe_vecIntToFloat+0xce>
 801c0ea:	f855 2021 	ldr.w	r2, [r5, r1, lsl #2]
 801c0ee:	ee07 2a90 	vmov	s15, r2
 801c0f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c0f6:	edc3 7a00 	vstr	s15, [r3]
 801c0fa:	b005      	add	sp, #20
 801c0fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c100 <awe_vecIntToFract32>:
 801c100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c104:	b083      	sub	sp, #12
 801c106:	469b      	mov	fp, r3
 801c108:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c10a:	109b      	asrs	r3, r3, #2
 801c10c:	9300      	str	r3, [sp, #0]
 801c10e:	d026      	beq.n	801c15e <awe_vecIntToFract32+0x5e>
 801c110:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801c114:	ea4f 078b 	mov.w	r7, fp, lsl #2
 801c118:	eb0c 0ac1 	add.w	sl, ip, r1, lsl #3
 801c11c:	eb07 09cb 	add.w	r9, r7, fp, lsl #3
 801c120:	ea4f 1801 	mov.w	r8, r1, lsl #4
 801c124:	ea4f 1e0b 	mov.w	lr, fp, lsl #4
 801c128:	461e      	mov	r6, r3
 801c12a:	4615      	mov	r5, r2
 801c12c:	4604      	mov	r4, r0
 801c12e:	9201      	str	r2, [sp, #4]
 801c130:	6823      	ldr	r3, [r4, #0]
 801c132:	602b      	str	r3, [r5, #0]
 801c134:	f854 300c 	ldr.w	r3, [r4, ip]
 801c138:	51eb      	str	r3, [r5, r7]
 801c13a:	f854 201c 	ldr.w	r2, [r4, ip, lsl #1]
 801c13e:	f854 300a 	ldr.w	r3, [r4, sl]
 801c142:	f845 2017 	str.w	r2, [r5, r7, lsl #1]
 801c146:	3e01      	subs	r6, #1
 801c148:	f845 3009 	str.w	r3, [r5, r9]
 801c14c:	4444      	add	r4, r8
 801c14e:	4475      	add	r5, lr
 801c150:	d1ee      	bne.n	801c130 <awe_vecIntToFract32+0x30>
 801c152:	e9dd 3200 	ldrd	r3, r2, [sp]
 801c156:	fb08 0003 	mla	r0, r8, r3, r0
 801c15a:	fb0e 2203 	mla	r2, lr, r3, r2
 801c15e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c160:	f013 0303 	ands.w	r3, r3, #3
 801c164:	d012      	beq.n	801c18c <awe_vecIntToFract32+0x8c>
 801c166:	6804      	ldr	r4, [r0, #0]
 801c168:	6014      	str	r4, [r2, #0]
 801c16a:	2b01      	cmp	r3, #1
 801c16c:	eb00 0581 	add.w	r5, r0, r1, lsl #2
 801c170:	eb02 048b 	add.w	r4, r2, fp, lsl #2
 801c174:	d00a      	beq.n	801c18c <awe_vecIntToFract32+0x8c>
 801c176:	2b02      	cmp	r3, #2
 801c178:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 801c17c:	bf18      	it	ne
 801c17e:	f855 3021 	ldrne.w	r3, [r5, r1, lsl #2]
 801c182:	f842 002b 	str.w	r0, [r2, fp, lsl #2]
 801c186:	bf18      	it	ne
 801c188:	f844 302b 	strne.w	r3, [r4, fp, lsl #2]
 801c18c:	b003      	add	sp, #12
 801c18e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c192:	bf00      	nop

0801c194 <awe_vecLogicCompareEqual>:
 801c194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c198:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c19c:	469c      	mov	ip, r3
 801c19e:	4686      	mov	lr, r0
 801c1a0:	4688      	mov	r8, r1
 801c1a2:	4691      	mov	r9, r2
 801c1a4:	d045      	beq.n	801c232 <awe_vecLogicCompareEqual+0x9e>
 801c1a6:	f100 0610 	add.w	r6, r0, #16
 801c1aa:	f101 0510 	add.w	r5, r1, #16
 801c1ae:	f102 0410 	add.w	r4, r2, #16
 801c1b2:	4657      	mov	r7, sl
 801c1b4:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c1b8:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c1bc:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c1c0:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c1c4:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c1c8:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c1cc:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c1d0:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c1d4:	eeb4 4a64 	vcmp.f32	s8, s9
 801c1d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1dc:	eeb4 5a65 	vcmp.f32	s10, s11
 801c1e0:	bf0c      	ite	eq
 801c1e2:	2001      	moveq	r0, #1
 801c1e4:	2000      	movne	r0, #0
 801c1e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1ea:	eeb4 6a66 	vcmp.f32	s12, s13
 801c1ee:	bf0c      	ite	eq
 801c1f0:	2101      	moveq	r1, #1
 801c1f2:	2100      	movne	r1, #0
 801c1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1f8:	eeb4 7a67 	vcmp.f32	s14, s15
 801c1fc:	bf0c      	ite	eq
 801c1fe:	2201      	moveq	r2, #1
 801c200:	2200      	movne	r2, #0
 801c202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c206:	bf0c      	ite	eq
 801c208:	2301      	moveq	r3, #1
 801c20a:	2300      	movne	r3, #0
 801c20c:	3f01      	subs	r7, #1
 801c20e:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c212:	f844 2c08 	str.w	r2, [r4, #-8]
 801c216:	f844 3c04 	str.w	r3, [r4, #-4]
 801c21a:	f106 0610 	add.w	r6, r6, #16
 801c21e:	f105 0510 	add.w	r5, r5, #16
 801c222:	f104 0410 	add.w	r4, r4, #16
 801c226:	d1c5      	bne.n	801c1b4 <awe_vecLogicCompareEqual+0x20>
 801c228:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c22c:	449e      	add	lr, r3
 801c22e:	4498      	add	r8, r3
 801c230:	4499      	add	r9, r3
 801c232:	f01c 0c03 	ands.w	ip, ip, #3
 801c236:	d02c      	beq.n	801c292 <awe_vecLogicCompareEqual+0xfe>
 801c238:	ed98 7a00 	vldr	s14, [r8]
 801c23c:	edde 7a00 	vldr	s15, [lr]
 801c240:	eeb4 7a67 	vcmp.f32	s14, s15
 801c244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c248:	bf0c      	ite	eq
 801c24a:	2301      	moveq	r3, #1
 801c24c:	2300      	movne	r3, #0
 801c24e:	f1bc 0f01 	cmp.w	ip, #1
 801c252:	f8c9 3000 	str.w	r3, [r9]
 801c256:	d01c      	beq.n	801c292 <awe_vecLogicCompareEqual+0xfe>
 801c258:	ed98 7a01 	vldr	s14, [r8, #4]
 801c25c:	edde 7a01 	vldr	s15, [lr, #4]
 801c260:	eeb4 7a67 	vcmp.f32	s14, s15
 801c264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c268:	bf0c      	ite	eq
 801c26a:	2301      	moveq	r3, #1
 801c26c:	2300      	movne	r3, #0
 801c26e:	f1bc 0f02 	cmp.w	ip, #2
 801c272:	f8c9 3004 	str.w	r3, [r9, #4]
 801c276:	d00c      	beq.n	801c292 <awe_vecLogicCompareEqual+0xfe>
 801c278:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c27c:	edd8 7a02 	vldr	s15, [r8, #8]
 801c280:	eeb4 7a67 	vcmp.f32	s14, s15
 801c284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c288:	bf0c      	ite	eq
 801c28a:	2301      	moveq	r3, #1
 801c28c:	2300      	movne	r3, #0
 801c28e:	f8c9 3008 	str.w	r3, [r9, #8]
 801c292:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c296:	bf00      	nop

0801c298 <awe_vecLogicCompareNotEqual>:
 801c298:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c29c:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c2a0:	469c      	mov	ip, r3
 801c2a2:	4686      	mov	lr, r0
 801c2a4:	4688      	mov	r8, r1
 801c2a6:	4691      	mov	r9, r2
 801c2a8:	d045      	beq.n	801c336 <awe_vecLogicCompareNotEqual+0x9e>
 801c2aa:	f100 0610 	add.w	r6, r0, #16
 801c2ae:	f101 0510 	add.w	r5, r1, #16
 801c2b2:	f102 0410 	add.w	r4, r2, #16
 801c2b6:	4657      	mov	r7, sl
 801c2b8:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c2bc:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c2c0:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c2c4:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c2c8:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c2cc:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c2d0:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c2d4:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c2d8:	eeb4 4a64 	vcmp.f32	s8, s9
 801c2dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2e0:	eeb4 5a65 	vcmp.f32	s10, s11
 801c2e4:	bf14      	ite	ne
 801c2e6:	2001      	movne	r0, #1
 801c2e8:	2000      	moveq	r0, #0
 801c2ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2ee:	eeb4 6a66 	vcmp.f32	s12, s13
 801c2f2:	bf14      	ite	ne
 801c2f4:	2101      	movne	r1, #1
 801c2f6:	2100      	moveq	r1, #0
 801c2f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2fc:	eeb4 7a67 	vcmp.f32	s14, s15
 801c300:	bf14      	ite	ne
 801c302:	2201      	movne	r2, #1
 801c304:	2200      	moveq	r2, #0
 801c306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c30a:	bf14      	ite	ne
 801c30c:	2301      	movne	r3, #1
 801c30e:	2300      	moveq	r3, #0
 801c310:	3f01      	subs	r7, #1
 801c312:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c316:	f844 2c08 	str.w	r2, [r4, #-8]
 801c31a:	f844 3c04 	str.w	r3, [r4, #-4]
 801c31e:	f106 0610 	add.w	r6, r6, #16
 801c322:	f105 0510 	add.w	r5, r5, #16
 801c326:	f104 0410 	add.w	r4, r4, #16
 801c32a:	d1c5      	bne.n	801c2b8 <awe_vecLogicCompareNotEqual+0x20>
 801c32c:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c330:	449e      	add	lr, r3
 801c332:	4498      	add	r8, r3
 801c334:	4499      	add	r9, r3
 801c336:	f01c 0c03 	ands.w	ip, ip, #3
 801c33a:	d02c      	beq.n	801c396 <awe_vecLogicCompareNotEqual+0xfe>
 801c33c:	ed98 7a00 	vldr	s14, [r8]
 801c340:	edde 7a00 	vldr	s15, [lr]
 801c344:	eeb4 7a67 	vcmp.f32	s14, s15
 801c348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c34c:	bf14      	ite	ne
 801c34e:	2301      	movne	r3, #1
 801c350:	2300      	moveq	r3, #0
 801c352:	f1bc 0f01 	cmp.w	ip, #1
 801c356:	f8c9 3000 	str.w	r3, [r9]
 801c35a:	d01c      	beq.n	801c396 <awe_vecLogicCompareNotEqual+0xfe>
 801c35c:	ed98 7a01 	vldr	s14, [r8, #4]
 801c360:	edde 7a01 	vldr	s15, [lr, #4]
 801c364:	eeb4 7a67 	vcmp.f32	s14, s15
 801c368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c36c:	bf14      	ite	ne
 801c36e:	2301      	movne	r3, #1
 801c370:	2300      	moveq	r3, #0
 801c372:	f1bc 0f02 	cmp.w	ip, #2
 801c376:	f8c9 3004 	str.w	r3, [r9, #4]
 801c37a:	d00c      	beq.n	801c396 <awe_vecLogicCompareNotEqual+0xfe>
 801c37c:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c380:	edd8 7a02 	vldr	s15, [r8, #8]
 801c384:	eeb4 7a67 	vcmp.f32	s14, s15
 801c388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c38c:	bf14      	ite	ne
 801c38e:	2301      	movne	r3, #1
 801c390:	2300      	moveq	r3, #0
 801c392:	f8c9 3008 	str.w	r3, [r9, #8]
 801c396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c39a:	bf00      	nop

0801c39c <awe_vecLogicCompareLessThan>:
 801c39c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c3a0:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c3a4:	469c      	mov	ip, r3
 801c3a6:	4686      	mov	lr, r0
 801c3a8:	4688      	mov	r8, r1
 801c3aa:	4691      	mov	r9, r2
 801c3ac:	d045      	beq.n	801c43a <awe_vecLogicCompareLessThan+0x9e>
 801c3ae:	f100 0610 	add.w	r6, r0, #16
 801c3b2:	f101 0510 	add.w	r5, r1, #16
 801c3b6:	f102 0410 	add.w	r4, r2, #16
 801c3ba:	4657      	mov	r7, sl
 801c3bc:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c3c0:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c3c4:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c3c8:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c3cc:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c3d0:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c3d4:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c3d8:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c3dc:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801c3e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c3e4:	eeb4 5ae5 	vcmpe.f32	s10, s11
 801c3e8:	bf4c      	ite	mi
 801c3ea:	2001      	movmi	r0, #1
 801c3ec:	2000      	movpl	r0, #0
 801c3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c3f2:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801c3f6:	bf4c      	ite	mi
 801c3f8:	2101      	movmi	r1, #1
 801c3fa:	2100      	movpl	r1, #0
 801c3fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c400:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c404:	bf4c      	ite	mi
 801c406:	2201      	movmi	r2, #1
 801c408:	2200      	movpl	r2, #0
 801c40a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c40e:	bf4c      	ite	mi
 801c410:	2301      	movmi	r3, #1
 801c412:	2300      	movpl	r3, #0
 801c414:	3f01      	subs	r7, #1
 801c416:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c41a:	f844 2c08 	str.w	r2, [r4, #-8]
 801c41e:	f844 3c04 	str.w	r3, [r4, #-4]
 801c422:	f106 0610 	add.w	r6, r6, #16
 801c426:	f105 0510 	add.w	r5, r5, #16
 801c42a:	f104 0410 	add.w	r4, r4, #16
 801c42e:	d1c5      	bne.n	801c3bc <awe_vecLogicCompareLessThan+0x20>
 801c430:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c434:	449e      	add	lr, r3
 801c436:	4498      	add	r8, r3
 801c438:	4499      	add	r9, r3
 801c43a:	f01c 0c03 	ands.w	ip, ip, #3
 801c43e:	d02c      	beq.n	801c49a <awe_vecLogicCompareLessThan+0xfe>
 801c440:	ed98 7a00 	vldr	s14, [r8]
 801c444:	edde 7a00 	vldr	s15, [lr]
 801c448:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c44c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c450:	bfcc      	ite	gt
 801c452:	2301      	movgt	r3, #1
 801c454:	2300      	movle	r3, #0
 801c456:	f1bc 0f01 	cmp.w	ip, #1
 801c45a:	f8c9 3000 	str.w	r3, [r9]
 801c45e:	d01c      	beq.n	801c49a <awe_vecLogicCompareLessThan+0xfe>
 801c460:	ed98 7a01 	vldr	s14, [r8, #4]
 801c464:	edde 7a01 	vldr	s15, [lr, #4]
 801c468:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c46c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c470:	bfcc      	ite	gt
 801c472:	2301      	movgt	r3, #1
 801c474:	2300      	movle	r3, #0
 801c476:	f1bc 0f02 	cmp.w	ip, #2
 801c47a:	f8c9 3004 	str.w	r3, [r9, #4]
 801c47e:	d00c      	beq.n	801c49a <awe_vecLogicCompareLessThan+0xfe>
 801c480:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c484:	edd8 7a02 	vldr	s15, [r8, #8]
 801c488:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c48c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c490:	bf4c      	ite	mi
 801c492:	2301      	movmi	r3, #1
 801c494:	2300      	movpl	r3, #0
 801c496:	f8c9 3008 	str.w	r3, [r9, #8]
 801c49a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c49e:	bf00      	nop

0801c4a0 <awe_vecLogicCompareLessOrEqual>:
 801c4a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c4a4:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c4a8:	469c      	mov	ip, r3
 801c4aa:	4686      	mov	lr, r0
 801c4ac:	4688      	mov	r8, r1
 801c4ae:	4691      	mov	r9, r2
 801c4b0:	d045      	beq.n	801c53e <awe_vecLogicCompareLessOrEqual+0x9e>
 801c4b2:	f100 0610 	add.w	r6, r0, #16
 801c4b6:	f101 0510 	add.w	r5, r1, #16
 801c4ba:	f102 0410 	add.w	r4, r2, #16
 801c4be:	4657      	mov	r7, sl
 801c4c0:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c4c4:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c4c8:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c4cc:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c4d0:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c4d4:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c4d8:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c4dc:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c4e0:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801c4e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4e8:	eeb4 5ae5 	vcmpe.f32	s10, s11
 801c4ec:	bf94      	ite	ls
 801c4ee:	2001      	movls	r0, #1
 801c4f0:	2000      	movhi	r0, #0
 801c4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4f6:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801c4fa:	bf94      	ite	ls
 801c4fc:	2101      	movls	r1, #1
 801c4fe:	2100      	movhi	r1, #0
 801c500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c504:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c508:	bf94      	ite	ls
 801c50a:	2201      	movls	r2, #1
 801c50c:	2200      	movhi	r2, #0
 801c50e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c512:	bf94      	ite	ls
 801c514:	2301      	movls	r3, #1
 801c516:	2300      	movhi	r3, #0
 801c518:	3f01      	subs	r7, #1
 801c51a:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c51e:	f844 2c08 	str.w	r2, [r4, #-8]
 801c522:	f844 3c04 	str.w	r3, [r4, #-4]
 801c526:	f106 0610 	add.w	r6, r6, #16
 801c52a:	f105 0510 	add.w	r5, r5, #16
 801c52e:	f104 0410 	add.w	r4, r4, #16
 801c532:	d1c5      	bne.n	801c4c0 <awe_vecLogicCompareLessOrEqual+0x20>
 801c534:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c538:	449e      	add	lr, r3
 801c53a:	4498      	add	r8, r3
 801c53c:	4499      	add	r9, r3
 801c53e:	f01c 0c03 	ands.w	ip, ip, #3
 801c542:	d02c      	beq.n	801c59e <awe_vecLogicCompareLessOrEqual+0xfe>
 801c544:	ed98 7a00 	vldr	s14, [r8]
 801c548:	edde 7a00 	vldr	s15, [lr]
 801c54c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c554:	bfac      	ite	ge
 801c556:	2301      	movge	r3, #1
 801c558:	2300      	movlt	r3, #0
 801c55a:	f1bc 0f01 	cmp.w	ip, #1
 801c55e:	f8c9 3000 	str.w	r3, [r9]
 801c562:	d01c      	beq.n	801c59e <awe_vecLogicCompareLessOrEqual+0xfe>
 801c564:	ed98 7a01 	vldr	s14, [r8, #4]
 801c568:	edde 7a01 	vldr	s15, [lr, #4]
 801c56c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c574:	bfac      	ite	ge
 801c576:	2301      	movge	r3, #1
 801c578:	2300      	movlt	r3, #0
 801c57a:	f1bc 0f02 	cmp.w	ip, #2
 801c57e:	f8c9 3004 	str.w	r3, [r9, #4]
 801c582:	d00c      	beq.n	801c59e <awe_vecLogicCompareLessOrEqual+0xfe>
 801c584:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c588:	edd8 7a02 	vldr	s15, [r8, #8]
 801c58c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c594:	bf94      	ite	ls
 801c596:	2301      	movls	r3, #1
 801c598:	2300      	movhi	r3, #0
 801c59a:	f8c9 3008 	str.w	r3, [r9, #8]
 801c59e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5a2:	bf00      	nop

0801c5a4 <awe_vecLogicCompareGreater>:
 801c5a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c5a8:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c5ac:	469c      	mov	ip, r3
 801c5ae:	4686      	mov	lr, r0
 801c5b0:	4688      	mov	r8, r1
 801c5b2:	4691      	mov	r9, r2
 801c5b4:	d045      	beq.n	801c642 <awe_vecLogicCompareGreater+0x9e>
 801c5b6:	f100 0610 	add.w	r6, r0, #16
 801c5ba:	f101 0510 	add.w	r5, r1, #16
 801c5be:	f102 0410 	add.w	r4, r2, #16
 801c5c2:	4657      	mov	r7, sl
 801c5c4:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c5c8:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c5cc:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c5d0:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c5d4:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c5d8:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c5dc:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c5e0:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c5e4:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801c5e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c5ec:	eeb4 5ae5 	vcmpe.f32	s10, s11
 801c5f0:	bfcc      	ite	gt
 801c5f2:	2001      	movgt	r0, #1
 801c5f4:	2000      	movle	r0, #0
 801c5f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c5fa:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801c5fe:	bfcc      	ite	gt
 801c600:	2101      	movgt	r1, #1
 801c602:	2100      	movle	r1, #0
 801c604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c608:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c60c:	bfcc      	ite	gt
 801c60e:	2201      	movgt	r2, #1
 801c610:	2200      	movle	r2, #0
 801c612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c616:	bfcc      	ite	gt
 801c618:	2301      	movgt	r3, #1
 801c61a:	2300      	movle	r3, #0
 801c61c:	3f01      	subs	r7, #1
 801c61e:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c622:	f844 2c08 	str.w	r2, [r4, #-8]
 801c626:	f844 3c04 	str.w	r3, [r4, #-4]
 801c62a:	f106 0610 	add.w	r6, r6, #16
 801c62e:	f105 0510 	add.w	r5, r5, #16
 801c632:	f104 0410 	add.w	r4, r4, #16
 801c636:	d1c5      	bne.n	801c5c4 <awe_vecLogicCompareGreater+0x20>
 801c638:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c63c:	449e      	add	lr, r3
 801c63e:	4498      	add	r8, r3
 801c640:	4499      	add	r9, r3
 801c642:	f01c 0c03 	ands.w	ip, ip, #3
 801c646:	d02c      	beq.n	801c6a2 <awe_vecLogicCompareGreater+0xfe>
 801c648:	ed98 7a00 	vldr	s14, [r8]
 801c64c:	edde 7a00 	vldr	s15, [lr]
 801c650:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c658:	bf4c      	ite	mi
 801c65a:	2301      	movmi	r3, #1
 801c65c:	2300      	movpl	r3, #0
 801c65e:	f1bc 0f01 	cmp.w	ip, #1
 801c662:	f8c9 3000 	str.w	r3, [r9]
 801c666:	d01c      	beq.n	801c6a2 <awe_vecLogicCompareGreater+0xfe>
 801c668:	ed98 7a01 	vldr	s14, [r8, #4]
 801c66c:	edde 7a01 	vldr	s15, [lr, #4]
 801c670:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c678:	bf4c      	ite	mi
 801c67a:	2301      	movmi	r3, #1
 801c67c:	2300      	movpl	r3, #0
 801c67e:	f1bc 0f02 	cmp.w	ip, #2
 801c682:	f8c9 3004 	str.w	r3, [r9, #4]
 801c686:	d00c      	beq.n	801c6a2 <awe_vecLogicCompareGreater+0xfe>
 801c688:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c68c:	edd8 7a02 	vldr	s15, [r8, #8]
 801c690:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c698:	bfcc      	ite	gt
 801c69a:	2301      	movgt	r3, #1
 801c69c:	2300      	movle	r3, #0
 801c69e:	f8c9 3008 	str.w	r3, [r9, #8]
 801c6a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c6a6:	bf00      	nop

0801c6a8 <awe_vecLogicCompareGreaterOrEqual>:
 801c6a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c6ac:	ea5f 0aa3 	movs.w	sl, r3, asr #2
 801c6b0:	469c      	mov	ip, r3
 801c6b2:	4686      	mov	lr, r0
 801c6b4:	4688      	mov	r8, r1
 801c6b6:	4691      	mov	r9, r2
 801c6b8:	d045      	beq.n	801c746 <awe_vecLogicCompareGreaterOrEqual+0x9e>
 801c6ba:	f100 0610 	add.w	r6, r0, #16
 801c6be:	f101 0510 	add.w	r5, r1, #16
 801c6c2:	f102 0410 	add.w	r4, r2, #16
 801c6c6:	4657      	mov	r7, sl
 801c6c8:	ed16 4a04 	vldr	s8, [r6, #-16]
 801c6cc:	ed55 4a04 	vldr	s9, [r5, #-16]
 801c6d0:	ed16 5a03 	vldr	s10, [r6, #-12]
 801c6d4:	ed55 5a03 	vldr	s11, [r5, #-12]
 801c6d8:	ed16 6a02 	vldr	s12, [r6, #-8]
 801c6dc:	ed55 6a02 	vldr	s13, [r5, #-8]
 801c6e0:	ed16 7a01 	vldr	s14, [r6, #-4]
 801c6e4:	ed55 7a01 	vldr	s15, [r5, #-4]
 801c6e8:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801c6ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c6f0:	eeb4 5ae5 	vcmpe.f32	s10, s11
 801c6f4:	bfac      	ite	ge
 801c6f6:	2001      	movge	r0, #1
 801c6f8:	2000      	movlt	r0, #0
 801c6fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c6fe:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801c702:	bfac      	ite	ge
 801c704:	2101      	movge	r1, #1
 801c706:	2100      	movlt	r1, #0
 801c708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c70c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c710:	bfac      	ite	ge
 801c712:	2201      	movge	r2, #1
 801c714:	2200      	movlt	r2, #0
 801c716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c71a:	bfac      	ite	ge
 801c71c:	2301      	movge	r3, #1
 801c71e:	2300      	movlt	r3, #0
 801c720:	3f01      	subs	r7, #1
 801c722:	e944 0104 	strd	r0, r1, [r4, #-16]
 801c726:	f844 2c08 	str.w	r2, [r4, #-8]
 801c72a:	f844 3c04 	str.w	r3, [r4, #-4]
 801c72e:	f106 0610 	add.w	r6, r6, #16
 801c732:	f105 0510 	add.w	r5, r5, #16
 801c736:	f104 0410 	add.w	r4, r4, #16
 801c73a:	d1c5      	bne.n	801c6c8 <awe_vecLogicCompareGreaterOrEqual+0x20>
 801c73c:	ea4f 130a 	mov.w	r3, sl, lsl #4
 801c740:	449e      	add	lr, r3
 801c742:	4498      	add	r8, r3
 801c744:	4499      	add	r9, r3
 801c746:	f01c 0c03 	ands.w	ip, ip, #3
 801c74a:	d02c      	beq.n	801c7a6 <awe_vecLogicCompareGreaterOrEqual+0xfe>
 801c74c:	ed98 7a00 	vldr	s14, [r8]
 801c750:	edde 7a00 	vldr	s15, [lr]
 801c754:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c75c:	bf94      	ite	ls
 801c75e:	2301      	movls	r3, #1
 801c760:	2300      	movhi	r3, #0
 801c762:	f1bc 0f01 	cmp.w	ip, #1
 801c766:	f8c9 3000 	str.w	r3, [r9]
 801c76a:	d01c      	beq.n	801c7a6 <awe_vecLogicCompareGreaterOrEqual+0xfe>
 801c76c:	ed98 7a01 	vldr	s14, [r8, #4]
 801c770:	edde 7a01 	vldr	s15, [lr, #4]
 801c774:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c77c:	bf94      	ite	ls
 801c77e:	2301      	movls	r3, #1
 801c780:	2300      	movhi	r3, #0
 801c782:	f1bc 0f02 	cmp.w	ip, #2
 801c786:	f8c9 3004 	str.w	r3, [r9, #4]
 801c78a:	d00c      	beq.n	801c7a6 <awe_vecLogicCompareGreaterOrEqual+0xfe>
 801c78c:	ed9e 7a02 	vldr	s14, [lr, #8]
 801c790:	edd8 7a02 	vldr	s15, [r8, #8]
 801c794:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801c798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c79c:	bfac      	ite	ge
 801c79e:	2301      	movge	r3, #1
 801c7a0:	2300      	movlt	r3, #0
 801c7a2:	f8c9 3008 	str.w	r3, [r9, #8]
 801c7a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c7aa:	bf00      	nop

0801c7ac <awe_vecLogicCompareConstEqual>:
 801c7ac:	2a00      	cmp	r2, #0
 801c7ae:	dd13      	ble.n	801c7d8 <awe_vecLogicCompareConstEqual+0x2c>
 801c7b0:	b410      	push	{r4}
 801c7b2:	2300      	movs	r3, #0
 801c7b4:	ecf0 7a01 	vldmia	r0!, {s15}
 801c7b8:	eef4 7a40 	vcmp.f32	s15, s0
 801c7bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c7c0:	f103 0301 	add.w	r3, r3, #1
 801c7c4:	bf0c      	ite	eq
 801c7c6:	2401      	moveq	r4, #1
 801c7c8:	2400      	movne	r4, #0
 801c7ca:	429a      	cmp	r2, r3
 801c7cc:	f841 4b04 	str.w	r4, [r1], #4
 801c7d0:	d1f0      	bne.n	801c7b4 <awe_vecLogicCompareConstEqual+0x8>
 801c7d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c7d6:	4770      	bx	lr
 801c7d8:	4770      	bx	lr
 801c7da:	bf00      	nop

0801c7dc <awe_vecLogicCompareConstNotEqual>:
 801c7dc:	2a00      	cmp	r2, #0
 801c7de:	dd13      	ble.n	801c808 <awe_vecLogicCompareConstNotEqual+0x2c>
 801c7e0:	b410      	push	{r4}
 801c7e2:	2300      	movs	r3, #0
 801c7e4:	ecf0 7a01 	vldmia	r0!, {s15}
 801c7e8:	eef4 7a40 	vcmp.f32	s15, s0
 801c7ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c7f0:	f103 0301 	add.w	r3, r3, #1
 801c7f4:	bf14      	ite	ne
 801c7f6:	2401      	movne	r4, #1
 801c7f8:	2400      	moveq	r4, #0
 801c7fa:	429a      	cmp	r2, r3
 801c7fc:	f841 4b04 	str.w	r4, [r1], #4
 801c800:	d1f0      	bne.n	801c7e4 <awe_vecLogicCompareConstNotEqual+0x8>
 801c802:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c806:	4770      	bx	lr
 801c808:	4770      	bx	lr
 801c80a:	bf00      	nop

0801c80c <awe_vecLogicCompareConstLessThan>:
 801c80c:	2a00      	cmp	r2, #0
 801c80e:	dd13      	ble.n	801c838 <awe_vecLogicCompareConstLessThan+0x2c>
 801c810:	b410      	push	{r4}
 801c812:	2300      	movs	r3, #0
 801c814:	ecf0 7a01 	vldmia	r0!, {s15}
 801c818:	eef4 7ac0 	vcmpe.f32	s15, s0
 801c81c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c820:	f103 0301 	add.w	r3, r3, #1
 801c824:	bf4c      	ite	mi
 801c826:	2401      	movmi	r4, #1
 801c828:	2400      	movpl	r4, #0
 801c82a:	429a      	cmp	r2, r3
 801c82c:	f841 4b04 	str.w	r4, [r1], #4
 801c830:	d1f0      	bne.n	801c814 <awe_vecLogicCompareConstLessThan+0x8>
 801c832:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c836:	4770      	bx	lr
 801c838:	4770      	bx	lr
 801c83a:	bf00      	nop

0801c83c <awe_vecLogicCompareConstLessOrEqual>:
 801c83c:	2a00      	cmp	r2, #0
 801c83e:	dd13      	ble.n	801c868 <awe_vecLogicCompareConstLessOrEqual+0x2c>
 801c840:	b410      	push	{r4}
 801c842:	2300      	movs	r3, #0
 801c844:	ecf0 7a01 	vldmia	r0!, {s15}
 801c848:	eef4 7ac0 	vcmpe.f32	s15, s0
 801c84c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c850:	f103 0301 	add.w	r3, r3, #1
 801c854:	bf94      	ite	ls
 801c856:	2401      	movls	r4, #1
 801c858:	2400      	movhi	r4, #0
 801c85a:	429a      	cmp	r2, r3
 801c85c:	f841 4b04 	str.w	r4, [r1], #4
 801c860:	d1f0      	bne.n	801c844 <awe_vecLogicCompareConstLessOrEqual+0x8>
 801c862:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c866:	4770      	bx	lr
 801c868:	4770      	bx	lr
 801c86a:	bf00      	nop

0801c86c <awe_vecLogicCompareConstGreater>:
 801c86c:	2a00      	cmp	r2, #0
 801c86e:	dd13      	ble.n	801c898 <awe_vecLogicCompareConstGreater+0x2c>
 801c870:	b410      	push	{r4}
 801c872:	2300      	movs	r3, #0
 801c874:	ecf0 7a01 	vldmia	r0!, {s15}
 801c878:	eef4 7ac0 	vcmpe.f32	s15, s0
 801c87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c880:	f103 0301 	add.w	r3, r3, #1
 801c884:	bfcc      	ite	gt
 801c886:	2401      	movgt	r4, #1
 801c888:	2400      	movle	r4, #0
 801c88a:	429a      	cmp	r2, r3
 801c88c:	f841 4b04 	str.w	r4, [r1], #4
 801c890:	d1f0      	bne.n	801c874 <awe_vecLogicCompareConstGreater+0x8>
 801c892:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c896:	4770      	bx	lr
 801c898:	4770      	bx	lr
 801c89a:	bf00      	nop

0801c89c <awe_vecLogicCompareConstGreaterOrEqual>:
 801c89c:	2a00      	cmp	r2, #0
 801c89e:	dd13      	ble.n	801c8c8 <awe_vecLogicCompareConstGreaterOrEqual+0x2c>
 801c8a0:	b410      	push	{r4}
 801c8a2:	2300      	movs	r3, #0
 801c8a4:	ecf0 7a01 	vldmia	r0!, {s15}
 801c8a8:	eef4 7ac0 	vcmpe.f32	s15, s0
 801c8ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c8b0:	f103 0301 	add.w	r3, r3, #1
 801c8b4:	bfac      	ite	ge
 801c8b6:	2401      	movge	r4, #1
 801c8b8:	2400      	movlt	r4, #0
 801c8ba:	429a      	cmp	r2, r3
 801c8bc:	f841 4b04 	str.w	r4, [r1], #4
 801c8c0:	d1f0      	bne.n	801c8a4 <awe_vecLogicCompareConstGreaterOrEqual+0x8>
 801c8c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c8c6:	4770      	bx	lr
 801c8c8:	4770      	bx	lr
 801c8ca:	bf00      	nop

0801c8cc <awe_vecLogicCompareConstEqualInt32>:
 801c8cc:	2b00      	cmp	r3, #0
 801c8ce:	dd0e      	ble.n	801c8ee <awe_vecLogicCompareConstEqualInt32+0x22>
 801c8d0:	b430      	push	{r4, r5}
 801c8d2:	2500      	movs	r5, #0
 801c8d4:	f850 4b04 	ldr.w	r4, [r0], #4
 801c8d8:	1a64      	subs	r4, r4, r1
 801c8da:	3501      	adds	r5, #1
 801c8dc:	fab4 f484 	clz	r4, r4
 801c8e0:	0964      	lsrs	r4, r4, #5
 801c8e2:	42ab      	cmp	r3, r5
 801c8e4:	f842 4b04 	str.w	r4, [r2], #4
 801c8e8:	d1f4      	bne.n	801c8d4 <awe_vecLogicCompareConstEqualInt32+0x8>
 801c8ea:	bc30      	pop	{r4, r5}
 801c8ec:	4770      	bx	lr
 801c8ee:	4770      	bx	lr

0801c8f0 <awe_vecLogicCompareConstNotEqualInt32>:
 801c8f0:	2b00      	cmp	r3, #0
 801c8f2:	dd0d      	ble.n	801c910 <awe_vecLogicCompareConstNotEqualInt32+0x20>
 801c8f4:	b430      	push	{r4, r5}
 801c8f6:	2500      	movs	r5, #0
 801c8f8:	f850 4b04 	ldr.w	r4, [r0], #4
 801c8fc:	3501      	adds	r5, #1
 801c8fe:	1a64      	subs	r4, r4, r1
 801c900:	bf18      	it	ne
 801c902:	2401      	movne	r4, #1
 801c904:	42ab      	cmp	r3, r5
 801c906:	f842 4b04 	str.w	r4, [r2], #4
 801c90a:	d1f5      	bne.n	801c8f8 <awe_vecLogicCompareConstNotEqualInt32+0x8>
 801c90c:	bc30      	pop	{r4, r5}
 801c90e:	4770      	bx	lr
 801c910:	4770      	bx	lr
 801c912:	bf00      	nop

0801c914 <awe_vecLogicCompareConstLessThanInt32>:
 801c914:	2b00      	cmp	r3, #0
 801c916:	dd0e      	ble.n	801c936 <awe_vecLogicCompareConstLessThanInt32+0x22>
 801c918:	b430      	push	{r4, r5}
 801c91a:	2500      	movs	r5, #0
 801c91c:	f850 4b04 	ldr.w	r4, [r0], #4
 801c920:	3501      	adds	r5, #1
 801c922:	428c      	cmp	r4, r1
 801c924:	bfac      	ite	ge
 801c926:	2400      	movge	r4, #0
 801c928:	2401      	movlt	r4, #1
 801c92a:	42ab      	cmp	r3, r5
 801c92c:	f842 4b04 	str.w	r4, [r2], #4
 801c930:	d1f4      	bne.n	801c91c <awe_vecLogicCompareConstLessThanInt32+0x8>
 801c932:	bc30      	pop	{r4, r5}
 801c934:	4770      	bx	lr
 801c936:	4770      	bx	lr

0801c938 <awe_vecLogicCompareConstLessOrEqualInt32>:
 801c938:	2b00      	cmp	r3, #0
 801c93a:	dd0e      	ble.n	801c95a <awe_vecLogicCompareConstLessOrEqualInt32+0x22>
 801c93c:	b430      	push	{r4, r5}
 801c93e:	2500      	movs	r5, #0
 801c940:	f850 4b04 	ldr.w	r4, [r0], #4
 801c944:	3501      	adds	r5, #1
 801c946:	428c      	cmp	r4, r1
 801c948:	bfcc      	ite	gt
 801c94a:	2400      	movgt	r4, #0
 801c94c:	2401      	movle	r4, #1
 801c94e:	42ab      	cmp	r3, r5
 801c950:	f842 4b04 	str.w	r4, [r2], #4
 801c954:	d1f4      	bne.n	801c940 <awe_vecLogicCompareConstLessOrEqualInt32+0x8>
 801c956:	bc30      	pop	{r4, r5}
 801c958:	4770      	bx	lr
 801c95a:	4770      	bx	lr

0801c95c <awe_vecLogicCompareConstGreaterInt32>:
 801c95c:	2b00      	cmp	r3, #0
 801c95e:	dd0e      	ble.n	801c97e <awe_vecLogicCompareConstGreaterInt32+0x22>
 801c960:	b430      	push	{r4, r5}
 801c962:	2500      	movs	r5, #0
 801c964:	f850 4b04 	ldr.w	r4, [r0], #4
 801c968:	3501      	adds	r5, #1
 801c96a:	428c      	cmp	r4, r1
 801c96c:	bfd4      	ite	le
 801c96e:	2400      	movle	r4, #0
 801c970:	2401      	movgt	r4, #1
 801c972:	42ab      	cmp	r3, r5
 801c974:	f842 4b04 	str.w	r4, [r2], #4
 801c978:	d1f4      	bne.n	801c964 <awe_vecLogicCompareConstGreaterInt32+0x8>
 801c97a:	bc30      	pop	{r4, r5}
 801c97c:	4770      	bx	lr
 801c97e:	4770      	bx	lr

0801c980 <awe_vecLogicCompareConstGreaterOrEqualInt32>:
 801c980:	2b00      	cmp	r3, #0
 801c982:	dd0e      	ble.n	801c9a2 <awe_vecLogicCompareConstGreaterOrEqualInt32+0x22>
 801c984:	b430      	push	{r4, r5}
 801c986:	2500      	movs	r5, #0
 801c988:	f850 4b04 	ldr.w	r4, [r0], #4
 801c98c:	3501      	adds	r5, #1
 801c98e:	428c      	cmp	r4, r1
 801c990:	bfb4      	ite	lt
 801c992:	2400      	movlt	r4, #0
 801c994:	2401      	movge	r4, #1
 801c996:	42ab      	cmp	r3, r5
 801c998:	f842 4b04 	str.w	r4, [r2], #4
 801c99c:	d1f4      	bne.n	801c988 <awe_vecLogicCompareConstGreaterOrEqualInt32+0x8>
 801c99e:	bc30      	pop	{r4, r5}
 801c9a0:	4770      	bx	lr
 801c9a2:	4770      	bx	lr

0801c9a4 <awe_vecLogicCompareEqualInt32>:
 801c9a4:	2b00      	cmp	r3, #0
 801c9a6:	dd10      	ble.n	801c9ca <awe_vecLogicCompareEqualInt32+0x26>
 801c9a8:	b470      	push	{r4, r5, r6}
 801c9aa:	2500      	movs	r5, #0
 801c9ac:	f850 4b04 	ldr.w	r4, [r0], #4
 801c9b0:	f851 6b04 	ldr.w	r6, [r1], #4
 801c9b4:	1ba4      	subs	r4, r4, r6
 801c9b6:	3501      	adds	r5, #1
 801c9b8:	fab4 f484 	clz	r4, r4
 801c9bc:	0964      	lsrs	r4, r4, #5
 801c9be:	42ab      	cmp	r3, r5
 801c9c0:	f842 4b04 	str.w	r4, [r2], #4
 801c9c4:	d1f2      	bne.n	801c9ac <awe_vecLogicCompareEqualInt32+0x8>
 801c9c6:	bc70      	pop	{r4, r5, r6}
 801c9c8:	4770      	bx	lr
 801c9ca:	4770      	bx	lr

0801c9cc <awe_vecLogicCompareNotEqualInt32>:
 801c9cc:	2b00      	cmp	r3, #0
 801c9ce:	dd0f      	ble.n	801c9f0 <awe_vecLogicCompareNotEqualInt32+0x24>
 801c9d0:	b470      	push	{r4, r5, r6}
 801c9d2:	2500      	movs	r5, #0
 801c9d4:	f850 4b04 	ldr.w	r4, [r0], #4
 801c9d8:	f851 6b04 	ldr.w	r6, [r1], #4
 801c9dc:	3501      	adds	r5, #1
 801c9de:	1ba4      	subs	r4, r4, r6
 801c9e0:	bf18      	it	ne
 801c9e2:	2401      	movne	r4, #1
 801c9e4:	42ab      	cmp	r3, r5
 801c9e6:	f842 4b04 	str.w	r4, [r2], #4
 801c9ea:	d1f3      	bne.n	801c9d4 <awe_vecLogicCompareNotEqualInt32+0x8>
 801c9ec:	bc70      	pop	{r4, r5, r6}
 801c9ee:	4770      	bx	lr
 801c9f0:	4770      	bx	lr
 801c9f2:	bf00      	nop

0801c9f4 <awe_vecLogicCompareLessThanInt32>:
 801c9f4:	2b00      	cmp	r3, #0
 801c9f6:	dd10      	ble.n	801ca1a <awe_vecLogicCompareLessThanInt32+0x26>
 801c9f8:	b470      	push	{r4, r5, r6}
 801c9fa:	2500      	movs	r5, #0
 801c9fc:	f850 4b04 	ldr.w	r4, [r0], #4
 801ca00:	f851 6b04 	ldr.w	r6, [r1], #4
 801ca04:	3501      	adds	r5, #1
 801ca06:	42b4      	cmp	r4, r6
 801ca08:	bfac      	ite	ge
 801ca0a:	2400      	movge	r4, #0
 801ca0c:	2401      	movlt	r4, #1
 801ca0e:	42ab      	cmp	r3, r5
 801ca10:	f842 4b04 	str.w	r4, [r2], #4
 801ca14:	d1f2      	bne.n	801c9fc <awe_vecLogicCompareLessThanInt32+0x8>
 801ca16:	bc70      	pop	{r4, r5, r6}
 801ca18:	4770      	bx	lr
 801ca1a:	4770      	bx	lr

0801ca1c <awe_vecLogicCompareLessOrEqualInt32>:
 801ca1c:	2b00      	cmp	r3, #0
 801ca1e:	dd10      	ble.n	801ca42 <awe_vecLogicCompareLessOrEqualInt32+0x26>
 801ca20:	b470      	push	{r4, r5, r6}
 801ca22:	2500      	movs	r5, #0
 801ca24:	f850 4b04 	ldr.w	r4, [r0], #4
 801ca28:	f851 6b04 	ldr.w	r6, [r1], #4
 801ca2c:	3501      	adds	r5, #1
 801ca2e:	42b4      	cmp	r4, r6
 801ca30:	bfcc      	ite	gt
 801ca32:	2400      	movgt	r4, #0
 801ca34:	2401      	movle	r4, #1
 801ca36:	42ab      	cmp	r3, r5
 801ca38:	f842 4b04 	str.w	r4, [r2], #4
 801ca3c:	d1f2      	bne.n	801ca24 <awe_vecLogicCompareLessOrEqualInt32+0x8>
 801ca3e:	bc70      	pop	{r4, r5, r6}
 801ca40:	4770      	bx	lr
 801ca42:	4770      	bx	lr

0801ca44 <awe_vecLogicCompareGreaterInt32>:
 801ca44:	2b00      	cmp	r3, #0
 801ca46:	dd10      	ble.n	801ca6a <awe_vecLogicCompareGreaterInt32+0x26>
 801ca48:	b470      	push	{r4, r5, r6}
 801ca4a:	2500      	movs	r5, #0
 801ca4c:	f850 4b04 	ldr.w	r4, [r0], #4
 801ca50:	f851 6b04 	ldr.w	r6, [r1], #4
 801ca54:	3501      	adds	r5, #1
 801ca56:	42b4      	cmp	r4, r6
 801ca58:	bfd4      	ite	le
 801ca5a:	2400      	movle	r4, #0
 801ca5c:	2401      	movgt	r4, #1
 801ca5e:	42ab      	cmp	r3, r5
 801ca60:	f842 4b04 	str.w	r4, [r2], #4
 801ca64:	d1f2      	bne.n	801ca4c <awe_vecLogicCompareGreaterInt32+0x8>
 801ca66:	bc70      	pop	{r4, r5, r6}
 801ca68:	4770      	bx	lr
 801ca6a:	4770      	bx	lr

0801ca6c <awe_vecLogicCompareGreaterOrEqualInt32>:
 801ca6c:	2b00      	cmp	r3, #0
 801ca6e:	dd10      	ble.n	801ca92 <awe_vecLogicCompareGreaterOrEqualInt32+0x26>
 801ca70:	b470      	push	{r4, r5, r6}
 801ca72:	2500      	movs	r5, #0
 801ca74:	f850 4b04 	ldr.w	r4, [r0], #4
 801ca78:	f851 6b04 	ldr.w	r6, [r1], #4
 801ca7c:	3501      	adds	r5, #1
 801ca7e:	42b4      	cmp	r4, r6
 801ca80:	bfb4      	ite	lt
 801ca82:	2400      	movlt	r4, #0
 801ca84:	2401      	movge	r4, #1
 801ca86:	42ab      	cmp	r3, r5
 801ca88:	f842 4b04 	str.w	r4, [r2], #4
 801ca8c:	d1f2      	bne.n	801ca74 <awe_vecLogicCompareGreaterOrEqualInt32+0x8>
 801ca8e:	bc70      	pop	{r4, r5, r6}
 801ca90:	4770      	bx	lr
 801ca92:	4770      	bx	lr

0801ca94 <awe_vecMaxAbs>:
 801ca94:	ed90 0a00 	vldr	s0, [r0]
 801ca98:	3a01      	subs	r2, #1
 801ca9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ca9e:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 801caa2:	ea5f 09a2 	movs.w	r9, r2, asr #2
 801caa6:	eeb0 0ac0 	vabs.f32	s0, s0
 801caaa:	eb00 080c 	add.w	r8, r0, ip
 801caae:	f000 808e 	beq.w	801cbce <awe_vecMaxAbs+0x13a>
 801cab2:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 801cab6:	464f      	mov	r7, r9
 801cab8:	eb08 01c1 	add.w	r1, r8, r1, lsl #3
 801cabc:	4645      	mov	r5, r8
 801cabe:	2401      	movs	r4, #1
 801cac0:	2000      	movs	r0, #0
 801cac2:	edd5 7a00 	vldr	s15, [r5]
 801cac6:	ed91 7a00 	vldr	s14, [r1]
 801caca:	eef0 7ae7 	vabs.f32	s15, s15
 801cace:	eb05 060c 	add.w	r6, r5, ip
 801cad2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801cad6:	edd6 6a00 	vldr	s13, [r6]
 801cada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cade:	bf58      	it	pl
 801cae0:	eef0 7a40 	vmovpl.f32	s15, s0
 801cae4:	eef0 6ae6 	vabs.f32	s13, s13
 801cae8:	eef4 6ae7 	vcmpe.f32	s13, s15
 801caec:	bf48      	it	mi
 801caee:	4620      	movmi	r0, r4
 801caf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801caf4:	bfcc      	ite	gt
 801caf6:	eeb0 0a66 	vmovgt.f32	s0, s13
 801cafa:	eeb0 0a67 	vmovle.f32	s0, s15
 801cafe:	eeb0 7ac7 	vabs.f32	s14, s14
 801cb02:	eb01 060c 	add.w	r6, r1, ip
 801cb06:	eeb4 7ac0 	vcmpe.f32	s14, s0
 801cb0a:	edd6 7a00 	vldr	s15, [r6]
 801cb0e:	bfc8      	it	gt
 801cb10:	1c60      	addgt	r0, r4, #1
 801cb12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb16:	bfc8      	it	gt
 801cb18:	eeb0 0a47 	vmovgt.f32	s0, s14
 801cb1c:	eef0 7ae7 	vabs.f32	s15, s15
 801cb20:	eef4 7ac0 	vcmpe.f32	s15, s0
 801cb24:	bfc8      	it	gt
 801cb26:	1ca0      	addgt	r0, r4, #2
 801cb28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb2c:	bfc4      	itt	gt
 801cb2e:	1ce0      	addgt	r0, r4, #3
 801cb30:	eeb0 0a67 	vmovgt.f32	s0, s15
 801cb34:	3f01      	subs	r7, #1
 801cb36:	4475      	add	r5, lr
 801cb38:	f104 0404 	add.w	r4, r4, #4
 801cb3c:	4471      	add	r1, lr
 801cb3e:	d1c0      	bne.n	801cac2 <awe_vecMaxAbs+0x2e>
 801cb40:	fb09 f10c 	mul.w	r1, r9, ip
 801cb44:	ea4f 0989 	mov.w	r9, r9, lsl #2
 801cb48:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 801cb4c:	f109 0901 	add.w	r9, r9, #1
 801cb50:	f012 0203 	ands.w	r2, r2, #3
 801cb54:	d02d      	beq.n	801cbb2 <awe_vecMaxAbs+0x11e>
 801cb56:	edd8 7a00 	vldr	s15, [r8]
 801cb5a:	eef0 7ae7 	vabs.f32	s15, s15
 801cb5e:	eef4 7ac0 	vcmpe.f32	s15, s0
 801cb62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb66:	bfd4      	ite	le
 801cb68:	eef0 7a40 	vmovle.f32	s15, s0
 801cb6c:	4648      	movgt	r0, r9
 801cb6e:	2a01      	cmp	r2, #1
 801cb70:	44e0      	add	r8, ip
 801cb72:	f109 0101 	add.w	r1, r9, #1
 801cb76:	d025      	beq.n	801cbc4 <awe_vecMaxAbs+0x130>
 801cb78:	ed98 7a00 	vldr	s14, [r8]
 801cb7c:	eeb0 7ac7 	vabs.f32	s14, s14
 801cb80:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cb84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb88:	bf5c      	itt	pl
 801cb8a:	4601      	movpl	r1, r0
 801cb8c:	eeb0 7a67 	vmovpl.f32	s14, s15
 801cb90:	2a02      	cmp	r2, #2
 801cb92:	44e0      	add	r8, ip
 801cb94:	f109 0002 	add.w	r0, r9, #2
 801cb98:	d00e      	beq.n	801cbb8 <awe_vecMaxAbs+0x124>
 801cb9a:	ed98 0a00 	vldr	s0, [r8]
 801cb9e:	eeb0 0ac0 	vabs.f32	s0, s0
 801cba2:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801cba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cbaa:	bfdc      	itt	le
 801cbac:	eeb0 0a47 	vmovle.f32	s0, s14
 801cbb0:	4608      	movle	r0, r1
 801cbb2:	6018      	str	r0, [r3, #0]
 801cbb4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cbb8:	4608      	mov	r0, r1
 801cbba:	eeb0 0a47 	vmov.f32	s0, s14
 801cbbe:	6018      	str	r0, [r3, #0]
 801cbc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cbc4:	eeb0 0a67 	vmov.f32	s0, s15
 801cbc8:	6018      	str	r0, [r3, #0]
 801cbca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cbce:	4648      	mov	r0, r9
 801cbd0:	f04f 0901 	mov.w	r9, #1
 801cbd4:	e7bc      	b.n	801cb50 <awe_vecMaxAbs+0xbc>
 801cbd6:	bf00      	nop

0801cbd8 <awe_vecMultiply2x1>:
 801cbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbdc:	b08b      	sub	sp, #44	@ 0x2c
 801cbde:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801cbe0:	9005      	str	r0, [sp, #20]
 801cbe2:	10e6      	asrs	r6, r4, #3
 801cbe4:	9108      	str	r1, [sp, #32]
 801cbe6:	9206      	str	r2, [sp, #24]
 801cbe8:	9309      	str	r3, [sp, #36]	@ 0x24
 801cbea:	9607      	str	r6, [sp, #28]
 801cbec:	f000 8092 	beq.w	801cd14 <awe_vecMultiply2x1+0x13c>
 801cbf0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cbf2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cbf4:	00a4      	lsls	r4, r4, #2
 801cbf6:	00ed      	lsls	r5, r5, #3
 801cbf8:	469c      	mov	ip, r3
 801cbfa:	192b      	adds	r3, r5, r4
 801cbfc:	4692      	mov	sl, r2
 801cbfe:	005a      	lsls	r2, r3, #1
 801cc00:	9204      	str	r2, [sp, #16]
 801cc02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc04:	4414      	add	r4, r2
 801cc06:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801cc08:	4663      	mov	r3, ip
 801cc0a:	460f      	mov	r7, r1
 801cc0c:	4683      	mov	fp, r0
 801cc0e:	ea4f 1842 	mov.w	r8, r2, lsl #5
 801cc12:	0088      	lsls	r0, r1, #2
 801cc14:	0112      	lsls	r2, r2, #4
 801cc16:	0099      	lsls	r1, r3, #2
 801cc18:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801cc1c:	9203      	str	r2, [sp, #12]
 801cc1e:	015b      	lsls	r3, r3, #5
 801cc20:	ea4f 1947 	mov.w	r9, r7, lsl #5
 801cc24:	46b6      	mov	lr, r6
 801cc26:	9302      	str	r3, [sp, #8]
 801cc28:	4657      	mov	r7, sl
 801cc2a:	465e      	mov	r6, fp
 801cc2c:	ed96 6a00 	vldr	s12, [r6]
 801cc30:	edd7 6a00 	vldr	s13, [r7]
 801cc34:	1832      	adds	r2, r6, r0
 801cc36:	187b      	adds	r3, r7, r1
 801cc38:	ed92 7a00 	vldr	s14, [r2]
 801cc3c:	edd3 7a00 	vldr	s15, [r3]
 801cc40:	ee66 6a26 	vmul.f32	s13, s12, s13
 801cc44:	ee67 7a27 	vmul.f32	s15, s14, s15
 801cc48:	edcc 6a00 	vstr	s13, [ip]
 801cc4c:	4402      	add	r2, r0
 801cc4e:	440b      	add	r3, r1
 801cc50:	ed92 6a00 	vldr	s12, [r2]
 801cc54:	edd3 6a00 	vldr	s13, [r3]
 801cc58:	edc4 7a00 	vstr	s15, [r4]
 801cc5c:	4402      	add	r2, r0
 801cc5e:	440b      	add	r3, r1
 801cc60:	ed92 7a00 	vldr	s14, [r2]
 801cc64:	edd3 7a00 	vldr	s15, [r3]
 801cc68:	ee66 6a26 	vmul.f32	s13, s12, s13
 801cc6c:	ee67 7a27 	vmul.f32	s15, s14, s15
 801cc70:	eb0c 0a05 	add.w	sl, ip, r5
 801cc74:	edca 6a00 	vstr	s13, [sl]
 801cc78:	eb04 0b05 	add.w	fp, r4, r5
 801cc7c:	4402      	add	r2, r0
 801cc7e:	440b      	add	r3, r1
 801cc80:	ed92 6a00 	vldr	s12, [r2]
 801cc84:	edd3 6a00 	vldr	s13, [r3]
 801cc88:	edcb 7a00 	vstr	s15, [fp]
 801cc8c:	4402      	add	r2, r0
 801cc8e:	440b      	add	r3, r1
 801cc90:	ed92 7a00 	vldr	s14, [r2]
 801cc94:	edd3 7a00 	vldr	s15, [r3]
 801cc98:	4402      	add	r2, r0
 801cc9a:	440b      	add	r3, r1
 801cc9c:	9201      	str	r2, [sp, #4]
 801cc9e:	461a      	mov	r2, r3
 801cca0:	9b03      	ldr	r3, [sp, #12]
 801cca2:	ee66 6a26 	vmul.f32	s13, s12, s13
 801cca6:	eb04 0b03 	add.w	fp, r4, r3
 801ccaa:	44aa      	add	sl, r5
 801ccac:	9b01      	ldr	r3, [sp, #4]
 801ccae:	edca 6a00 	vstr	s13, [sl]
 801ccb2:	ed93 6a00 	vldr	s12, [r3]
 801ccb6:	edd2 6a00 	vldr	s13, [r2]
 801ccba:	ee67 7a27 	vmul.f32	s15, s14, s15
 801ccbe:	4613      	mov	r3, r2
 801ccc0:	9a01      	ldr	r2, [sp, #4]
 801ccc2:	edcb 7a00 	vstr	s15, [fp]
 801ccc6:	4402      	add	r2, r0
 801ccc8:	440b      	add	r3, r1
 801ccca:	ed92 7a00 	vldr	s14, [r2]
 801ccce:	edd3 7a00 	vldr	s15, [r3]
 801ccd2:	9b04      	ldr	r3, [sp, #16]
 801ccd4:	9a02      	ldr	r2, [sp, #8]
 801ccd6:	ee66 6a26 	vmul.f32	s13, s12, s13
 801ccda:	ee67 7a27 	vmul.f32	s15, s14, s15
 801ccde:	18e3      	adds	r3, r4, r3
 801cce0:	44aa      	add	sl, r5
 801cce2:	f1be 0e01 	subs.w	lr, lr, #1
 801cce6:	edca 6a00 	vstr	s13, [sl]
 801ccea:	444e      	add	r6, r9
 801ccec:	4417      	add	r7, r2
 801ccee:	44c4      	add	ip, r8
 801ccf0:	4444      	add	r4, r8
 801ccf2:	edc3 7a00 	vstr	s15, [r3]
 801ccf6:	d199      	bne.n	801cc2c <awe_vecMultiply2x1+0x54>
 801ccf8:	9b07      	ldr	r3, [sp, #28]
 801ccfa:	9905      	ldr	r1, [sp, #20]
 801ccfc:	9806      	ldr	r0, [sp, #24]
 801ccfe:	fb09 1203 	mla	r2, r9, r3, r1
 801cd02:	9902      	ldr	r1, [sp, #8]
 801cd04:	9205      	str	r2, [sp, #20]
 801cd06:	fb01 0203 	mla	r2, r1, r3, r0
 801cd0a:	9206      	str	r2, [sp, #24]
 801cd0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cd0e:	fb08 2303 	mla	r3, r8, r3, r2
 801cd12:	9314      	str	r3, [sp, #80]	@ 0x50
 801cd14:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cd16:	f013 0507 	ands.w	r5, r3, #7
 801cd1a:	d05e      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cd1c:	9a06      	ldr	r2, [sp, #24]
 801cd1e:	9805      	ldr	r0, [sp, #20]
 801cd20:	9b08      	ldr	r3, [sp, #32]
 801cd22:	edd2 7a00 	vldr	s15, [r2]
 801cd26:	ed90 7a00 	vldr	s14, [r0]
 801cd2a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd2c:	0099      	lsls	r1, r3, #2
 801cd2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cd30:	00a6      	lsls	r6, r4, #2
 801cd32:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cd36:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cd38:	009b      	lsls	r3, r3, #2
 801cd3a:	2d01      	cmp	r5, #1
 801cd3c:	edc4 7a00 	vstr	s15, [r4]
 801cd40:	441a      	add	r2, r3
 801cd42:	4408      	add	r0, r1
 801cd44:	4434      	add	r4, r6
 801cd46:	d048      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cd48:	edd2 7a00 	vldr	s15, [r2]
 801cd4c:	ed90 7a00 	vldr	s14, [r0]
 801cd50:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cd54:	2d02      	cmp	r5, #2
 801cd56:	edc4 7a00 	vstr	s15, [r4]
 801cd5a:	441a      	add	r2, r3
 801cd5c:	4408      	add	r0, r1
 801cd5e:	4434      	add	r4, r6
 801cd60:	d03b      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cd62:	edd2 7a00 	vldr	s15, [r2]
 801cd66:	ed90 7a00 	vldr	s14, [r0]
 801cd6a:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cd6e:	2d03      	cmp	r5, #3
 801cd70:	edc4 7a00 	vstr	s15, [r4]
 801cd74:	441a      	add	r2, r3
 801cd76:	4408      	add	r0, r1
 801cd78:	4434      	add	r4, r6
 801cd7a:	d02e      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cd7c:	edd2 7a00 	vldr	s15, [r2]
 801cd80:	ed90 7a00 	vldr	s14, [r0]
 801cd84:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cd88:	2d04      	cmp	r5, #4
 801cd8a:	edc4 7a00 	vstr	s15, [r4]
 801cd8e:	441a      	add	r2, r3
 801cd90:	4408      	add	r0, r1
 801cd92:	4434      	add	r4, r6
 801cd94:	d021      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cd96:	edd2 7a00 	vldr	s15, [r2]
 801cd9a:	ed90 7a00 	vldr	s14, [r0]
 801cd9e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cda2:	2d05      	cmp	r5, #5
 801cda4:	edc4 7a00 	vstr	s15, [r4]
 801cda8:	441a      	add	r2, r3
 801cdaa:	4408      	add	r0, r1
 801cdac:	4434      	add	r4, r6
 801cdae:	d014      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cdb0:	edd2 7a00 	vldr	s15, [r2]
 801cdb4:	ed90 7a00 	vldr	s14, [r0]
 801cdb8:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cdbc:	2d06      	cmp	r5, #6
 801cdbe:	4408      	add	r0, r1
 801cdc0:	441a      	add	r2, r3
 801cdc2:	4426      	add	r6, r4
 801cdc4:	edc4 7a00 	vstr	s15, [r4]
 801cdc8:	d007      	beq.n	801cdda <awe_vecMultiply2x1+0x202>
 801cdca:	edd0 7a00 	vldr	s15, [r0]
 801cdce:	ed92 7a00 	vldr	s14, [r2]
 801cdd2:	ee67 7a87 	vmul.f32	s15, s15, s14
 801cdd6:	edc6 7a00 	vstr	s15, [r6]
 801cdda:	b00b      	add	sp, #44	@ 0x2c
 801cddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cde0 <awe_vecOr2x1>:
 801cde0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cde2:	9f07      	ldr	r7, [sp, #28]
 801cde4:	9d05      	ldr	r5, [sp, #20]
 801cde6:	2f00      	cmp	r7, #0
 801cde8:	dd10      	ble.n	801ce0c <awe_vecOr2x1+0x2c>
 801cdea:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801cdee:	9b06      	ldr	r3, [sp, #24]
 801cdf0:	0089      	lsls	r1, r1, #2
 801cdf2:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801cdf6:	2600      	movs	r6, #0
 801cdf8:	6804      	ldr	r4, [r0, #0]
 801cdfa:	6813      	ldr	r3, [r2, #0]
 801cdfc:	3601      	adds	r6, #1
 801cdfe:	431c      	orrs	r4, r3
 801ce00:	42b7      	cmp	r7, r6
 801ce02:	602c      	str	r4, [r5, #0]
 801ce04:	4408      	add	r0, r1
 801ce06:	4472      	add	r2, lr
 801ce08:	4465      	add	r5, ip
 801ce0a:	d1f5      	bne.n	801cdf8 <awe_vecOr2x1+0x18>
 801ce0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ce0e:	bf00      	nop

0801ce10 <awe_vecPolynomial>:
 801ce10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce14:	b087      	sub	sp, #28
 801ce16:	4691      	mov	r9, r2
 801ce18:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ce1a:	f8dd e044 	ldr.w	lr, [sp, #68]	@ 0x44
 801ce1e:	9101      	str	r1, [sp, #4]
 801ce20:	1097      	asrs	r7, r2, #2
 801ce22:	9302      	str	r3, [sp, #8]
 801ce24:	9700      	str	r7, [sp, #0]
 801ce26:	f000 80ec 	beq.w	801d002 <awe_vecPolynomial+0x1f2>
 801ce2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ce2c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ce2e:	9005      	str	r0, [sp, #20]
 801ce30:	ea4f 0ba2 	mov.w	fp, r2, asr #2
 801ce34:	eb0e 120b 	add.w	r2, lr, fp, lsl #4
 801ce38:	461c      	mov	r4, r3
 801ce3a:	9204      	str	r2, [sp, #16]
 801ce3c:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ce40:	0123      	lsls	r3, r4, #4
 801ce42:	f005 0203 	and.w	r2, r5, #3
 801ce46:	eb00 06c1 	add.w	r6, r0, r1, lsl #3
 801ce4a:	464d      	mov	r5, r9
 801ce4c:	4604      	mov	r4, r0
 801ce4e:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 801ce52:	4658      	mov	r0, fp
 801ce54:	ea4f 1801 	mov.w	r8, r1, lsl #4
 801ce58:	f8dd b010 	ldr.w	fp, [sp, #16]
 801ce5c:	9303      	str	r3, [sp, #12]
 801ce5e:	f8cd 9010 	str.w	r9, [sp, #16]
 801ce62:	4699      	mov	r9, r3
 801ce64:	eddf 3a90 	vldr	s7, [pc, #576]	@ 801d0a8 <awe_vecPolynomial+0x298>
 801ce68:	ed94 4a00 	vldr	s8, [r4]
 801ce6c:	ed96 5a00 	vldr	s10, [r6]
 801ce70:	eb04 010a 	add.w	r1, r4, sl
 801ce74:	eb06 030a 	add.w	r3, r6, sl
 801ce78:	edd1 4a00 	vldr	s9, [r1]
 801ce7c:	edd3 5a00 	vldr	s11, [r3]
 801ce80:	4444      	add	r4, r8
 801ce82:	eeb0 3a63 	vmov.f32	s6, s7
 801ce86:	eef0 2a63 	vmov.f32	s5, s7
 801ce8a:	eeb0 2a63 	vmov.f32	s4, s7
 801ce8e:	2800      	cmp	r0, #0
 801ce90:	f000 8108 	beq.w	801d0a4 <awe_vecPolynomial+0x294>
 801ce94:	f10e 0310 	add.w	r3, lr, #16
 801ce98:	4601      	mov	r1, r0
 801ce9a:	ed53 6a04 	vldr	s13, [r3, #-16]
 801ce9e:	ed13 7a03 	vldr	s14, [r3, #-12]
 801cea2:	ed53 7a02 	vldr	s15, [r3, #-8]
 801cea6:	ed13 6a01 	vldr	s12, [r3, #-4]
 801ceaa:	eef0 1a66 	vmov.f32	s3, s13
 801ceae:	eee2 1a04 	vfma.f32	s3, s4, s8
 801ceb2:	3901      	subs	r1, #1
 801ceb4:	f103 0310 	add.w	r3, r3, #16
 801ceb8:	eeb0 2a66 	vmov.f32	s4, s13
 801cebc:	eea4 2aa2 	vfma.f32	s4, s9, s5
 801cec0:	eef0 2a66 	vmov.f32	s5, s13
 801cec4:	eee5 2a03 	vfma.f32	s5, s10, s6
 801cec8:	eee3 6aa5 	vfma.f32	s13, s7, s11
 801cecc:	eeb0 3a47 	vmov.f32	s6, s14
 801ced0:	eea4 3a21 	vfma.f32	s6, s8, s3
 801ced4:	eef0 3a47 	vmov.f32	s7, s14
 801ced8:	eee4 3a82 	vfma.f32	s7, s9, s4
 801cedc:	eeb0 2a47 	vmov.f32	s4, s14
 801cee0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 801cee4:	eef0 6a67 	vmov.f32	s13, s15
 801cee8:	eee4 6a03 	vfma.f32	s13, s8, s6
 801ceec:	eea5 2a22 	vfma.f32	s4, s10, s5
 801cef0:	eeb0 3a66 	vmov.f32	s6, s13
 801cef4:	eef0 6a67 	vmov.f32	s13, s15
 801cef8:	eee4 6aa3 	vfma.f32	s13, s9, s7
 801cefc:	eef0 2a46 	vmov.f32	s5, s12
 801cf00:	eef0 3a66 	vmov.f32	s7, s13
 801cf04:	eef0 6a67 	vmov.f32	s13, s15
 801cf08:	eee5 7a87 	vfma.f32	s15, s11, s14
 801cf0c:	eee5 6a02 	vfma.f32	s13, s10, s4
 801cf10:	eeb0 2a46 	vmov.f32	s4, s12
 801cf14:	eea4 2a03 	vfma.f32	s4, s8, s6
 801cf18:	eeb0 3a46 	vmov.f32	s6, s12
 801cf1c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801cf20:	eee4 2aa3 	vfma.f32	s5, s9, s7
 801cf24:	eea5 3a26 	vfma.f32	s6, s10, s13
 801cf28:	eef0 3a46 	vmov.f32	s7, s12
 801cf2c:	d1b5      	bne.n	801ce9a <awe_vecPolynomial+0x8a>
 801cf2e:	465b      	mov	r3, fp
 801cf30:	2a00      	cmp	r2, #0
 801cf32:	d04b      	beq.n	801cfcc <awe_vecPolynomial+0x1bc>
 801cf34:	edd3 7a00 	vldr	s15, [r3]
 801cf38:	eeb0 7a67 	vmov.f32	s14, s15
 801cf3c:	eea4 7a02 	vfma.f32	s14, s8, s4
 801cf40:	2a01      	cmp	r2, #1
 801cf42:	eeb0 2a47 	vmov.f32	s4, s14
 801cf46:	eeb0 7a67 	vmov.f32	s14, s15
 801cf4a:	eea2 7aa4 	vfma.f32	s14, s5, s9
 801cf4e:	eef0 2a47 	vmov.f32	s5, s14
 801cf52:	eeb0 7a67 	vmov.f32	s14, s15
 801cf56:	eea5 7a03 	vfma.f32	s14, s10, s6
 801cf5a:	eee3 7aa5 	vfma.f32	s15, s7, s11
 801cf5e:	eeb0 3a47 	vmov.f32	s6, s14
 801cf62:	eef0 3a67 	vmov.f32	s7, s15
 801cf66:	d031      	beq.n	801cfcc <awe_vecPolynomial+0x1bc>
 801cf68:	edd3 7a01 	vldr	s15, [r3, #4]
 801cf6c:	eeb0 7a67 	vmov.f32	s14, s15
 801cf70:	eea4 7a02 	vfma.f32	s14, s8, s4
 801cf74:	2a02      	cmp	r2, #2
 801cf76:	eeb0 2a47 	vmov.f32	s4, s14
 801cf7a:	eeb0 7a67 	vmov.f32	s14, s15
 801cf7e:	eea4 7aa2 	vfma.f32	s14, s9, s5
 801cf82:	eef0 2a47 	vmov.f32	s5, s14
 801cf86:	eeb0 7a67 	vmov.f32	s14, s15
 801cf8a:	eea5 7a03 	vfma.f32	s14, s10, s6
 801cf8e:	eee5 7aa3 	vfma.f32	s15, s11, s7
 801cf92:	eeb0 3a47 	vmov.f32	s6, s14
 801cf96:	eef0 3a67 	vmov.f32	s7, s15
 801cf9a:	d017      	beq.n	801cfcc <awe_vecPolynomial+0x1bc>
 801cf9c:	edd3 7a02 	vldr	s15, [r3, #8]
 801cfa0:	eeb0 7a67 	vmov.f32	s14, s15
 801cfa4:	eea4 7a02 	vfma.f32	s14, s8, s4
 801cfa8:	eeb0 2a47 	vmov.f32	s4, s14
 801cfac:	eeb0 7a67 	vmov.f32	s14, s15
 801cfb0:	eea4 7aa2 	vfma.f32	s14, s9, s5
 801cfb4:	eef0 2a47 	vmov.f32	s5, s14
 801cfb8:	eeb0 7a67 	vmov.f32	s14, s15
 801cfbc:	eea5 7a03 	vfma.f32	s14, s10, s6
 801cfc0:	eee5 7aa3 	vfma.f32	s15, s11, s7
 801cfc4:	eeb0 3a47 	vmov.f32	s6, s14
 801cfc8:	eef0 3a67 	vmov.f32	s7, s15
 801cfcc:	eb05 010c 	add.w	r1, r5, ip
 801cfd0:	eb01 030c 	add.w	r3, r1, ip
 801cfd4:	ed85 2a00 	vstr	s4, [r5]
 801cfd8:	3f01      	subs	r7, #1
 801cfda:	edc1 2a00 	vstr	s5, [r1]
 801cfde:	eb03 010c 	add.w	r1, r3, ip
 801cfe2:	ed83 3a00 	vstr	s6, [r3]
 801cfe6:	4446      	add	r6, r8
 801cfe8:	444d      	add	r5, r9
 801cfea:	edc1 3a00 	vstr	s7, [r1]
 801cfee:	f47f af39 	bne.w	801ce64 <awe_vecPolynomial+0x54>
 801cff2:	e9dd 9004 	ldrd	r9, r0, [sp, #16]
 801cff6:	9b00      	ldr	r3, [sp, #0]
 801cff8:	9a03      	ldr	r2, [sp, #12]
 801cffa:	fb08 0003 	mla	r0, r8, r3, r0
 801cffe:	fb02 9903 	mla	r9, r2, r3, r9
 801d002:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d004:	f013 0403 	ands.w	r4, r3, #3
 801d008:	d049      	beq.n	801d09e <awe_vecPolynomial+0x28e>
 801d00a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d00c:	109e      	asrs	r6, r3, #2
 801d00e:	9b01      	ldr	r3, [sp, #4]
 801d010:	009d      	lsls	r5, r3, #2
 801d012:	9b02      	ldr	r3, [sp, #8]
 801d014:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801d018:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d01a:	eb0e 1706 	add.w	r7, lr, r6, lsl #4
 801d01e:	f003 0103 	and.w	r1, r3, #3
 801d022:	2e00      	cmp	r6, #0
 801d024:	bf08      	it	eq
 801d026:	4677      	moveq	r7, lr
 801d028:	edd0 7a00 	vldr	s15, [r0]
 801d02c:	eddf 5a1e 	vldr	s11, [pc, #120]	@ 801d0a8 <awe_vecPolynomial+0x298>
 801d030:	4428      	add	r0, r5
 801d032:	b1c6      	cbz	r6, 801d066 <awe_vecPolynomial+0x256>
 801d034:	f10e 0310 	add.w	r3, lr, #16
 801d038:	4632      	mov	r2, r6
 801d03a:	ed13 6a04 	vldr	s12, [r3, #-16]
 801d03e:	ed53 6a03 	vldr	s13, [r3, #-12]
 801d042:	ed13 7a02 	vldr	s14, [r3, #-8]
 801d046:	ed13 5a01 	vldr	s10, [r3, #-4]
 801d04a:	eea7 6aa5 	vfma.f32	s12, s15, s11
 801d04e:	3a01      	subs	r2, #1
 801d050:	f103 0310 	add.w	r3, r3, #16
 801d054:	eef0 5a45 	vmov.f32	s11, s10
 801d058:	eee7 6a86 	vfma.f32	s13, s15, s12
 801d05c:	eea7 7aa6 	vfma.f32	s14, s15, s13
 801d060:	eee7 5a87 	vfma.f32	s11, s15, s14
 801d064:	d1e9      	bne.n	801d03a <awe_vecPolynomial+0x22a>
 801d066:	b1a9      	cbz	r1, 801d094 <awe_vecPolynomial+0x284>
 801d068:	ed97 7a00 	vldr	s14, [r7]
 801d06c:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801d070:	2901      	cmp	r1, #1
 801d072:	eef0 5a47 	vmov.f32	s11, s14
 801d076:	d00d      	beq.n	801d094 <awe_vecPolynomial+0x284>
 801d078:	ed97 7a01 	vldr	s14, [r7, #4]
 801d07c:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801d080:	2902      	cmp	r1, #2
 801d082:	eef0 5a47 	vmov.f32	s11, s14
 801d086:	d005      	beq.n	801d094 <awe_vecPolynomial+0x284>
 801d088:	ed97 7a02 	vldr	s14, [r7, #8]
 801d08c:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801d090:	eef0 5a47 	vmov.f32	s11, s14
 801d094:	3c01      	subs	r4, #1
 801d096:	edc9 5a00 	vstr	s11, [r9]
 801d09a:	44e1      	add	r9, ip
 801d09c:	d1c4      	bne.n	801d028 <awe_vecPolynomial+0x218>
 801d09e:	b007      	add	sp, #28
 801d0a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0a4:	4673      	mov	r3, lr
 801d0a6:	e743      	b.n	801cf30 <awe_vecPolynomial+0x120>
 801d0a8:	00000000 	.word	0x00000000

0801d0ac <awe_vecRand>:
 801d0ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d0b0:	ea5f 09a2 	movs.w	r9, r2, asr #2
 801d0b4:	4688      	mov	r8, r1
 801d0b6:	4694      	mov	ip, r2
 801d0b8:	4686      	mov	lr, r0
 801d0ba:	680c      	ldr	r4, [r1, #0]
 801d0bc:	d016      	beq.n	801d0ec <awe_vecRand+0x40>
 801d0be:	4e19      	ldr	r6, [pc, #100]	@ (801d124 <awe_vecRand+0x78>)
 801d0c0:	4d19      	ldr	r5, [pc, #100]	@ (801d128 <awe_vecRand+0x7c>)
 801d0c2:	f100 0310 	add.w	r3, r0, #16
 801d0c6:	464f      	mov	r7, r9
 801d0c8:	fb06 5004 	mla	r0, r6, r4, r5
 801d0cc:	fb06 5100 	mla	r1, r6, r0, r5
 801d0d0:	fb06 5201 	mla	r2, r6, r1, r5
 801d0d4:	fb06 5402 	mla	r4, r6, r2, r5
 801d0d8:	3f01      	subs	r7, #1
 801d0da:	e943 0104 	strd	r0, r1, [r3, #-16]
 801d0de:	e943 2402 	strd	r2, r4, [r3, #-8]
 801d0e2:	f103 0310 	add.w	r3, r3, #16
 801d0e6:	d1ef      	bne.n	801d0c8 <awe_vecRand+0x1c>
 801d0e8:	eb0e 1e09 	add.w	lr, lr, r9, lsl #4
 801d0ec:	f01c 0c03 	ands.w	ip, ip, #3
 801d0f0:	d013      	beq.n	801d11a <awe_vecRand+0x6e>
 801d0f2:	4a0c      	ldr	r2, [pc, #48]	@ (801d124 <awe_vecRand+0x78>)
 801d0f4:	4b0c      	ldr	r3, [pc, #48]	@ (801d128 <awe_vecRand+0x7c>)
 801d0f6:	f1bc 0f01 	cmp.w	ip, #1
 801d0fa:	fb02 3404 	mla	r4, r2, r4, r3
 801d0fe:	f8ce 4000 	str.w	r4, [lr]
 801d102:	d00a      	beq.n	801d11a <awe_vecRand+0x6e>
 801d104:	fb02 3404 	mla	r4, r2, r4, r3
 801d108:	f1bc 0f02 	cmp.w	ip, #2
 801d10c:	f8ce 4004 	str.w	r4, [lr, #4]
 801d110:	bf1c      	itt	ne
 801d112:	fb02 3404 	mlane	r4, r2, r4, r3
 801d116:	f8ce 4008 	strne.w	r4, [lr, #8]
 801d11a:	f8c8 4000 	str.w	r4, [r8]
 801d11e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d122:	bf00      	nop
 801d124:	0019660d 	.word	0x0019660d
 801d128:	3c6ef35f 	.word	0x3c6ef35f

0801d12c <awe_vecReciprocal>:
 801d12c:	b430      	push	{r4, r5}
 801d12e:	9d02      	ldr	r5, [sp, #8]
 801d130:	2d00      	cmp	r5, #0
 801d132:	dd0f      	ble.n	801d154 <awe_vecReciprocal+0x28>
 801d134:	0089      	lsls	r1, r1, #2
 801d136:	009b      	lsls	r3, r3, #2
 801d138:	2400      	movs	r4, #0
 801d13a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801d13e:	ed90 7a00 	vldr	s14, [r0]
 801d142:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801d146:	3401      	adds	r4, #1
 801d148:	42a5      	cmp	r5, r4
 801d14a:	4408      	add	r0, r1
 801d14c:	edc2 7a00 	vstr	s15, [r2]
 801d150:	441a      	add	r2, r3
 801d152:	d1f4      	bne.n	801d13e <awe_vecReciprocal+0x12>
 801d154:	bc30      	pop	{r4, r5}
 801d156:	4770      	bx	lr

0801d158 <awe_vecSawTooth>:
 801d158:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 801d15c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d160:	b410      	push	{r4}
 801d162:	eef0 7a40 	vmov.f32	s15, s0
 801d166:	ea4f 0491 	mov.w	r4, r1, lsr #2
 801d16a:	dd74      	ble.n	801d256 <awe_vecSawTooth+0xfe>
 801d16c:	b3bc      	cbz	r4, 801d1de <awe_vecSawTooth+0x86>
 801d16e:	f100 0310 	add.w	r3, r0, #16
 801d172:	4622      	mov	r2, r4
 801d174:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801d178:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 801d17c:	ee30 7aa7 	vadd.f32	s14, s1, s15
 801d180:	ed43 7a04 	vstr	s15, [r3, #-16]
 801d184:	eeb4 7ae6 	vcmpe.f32	s14, s13
 801d188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d18c:	bfa8      	it	ge
 801d18e:	ee37 7a46 	vsubge.f32	s14, s14, s12
 801d192:	3310      	adds	r3, #16
 801d194:	ee77 7a20 	vadd.f32	s15, s14, s1
 801d198:	ed03 7a07 	vstr	s14, [r3, #-28]	@ 0xffffffe4
 801d19c:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d1a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1a4:	bfa8      	it	ge
 801d1a6:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801d1aa:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801d1ae:	ed43 7a06 	vstr	s15, [r3, #-24]	@ 0xffffffe8
 801d1b2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 801d1b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1ba:	bfa8      	it	ge
 801d1bc:	ee37 7a46 	vsubge.f32	s14, s14, s12
 801d1c0:	ee77 7a20 	vadd.f32	s15, s14, s1
 801d1c4:	ed03 7a05 	vstr	s14, [r3, #-20]	@ 0xffffffec
 801d1c8:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d1cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1d0:	bfa8      	it	ge
 801d1d2:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801d1d6:	3a01      	subs	r2, #1
 801d1d8:	d1d0      	bne.n	801d17c <awe_vecSawTooth+0x24>
 801d1da:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 801d1de:	f011 0103 	ands.w	r1, r1, #3
 801d1e2:	d033      	beq.n	801d24c <awe_vecSawTooth+0xf4>
 801d1e4:	ee30 0aa7 	vadd.f32	s0, s1, s15
 801d1e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d1ec:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801d1f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1f4:	edc0 7a00 	vstr	s15, [r0]
 801d1f8:	bfa4      	itt	ge
 801d1fa:	eef0 7a00 	vmovge.f32	s15, #0	@ 0x40000000  2.0
 801d1fe:	ee30 0a67 	vsubge.f32	s0, s0, s15
 801d202:	2901      	cmp	r1, #1
 801d204:	d024      	beq.n	801d250 <awe_vecSawTooth+0xf8>
 801d206:	ed80 0a01 	vstr	s0, [r0, #4]
 801d20a:	ee30 0a20 	vadd.f32	s0, s0, s1
 801d20e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d212:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801d216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d21a:	bfa4      	itt	ge
 801d21c:	eef0 7a00 	vmovge.f32	s15, #0	@ 0x40000000  2.0
 801d220:	ee30 0a67 	vsubge.f32	s0, s0, s15
 801d224:	2902      	cmp	r1, #2
 801d226:	d013      	beq.n	801d250 <awe_vecSawTooth+0xf8>
 801d228:	ed80 0a02 	vstr	s0, [r0, #8]
 801d22c:	ee30 0a20 	vadd.f32	s0, s0, s1
 801d230:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d234:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801d238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d23c:	db08      	blt.n	801d250 <awe_vecSawTooth+0xf8>
 801d23e:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 801d242:	ee30 0a67 	vsub.f32	s0, s0, s15
 801d246:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d24a:	4770      	bx	lr
 801d24c:	eeb0 0a67 	vmov.f32	s0, s15
 801d250:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d254:	4770      	bx	lr
 801d256:	b3bc      	cbz	r4, 801d2c8 <awe_vecSawTooth+0x170>
 801d258:	f100 0310 	add.w	r3, r0, #16
 801d25c:	4622      	mov	r2, r4
 801d25e:	eeff 6a00 	vmov.f32	s13, #240	@ 0xbf800000 -1.0
 801d262:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 801d266:	ee30 7aa7 	vadd.f32	s14, s1, s15
 801d26a:	ed43 7a04 	vstr	s15, [r3, #-16]
 801d26e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 801d272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d276:	bf48      	it	mi
 801d278:	ee37 7a06 	vaddmi.f32	s14, s14, s12
 801d27c:	3310      	adds	r3, #16
 801d27e:	ee77 7a20 	vadd.f32	s15, s14, s1
 801d282:	ed03 7a07 	vstr	s14, [r3, #-28]	@ 0xffffffe4
 801d286:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d28a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d28e:	bf48      	it	mi
 801d290:	ee77 7a86 	vaddmi.f32	s15, s15, s12
 801d294:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801d298:	ed43 7a06 	vstr	s15, [r3, #-24]	@ 0xffffffe8
 801d29c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 801d2a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d2a4:	bf48      	it	mi
 801d2a6:	ee37 7a06 	vaddmi.f32	s14, s14, s12
 801d2aa:	ee77 7a20 	vadd.f32	s15, s14, s1
 801d2ae:	ed03 7a05 	vstr	s14, [r3, #-20]	@ 0xffffffec
 801d2b2:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d2b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d2ba:	bf48      	it	mi
 801d2bc:	ee77 7a86 	vaddmi.f32	s15, s15, s12
 801d2c0:	3a01      	subs	r2, #1
 801d2c2:	d1d0      	bne.n	801d266 <awe_vecSawTooth+0x10e>
 801d2c4:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 801d2c8:	f011 0103 	ands.w	r1, r1, #3
 801d2cc:	d0be      	beq.n	801d24c <awe_vecSawTooth+0xf4>
 801d2ce:	ee30 0aa7 	vadd.f32	s0, s1, s15
 801d2d2:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 801d2d6:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801d2da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d2de:	edc0 7a00 	vstr	s15, [r0]
 801d2e2:	bf44      	itt	mi
 801d2e4:	eef0 7a00 	vmovmi.f32	s15, #0	@ 0x40000000  2.0
 801d2e8:	ee30 0a27 	vaddmi.f32	s0, s0, s15
 801d2ec:	2901      	cmp	r1, #1
 801d2ee:	d0af      	beq.n	801d250 <awe_vecSawTooth+0xf8>
 801d2f0:	ed80 0a01 	vstr	s0, [r0, #4]
 801d2f4:	ee30 0a20 	vadd.f32	s0, s0, s1
 801d2f8:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 801d2fc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801d300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d304:	bf44      	itt	mi
 801d306:	eef0 7a00 	vmovmi.f32	s15, #0	@ 0x40000000  2.0
 801d30a:	ee30 0a27 	vaddmi.f32	s0, s0, s15
 801d30e:	2902      	cmp	r1, #2
 801d310:	d09e      	beq.n	801d250 <awe_vecSawTooth+0xf8>
 801d312:	ed80 0a02 	vstr	s0, [r0, #8]
 801d316:	ee30 0a20 	vadd.f32	s0, s0, s1
 801d31a:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 801d31e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801d322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d326:	d593      	bpl.n	801d250 <awe_vecSawTooth+0xf8>
 801d328:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 801d32c:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d330:	e78e      	b.n	801d250 <awe_vecSawTooth+0xf8>
 801d332:	bf00      	nop

0801d334 <awe_vecScale>:
 801d334:	b4f0      	push	{r4, r5, r6, r7}
 801d336:	ed2d 8b02 	vpush	{d8}
 801d33a:	9e06      	ldr	r6, [sp, #24]
 801d33c:	1137      	asrs	r7, r6, #4
 801d33e:	2901      	cmp	r1, #1
 801d340:	f000 809b 	beq.w	801d47a <awe_vecScale+0x146>
 801d344:	2f00      	cmp	r7, #0
 801d346:	f000 8085 	beq.w	801d454 <awe_vecScale+0x120>
 801d34a:	008d      	lsls	r5, r1, #2
 801d34c:	009c      	lsls	r4, r3, #2
 801d34e:	ed90 8a00 	vldr	s16, [r0]
 801d352:	4428      	add	r0, r5
 801d354:	edd0 0a00 	vldr	s1, [r0]
 801d358:	4428      	add	r0, r5
 801d35a:	ed90 1a00 	vldr	s2, [r0]
 801d35e:	4428      	add	r0, r5
 801d360:	edd0 1a00 	vldr	s3, [r0]
 801d364:	4428      	add	r0, r5
 801d366:	ed90 2a00 	vldr	s4, [r0]
 801d36a:	4428      	add	r0, r5
 801d36c:	edd0 2a00 	vldr	s5, [r0]
 801d370:	4428      	add	r0, r5
 801d372:	ed90 3a00 	vldr	s6, [r0]
 801d376:	4428      	add	r0, r5
 801d378:	edd0 3a00 	vldr	s7, [r0]
 801d37c:	4428      	add	r0, r5
 801d37e:	ed90 4a00 	vldr	s8, [r0]
 801d382:	4428      	add	r0, r5
 801d384:	edd0 4a00 	vldr	s9, [r0]
 801d388:	4428      	add	r0, r5
 801d38a:	ed90 5a00 	vldr	s10, [r0]
 801d38e:	4428      	add	r0, r5
 801d390:	edd0 5a00 	vldr	s11, [r0]
 801d394:	4428      	add	r0, r5
 801d396:	ed90 6a00 	vldr	s12, [r0]
 801d39a:	4428      	add	r0, r5
 801d39c:	edd0 6a00 	vldr	s13, [r0]
 801d3a0:	4428      	add	r0, r5
 801d3a2:	ed90 7a00 	vldr	s14, [r0]
 801d3a6:	4428      	add	r0, r5
 801d3a8:	edd0 7a00 	vldr	s15, [r0]
 801d3ac:	4428      	add	r0, r5
 801d3ae:	ee20 8a08 	vmul.f32	s16, s0, s16
 801d3b2:	ed82 8a00 	vstr	s16, [r2]
 801d3b6:	4422      	add	r2, r4
 801d3b8:	ee60 0a20 	vmul.f32	s1, s0, s1
 801d3bc:	edc2 0a00 	vstr	s1, [r2]
 801d3c0:	4422      	add	r2, r4
 801d3c2:	ee20 1a01 	vmul.f32	s2, s0, s2
 801d3c6:	ed82 1a00 	vstr	s2, [r2]
 801d3ca:	4422      	add	r2, r4
 801d3cc:	ee60 1a21 	vmul.f32	s3, s0, s3
 801d3d0:	edc2 1a00 	vstr	s3, [r2]
 801d3d4:	4422      	add	r2, r4
 801d3d6:	ee20 2a02 	vmul.f32	s4, s0, s4
 801d3da:	ed82 2a00 	vstr	s4, [r2]
 801d3de:	4422      	add	r2, r4
 801d3e0:	ee60 2a22 	vmul.f32	s5, s0, s5
 801d3e4:	edc2 2a00 	vstr	s5, [r2]
 801d3e8:	4422      	add	r2, r4
 801d3ea:	ee20 3a03 	vmul.f32	s6, s0, s6
 801d3ee:	ed82 3a00 	vstr	s6, [r2]
 801d3f2:	4422      	add	r2, r4
 801d3f4:	ee60 3a23 	vmul.f32	s7, s0, s7
 801d3f8:	edc2 3a00 	vstr	s7, [r2]
 801d3fc:	4422      	add	r2, r4
 801d3fe:	ee20 4a04 	vmul.f32	s8, s0, s8
 801d402:	ed82 4a00 	vstr	s8, [r2]
 801d406:	4422      	add	r2, r4
 801d408:	ee60 4a24 	vmul.f32	s9, s0, s9
 801d40c:	edc2 4a00 	vstr	s9, [r2]
 801d410:	4422      	add	r2, r4
 801d412:	ee20 5a05 	vmul.f32	s10, s0, s10
 801d416:	ed82 5a00 	vstr	s10, [r2]
 801d41a:	4422      	add	r2, r4
 801d41c:	ee60 5a25 	vmul.f32	s11, s0, s11
 801d420:	edc2 5a00 	vstr	s11, [r2]
 801d424:	4422      	add	r2, r4
 801d426:	ee20 6a06 	vmul.f32	s12, s0, s12
 801d42a:	ed82 6a00 	vstr	s12, [r2]
 801d42e:	4422      	add	r2, r4
 801d430:	ee60 6a26 	vmul.f32	s13, s0, s13
 801d434:	edc2 6a00 	vstr	s13, [r2]
 801d438:	4422      	add	r2, r4
 801d43a:	ee20 7a07 	vmul.f32	s14, s0, s14
 801d43e:	ed82 7a00 	vstr	s14, [r2]
 801d442:	4422      	add	r2, r4
 801d444:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d448:	edc2 7a00 	vstr	s15, [r2]
 801d44c:	4422      	add	r2, r4
 801d44e:	3f01      	subs	r7, #1
 801d450:	f47f af7d 	bne.w	801d34e <awe_vecScale+0x1a>
 801d454:	f016 060f 	ands.w	r6, r6, #15
 801d458:	d00b      	beq.n	801d472 <awe_vecScale+0x13e>
 801d45a:	0089      	lsls	r1, r1, #2
 801d45c:	009b      	lsls	r3, r3, #2
 801d45e:	edd0 7a00 	vldr	s15, [r0]
 801d462:	4408      	add	r0, r1
 801d464:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d468:	edc2 7a00 	vstr	s15, [r2]
 801d46c:	441a      	add	r2, r3
 801d46e:	3e01      	subs	r6, #1
 801d470:	d1f5      	bne.n	801d45e <awe_vecScale+0x12a>
 801d472:	ecbd 8b02 	vpop	{d8}
 801d476:	bcf0      	pop	{r4, r5, r6, r7}
 801d478:	4770      	bx	lr
 801d47a:	2b01      	cmp	r3, #1
 801d47c:	f47f af62 	bne.w	801d344 <awe_vecScale+0x10>
 801d480:	2f00      	cmp	r7, #0
 801d482:	d06b      	beq.n	801d55c <awe_vecScale+0x228>
 801d484:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801d488:	f102 0340 	add.w	r3, r2, #64	@ 0x40
 801d48c:	463c      	mov	r4, r7
 801d48e:	ed11 8a10 	vldr	s16, [r1, #-64]	@ 0xffffffc0
 801d492:	ed51 0a0f 	vldr	s1, [r1, #-60]	@ 0xffffffc4
 801d496:	ed11 1a0e 	vldr	s2, [r1, #-56]	@ 0xffffffc8
 801d49a:	ed51 1a0d 	vldr	s3, [r1, #-52]	@ 0xffffffcc
 801d49e:	ed11 2a0c 	vldr	s4, [r1, #-48]	@ 0xffffffd0
 801d4a2:	ed51 2a0b 	vldr	s5, [r1, #-44]	@ 0xffffffd4
 801d4a6:	ed11 3a0a 	vldr	s6, [r1, #-40]	@ 0xffffffd8
 801d4aa:	ed51 3a09 	vldr	s7, [r1, #-36]	@ 0xffffffdc
 801d4ae:	ed11 4a08 	vldr	s8, [r1, #-32]	@ 0xffffffe0
 801d4b2:	ed51 4a07 	vldr	s9, [r1, #-28]	@ 0xffffffe4
 801d4b6:	ed11 5a06 	vldr	s10, [r1, #-24]	@ 0xffffffe8
 801d4ba:	ed51 5a05 	vldr	s11, [r1, #-20]	@ 0xffffffec
 801d4be:	ed11 6a04 	vldr	s12, [r1, #-16]
 801d4c2:	ed51 6a03 	vldr	s13, [r1, #-12]
 801d4c6:	ed11 7a02 	vldr	s14, [r1, #-8]
 801d4ca:	ed51 7a01 	vldr	s15, [r1, #-4]
 801d4ce:	ee20 8a08 	vmul.f32	s16, s0, s16
 801d4d2:	ed03 8a10 	vstr	s16, [r3, #-64]	@ 0xffffffc0
 801d4d6:	ee60 0a20 	vmul.f32	s1, s0, s1
 801d4da:	ed43 0a0f 	vstr	s1, [r3, #-60]	@ 0xffffffc4
 801d4de:	ee20 1a01 	vmul.f32	s2, s0, s2
 801d4e2:	ed03 1a0e 	vstr	s2, [r3, #-56]	@ 0xffffffc8
 801d4e6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801d4ea:	ed43 1a0d 	vstr	s3, [r3, #-52]	@ 0xffffffcc
 801d4ee:	ee20 2a02 	vmul.f32	s4, s0, s4
 801d4f2:	ed03 2a0c 	vstr	s4, [r3, #-48]	@ 0xffffffd0
 801d4f6:	ee60 2a22 	vmul.f32	s5, s0, s5
 801d4fa:	ed43 2a0b 	vstr	s5, [r3, #-44]	@ 0xffffffd4
 801d4fe:	ee20 3a03 	vmul.f32	s6, s0, s6
 801d502:	ed03 3a0a 	vstr	s6, [r3, #-40]	@ 0xffffffd8
 801d506:	ee60 3a23 	vmul.f32	s7, s0, s7
 801d50a:	ed43 3a09 	vstr	s7, [r3, #-36]	@ 0xffffffdc
 801d50e:	ee20 4a04 	vmul.f32	s8, s0, s8
 801d512:	ed03 4a08 	vstr	s8, [r3, #-32]	@ 0xffffffe0
 801d516:	ee60 4a24 	vmul.f32	s9, s0, s9
 801d51a:	ed43 4a07 	vstr	s9, [r3, #-28]	@ 0xffffffe4
 801d51e:	ee20 5a05 	vmul.f32	s10, s0, s10
 801d522:	ed03 5a06 	vstr	s10, [r3, #-24]	@ 0xffffffe8
 801d526:	ee60 5a25 	vmul.f32	s11, s0, s11
 801d52a:	ed43 5a05 	vstr	s11, [r3, #-20]	@ 0xffffffec
 801d52e:	ee20 6a06 	vmul.f32	s12, s0, s12
 801d532:	ed03 6a04 	vstr	s12, [r3, #-16]
 801d536:	ee60 6a26 	vmul.f32	s13, s0, s13
 801d53a:	ed43 6a03 	vstr	s13, [r3, #-12]
 801d53e:	ee20 7a07 	vmul.f32	s14, s0, s14
 801d542:	ed03 7a02 	vstr	s14, [r3, #-8]
 801d546:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d54a:	ed43 7a01 	vstr	s15, [r3, #-4]
 801d54e:	3140      	adds	r1, #64	@ 0x40
 801d550:	3340      	adds	r3, #64	@ 0x40
 801d552:	3c01      	subs	r4, #1
 801d554:	d19b      	bne.n	801d48e <awe_vecScale+0x15a>
 801d556:	01bf      	lsls	r7, r7, #6
 801d558:	4438      	add	r0, r7
 801d55a:	443a      	add	r2, r7
 801d55c:	f016 060f 	ands.w	r6, r6, #15
 801d560:	d087      	beq.n	801d472 <awe_vecScale+0x13e>
 801d562:	ecf0 7a01 	vldmia	r0!, {s15}
 801d566:	ee67 7a80 	vmul.f32	s15, s15, s0
 801d56a:	ece2 7a01 	vstmia	r2!, {s15}
 801d56e:	3e01      	subs	r6, #1
 801d570:	d1f7      	bne.n	801d562 <awe_vecScale+0x22e>
 801d572:	e77e      	b.n	801d472 <awe_vecScale+0x13e>

0801d574 <awe_vecScaleAdd>:
 801d574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d578:	b08b      	sub	sp, #44	@ 0x2c
 801d57a:	9107      	str	r1, [sp, #28]
 801d57c:	9305      	str	r3, [sp, #20]
 801d57e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d580:	10db      	asrs	r3, r3, #3
 801d582:	9306      	str	r3, [sp, #24]
 801d584:	2901      	cmp	r1, #1
 801d586:	f000 80b3 	beq.w	801d6f0 <awe_vecScaleAdd+0x17c>
 801d58a:	9b06      	ldr	r3, [sp, #24]
 801d58c:	2b00      	cmp	r3, #0
 801d58e:	f000 8096 	beq.w	801d6be <awe_vecScaleAdd+0x14a>
 801d592:	9f07      	ldr	r7, [sp, #28]
 801d594:	00be      	lsls	r6, r7, #2
 801d596:	9905      	ldr	r1, [sp, #20]
 801d598:	008b      	lsls	r3, r1, #2
 801d59a:	017c      	lsls	r4, r7, #5
 801d59c:	9402      	str	r4, [sp, #8]
 801d59e:	1984      	adds	r4, r0, r6
 801d5a0:	0149      	lsls	r1, r1, #5
 801d5a2:	18d5      	adds	r5, r2, r3
 801d5a4:	eb05 0803 	add.w	r8, r5, r3
 801d5a8:	eb08 0e03 	add.w	lr, r8, r3
 801d5ac:	eb0e 0c03 	add.w	ip, lr, r3
 801d5b0:	eb0c 0a03 	add.w	sl, ip, r3
 801d5b4:	ea4f 0bc7 	mov.w	fp, r7, lsl #3
 801d5b8:	013f      	lsls	r7, r7, #4
 801d5ba:	9703      	str	r7, [sp, #12]
 801d5bc:	445e      	add	r6, fp
 801d5be:	0077      	lsls	r7, r6, #1
 801d5c0:	9704      	str	r7, [sp, #16]
 801d5c2:	9e05      	ldr	r6, [sp, #20]
 801d5c4:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801d5c8:	005b      	lsls	r3, r3, #1
 801d5ca:	9e06      	ldr	r6, [sp, #24]
 801d5cc:	9601      	str	r6, [sp, #4]
 801d5ce:	4616      	mov	r6, r2
 801d5d0:	4681      	mov	r9, r0
 801d5d2:	465f      	mov	r7, fp
 801d5d4:	9008      	str	r0, [sp, #32]
 801d5d6:	4618      	mov	r0, r3
 801d5d8:	9209      	str	r2, [sp, #36]	@ 0x24
 801d5da:	ed99 4a00 	vldr	s8, [r9]
 801d5de:	edd4 4a00 	vldr	s9, [r4]
 801d5e2:	eb09 0307 	add.w	r3, r9, r7
 801d5e6:	ed93 5a00 	vldr	s10, [r3]
 801d5ea:	eb04 0b07 	add.w	fp, r4, r7
 801d5ee:	eddb 5a00 	vldr	s11, [fp]
 801d5f2:	443b      	add	r3, r7
 801d5f4:	ed93 6a00 	vldr	s12, [r3]
 801d5f8:	9a03      	ldr	r2, [sp, #12]
 801d5fa:	eb04 0b02 	add.w	fp, r4, r2
 801d5fe:	eddb 6a00 	vldr	s13, [fp]
 801d602:	443b      	add	r3, r7
 801d604:	ed93 7a00 	vldr	s14, [r3]
 801d608:	9b04      	ldr	r3, [sp, #16]
 801d60a:	18e3      	adds	r3, r4, r3
 801d60c:	edd3 7a00 	vldr	s15, [r3]
 801d610:	9a02      	ldr	r2, [sp, #8]
 801d612:	4491      	add	r9, r2
 801d614:	ee20 4a04 	vmul.f32	s8, s0, s8
 801d618:	ee60 4a24 	vmul.f32	s9, s0, s9
 801d61c:	ee20 5a05 	vmul.f32	s10, s0, s10
 801d620:	ee60 5a25 	vmul.f32	s11, s0, s11
 801d624:	ee20 6a06 	vmul.f32	s12, s0, s12
 801d628:	ee60 6a26 	vmul.f32	s13, s0, s13
 801d62c:	ee20 7a07 	vmul.f32	s14, s0, s14
 801d630:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d634:	edd6 3a00 	vldr	s7, [r6]
 801d638:	ee33 4a84 	vadd.f32	s8, s7, s8
 801d63c:	ed86 4a00 	vstr	s8, [r6]
 801d640:	ed95 4a00 	vldr	s8, [r5]
 801d644:	ee74 4a24 	vadd.f32	s9, s8, s9
 801d648:	edc5 4a00 	vstr	s9, [r5]
 801d64c:	edd8 4a00 	vldr	s9, [r8]
 801d650:	ee34 5a85 	vadd.f32	s10, s9, s10
 801d654:	ed88 5a00 	vstr	s10, [r8]
 801d658:	ed9e 5a00 	vldr	s10, [lr]
 801d65c:	ee75 5a25 	vadd.f32	s11, s10, s11
 801d660:	edce 5a00 	vstr	s11, [lr]
 801d664:	eddc 5a00 	vldr	s11, [ip]
 801d668:	ee35 6a86 	vadd.f32	s12, s11, s12
 801d66c:	ed8c 6a00 	vstr	s12, [ip]
 801d670:	ed9a 6a00 	vldr	s12, [sl]
 801d674:	ee76 6a26 	vadd.f32	s13, s12, s13
 801d678:	edca 6a00 	vstr	s13, [sl]
 801d67c:	1833      	adds	r3, r6, r0
 801d67e:	edd3 6a00 	vldr	s13, [r3]
 801d682:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d686:	ed83 7a00 	vstr	s14, [r3]
 801d68a:	182b      	adds	r3, r5, r0
 801d68c:	ed93 7a00 	vldr	s14, [r3]
 801d690:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d694:	edc3 7a00 	vstr	s15, [r3]
 801d698:	440e      	add	r6, r1
 801d69a:	4414      	add	r4, r2
 801d69c:	440d      	add	r5, r1
 801d69e:	4488      	add	r8, r1
 801d6a0:	448e      	add	lr, r1
 801d6a2:	448c      	add	ip, r1
 801d6a4:	448a      	add	sl, r1
 801d6a6:	9b01      	ldr	r3, [sp, #4]
 801d6a8:	3b01      	subs	r3, #1
 801d6aa:	9301      	str	r3, [sp, #4]
 801d6ac:	d195      	bne.n	801d5da <awe_vecScaleAdd+0x66>
 801d6ae:	9808      	ldr	r0, [sp, #32]
 801d6b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d6b2:	9b06      	ldr	r3, [sp, #24]
 801d6b4:	9d02      	ldr	r5, [sp, #8]
 801d6b6:	fb05 0003 	mla	r0, r5, r3, r0
 801d6ba:	fb01 2203 	mla	r2, r1, r3, r2
 801d6be:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d6c0:	f013 0407 	ands.w	r4, r3, #7
 801d6c4:	d011      	beq.n	801d6ea <awe_vecScaleAdd+0x176>
 801d6c6:	9b07      	ldr	r3, [sp, #28]
 801d6c8:	0099      	lsls	r1, r3, #2
 801d6ca:	9b05      	ldr	r3, [sp, #20]
 801d6cc:	009b      	lsls	r3, r3, #2
 801d6ce:	edd0 7a00 	vldr	s15, [r0]
 801d6d2:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d6d6:	4408      	add	r0, r1
 801d6d8:	ed92 7a00 	vldr	s14, [r2]
 801d6dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d6e0:	edc2 7a00 	vstr	s15, [r2]
 801d6e4:	441a      	add	r2, r3
 801d6e6:	3c01      	subs	r4, #1
 801d6e8:	d1f1      	bne.n	801d6ce <awe_vecScaleAdd+0x15a>
 801d6ea:	b00b      	add	sp, #44	@ 0x2c
 801d6ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6f0:	9b05      	ldr	r3, [sp, #20]
 801d6f2:	2b01      	cmp	r3, #1
 801d6f4:	f47f af49 	bne.w	801d58a <awe_vecScaleAdd+0x16>
 801d6f8:	9c06      	ldr	r4, [sp, #24]
 801d6fa:	2c00      	cmp	r4, #0
 801d6fc:	d05b      	beq.n	801d7b6 <awe_vecScaleAdd+0x242>
 801d6fe:	f100 0120 	add.w	r1, r0, #32
 801d702:	f102 0320 	add.w	r3, r2, #32
 801d706:	ed11 7a08 	vldr	s14, [r1, #-32]	@ 0xffffffe0
 801d70a:	ed11 4a07 	vldr	s8, [r1, #-28]	@ 0xffffffe4
 801d70e:	ed51 4a06 	vldr	s9, [r1, #-24]	@ 0xffffffe8
 801d712:	ed11 5a05 	vldr	s10, [r1, #-20]	@ 0xffffffec
 801d716:	ed51 5a04 	vldr	s11, [r1, #-16]
 801d71a:	ed11 6a03 	vldr	s12, [r1, #-12]
 801d71e:	ed51 6a02 	vldr	s13, [r1, #-8]
 801d722:	ed51 7a01 	vldr	s15, [r1, #-4]
 801d726:	ee60 3a07 	vmul.f32	s7, s0, s14
 801d72a:	ee20 4a04 	vmul.f32	s8, s0, s8
 801d72e:	ee60 4a24 	vmul.f32	s9, s0, s9
 801d732:	ee20 5a05 	vmul.f32	s10, s0, s10
 801d736:	ee60 5a25 	vmul.f32	s11, s0, s11
 801d73a:	ee20 6a06 	vmul.f32	s12, s0, s12
 801d73e:	ee60 6a26 	vmul.f32	s13, s0, s13
 801d742:	ee20 7a27 	vmul.f32	s14, s0, s15
 801d746:	ed53 7a07 	vldr	s15, [r3, #-28]	@ 0xffffffe4
 801d74a:	ee34 4a27 	vadd.f32	s8, s8, s15
 801d74e:	ed53 7a06 	vldr	s15, [r3, #-24]	@ 0xffffffe8
 801d752:	ee74 4aa7 	vadd.f32	s9, s9, s15
 801d756:	ed53 7a05 	vldr	s15, [r3, #-20]	@ 0xffffffec
 801d75a:	ee35 5a27 	vadd.f32	s10, s10, s15
 801d75e:	ed53 7a04 	vldr	s15, [r3, #-16]
 801d762:	ee75 5aa7 	vadd.f32	s11, s11, s15
 801d766:	ed53 7a03 	vldr	s15, [r3, #-12]
 801d76a:	ee36 6a27 	vadd.f32	s12, s12, s15
 801d76e:	ed53 7a02 	vldr	s15, [r3, #-8]
 801d772:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801d776:	ed53 7a01 	vldr	s15, [r3, #-4]
 801d77a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d77e:	ed13 7a08 	vldr	s14, [r3, #-32]	@ 0xffffffe0
 801d782:	ee37 7a23 	vadd.f32	s14, s14, s7
 801d786:	ed03 7a08 	vstr	s14, [r3, #-32]	@ 0xffffffe0
 801d78a:	ed03 4a07 	vstr	s8, [r3, #-28]	@ 0xffffffe4
 801d78e:	ed43 4a06 	vstr	s9, [r3, #-24]	@ 0xffffffe8
 801d792:	ed03 5a05 	vstr	s10, [r3, #-20]	@ 0xffffffec
 801d796:	ed43 5a04 	vstr	s11, [r3, #-16]
 801d79a:	ed03 6a03 	vstr	s12, [r3, #-12]
 801d79e:	ed43 6a02 	vstr	s13, [r3, #-8]
 801d7a2:	ed43 7a01 	vstr	s15, [r3, #-4]
 801d7a6:	3120      	adds	r1, #32
 801d7a8:	3320      	adds	r3, #32
 801d7aa:	3c01      	subs	r4, #1
 801d7ac:	d1ab      	bne.n	801d706 <awe_vecScaleAdd+0x192>
 801d7ae:	9b06      	ldr	r3, [sp, #24]
 801d7b0:	015b      	lsls	r3, r3, #5
 801d7b2:	4418      	add	r0, r3
 801d7b4:	441a      	add	r2, r3
 801d7b6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d7b8:	f013 0307 	ands.w	r3, r3, #7
 801d7bc:	d095      	beq.n	801d6ea <awe_vecScaleAdd+0x176>
 801d7be:	ecf0 7a01 	vldmia	r0!, {s15}
 801d7c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801d7c6:	ed92 7a00 	vldr	s14, [r2]
 801d7ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d7ce:	ece2 7a01 	vstmia	r2!, {s15}
 801d7d2:	3b01      	subs	r3, #1
 801d7d4:	d1f3      	bne.n	801d7be <awe_vecScaleAdd+0x24a>
 801d7d6:	e788      	b.n	801d6ea <awe_vecScaleAdd+0x176>

0801d7d8 <awe_vecScaleAddSmooth>:
 801d7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7dc:	b08b      	sub	sp, #44	@ 0x2c
 801d7de:	9107      	str	r1, [sp, #28]
 801d7e0:	9305      	str	r3, [sp, #20]
 801d7e2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d7e4:	edd3 7a00 	vldr	s15, [r3]
 801d7e8:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 801d7ec:	ee33 5ae0 	vsub.f32	s10, s7, s1
 801d7f0:	ee25 4a05 	vmul.f32	s8, s10, s10
 801d7f4:	ee20 0a80 	vmul.f32	s0, s1, s0
 801d7f8:	ee75 3a23 	vadd.f32	s7, s10, s7
 801d7fc:	ee63 3a80 	vmul.f32	s7, s7, s0
 801d800:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801d802:	10db      	asrs	r3, r3, #3
 801d804:	9306      	str	r3, [sp, #24]
 801d806:	2901      	cmp	r1, #1
 801d808:	f000 80db 	beq.w	801d9c2 <awe_vecScaleAddSmooth+0x1ea>
 801d80c:	9b06      	ldr	r3, [sp, #24]
 801d80e:	2b00      	cmp	r3, #0
 801d810:	f000 80b7 	beq.w	801d982 <awe_vecScaleAddSmooth+0x1aa>
 801d814:	9f07      	ldr	r7, [sp, #28]
 801d816:	00be      	lsls	r6, r7, #2
 801d818:	9905      	ldr	r1, [sp, #20]
 801d81a:	008b      	lsls	r3, r1, #2
 801d81c:	017c      	lsls	r4, r7, #5
 801d81e:	9402      	str	r4, [sp, #8]
 801d820:	1984      	adds	r4, r0, r6
 801d822:	0149      	lsls	r1, r1, #5
 801d824:	18d5      	adds	r5, r2, r3
 801d826:	eb05 0803 	add.w	r8, r5, r3
 801d82a:	eb08 0e03 	add.w	lr, r8, r3
 801d82e:	eb0e 0c03 	add.w	ip, lr, r3
 801d832:	eb0c 0a03 	add.w	sl, ip, r3
 801d836:	ea4f 0bc7 	mov.w	fp, r7, lsl #3
 801d83a:	013f      	lsls	r7, r7, #4
 801d83c:	9703      	str	r7, [sp, #12]
 801d83e:	445e      	add	r6, fp
 801d840:	0077      	lsls	r7, r6, #1
 801d842:	9704      	str	r7, [sp, #16]
 801d844:	9e05      	ldr	r6, [sp, #20]
 801d846:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801d84a:	005b      	lsls	r3, r3, #1
 801d84c:	9e06      	ldr	r6, [sp, #24]
 801d84e:	9601      	str	r6, [sp, #4]
 801d850:	4616      	mov	r6, r2
 801d852:	4681      	mov	r9, r0
 801d854:	465f      	mov	r7, fp
 801d856:	9008      	str	r0, [sp, #32]
 801d858:	4618      	mov	r0, r3
 801d85a:	9209      	str	r2, [sp, #36]	@ 0x24
 801d85c:	edd9 1a00 	vldr	s3, [r9]
 801d860:	eb09 0307 	add.w	r3, r9, r7
 801d864:	edd3 2a00 	vldr	s5, [r3]
 801d868:	eb04 0b07 	add.w	fp, r4, r7
 801d86c:	ed9b 7a00 	vldr	s14, [fp]
 801d870:	443b      	add	r3, r7
 801d872:	ed93 3a00 	vldr	s6, [r3]
 801d876:	9a03      	ldr	r2, [sp, #12]
 801d878:	eb04 0b02 	add.w	fp, r4, r2
 801d87c:	eddb 4a00 	vldr	s9, [fp]
 801d880:	443b      	add	r3, r7
 801d882:	ed93 6a00 	vldr	s12, [r3]
 801d886:	9b04      	ldr	r3, [sp, #16]
 801d888:	18e3      	adds	r3, r4, r3
 801d88a:	edd3 5a00 	vldr	s11, [r3]
 801d88e:	ee65 7a27 	vmul.f32	s15, s10, s15
 801d892:	9a02      	ldr	r2, [sp, #8]
 801d894:	4491      	add	r9, r2
 801d896:	ee70 7a27 	vadd.f32	s15, s0, s15
 801d89a:	ee65 6a27 	vmul.f32	s13, s10, s15
 801d89e:	ee61 1aa7 	vmul.f32	s3, s3, s15
 801d8a2:	ee70 6a26 	vadd.f32	s13, s0, s13
 801d8a6:	ed94 2a00 	vldr	s4, [r4]
 801d8aa:	ee26 2a82 	vmul.f32	s4, s13, s4
 801d8ae:	ed96 1a00 	vldr	s2, [r6]
 801d8b2:	ee71 1a21 	vadd.f32	s3, s2, s3
 801d8b6:	edc6 1a00 	vstr	s3, [r6]
 801d8ba:	ee64 7a27 	vmul.f32	s15, s8, s15
 801d8be:	edd5 1a00 	vldr	s3, [r5]
 801d8c2:	ee31 2a82 	vadd.f32	s4, s3, s4
 801d8c6:	ed85 2a00 	vstr	s4, [r5]
 801d8ca:	ee64 6a26 	vmul.f32	s13, s8, s13
 801d8ce:	ee73 7aa7 	vadd.f32	s15, s7, s15
 801d8d2:	ee73 6aa6 	vadd.f32	s13, s7, s13
 801d8d6:	ee62 2aa7 	vmul.f32	s5, s5, s15
 801d8da:	ee27 7a26 	vmul.f32	s14, s14, s13
 801d8de:	ed98 2a00 	vldr	s4, [r8]
 801d8e2:	ee72 2a22 	vadd.f32	s5, s4, s5
 801d8e6:	edc8 2a00 	vstr	s5, [r8]
 801d8ea:	ee64 7a27 	vmul.f32	s15, s8, s15
 801d8ee:	edde 2a00 	vldr	s5, [lr]
 801d8f2:	ee32 7a87 	vadd.f32	s14, s5, s14
 801d8f6:	ed8e 7a00 	vstr	s14, [lr]
 801d8fa:	ee64 6a26 	vmul.f32	s13, s8, s13
 801d8fe:	ee33 7aa7 	vadd.f32	s14, s7, s15
 801d902:	ee73 7aa6 	vadd.f32	s15, s7, s13
 801d906:	ee23 3a07 	vmul.f32	s6, s6, s14
 801d90a:	ee64 6aa7 	vmul.f32	s13, s9, s15
 801d90e:	eddc 4a00 	vldr	s9, [ip]
 801d912:	ee74 4a83 	vadd.f32	s9, s9, s6
 801d916:	edcc 4a00 	vstr	s9, [ip]
 801d91a:	ee24 7a07 	vmul.f32	s14, s8, s14
 801d91e:	edda 4a00 	vldr	s9, [sl]
 801d922:	ee74 6aa6 	vadd.f32	s13, s9, s13
 801d926:	edca 6a00 	vstr	s13, [sl]
 801d92a:	ee64 7a27 	vmul.f32	s15, s8, s15
 801d92e:	ee73 7aa7 	vadd.f32	s15, s7, s15
 801d932:	ee33 7a87 	vadd.f32	s14, s7, s14
 801d936:	ee27 7a06 	vmul.f32	s14, s14, s12
 801d93a:	1833      	adds	r3, r6, r0
 801d93c:	ee25 6aa7 	vmul.f32	s12, s11, s15
 801d940:	edd3 6a00 	vldr	s13, [r3]
 801d944:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d948:	ed83 7a00 	vstr	s14, [r3]
 801d94c:	182b      	adds	r3, r5, r0
 801d94e:	ed93 7a00 	vldr	s14, [r3]
 801d952:	ee37 7a06 	vadd.f32	s14, s14, s12
 801d956:	ed83 7a00 	vstr	s14, [r3]
 801d95a:	440e      	add	r6, r1
 801d95c:	4414      	add	r4, r2
 801d95e:	440d      	add	r5, r1
 801d960:	4488      	add	r8, r1
 801d962:	448e      	add	lr, r1
 801d964:	448c      	add	ip, r1
 801d966:	448a      	add	sl, r1
 801d968:	9b01      	ldr	r3, [sp, #4]
 801d96a:	3b01      	subs	r3, #1
 801d96c:	9301      	str	r3, [sp, #4]
 801d96e:	f47f af75 	bne.w	801d85c <awe_vecScaleAddSmooth+0x84>
 801d972:	9808      	ldr	r0, [sp, #32]
 801d974:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d976:	9b06      	ldr	r3, [sp, #24]
 801d978:	9d02      	ldr	r5, [sp, #8]
 801d97a:	fb05 0003 	mla	r0, r5, r3, r0
 801d97e:	fb01 2203 	mla	r2, r1, r3, r2
 801d982:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801d984:	f013 0407 	ands.w	r4, r3, #7
 801d988:	d015      	beq.n	801d9b6 <awe_vecScaleAddSmooth+0x1de>
 801d98a:	9b07      	ldr	r3, [sp, #28]
 801d98c:	0099      	lsls	r1, r3, #2
 801d98e:	9b05      	ldr	r3, [sp, #20]
 801d990:	009b      	lsls	r3, r3, #2
 801d992:	ee65 7a27 	vmul.f32	s15, s10, s15
 801d996:	ed90 7a00 	vldr	s14, [r0]
 801d99a:	ee70 7a27 	vadd.f32	s15, s0, s15
 801d99e:	4408      	add	r0, r1
 801d9a0:	ee27 7a27 	vmul.f32	s14, s14, s15
 801d9a4:	edd2 6a00 	vldr	s13, [r2]
 801d9a8:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d9ac:	ed82 7a00 	vstr	s14, [r2]
 801d9b0:	441a      	add	r2, r3
 801d9b2:	3c01      	subs	r4, #1
 801d9b4:	d1ed      	bne.n	801d992 <awe_vecScaleAddSmooth+0x1ba>
 801d9b6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d9b8:	edc3 7a00 	vstr	s15, [r3]
 801d9bc:	b00b      	add	sp, #44	@ 0x2c
 801d9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9c2:	9b05      	ldr	r3, [sp, #20]
 801d9c4:	2b01      	cmp	r3, #1
 801d9c6:	f47f af21 	bne.w	801d80c <awe_vecScaleAddSmooth+0x34>
 801d9ca:	9c06      	ldr	r4, [sp, #24]
 801d9cc:	2c00      	cmp	r4, #0
 801d9ce:	d07b      	beq.n	801dac8 <awe_vecScaleAddSmooth+0x2f0>
 801d9d0:	f100 0120 	add.w	r1, r0, #32
 801d9d4:	f102 0320 	add.w	r3, r2, #32
 801d9d8:	ee65 7a27 	vmul.f32	s15, s10, s15
 801d9dc:	ee70 7a27 	vadd.f32	s15, s0, s15
 801d9e0:	ee25 7a27 	vmul.f32	s14, s10, s15
 801d9e4:	ed51 4a08 	vldr	s9, [r1, #-32]	@ 0xffffffe0
 801d9e8:	ee67 4aa4 	vmul.f32	s9, s15, s9
 801d9ec:	ee30 7a07 	vadd.f32	s14, s0, s14
 801d9f0:	ed51 1a07 	vldr	s3, [r1, #-28]	@ 0xffffffe4
 801d9f4:	ee67 1a21 	vmul.f32	s3, s14, s3
 801d9f8:	ee64 7a27 	vmul.f32	s15, s8, s15
 801d9fc:	ee24 7a07 	vmul.f32	s14, s8, s14
 801da00:	ee73 7aa7 	vadd.f32	s15, s7, s15
 801da04:	ee33 7a87 	vadd.f32	s14, s7, s14
 801da08:	ed11 2a06 	vldr	s4, [r1, #-24]	@ 0xffffffe8
 801da0c:	ee27 2a82 	vmul.f32	s4, s15, s4
 801da10:	ed51 2a05 	vldr	s5, [r1, #-20]	@ 0xffffffec
 801da14:	ee67 2a22 	vmul.f32	s5, s14, s5
 801da18:	ee64 7a27 	vmul.f32	s15, s8, s15
 801da1c:	ee64 6a07 	vmul.f32	s13, s8, s14
 801da20:	ee33 7aa7 	vadd.f32	s14, s7, s15
 801da24:	ee73 7aa6 	vadd.f32	s15, s7, s13
 801da28:	ed11 3a04 	vldr	s6, [r1, #-16]
 801da2c:	ee27 3a03 	vmul.f32	s6, s14, s6
 801da30:	ed51 5a03 	vldr	s11, [r1, #-12]
 801da34:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801da38:	ee24 7a07 	vmul.f32	s14, s8, s14
 801da3c:	ee64 7a27 	vmul.f32	s15, s8, s15
 801da40:	ee73 7aa7 	vadd.f32	s15, s7, s15
 801da44:	ee33 7a87 	vadd.f32	s14, s7, s14
 801da48:	ed51 6a02 	vldr	s13, [r1, #-8]
 801da4c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801da50:	ed51 6a01 	vldr	s13, [r1, #-4]
 801da54:	ee27 6aa6 	vmul.f32	s12, s15, s13
 801da58:	ed53 6a07 	vldr	s13, [r3, #-28]	@ 0xffffffe4
 801da5c:	ee71 1aa6 	vadd.f32	s3, s3, s13
 801da60:	ed53 6a06 	vldr	s13, [r3, #-24]	@ 0xffffffe8
 801da64:	ee32 2a26 	vadd.f32	s4, s4, s13
 801da68:	ed53 6a05 	vldr	s13, [r3, #-20]	@ 0xffffffec
 801da6c:	ee72 2aa6 	vadd.f32	s5, s5, s13
 801da70:	ed53 6a04 	vldr	s13, [r3, #-16]
 801da74:	ee33 3a26 	vadd.f32	s6, s6, s13
 801da78:	ed53 6a03 	vldr	s13, [r3, #-12]
 801da7c:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801da80:	ed53 6a02 	vldr	s13, [r3, #-8]
 801da84:	ee37 7a26 	vadd.f32	s14, s14, s13
 801da88:	ed53 6a01 	vldr	s13, [r3, #-4]
 801da8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 801da90:	ed13 6a08 	vldr	s12, [r3, #-32]	@ 0xffffffe0
 801da94:	ee76 4a24 	vadd.f32	s9, s12, s9
 801da98:	ed43 4a08 	vstr	s9, [r3, #-32]	@ 0xffffffe0
 801da9c:	ed43 1a07 	vstr	s3, [r3, #-28]	@ 0xffffffe4
 801daa0:	ed03 2a06 	vstr	s4, [r3, #-24]	@ 0xffffffe8
 801daa4:	ed43 2a05 	vstr	s5, [r3, #-20]	@ 0xffffffec
 801daa8:	ed03 3a04 	vstr	s6, [r3, #-16]
 801daac:	ed43 5a03 	vstr	s11, [r3, #-12]
 801dab0:	ed03 7a02 	vstr	s14, [r3, #-8]
 801dab4:	ed43 6a01 	vstr	s13, [r3, #-4]
 801dab8:	3120      	adds	r1, #32
 801daba:	3320      	adds	r3, #32
 801dabc:	3c01      	subs	r4, #1
 801dabe:	d18b      	bne.n	801d9d8 <awe_vecScaleAddSmooth+0x200>
 801dac0:	9b06      	ldr	r3, [sp, #24]
 801dac2:	015b      	lsls	r3, r3, #5
 801dac4:	4418      	add	r0, r3
 801dac6:	441a      	add	r2, r3
 801dac8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801daca:	f013 0307 	ands.w	r3, r3, #7
 801dace:	f43f af72 	beq.w	801d9b6 <awe_vecScaleAddSmooth+0x1de>
 801dad2:	ee65 7a27 	vmul.f32	s15, s10, s15
 801dad6:	ecb0 7a01 	vldmia	r0!, {s14}
 801dada:	ee70 7a27 	vadd.f32	s15, s0, s15
 801dade:	ee27 7a27 	vmul.f32	s14, s14, s15
 801dae2:	edd2 6a00 	vldr	s13, [r2]
 801dae6:	ee36 7a87 	vadd.f32	s14, s13, s14
 801daea:	eca2 7a01 	vstmia	r2!, {s14}
 801daee:	3b01      	subs	r3, #1
 801daf0:	d1ef      	bne.n	801dad2 <awe_vecScaleAddSmooth+0x2fa>
 801daf2:	e760      	b.n	801d9b6 <awe_vecScaleAddSmooth+0x1de>

0801daf4 <awe_vecScaleAddSmooth_Nch>:
 801daf4:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
 801daf8:	ed2d 8b02 	vpush	{d8}
 801dafc:	b084      	sub	sp, #16
 801dafe:	1e16      	subs	r6, r2, #0
 801db00:	4698      	mov	r8, r3
 801db02:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
 801db06:	dd25      	ble.n	801db54 <awe_vecScaleAddSmooth_Nch+0x60>
 801db08:	eeb0 8a40 	vmov.f32	s16, s0
 801db0c:	eef0 8a60 	vmov.f32	s17, s1
 801db10:	4604      	mov	r4, r0
 801db12:	460d      	mov	r5, r1
 801db14:	eb00 0b86 	add.w	fp, r0, r6, lsl #2
 801db18:	af03      	add	r7, sp, #12
 801db1a:	f8d8 c000 	ldr.w	ip, [r8]
 801db1e:	f8cd c00c 	str.w	ip, [sp, #12]
 801db22:	462a      	mov	r2, r5
 801db24:	4620      	mov	r0, r4
 801db26:	e9cd 7900 	strd	r7, r9, [sp]
 801db2a:	eef0 0a68 	vmov.f32	s1, s17
 801db2e:	eeb0 0a48 	vmov.f32	s0, s16
 801db32:	4633      	mov	r3, r6
 801db34:	4631      	mov	r1, r6
 801db36:	3404      	adds	r4, #4
 801db38:	f7ff fe4e 	bl	801d7d8 <awe_vecScaleAddSmooth>
 801db3c:	45a3      	cmp	fp, r4
 801db3e:	f105 0504 	add.w	r5, r5, #4
 801db42:	d1ea      	bne.n	801db1a <awe_vecScaleAddSmooth_Nch+0x26>
 801db44:	9b03      	ldr	r3, [sp, #12]
 801db46:	f8c8 3000 	str.w	r3, [r8]
 801db4a:	b004      	add	sp, #16
 801db4c:	ecbd 8b02 	vpop	{d8}
 801db50:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}
 801db54:	2300      	movs	r3, #0
 801db56:	f8c8 3000 	str.w	r3, [r8]
 801db5a:	b004      	add	sp, #16
 801db5c:	ecbd 8b02 	vpop	{d8}
 801db60:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}

0801db64 <awe_vecScaleOffset>:
 801db64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db68:	b087      	sub	sp, #28
 801db6a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801db6c:	9001      	str	r0, [sp, #4]
 801db6e:	10e6      	asrs	r6, r4, #3
 801db70:	9104      	str	r1, [sp, #16]
 801db72:	9202      	str	r2, [sp, #8]
 801db74:	9305      	str	r3, [sp, #20]
 801db76:	9603      	str	r6, [sp, #12]
 801db78:	d07b      	beq.n	801dc72 <awe_vecScaleOffset+0x10e>
 801db7a:	4683      	mov	fp, r0
 801db7c:	00dd      	lsls	r5, r3, #3
 801db7e:	4608      	mov	r0, r1
 801db80:	0099      	lsls	r1, r3, #2
 801db82:	eb05 0801 	add.w	r8, r5, r1
 801db86:	4617      	mov	r7, r2
 801db88:	4411      	add	r1, r2
 801db8a:	46b4      	mov	ip, r6
 801db8c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801db90:	0082      	lsls	r2, r0, #2
 801db92:	ea4f 1e43 	mov.w	lr, r3, lsl #5
 801db96:	ea4f 1a03 	mov.w	sl, r3, lsl #4
 801db9a:	ea4f 1940 	mov.w	r9, r0, lsl #5
 801db9e:	465e      	mov	r6, fp
 801dba0:	ed96 7a00 	vldr	s14, [r6]
 801dba4:	eef0 6a60 	vmov.f32	s13, s1
 801dba8:	eee0 6a07 	vfma.f32	s13, s0, s14
 801dbac:	18b0      	adds	r0, r6, r2
 801dbae:	197b      	adds	r3, r7, r5
 801dbb0:	edd0 7a00 	vldr	s15, [r0]
 801dbb4:	eeb0 7a66 	vmov.f32	s14, s13
 801dbb8:	eef0 6a60 	vmov.f32	s13, s1
 801dbbc:	eee0 6a27 	vfma.f32	s13, s0, s15
 801dbc0:	4410      	add	r0, r2
 801dbc2:	1884      	adds	r4, r0, r2
 801dbc4:	ed87 7a00 	vstr	s14, [r7]
 801dbc8:	ed90 7a00 	vldr	s14, [r0]
 801dbcc:	edc1 6a00 	vstr	s13, [r1]
 801dbd0:	eef0 6a60 	vmov.f32	s13, s1
 801dbd4:	eee0 6a07 	vfma.f32	s13, s0, s14
 801dbd8:	eb01 0b05 	add.w	fp, r1, r5
 801dbdc:	f1bc 0c01 	subs.w	ip, ip, #1
 801dbe0:	edd4 7a00 	vldr	s15, [r4]
 801dbe4:	eeb0 7a66 	vmov.f32	s14, s13
 801dbe8:	eef0 6a60 	vmov.f32	s13, s1
 801dbec:	eee0 6a27 	vfma.f32	s13, s0, s15
 801dbf0:	4414      	add	r4, r2
 801dbf2:	eb04 0002 	add.w	r0, r4, r2
 801dbf6:	ed83 7a00 	vstr	s14, [r3]
 801dbfa:	ed94 7a00 	vldr	s14, [r4]
 801dbfe:	edcb 6a00 	vstr	s13, [fp]
 801dc02:	eef0 6a60 	vmov.f32	s13, s1
 801dc06:	eee0 6a07 	vfma.f32	s13, s0, s14
 801dc0a:	442b      	add	r3, r5
 801dc0c:	eb01 0b0a 	add.w	fp, r1, sl
 801dc10:	edd0 7a00 	vldr	s15, [r0]
 801dc14:	eeb0 7a66 	vmov.f32	s14, s13
 801dc18:	eef0 6a60 	vmov.f32	s13, s1
 801dc1c:	eee0 6a27 	vfma.f32	s13, s0, s15
 801dc20:	4410      	add	r0, r2
 801dc22:	eb00 0402 	add.w	r4, r0, r2
 801dc26:	ed83 7a00 	vstr	s14, [r3]
 801dc2a:	ed90 7a00 	vldr	s14, [r0]
 801dc2e:	edcb 6a00 	vstr	s13, [fp]
 801dc32:	eef0 6a60 	vmov.f32	s13, s1
 801dc36:	eee0 6a07 	vfma.f32	s13, s0, s14
 801dc3a:	eb01 0008 	add.w	r0, r1, r8
 801dc3e:	442b      	add	r3, r5
 801dc40:	edd4 7a00 	vldr	s15, [r4]
 801dc44:	eeb0 7a66 	vmov.f32	s14, s13
 801dc48:	eef0 6a60 	vmov.f32	s13, s1
 801dc4c:	eee0 6a27 	vfma.f32	s13, s0, s15
 801dc50:	444e      	add	r6, r9
 801dc52:	4477      	add	r7, lr
 801dc54:	ed83 7a00 	vstr	s14, [r3]
 801dc58:	4471      	add	r1, lr
 801dc5a:	edc0 6a00 	vstr	s13, [r0]
 801dc5e:	d19f      	bne.n	801dba0 <awe_vecScaleOffset+0x3c>
 801dc60:	9b03      	ldr	r3, [sp, #12]
 801dc62:	9901      	ldr	r1, [sp, #4]
 801dc64:	fb09 1203 	mla	r2, r9, r3, r1
 801dc68:	9201      	str	r2, [sp, #4]
 801dc6a:	9a02      	ldr	r2, [sp, #8]
 801dc6c:	fb0e 2303 	mla	r3, lr, r3, r2
 801dc70:	9302      	str	r3, [sp, #8]
 801dc72:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dc74:	f013 0407 	ands.w	r4, r3, #7
 801dc78:	d058      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dc7a:	9a01      	ldr	r2, [sp, #4]
 801dc7c:	9b04      	ldr	r3, [sp, #16]
 801dc7e:	edd2 7a00 	vldr	s15, [r2]
 801dc82:	eeb0 7a60 	vmov.f32	s14, s1
 801dc86:	0099      	lsls	r1, r3, #2
 801dc88:	eea0 7a27 	vfma.f32	s14, s0, s15
 801dc8c:	9b05      	ldr	r3, [sp, #20]
 801dc8e:	1850      	adds	r0, r2, r1
 801dc90:	9a02      	ldr	r2, [sp, #8]
 801dc92:	009b      	lsls	r3, r3, #2
 801dc94:	4615      	mov	r5, r2
 801dc96:	2c01      	cmp	r4, #1
 801dc98:	ed85 7a00 	vstr	s14, [r5]
 801dc9c:	441a      	add	r2, r3
 801dc9e:	d045      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dca0:	edd0 7a00 	vldr	s15, [r0]
 801dca4:	eeb0 7a60 	vmov.f32	s14, s1
 801dca8:	eea0 7a27 	vfma.f32	s14, s0, s15
 801dcac:	2c02      	cmp	r4, #2
 801dcae:	4408      	add	r0, r1
 801dcb0:	eb02 0503 	add.w	r5, r2, r3
 801dcb4:	ed82 7a00 	vstr	s14, [r2]
 801dcb8:	d038      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dcba:	edd0 7a00 	vldr	s15, [r0]
 801dcbe:	eeb0 7a60 	vmov.f32	s14, s1
 801dcc2:	eea0 7a27 	vfma.f32	s14, s0, s15
 801dcc6:	2c03      	cmp	r4, #3
 801dcc8:	4408      	add	r0, r1
 801dcca:	eb05 0203 	add.w	r2, r5, r3
 801dcce:	ed85 7a00 	vstr	s14, [r5]
 801dcd2:	d02b      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dcd4:	edd0 7a00 	vldr	s15, [r0]
 801dcd8:	eeb0 7a60 	vmov.f32	s14, s1
 801dcdc:	eea0 7a27 	vfma.f32	s14, s0, s15
 801dce0:	2c04      	cmp	r4, #4
 801dce2:	4408      	add	r0, r1
 801dce4:	eb02 0503 	add.w	r5, r2, r3
 801dce8:	ed82 7a00 	vstr	s14, [r2]
 801dcec:	d01e      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dcee:	edd0 7a00 	vldr	s15, [r0]
 801dcf2:	eeb0 7a60 	vmov.f32	s14, s1
 801dcf6:	eea7 7a80 	vfma.f32	s14, s15, s0
 801dcfa:	2c05      	cmp	r4, #5
 801dcfc:	4408      	add	r0, r1
 801dcfe:	eb05 0203 	add.w	r2, r5, r3
 801dd02:	ed85 7a00 	vstr	s14, [r5]
 801dd06:	d011      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dd08:	edd0 7a00 	vldr	s15, [r0]
 801dd0c:	eeb0 7a60 	vmov.f32	s14, s1
 801dd10:	eea0 7a27 	vfma.f32	s14, s0, s15
 801dd14:	2c06      	cmp	r4, #6
 801dd16:	4408      	add	r0, r1
 801dd18:	4413      	add	r3, r2
 801dd1a:	ed82 7a00 	vstr	s14, [r2]
 801dd1e:	d005      	beq.n	801dd2c <awe_vecScaleOffset+0x1c8>
 801dd20:	edd0 7a00 	vldr	s15, [r0]
 801dd24:	eee7 0a80 	vfma.f32	s1, s15, s0
 801dd28:	edc3 0a00 	vstr	s1, [r3]
 801dd2c:	b007      	add	sp, #28
 801dd2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd32:	bf00      	nop

0801dd34 <awe_vecScaleOffsetInt32>:
 801dd34:	b4f0      	push	{r4, r5, r6, r7}
 801dd36:	9e06      	ldr	r6, [sp, #24]
 801dd38:	2e00      	cmp	r6, #0
 801dd3a:	e9dd 7c04 	ldrd	r7, ip, [sp, #16]
 801dd3e:	dd0b      	ble.n	801dd58 <awe_vecScaleOffsetInt32+0x24>
 801dd40:	0089      	lsls	r1, r1, #2
 801dd42:	009b      	lsls	r3, r3, #2
 801dd44:	2500      	movs	r5, #0
 801dd46:	6804      	ldr	r4, [r0, #0]
 801dd48:	3501      	adds	r5, #1
 801dd4a:	fb04 c407 	mla	r4, r4, r7, ip
 801dd4e:	42ae      	cmp	r6, r5
 801dd50:	6014      	str	r4, [r2, #0]
 801dd52:	4408      	add	r0, r1
 801dd54:	441a      	add	r2, r3
 801dd56:	d1f6      	bne.n	801dd46 <awe_vecScaleOffsetInt32+0x12>
 801dd58:	bcf0      	pop	{r4, r5, r6, r7}
 801dd5a:	4770      	bx	lr

0801dd5c <awe_vecScaleSmooth>:
 801dd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd60:	ed2d 8b06 	vpush	{d8-d10}
 801dd64:	b089      	sub	sp, #36	@ 0x24
 801dd66:	9107      	str	r1, [sp, #28]
 801dd68:	4614      	mov	r4, r2
 801dd6a:	9306      	str	r3, [sp, #24]
 801dd6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dd6e:	edd3 7a00 	vldr	s15, [r3]
 801dd72:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801dd76:	ee36 5a60 	vsub.f32	s10, s12, s1
 801dd7a:	ee65 5a05 	vmul.f32	s11, s10, s10
 801dd7e:	ee20 0a80 	vmul.f32	s0, s1, s0
 801dd82:	ee35 6a06 	vadd.f32	s12, s10, s12
 801dd86:	ee26 6a00 	vmul.f32	s12, s12, s0
 801dd8a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801dd8c:	111b      	asrs	r3, r3, #4
 801dd8e:	9300      	str	r3, [sp, #0]
 801dd90:	2901      	cmp	r1, #1
 801dd92:	f000 80fc 	beq.w	801df8e <awe_vecScaleSmooth+0x232>
 801dd96:	9b00      	ldr	r3, [sp, #0]
 801dd98:	2b00      	cmp	r3, #0
 801dd9a:	f000 80da 	beq.w	801df52 <awe_vecScaleSmooth+0x1f6>
 801dd9e:	9b07      	ldr	r3, [sp, #28]
 801dda0:	0099      	lsls	r1, r3, #2
 801dda2:	9b06      	ldr	r3, [sp, #24]
 801dda4:	009b      	lsls	r3, r3, #2
 801dda6:	eb00 0b01 	add.w	fp, r0, r1
 801ddaa:	eb0b 0a01 	add.w	sl, fp, r1
 801ddae:	eb0a 0901 	add.w	r9, sl, r1
 801ddb2:	eb09 0801 	add.w	r8, r9, r1
 801ddb6:	eb08 0e01 	add.w	lr, r8, r1
 801ddba:	eb0e 0c01 	add.w	ip, lr, r1
 801ddbe:	eb0c 0701 	add.w	r7, ip, r1
 801ddc2:	187e      	adds	r6, r7, r1
 801ddc4:	1875      	adds	r5, r6, r1
 801ddc6:	186a      	adds	r2, r5, r1
 801ddc8:	9201      	str	r2, [sp, #4]
 801ddca:	440a      	add	r2, r1
 801ddcc:	9202      	str	r2, [sp, #8]
 801ddce:	440a      	add	r2, r1
 801ddd0:	9203      	str	r2, [sp, #12]
 801ddd2:	440a      	add	r2, r1
 801ddd4:	9204      	str	r2, [sp, #16]
 801ddd6:	440a      	add	r2, r1
 801ddd8:	ee65 7a27 	vmul.f32	s15, s10, s15
 801dddc:	9205      	str	r2, [sp, #20]
 801ddde:	440a      	add	r2, r1
 801dde0:	ee70 7a27 	vadd.f32	s15, s0, s15
 801dde4:	ee65 6a27 	vmul.f32	s13, s10, s15
 801dde8:	ed90 4a00 	vldr	s8, [r0]
 801ddec:	ee27 4a84 	vmul.f32	s8, s15, s8
 801ddf0:	ee70 6a26 	vadd.f32	s13, s0, s13
 801ddf4:	1850      	adds	r0, r2, r1
 801ddf6:	eddb 4a00 	vldr	s9, [fp]
 801ddfa:	ee66 4aa4 	vmul.f32	s9, s13, s9
 801ddfe:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801de02:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801de06:	ee76 7a27 	vadd.f32	s15, s12, s15
 801de0a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801de0e:	ed9a 3a00 	vldr	s6, [sl]
 801de12:	ee27 3a83 	vmul.f32	s6, s15, s6
 801de16:	edd9 3a00 	vldr	s7, [r9]
 801de1a:	ee66 3aa3 	vmul.f32	s7, s13, s7
 801de1e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 801de22:	ee65 7aa6 	vmul.f32	s15, s11, s13
 801de26:	ee36 7a07 	vadd.f32	s14, s12, s14
 801de2a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801de2e:	ed98 2a00 	vldr	s4, [r8]
 801de32:	ee27 2a02 	vmul.f32	s4, s14, s4
 801de36:	edde 2a00 	vldr	s5, [lr]
 801de3a:	ee67 2aa2 	vmul.f32	s5, s15, s5
 801de3e:	ee25 7a87 	vmul.f32	s14, s11, s14
 801de42:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801de46:	ee36 7a07 	vadd.f32	s14, s12, s14
 801de4a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801de4e:	ed9c 1a00 	vldr	s2, [ip]
 801de52:	ee27 1a01 	vmul.f32	s2, s14, s2
 801de56:	edd7 1a00 	vldr	s3, [r7]
 801de5a:	ee67 1aa1 	vmul.f32	s3, s15, s3
 801de5e:	ee25 7a87 	vmul.f32	s14, s11, s14
 801de62:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801de66:	ee36 7a07 	vadd.f32	s14, s12, s14
 801de6a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801de6e:	ed96 8a00 	vldr	s16, [r6]
 801de72:	ee27 8a08 	vmul.f32	s16, s14, s16
 801de76:	edd5 0a00 	vldr	s1, [r5]
 801de7a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801de7e:	ee25 7a87 	vmul.f32	s14, s11, s14
 801de82:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801de86:	ee36 7a07 	vadd.f32	s14, s12, s14
 801de8a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801de8e:	9d01      	ldr	r5, [sp, #4]
 801de90:	edd5 9a00 	vldr	s19, [r5]
 801de94:	ee67 9a29 	vmul.f32	s19, s14, s19
 801de98:	9d02      	ldr	r5, [sp, #8]
 801de9a:	ed95 9a00 	vldr	s18, [r5]
 801de9e:	ee27 9a89 	vmul.f32	s18, s15, s18
 801dea2:	ee25 7a87 	vmul.f32	s14, s11, s14
 801dea6:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801deaa:	ee36 7a07 	vadd.f32	s14, s12, s14
 801deae:	ee76 7a27 	vadd.f32	s15, s12, s15
 801deb2:	9d03      	ldr	r5, [sp, #12]
 801deb4:	ed95 aa00 	vldr	s20, [r5]
 801deb8:	ee27 aa0a 	vmul.f32	s20, s14, s20
 801debc:	9d04      	ldr	r5, [sp, #16]
 801debe:	edd5 8a00 	vldr	s17, [r5]
 801dec2:	ee67 8aa8 	vmul.f32	s17, s15, s17
 801dec6:	ee25 7a87 	vmul.f32	s14, s11, s14
 801deca:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801dece:	ee76 7a27 	vadd.f32	s15, s12, s15
 801ded2:	ee36 7a07 	vadd.f32	s14, s12, s14
 801ded6:	9d05      	ldr	r5, [sp, #20]
 801ded8:	edd5 6a00 	vldr	s13, [r5]
 801dedc:	ee27 7a26 	vmul.f32	s14, s14, s13
 801dee0:	edd2 6a00 	vldr	s13, [r2]
 801dee4:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801dee8:	ed84 4a00 	vstr	s8, [r4]
 801deec:	441c      	add	r4, r3
 801deee:	edc4 4a00 	vstr	s9, [r4]
 801def2:	441c      	add	r4, r3
 801def4:	ed84 3a00 	vstr	s6, [r4]
 801def8:	441c      	add	r4, r3
 801defa:	edc4 3a00 	vstr	s7, [r4]
 801defe:	441c      	add	r4, r3
 801df00:	ed84 2a00 	vstr	s4, [r4]
 801df04:	441c      	add	r4, r3
 801df06:	edc4 2a00 	vstr	s5, [r4]
 801df0a:	441c      	add	r4, r3
 801df0c:	ed84 1a00 	vstr	s2, [r4]
 801df10:	441c      	add	r4, r3
 801df12:	edc4 1a00 	vstr	s3, [r4]
 801df16:	441c      	add	r4, r3
 801df18:	ed84 8a00 	vstr	s16, [r4]
 801df1c:	441c      	add	r4, r3
 801df1e:	edc4 0a00 	vstr	s1, [r4]
 801df22:	441c      	add	r4, r3
 801df24:	edc4 9a00 	vstr	s19, [r4]
 801df28:	441c      	add	r4, r3
 801df2a:	ed84 9a00 	vstr	s18, [r4]
 801df2e:	441c      	add	r4, r3
 801df30:	ed84 aa00 	vstr	s20, [r4]
 801df34:	441c      	add	r4, r3
 801df36:	edc4 8a00 	vstr	s17, [r4]
 801df3a:	441c      	add	r4, r3
 801df3c:	ed84 7a00 	vstr	s14, [r4]
 801df40:	441c      	add	r4, r3
 801df42:	edc4 6a00 	vstr	s13, [r4]
 801df46:	441c      	add	r4, r3
 801df48:	9a00      	ldr	r2, [sp, #0]
 801df4a:	3a01      	subs	r2, #1
 801df4c:	9200      	str	r2, [sp, #0]
 801df4e:	f47f af2a 	bne.w	801dda6 <awe_vecScaleSmooth+0x4a>
 801df52:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801df54:	f013 020f 	ands.w	r2, r3, #15
 801df58:	d011      	beq.n	801df7e <awe_vecScaleSmooth+0x222>
 801df5a:	9b07      	ldr	r3, [sp, #28]
 801df5c:	0099      	lsls	r1, r3, #2
 801df5e:	9b06      	ldr	r3, [sp, #24]
 801df60:	009b      	lsls	r3, r3, #2
 801df62:	ee65 7a27 	vmul.f32	s15, s10, s15
 801df66:	ed90 7a00 	vldr	s14, [r0]
 801df6a:	ee70 7a27 	vadd.f32	s15, s0, s15
 801df6e:	4408      	add	r0, r1
 801df70:	ee27 7a27 	vmul.f32	s14, s14, s15
 801df74:	ed84 7a00 	vstr	s14, [r4]
 801df78:	441c      	add	r4, r3
 801df7a:	3a01      	subs	r2, #1
 801df7c:	d1f1      	bne.n	801df62 <awe_vecScaleSmooth+0x206>
 801df7e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801df80:	edc3 7a00 	vstr	s15, [r3]
 801df84:	b009      	add	sp, #36	@ 0x24
 801df86:	ecbd 8b06 	vpop	{d8-d10}
 801df8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df8e:	9b06      	ldr	r3, [sp, #24]
 801df90:	2b01      	cmp	r3, #1
 801df92:	f47f af00 	bne.w	801dd96 <awe_vecScaleSmooth+0x3a>
 801df96:	9900      	ldr	r1, [sp, #0]
 801df98:	2900      	cmp	r1, #0
 801df9a:	f000 80ad 	beq.w	801e0f8 <awe_vecScaleSmooth+0x39c>
 801df9e:	f100 0240 	add.w	r2, r0, #64	@ 0x40
 801dfa2:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801dfa6:	ee65 7a27 	vmul.f32	s15, s10, s15
 801dfaa:	ee30 7a27 	vadd.f32	s14, s0, s15
 801dfae:	ee65 7a07 	vmul.f32	s15, s10, s14
 801dfb2:	ee70 7a27 	vadd.f32	s15, s0, s15
 801dfb6:	ee65 6a87 	vmul.f32	s13, s11, s14
 801dfba:	ed12 4a0f 	vldr	s8, [r2, #-60]	@ 0xffffffc4
 801dfbe:	ee27 4a84 	vmul.f32	s8, s15, s8
 801dfc2:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801dfc6:	ee76 6a26 	vadd.f32	s13, s12, s13
 801dfca:	ee76 7a27 	vadd.f32	s15, s12, s15
 801dfce:	ed12 3a0e 	vldr	s6, [r2, #-56]	@ 0xffffffc8
 801dfd2:	ee26 3a83 	vmul.f32	s6, s13, s6
 801dfd6:	ed52 3a0d 	vldr	s7, [r2, #-52]	@ 0xffffffcc
 801dfda:	ee67 3aa3 	vmul.f32	s7, s15, s7
 801dfde:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801dfe2:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801dfe6:	ee76 6a26 	vadd.f32	s13, s12, s13
 801dfea:	ee76 7a27 	vadd.f32	s15, s12, s15
 801dfee:	ed12 2a0c 	vldr	s4, [r2, #-48]	@ 0xffffffd0
 801dff2:	ee26 2a82 	vmul.f32	s4, s13, s4
 801dff6:	ed52 2a0b 	vldr	s5, [r2, #-44]	@ 0xffffffd4
 801dffa:	ee67 2aa2 	vmul.f32	s5, s15, s5
 801dffe:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801e002:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801e006:	ee76 6a26 	vadd.f32	s13, s12, s13
 801e00a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801e00e:	ed12 1a0a 	vldr	s2, [r2, #-40]	@ 0xffffffd8
 801e012:	ee26 1a81 	vmul.f32	s2, s13, s2
 801e016:	ed52 1a09 	vldr	s3, [r2, #-36]	@ 0xffffffdc
 801e01a:	ee67 1aa1 	vmul.f32	s3, s15, s3
 801e01e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801e022:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801e026:	ee76 6a26 	vadd.f32	s13, s12, s13
 801e02a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801e02e:	ed12 8a08 	vldr	s16, [r2, #-32]	@ 0xffffffe0
 801e032:	ee26 8a88 	vmul.f32	s16, s13, s16
 801e036:	ed52 0a07 	vldr	s1, [r2, #-28]	@ 0xffffffe4
 801e03a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801e03e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801e042:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801e046:	ee76 6a26 	vadd.f32	s13, s12, s13
 801e04a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801e04e:	ed52 9a06 	vldr	s19, [r2, #-24]	@ 0xffffffe8
 801e052:	ee66 9aa9 	vmul.f32	s19, s13, s19
 801e056:	ed12 9a05 	vldr	s18, [r2, #-20]	@ 0xffffffec
 801e05a:	ee27 9a89 	vmul.f32	s18, s15, s18
 801e05e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801e062:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801e066:	ee76 6a26 	vadd.f32	s13, s12, s13
 801e06a:	ee76 7a27 	vadd.f32	s15, s12, s15
 801e06e:	ed52 aa04 	vldr	s21, [r2, #-16]
 801e072:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801e076:	ed12 aa03 	vldr	s20, [r2, #-12]
 801e07a:	ee27 aa8a 	vmul.f32	s20, s15, s20
 801e07e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 801e082:	ee65 7aa7 	vmul.f32	s15, s11, s15
 801e086:	ee76 7a27 	vadd.f32	s15, s12, s15
 801e08a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801e08e:	ed52 4a02 	vldr	s9, [r2, #-8]
 801e092:	ee66 6aa4 	vmul.f32	s13, s13, s9
 801e096:	ed52 8a01 	vldr	s17, [r2, #-4]
 801e09a:	ee67 8aa8 	vmul.f32	s17, s15, s17
 801e09e:	ed52 4a10 	vldr	s9, [r2, #-64]	@ 0xffffffc0
 801e0a2:	ee24 7a87 	vmul.f32	s14, s9, s14
 801e0a6:	ed03 7a10 	vstr	s14, [r3, #-64]	@ 0xffffffc0
 801e0aa:	ed03 4a0f 	vstr	s8, [r3, #-60]	@ 0xffffffc4
 801e0ae:	ed03 3a0e 	vstr	s6, [r3, #-56]	@ 0xffffffc8
 801e0b2:	ed43 3a0d 	vstr	s7, [r3, #-52]	@ 0xffffffcc
 801e0b6:	ed03 2a0c 	vstr	s4, [r3, #-48]	@ 0xffffffd0
 801e0ba:	ed43 2a0b 	vstr	s5, [r3, #-44]	@ 0xffffffd4
 801e0be:	ed03 1a0a 	vstr	s2, [r3, #-40]	@ 0xffffffd8
 801e0c2:	ed43 1a09 	vstr	s3, [r3, #-36]	@ 0xffffffdc
 801e0c6:	ed03 8a08 	vstr	s16, [r3, #-32]	@ 0xffffffe0
 801e0ca:	ed43 0a07 	vstr	s1, [r3, #-28]	@ 0xffffffe4
 801e0ce:	ed43 9a06 	vstr	s19, [r3, #-24]	@ 0xffffffe8
 801e0d2:	ed03 9a05 	vstr	s18, [r3, #-20]	@ 0xffffffec
 801e0d6:	ed43 aa04 	vstr	s21, [r3, #-16]
 801e0da:	ed03 aa03 	vstr	s20, [r3, #-12]
 801e0de:	ed43 6a02 	vstr	s13, [r3, #-8]
 801e0e2:	ed43 8a01 	vstr	s17, [r3, #-4]
 801e0e6:	3240      	adds	r2, #64	@ 0x40
 801e0e8:	3340      	adds	r3, #64	@ 0x40
 801e0ea:	3901      	subs	r1, #1
 801e0ec:	f47f af5b 	bne.w	801dfa6 <awe_vecScaleSmooth+0x24a>
 801e0f0:	9b00      	ldr	r3, [sp, #0]
 801e0f2:	019b      	lsls	r3, r3, #6
 801e0f4:	4418      	add	r0, r3
 801e0f6:	441c      	add	r4, r3
 801e0f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e0fa:	f013 030f 	ands.w	r3, r3, #15
 801e0fe:	f43f af3e 	beq.w	801df7e <awe_vecScaleSmooth+0x222>
 801e102:	ee65 7a27 	vmul.f32	s15, s10, s15
 801e106:	ecb0 7a01 	vldmia	r0!, {s14}
 801e10a:	ee70 7a27 	vadd.f32	s15, s0, s15
 801e10e:	ee27 7a27 	vmul.f32	s14, s14, s15
 801e112:	eca4 7a01 	vstmia	r4!, {s14}
 801e116:	3b01      	subs	r3, #1
 801e118:	d1f3      	bne.n	801e102 <awe_vecScaleSmooth+0x3a6>
 801e11a:	e730      	b.n	801df7e <awe_vecScaleSmooth+0x222>

0801e11c <awe_vecScaleSmooth_Nch>:
 801e11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e120:	ed2d 8b02 	vpush	{d8}
 801e124:	b085      	sub	sp, #20
 801e126:	1e17      	subs	r7, r2, #0
 801e128:	4698      	mov	r8, r3
 801e12a:	681e      	ldr	r6, [r3, #0]
 801e12c:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
 801e130:	dd1f      	ble.n	801e172 <awe_vecScaleSmooth_Nch+0x56>
 801e132:	eeb0 8a40 	vmov.f32	s16, s0
 801e136:	eef0 8a60 	vmov.f32	s17, s1
 801e13a:	4604      	mov	r4, r0
 801e13c:	460d      	mov	r5, r1
 801e13e:	eb00 0b87 	add.w	fp, r0, r7, lsl #2
 801e142:	f10d 0a0c 	add.w	sl, sp, #12
 801e146:	e001      	b.n	801e14c <awe_vecScaleSmooth_Nch+0x30>
 801e148:	f8d8 6000 	ldr.w	r6, [r8]
 801e14c:	9603      	str	r6, [sp, #12]
 801e14e:	462a      	mov	r2, r5
 801e150:	4620      	mov	r0, r4
 801e152:	e9cd a900 	strd	sl, r9, [sp]
 801e156:	eef0 0a68 	vmov.f32	s1, s17
 801e15a:	eeb0 0a48 	vmov.f32	s0, s16
 801e15e:	463b      	mov	r3, r7
 801e160:	4639      	mov	r1, r7
 801e162:	3404      	adds	r4, #4
 801e164:	f7ff fdfa 	bl	801dd5c <awe_vecScaleSmooth>
 801e168:	45a3      	cmp	fp, r4
 801e16a:	f105 0504 	add.w	r5, r5, #4
 801e16e:	d1eb      	bne.n	801e148 <awe_vecScaleSmooth_Nch+0x2c>
 801e170:	9e03      	ldr	r6, [sp, #12]
 801e172:	f8c8 6000 	str.w	r6, [r8]
 801e176:	b005      	add	sp, #20
 801e178:	ecbd 8b02 	vpop	{d8}
 801e17c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e180 <awe_vecScaleSmoothSubblock_Nch>:
 801e180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e184:	ed2d 8b02 	vpush	{d8}
 801e188:	b083      	sub	sp, #12
 801e18a:	e9dd 840f 	ldrd	r8, r4, [sp, #60]	@ 0x3c
 801e18e:	f1b8 0f00 	cmp.w	r8, #0
 801e192:	fb94 f9f8 	sdiv	r9, r4, r8
 801e196:	dd1b      	ble.n	801e1d0 <awe_vecScaleSmoothSubblock_Nch+0x50>
 801e198:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e19a:	fb02 f709 	mul.w	r7, r2, r9
 801e19e:	4605      	mov	r5, r0
 801e1a0:	460e      	mov	r6, r1
 801e1a2:	4692      	mov	sl, r2
 801e1a4:	469b      	mov	fp, r3
 801e1a6:	eeb0 8a40 	vmov.f32	s16, s0
 801e1aa:	00bf      	lsls	r7, r7, #2
 801e1ac:	eb04 0888 	add.w	r8, r4, r8, lsl #2
 801e1b0:	ecb4 0a01 	vldmia	r4!, {s0}
 801e1b4:	f8cd 9000 	str.w	r9, [sp]
 801e1b8:	4631      	mov	r1, r6
 801e1ba:	4628      	mov	r0, r5
 801e1bc:	eef0 0a48 	vmov.f32	s1, s16
 801e1c0:	465b      	mov	r3, fp
 801e1c2:	4652      	mov	r2, sl
 801e1c4:	f7ff ffaa 	bl	801e11c <awe_vecScaleSmooth_Nch>
 801e1c8:	45a0      	cmp	r8, r4
 801e1ca:	443e      	add	r6, r7
 801e1cc:	443d      	add	r5, r7
 801e1ce:	d1ef      	bne.n	801e1b0 <awe_vecScaleSmoothSubblock_Nch+0x30>
 801e1d0:	b003      	add	sp, #12
 801e1d2:	ecbd 8b02 	vpop	{d8}
 801e1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1da:	bf00      	nop

0801e1dc <awe_vecScaleSumDiff>:
 801e1dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e1e0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801e1e4:	ea4f 0ea8 	mov.w	lr, r8, asr #2
 801e1e8:	f1be 0f00 	cmp.w	lr, #0
 801e1ec:	dd5b      	ble.n	801e2a6 <awe_vecScaleSumDiff+0xca>
 801e1ee:	f100 0710 	add.w	r7, r0, #16
 801e1f2:	f101 0610 	add.w	r6, r1, #16
 801e1f6:	f102 0510 	add.w	r5, r2, #16
 801e1fa:	f103 0410 	add.w	r4, r3, #16
 801e1fe:	46f4      	mov	ip, lr
 801e200:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801e204:	ed16 4a04 	vldr	s8, [r6, #-16]
 801e208:	ed56 4a03 	vldr	s9, [r6, #-12]
 801e20c:	ed16 5a02 	vldr	s10, [r6, #-8]
 801e210:	ed16 3a01 	vldr	s6, [r6, #-4]
 801e214:	ed57 5a04 	vldr	s11, [r7, #-16]
 801e218:	ed17 6a03 	vldr	s12, [r7, #-12]
 801e21c:	ed57 6a02 	vldr	s13, [r7, #-8]
 801e220:	ed17 7a01 	vldr	s14, [r7, #-4]
 801e224:	ee75 3a84 	vadd.f32	s7, s11, s8
 801e228:	ee75 5ac4 	vsub.f32	s11, s11, s8
 801e22c:	ee36 4a24 	vadd.f32	s8, s12, s9
 801e230:	ee36 6a64 	vsub.f32	s12, s12, s9
 801e234:	ee76 4a85 	vadd.f32	s9, s13, s10
 801e238:	ee76 6ac5 	vsub.f32	s13, s13, s10
 801e23c:	ee37 5a03 	vadd.f32	s10, s14, s6
 801e240:	ee37 7a43 	vsub.f32	s14, s14, s6
 801e244:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801e248:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801e24c:	ee24 4a27 	vmul.f32	s8, s8, s15
 801e250:	ee26 6a27 	vmul.f32	s12, s12, s15
 801e254:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801e258:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801e25c:	ee25 5a27 	vmul.f32	s10, s10, s15
 801e260:	ee27 7a27 	vmul.f32	s14, s14, s15
 801e264:	f1bc 0c01 	subs.w	ip, ip, #1
 801e268:	ed45 3a04 	vstr	s7, [r5, #-16]
 801e26c:	ed05 4a03 	vstr	s8, [r5, #-12]
 801e270:	ed45 4a02 	vstr	s9, [r5, #-8]
 801e274:	ed05 5a01 	vstr	s10, [r5, #-4]
 801e278:	f106 0610 	add.w	r6, r6, #16
 801e27c:	ed44 5a04 	vstr	s11, [r4, #-16]
 801e280:	ed04 6a03 	vstr	s12, [r4, #-12]
 801e284:	ed44 6a02 	vstr	s13, [r4, #-8]
 801e288:	ed04 7a01 	vstr	s14, [r4, #-4]
 801e28c:	f107 0710 	add.w	r7, r7, #16
 801e290:	f105 0510 	add.w	r5, r5, #16
 801e294:	f104 0410 	add.w	r4, r4, #16
 801e298:	d1b4      	bne.n	801e204 <awe_vecScaleSumDiff+0x28>
 801e29a:	ea4f 140e 	mov.w	r4, lr, lsl #4
 801e29e:	4420      	add	r0, r4
 801e2a0:	4421      	add	r1, r4
 801e2a2:	4422      	add	r2, r4
 801e2a4:	4423      	add	r3, r4
 801e2a6:	f018 0803 	ands.w	r8, r8, #3
 801e2aa:	d037      	beq.n	801e31c <awe_vecScaleSumDiff+0x140>
 801e2ac:	ed91 7a00 	vldr	s14, [r1]
 801e2b0:	edd0 7a00 	vldr	s15, [r0]
 801e2b4:	ee77 6a27 	vadd.f32	s13, s14, s15
 801e2b8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801e2bc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801e2c0:	ee66 6a87 	vmul.f32	s13, s13, s14
 801e2c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 801e2c8:	f1b8 0f01 	cmp.w	r8, #1
 801e2cc:	edc2 6a00 	vstr	s13, [r2]
 801e2d0:	edc3 7a00 	vstr	s15, [r3]
 801e2d4:	d022      	beq.n	801e31c <awe_vecScaleSumDiff+0x140>
 801e2d6:	ed91 6a01 	vldr	s12, [r1, #4]
 801e2da:	edd0 7a01 	vldr	s15, [r0, #4]
 801e2de:	ee76 6a27 	vadd.f32	s13, s12, s15
 801e2e2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801e2e6:	ee66 6a87 	vmul.f32	s13, s13, s14
 801e2ea:	ee67 7a87 	vmul.f32	s15, s15, s14
 801e2ee:	f1b8 0f02 	cmp.w	r8, #2
 801e2f2:	edc2 6a01 	vstr	s13, [r2, #4]
 801e2f6:	edc3 7a01 	vstr	s15, [r3, #4]
 801e2fa:	d00f      	beq.n	801e31c <awe_vecScaleSumDiff+0x140>
 801e2fc:	ed91 6a02 	vldr	s12, [r1, #8]
 801e300:	edd0 7a02 	vldr	s15, [r0, #8]
 801e304:	ee77 6a86 	vadd.f32	s13, s15, s12
 801e308:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801e30c:	ee66 6a87 	vmul.f32	s13, s13, s14
 801e310:	ee27 7a87 	vmul.f32	s14, s15, s14
 801e314:	edc2 6a02 	vstr	s13, [r2, #8]
 801e318:	ed83 7a02 	vstr	s14, [r3, #8]
 801e31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801e320 <awe_vecScaleSumDiffInt32>:
 801e320:	b4f0      	push	{r4, r5, r6, r7}
 801e322:	f8dd c010 	ldr.w	ip, [sp, #16]
 801e326:	f1bc 0f00 	cmp.w	ip, #0
 801e32a:	dd13      	ble.n	801e354 <awe_vecScaleSumDiffInt32+0x34>
 801e32c:	2600      	movs	r6, #0
 801e32e:	f851 7b04 	ldr.w	r7, [r1], #4
 801e332:	f850 4b04 	ldr.w	r4, [r0], #4
 801e336:	19e5      	adds	r5, r4, r7
 801e338:	1be4      	subs	r4, r4, r7
 801e33a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801e33e:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 801e342:	3601      	adds	r6, #1
 801e344:	106d      	asrs	r5, r5, #1
 801e346:	1064      	asrs	r4, r4, #1
 801e348:	45b4      	cmp	ip, r6
 801e34a:	f842 5b04 	str.w	r5, [r2], #4
 801e34e:	f843 4b04 	str.w	r4, [r3], #4
 801e352:	d1ec      	bne.n	801e32e <awe_vecScaleSumDiffInt32+0xe>
 801e354:	bcf0      	pop	{r4, r5, r6, r7}
 801e356:	4770      	bx	lr

0801e358 <awe_vecSecondOrderFilterSmoothedCascadeV2Constructor>:
 801e358:	2001      	movs	r0, #1
 801e35a:	4770      	bx	lr

0801e35c <awe_vecSecondOrderFilterSmoothedCascadeV2Process>:
 801e35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e360:	b089      	sub	sp, #36	@ 0x24
 801e362:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801e366:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e368:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801e36a:	2c07      	cmp	r4, #7
 801e36c:	469a      	mov	sl, r3
 801e36e:	f340 80ce 	ble.w	801e50e <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x1b2>
 801e372:	f1a4 0508 	sub.w	r5, r4, #8
 801e376:	08eb      	lsrs	r3, r5, #3
 801e378:	f101 0920 	add.w	r9, r1, #32
 801e37c:	ea4f 1b86 	mov.w	fp, r6, lsl #6
 801e380:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 801e382:	9306      	str	r3, [sp, #24]
 801e384:	4656      	mov	r6, sl
 801e386:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801e38a:	460d      	mov	r5, r1
 801e38c:	eb09 1943 	add.w	r9, r9, r3, lsl #5
 801e390:	4690      	mov	r8, r2
 801e392:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e394:	9701      	str	r7, [sp, #4]
 801e396:	9300      	str	r3, [sp, #0]
 801e398:	4642      	mov	r2, r8
 801e39a:	4628      	mov	r0, r5
 801e39c:	e9cd a602 	strd	sl, r6, [sp, #8]
 801e3a0:	4623      	mov	r3, r4
 801e3a2:	4621      	mov	r1, r4
 801e3a4:	3520      	adds	r5, #32
 801e3a6:	f7fc fa27 	bl	801a7f8 <awe_vecBiquadCascade_8ch>
 801e3aa:	454d      	cmp	r5, r9
 801e3ac:	445f      	add	r7, fp
 801e3ae:	f108 0820 	add.w	r8, r8, #32
 801e3b2:	d1ee      	bne.n	801e392 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x36>
 801e3b4:	9d06      	ldr	r5, [sp, #24]
 801e3b6:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801e3ba:	3501      	adds	r5, #1
 801e3bc:	46b2      	mov	sl, r6
 801e3be:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801e3c0:	00ed      	lsls	r5, r5, #3
 801e3c2:	1ee3      	subs	r3, r4, #3
 801e3c4:	42ab      	cmp	r3, r5
 801e3c6:	dd3b      	ble.n	801e440 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0xe4>
 801e3c8:	9904      	ldr	r1, [sp, #16]
 801e3ca:	9615      	str	r6, [sp, #84]	@ 0x54
 801e3cc:	1f23      	subs	r3, r4, #4
 801e3ce:	1b5b      	subs	r3, r3, r5
 801e3d0:	f023 0203 	bic.w	r2, r3, #3
 801e3d4:	9306      	str	r3, [sp, #24]
 801e3d6:	460b      	mov	r3, r1
 801e3d8:	442a      	add	r2, r5
 801e3da:	3310      	adds	r3, #16
 801e3dc:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e3e0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801e3e4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e3e6:	9507      	str	r5, [sp, #28]
 801e3e8:	fb05 f909 	mul.w	r9, r5, r9
 801e3ec:	eb02 0989 	add.w	r9, r2, r9, lsl #2
 801e3f0:	9a05      	ldr	r2, [sp, #20]
 801e3f2:	ea4f 0885 	mov.w	r8, r5, lsl #2
 801e3f6:	ea4f 1b46 	mov.w	fp, r6, lsl #5
 801e3fa:	4656      	mov	r6, sl
 801e3fc:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801e400:	eb01 0708 	add.w	r7, r1, r8
 801e404:	464d      	mov	r5, r9
 801e406:	4490      	add	r8, r2
 801e408:	4699      	mov	r9, r3
 801e40a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e40c:	9501      	str	r5, [sp, #4]
 801e40e:	9300      	str	r3, [sp, #0]
 801e410:	4642      	mov	r2, r8
 801e412:	4638      	mov	r0, r7
 801e414:	e9cd a602 	strd	sl, r6, [sp, #8]
 801e418:	4623      	mov	r3, r4
 801e41a:	4621      	mov	r1, r4
 801e41c:	3710      	adds	r7, #16
 801e41e:	f7fc f9c9 	bl	801a7b4 <awe_vecBiquadCascade_4ch>
 801e422:	454f      	cmp	r7, r9
 801e424:	445d      	add	r5, fp
 801e426:	f108 0810 	add.w	r8, r8, #16
 801e42a:	d1ee      	bne.n	801e40a <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0xae>
 801e42c:	9d07      	ldr	r5, [sp, #28]
 801e42e:	9b06      	ldr	r3, [sp, #24]
 801e430:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801e434:	3504      	adds	r5, #4
 801e436:	46b2      	mov	sl, r6
 801e438:	f023 0303 	bic.w	r3, r3, #3
 801e43c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801e43e:	441d      	add	r5, r3
 801e440:	1e63      	subs	r3, r4, #1
 801e442:	42ab      	cmp	r3, r5
 801e444:	dd3b      	ble.n	801e4be <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x162>
 801e446:	9904      	ldr	r1, [sp, #16]
 801e448:	9615      	str	r6, [sp, #84]	@ 0x54
 801e44a:	1ea3      	subs	r3, r4, #2
 801e44c:	1b5b      	subs	r3, r3, r5
 801e44e:	f023 0201 	bic.w	r2, r3, #1
 801e452:	9306      	str	r3, [sp, #24]
 801e454:	460b      	mov	r3, r1
 801e456:	442a      	add	r2, r5
 801e458:	3308      	adds	r3, #8
 801e45a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e45e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801e462:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e464:	9507      	str	r5, [sp, #28]
 801e466:	fb05 f909 	mul.w	r9, r5, r9
 801e46a:	eb02 0989 	add.w	r9, r2, r9, lsl #2
 801e46e:	9a05      	ldr	r2, [sp, #20]
 801e470:	ea4f 0885 	mov.w	r8, r5, lsl #2
 801e474:	ea4f 1b06 	mov.w	fp, r6, lsl #4
 801e478:	4656      	mov	r6, sl
 801e47a:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801e47e:	eb01 0708 	add.w	r7, r1, r8
 801e482:	464d      	mov	r5, r9
 801e484:	4490      	add	r8, r2
 801e486:	4699      	mov	r9, r3
 801e488:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e48a:	9501      	str	r5, [sp, #4]
 801e48c:	9300      	str	r3, [sp, #0]
 801e48e:	4642      	mov	r2, r8
 801e490:	4638      	mov	r0, r7
 801e492:	e9cd a602 	strd	sl, r6, [sp, #8]
 801e496:	4623      	mov	r3, r4
 801e498:	4621      	mov	r1, r4
 801e49a:	3708      	adds	r7, #8
 801e49c:	f7fc f968 	bl	801a770 <awe_vecBiquadCascade_2ch>
 801e4a0:	454f      	cmp	r7, r9
 801e4a2:	445d      	add	r5, fp
 801e4a4:	f108 0808 	add.w	r8, r8, #8
 801e4a8:	d1ee      	bne.n	801e488 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x12c>
 801e4aa:	9d07      	ldr	r5, [sp, #28]
 801e4ac:	9b06      	ldr	r3, [sp, #24]
 801e4ae:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 801e4b2:	3502      	adds	r5, #2
 801e4b4:	46b2      	mov	sl, r6
 801e4b6:	f023 0301 	bic.w	r3, r3, #1
 801e4ba:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801e4bc:	441d      	add	r5, r3
 801e4be:	42ac      	cmp	r4, r5
 801e4c0:	dd22      	ble.n	801e508 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x1ac>
 801e4c2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e4c4:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e4c8:	fb05 f909 	mul.w	r9, r5, r9
 801e4cc:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 801e4d0:	9b05      	ldr	r3, [sp, #20]
 801e4d2:	00ad      	lsls	r5, r5, #2
 801e4d4:	442b      	add	r3, r5
 801e4d6:	4698      	mov	r8, r3
 801e4d8:	9b04      	ldr	r3, [sp, #16]
 801e4da:	ea4f 0bc6 	mov.w	fp, r6, lsl #3
 801e4de:	441d      	add	r5, r3
 801e4e0:	eb03 0784 	add.w	r7, r3, r4, lsl #2
 801e4e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e4e6:	f8cd 9004 	str.w	r9, [sp, #4]
 801e4ea:	9300      	str	r3, [sp, #0]
 801e4ec:	4642      	mov	r2, r8
 801e4ee:	4628      	mov	r0, r5
 801e4f0:	e9cd 6a02 	strd	r6, sl, [sp, #8]
 801e4f4:	4623      	mov	r3, r4
 801e4f6:	4621      	mov	r1, r4
 801e4f8:	3504      	adds	r5, #4
 801e4fa:	f7fb fd9f 	bl	801a03c <awe_vecBiquadCascade>
 801e4fe:	42af      	cmp	r7, r5
 801e500:	44d9      	add	r9, fp
 801e502:	f108 0804 	add.w	r8, r8, #4
 801e506:	d1ed      	bne.n	801e4e4 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x188>
 801e508:	b009      	add	sp, #36	@ 0x24
 801e50a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e50e:	2500      	movs	r5, #0
 801e510:	e757      	b.n	801e3c2 <awe_vecSecondOrderFilterSmoothedCascadeV2Process+0x66>
 801e512:	bf00      	nop

0801e514 <awe_vecSecondOrderFilterSmoothedCascadeV2Set>:
 801e514:	4770      	bx	lr
 801e516:	bf00      	nop

0801e518 <awe_vecSineGenSmoothed>:
 801e518:	b470      	push	{r4, r5, r6}
 801e51a:	109e      	asrs	r6, r3, #2
 801e51c:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 801e520:	2e00      	cmp	r6, #0
 801e522:	ee20 0a80 	vmul.f32	s0, s1, s0
 801e526:	ed2d 8b02 	vpush	{d8}
 801e52a:	ed92 7a00 	vldr	s14, [r2]
 801e52e:	edd1 7a00 	vldr	s15, [r1]
 801e532:	ee75 0a60 	vsub.f32	s1, s10, s1
 801e536:	f340 810e 	ble.w	801e756 <awe_vecSineGenSmoothed+0x23e>
 801e53a:	eddf 5aee 	vldr	s11, [pc, #952]	@ 801e8f4 <awe_vecSineGenSmoothed+0x3dc>
 801e53e:	eddf 2aee 	vldr	s5, [pc, #952]	@ 801e8f8 <awe_vecSineGenSmoothed+0x3e0>
 801e542:	ed9f 3aee 	vldr	s6, [pc, #952]	@ 801e8fc <awe_vecSineGenSmoothed+0x3e4>
 801e546:	eddf 3aee 	vldr	s7, [pc, #952]	@ 801e900 <awe_vecSineGenSmoothed+0x3e8>
 801e54a:	ed9f 4aee 	vldr	s8, [pc, #952]	@ 801e904 <awe_vecSineGenSmoothed+0x3ec>
 801e54e:	eddf 4aee 	vldr	s9, [pc, #952]	@ 801e908 <awe_vecSineGenSmoothed+0x3f0>
 801e552:	ed9f 6aee 	vldr	s12, [pc, #952]	@ 801e90c <awe_vecSineGenSmoothed+0x3f4>
 801e556:	f100 0410 	add.w	r4, r0, #16
 801e55a:	4635      	mov	r5, r6
 801e55c:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e564:	bfcc      	ite	gt
 801e566:	ee77 6ae5 	vsubgt.f32	s13, s15, s11
 801e56a:	eef0 6a67 	vmovle.f32	s13, s15
 801e56e:	ee26 2aa6 	vmul.f32	s4, s13, s13
 801e572:	eeb0 1a43 	vmov.f32	s2, s6
 801e576:	eea2 1a22 	vfma.f32	s2, s4, s5
 801e57a:	f104 0410 	add.w	r4, r4, #16
 801e57e:	eeb0 8a63 	vmov.f32	s16, s7
 801e582:	eea1 8a02 	vfma.f32	s16, s2, s4
 801e586:	ee77 7a27 	vadd.f32	s15, s14, s15
 801e58a:	eeb0 1a48 	vmov.f32	s2, s16
 801e58e:	eeb0 8a44 	vmov.f32	s16, s8
 801e592:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e596:	eef4 7ac6 	vcmpe.f32	s15, s12
 801e59a:	eeb0 1a48 	vmov.f32	s2, s16
 801e59e:	eeb0 8a64 	vmov.f32	s16, s9
 801e5a2:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e5a6:	bfc8      	it	gt
 801e5a8:	eeff 1a00 	vmovgt.f32	s3, #240	@ 0xbf800000 -1.0
 801e5ac:	eeb0 1a48 	vmov.f32	s2, s16
 801e5b0:	eeb0 8a45 	vmov.f32	s16, s10
 801e5b4:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e5b8:	bfd8      	it	le
 801e5ba:	eef7 1a00 	vmovle.f32	s3, #112	@ 0x3f800000  1.0
 801e5be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e5c2:	bfa8      	it	ge
 801e5c4:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801e5c8:	ee66 6a88 	vmul.f32	s13, s13, s16
 801e5cc:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e5d0:	ee66 6aa1 	vmul.f32	s13, s13, s3
 801e5d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e5d8:	ed44 6a08 	vstr	s13, [r4, #-32]	@ 0xffffffe0
 801e5dc:	bfcc      	ite	gt
 801e5de:	ee77 6ae5 	vsubgt.f32	s13, s15, s11
 801e5e2:	eef0 6a67 	vmovle.f32	s13, s15
 801e5e6:	ee26 2aa6 	vmul.f32	s4, s13, s13
 801e5ea:	eeb0 1a43 	vmov.f32	s2, s6
 801e5ee:	eea2 1a22 	vfma.f32	s2, s4, s5
 801e5f2:	eeb0 8a63 	vmov.f32	s16, s7
 801e5f6:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e5fa:	ee20 7a87 	vmul.f32	s14, s1, s14
 801e5fe:	eeb0 1a48 	vmov.f32	s2, s16
 801e602:	eeb0 8a44 	vmov.f32	s16, s8
 801e606:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e60a:	ee30 7a07 	vadd.f32	s14, s0, s14
 801e60e:	eeb0 1a48 	vmov.f32	s2, s16
 801e612:	eeb0 8a64 	vmov.f32	s16, s9
 801e616:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e61a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e61e:	eeb0 1a48 	vmov.f32	s2, s16
 801e622:	eeb0 8a45 	vmov.f32	s16, s10
 801e626:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e62a:	eef4 7ac6 	vcmpe.f32	s15, s12
 801e62e:	bfcc      	ite	gt
 801e630:	eeff 1a00 	vmovgt.f32	s3, #240	@ 0xbf800000 -1.0
 801e634:	eef7 1a00 	vmovle.f32	s3, #112	@ 0x3f800000  1.0
 801e638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e63c:	bfa8      	it	ge
 801e63e:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801e642:	ee66 6a88 	vmul.f32	s13, s13, s16
 801e646:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e64a:	ee66 6aa1 	vmul.f32	s13, s13, s3
 801e64e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e652:	ed44 6a07 	vstr	s13, [r4, #-28]	@ 0xffffffe4
 801e656:	bfcc      	ite	gt
 801e658:	ee77 6ae5 	vsubgt.f32	s13, s15, s11
 801e65c:	eef0 6a67 	vmovle.f32	s13, s15
 801e660:	ee26 2aa6 	vmul.f32	s4, s13, s13
 801e664:	eeb0 1a43 	vmov.f32	s2, s6
 801e668:	eea2 1a22 	vfma.f32	s2, s4, s5
 801e66c:	eeb0 8a63 	vmov.f32	s16, s7
 801e670:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e674:	ee20 7a87 	vmul.f32	s14, s1, s14
 801e678:	eeb0 1a48 	vmov.f32	s2, s16
 801e67c:	eeb0 8a44 	vmov.f32	s16, s8
 801e680:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e684:	ee30 7a07 	vadd.f32	s14, s0, s14
 801e688:	eeb0 1a48 	vmov.f32	s2, s16
 801e68c:	eeb0 8a64 	vmov.f32	s16, s9
 801e690:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e694:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e698:	eeb0 1a48 	vmov.f32	s2, s16
 801e69c:	eeb0 8a45 	vmov.f32	s16, s10
 801e6a0:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e6a4:	eef4 7ac6 	vcmpe.f32	s15, s12
 801e6a8:	bfcc      	ite	gt
 801e6aa:	eeff 1a00 	vmovgt.f32	s3, #240	@ 0xbf800000 -1.0
 801e6ae:	eef7 1a00 	vmovle.f32	s3, #112	@ 0x3f800000  1.0
 801e6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e6b6:	bfa8      	it	ge
 801e6b8:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801e6bc:	ee66 6a88 	vmul.f32	s13, s13, s16
 801e6c0:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e6c4:	ee66 6aa1 	vmul.f32	s13, s13, s3
 801e6c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e6cc:	ed44 6a06 	vstr	s13, [r4, #-24]	@ 0xffffffe8
 801e6d0:	bfcc      	ite	gt
 801e6d2:	ee77 6ae5 	vsubgt.f32	s13, s15, s11
 801e6d6:	eef0 6a67 	vmovle.f32	s13, s15
 801e6da:	ee26 2aa6 	vmul.f32	s4, s13, s13
 801e6de:	eeb0 1a43 	vmov.f32	s2, s6
 801e6e2:	eea2 1a22 	vfma.f32	s2, s4, s5
 801e6e6:	eeb0 8a63 	vmov.f32	s16, s7
 801e6ea:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e6ee:	ee20 7a87 	vmul.f32	s14, s1, s14
 801e6f2:	eeb0 1a48 	vmov.f32	s2, s16
 801e6f6:	eeb0 8a44 	vmov.f32	s16, s8
 801e6fa:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e6fe:	ee30 7a07 	vadd.f32	s14, s0, s14
 801e702:	eeb0 1a48 	vmov.f32	s2, s16
 801e706:	eeb0 8a64 	vmov.f32	s16, s9
 801e70a:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e70e:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e712:	eeb0 1a48 	vmov.f32	s2, s16
 801e716:	eeb0 8a45 	vmov.f32	s16, s10
 801e71a:	eea2 8a01 	vfma.f32	s16, s4, s2
 801e71e:	bfc8      	it	gt
 801e720:	eeff 1a00 	vmovgt.f32	s3, #240	@ 0xbf800000 -1.0
 801e724:	ee66 6a88 	vmul.f32	s13, s13, s16
 801e728:	bfd8      	it	le
 801e72a:	eef7 1a00 	vmovle.f32	s3, #112	@ 0x3f800000  1.0
 801e72e:	eef4 7ac6 	vcmpe.f32	s15, s12
 801e732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e736:	ee20 7a87 	vmul.f32	s14, s1, s14
 801e73a:	ee66 6aa1 	vmul.f32	s13, s13, s3
 801e73e:	bfa8      	it	ge
 801e740:	ee77 7ac6 	vsubge.f32	s15, s15, s12
 801e744:	3d01      	subs	r5, #1
 801e746:	ed44 6a05 	vstr	s13, [r4, #-20]	@ 0xffffffec
 801e74a:	ee30 7a07 	vadd.f32	s14, s0, s14
 801e74e:	f47f af05 	bne.w	801e55c <awe_vecSineGenSmoothed+0x44>
 801e752:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 801e756:	f013 0303 	ands.w	r3, r3, #3
 801e75a:	f000 80c2 	beq.w	801e8e2 <awe_vecSineGenSmoothed+0x3ca>
 801e75e:	eddf 6a65 	vldr	s13, [pc, #404]	@ 801e8f4 <awe_vecSineGenSmoothed+0x3dc>
 801e762:	eddf 3a66 	vldr	s7, [pc, #408]	@ 801e8fc <awe_vecSineGenSmoothed+0x3e4>
 801e766:	ed9f 4a66 	vldr	s8, [pc, #408]	@ 801e900 <awe_vecSineGenSmoothed+0x3e8>
 801e76a:	eddf 4a66 	vldr	s9, [pc, #408]	@ 801e904 <awe_vecSineGenSmoothed+0x3ec>
 801e76e:	ed9f 5a66 	vldr	s10, [pc, #408]	@ 801e908 <awe_vecSineGenSmoothed+0x3f0>
 801e772:	ed9f 3a66 	vldr	s6, [pc, #408]	@ 801e90c <awe_vecSineGenSmoothed+0x3f4>
 801e776:	eef4 7ae6 	vcmpe.f32	s15, s13
 801e77a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e77e:	bfcc      	ite	gt
 801e780:	ee37 6ae6 	vsubgt.f32	s12, s15, s13
 801e784:	eeb0 6a67 	vmovle.f32	s12, s15
 801e788:	ee66 5a06 	vmul.f32	s11, s12, s12
 801e78c:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 801e8f8 <awe_vecSineGenSmoothed+0x3e0>
 801e790:	eee5 3aa6 	vfma.f32	s7, s11, s13
 801e794:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801e798:	eea3 4aa5 	vfma.f32	s8, s7, s11
 801e79c:	bfc8      	it	gt
 801e79e:	eeff 2a00 	vmovgt.f32	s5, #240	@ 0xbf800000 -1.0
 801e7a2:	eee4 4a25 	vfma.f32	s9, s8, s11
 801e7a6:	bfd8      	it	le
 801e7a8:	eef7 2a00 	vmovle.f32	s5, #112	@ 0x3f800000  1.0
 801e7ac:	eea4 5aa5 	vfma.f32	s10, s9, s11
 801e7b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e7b4:	eee5 6a25 	vfma.f32	s13, s10, s11
 801e7b8:	eef4 7ac3 	vcmpe.f32	s15, s6
 801e7bc:	ee66 6a86 	vmul.f32	s13, s13, s12
 801e7c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e7c4:	ee66 6aa2 	vmul.f32	s13, s13, s5
 801e7c8:	bfa8      	it	ge
 801e7ca:	ee77 7ac3 	vsubge.f32	s15, s15, s6
 801e7ce:	edc0 6a00 	vstr	s13, [r0]
 801e7d2:	eef0 6a40 	vmov.f32	s13, s0
 801e7d6:	eee0 6a87 	vfma.f32	s13, s1, s14
 801e7da:	2b01      	cmp	r3, #1
 801e7dc:	eeb0 7a66 	vmov.f32	s14, s13
 801e7e0:	d07f      	beq.n	801e8e2 <awe_vecSineGenSmoothed+0x3ca>
 801e7e2:	eddf 6a44 	vldr	s13, [pc, #272]	@ 801e8f4 <awe_vecSineGenSmoothed+0x3dc>
 801e7e6:	eddf 3a45 	vldr	s7, [pc, #276]	@ 801e8fc <awe_vecSineGenSmoothed+0x3e4>
 801e7ea:	ed9f 4a45 	vldr	s8, [pc, #276]	@ 801e900 <awe_vecSineGenSmoothed+0x3e8>
 801e7ee:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801e904 <awe_vecSineGenSmoothed+0x3ec>
 801e7f2:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 801e908 <awe_vecSineGenSmoothed+0x3f0>
 801e7f6:	ed9f 3a45 	vldr	s6, [pc, #276]	@ 801e90c <awe_vecSineGenSmoothed+0x3f4>
 801e7fa:	eef4 7ae6 	vcmpe.f32	s15, s13
 801e7fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e802:	bfcc      	ite	gt
 801e804:	ee37 6ae6 	vsubgt.f32	s12, s15, s13
 801e808:	eeb0 6a67 	vmovle.f32	s12, s15
 801e80c:	ee66 5a06 	vmul.f32	s11, s12, s12
 801e810:	eddf 6a39 	vldr	s13, [pc, #228]	@ 801e8f8 <awe_vecSineGenSmoothed+0x3e0>
 801e814:	eee5 3aa6 	vfma.f32	s7, s11, s13
 801e818:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801e81c:	eea3 4aa5 	vfma.f32	s8, s7, s11
 801e820:	bfc8      	it	gt
 801e822:	eeff 2a00 	vmovgt.f32	s5, #240	@ 0xbf800000 -1.0
 801e826:	eee4 4a25 	vfma.f32	s9, s8, s11
 801e82a:	bfd8      	it	le
 801e82c:	eef7 2a00 	vmovle.f32	s5, #112	@ 0x3f800000  1.0
 801e830:	eea4 5aa5 	vfma.f32	s10, s9, s11
 801e834:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e838:	eee5 6a25 	vfma.f32	s13, s10, s11
 801e83c:	eef4 7ac3 	vcmpe.f32	s15, s6
 801e840:	ee66 6a86 	vmul.f32	s13, s13, s12
 801e844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e848:	ee66 6aa2 	vmul.f32	s13, s13, s5
 801e84c:	bfa8      	it	ge
 801e84e:	ee77 7ac3 	vsubge.f32	s15, s15, s6
 801e852:	edc0 6a01 	vstr	s13, [r0, #4]
 801e856:	eef0 6a40 	vmov.f32	s13, s0
 801e85a:	eee0 6a87 	vfma.f32	s13, s1, s14
 801e85e:	2b02      	cmp	r3, #2
 801e860:	eeb0 7a66 	vmov.f32	s14, s13
 801e864:	d03d      	beq.n	801e8e2 <awe_vecSineGenSmoothed+0x3ca>
 801e866:	eddf 6a23 	vldr	s13, [pc, #140]	@ 801e8f4 <awe_vecSineGenSmoothed+0x3dc>
 801e86a:	eddf 5a23 	vldr	s11, [pc, #140]	@ 801e8f8 <awe_vecSineGenSmoothed+0x3e0>
 801e86e:	eddf 3a23 	vldr	s7, [pc, #140]	@ 801e8fc <awe_vecSineGenSmoothed+0x3e4>
 801e872:	ed9f 4a23 	vldr	s8, [pc, #140]	@ 801e900 <awe_vecSineGenSmoothed+0x3e8>
 801e876:	eddf 4a23 	vldr	s9, [pc, #140]	@ 801e904 <awe_vecSineGenSmoothed+0x3ec>
 801e87a:	ed9f 5a23 	vldr	s10, [pc, #140]	@ 801e908 <awe_vecSineGenSmoothed+0x3f0>
 801e87e:	ed9f 3a23 	vldr	s6, [pc, #140]	@ 801e90c <awe_vecSineGenSmoothed+0x3f4>
 801e882:	eef4 7ae6 	vcmpe.f32	s15, s13
 801e886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e88a:	bfcc      	ite	gt
 801e88c:	ee77 6ae6 	vsubgt.f32	s13, s15, s13
 801e890:	eef0 6a67 	vmovle.f32	s13, s15
 801e894:	ee26 6aa6 	vmul.f32	s12, s13, s13
 801e898:	ee77 7a87 	vadd.f32	s15, s15, s14
 801e89c:	eee6 3a25 	vfma.f32	s7, s12, s11
 801e8a0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801e8a4:	eea6 4a23 	vfma.f32	s8, s12, s7
 801e8a8:	eea0 0a87 	vfma.f32	s0, s1, s14
 801e8ac:	eee6 4a04 	vfma.f32	s9, s12, s8
 801e8b0:	bfc8      	it	gt
 801e8b2:	eeff 2a00 	vmovgt.f32	s5, #240	@ 0xbf800000 -1.0
 801e8b6:	eea6 5a24 	vfma.f32	s10, s12, s9
 801e8ba:	bfd8      	it	le
 801e8bc:	eef7 2a00 	vmovle.f32	s5, #112	@ 0x3f800000  1.0
 801e8c0:	eee6 5a05 	vfma.f32	s11, s12, s10
 801e8c4:	eef4 7ac3 	vcmpe.f32	s15, s6
 801e8c8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 801e8cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8d0:	ee66 6aa2 	vmul.f32	s13, s13, s5
 801e8d4:	bfa8      	it	ge
 801e8d6:	ee77 7ac3 	vsubge.f32	s15, s15, s6
 801e8da:	edc0 6a02 	vstr	s13, [r0, #8]
 801e8de:	eeb0 7a40 	vmov.f32	s14, s0
 801e8e2:	ecbd 8b02 	vpop	{d8}
 801e8e6:	edc1 7a00 	vstr	s15, [r1]
 801e8ea:	ed82 7a00 	vstr	s14, [r2]
 801e8ee:	bc70      	pop	{r4, r5, r6}
 801e8f0:	4770      	bx	lr
 801e8f2:	bf00      	nop
 801e8f4:	40490fdb 	.word	0x40490fdb
 801e8f8:	b2cd4ca8 	.word	0xb2cd4ca8
 801e8fc:	3638b94f 	.word	0x3638b94f
 801e900:	b9500c03 	.word	0xb9500c03
 801e904:	3c088887 	.word	0x3c088887
 801e908:	be2aaaab 	.word	0xbe2aaaab
 801e90c:	40c90fdb 	.word	0x40c90fdb

0801e910 <awe_vecSmoothNCoeffArray>:
 801e910:	b31a      	cbz	r2, 801e95a <awe_vecSmoothNCoeffArray+0x4a>
 801e912:	b410      	push	{r4}
 801e914:	2300      	movs	r3, #0
 801e916:	edd0 7a00 	vldr	s15, [r0]
 801e91a:	ecb1 7a01 	vldmia	r1!, {s14}
 801e91e:	eef4 7a47 	vcmp.f32	s15, s14
 801e922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e926:	f103 0301 	add.w	r3, r3, #1
 801e92a:	d00f      	beq.n	801e94c <awe_vecSmoothNCoeffArray+0x3c>
 801e92c:	ee37 7a67 	vsub.f32	s14, s14, s15
 801e930:	eef0 6a67 	vmov.f32	s13, s15
 801e934:	eee7 6a00 	vfma.f32	s13, s14, s0
 801e938:	eef4 7a66 	vcmp.f32	s15, s13
 801e93c:	edc0 6a00 	vstr	s13, [r0]
 801e940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e944:	bf04      	itt	eq
 801e946:	f851 4c04 	ldreq.w	r4, [r1, #-4]
 801e94a:	6004      	streq	r4, [r0, #0]
 801e94c:	429a      	cmp	r2, r3
 801e94e:	f100 0004 	add.w	r0, r0, #4
 801e952:	d1e0      	bne.n	801e916 <awe_vecSmoothNCoeffArray+0x6>
 801e954:	f85d 4b04 	ldr.w	r4, [sp], #4
 801e958:	4770      	bx	lr
 801e95a:	4770      	bx	lr

0801e95c <awe_vecSoftClip>:
 801e95c:	2a00      	cmp	r2, #0
 801e95e:	dd35      	ble.n	801e9cc <awe_vecSoftClip+0x70>
 801e960:	2300      	movs	r3, #0
 801e962:	eef1 4a40 	vneg.f32	s9, s0
 801e966:	eeb0 5a00 	vmov.f32	s10, #0	@ 0x40000000  2.0
 801e96a:	e004      	b.n	801e976 <awe_vecSoftClip+0x1a>
 801e96c:	3301      	adds	r3, #1
 801e96e:	429a      	cmp	r2, r3
 801e970:	ed01 7a01 	vstr	s14, [r1, #-4]
 801e974:	d02a      	beq.n	801e9cc <awe_vecSoftClip+0x70>
 801e976:	ecb0 7a01 	vldmia	r0!, {s14}
 801e97a:	eef0 7ac7 	vabs.f32	s15, s14
 801e97e:	eef4 7ac0 	vcmpe.f32	s15, s0
 801e982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e986:	f101 0104 	add.w	r1, r1, #4
 801e98a:	d4ef      	bmi.n	801e96c <awe_vecSoftClip+0x10>
 801e98c:	eeb0 6a67 	vmov.f32	s12, s15
 801e990:	eea4 6a85 	vfma.f32	s12, s9, s10
 801e994:	3301      	adds	r3, #1
 801e996:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801e99a:	ee36 6a20 	vadd.f32	s12, s12, s1
 801e99e:	ee70 6ac0 	vsub.f32	s13, s1, s0
 801e9a2:	eec7 5a86 	vdiv.f32	s11, s15, s12
 801e9a6:	eef0 7a66 	vmov.f32	s15, s13
 801e9aa:	eef0 6a40 	vmov.f32	s13, s0
 801e9ae:	eee7 6aa5 	vfma.f32	s13, s15, s11
 801e9b2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801e9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e9ba:	eef0 7a66 	vmov.f32	s15, s13
 801e9be:	bf48      	it	mi
 801e9c0:	eef1 7a66 	vnegmi.f32	s15, s13
 801e9c4:	429a      	cmp	r2, r3
 801e9c6:	ed41 7a01 	vstr	s15, [r1, #-4]
 801e9ca:	d1d4      	bne.n	801e976 <awe_vecSoftClip+0x1a>
 801e9cc:	4770      	bx	lr
 801e9ce:	bf00      	nop

0801e9d0 <awe_vecSqrt>:
 801e9d0:	b430      	push	{r4, r5}
 801e9d2:	9d02      	ldr	r5, [sp, #8]
 801e9d4:	2d00      	cmp	r5, #0
 801e9d6:	dd0f      	ble.n	801e9f8 <awe_vecSqrt+0x28>
 801e9d8:	0089      	lsls	r1, r1, #2
 801e9da:	009b      	lsls	r3, r3, #2
 801e9dc:	2400      	movs	r4, #0
 801e9de:	edd0 7a00 	vldr	s15, [r0]
 801e9e2:	eef0 7ae7 	vabs.f32	s15, s15
 801e9e6:	eeb1 7ae7 	vsqrt.f32	s14, s15
 801e9ea:	3401      	adds	r4, #1
 801e9ec:	42a5      	cmp	r5, r4
 801e9ee:	4408      	add	r0, r1
 801e9f0:	ed82 7a00 	vstr	s14, [r2]
 801e9f4:	441a      	add	r2, r3
 801e9f6:	d1f2      	bne.n	801e9de <awe_vecSqrt+0xe>
 801e9f8:	bc30      	pop	{r4, r5}
 801e9fa:	4770      	bx	lr

0801e9fc <awe_vecSquareAdd>:
 801e9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea00:	b08d      	sub	sp, #52	@ 0x34
 801ea02:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801ea06:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801ea08:	9007      	str	r0, [sp, #28]
 801ea0a:	10e4      	asrs	r4, r4, #3
 801ea0c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ea0e:	940a      	str	r4, [sp, #40]	@ 0x28
 801ea10:	f000 8091 	beq.w	801eb36 <awe_vecSquareAdd+0x13a>
 801ea14:	009c      	lsls	r4, r3, #2
 801ea16:	4680      	mov	r8, r0
 801ea18:	1910      	adds	r0, r2, r4
 801ea1a:	460e      	mov	r6, r1
 801ea1c:	eb00 0e04 	add.w	lr, r0, r4
 801ea20:	4619      	mov	r1, r3
 801ea22:	eb0e 0c04 	add.w	ip, lr, r4
 801ea26:	00b3      	lsls	r3, r6, #2
 801ea28:	00f7      	lsls	r7, r6, #3
 801ea2a:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 801ea2e:	4635      	mov	r5, r6
 801ea30:	4693      	mov	fp, r2
 801ea32:	eb0c 0604 	add.w	r6, ip, r4
 801ea36:	18fa      	adds	r2, r7, r3
 801ea38:	0049      	lsls	r1, r1, #1
 801ea3a:	4434      	add	r4, r6
 801ea3c:	9106      	str	r1, [sp, #24]
 801ea3e:	0051      	lsls	r1, r2, #1
 801ea40:	9105      	str	r1, [sp, #20]
 801ea42:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ea44:	0129      	lsls	r1, r5, #4
 801ea46:	e9cd 6400 	strd	r6, r4, [sp]
 801ea4a:	9104      	str	r1, [sp, #16]
 801ea4c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ea4e:	9102      	str	r1, [sp, #8]
 801ea50:	ea4f 1a45 	mov.w	sl, r5, lsl #5
 801ea54:	4443      	add	r3, r8
 801ea56:	0152      	lsls	r2, r2, #5
 801ea58:	465d      	mov	r5, fp
 801ea5a:	edd8 6a00 	vldr	s13, [r8]
 801ea5e:	edd5 7a00 	vldr	s15, [r5]
 801ea62:	ed93 7a00 	vldr	s14, [r3]
 801ea66:	9c04      	ldr	r4, [sp, #16]
 801ea68:	9e06      	ldr	r6, [sp, #24]
 801ea6a:	eee6 7aa6 	vfma.f32	s15, s13, s13
 801ea6e:	eb08 0107 	add.w	r1, r8, r7
 801ea72:	eb03 0907 	add.w	r9, r3, r7
 801ea76:	eb03 0b04 	add.w	fp, r3, r4
 801ea7a:	edc5 7a00 	vstr	s15, [r5]
 801ea7e:	edd0 7a00 	vldr	s15, [r0]
 801ea82:	edd1 6a00 	vldr	s13, [r1]
 801ea86:	eee7 7a07 	vfma.f32	s15, s14, s14
 801ea8a:	4439      	add	r1, r7
 801ea8c:	19cc      	adds	r4, r1, r7
 801ea8e:	9403      	str	r4, [sp, #12]
 801ea90:	edc0 7a00 	vstr	s15, [r0]
 801ea94:	edde 7a00 	vldr	s15, [lr]
 801ea98:	ed99 7a00 	vldr	s14, [r9]
 801ea9c:	9c00      	ldr	r4, [sp, #0]
 801ea9e:	eee6 7aa6 	vfma.f32	s15, s13, s13
 801eaa2:	eb05 0906 	add.w	r9, r5, r6
 801eaa6:	44d0      	add	r8, sl
 801eaa8:	4415      	add	r5, r2
 801eaaa:	edce 7a00 	vstr	s15, [lr]
 801eaae:	eddc 7a00 	vldr	s15, [ip]
 801eab2:	edd1 6a00 	vldr	s13, [r1]
 801eab6:	9905      	ldr	r1, [sp, #20]
 801eab8:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eabc:	1859      	adds	r1, r3, r1
 801eabe:	4496      	add	lr, r2
 801eac0:	4453      	add	r3, sl
 801eac2:	edcc 7a00 	vstr	s15, [ip]
 801eac6:	edd4 7a00 	vldr	s15, [r4]
 801eaca:	9c00      	ldr	r4, [sp, #0]
 801eacc:	ed9b 7a00 	vldr	s14, [fp]
 801ead0:	eee6 7aa6 	vfma.f32	s15, s13, s13
 801ead4:	eb00 0b06 	add.w	fp, r0, r6
 801ead8:	9e01      	ldr	r6, [sp, #4]
 801eada:	edc4 7a00 	vstr	s15, [r4]
 801eade:	edd6 7a00 	vldr	s15, [r6]
 801eae2:	9c03      	ldr	r4, [sp, #12]
 801eae4:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eae8:	4494      	add	ip, r2
 801eaea:	4410      	add	r0, r2
 801eaec:	edd4 6a00 	vldr	s13, [r4]
 801eaf0:	edc6 7a00 	vstr	s15, [r6]
 801eaf4:	edd9 7a00 	vldr	s15, [r9]
 801eaf8:	9c00      	ldr	r4, [sp, #0]
 801eafa:	ed91 7a00 	vldr	s14, [r1]
 801eafe:	eee6 7aa6 	vfma.f32	s15, s13, s13
 801eb02:	4414      	add	r4, r2
 801eb04:	9400      	str	r4, [sp, #0]
 801eb06:	4634      	mov	r4, r6
 801eb08:	4414      	add	r4, r2
 801eb0a:	9401      	str	r4, [sp, #4]
 801eb0c:	edc9 7a00 	vstr	s15, [r9]
 801eb10:	eddb 7a00 	vldr	s15, [fp]
 801eb14:	9902      	ldr	r1, [sp, #8]
 801eb16:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eb1a:	3901      	subs	r1, #1
 801eb1c:	9102      	str	r1, [sp, #8]
 801eb1e:	edcb 7a00 	vstr	s15, [fp]
 801eb22:	d19a      	bne.n	801ea5a <awe_vecSquareAdd+0x5e>
 801eb24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eb26:	9807      	ldr	r0, [sp, #28]
 801eb28:	fb0a 0103 	mla	r1, sl, r3, r0
 801eb2c:	9107      	str	r1, [sp, #28]
 801eb2e:	9908      	ldr	r1, [sp, #32]
 801eb30:	fb02 1303 	mla	r3, r2, r3, r1
 801eb34:	9308      	str	r3, [sp, #32]
 801eb36:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801eb38:	f013 0407 	ands.w	r4, r3, #7
 801eb3c:	d05a      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801eb3e:	9a08      	ldr	r2, [sp, #32]
 801eb40:	9807      	ldr	r0, [sp, #28]
 801eb42:	edd2 7a00 	vldr	s15, [r2]
 801eb46:	ed90 7a00 	vldr	s14, [r0]
 801eb4a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801eb4c:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eb50:	0099      	lsls	r1, r3, #2
 801eb52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eb54:	2c01      	cmp	r4, #1
 801eb56:	ea4f 0383 	mov.w	r3, r3, lsl #2
 801eb5a:	edc2 7a00 	vstr	s15, [r2]
 801eb5e:	4408      	add	r0, r1
 801eb60:	441a      	add	r2, r3
 801eb62:	d047      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801eb64:	ed90 7a00 	vldr	s14, [r0]
 801eb68:	edd2 7a00 	vldr	s15, [r2]
 801eb6c:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eb70:	2c02      	cmp	r4, #2
 801eb72:	4408      	add	r0, r1
 801eb74:	eb02 0503 	add.w	r5, r2, r3
 801eb78:	edc2 7a00 	vstr	s15, [r2]
 801eb7c:	d03a      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801eb7e:	ed90 7a00 	vldr	s14, [r0]
 801eb82:	edd5 7a00 	vldr	s15, [r5]
 801eb86:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eb8a:	2c03      	cmp	r4, #3
 801eb8c:	4408      	add	r0, r1
 801eb8e:	eb05 0203 	add.w	r2, r5, r3
 801eb92:	edc5 7a00 	vstr	s15, [r5]
 801eb96:	d02d      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801eb98:	ed90 7a00 	vldr	s14, [r0]
 801eb9c:	edd2 7a00 	vldr	s15, [r2]
 801eba0:	eee7 7a07 	vfma.f32	s15, s14, s14
 801eba4:	2c04      	cmp	r4, #4
 801eba6:	4408      	add	r0, r1
 801eba8:	eb02 0503 	add.w	r5, r2, r3
 801ebac:	edc2 7a00 	vstr	s15, [r2]
 801ebb0:	d020      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801ebb2:	ed90 7a00 	vldr	s14, [r0]
 801ebb6:	edd5 7a00 	vldr	s15, [r5]
 801ebba:	eee7 7a07 	vfma.f32	s15, s14, s14
 801ebbe:	2c05      	cmp	r4, #5
 801ebc0:	4408      	add	r0, r1
 801ebc2:	eb05 0203 	add.w	r2, r5, r3
 801ebc6:	edc5 7a00 	vstr	s15, [r5]
 801ebca:	d013      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801ebcc:	ed90 7a00 	vldr	s14, [r0]
 801ebd0:	edd2 7a00 	vldr	s15, [r2]
 801ebd4:	eee7 7a07 	vfma.f32	s15, s14, s14
 801ebd8:	2c06      	cmp	r4, #6
 801ebda:	4408      	add	r0, r1
 801ebdc:	4413      	add	r3, r2
 801ebde:	edc2 7a00 	vstr	s15, [r2]
 801ebe2:	d007      	beq.n	801ebf4 <awe_vecSquareAdd+0x1f8>
 801ebe4:	ed90 7a00 	vldr	s14, [r0]
 801ebe8:	edd3 7a00 	vldr	s15, [r3]
 801ebec:	eee7 7a07 	vfma.f32	s15, s14, s14
 801ebf0:	edc3 7a00 	vstr	s15, [r3]
 801ebf4:	b00d      	add	sp, #52	@ 0x34
 801ebf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebfa:	bf00      	nop

0801ebfc <awe_vecSquareWaveGen>:
 801ebfc:	b570      	push	{r4, r5, r6, lr}
 801ebfe:	2a00      	cmp	r2, #0
 801ec00:	ed2d 8b06 	vpush	{d8-d10}
 801ec04:	460e      	mov	r6, r1
 801ec06:	ed91 8a00 	vldr	s16, [r1]
 801ec0a:	dd24      	ble.n	801ec56 <awe_vecSquareWaveGen+0x5a>
 801ec0c:	eddf 8a14 	vldr	s17, [pc, #80]	@ 801ec60 <awe_vecSquareWaveGen+0x64>
 801ec10:	eeb0 9a40 	vmov.f32	s18, s0
 801ec14:	4604      	mov	r4, r0
 801ec16:	eb00 0582 	add.w	r5, r0, r2, lsl #2
 801ec1a:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 801ec1e:	eeff 9a00 	vmov.f32	s19, #240	@ 0xbf800000 -1.0
 801ec22:	eeb0 0a48 	vmov.f32	s0, s16
 801ec26:	f010 f82d 	bl	802ec84 <sinf>
 801ec2a:	ee38 8a09 	vadd.f32	s16, s16, s18
 801ec2e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ec32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec36:	bfb4      	ite	lt
 801ec38:	eef0 7a69 	vmovlt.f32	s15, s19
 801ec3c:	eef0 7a4a 	vmovge.f32	s15, s20
 801ec40:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801ec44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec48:	ece4 7a01 	vstmia	r4!, {s15}
 801ec4c:	bfc8      	it	gt
 801ec4e:	ee38 8a68 	vsubgt.f32	s16, s16, s17
 801ec52:	42a5      	cmp	r5, r4
 801ec54:	d1e5      	bne.n	801ec22 <awe_vecSquareWaveGen+0x26>
 801ec56:	ed86 8a00 	vstr	s16, [r6]
 801ec5a:	ecbd 8b06 	vpop	{d8-d10}
 801ec5e:	bd70      	pop	{r4, r5, r6, pc}
 801ec60:	40c90fdb 	.word	0x40c90fdb

0801ec64 <awe_vecSubtract2x1>:
 801ec64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec68:	b08b      	sub	sp, #44	@ 0x2c
 801ec6a:	2901      	cmp	r1, #1
 801ec6c:	9307      	str	r3, [sp, #28]
 801ec6e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ec70:	9108      	str	r1, [sp, #32]
 801ec72:	ea4f 03e3 	mov.w	r3, r3, asr #3
 801ec76:	9005      	str	r0, [sp, #20]
 801ec78:	9306      	str	r3, [sp, #24]
 801ec7a:	f000 80f5 	beq.w	801ee68 <awe_vecSubtract2x1+0x204>
 801ec7e:	9b06      	ldr	r3, [sp, #24]
 801ec80:	2b00      	cmp	r3, #0
 801ec82:	f000 808c 	beq.w	801ed9e <awe_vecSubtract2x1+0x13a>
 801ec86:	9f07      	ldr	r7, [sp, #28]
 801ec88:	9908      	ldr	r1, [sp, #32]
 801ec8a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ec8c:	f8dd e050 	ldr.w	lr, [sp, #80]	@ 0x50
 801ec90:	9209      	str	r2, [sp, #36]	@ 0x24
 801ec92:	00bd      	lsls	r5, r7, #2
 801ec94:	00fe      	lsls	r6, r7, #3
 801ec96:	ea4f 1947 	mov.w	r9, r7, lsl #5
 801ec9a:	013f      	lsls	r7, r7, #4
 801ec9c:	9703      	str	r7, [sp, #12]
 801ec9e:	014f      	lsls	r7, r1, #5
 801eca0:	9702      	str	r7, [sp, #8]
 801eca2:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 801eca4:	4698      	mov	r8, r3
 801eca6:	017f      	lsls	r7, r7, #5
 801eca8:	1973      	adds	r3, r6, r5
 801ecaa:	005b      	lsls	r3, r3, #1
 801ecac:	008c      	lsls	r4, r1, #2
 801ecae:	9701      	str	r7, [sp, #4]
 801ecb0:	9903      	ldr	r1, [sp, #12]
 801ecb2:	9f05      	ldr	r7, [sp, #20]
 801ecb4:	9304      	str	r3, [sp, #16]
 801ecb6:	4415      	add	r5, r2
 801ecb8:	0080      	lsls	r0, r0, #2
 801ecba:	4694      	mov	ip, r2
 801ecbc:	ed97 6a00 	vldr	s12, [r7]
 801ecc0:	eddc 6a00 	vldr	s13, [ip]
 801ecc4:	edd5 7a00 	vldr	s15, [r5]
 801ecc8:	193b      	adds	r3, r7, r4
 801ecca:	ee76 6a66 	vsub.f32	s13, s12, s13
 801ecce:	ed93 7a00 	vldr	s14, [r3]
 801ecd2:	edce 6a00 	vstr	s13, [lr]
 801ecd6:	eb0c 0206 	add.w	r2, ip, r6
 801ecda:	4423      	add	r3, r4
 801ecdc:	ed93 6a00 	vldr	s12, [r3]
 801ece0:	edd2 6a00 	vldr	s13, [r2]
 801ece4:	ee77 7a67 	vsub.f32	s15, s14, s15
 801ece8:	eb0e 0a00 	add.w	sl, lr, r0
 801ecec:	edca 7a00 	vstr	s15, [sl]
 801ecf0:	eb05 0b06 	add.w	fp, r5, r6
 801ecf4:	ee76 6a66 	vsub.f32	s13, s12, s13
 801ecf8:	4423      	add	r3, r4
 801ecfa:	ed93 7a00 	vldr	s14, [r3]
 801ecfe:	eddb 7a00 	vldr	s15, [fp]
 801ed02:	4482      	add	sl, r0
 801ed04:	edca 6a00 	vstr	s13, [sl]
 801ed08:	4432      	add	r2, r6
 801ed0a:	4423      	add	r3, r4
 801ed0c:	ed93 6a00 	vldr	s12, [r3]
 801ed10:	edd2 6a00 	vldr	s13, [r2]
 801ed14:	ee77 7a67 	vsub.f32	s15, s14, s15
 801ed18:	4482      	add	sl, r0
 801ed1a:	edca 7a00 	vstr	s15, [sl]
 801ed1e:	ee76 6a66 	vsub.f32	s13, s12, s13
 801ed22:	4423      	add	r3, r4
 801ed24:	eb05 0b01 	add.w	fp, r5, r1
 801ed28:	ed93 7a00 	vldr	s14, [r3]
 801ed2c:	eddb 7a00 	vldr	s15, [fp]
 801ed30:	4482      	add	sl, r0
 801ed32:	edca 6a00 	vstr	s13, [sl]
 801ed36:	4432      	add	r2, r6
 801ed38:	edd2 6a00 	vldr	s13, [r2]
 801ed3c:	9a04      	ldr	r2, [sp, #16]
 801ed3e:	ee77 7a67 	vsub.f32	s15, s14, s15
 801ed42:	4423      	add	r3, r4
 801ed44:	4482      	add	sl, r0
 801ed46:	ed93 6a00 	vldr	s12, [r3]
 801ed4a:	edca 7a00 	vstr	s15, [sl]
 801ed4e:	18aa      	adds	r2, r5, r2
 801ed50:	4423      	add	r3, r4
 801ed52:	ed93 7a00 	vldr	s14, [r3]
 801ed56:	edd2 7a00 	vldr	s15, [r2]
 801ed5a:	9a02      	ldr	r2, [sp, #8]
 801ed5c:	4482      	add	sl, r0
 801ed5e:	ee76 6a66 	vsub.f32	s13, s12, s13
 801ed62:	ee77 7a67 	vsub.f32	s15, s14, s15
 801ed66:	4417      	add	r7, r2
 801ed68:	9a01      	ldr	r2, [sp, #4]
 801ed6a:	edca 6a00 	vstr	s13, [sl]
 801ed6e:	eb0a 0300 	add.w	r3, sl, r0
 801ed72:	f1b8 0801 	subs.w	r8, r8, #1
 801ed76:	44cc      	add	ip, r9
 801ed78:	4496      	add	lr, r2
 801ed7a:	444d      	add	r5, r9
 801ed7c:	edc3 7a00 	vstr	s15, [r3]
 801ed80:	d19c      	bne.n	801ecbc <awe_vecSubtract2x1+0x58>
 801ed82:	9b06      	ldr	r3, [sp, #24]
 801ed84:	9802      	ldr	r0, [sp, #8]
 801ed86:	9c05      	ldr	r4, [sp, #20]
 801ed88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ed8a:	fb00 4103 	mla	r1, r0, r3, r4
 801ed8e:	9105      	str	r1, [sp, #20]
 801ed90:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ed92:	9901      	ldr	r1, [sp, #4]
 801ed94:	fb09 2203 	mla	r2, r9, r3, r2
 801ed98:	fb01 0303 	mla	r3, r1, r3, r0
 801ed9c:	9314      	str	r3, [sp, #80]	@ 0x50
 801ed9e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801eda0:	f013 0407 	ands.w	r4, r3, #7
 801eda4:	d05d      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801eda6:	9805      	ldr	r0, [sp, #20]
 801eda8:	9b08      	ldr	r3, [sp, #32]
 801edaa:	edd0 7a00 	vldr	s15, [r0]
 801edae:	ed92 7a00 	vldr	s14, [r2]
 801edb2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801edb4:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801edb6:	0099      	lsls	r1, r3, #2
 801edb8:	9b07      	ldr	r3, [sp, #28]
 801edba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801edbe:	009b      	lsls	r3, r3, #2
 801edc0:	00ad      	lsls	r5, r5, #2
 801edc2:	2c01      	cmp	r4, #1
 801edc4:	edc6 7a00 	vstr	s15, [r6]
 801edc8:	4408      	add	r0, r1
 801edca:	441a      	add	r2, r3
 801edcc:	442e      	add	r6, r5
 801edce:	d048      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801edd0:	edd0 7a00 	vldr	s15, [r0]
 801edd4:	ed92 7a00 	vldr	s14, [r2]
 801edd8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801eddc:	2c02      	cmp	r4, #2
 801edde:	edc6 7a00 	vstr	s15, [r6]
 801ede2:	4408      	add	r0, r1
 801ede4:	441a      	add	r2, r3
 801ede6:	442e      	add	r6, r5
 801ede8:	d03b      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801edea:	edd0 7a00 	vldr	s15, [r0]
 801edee:	ed92 7a00 	vldr	s14, [r2]
 801edf2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801edf6:	2c03      	cmp	r4, #3
 801edf8:	edc6 7a00 	vstr	s15, [r6]
 801edfc:	4408      	add	r0, r1
 801edfe:	441a      	add	r2, r3
 801ee00:	442e      	add	r6, r5
 801ee02:	d02e      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ee04:	edd0 7a00 	vldr	s15, [r0]
 801ee08:	ed92 7a00 	vldr	s14, [r2]
 801ee0c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ee10:	2c04      	cmp	r4, #4
 801ee12:	edc6 7a00 	vstr	s15, [r6]
 801ee16:	4408      	add	r0, r1
 801ee18:	441a      	add	r2, r3
 801ee1a:	442e      	add	r6, r5
 801ee1c:	d021      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ee1e:	edd0 7a00 	vldr	s15, [r0]
 801ee22:	ed92 7a00 	vldr	s14, [r2]
 801ee26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ee2a:	2c05      	cmp	r4, #5
 801ee2c:	edc6 7a00 	vstr	s15, [r6]
 801ee30:	4408      	add	r0, r1
 801ee32:	441a      	add	r2, r3
 801ee34:	442e      	add	r6, r5
 801ee36:	d014      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ee38:	edd0 7a00 	vldr	s15, [r0]
 801ee3c:	ed92 7a00 	vldr	s14, [r2]
 801ee40:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ee44:	2c06      	cmp	r4, #6
 801ee46:	4408      	add	r0, r1
 801ee48:	441a      	add	r2, r3
 801ee4a:	4435      	add	r5, r6
 801ee4c:	edc6 7a00 	vstr	s15, [r6]
 801ee50:	d007      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ee52:	edd0 7a00 	vldr	s15, [r0]
 801ee56:	ed92 7a00 	vldr	s14, [r2]
 801ee5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ee5e:	edc5 7a00 	vstr	s15, [r5]
 801ee62:	b00b      	add	sp, #44	@ 0x2c
 801ee64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee68:	9b07      	ldr	r3, [sp, #28]
 801ee6a:	2b01      	cmp	r3, #1
 801ee6c:	f47f af07 	bne.w	801ec7e <awe_vecSubtract2x1+0x1a>
 801ee70:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801ee72:	2b01      	cmp	r3, #1
 801ee74:	f47f af03 	bne.w	801ec7e <awe_vecSubtract2x1+0x1a>
 801ee78:	9c06      	ldr	r4, [sp, #24]
 801ee7a:	2c00      	cmp	r4, #0
 801ee7c:	d055      	beq.n	801ef2a <awe_vecSubtract2x1+0x2c6>
 801ee7e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801ee80:	3020      	adds	r0, #32
 801ee82:	f102 0120 	add.w	r1, r2, #32
 801ee86:	3320      	adds	r3, #32
 801ee88:	ed10 0a07 	vldr	s0, [r0, #-28]	@ 0xffffffe4
 801ee8c:	ed51 0a07 	vldr	s1, [r1, #-28]	@ 0xffffffe4
 801ee90:	ed10 1a06 	vldr	s2, [r0, #-24]	@ 0xffffffe8
 801ee94:	ed51 1a06 	vldr	s3, [r1, #-24]	@ 0xffffffe8
 801ee98:	ed10 2a05 	vldr	s4, [r0, #-20]	@ 0xffffffec
 801ee9c:	ed51 2a05 	vldr	s5, [r1, #-20]	@ 0xffffffec
 801eea0:	ed10 3a04 	vldr	s6, [r0, #-16]
 801eea4:	ed51 3a04 	vldr	s7, [r1, #-16]
 801eea8:	ed10 4a03 	vldr	s8, [r0, #-12]
 801eeac:	ed51 4a03 	vldr	s9, [r1, #-12]
 801eeb0:	ed10 5a02 	vldr	s10, [r0, #-8]
 801eeb4:	ed51 5a02 	vldr	s11, [r1, #-8]
 801eeb8:	ed10 6a01 	vldr	s12, [r0, #-4]
 801eebc:	ed51 6a01 	vldr	s13, [r1, #-4]
 801eec0:	ed10 7a08 	vldr	s14, [r0, #-32]	@ 0xffffffe0
 801eec4:	ed51 7a08 	vldr	s15, [r1, #-32]	@ 0xffffffe0
 801eec8:	ee70 0a60 	vsub.f32	s1, s0, s1
 801eecc:	ee71 1a61 	vsub.f32	s3, s2, s3
 801eed0:	ee72 2a62 	vsub.f32	s5, s4, s5
 801eed4:	ee73 3a63 	vsub.f32	s7, s6, s7
 801eed8:	ee74 4a64 	vsub.f32	s9, s8, s9
 801eedc:	ee75 5a65 	vsub.f32	s11, s10, s11
 801eee0:	ee76 6a66 	vsub.f32	s13, s12, s13
 801eee4:	ee77 7a67 	vsub.f32	s15, s14, s15
 801eee8:	3c01      	subs	r4, #1
 801eeea:	ed43 0a07 	vstr	s1, [r3, #-28]	@ 0xffffffe4
 801eeee:	ed43 1a06 	vstr	s3, [r3, #-24]	@ 0xffffffe8
 801eef2:	ed43 2a05 	vstr	s5, [r3, #-20]	@ 0xffffffec
 801eef6:	ed43 3a04 	vstr	s7, [r3, #-16]
 801eefa:	ed43 4a03 	vstr	s9, [r3, #-12]
 801eefe:	ed43 5a02 	vstr	s11, [r3, #-8]
 801ef02:	ed43 6a01 	vstr	s13, [r3, #-4]
 801ef06:	ed43 7a08 	vstr	s15, [r3, #-32]	@ 0xffffffe0
 801ef0a:	f100 0020 	add.w	r0, r0, #32
 801ef0e:	f101 0120 	add.w	r1, r1, #32
 801ef12:	f103 0320 	add.w	r3, r3, #32
 801ef16:	d1b7      	bne.n	801ee88 <awe_vecSubtract2x1+0x224>
 801ef18:	9b06      	ldr	r3, [sp, #24]
 801ef1a:	9905      	ldr	r1, [sp, #20]
 801ef1c:	015b      	lsls	r3, r3, #5
 801ef1e:	4419      	add	r1, r3
 801ef20:	9105      	str	r1, [sp, #20]
 801ef22:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801ef24:	4419      	add	r1, r3
 801ef26:	441a      	add	r2, r3
 801ef28:	9114      	str	r1, [sp, #80]	@ 0x50
 801ef2a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ef2c:	f013 0307 	ands.w	r3, r3, #7
 801ef30:	d097      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ef32:	9905      	ldr	r1, [sp, #20]
 801ef34:	ed92 7a00 	vldr	s14, [r2]
 801ef38:	edd1 7a00 	vldr	s15, [r1]
 801ef3c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef3e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ef42:	2b01      	cmp	r3, #1
 801ef44:	edc0 7a00 	vstr	s15, [r0]
 801ef48:	d08b      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ef4a:	edd1 7a01 	vldr	s15, [r1, #4]
 801ef4e:	ed92 7a01 	vldr	s14, [r2, #4]
 801ef52:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ef58:	2b02      	cmp	r3, #2
 801ef5a:	edc0 7a01 	vstr	s15, [r0, #4]
 801ef5e:	d080      	beq.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ef60:	edd1 7a02 	vldr	s15, [r1, #8]
 801ef64:	ed92 7a02 	vldr	s14, [r2, #8]
 801ef68:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef6a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ef6e:	2b03      	cmp	r3, #3
 801ef70:	edc0 7a02 	vstr	s15, [r0, #8]
 801ef74:	f43f af75 	beq.w	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ef78:	edd1 7a03 	vldr	s15, [r1, #12]
 801ef7c:	ed92 7a03 	vldr	s14, [r2, #12]
 801ef80:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef82:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ef86:	2b04      	cmp	r3, #4
 801ef88:	edc0 7a03 	vstr	s15, [r0, #12]
 801ef8c:	f43f af69 	beq.w	801ee62 <awe_vecSubtract2x1+0x1fe>
 801ef90:	edd1 7a04 	vldr	s15, [r1, #16]
 801ef94:	ed92 7a04 	vldr	s14, [r2, #16]
 801ef98:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef9a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ef9e:	2b05      	cmp	r3, #5
 801efa0:	edc0 7a04 	vstr	s15, [r0, #16]
 801efa4:	f43f af5d 	beq.w	801ee62 <awe_vecSubtract2x1+0x1fe>
 801efa8:	edd1 7a05 	vldr	s15, [r1, #20]
 801efac:	ed92 7a05 	vldr	s14, [r2, #20]
 801efb0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801efb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801efb6:	2b06      	cmp	r3, #6
 801efb8:	edc0 7a05 	vstr	s15, [r0, #20]
 801efbc:	f43f af51 	beq.w	801ee62 <awe_vecSubtract2x1+0x1fe>
 801efc0:	edd1 7a06 	vldr	s15, [r1, #24]
 801efc4:	ed92 7a06 	vldr	s14, [r2, #24]
 801efc8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801efcc:	edc0 7a06 	vstr	s15, [r0, #24]
 801efd0:	e747      	b.n	801ee62 <awe_vecSubtract2x1+0x1fe>
 801efd2:	bf00      	nop

0801efd4 <awe_vecSubtract2x1Int32>:
 801efd4:	2b00      	cmp	r3, #0
 801efd6:	dd0d      	ble.n	801eff4 <awe_vecSubtract2x1Int32+0x20>
 801efd8:	b470      	push	{r4, r5, r6}
 801efda:	2500      	movs	r5, #0
 801efdc:	f850 4b04 	ldr.w	r4, [r0], #4
 801efe0:	f851 6b04 	ldr.w	r6, [r1], #4
 801efe4:	3501      	adds	r5, #1
 801efe6:	1ba4      	subs	r4, r4, r6
 801efe8:	42ab      	cmp	r3, r5
 801efea:	f842 4b04 	str.w	r4, [r2], #4
 801efee:	d1f5      	bne.n	801efdc <awe_vecSubtract2x1Int32+0x8>
 801eff0:	bc70      	pop	{r4, r5, r6}
 801eff2:	4770      	bx	lr
 801eff4:	4770      	bx	lr
 801eff6:	bf00      	nop

0801eff8 <awe_vecSumSquared>:
 801eff8:	2900      	cmp	r1, #0
 801effa:	ed9f 0a05 	vldr	s0, [pc, #20]	@ 801f010 <awe_vecSumSquared+0x18>
 801effe:	dd06      	ble.n	801f00e <awe_vecSumSquared+0x16>
 801f000:	ecf0 7a01 	vldmia	r0!, {s15}
 801f004:	3901      	subs	r1, #1
 801f006:	eea7 0aa7 	vfma.f32	s0, s15, s15
 801f00a:	d1f9      	bne.n	801f000 <awe_vecSumSquared+0x8>
 801f00c:	4770      	bx	lr
 801f00e:	4770      	bx	lr
 801f010:	00000000 	.word	0x00000000

0801f014 <awe_vecSumSquaredStride>:
 801f014:	2a00      	cmp	r2, #0
 801f016:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 801f034 <awe_vecSumSquaredStride+0x20>
 801f01a:	dd0a      	ble.n	801f032 <awe_vecSumSquaredStride+0x1e>
 801f01c:	0089      	lsls	r1, r1, #2
 801f01e:	2300      	movs	r3, #0
 801f020:	edd0 7a00 	vldr	s15, [r0]
 801f024:	3301      	adds	r3, #1
 801f026:	429a      	cmp	r2, r3
 801f028:	eea7 0aa7 	vfma.f32	s0, s15, s15
 801f02c:	4408      	add	r0, r1
 801f02e:	d1f7      	bne.n	801f020 <awe_vecSumSquaredStride+0xc>
 801f030:	4770      	bx	lr
 801f032:	4770      	bx	lr
 801f034:	00000000 	.word	0x00000000

0801f038 <awe_vecTableInterp>:
 801f038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f03c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801f040:	edd1 6a00 	vldr	s13, [r1]
 801f044:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f046:	eb01 08c2 	add.w	r8, r1, r2, lsl #3
 801f04a:	f1bc 0f00 	cmp.w	ip, #0
 801f04e:	ed98 5a00 	vldr	s10, [r8]
 801f052:	dd1e      	ble.n	801f092 <awe_vecTableInterp+0x5a>
 801f054:	f1a8 0e08 	sub.w	lr, r8, #8
 801f058:	2600      	movs	r6, #0
 801f05a:	e005      	b.n	801f068 <awe_vecTableInterp+0x30>
 801f05c:	684c      	ldr	r4, [r1, #4]
 801f05e:	f845 4c04 	str.w	r4, [r5, #-4]
 801f062:	3601      	adds	r6, #1
 801f064:	45b4      	cmp	ip, r6
 801f066:	d014      	beq.n	801f092 <awe_vecTableInterp+0x5a>
 801f068:	ecf0 7a01 	vldmia	r0!, {s15}
 801f06c:	eef4 6ae7 	vcmpe.f32	s13, s15
 801f070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f074:	f105 0504 	add.w	r5, r5, #4
 801f078:	daf0      	bge.n	801f05c <awe_vecTableInterp+0x24>
 801f07a:	eeb4 5ae7 	vcmpe.f32	s10, s15
 801f07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f082:	d808      	bhi.n	801f096 <awe_vecTableInterp+0x5e>
 801f084:	3601      	adds	r6, #1
 801f086:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801f08a:	f845 4c04 	str.w	r4, [r5, #-4]
 801f08e:	45b4      	cmp	ip, r6
 801f090:	d1ea      	bne.n	801f068 <awe_vecTableInterp+0x30>
 801f092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f096:	2a01      	cmp	r2, #1
 801f098:	dd2f      	ble.n	801f0fa <awe_vecTableInterp+0xc2>
 801f09a:	460c      	mov	r4, r1
 801f09c:	2700      	movs	r7, #0
 801f09e:	ed94 7a02 	vldr	s14, [r4, #8]
 801f0a2:	eef4 7ac7 	vcmpe.f32	s15, s14
 801f0a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0aa:	f104 0408 	add.w	r4, r4, #8
 801f0ae:	bfc8      	it	gt
 801f0b0:	3701      	addgt	r7, #1
 801f0b2:	45a6      	cmp	lr, r4
 801f0b4:	d1f3      	bne.n	801f09e <awe_vecTableInterp+0x66>
 801f0b6:	013c      	lsls	r4, r7, #4
 801f0b8:	eb03 0b04 	add.w	fp, r3, r4
 801f0bc:	f104 0a04 	add.w	sl, r4, #4
 801f0c0:	f104 0908 	add.w	r9, r4, #8
 801f0c4:	eb01 07c7 	add.w	r7, r1, r7, lsl #3
 801f0c8:	340c      	adds	r4, #12
 801f0ca:	ed97 6a00 	vldr	s12, [r7]
 801f0ce:	ed9b 7a00 	vldr	s14, [fp]
 801f0d2:	449a      	add	sl, r3
 801f0d4:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801f0d8:	edda 5a00 	vldr	s11, [sl]
 801f0dc:	eee7 5a87 	vfma.f32	s11, s15, s14
 801f0e0:	4499      	add	r9, r3
 801f0e2:	441c      	add	r4, r3
 801f0e4:	ed99 6a00 	vldr	s12, [r9]
 801f0e8:	ed94 7a00 	vldr	s14, [r4]
 801f0ec:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801f0f0:	eea6 7a27 	vfma.f32	s14, s12, s15
 801f0f4:	ed05 7a01 	vstr	s14, [r5, #-4]
 801f0f8:	e7b3      	b.n	801f062 <awe_vecTableInterp+0x2a>
 801f0fa:	469b      	mov	fp, r3
 801f0fc:	460f      	mov	r7, r1
 801f0fe:	240c      	movs	r4, #12
 801f100:	f04f 0908 	mov.w	r9, #8
 801f104:	f04f 0a04 	mov.w	sl, #4
 801f108:	e7df      	b.n	801f0ca <awe_vecTableInterp+0x92>
 801f10a:	bf00      	nop

0801f10c <awe_vecTriangleWaveGen>:
 801f10c:	2a00      	cmp	r2, #0
 801f10e:	edd1 7a00 	vldr	s15, [r1]
 801f112:	dd18      	ble.n	801f146 <awe_vecTriangleWaveGen+0x3a>
 801f114:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801f118:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801f11c:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 801f120:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 801f124:	eeb0 7ae7 	vabs.f32	s14, s15
 801f128:	ee77 7a80 	vadd.f32	s15, s15, s0
 801f12c:	ee37 7a46 	vsub.f32	s14, s14, s12
 801f130:	eef4 7ae6 	vcmpe.f32	s15, s13
 801f134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f138:	eca0 7a01 	vstmia	r0!, {s14}
 801f13c:	bfc8      	it	gt
 801f13e:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801f142:	4282      	cmp	r2, r0
 801f144:	d1ee      	bne.n	801f124 <awe_vecTriangleWaveGen+0x18>
 801f146:	edc1 7a00 	vstr	s15, [r1]
 801f14a:	4770      	bx	lr

0801f14c <awe_vecUnDb10>:
 801f14c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f14e:	1e17      	subs	r7, r2, #0
 801f150:	ed2d 8b02 	vpush	{d8}
 801f154:	dd0f      	ble.n	801f176 <awe_vecUnDb10+0x2a>
 801f156:	ed9f 8a09 	vldr	s16, [pc, #36]	@ 801f17c <awe_vecUnDb10+0x30>
 801f15a:	4605      	mov	r5, r0
 801f15c:	460e      	mov	r6, r1
 801f15e:	2400      	movs	r4, #0
 801f160:	ecb5 0a01 	vldmia	r5!, {s0}
 801f164:	ee20 0a08 	vmul.f32	s0, s0, s16
 801f168:	f00f fb48 	bl	802e7fc <expf>
 801f16c:	3401      	adds	r4, #1
 801f16e:	42a7      	cmp	r7, r4
 801f170:	eca6 0a01 	vstmia	r6!, {s0}
 801f174:	d1f4      	bne.n	801f160 <awe_vecUnDb10+0x14>
 801f176:	ecbd 8b02 	vpop	{d8}
 801f17a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f17c:	3e6bc8e3 	.word	0x3e6bc8e3

0801f180 <awe_vecUnDb10_Approx>:
 801f180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f184:	f1b2 0800 	subs.w	r8, r2, #0
 801f188:	ed2d 8b02 	vpush	{d8}
 801f18c:	dd32      	ble.n	801f1f4 <awe_vecUnDb10_Approx+0x74>
 801f18e:	4c1b      	ldr	r4, [pc, #108]	@ (801f1fc <awe_vecUnDb10_Approx+0x7c>)
 801f190:	eddf 8a1b 	vldr	s17, [pc, #108]	@ 801f200 <awe_vecUnDb10_Approx+0x80>
 801f194:	4606      	mov	r6, r0
 801f196:	460f      	mov	r7, r1
 801f198:	2500      	movs	r5, #0
 801f19a:	ecf6 7a01 	vldmia	r6!, {s15}
 801f19e:	ee27 8aa8 	vmul.f32	s16, s15, s17
 801f1a2:	3501      	adds	r5, #1
 801f1a4:	eeb0 0a48 	vmov.f32	s0, s16
 801f1a8:	f010 f8c8 	bl	802f33c <floorf>
 801f1ac:	edd4 4a00 	vldr	s9, [r4]
 801f1b0:	edd4 5a01 	vldr	s11, [r4, #4]
 801f1b4:	ed94 6a02 	vldr	s12, [r4, #8]
 801f1b8:	edd4 6a03 	vldr	s13, [r4, #12]
 801f1bc:	ed94 7a04 	vldr	s14, [r4, #16]
 801f1c0:	ed94 5a05 	vldr	s10, [r4, #20]
 801f1c4:	ee78 7a40 	vsub.f32	s15, s16, s0
 801f1c8:	eebd 4ac0 	vcvt.s32.f32	s8, s0
 801f1cc:	eee7 5aa4 	vfma.f32	s11, s15, s9
 801f1d0:	ee14 0a10 	vmov	r0, s8
 801f1d4:	eea7 6aa5 	vfma.f32	s12, s15, s11
 801f1d8:	eee7 6a86 	vfma.f32	s13, s15, s12
 801f1dc:	eea7 7aa6 	vfma.f32	s14, s15, s13
 801f1e0:	eea7 5a87 	vfma.f32	s10, s15, s14
 801f1e4:	eeb0 0a45 	vmov.f32	s0, s10
 801f1e8:	f00e fd3d 	bl	802dc66 <ldexpf>
 801f1ec:	45a8      	cmp	r8, r5
 801f1ee:	eca7 0a01 	vstmia	r7!, {s0}
 801f1f2:	d1d2      	bne.n	801f19a <awe_vecUnDb10_Approx+0x1a>
 801f1f4:	ecbd 8b02 	vpop	{d8}
 801f1f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f1fc:	20000060 	.word	0x20000060
 801f200:	3eaa152d 	.word	0x3eaa152d

0801f204 <awe_vecUnDb20>:
 801f204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f206:	1e17      	subs	r7, r2, #0
 801f208:	ed2d 8b02 	vpush	{d8}
 801f20c:	dd0f      	ble.n	801f22e <awe_vecUnDb20+0x2a>
 801f20e:	ed9f 8a09 	vldr	s16, [pc, #36]	@ 801f234 <awe_vecUnDb20+0x30>
 801f212:	4605      	mov	r5, r0
 801f214:	460e      	mov	r6, r1
 801f216:	2400      	movs	r4, #0
 801f218:	ecb5 0a01 	vldmia	r5!, {s0}
 801f21c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801f220:	f00f faec 	bl	802e7fc <expf>
 801f224:	3401      	adds	r4, #1
 801f226:	42a7      	cmp	r7, r4
 801f228:	eca6 0a01 	vstmia	r6!, {s0}
 801f22c:	d1f4      	bne.n	801f218 <awe_vecUnDb20+0x14>
 801f22e:	ecbd 8b02 	vpop	{d8}
 801f232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f234:	3debc8e3 	.word	0x3debc8e3

0801f238 <awe_vecUnDb20_Approx>:
 801f238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f23c:	f1b2 0800 	subs.w	r8, r2, #0
 801f240:	ed2d 8b02 	vpush	{d8}
 801f244:	dd32      	ble.n	801f2ac <awe_vecUnDb20_Approx+0x74>
 801f246:	4c1b      	ldr	r4, [pc, #108]	@ (801f2b4 <awe_vecUnDb20_Approx+0x7c>)
 801f248:	eddf 8a1b 	vldr	s17, [pc, #108]	@ 801f2b8 <awe_vecUnDb20_Approx+0x80>
 801f24c:	4606      	mov	r6, r0
 801f24e:	460f      	mov	r7, r1
 801f250:	2500      	movs	r5, #0
 801f252:	ecf6 7a01 	vldmia	r6!, {s15}
 801f256:	ee27 8aa8 	vmul.f32	s16, s15, s17
 801f25a:	3501      	adds	r5, #1
 801f25c:	eeb0 0a48 	vmov.f32	s0, s16
 801f260:	f010 f86c 	bl	802f33c <floorf>
 801f264:	edd4 4a00 	vldr	s9, [r4]
 801f268:	edd4 5a01 	vldr	s11, [r4, #4]
 801f26c:	ed94 6a02 	vldr	s12, [r4, #8]
 801f270:	edd4 6a03 	vldr	s13, [r4, #12]
 801f274:	ed94 7a04 	vldr	s14, [r4, #16]
 801f278:	ed94 5a05 	vldr	s10, [r4, #20]
 801f27c:	ee78 7a40 	vsub.f32	s15, s16, s0
 801f280:	eebd 4ac0 	vcvt.s32.f32	s8, s0
 801f284:	eee7 5aa4 	vfma.f32	s11, s15, s9
 801f288:	ee14 0a10 	vmov	r0, s8
 801f28c:	eea7 6aa5 	vfma.f32	s12, s15, s11
 801f290:	eee7 6a86 	vfma.f32	s13, s15, s12
 801f294:	eea7 7aa6 	vfma.f32	s14, s15, s13
 801f298:	eea7 5a87 	vfma.f32	s10, s15, s14
 801f29c:	eeb0 0a45 	vmov.f32	s0, s10
 801f2a0:	f00e fce1 	bl	802dc66 <ldexpf>
 801f2a4:	45a8      	cmp	r8, r5
 801f2a6:	eca7 0a01 	vstmia	r7!, {s0}
 801f2aa:	d1d2      	bne.n	801f252 <awe_vecUnDb20_Approx+0x1a>
 801f2ac:	ecbd 8b02 	vpop	{d8}
 801f2b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f2b4:	20000060 	.word	0x20000060
 801f2b8:	3e2a152d 	.word	0x3e2a152d

0801f2bc <awe_vecWithinRange>:
 801f2bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f2be:	f8dd c014 	ldr.w	ip, [sp, #20]
 801f2c2:	2a01      	cmp	r2, #1
 801f2c4:	ea4f 0eac 	mov.w	lr, ip, asr #2
 801f2c8:	f340 8095 	ble.w	801f3f6 <awe_vecWithinRange+0x13a>
 801f2cc:	f1be 0f00 	cmp.w	lr, #0
 801f2d0:	f340 8141 	ble.w	801f556 <awe_vecWithinRange+0x29a>
 801f2d4:	f101 0510 	add.w	r5, r1, #16
 801f2d8:	f100 0410 	add.w	r4, r0, #16
 801f2dc:	4676      	mov	r6, lr
 801f2de:	2201      	movs	r2, #1
 801f2e0:	e03a      	b.n	801f358 <awe_vecWithinRange+0x9c>
 801f2e2:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f2e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2ea:	d43c      	bmi.n	801f366 <awe_vecWithinRange+0xaa>
 801f2ec:	2701      	movs	r7, #1
 801f2ee:	ed54 7a03 	vldr	s15, [r4, #-12]
 801f2f2:	f845 7c10 	str.w	r7, [r5, #-16]
 801f2f6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f2fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2fe:	dc77      	bgt.n	801f3f0 <awe_vecWithinRange+0x134>
 801f300:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f308:	d472      	bmi.n	801f3f0 <awe_vecWithinRange+0x134>
 801f30a:	2701      	movs	r7, #1
 801f30c:	ed54 7a02 	vldr	s15, [r4, #-8]
 801f310:	f845 7c0c 	str.w	r7, [r5, #-12]
 801f314:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f31c:	dc65      	bgt.n	801f3ea <awe_vecWithinRange+0x12e>
 801f31e:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f326:	d460      	bmi.n	801f3ea <awe_vecWithinRange+0x12e>
 801f328:	2701      	movs	r7, #1
 801f32a:	ed54 7a01 	vldr	s15, [r4, #-4]
 801f32e:	f845 7c08 	str.w	r7, [r5, #-8]
 801f332:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f33a:	dc17      	bgt.n	801f36c <awe_vecWithinRange+0xb0>
 801f33c:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f344:	d412      	bmi.n	801f36c <awe_vecWithinRange+0xb0>
 801f346:	2701      	movs	r7, #1
 801f348:	3e01      	subs	r6, #1
 801f34a:	f845 7c04 	str.w	r7, [r5, #-4]
 801f34e:	f104 0410 	add.w	r4, r4, #16
 801f352:	f105 0510 	add.w	r5, r5, #16
 801f356:	d013      	beq.n	801f380 <awe_vecWithinRange+0xc4>
 801f358:	ed54 7a04 	vldr	s15, [r4, #-16]
 801f35c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f364:	ddbd      	ble.n	801f2e2 <awe_vecWithinRange+0x26>
 801f366:	2200      	movs	r2, #0
 801f368:	4617      	mov	r7, r2
 801f36a:	e7c0      	b.n	801f2ee <awe_vecWithinRange+0x32>
 801f36c:	2200      	movs	r2, #0
 801f36e:	4617      	mov	r7, r2
 801f370:	3e01      	subs	r6, #1
 801f372:	f845 7c04 	str.w	r7, [r5, #-4]
 801f376:	f104 0410 	add.w	r4, r4, #16
 801f37a:	f105 0510 	add.w	r5, r5, #16
 801f37e:	d1eb      	bne.n	801f358 <awe_vecWithinRange+0x9c>
 801f380:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
 801f384:	4471      	add	r1, lr
 801f386:	4470      	add	r0, lr
 801f388:	f01c 0c03 	ands.w	ip, ip, #3
 801f38c:	d02b      	beq.n	801f3e6 <awe_vecWithinRange+0x12a>
 801f38e:	edd0 7a00 	vldr	s15, [r0]
 801f392:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f39a:	dc05      	bgt.n	801f3a8 <awe_vecWithinRange+0xec>
 801f39c:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f3a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3a4:	f140 80d3 	bpl.w	801f54e <awe_vecWithinRange+0x292>
 801f3a8:	2200      	movs	r2, #0
 801f3aa:	4614      	mov	r4, r2
 801f3ac:	f1bc 0f01 	cmp.w	ip, #1
 801f3b0:	600c      	str	r4, [r1, #0]
 801f3b2:	d018      	beq.n	801f3e6 <awe_vecWithinRange+0x12a>
 801f3b4:	edd0 7a01 	vldr	s15, [r0, #4]
 801f3b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f3bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3c0:	f340 80b3 	ble.w	801f52a <awe_vecWithinRange+0x26e>
 801f3c4:	2200      	movs	r2, #0
 801f3c6:	4614      	mov	r4, r2
 801f3c8:	f1bc 0f02 	cmp.w	ip, #2
 801f3cc:	604c      	str	r4, [r1, #4]
 801f3ce:	d00a      	beq.n	801f3e6 <awe_vecWithinRange+0x12a>
 801f3d0:	edd0 7a02 	vldr	s15, [r0, #8]
 801f3d4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f3d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3dc:	f340 80ad 	ble.w	801f53a <awe_vecWithinRange+0x27e>
 801f3e0:	2200      	movs	r2, #0
 801f3e2:	4610      	mov	r0, r2
 801f3e4:	6088      	str	r0, [r1, #8]
 801f3e6:	601a      	str	r2, [r3, #0]
 801f3e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f3ea:	2200      	movs	r2, #0
 801f3ec:	4617      	mov	r7, r2
 801f3ee:	e79c      	b.n	801f32a <awe_vecWithinRange+0x6e>
 801f3f0:	2200      	movs	r2, #0
 801f3f2:	4617      	mov	r7, r2
 801f3f4:	e78a      	b.n	801f30c <awe_vecWithinRange+0x50>
 801f3f6:	f1be 0f00 	cmp.w	lr, #0
 801f3fa:	f340 80b0 	ble.w	801f55e <awe_vecWithinRange+0x2a2>
 801f3fe:	f100 0510 	add.w	r5, r0, #16
 801f402:	4676      	mov	r6, lr
 801f404:	2401      	movs	r4, #1
 801f406:	e030      	b.n	801f46a <awe_vecWithinRange+0x1ae>
 801f408:	eef4 0a67 	vcmp.f32	s1, s15
 801f40c:	ed55 7a03 	vldr	s15, [r5, #-12]
 801f410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f414:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f418:	bf48      	it	mi
 801f41a:	2400      	movmi	r4, #0
 801f41c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f420:	dc33      	bgt.n	801f48a <awe_vecWithinRange+0x1ce>
 801f422:	eef4 0a67 	vcmp.f32	s1, s15
 801f426:	ed55 7a02 	vldr	s15, [r5, #-8]
 801f42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f42e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f432:	bf48      	it	mi
 801f434:	2400      	movmi	r4, #0
 801f436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f43a:	dc2f      	bgt.n	801f49c <awe_vecWithinRange+0x1e0>
 801f43c:	eef4 0a67 	vcmp.f32	s1, s15
 801f440:	ed55 7a01 	vldr	s15, [r5, #-4]
 801f444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f448:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f44c:	bf48      	it	mi
 801f44e:	2400      	movmi	r4, #0
 801f450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f454:	dc2b      	bgt.n	801f4ae <awe_vecWithinRange+0x1f2>
 801f456:	eef4 0a67 	vcmp.f32	s1, s15
 801f45a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f45e:	bf48      	it	mi
 801f460:	2400      	movmi	r4, #0
 801f462:	3e01      	subs	r6, #1
 801f464:	f105 0510 	add.w	r5, r5, #16
 801f468:	d027      	beq.n	801f4ba <awe_vecWithinRange+0x1fe>
 801f46a:	ed55 7a04 	vldr	s15, [r5, #-16]
 801f46e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f476:	ddc7      	ble.n	801f408 <awe_vecWithinRange+0x14c>
 801f478:	ed55 7a03 	vldr	s15, [r5, #-12]
 801f47c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f484:	f04f 0400 	mov.w	r4, #0
 801f488:	ddcb      	ble.n	801f422 <awe_vecWithinRange+0x166>
 801f48a:	ed55 7a02 	vldr	s15, [r5, #-8]
 801f48e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f496:	f04f 0400 	mov.w	r4, #0
 801f49a:	ddcf      	ble.n	801f43c <awe_vecWithinRange+0x180>
 801f49c:	ed55 7a01 	vldr	s15, [r5, #-4]
 801f4a0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f4a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4a8:	f04f 0400 	mov.w	r4, #0
 801f4ac:	ddd3      	ble.n	801f456 <awe_vecWithinRange+0x19a>
 801f4ae:	3e01      	subs	r6, #1
 801f4b0:	f04f 0400 	mov.w	r4, #0
 801f4b4:	f105 0510 	add.w	r5, r5, #16
 801f4b8:	d1d7      	bne.n	801f46a <awe_vecWithinRange+0x1ae>
 801f4ba:	eb00 100e 	add.w	r0, r0, lr, lsl #4
 801f4be:	f01c 0c03 	ands.w	ip, ip, #3
 801f4c2:	d02c      	beq.n	801f51e <awe_vecWithinRange+0x262>
 801f4c4:	edd0 7a00 	vldr	s15, [r0]
 801f4c8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4d0:	dc3b      	bgt.n	801f54a <awe_vecWithinRange+0x28e>
 801f4d2:	eef4 0a67 	vcmp.f32	s1, s15
 801f4d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4da:	bf48      	it	mi
 801f4dc:	2400      	movmi	r4, #0
 801f4de:	f1bc 0f01 	cmp.w	ip, #1
 801f4e2:	d01c      	beq.n	801f51e <awe_vecWithinRange+0x262>
 801f4e4:	edd0 7a01 	vldr	s15, [r0, #4]
 801f4e8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4f0:	dc2f      	bgt.n	801f552 <awe_vecWithinRange+0x296>
 801f4f2:	eef4 0a67 	vcmp.f32	s1, s15
 801f4f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4fa:	bf48      	it	mi
 801f4fc:	2400      	movmi	r4, #0
 801f4fe:	f1bc 0f02 	cmp.w	ip, #2
 801f502:	d00c      	beq.n	801f51e <awe_vecWithinRange+0x262>
 801f504:	edd0 7a02 	vldr	s15, [r0, #8]
 801f508:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f50c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f510:	dc23      	bgt.n	801f55a <awe_vecWithinRange+0x29e>
 801f512:	eef4 0a67 	vcmp.f32	s1, s15
 801f516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f51a:	bf48      	it	mi
 801f51c:	2400      	movmi	r4, #0
 801f51e:	2a01      	cmp	r2, #1
 801f520:	601c      	str	r4, [r3, #0]
 801f522:	f47f af61 	bne.w	801f3e8 <awe_vecWithinRange+0x12c>
 801f526:	600c      	str	r4, [r1, #0]
 801f528:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f52a:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f52e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f532:	f53f af47 	bmi.w	801f3c4 <awe_vecWithinRange+0x108>
 801f536:	2401      	movs	r4, #1
 801f538:	e746      	b.n	801f3c8 <awe_vecWithinRange+0x10c>
 801f53a:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f53e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f542:	f53f af4d 	bmi.w	801f3e0 <awe_vecWithinRange+0x124>
 801f546:	2001      	movs	r0, #1
 801f548:	e74c      	b.n	801f3e4 <awe_vecWithinRange+0x128>
 801f54a:	2400      	movs	r4, #0
 801f54c:	e7c7      	b.n	801f4de <awe_vecWithinRange+0x222>
 801f54e:	2401      	movs	r4, #1
 801f550:	e72c      	b.n	801f3ac <awe_vecWithinRange+0xf0>
 801f552:	2400      	movs	r4, #0
 801f554:	e7d3      	b.n	801f4fe <awe_vecWithinRange+0x242>
 801f556:	2201      	movs	r2, #1
 801f558:	e716      	b.n	801f388 <awe_vecWithinRange+0xcc>
 801f55a:	2400      	movs	r4, #0
 801f55c:	e7df      	b.n	801f51e <awe_vecWithinRange+0x262>
 801f55e:	2401      	movs	r4, #1
 801f560:	e7ad      	b.n	801f4be <awe_vecWithinRange+0x202>
 801f562:	bf00      	nop

0801f564 <awe_vecXor2x1>:
 801f564:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f566:	9f07      	ldr	r7, [sp, #28]
 801f568:	9d05      	ldr	r5, [sp, #20]
 801f56a:	2f00      	cmp	r7, #0
 801f56c:	dd10      	ble.n	801f590 <awe_vecXor2x1+0x2c>
 801f56e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801f572:	9b06      	ldr	r3, [sp, #24]
 801f574:	0089      	lsls	r1, r1, #2
 801f576:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801f57a:	2600      	movs	r6, #0
 801f57c:	6804      	ldr	r4, [r0, #0]
 801f57e:	6813      	ldr	r3, [r2, #0]
 801f580:	3601      	adds	r6, #1
 801f582:	405c      	eors	r4, r3
 801f584:	42b7      	cmp	r7, r6
 801f586:	602c      	str	r4, [r5, #0]
 801f588:	4408      	add	r0, r1
 801f58a:	4472      	add	r2, lr
 801f58c:	4465      	add	r5, ip
 801f58e:	d1f5      	bne.n	801f57c <awe_vecXor2x1+0x18>
 801f590:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f592:	bf00      	nop

0801f594 <awe_fwGetHeapCount>:
 801f594:	6943      	ldr	r3, [r0, #20]
 801f596:	b11b      	cbz	r3, 801f5a0 <awe_fwGetHeapCount+0xc>
 801f598:	6883      	ldr	r3, [r0, #8]
 801f59a:	b10b      	cbz	r3, 801f5a0 <awe_fwGetHeapCount+0xc>
 801f59c:	2004      	movs	r0, #4
 801f59e:	4770      	bx	lr
 801f5a0:	6983      	ldr	r3, [r0, #24]
 801f5a2:	b12b      	cbz	r3, 801f5b0 <awe_fwGetHeapCount+0x1c>
 801f5a4:	68c3      	ldr	r3, [r0, #12]
 801f5a6:	2b00      	cmp	r3, #0
 801f5a8:	bf14      	ite	ne
 801f5aa:	2004      	movne	r0, #4
 801f5ac:	2002      	moveq	r0, #2
 801f5ae:	4770      	bx	lr
 801f5b0:	2002      	movs	r0, #2
 801f5b2:	4770      	bx	lr

0801f5b4 <awe_fwGetHeapSize>:
 801f5b4:	6903      	ldr	r3, [r0, #16]
 801f5b6:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
 801f5ba:	1a9b      	subs	r3, r3, r2
 801f5bc:	600b      	str	r3, [r1, #0]
 801f5be:	6903      	ldr	r3, [r0, #16]
 801f5c0:	60cb      	str	r3, [r1, #12]
 801f5c2:	6943      	ldr	r3, [r0, #20]
 801f5c4:	b410      	push	{r4}
 801f5c6:	b19b      	cbz	r3, 801f5f0 <awe_fwGetHeapSize+0x3c>
 801f5c8:	6884      	ldr	r4, [r0, #8]
 801f5ca:	6982      	ldr	r2, [r0, #24]
 801f5cc:	b18c      	cbz	r4, 801f5f2 <awe_fwGetHeapSize+0x3e>
 801f5ce:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
 801f5d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f5d6:	1a9b      	subs	r3, r3, r2
 801f5d8:	604b      	str	r3, [r1, #4]
 801f5da:	6983      	ldr	r3, [r0, #24]
 801f5dc:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
 801f5e0:	1a9b      	subs	r3, r3, r2
 801f5e2:	608b      	str	r3, [r1, #8]
 801f5e4:	6943      	ldr	r3, [r0, #20]
 801f5e6:	610b      	str	r3, [r1, #16]
 801f5e8:	6983      	ldr	r3, [r0, #24]
 801f5ea:	614b      	str	r3, [r1, #20]
 801f5ec:	2000      	movs	r0, #0
 801f5ee:	4770      	bx	lr
 801f5f0:	6982      	ldr	r2, [r0, #24]
 801f5f2:	b112      	cbz	r2, 801f5fa <awe_fwGetHeapSize+0x46>
 801f5f4:	68c2      	ldr	r2, [r0, #12]
 801f5f6:	2a00      	cmp	r2, #0
 801f5f8:	d1e9      	bne.n	801f5ce <awe_fwGetHeapSize+0x1a>
 801f5fa:	2300      	movs	r3, #0
 801f5fc:	2000      	movs	r0, #0
 801f5fe:	e9c1 3301 	strd	r3, r3, [r1, #4]
 801f602:	e9c1 3304 	strd	r3, r3, [r1, #16]
 801f606:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f60a:	4770      	bx	lr

0801f60c <awe_fwGetSharedHeapSize>:
 801f60c:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801f60e:	b1b3      	cbz	r3, 801f63e <awe_fwGetSharedHeapSize+0x32>
 801f610:	b570      	push	{r4, r5, r6, lr}
 801f612:	6a46      	ldr	r6, [r0, #36]	@ 0x24
 801f614:	4604      	mov	r4, r0
 801f616:	460d      	mov	r5, r1
 801f618:	b11e      	cbz	r6, 801f622 <awe_fwGetSharedHeapSize+0x16>
 801f61a:	4619      	mov	r1, r3
 801f61c:	2207      	movs	r2, #7
 801f61e:	47b0      	blx	r6
 801f620:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f622:	6819      	ldr	r1, [r3, #0]
 801f624:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 801f626:	1a52      	subs	r2, r2, r1
 801f628:	602a      	str	r2, [r5, #0]
 801f62a:	6999      	ldr	r1, [r3, #24]
 801f62c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 801f62e:	681b      	ldr	r3, [r3, #0]
 801f630:	1ad2      	subs	r2, r2, r3
 801f632:	1a52      	subs	r2, r2, r1
 801f634:	602a      	str	r2, [r5, #0]
 801f636:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 801f638:	606b      	str	r3, [r5, #4]
 801f63a:	2000      	movs	r0, #0
 801f63c:	bd70      	pop	{r4, r5, r6, pc}
 801f63e:	e9c1 3300 	strd	r3, r3, [r1]
 801f642:	2000      	movs	r0, #0
 801f644:	4770      	bx	lr
 801f646:	bf00      	nop

0801f648 <awe_fwGetHeapAlignment>:
 801f648:	f8d0 0520 	ldr.w	r0, [r0, #1312]	@ 0x520
 801f64c:	4770      	bx	lr
 801f64e:	bf00      	nop

0801f650 <awe_fwInitHeapAlignment>:
 801f650:	f8d0 2520 	ldr.w	r2, [r0, #1312]	@ 0x520
 801f654:	b172      	cbz	r2, 801f674 <awe_fwInitHeapAlignment+0x24>
 801f656:	1e53      	subs	r3, r2, #1
 801f658:	2bfe      	cmp	r3, #254	@ 0xfe
 801f65a:	d81b      	bhi.n	801f694 <awe_fwInitHeapAlignment+0x44>
 801f65c:	4013      	ands	r3, r2
 801f65e:	d119      	bne.n	801f694 <awe_fwInitHeapAlignment+0x44>
 801f660:	f8d0 10b0 	ldr.w	r1, [r0, #176]	@ 0xb0
 801f664:	f421 21ff 	bic.w	r1, r1, #522240	@ 0x7f800
 801f668:	ea41 22c2 	orr.w	r2, r1, r2, lsl #11
 801f66c:	f8c0 20b0 	str.w	r2, [r0, #176]	@ 0xb0
 801f670:	4618      	mov	r0, r3
 801f672:	4770      	bx	lr
 801f674:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
 801f678:	f423 23ff 	bic.w	r3, r3, #522240	@ 0x7f800
 801f67c:	b410      	push	{r4}
 801f67e:	f443 6100 	orr.w	r1, r3, #2048	@ 0x800
 801f682:	2401      	movs	r4, #1
 801f684:	f8c0 4520 	str.w	r4, [r0, #1312]	@ 0x520
 801f688:	f8c0 10b0 	str.w	r1, [r0, #176]	@ 0xb0
 801f68c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f690:	4610      	mov	r0, r2
 801f692:	4770      	bx	lr
 801f694:	f06f 0370 	mvn.w	r3, #112	@ 0x70
 801f698:	e7ea      	b.n	801f670 <awe_fwInitHeapAlignment+0x20>
 801f69a:	bf00      	nop

0801f69c <awe_fwMalloc>:
 801f69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6a0:	4b83      	ldr	r3, [pc, #524]	@ (801f8b0 <awe_fwMalloc+0x214>)
 801f6a2:	681c      	ldr	r4, [r3, #0]
 801f6a4:	b083      	sub	sp, #12
 801f6a6:	4690      	mov	r8, r2
 801f6a8:	2c00      	cmp	r4, #0
 801f6aa:	f000 80df 	beq.w	801f86c <awe_fwMalloc+0x1d0>
 801f6ae:	f8d4 3520 	ldr.w	r3, [r4, #1312]	@ 0x520
 801f6b2:	f8d4 e004 	ldr.w	lr, [r4, #4]
 801f6b6:	009b      	lsls	r3, r3, #2
 801f6b8:	1e5a      	subs	r2, r3, #1
 801f6ba:	4606      	mov	r6, r0
 801f6bc:	469c      	mov	ip, r3
 801f6be:	9201      	str	r2, [sp, #4]
 801f6c0:	f04f 0900 	mov.w	r9, #0
 801f6c4:	f8c8 9000 	str.w	r9, [r8]
 801f6c8:	f1be 0f00 	cmp.w	lr, #0
 801f6cc:	d04c      	beq.n	801f768 <awe_fwMalloc+0xcc>
 801f6ce:	b93b      	cbnz	r3, 801f6e0 <awe_fwMalloc+0x44>
 801f6d0:	f06f 0370 	mvn.w	r3, #112	@ 0x70
 801f6d4:	f8c8 3000 	str.w	r3, [r8]
 801f6d8:	2000      	movs	r0, #0
 801f6da:	b003      	add	sp, #12
 801f6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f6e0:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 801f6e4:	1d35      	adds	r5, r6, #4
 801f6e6:	f1bc 0f04 	cmp.w	ip, #4
 801f6ea:	bf88      	it	hi
 801f6ec:	4465      	addhi	r5, ip
 801f6ee:	b98a      	cbnz	r2, 801f714 <awe_fwMalloc+0x78>
 801f6f0:	b1c8      	cbz	r0, 801f726 <awe_fwMalloc+0x8a>
 801f6f2:	68e7      	ldr	r7, [r4, #12]
 801f6f4:	b1bf      	cbz	r7, 801f726 <awe_fwMalloc+0x8a>
 801f6f6:	f001 0a07 	and.w	sl, r1, #7
 801f6fa:	3503      	adds	r5, #3
 801f6fc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f700:	3603      	adds	r6, #3
 801f702:	08af      	lsrs	r7, r5, #2
 801f704:	f1ba 0f03 	cmp.w	sl, #3
 801f708:	f200 8096 	bhi.w	801f838 <awe_fwMalloc+0x19c>
 801f70c:	e8df f00a 	tbb	[pc, sl]
 801f710:	67333ec7 	.word	0x67333ec7
 801f714:	f8d4 a008 	ldr.w	sl, [r4, #8]
 801f718:	b110      	cbz	r0, 801f720 <awe_fwMalloc+0x84>
 801f71a:	68e7      	ldr	r7, [r4, #12]
 801f71c:	2f00      	cmp	r7, #0
 801f71e:	d1ea      	bne.n	801f6f6 <awe_fwMalloc+0x5a>
 801f720:	f1ba 0f00 	cmp.w	sl, #0
 801f724:	d1e7      	bne.n	801f6f6 <awe_fwMalloc+0x5a>
 801f726:	3503      	adds	r5, #3
 801f728:	2904      	cmp	r1, #4
 801f72a:	f106 0603 	add.w	r6, r6, #3
 801f72e:	ea4f 0795 	mov.w	r7, r5, lsr #2
 801f732:	d054      	beq.n	801f7de <awe_fwMalloc+0x142>
 801f734:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 801f738:	6923      	ldr	r3, [r4, #16]
 801f73a:	1a1b      	subs	r3, r3, r0
 801f73c:	429f      	cmp	r7, r3
 801f73e:	f080 8090 	bcs.w	801f862 <awe_fwMalloc+0x1c6>
 801f742:	eb0e 0380 	add.w	r3, lr, r0, lsl #2
 801f746:	f025 0203 	bic.w	r2, r5, #3
 801f74a:	4618      	mov	r0, r3
 801f74c:	2100      	movs	r1, #0
 801f74e:	f00e fa01 	bl	802db54 <memset>
 801f752:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801f756:	443a      	add	r2, r7
 801f758:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 801f75c:	9a01      	ldr	r2, [sp, #4]
 801f75e:	4210      	tst	r0, r2
 801f760:	4603      	mov	r3, r0
 801f762:	d12a      	bne.n	801f7ba <awe_fwMalloc+0x11e>
 801f764:	4618      	mov	r0, r3
 801f766:	e030      	b.n	801f7ca <awe_fwMalloc+0x12e>
 801f768:	f06f 0241 	mvn.w	r2, #65	@ 0x41
 801f76c:	f8c8 2000 	str.w	r2, [r8]
 801f770:	2b00      	cmp	r3, #0
 801f772:	d0ad      	beq.n	801f6d0 <awe_fwMalloc+0x34>
 801f774:	e7b0      	b.n	801f6d8 <awe_fwMalloc+0x3c>
 801f776:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 801f77a:	1a12      	subs	r2, r2, r0
 801f77c:	4297      	cmp	r7, r2
 801f77e:	d37a      	bcc.n	801f876 <awe_fwMalloc+0x1da>
 801f780:	0909      	lsrs	r1, r1, #4
 801f782:	078a      	lsls	r2, r1, #30
 801f784:	d06d      	beq.n	801f862 <awe_fwMalloc+0x1c6>
 801f786:	f026 0603 	bic.w	r6, r6, #3
 801f78a:	e79b      	b.n	801f6c4 <awe_fwMalloc+0x28>
 801f78c:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801f790:	1a80      	subs	r0, r0, r2
 801f792:	4287      	cmp	r7, r0
 801f794:	d2f4      	bcs.n	801f780 <awe_fwMalloc+0xe4>
 801f796:	68e3      	ldr	r3, [r4, #12]
 801f798:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801f79c:	4618      	mov	r0, r3
 801f79e:	f025 0203 	bic.w	r2, r5, #3
 801f7a2:	2100      	movs	r1, #0
 801f7a4:	f00e f9d6 	bl	802db54 <memset>
 801f7a8:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801f7ac:	443a      	add	r2, r7
 801f7ae:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 801f7b2:	9a01      	ldr	r2, [sp, #4]
 801f7b4:	4210      	tst	r0, r2
 801f7b6:	4603      	mov	r3, r0
 801f7b8:	d0d4      	beq.n	801f764 <awe_fwMalloc+0xc8>
 801f7ba:	431a      	orrs	r2, r3
 801f7bc:	4610      	mov	r0, r2
 801f7be:	3001      	adds	r0, #1
 801f7c0:	4283      	cmp	r3, r0
 801f7c2:	d002      	beq.n	801f7ca <awe_fwMalloc+0x12e>
 801f7c4:	4a3b      	ldr	r2, [pc, #236]	@ (801f8b4 <awe_fwMalloc+0x218>)
 801f7c6:	f840 2c04 	str.w	r2, [r0, #-4]
 801f7ca:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f7ce:	3f01      	subs	r7, #1
 801f7d0:	f026 0603 	bic.w	r6, r6, #3
 801f7d4:	4a37      	ldr	r2, [pc, #220]	@ (801f8b4 <awe_fwMalloc+0x218>)
 801f7d6:	5182      	str	r2, [r0, r6]
 801f7d8:	f843 2027 	str.w	r2, [r3, r7, lsl #2]
 801f7dc:	e77d      	b.n	801f6da <awe_fwMalloc+0x3e>
 801f7de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801f7e0:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801f7e2:	b11b      	cbz	r3, 801f7ec <awe_fwMalloc+0x150>
 801f7e4:	2207      	movs	r2, #7
 801f7e6:	4620      	mov	r0, r4
 801f7e8:	4798      	blx	r3
 801f7ea:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801f7ec:	698a      	ldr	r2, [r1, #24]
 801f7ee:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 801f7f0:	6808      	ldr	r0, [r1, #0]
 801f7f2:	1a1b      	subs	r3, r3, r0
 801f7f4:	1a9b      	subs	r3, r3, r2
 801f7f6:	42bb      	cmp	r3, r7
 801f7f8:	d933      	bls.n	801f862 <awe_fwMalloc+0x1c6>
 801f7fa:	680b      	ldr	r3, [r1, #0]
 801f7fc:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 801f800:	f025 0203 	bic.w	r2, r5, #3
 801f804:	2100      	movs	r1, #0
 801f806:	4640      	mov	r0, r8
 801f808:	f00e f9a4 	bl	802db54 <memset>
 801f80c:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801f80e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f810:	680b      	ldr	r3, [r1, #0]
 801f812:	443b      	add	r3, r7
 801f814:	600b      	str	r3, [r1, #0]
 801f816:	b115      	cbz	r5, 801f81e <awe_fwMalloc+0x182>
 801f818:	4620      	mov	r0, r4
 801f81a:	2201      	movs	r2, #1
 801f81c:	47a8      	blx	r5
 801f81e:	9b01      	ldr	r3, [sp, #4]
 801f820:	ea18 0f03 	tst.w	r8, r3
 801f824:	d010      	beq.n	801f848 <awe_fwMalloc+0x1ac>
 801f826:	ea48 0003 	orr.w	r0, r8, r3
 801f82a:	3001      	adds	r0, #1
 801f82c:	4580      	cmp	r8, r0
 801f82e:	d00c      	beq.n	801f84a <awe_fwMalloc+0x1ae>
 801f830:	4b20      	ldr	r3, [pc, #128]	@ (801f8b4 <awe_fwMalloc+0x218>)
 801f832:	f840 3c04 	str.w	r3, [r0, #-4]
 801f836:	e008      	b.n	801f84a <awe_fwMalloc+0x1ae>
 801f838:	f04f 33ff 	mov.w	r3, #4294967295
 801f83c:	2000      	movs	r0, #0
 801f83e:	f8c8 3000 	str.w	r3, [r8]
 801f842:	b003      	add	sp, #12
 801f844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f848:	4640      	mov	r0, r8
 801f84a:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f84e:	4b19      	ldr	r3, [pc, #100]	@ (801f8b4 <awe_fwMalloc+0x218>)
 801f850:	3f01      	subs	r7, #1
 801f852:	f026 0603 	bic.w	r6, r6, #3
 801f856:	5183      	str	r3, [r0, r6]
 801f858:	f848 3027 	str.w	r3, [r8, r7, lsl #2]
 801f85c:	b003      	add	sp, #12
 801f85e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f862:	f06f 0301 	mvn.w	r3, #1
 801f866:	f8c8 3000 	str.w	r3, [r8]
 801f86a:	e735      	b.n	801f6d8 <awe_fwMalloc+0x3c>
 801f86c:	f06f 0312 	mvn.w	r3, #18
 801f870:	4620      	mov	r0, r4
 801f872:	6013      	str	r3, [r2, #0]
 801f874:	e731      	b.n	801f6da <awe_fwMalloc+0x3e>
 801f876:	68a3      	ldr	r3, [r4, #8]
 801f878:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 801f87c:	f025 0203 	bic.w	r2, r5, #3
 801f880:	4618      	mov	r0, r3
 801f882:	2100      	movs	r1, #0
 801f884:	f00e f966 	bl	802db54 <memset>
 801f888:	f8d4 208c 	ldr.w	r2, [r4, #140]	@ 0x8c
 801f88c:	443a      	add	r2, r7
 801f88e:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 801f892:	9a01      	ldr	r2, [sp, #4]
 801f894:	4210      	tst	r0, r2
 801f896:	4603      	mov	r3, r0
 801f898:	d18f      	bne.n	801f7ba <awe_fwMalloc+0x11e>
 801f89a:	4618      	mov	r0, r3
 801f89c:	e795      	b.n	801f7ca <awe_fwMalloc+0x12e>
 801f89e:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 801f8a2:	6922      	ldr	r2, [r4, #16]
 801f8a4:	1a12      	subs	r2, r2, r0
 801f8a6:	4297      	cmp	r7, r2
 801f8a8:	f4bf af6a 	bcs.w	801f780 <awe_fwMalloc+0xe4>
 801f8ac:	e749      	b.n	801f742 <awe_fwMalloc+0xa6>
 801f8ae:	bf00      	nop
 801f8b0:	20000ac0 	.word	0x20000ac0
 801f8b4:	deadbeef 	.word	0xdeadbeef

0801f8b8 <awe_fwMallocInst>:
 801f8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8bc:	4604      	mov	r4, r0
 801f8be:	f8d0 0520 	ldr.w	r0, [r0, #1312]	@ 0x520
 801f8c2:	b083      	sub	sp, #12
 801f8c4:	0080      	lsls	r0, r0, #2
 801f8c6:	460e      	mov	r6, r1
 801f8c8:	4698      	mov	r8, r3
 801f8ca:	6861      	ldr	r1, [r4, #4]
 801f8cc:	1e43      	subs	r3, r0, #1
 801f8ce:	4684      	mov	ip, r0
 801f8d0:	9301      	str	r3, [sp, #4]
 801f8d2:	f04f 0900 	mov.w	r9, #0
 801f8d6:	f8c8 9000 	str.w	r9, [r8]
 801f8da:	2900      	cmp	r1, #0
 801f8dc:	d050      	beq.n	801f980 <awe_fwMallocInst+0xc8>
 801f8de:	b938      	cbnz	r0, 801f8f0 <awe_fwMallocInst+0x38>
 801f8e0:	f06f 0370 	mvn.w	r3, #112	@ 0x70
 801f8e4:	f8c8 3000 	str.w	r3, [r8]
 801f8e8:	2000      	movs	r0, #0
 801f8ea:	b003      	add	sp, #12
 801f8ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8f0:	e9d4 3e05 	ldrd	r3, lr, [r4, #20]
 801f8f4:	1d35      	adds	r5, r6, #4
 801f8f6:	f1bc 0f04 	cmp.w	ip, #4
 801f8fa:	bf88      	it	hi
 801f8fc:	4465      	addhi	r5, ip
 801f8fe:	b993      	cbnz	r3, 801f926 <awe_fwMallocInst+0x6e>
 801f900:	f1be 0f00 	cmp.w	lr, #0
 801f904:	d01a      	beq.n	801f93c <awe_fwMallocInst+0x84>
 801f906:	68e7      	ldr	r7, [r4, #12]
 801f908:	b1c7      	cbz	r7, 801f93c <awe_fwMallocInst+0x84>
 801f90a:	f002 0a07 	and.w	sl, r2, #7
 801f90e:	3503      	adds	r5, #3
 801f910:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f914:	3603      	adds	r6, #3
 801f916:	08af      	lsrs	r7, r5, #2
 801f918:	f1ba 0f03 	cmp.w	sl, #3
 801f91c:	d86d      	bhi.n	801f9fa <awe_fwMallocInst+0x142>
 801f91e:	e8df f00a 	tbb	[pc, sl]
 801f922:	42c7      	.short	0x42c7
 801f924:	7436      	.short	0x7436
 801f926:	f8d4 a008 	ldr.w	sl, [r4, #8]
 801f92a:	f1be 0f00 	cmp.w	lr, #0
 801f92e:	d002      	beq.n	801f936 <awe_fwMallocInst+0x7e>
 801f930:	68e7      	ldr	r7, [r4, #12]
 801f932:	2f00      	cmp	r7, #0
 801f934:	d1e9      	bne.n	801f90a <awe_fwMallocInst+0x52>
 801f936:	f1ba 0f00 	cmp.w	sl, #0
 801f93a:	d1e6      	bne.n	801f90a <awe_fwMallocInst+0x52>
 801f93c:	3503      	adds	r5, #3
 801f93e:	2a04      	cmp	r2, #4
 801f940:	f106 0603 	add.w	r6, r6, #3
 801f944:	ea4f 0795 	mov.w	r7, r5, lsr #2
 801f948:	d05f      	beq.n	801fa0a <awe_fwMallocInst+0x152>
 801f94a:	f8d4 e090 	ldr.w	lr, [r4, #144]	@ 0x90
 801f94e:	6923      	ldr	r3, [r4, #16]
 801f950:	eba3 030e 	sub.w	r3, r3, lr
 801f954:	429f      	cmp	r7, r3
 801f956:	f080 8092 	bcs.w	801fa7e <awe_fwMallocInst+0x1c6>
 801f95a:	eb01 038e 	add.w	r3, r1, lr, lsl #2
 801f95e:	f025 0203 	bic.w	r2, r5, #3
 801f962:	4618      	mov	r0, r3
 801f964:	2100      	movs	r1, #0
 801f966:	f00e f8f5 	bl	802db54 <memset>
 801f96a:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801f96e:	443a      	add	r2, r7
 801f970:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 801f974:	9a01      	ldr	r2, [sp, #4]
 801f976:	4210      	tst	r0, r2
 801f978:	4603      	mov	r3, r0
 801f97a:	d12c      	bne.n	801f9d6 <awe_fwMallocInst+0x11e>
 801f97c:	4618      	mov	r0, r3
 801f97e:	e032      	b.n	801f9e6 <awe_fwMallocInst+0x12e>
 801f980:	f06f 0341 	mvn.w	r3, #65	@ 0x41
 801f984:	f8c8 3000 	str.w	r3, [r8]
 801f988:	2800      	cmp	r0, #0
 801f98a:	d0a9      	beq.n	801f8e0 <awe_fwMallocInst+0x28>
 801f98c:	e7ac      	b.n	801f8e8 <awe_fwMallocInst+0x30>
 801f98e:	f8d4 e08c 	ldr.w	lr, [r4, #140]	@ 0x8c
 801f992:	eba3 030e 	sub.w	r3, r3, lr
 801f996:	429f      	cmp	r7, r3
 801f998:	d376      	bcc.n	801fa88 <awe_fwMallocInst+0x1d0>
 801f99a:	0912      	lsrs	r2, r2, #4
 801f99c:	0793      	lsls	r3, r2, #30
 801f99e:	d06e      	beq.n	801fa7e <awe_fwMallocInst+0x1c6>
 801f9a0:	f026 0603 	bic.w	r6, r6, #3
 801f9a4:	e797      	b.n	801f8d6 <awe_fwMallocInst+0x1e>
 801f9a6:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 801f9aa:	ebae 0e03 	sub.w	lr, lr, r3
 801f9ae:	4577      	cmp	r7, lr
 801f9b0:	d2f3      	bcs.n	801f99a <awe_fwMallocInst+0xe2>
 801f9b2:	68e2      	ldr	r2, [r4, #12]
 801f9b4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801f9b8:	4618      	mov	r0, r3
 801f9ba:	f025 0203 	bic.w	r2, r5, #3
 801f9be:	2100      	movs	r1, #0
 801f9c0:	f00e f8c8 	bl	802db54 <memset>
 801f9c4:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801f9c8:	443a      	add	r2, r7
 801f9ca:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 801f9ce:	9a01      	ldr	r2, [sp, #4]
 801f9d0:	4210      	tst	r0, r2
 801f9d2:	4603      	mov	r3, r0
 801f9d4:	d0d2      	beq.n	801f97c <awe_fwMallocInst+0xc4>
 801f9d6:	431a      	orrs	r2, r3
 801f9d8:	4610      	mov	r0, r2
 801f9da:	3001      	adds	r0, #1
 801f9dc:	4283      	cmp	r3, r0
 801f9de:	d002      	beq.n	801f9e6 <awe_fwMallocInst+0x12e>
 801f9e0:	4a38      	ldr	r2, [pc, #224]	@ (801fac4 <awe_fwMallocInst+0x20c>)
 801f9e2:	f840 2c04 	str.w	r2, [r0, #-4]
 801f9e6:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f9ea:	3f01      	subs	r7, #1
 801f9ec:	f026 0603 	bic.w	r6, r6, #3
 801f9f0:	4a34      	ldr	r2, [pc, #208]	@ (801fac4 <awe_fwMallocInst+0x20c>)
 801f9f2:	5182      	str	r2, [r0, r6]
 801f9f4:	f843 2027 	str.w	r2, [r3, r7, lsl #2]
 801f9f8:	e777      	b.n	801f8ea <awe_fwMallocInst+0x32>
 801f9fa:	f04f 33ff 	mov.w	r3, #4294967295
 801f9fe:	2000      	movs	r0, #0
 801fa00:	f8c8 3000 	str.w	r3, [r8]
 801fa04:	b003      	add	sp, #12
 801fa06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa0a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801fa0c:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fa0e:	b11b      	cbz	r3, 801fa18 <awe_fwMallocInst+0x160>
 801fa10:	2207      	movs	r2, #7
 801fa12:	4620      	mov	r0, r4
 801fa14:	4798      	blx	r3
 801fa16:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fa18:	698a      	ldr	r2, [r1, #24]
 801fa1a:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 801fa1c:	6808      	ldr	r0, [r1, #0]
 801fa1e:	1a1b      	subs	r3, r3, r0
 801fa20:	1a9b      	subs	r3, r3, r2
 801fa22:	42bb      	cmp	r3, r7
 801fa24:	d92b      	bls.n	801fa7e <awe_fwMallocInst+0x1c6>
 801fa26:	680b      	ldr	r3, [r1, #0]
 801fa28:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 801fa2c:	f025 0203 	bic.w	r2, r5, #3
 801fa30:	2100      	movs	r1, #0
 801fa32:	4640      	mov	r0, r8
 801fa34:	f00e f88e 	bl	802db54 <memset>
 801fa38:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fa3a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801fa3c:	680b      	ldr	r3, [r1, #0]
 801fa3e:	443b      	add	r3, r7
 801fa40:	600b      	str	r3, [r1, #0]
 801fa42:	b115      	cbz	r5, 801fa4a <awe_fwMallocInst+0x192>
 801fa44:	4620      	mov	r0, r4
 801fa46:	2201      	movs	r2, #1
 801fa48:	47a8      	blx	r5
 801fa4a:	9b01      	ldr	r3, [sp, #4]
 801fa4c:	ea18 0f03 	tst.w	r8, r3
 801fa50:	d008      	beq.n	801fa64 <awe_fwMallocInst+0x1ac>
 801fa52:	ea48 0003 	orr.w	r0, r8, r3
 801fa56:	3001      	adds	r0, #1
 801fa58:	4580      	cmp	r8, r0
 801fa5a:	d004      	beq.n	801fa66 <awe_fwMallocInst+0x1ae>
 801fa5c:	4b19      	ldr	r3, [pc, #100]	@ (801fac4 <awe_fwMallocInst+0x20c>)
 801fa5e:	f840 3c04 	str.w	r3, [r0, #-4]
 801fa62:	e000      	b.n	801fa66 <awe_fwMallocInst+0x1ae>
 801fa64:	4640      	mov	r0, r8
 801fa66:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801fa6a:	4b16      	ldr	r3, [pc, #88]	@ (801fac4 <awe_fwMallocInst+0x20c>)
 801fa6c:	3f01      	subs	r7, #1
 801fa6e:	f026 0603 	bic.w	r6, r6, #3
 801fa72:	5183      	str	r3, [r0, r6]
 801fa74:	f848 3027 	str.w	r3, [r8, r7, lsl #2]
 801fa78:	b003      	add	sp, #12
 801fa7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa7e:	f06f 0301 	mvn.w	r3, #1
 801fa82:	f8c8 3000 	str.w	r3, [r8]
 801fa86:	e72f      	b.n	801f8e8 <awe_fwMallocInst+0x30>
 801fa88:	68a3      	ldr	r3, [r4, #8]
 801fa8a:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 801fa8e:	f025 0203 	bic.w	r2, r5, #3
 801fa92:	4618      	mov	r0, r3
 801fa94:	2100      	movs	r1, #0
 801fa96:	f00e f85d 	bl	802db54 <memset>
 801fa9a:	f8d4 208c 	ldr.w	r2, [r4, #140]	@ 0x8c
 801fa9e:	443a      	add	r2, r7
 801faa0:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 801faa4:	9a01      	ldr	r2, [sp, #4]
 801faa6:	4210      	tst	r0, r2
 801faa8:	4603      	mov	r3, r0
 801faaa:	d194      	bne.n	801f9d6 <awe_fwMallocInst+0x11e>
 801faac:	4618      	mov	r0, r3
 801faae:	e79a      	b.n	801f9e6 <awe_fwMallocInst+0x12e>
 801fab0:	f8d4 e090 	ldr.w	lr, [r4, #144]	@ 0x90
 801fab4:	6923      	ldr	r3, [r4, #16]
 801fab6:	eba3 030e 	sub.w	r3, r3, lr
 801faba:	429f      	cmp	r7, r3
 801fabc:	f4bf af6d 	bcs.w	801f99a <awe_fwMallocInst+0xe2>
 801fac0:	e74b      	b.n	801f95a <awe_fwMallocInst+0xa2>
 801fac2:	bf00      	nop
 801fac4:	deadbeef 	.word	0xdeadbeef

0801fac8 <awe_fwMallocAligned>:
 801fac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801facc:	4c86      	ldr	r4, [pc, #536]	@ (801fce8 <awe_fwMallocAligned+0x220>)
 801face:	6824      	ldr	r4, [r4, #0]
 801fad0:	b083      	sub	sp, #12
 801fad2:	469a      	mov	sl, r3
 801fad4:	2c00      	cmp	r4, #0
 801fad6:	f000 80e4 	beq.w	801fca2 <awe_fwMallocAligned+0x1da>
 801fada:	1cce      	adds	r6, r1, #3
 801fadc:	f026 0603 	bic.w	r6, r6, #3
 801fae0:	1e73      	subs	r3, r6, #1
 801fae2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801fae6:	9301      	str	r3, [sp, #4]
 801fae8:	f04f 0b00 	mov.w	fp, #0
 801faec:	f8ca b000 	str.w	fp, [sl]
 801faf0:	f1bc 0f00 	cmp.w	ip, #0
 801faf4:	d04f      	beq.n	801fb96 <awe_fwMallocAligned+0xce>
 801faf6:	b939      	cbnz	r1, 801fb08 <awe_fwMallocAligned+0x40>
 801faf8:	f06f 0370 	mvn.w	r3, #112	@ 0x70
 801fafc:	f8ca 3000 	str.w	r3, [sl]
 801fb00:	2000      	movs	r0, #0
 801fb02:	b003      	add	sp, #12
 801fb04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb08:	e9d4 7e05 	ldrd	r7, lr, [r4, #20]
 801fb0c:	1d05      	adds	r5, r0, #4
 801fb0e:	2e04      	cmp	r6, #4
 801fb10:	bf88      	it	hi
 801fb12:	19ad      	addhi	r5, r5, r6
 801fb14:	b99f      	cbnz	r7, 801fb3e <awe_fwMallocAligned+0x76>
 801fb16:	f1be 0f00 	cmp.w	lr, #0
 801fb1a:	d01b      	beq.n	801fb54 <awe_fwMallocAligned+0x8c>
 801fb1c:	68e3      	ldr	r3, [r4, #12]
 801fb1e:	b1cb      	cbz	r3, 801fb54 <awe_fwMallocAligned+0x8c>
 801fb20:	f002 0307 	and.w	r3, r2, #7
 801fb24:	3503      	adds	r5, #3
 801fb26:	3b01      	subs	r3, #1
 801fb28:	f100 0803 	add.w	r8, r0, #3
 801fb2c:	ea4f 0995 	mov.w	r9, r5, lsr #2
 801fb30:	2b03      	cmp	r3, #3
 801fb32:	f200 809a 	bhi.w	801fc6a <awe_fwMallocAligned+0x1a2>
 801fb36:	e8df f003 	tbb	[pc, r3]
 801fb3a:	40ce      	.short	0x40ce
 801fb3c:	6c35      	.short	0x6c35
 801fb3e:	f8d4 8008 	ldr.w	r8, [r4, #8]
 801fb42:	f1be 0f00 	cmp.w	lr, #0
 801fb46:	d002      	beq.n	801fb4e <awe_fwMallocAligned+0x86>
 801fb48:	68e3      	ldr	r3, [r4, #12]
 801fb4a:	2b00      	cmp	r3, #0
 801fb4c:	d1e8      	bne.n	801fb20 <awe_fwMallocAligned+0x58>
 801fb4e:	f1b8 0f00 	cmp.w	r8, #0
 801fb52:	d1e5      	bne.n	801fb20 <awe_fwMallocAligned+0x58>
 801fb54:	3503      	adds	r5, #3
 801fb56:	2a04      	cmp	r2, #4
 801fb58:	f100 0803 	add.w	r8, r0, #3
 801fb5c:	ea4f 0995 	mov.w	r9, r5, lsr #2
 801fb60:	d057      	beq.n	801fc12 <awe_fwMallocAligned+0x14a>
 801fb62:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 801fb66:	6923      	ldr	r3, [r4, #16]
 801fb68:	1a1b      	subs	r3, r3, r0
 801fb6a:	4599      	cmp	r9, r3
 801fb6c:	f080 8094 	bcs.w	801fc98 <awe_fwMallocAligned+0x1d0>
 801fb70:	eb0c 0380 	add.w	r3, ip, r0, lsl #2
 801fb74:	f025 0203 	bic.w	r2, r5, #3
 801fb78:	4618      	mov	r0, r3
 801fb7a:	2100      	movs	r1, #0
 801fb7c:	f00d ffea 	bl	802db54 <memset>
 801fb80:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801fb84:	444a      	add	r2, r9
 801fb86:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 801fb8a:	9a01      	ldr	r2, [sp, #4]
 801fb8c:	4210      	tst	r0, r2
 801fb8e:	4603      	mov	r3, r0
 801fb90:	d12b      	bne.n	801fbea <awe_fwMallocAligned+0x122>
 801fb92:	4618      	mov	r0, r3
 801fb94:	e031      	b.n	801fbfa <awe_fwMallocAligned+0x132>
 801fb96:	f06f 0341 	mvn.w	r3, #65	@ 0x41
 801fb9a:	f8ca 3000 	str.w	r3, [sl]
 801fb9e:	2900      	cmp	r1, #0
 801fba0:	d0aa      	beq.n	801faf8 <awe_fwMallocAligned+0x30>
 801fba2:	e7ad      	b.n	801fb00 <awe_fwMallocAligned+0x38>
 801fba4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 801fba8:	1aff      	subs	r7, r7, r3
 801fbaa:	45b9      	cmp	r9, r7
 801fbac:	d37f      	bcc.n	801fcae <awe_fwMallocAligned+0x1e6>
 801fbae:	0912      	lsrs	r2, r2, #4
 801fbb0:	0793      	lsls	r3, r2, #30
 801fbb2:	d071      	beq.n	801fc98 <awe_fwMallocAligned+0x1d0>
 801fbb4:	f028 0003 	bic.w	r0, r8, #3
 801fbb8:	e798      	b.n	801faec <awe_fwMallocAligned+0x24>
 801fbba:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 801fbbe:	ebae 0e03 	sub.w	lr, lr, r3
 801fbc2:	45f1      	cmp	r9, lr
 801fbc4:	d2f3      	bcs.n	801fbae <awe_fwMallocAligned+0xe6>
 801fbc6:	68e2      	ldr	r2, [r4, #12]
 801fbc8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fbcc:	4618      	mov	r0, r3
 801fbce:	f025 0203 	bic.w	r2, r5, #3
 801fbd2:	2100      	movs	r1, #0
 801fbd4:	f00d ffbe 	bl	802db54 <memset>
 801fbd8:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801fbdc:	444a      	add	r2, r9
 801fbde:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 801fbe2:	9a01      	ldr	r2, [sp, #4]
 801fbe4:	4210      	tst	r0, r2
 801fbe6:	4603      	mov	r3, r0
 801fbe8:	d0d3      	beq.n	801fb92 <awe_fwMallocAligned+0xca>
 801fbea:	431a      	orrs	r2, r3
 801fbec:	4610      	mov	r0, r2
 801fbee:	3001      	adds	r0, #1
 801fbf0:	4283      	cmp	r3, r0
 801fbf2:	d002      	beq.n	801fbfa <awe_fwMallocAligned+0x132>
 801fbf4:	4a3d      	ldr	r2, [pc, #244]	@ (801fcec <awe_fwMallocAligned+0x224>)
 801fbf6:	f840 2c04 	str.w	r2, [r0, #-4]
 801fbfa:	f109 4980 	add.w	r9, r9, #1073741824	@ 0x40000000
 801fbfe:	f109 39ff 	add.w	r9, r9, #4294967295
 801fc02:	f028 0803 	bic.w	r8, r8, #3
 801fc06:	4a39      	ldr	r2, [pc, #228]	@ (801fcec <awe_fwMallocAligned+0x224>)
 801fc08:	f840 2008 	str.w	r2, [r0, r8]
 801fc0c:	f843 2029 	str.w	r2, [r3, r9, lsl #2]
 801fc10:	e777      	b.n	801fb02 <awe_fwMallocAligned+0x3a>
 801fc12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801fc14:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fc16:	b11b      	cbz	r3, 801fc20 <awe_fwMallocAligned+0x158>
 801fc18:	2207      	movs	r2, #7
 801fc1a:	4620      	mov	r0, r4
 801fc1c:	4798      	blx	r3
 801fc1e:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fc20:	698a      	ldr	r2, [r1, #24]
 801fc22:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 801fc24:	6808      	ldr	r0, [r1, #0]
 801fc26:	1a1b      	subs	r3, r3, r0
 801fc28:	1a9b      	subs	r3, r3, r2
 801fc2a:	454b      	cmp	r3, r9
 801fc2c:	d934      	bls.n	801fc98 <awe_fwMallocAligned+0x1d0>
 801fc2e:	680e      	ldr	r6, [r1, #0]
 801fc30:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 801fc34:	f025 0203 	bic.w	r2, r5, #3
 801fc38:	2100      	movs	r1, #0
 801fc3a:	4630      	mov	r0, r6
 801fc3c:	f00d ff8a 	bl	802db54 <memset>
 801fc40:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fc42:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801fc44:	680b      	ldr	r3, [r1, #0]
 801fc46:	444b      	add	r3, r9
 801fc48:	600b      	str	r3, [r1, #0]
 801fc4a:	b115      	cbz	r5, 801fc52 <awe_fwMallocAligned+0x18a>
 801fc4c:	4620      	mov	r0, r4
 801fc4e:	2201      	movs	r2, #1
 801fc50:	47a8      	blx	r5
 801fc52:	9b01      	ldr	r3, [sp, #4]
 801fc54:	421e      	tst	r6, r3
 801fc56:	d010      	beq.n	801fc7a <awe_fwMallocAligned+0x1b2>
 801fc58:	4333      	orrs	r3, r6
 801fc5a:	4618      	mov	r0, r3
 801fc5c:	3001      	adds	r0, #1
 801fc5e:	4286      	cmp	r6, r0
 801fc60:	d00c      	beq.n	801fc7c <awe_fwMallocAligned+0x1b4>
 801fc62:	4b22      	ldr	r3, [pc, #136]	@ (801fcec <awe_fwMallocAligned+0x224>)
 801fc64:	f840 3c04 	str.w	r3, [r0, #-4]
 801fc68:	e008      	b.n	801fc7c <awe_fwMallocAligned+0x1b4>
 801fc6a:	f04f 33ff 	mov.w	r3, #4294967295
 801fc6e:	2000      	movs	r0, #0
 801fc70:	f8ca 3000 	str.w	r3, [sl]
 801fc74:	b003      	add	sp, #12
 801fc76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc7a:	4630      	mov	r0, r6
 801fc7c:	f109 4980 	add.w	r9, r9, #1073741824	@ 0x40000000
 801fc80:	4b1a      	ldr	r3, [pc, #104]	@ (801fcec <awe_fwMallocAligned+0x224>)
 801fc82:	f109 39ff 	add.w	r9, r9, #4294967295
 801fc86:	f028 0803 	bic.w	r8, r8, #3
 801fc8a:	f840 3008 	str.w	r3, [r0, r8]
 801fc8e:	f846 3029 	str.w	r3, [r6, r9, lsl #2]
 801fc92:	b003      	add	sp, #12
 801fc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc98:	f06f 0301 	mvn.w	r3, #1
 801fc9c:	f8ca 3000 	str.w	r3, [sl]
 801fca0:	e72e      	b.n	801fb00 <awe_fwMallocAligned+0x38>
 801fca2:	f06f 0312 	mvn.w	r3, #18
 801fca6:	4620      	mov	r0, r4
 801fca8:	f8ca 3000 	str.w	r3, [sl]
 801fcac:	e729      	b.n	801fb02 <awe_fwMallocAligned+0x3a>
 801fcae:	68a2      	ldr	r2, [r4, #8]
 801fcb0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fcb4:	4618      	mov	r0, r3
 801fcb6:	f025 0203 	bic.w	r2, r5, #3
 801fcba:	2100      	movs	r1, #0
 801fcbc:	f00d ff4a 	bl	802db54 <memset>
 801fcc0:	f8d4 208c 	ldr.w	r2, [r4, #140]	@ 0x8c
 801fcc4:	444a      	add	r2, r9
 801fcc6:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 801fcca:	9a01      	ldr	r2, [sp, #4]
 801fccc:	4210      	tst	r0, r2
 801fcce:	4603      	mov	r3, r0
 801fcd0:	d18b      	bne.n	801fbea <awe_fwMallocAligned+0x122>
 801fcd2:	4618      	mov	r0, r3
 801fcd4:	e791      	b.n	801fbfa <awe_fwMallocAligned+0x132>
 801fcd6:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 801fcda:	6923      	ldr	r3, [r4, #16]
 801fcdc:	1a1b      	subs	r3, r3, r0
 801fcde:	4599      	cmp	r9, r3
 801fce0:	f4bf af65 	bcs.w	801fbae <awe_fwMallocAligned+0xe6>
 801fce4:	e744      	b.n	801fb70 <awe_fwMallocAligned+0xa8>
 801fce6:	bf00      	nop
 801fce8:	20000ac0 	.word	0x20000ac0
 801fcec:	deadbeef 	.word	0xdeadbeef

0801fcf0 <awe_fwMallocCommon>:
 801fcf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcf4:	4604      	mov	r4, r0
 801fcf6:	b083      	sub	sp, #12
 801fcf8:	1cd0      	adds	r0, r2, #3
 801fcfa:	f020 0003 	bic.w	r0, r0, #3
 801fcfe:	4694      	mov	ip, r2
 801fd00:	f8d4 e004 	ldr.w	lr, [r4, #4]
 801fd04:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
 801fd08:	1e42      	subs	r2, r0, #1
 801fd0a:	460e      	mov	r6, r1
 801fd0c:	9201      	str	r2, [sp, #4]
 801fd0e:	f04f 0900 	mov.w	r9, #0
 801fd12:	f8c8 9000 	str.w	r9, [r8]
 801fd16:	f1be 0f00 	cmp.w	lr, #0
 801fd1a:	d04c      	beq.n	801fdb6 <awe_fwMallocCommon+0xc6>
 801fd1c:	f1bc 0f00 	cmp.w	ip, #0
 801fd20:	d107      	bne.n	801fd32 <awe_fwMallocCommon+0x42>
 801fd22:	f06f 0370 	mvn.w	r3, #112	@ 0x70
 801fd26:	f8c8 3000 	str.w	r3, [r8]
 801fd2a:	2000      	movs	r0, #0
 801fd2c:	b003      	add	sp, #12
 801fd2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd32:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 801fd36:	1d35      	adds	r5, r6, #4
 801fd38:	2804      	cmp	r0, #4
 801fd3a:	bf88      	it	hi
 801fd3c:	182d      	addhi	r5, r5, r0
 801fd3e:	b982      	cbnz	r2, 801fd62 <awe_fwMallocCommon+0x72>
 801fd40:	b1c1      	cbz	r1, 801fd74 <awe_fwMallocCommon+0x84>
 801fd42:	68e7      	ldr	r7, [r4, #12]
 801fd44:	b1b7      	cbz	r7, 801fd74 <awe_fwMallocCommon+0x84>
 801fd46:	f003 0a07 	and.w	sl, r3, #7
 801fd4a:	3503      	adds	r5, #3
 801fd4c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fd50:	3603      	adds	r6, #3
 801fd52:	08af      	lsrs	r7, r5, #2
 801fd54:	f1ba 0f03 	cmp.w	sl, #3
 801fd58:	d869      	bhi.n	801fe2e <awe_fwMallocCommon+0x13e>
 801fd5a:	e8df f00a 	tbb	[pc, sl]
 801fd5e:	3fc3      	.short	0x3fc3
 801fd60:	7034      	.short	0x7034
 801fd62:	f8d4 a008 	ldr.w	sl, [r4, #8]
 801fd66:	b111      	cbz	r1, 801fd6e <awe_fwMallocCommon+0x7e>
 801fd68:	68e7      	ldr	r7, [r4, #12]
 801fd6a:	2f00      	cmp	r7, #0
 801fd6c:	d1eb      	bne.n	801fd46 <awe_fwMallocCommon+0x56>
 801fd6e:	f1ba 0f00 	cmp.w	sl, #0
 801fd72:	d1e8      	bne.n	801fd46 <awe_fwMallocCommon+0x56>
 801fd74:	3503      	adds	r5, #3
 801fd76:	2b04      	cmp	r3, #4
 801fd78:	f106 0603 	add.w	r6, r6, #3
 801fd7c:	ea4f 0795 	mov.w	r7, r5, lsr #2
 801fd80:	d05d      	beq.n	801fe3e <awe_fwMallocCommon+0x14e>
 801fd82:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801fd86:	6923      	ldr	r3, [r4, #16]
 801fd88:	1a9b      	subs	r3, r3, r2
 801fd8a:	429f      	cmp	r7, r3
 801fd8c:	f080 8091 	bcs.w	801feb2 <awe_fwMallocCommon+0x1c2>
 801fd90:	eb0e 0382 	add.w	r3, lr, r2, lsl #2
 801fd94:	4618      	mov	r0, r3
 801fd96:	f025 0203 	bic.w	r2, r5, #3
 801fd9a:	2100      	movs	r1, #0
 801fd9c:	f00d feda 	bl	802db54 <memset>
 801fda0:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801fda4:	443a      	add	r2, r7
 801fda6:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 801fdaa:	9a01      	ldr	r2, [sp, #4]
 801fdac:	4210      	tst	r0, r2
 801fdae:	4603      	mov	r3, r0
 801fdb0:	d12b      	bne.n	801fe0a <awe_fwMallocCommon+0x11a>
 801fdb2:	4618      	mov	r0, r3
 801fdb4:	e031      	b.n	801fe1a <awe_fwMallocCommon+0x12a>
 801fdb6:	f06f 0341 	mvn.w	r3, #65	@ 0x41
 801fdba:	f8c8 3000 	str.w	r3, [r8]
 801fdbe:	f1bc 0f00 	cmp.w	ip, #0
 801fdc2:	d0ae      	beq.n	801fd22 <awe_fwMallocCommon+0x32>
 801fdc4:	e7b1      	b.n	801fd2a <awe_fwMallocCommon+0x3a>
 801fdc6:	f8d4 108c 	ldr.w	r1, [r4, #140]	@ 0x8c
 801fdca:	1a52      	subs	r2, r2, r1
 801fdcc:	42ba      	cmp	r2, r7
 801fdce:	d875      	bhi.n	801febc <awe_fwMallocCommon+0x1cc>
 801fdd0:	091b      	lsrs	r3, r3, #4
 801fdd2:	079a      	lsls	r2, r3, #30
 801fdd4:	d06d      	beq.n	801feb2 <awe_fwMallocCommon+0x1c2>
 801fdd6:	f026 0603 	bic.w	r6, r6, #3
 801fdda:	e79a      	b.n	801fd12 <awe_fwMallocCommon+0x22>
 801fddc:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801fde0:	1a89      	subs	r1, r1, r2
 801fde2:	42b9      	cmp	r1, r7
 801fde4:	d9f4      	bls.n	801fdd0 <awe_fwMallocCommon+0xe0>
 801fde6:	68e3      	ldr	r3, [r4, #12]
 801fde8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801fdec:	4618      	mov	r0, r3
 801fdee:	f025 0203 	bic.w	r2, r5, #3
 801fdf2:	2100      	movs	r1, #0
 801fdf4:	f00d feae 	bl	802db54 <memset>
 801fdf8:	f8d4 2094 	ldr.w	r2, [r4, #148]	@ 0x94
 801fdfc:	443a      	add	r2, r7
 801fdfe:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 801fe02:	9a01      	ldr	r2, [sp, #4]
 801fe04:	4210      	tst	r0, r2
 801fe06:	4603      	mov	r3, r0
 801fe08:	d0d3      	beq.n	801fdb2 <awe_fwMallocCommon+0xc2>
 801fe0a:	431a      	orrs	r2, r3
 801fe0c:	4610      	mov	r0, r2
 801fe0e:	3001      	adds	r0, #1
 801fe10:	4283      	cmp	r3, r0
 801fe12:	d002      	beq.n	801fe1a <awe_fwMallocCommon+0x12a>
 801fe14:	4a37      	ldr	r2, [pc, #220]	@ (801fef4 <awe_fwMallocCommon+0x204>)
 801fe16:	f840 2c04 	str.w	r2, [r0, #-4]
 801fe1a:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801fe1e:	3f01      	subs	r7, #1
 801fe20:	f026 0603 	bic.w	r6, r6, #3
 801fe24:	4a33      	ldr	r2, [pc, #204]	@ (801fef4 <awe_fwMallocCommon+0x204>)
 801fe26:	5182      	str	r2, [r0, r6]
 801fe28:	f843 2027 	str.w	r2, [r3, r7, lsl #2]
 801fe2c:	e77e      	b.n	801fd2c <awe_fwMallocCommon+0x3c>
 801fe2e:	f04f 33ff 	mov.w	r3, #4294967295
 801fe32:	2000      	movs	r0, #0
 801fe34:	f8c8 3000 	str.w	r3, [r8]
 801fe38:	b003      	add	sp, #12
 801fe3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe3e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801fe40:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fe42:	b11b      	cbz	r3, 801fe4c <awe_fwMallocCommon+0x15c>
 801fe44:	2207      	movs	r2, #7
 801fe46:	4620      	mov	r0, r4
 801fe48:	4798      	blx	r3
 801fe4a:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fe4c:	698a      	ldr	r2, [r1, #24]
 801fe4e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 801fe50:	6808      	ldr	r0, [r1, #0]
 801fe52:	1a1b      	subs	r3, r3, r0
 801fe54:	1a9b      	subs	r3, r3, r2
 801fe56:	42bb      	cmp	r3, r7
 801fe58:	d92b      	bls.n	801feb2 <awe_fwMallocCommon+0x1c2>
 801fe5a:	680b      	ldr	r3, [r1, #0]
 801fe5c:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 801fe60:	f025 0203 	bic.w	r2, r5, #3
 801fe64:	2100      	movs	r1, #0
 801fe66:	4640      	mov	r0, r8
 801fe68:	f00d fe74 	bl	802db54 <memset>
 801fe6c:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 801fe6e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801fe70:	680b      	ldr	r3, [r1, #0]
 801fe72:	443b      	add	r3, r7
 801fe74:	600b      	str	r3, [r1, #0]
 801fe76:	b115      	cbz	r5, 801fe7e <awe_fwMallocCommon+0x18e>
 801fe78:	4620      	mov	r0, r4
 801fe7a:	2201      	movs	r2, #1
 801fe7c:	47a8      	blx	r5
 801fe7e:	9b01      	ldr	r3, [sp, #4]
 801fe80:	ea18 0f03 	tst.w	r8, r3
 801fe84:	d008      	beq.n	801fe98 <awe_fwMallocCommon+0x1a8>
 801fe86:	ea48 0003 	orr.w	r0, r8, r3
 801fe8a:	3001      	adds	r0, #1
 801fe8c:	4580      	cmp	r8, r0
 801fe8e:	d004      	beq.n	801fe9a <awe_fwMallocCommon+0x1aa>
 801fe90:	4b18      	ldr	r3, [pc, #96]	@ (801fef4 <awe_fwMallocCommon+0x204>)
 801fe92:	f840 3c04 	str.w	r3, [r0, #-4]
 801fe96:	e000      	b.n	801fe9a <awe_fwMallocCommon+0x1aa>
 801fe98:	4640      	mov	r0, r8
 801fe9a:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801fe9e:	4b15      	ldr	r3, [pc, #84]	@ (801fef4 <awe_fwMallocCommon+0x204>)
 801fea0:	3f01      	subs	r7, #1
 801fea2:	f026 0603 	bic.w	r6, r6, #3
 801fea6:	5183      	str	r3, [r0, r6]
 801fea8:	f848 3027 	str.w	r3, [r8, r7, lsl #2]
 801feac:	b003      	add	sp, #12
 801feae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801feb2:	f06f 0301 	mvn.w	r3, #1
 801feb6:	f8c8 3000 	str.w	r3, [r8]
 801feba:	e736      	b.n	801fd2a <awe_fwMallocCommon+0x3a>
 801febc:	68a3      	ldr	r3, [r4, #8]
 801febe:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 801fec2:	f025 0203 	bic.w	r2, r5, #3
 801fec6:	4618      	mov	r0, r3
 801fec8:	2100      	movs	r1, #0
 801feca:	f00d fe43 	bl	802db54 <memset>
 801fece:	f8d4 208c 	ldr.w	r2, [r4, #140]	@ 0x8c
 801fed2:	443a      	add	r2, r7
 801fed4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 801fed8:	9a01      	ldr	r2, [sp, #4]
 801feda:	4210      	tst	r0, r2
 801fedc:	4603      	mov	r3, r0
 801fede:	d194      	bne.n	801fe0a <awe_fwMallocCommon+0x11a>
 801fee0:	4618      	mov	r0, r3
 801fee2:	e79a      	b.n	801fe1a <awe_fwMallocCommon+0x12a>
 801fee4:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801fee8:	6921      	ldr	r1, [r4, #16]
 801feea:	1a89      	subs	r1, r1, r2
 801feec:	42b9      	cmp	r1, r7
 801feee:	f67f af6f 	bls.w	801fdd0 <awe_fwMallocCommon+0xe0>
 801fef2:	e74d      	b.n	801fd90 <awe_fwMallocCommon+0xa0>
 801fef4:	deadbeef 	.word	0xdeadbeef

0801fef8 <awe_heapPad>:
 801fef8:	6843      	ldr	r3, [r0, #4]
 801fefa:	b410      	push	{r4}
 801fefc:	b113      	cbz	r3, 801ff04 <awe_heapPad+0xc>
 801fefe:	6902      	ldr	r2, [r0, #16]
 801ff00:	2a00      	cmp	r2, #0
 801ff02:	d132      	bne.n	801ff6a <awe_heapPad+0x72>
 801ff04:	6943      	ldr	r3, [r0, #20]
 801ff06:	b303      	cbz	r3, 801ff4a <awe_heapPad+0x52>
 801ff08:	6882      	ldr	r2, [r0, #8]
 801ff0a:	b1f2      	cbz	r2, 801ff4a <awe_heapPad+0x52>
 801ff0c:	68c4      	ldr	r4, [r0, #12]
 801ff0e:	4b1d      	ldr	r3, [pc, #116]	@ (801ff84 <awe_heapPad+0x8c>)
 801ff10:	6013      	str	r3, [r2, #0]
 801ff12:	2301      	movs	r3, #1
 801ff14:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
 801ff18:	b114      	cbz	r4, 801ff20 <awe_heapPad+0x28>
 801ff1a:	6981      	ldr	r1, [r0, #24]
 801ff1c:	2900      	cmp	r1, #0
 801ff1e:	d12a      	bne.n	801ff76 <awe_heapPad+0x7e>
 801ff20:	6e41      	ldr	r1, [r0, #100]	@ 0x64
 801ff22:	b1f9      	cbz	r1, 801ff64 <awe_heapPad+0x6c>
 801ff24:	6803      	ldr	r3, [r0, #0]
 801ff26:	b9eb      	cbnz	r3, 801ff64 <awe_heapPad+0x6c>
 801ff28:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801ff2a:	4a16      	ldr	r2, [pc, #88]	@ (801ff84 <awe_heapPad+0x8c>)
 801ff2c:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 801ff2e:	3304      	adds	r3, #4
 801ff30:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 801ff34:	680b      	ldr	r3, [r1, #0]
 801ff36:	3301      	adds	r3, #1
 801ff38:	600b      	str	r3, [r1, #0]
 801ff3a:	b19c      	cbz	r4, 801ff64 <awe_heapPad+0x6c>
 801ff3c:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 801ff3e:	3204      	adds	r2, #4
 801ff40:	4623      	mov	r3, r4
 801ff42:	0052      	lsls	r2, r2, #1
 801ff44:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ff48:	4718      	bx	r3
 801ff4a:	6981      	ldr	r1, [r0, #24]
 801ff4c:	2900      	cmp	r1, #0
 801ff4e:	d0e7      	beq.n	801ff20 <awe_heapPad+0x28>
 801ff50:	68c4      	ldr	r4, [r0, #12]
 801ff52:	2c00      	cmp	r4, #0
 801ff54:	d0e4      	beq.n	801ff20 <awe_heapPad+0x28>
 801ff56:	6882      	ldr	r2, [r0, #8]
 801ff58:	b16a      	cbz	r2, 801ff76 <awe_heapPad+0x7e>
 801ff5a:	2b00      	cmp	r3, #0
 801ff5c:	d1d7      	bne.n	801ff0e <awe_heapPad+0x16>
 801ff5e:	2900      	cmp	r1, #0
 801ff60:	d0de      	beq.n	801ff20 <awe_heapPad+0x28>
 801ff62:	e008      	b.n	801ff76 <awe_heapPad+0x7e>
 801ff64:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ff68:	4770      	bx	lr
 801ff6a:	4a06      	ldr	r2, [pc, #24]	@ (801ff84 <awe_heapPad+0x8c>)
 801ff6c:	601a      	str	r2, [r3, #0]
 801ff6e:	2301      	movs	r3, #1
 801ff70:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 801ff74:	e7c6      	b.n	801ff04 <awe_heapPad+0xc>
 801ff76:	4b03      	ldr	r3, [pc, #12]	@ (801ff84 <awe_heapPad+0x8c>)
 801ff78:	6023      	str	r3, [r4, #0]
 801ff7a:	2301      	movs	r3, #1
 801ff7c:	f8c0 3094 	str.w	r3, [r0, #148]	@ 0x94
 801ff80:	e7ce      	b.n	801ff20 <awe_heapPad+0x28>
 801ff82:	bf00      	nop
 801ff84:	deadbeef 	.word	0xdeadbeef

0801ff88 <awe_fwDestroy>:
 801ff88:	b570      	push	{r4, r5, r6, lr}
 801ff8a:	2300      	movs	r3, #0
 801ff8c:	b084      	sub	sp, #16
 801ff8e:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
 801ff92:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
 801ff96:	aa03      	add	r2, sp, #12
 801ff98:	a901      	add	r1, sp, #4
 801ff9a:	4604      	mov	r4, r0
 801ff9c:	f7e9 fc50 	bl	8009840 <awe_fwGetFirstLayoutObject>
 801ffa0:	b980      	cbnz	r0, 801ffc4 <awe_fwDestroy+0x3c>
 801ffa2:	9b01      	ldr	r3, [sp, #4]
 801ffa4:	4e3c      	ldr	r6, [pc, #240]	@ (8020098 <awe_fwDestroy+0x110>)
 801ffa6:	685a      	ldr	r2, [r3, #4]
 801ffa8:	6855      	ldr	r5, [r2, #4]
 801ffaa:	4435      	add	r5, r6
 801ffac:	f5b5 4f78 	cmp.w	r5, #63488	@ 0xf800
 801ffb0:	4618      	mov	r0, r3
 801ffb2:	aa03      	add	r2, sp, #12
 801ffb4:	a902      	add	r1, sp, #8
 801ffb6:	d342      	bcc.n	802003e <awe_fwDestroy+0xb6>
 801ffb8:	f7e9 fc28 	bl	800980c <awe_fwGetNextObject>
 801ffbc:	9b02      	ldr	r3, [sp, #8]
 801ffbe:	9301      	str	r3, [sp, #4]
 801ffc0:	2800      	cmp	r0, #0
 801ffc2:	d0f0      	beq.n	801ffa6 <awe_fwDestroy+0x1e>
 801ffc4:	6860      	ldr	r0, [r4, #4]
 801ffc6:	b120      	cbz	r0, 801ffd2 <awe_fwDestroy+0x4a>
 801ffc8:	6923      	ldr	r3, [r4, #16]
 801ffca:	2200      	movs	r2, #0
 801ffcc:	2101      	movs	r1, #1
 801ffce:	f7fb fbed 	bl	801b7ac <awe_vecFillInt32>
 801ffd2:	68e0      	ldr	r0, [r4, #12]
 801ffd4:	2200      	movs	r2, #0
 801ffd6:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 801ffda:	b118      	cbz	r0, 801ffe4 <awe_fwDestroy+0x5c>
 801ffdc:	69a3      	ldr	r3, [r4, #24]
 801ffde:	2101      	movs	r1, #1
 801ffe0:	f7fb fbe4 	bl	801b7ac <awe_vecFillInt32>
 801ffe4:	68a0      	ldr	r0, [r4, #8]
 801ffe6:	2200      	movs	r2, #0
 801ffe8:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 801ffec:	b118      	cbz	r0, 801fff6 <awe_fwDestroy+0x6e>
 801ffee:	6963      	ldr	r3, [r4, #20]
 801fff0:	2101      	movs	r1, #1
 801fff2:	f7fb fbdb 	bl	801b7ac <awe_vecFillInt32>
 801fff6:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 801fff8:	2300      	movs	r3, #0
 801fffa:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801fffe:	b108      	cbz	r0, 8020004 <awe_fwDestroy+0x7c>
 8020000:	6825      	ldr	r5, [r4, #0]
 8020002:	b34d      	cbz	r5, 8020058 <awe_fwDestroy+0xd0>
 8020004:	4620      	mov	r0, r4
 8020006:	f7ff ff77 	bl	801fef8 <awe_heapPad>
 802000a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 802000c:	6822      	ldr	r2, [r4, #0]
 802000e:	6ac8      	ldr	r0, [r1, #44]	@ 0x2c
 8020010:	2300      	movs	r3, #0
 8020012:	4290      	cmp	r0, r2
 8020014:	f8c4 351c 	str.w	r3, [r4, #1308]	@ 0x51c
 8020018:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 802001c:	e9c4 331c 	strd	r3, r3, [r4, #112]	@ 0x70
 8020020:	e9c4 3320 	strd	r3, r3, [r4, #128]	@ 0x80
 8020024:	67e3      	str	r3, [r4, #124]	@ 0x7c
 8020026:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 802002a:	bf08      	it	eq
 802002c:	628b      	streq	r3, [r1, #40]	@ 0x28
 802002e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8020030:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8020032:	428a      	cmp	r2, r1
 8020034:	bf04      	itt	eq
 8020036:	2200      	moveq	r2, #0
 8020038:	629a      	streq	r2, [r3, #40]	@ 0x28
 802003a:	b004      	add	sp, #16
 802003c:	bd70      	pop	{r4, r5, r6, pc}
 802003e:	2100      	movs	r1, #0
 8020040:	f7ea f9e2 	bl	800a408 <ClassModule_Set>
 8020044:	aa03      	add	r2, sp, #12
 8020046:	a902      	add	r1, sp, #8
 8020048:	9801      	ldr	r0, [sp, #4]
 802004a:	f7e9 fbdf 	bl	800980c <awe_fwGetNextObject>
 802004e:	9b02      	ldr	r3, [sp, #8]
 8020050:	9301      	str	r3, [sp, #4]
 8020052:	2800      	cmp	r0, #0
 8020054:	d0a7      	beq.n	801ffa6 <awe_fwDestroy+0x1e>
 8020056:	e7b5      	b.n	801ffc4 <awe_fwDestroy+0x3c>
 8020058:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 802005a:	2101      	movs	r1, #1
 802005c:	3b07      	subs	r3, #7
 802005e:	301c      	adds	r0, #28
 8020060:	462a      	mov	r2, r5
 8020062:	f7fb fba3 	bl	801b7ac <awe_vecFillInt32>
 8020066:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8020068:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 802006a:	3304      	adds	r3, #4
 802006c:	005b      	lsls	r3, r3, #1
 802006e:	600b      	str	r3, [r1, #0]
 8020070:	618d      	str	r5, [r1, #24]
 8020072:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8020074:	b143      	cbz	r3, 8020088 <awe_fwDestroy+0x100>
 8020076:	f101 031c 	add.w	r3, r1, #28
 802007a:	2001      	movs	r0, #1
 802007c:	f843 0b04 	str.w	r0, [r3], #4
 8020080:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 8020082:	3501      	adds	r5, #1
 8020084:	42aa      	cmp	r2, r5
 8020086:	d8f9      	bhi.n	802007c <awe_fwDestroy+0xf4>
 8020088:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 802008a:	2b00      	cmp	r3, #0
 802008c:	d0ba      	beq.n	8020004 <awe_fwDestroy+0x7c>
 802008e:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 8020090:	4620      	mov	r0, r4
 8020092:	4798      	blx	r3
 8020094:	e7b6      	b.n	8020004 <awe_fwDestroy+0x7c>
 8020096:	bf00      	nop
 8020098:	4110f800 	.word	0x4110f800

0802009c <awe_fwInitSharedHeap>:
 802009c:	2800      	cmp	r0, #0
 802009e:	d04d      	beq.n	802013c <awe_fwInitSharedHeap+0xa0>
 80200a0:	6e41      	ldr	r1, [r0, #100]	@ 0x64
 80200a2:	2900      	cmp	r1, #0
 80200a4:	d03f      	beq.n	8020126 <awe_fwInitSharedHeap+0x8a>
 80200a6:	b538      	push	{r3, r4, r5, lr}
 80200a8:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
 80200ac:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80200b0:	f043 0302 	orr.w	r3, r3, #2
 80200b4:	2400      	movs	r4, #0
 80200b6:	f8c0 30b0 	str.w	r3, [r0, #176]	@ 0xb0
 80200ba:	f8c0 4100 	str.w	r4, [r0, #256]	@ 0x100
 80200be:	60ca      	str	r2, [r1, #12]
 80200c0:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80200c2:	1e5a      	subs	r2, r3, #1
 80200c4:	2aff      	cmp	r2, #255	@ 0xff
 80200c6:	d830      	bhi.n	802012a <awe_fwInitSharedHeap+0x8e>
 80200c8:	6802      	ldr	r2, [r0, #0]
 80200ca:	4293      	cmp	r3, r2
 80200cc:	d930      	bls.n	8020130 <awe_fwInitSharedHeap+0x94>
 80200ce:	6e84      	ldr	r4, [r0, #104]	@ 0x68
 80200d0:	2c00      	cmp	r4, #0
 80200d2:	d030      	beq.n	8020136 <awe_fwInitSharedHeap+0x9a>
 80200d4:	b14a      	cbz	r2, 80200ea <awe_fwInitSharedHeap+0x4e>
 80200d6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80200d8:	b1db      	cbz	r3, 8020112 <awe_fwInitSharedHeap+0x76>
 80200da:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80200dc:	b1fb      	cbz	r3, 802011e <awe_fwInitSharedHeap+0x82>
 80200de:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80200e0:	b10b      	cbz	r3, 80200e6 <awe_fwInitSharedHeap+0x4a>
 80200e2:	2207      	movs	r2, #7
 80200e4:	4798      	blx	r3
 80200e6:	2000      	movs	r0, #0
 80200e8:	bd38      	pop	{r3, r4, r5, pc}
 80200ea:	3304      	adds	r3, #4
 80200ec:	005b      	lsls	r3, r3, #1
 80200ee:	600b      	str	r3, [r1, #0]
 80200f0:	618a      	str	r2, [r1, #24]
 80200f2:	6803      	ldr	r3, [r0, #0]
 80200f4:	2b00      	cmp	r3, #0
 80200f6:	d1f2      	bne.n	80200de <awe_fwInitSharedHeap+0x42>
 80200f8:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 80200fa:	2a00      	cmp	r2, #0
 80200fc:	d0ef      	beq.n	80200de <awe_fwInitSharedHeap+0x42>
 80200fe:	f101 021c 	add.w	r2, r1, #28
 8020102:	2501      	movs	r5, #1
 8020104:	f842 5b04 	str.w	r5, [r2], #4
 8020108:	6ec4      	ldr	r4, [r0, #108]	@ 0x6c
 802010a:	3301      	adds	r3, #1
 802010c:	429c      	cmp	r4, r3
 802010e:	d8f9      	bhi.n	8020104 <awe_fwInitSharedHeap+0x68>
 8020110:	e7e5      	b.n	80200de <awe_fwInitSharedHeap+0x42>
 8020112:	f500 738e 	add.w	r3, r0, #284	@ 0x11c
 8020116:	6283      	str	r3, [r0, #40]	@ 0x28
 8020118:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 802011a:	2b00      	cmp	r3, #0
 802011c:	d1df      	bne.n	80200de <awe_fwInitSharedHeap+0x42>
 802011e:	f500 7347 	add.w	r3, r0, #796	@ 0x31c
 8020122:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8020124:	e7db      	b.n	80200de <awe_fwInitSharedHeap+0x42>
 8020126:	2000      	movs	r0, #0
 8020128:	4770      	bx	lr
 802012a:	f06f 0071 	mvn.w	r0, #113	@ 0x71
 802012e:	bd38      	pop	{r3, r4, r5, pc}
 8020130:	f06f 0072 	mvn.w	r0, #114	@ 0x72
 8020134:	bd38      	pop	{r3, r4, r5, pc}
 8020136:	f06f 0073 	mvn.w	r0, #115	@ 0x73
 802013a:	bd38      	pop	{r3, r4, r5, pc}
 802013c:	f06f 0050 	mvn.w	r0, #80	@ 0x50
 8020140:	4770      	bx	lr
 8020142:	bf00      	nop

08020144 <BaseClassModule_Constructor>:
 8020144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020148:	4c52      	ldr	r4, [pc, #328]	@ (8020294 <BaseClassModule_Constructor+0x150>)
 802014a:	b085      	sub	sp, #20
 802014c:	f8d4 8000 	ldr.w	r8, [r4]
 8020150:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8020152:	f3c2 2607 	ubfx	r6, r2, #8, #8
 8020156:	f3c2 4407 	ubfx	r4, r2, #16, #8
 802015a:	4426      	add	r6, r4
 802015c:	fa56 f682 	uxtab	r6, r6, r2
 8020160:	f1b8 0f00 	cmp.w	r8, #0
 8020164:	f000 8090 	beq.w	8020288 <BaseClassModule_Constructor+0x144>
 8020168:	2b00      	cmp	r3, #0
 802016a:	d079      	beq.n	8020260 <BaseClassModule_Constructor+0x11c>
 802016c:	f8d0 901c 	ldr.w	r9, [r0, #28]
 8020170:	fa1f f489 	uxth.w	r4, r9
 8020174:	42a7      	cmp	r7, r4
 8020176:	d17d      	bne.n	8020274 <BaseClassModule_Constructor+0x130>
 8020178:	b1e6      	cbz	r6, 80201b4 <BaseClassModule_Constructor+0x70>
 802017a:	681c      	ldr	r4, [r3, #0]
 802017c:	2c00      	cmp	r4, #0
 802017e:	d067      	beq.n	8020250 <BaseClassModule_Constructor+0x10c>
 8020180:	6864      	ldr	r4, [r4, #4]
 8020182:	4d45      	ldr	r5, [pc, #276]	@ (8020298 <BaseClassModule_Constructor+0x154>)
 8020184:	6864      	ldr	r4, [r4, #4]
 8020186:	442c      	add	r4, r5
 8020188:	f5b4 6ff0 	cmp.w	r4, #1920	@ 0x780
 802018c:	d260      	bcs.n	8020250 <BaseClassModule_Constructor+0x10c>
 802018e:	f1a3 0c04 	sub.w	ip, r3, #4
 8020192:	46ae      	mov	lr, r5
 8020194:	eb0c 0c86 	add.w	ip, ip, r6, lsl #2
 8020198:	461d      	mov	r5, r3
 802019a:	e009      	b.n	80201b0 <BaseClassModule_Constructor+0x6c>
 802019c:	f855 4f04 	ldr.w	r4, [r5, #4]!
 80201a0:	2c00      	cmp	r4, #0
 80201a2:	d055      	beq.n	8020250 <BaseClassModule_Constructor+0x10c>
 80201a4:	6864      	ldr	r4, [r4, #4]
 80201a6:	6864      	ldr	r4, [r4, #4]
 80201a8:	4474      	add	r4, lr
 80201aa:	f5b4 6ff0 	cmp.w	r4, #1920	@ 0x780
 80201ae:	d24f      	bcs.n	8020250 <BaseClassModule_Constructor+0x10c>
 80201b0:	4565      	cmp	r5, ip
 80201b2:	d1f3      	bne.n	802019c <BaseClassModule_Constructor+0x58>
 80201b4:	460d      	mov	r5, r1
 80201b6:	eb07 4919 	add.w	r9, r7, r9, lsr #16
 80201ba:	f106 0108 	add.w	r1, r6, #8
 80201be:	4449      	add	r1, r9
 80201c0:	461c      	mov	r4, r3
 80201c2:	4682      	mov	sl, r0
 80201c4:	f240 2331 	movw	r3, #561	@ 0x231
 80201c8:	4693      	mov	fp, r2
 80201ca:	9500      	str	r5, [sp, #0]
 80201cc:	0089      	lsls	r1, r1, #2
 80201ce:	2204      	movs	r2, #4
 80201d0:	4640      	mov	r0, r8
 80201d2:	f7ff fd8d 	bl	801fcf0 <awe_fwMallocCommon>
 80201d6:	682b      	ldr	r3, [r5, #0]
 80201d8:	2b00      	cmp	r3, #0
 80201da:	d153      	bne.n	8020284 <BaseClassModule_Constructor+0x140>
 80201dc:	f8c0 a004 	str.w	sl, [r0, #4]
 80201e0:	9003      	str	r0, [sp, #12]
 80201e2:	4640      	mov	r0, r8
 80201e4:	f7e9 fb88 	bl	80098f8 <awe_fwGetNextAvailableObjectID>
 80201e8:	f8d8 3074 	ldr.w	r3, [r8, #116]	@ 0x74
 80201ec:	9a03      	ldr	r2, [sp, #12]
 80201ee:	6090      	str	r0, [r2, #8]
 80201f0:	2b00      	cmp	r3, #0
 80201f2:	d03c      	beq.n	802026e <BaseClassModule_Constructor+0x12a>
 80201f4:	601a      	str	r2, [r3, #0]
 80201f6:	f8da 3008 	ldr.w	r3, [sl, #8]
 80201fa:	f8c8 2074 	str.w	r2, [r8, #116]	@ 0x74
 80201fe:	eb02 0989 	add.w	r9, r2, r9, lsl #2
 8020202:	f109 0120 	add.w	r1, r9, #32
 8020206:	e9c2 1304 	strd	r1, r3, [r2, #16]
 802020a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802020c:	f8c2 800c 	str.w	r8, [r2, #12]
 8020210:	f8c2 b018 	str.w	fp, [r2, #24]
 8020214:	b15b      	cbz	r3, 802022e <BaseClassModule_Constructor+0xea>
 8020216:	b157      	cbz	r7, 802022e <BaseClassModule_Constructor+0xea>
 8020218:	3b04      	subs	r3, #4
 802021a:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802021e:	f102 001c 	add.w	r0, r2, #28
 8020222:	f853 cf04 	ldr.w	ip, [r3, #4]!
 8020226:	f840 cf04 	str.w	ip, [r0, #4]!
 802022a:	42bb      	cmp	r3, r7
 802022c:	d1f9      	bne.n	8020222 <BaseClassModule_Constructor+0xde>
 802022e:	b14e      	cbz	r6, 8020244 <BaseClassModule_Constructor+0x100>
 8020230:	1f23      	subs	r3, r4, #4
 8020232:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8020236:	3904      	subs	r1, #4
 8020238:	f853 0f04 	ldr.w	r0, [r3, #4]!
 802023c:	f841 0f04 	str.w	r0, [r1, #4]!
 8020240:	42b3      	cmp	r3, r6
 8020242:	d1f9      	bne.n	8020238 <BaseClassModule_Constructor+0xf4>
 8020244:	2300      	movs	r3, #0
 8020246:	4610      	mov	r0, r2
 8020248:	602b      	str	r3, [r5, #0]
 802024a:	b005      	add	sp, #20
 802024c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020250:	f06f 0308 	mvn.w	r3, #8
 8020254:	600b      	str	r3, [r1, #0]
 8020256:	2200      	movs	r2, #0
 8020258:	4610      	mov	r0, r2
 802025a:	b005      	add	sp, #20
 802025c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020260:	2a00      	cmp	r2, #0
 8020262:	d083      	beq.n	802016c <BaseClassModule_Constructor+0x28>
 8020264:	f06f 0010 	mvn.w	r0, #16
 8020268:	461a      	mov	r2, r3
 802026a:	6008      	str	r0, [r1, #0]
 802026c:	e7f4      	b.n	8020258 <BaseClassModule_Constructor+0x114>
 802026e:	f8c8 2070 	str.w	r2, [r8, #112]	@ 0x70
 8020272:	e7c0      	b.n	80201f6 <BaseClassModule_Constructor+0xb2>
 8020274:	2200      	movs	r2, #0
 8020276:	f06f 0303 	mvn.w	r3, #3
 802027a:	4610      	mov	r0, r2
 802027c:	600b      	str	r3, [r1, #0]
 802027e:	b005      	add	sp, #20
 8020280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020284:	2200      	movs	r2, #0
 8020286:	e7e7      	b.n	8020258 <BaseClassModule_Constructor+0x114>
 8020288:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 802028c:	4642      	mov	r2, r8
 802028e:	600b      	str	r3, [r1, #0]
 8020290:	e7e2      	b.n	8020258 <BaseClassModule_Constructor+0x114>
 8020292:	bf00      	nop
 8020294:	20000ac0 	.word	0x20000ac0
 8020298:	4110ff80 	.word	0x4110ff80

0802029c <awe_fwModuleClassBaseConstructor>:
 802029c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202a0:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80202a4:	b085      	sub	sp, #20
 80202a6:	f3c3 4407 	ubfx	r4, r3, #16, #8
 80202aa:	4426      	add	r6, r4
 80202ac:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80202ae:	fa56 f683 	uxtab	r6, r6, r3
 80202b2:	2800      	cmp	r0, #0
 80202b4:	f000 808d 	beq.w	80203d2 <awe_fwModuleClassBaseConstructor+0x136>
 80202b8:	2f00      	cmp	r7, #0
 80202ba:	d077      	beq.n	80203ac <awe_fwModuleClassBaseConstructor+0x110>
 80202bc:	f8d1 b01c 	ldr.w	fp, [r1, #28]
 80202c0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80202c2:	fa1f f88b 	uxth.w	r8, fp
 80202c6:	45a0      	cmp	r8, r4
 80202c8:	d179      	bne.n	80203be <awe_fwModuleClassBaseConstructor+0x122>
 80202ca:	b1e6      	cbz	r6, 8020306 <awe_fwModuleClassBaseConstructor+0x6a>
 80202cc:	683c      	ldr	r4, [r7, #0]
 80202ce:	2c00      	cmp	r4, #0
 80202d0:	d064      	beq.n	802039c <awe_fwModuleClassBaseConstructor+0x100>
 80202d2:	6864      	ldr	r4, [r4, #4]
 80202d4:	4d41      	ldr	r5, [pc, #260]	@ (80203dc <awe_fwModuleClassBaseConstructor+0x140>)
 80202d6:	6864      	ldr	r4, [r4, #4]
 80202d8:	442c      	add	r4, r5
 80202da:	f5b4 6ff0 	cmp.w	r4, #1920	@ 0x780
 80202de:	d25d      	bcs.n	802039c <awe_fwModuleClassBaseConstructor+0x100>
 80202e0:	f1a7 0904 	sub.w	r9, r7, #4
 80202e4:	46ac      	mov	ip, r5
 80202e6:	eb09 0986 	add.w	r9, r9, r6, lsl #2
 80202ea:	463d      	mov	r5, r7
 80202ec:	e009      	b.n	8020302 <awe_fwModuleClassBaseConstructor+0x66>
 80202ee:	f855 4f04 	ldr.w	r4, [r5, #4]!
 80202f2:	2c00      	cmp	r4, #0
 80202f4:	d052      	beq.n	802039c <awe_fwModuleClassBaseConstructor+0x100>
 80202f6:	6864      	ldr	r4, [r4, #4]
 80202f8:	6864      	ldr	r4, [r4, #4]
 80202fa:	4464      	add	r4, ip
 80202fc:	f5b4 6ff0 	cmp.w	r4, #1920	@ 0x780
 8020300:	d24c      	bcs.n	802039c <awe_fwModuleClassBaseConstructor+0x100>
 8020302:	454d      	cmp	r5, r9
 8020304:	d1f3      	bne.n	80202ee <awe_fwModuleClassBaseConstructor+0x52>
 8020306:	eb08 4b1b 	add.w	fp, r8, fp, lsr #16
 802030a:	4689      	mov	r9, r1
 802030c:	f10b 0108 	add.w	r1, fp, #8
 8020310:	4614      	mov	r4, r2
 8020312:	4431      	add	r1, r6
 8020314:	9200      	str	r2, [sp, #0]
 8020316:	469a      	mov	sl, r3
 8020318:	0089      	lsls	r1, r1, #2
 802031a:	f240 2331 	movw	r3, #561	@ 0x231
 802031e:	2204      	movs	r2, #4
 8020320:	4605      	mov	r5, r0
 8020322:	f7ff fce5 	bl	801fcf0 <awe_fwMallocCommon>
 8020326:	6823      	ldr	r3, [r4, #0]
 8020328:	2b00      	cmp	r3, #0
 802032a:	d150      	bne.n	80203ce <awe_fwModuleClassBaseConstructor+0x132>
 802032c:	f8c0 9004 	str.w	r9, [r0, #4]
 8020330:	9003      	str	r0, [sp, #12]
 8020332:	4628      	mov	r0, r5
 8020334:	f7e9 fae0 	bl	80098f8 <awe_fwGetNextAvailableObjectID>
 8020338:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 802033a:	9903      	ldr	r1, [sp, #12]
 802033c:	6088      	str	r0, [r1, #8]
 802033e:	2b00      	cmp	r3, #0
 8020340:	d03b      	beq.n	80203ba <awe_fwModuleClassBaseConstructor+0x11e>
 8020342:	6019      	str	r1, [r3, #0]
 8020344:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8020348:	6769      	str	r1, [r5, #116]	@ 0x74
 802034a:	eb01 028b 	add.w	r2, r1, fp, lsl #2
 802034e:	3220      	adds	r2, #32
 8020350:	e9c1 2304 	strd	r2, r3, [r1, #16]
 8020354:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020356:	60cd      	str	r5, [r1, #12]
 8020358:	f8c1 a018 	str.w	sl, [r1, #24]
 802035c:	b16b      	cbz	r3, 802037a <awe_fwModuleClassBaseConstructor+0xde>
 802035e:	f1b8 0f00 	cmp.w	r8, #0
 8020362:	d00a      	beq.n	802037a <awe_fwModuleClassBaseConstructor+0xde>
 8020364:	3b04      	subs	r3, #4
 8020366:	eb03 0888 	add.w	r8, r3, r8, lsl #2
 802036a:	f101 001c 	add.w	r0, r1, #28
 802036e:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8020372:	f840 5f04 	str.w	r5, [r0, #4]!
 8020376:	4543      	cmp	r3, r8
 8020378:	d1f9      	bne.n	802036e <awe_fwModuleClassBaseConstructor+0xd2>
 802037a:	b14e      	cbz	r6, 8020390 <awe_fwModuleClassBaseConstructor+0xf4>
 802037c:	1f3b      	subs	r3, r7, #4
 802037e:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8020382:	3a04      	subs	r2, #4
 8020384:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8020388:	f842 0f04 	str.w	r0, [r2, #4]!
 802038c:	42b3      	cmp	r3, r6
 802038e:	d1f9      	bne.n	8020384 <awe_fwModuleClassBaseConstructor+0xe8>
 8020390:	2300      	movs	r3, #0
 8020392:	4608      	mov	r0, r1
 8020394:	6023      	str	r3, [r4, #0]
 8020396:	b005      	add	sp, #20
 8020398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802039c:	f06f 0308 	mvn.w	r3, #8
 80203a0:	6013      	str	r3, [r2, #0]
 80203a2:	2100      	movs	r1, #0
 80203a4:	4608      	mov	r0, r1
 80203a6:	b005      	add	sp, #20
 80203a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203ac:	2b00      	cmp	r3, #0
 80203ae:	d085      	beq.n	80202bc <awe_fwModuleClassBaseConstructor+0x20>
 80203b0:	f06f 0310 	mvn.w	r3, #16
 80203b4:	4639      	mov	r1, r7
 80203b6:	6013      	str	r3, [r2, #0]
 80203b8:	e7f4      	b.n	80203a4 <awe_fwModuleClassBaseConstructor+0x108>
 80203ba:	6729      	str	r1, [r5, #112]	@ 0x70
 80203bc:	e7c2      	b.n	8020344 <awe_fwModuleClassBaseConstructor+0xa8>
 80203be:	2100      	movs	r1, #0
 80203c0:	f06f 0303 	mvn.w	r3, #3
 80203c4:	4608      	mov	r0, r1
 80203c6:	6013      	str	r3, [r2, #0]
 80203c8:	b005      	add	sp, #20
 80203ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203ce:	2100      	movs	r1, #0
 80203d0:	e7e8      	b.n	80203a4 <awe_fwModuleClassBaseConstructor+0x108>
 80203d2:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 80203d6:	4601      	mov	r1, r0
 80203d8:	6013      	str	r3, [r2, #0]
 80203da:	e7e3      	b.n	80203a4 <awe_fwModuleClassBaseConstructor+0x108>
 80203dc:	4110ff80 	.word	0x4110ff80

080203e0 <awe_fwModuleClassConstructorObjs>:
 80203e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203e4:	4f31      	ldr	r7, [pc, #196]	@ (80204ac <awe_fwModuleClassConstructorObjs+0xcc>)
 80203e6:	b085      	sub	sp, #20
 80203e8:	f8d7 8000 	ldr.w	r8, [r7]
 80203ec:	4681      	mov	r9, r0
 80203ee:	2800      	cmp	r0, #0
 80203f0:	d044      	beq.n	802047c <awe_fwModuleClassConstructorObjs+0x9c>
 80203f2:	461d      	mov	r5, r3
 80203f4:	4692      	mov	sl, r2
 80203f6:	f7e8 fd29 	bl	8008e4c <awe_fwGetAweInstanceModuleClass>
 80203fa:	4683      	mov	fp, r0
 80203fc:	2800      	cmp	r0, #0
 80203fe:	d042      	beq.n	8020486 <awe_fwModuleClassConstructorObjs+0xa6>
 8020400:	6806      	ldr	r6, [r0, #0]
 8020402:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020404:	f8c7 9000 	str.w	r9, [r7]
 8020408:	2e00      	cmp	r6, #0
 802040a:	d042      	beq.n	8020492 <awe_fwModuleClassConstructorObjs+0xb2>
 802040c:	9300      	str	r3, [sp, #0]
 802040e:	4629      	mov	r1, r5
 8020410:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8020414:	4650      	mov	r0, sl
 8020416:	47b0      	blx	r6
 8020418:	4604      	mov	r4, r0
 802041a:	b124      	cbz	r4, 8020426 <awe_fwModuleClassConstructorObjs+0x46>
 802041c:	68e3      	ldr	r3, [r4, #12]
 802041e:	454b      	cmp	r3, r9
 8020420:	d11e      	bne.n	8020460 <awe_fwModuleClassConstructorObjs+0x80>
 8020422:	2300      	movs	r3, #0
 8020424:	60e3      	str	r3, [r4, #12]
 8020426:	f8da 3000 	ldr.w	r3, [sl]
 802042a:	b99b      	cbnz	r3, 8020454 <awe_fwModuleClassConstructorObjs+0x74>
 802042c:	4648      	mov	r0, r9
 802042e:	4622      	mov	r2, r4
 8020430:	68a1      	ldr	r1, [r4, #8]
 8020432:	f7e9 fa93 	bl	800995c <awe_fwSetIDPointer>
 8020436:	f8db 3010 	ldr.w	r3, [fp, #16]
 802043a:	b12b      	cbz	r3, 8020448 <awe_fwModuleClassConstructorObjs+0x68>
 802043c:	f04f 31ff 	mov.w	r1, #4294967295
 8020440:	4620      	mov	r0, r4
 8020442:	4798      	blx	r3
 8020444:	f8ca 0000 	str.w	r0, [sl]
 8020448:	f8c7 8000 	str.w	r8, [r7]
 802044c:	4620      	mov	r0, r4
 802044e:	b005      	add	sp, #20
 8020450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020454:	f8d9 3074 	ldr.w	r3, [r9, #116]	@ 0x74
 8020458:	b16b      	cbz	r3, 8020476 <awe_fwModuleClassConstructorObjs+0x96>
 802045a:	2200      	movs	r2, #0
 802045c:	601a      	str	r2, [r3, #0]
 802045e:	e7f3      	b.n	8020448 <awe_fwModuleClassConstructorObjs+0x68>
 8020460:	2400      	movs	r4, #0
 8020462:	f06f 036e 	mvn.w	r3, #110	@ 0x6e
 8020466:	4620      	mov	r0, r4
 8020468:	f8ca 3000 	str.w	r3, [sl]
 802046c:	f8c7 8000 	str.w	r8, [r7]
 8020470:	b005      	add	sp, #20
 8020472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020476:	f8c9 3070 	str.w	r3, [r9, #112]	@ 0x70
 802047a:	e7e5      	b.n	8020448 <awe_fwModuleClassConstructorObjs+0x68>
 802047c:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 8020480:	4604      	mov	r4, r0
 8020482:	6013      	str	r3, [r2, #0]
 8020484:	e7e2      	b.n	802044c <awe_fwModuleClassConstructorObjs+0x6c>
 8020486:	f06f 0305 	mvn.w	r3, #5
 802048a:	4604      	mov	r4, r0
 802048c:	f8ca 3000 	str.w	r3, [sl]
 8020490:	e7dc      	b.n	802044c <awe_fwModuleClassConstructorObjs+0x6c>
 8020492:	9302      	str	r3, [sp, #8]
 8020494:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020496:	9301      	str	r3, [sp, #4]
 8020498:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802049a:	9300      	str	r3, [sp, #0]
 802049c:	4601      	mov	r1, r0
 802049e:	462b      	mov	r3, r5
 80204a0:	4652      	mov	r2, sl
 80204a2:	4648      	mov	r0, r9
 80204a4:	f7ff fefa 	bl	802029c <awe_fwModuleClassBaseConstructor>
 80204a8:	4604      	mov	r4, r0
 80204aa:	e7b6      	b.n	802041a <awe_fwModuleClassConstructorObjs+0x3a>
 80204ac:	20000ac0 	.word	0x20000ac0

080204b0 <awe_fwModuleClassConstructorIDs>:
 80204b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204b4:	f3c3 2507 	ubfx	r5, r3, #8, #8
 80204b8:	f3c3 4407 	ubfx	r4, r3, #16, #8
 80204bc:	4425      	add	r5, r4
 80204be:	b089      	sub	sp, #36	@ 0x24
 80204c0:	fa55 f583 	uxtab	r5, r5, r3
 80204c4:	4680      	mov	r8, r0
 80204c6:	2800      	cmp	r0, #0
 80204c8:	d053      	beq.n	8020572 <awe_fwModuleClassConstructorIDs+0xc2>
 80204ca:	468a      	mov	sl, r1
 80204cc:	4617      	mov	r7, r2
 80204ce:	9305      	str	r3, [sp, #20]
 80204d0:	f7e8 fcbc 	bl	8008e4c <awe_fwGetAweInstanceModuleClass>
 80204d4:	f508 7b8e 	add.w	fp, r8, #284	@ 0x11c
 80204d8:	2800      	cmp	r0, #0
 80204da:	d04e      	beq.n	802057a <awe_fwModuleClassConstructorIDs+0xca>
 80204dc:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
 80204e0:	d841      	bhi.n	8020566 <awe_fwModuleClassConstructorIDs+0xb6>
 80204e2:	b325      	cbz	r5, 802052e <awe_fwModuleClassConstructorIDs+0x7e>
 80204e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80204e6:	2b00      	cmp	r3, #0
 80204e8:	d03d      	beq.n	8020566 <awe_fwModuleClassConstructorIDs+0xb6>
 80204ea:	1f1c      	subs	r4, r3, #4
 80204ec:	f8df 9094 	ldr.w	r9, [pc, #148]	@ 8020584 <awe_fwModuleClassConstructorIDs+0xd4>
 80204f0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 80204f4:	f508 768c 	add.w	r6, r8, #280	@ 0x118
 80204f8:	e009      	b.n	802050e <awe_fwModuleClassConstructorIDs+0x5e>
 80204fa:	9b07      	ldr	r3, [sp, #28]
 80204fc:	444b      	add	r3, r9
 80204fe:	f5b3 6ff0 	cmp.w	r3, #1920	@ 0x780
 8020502:	d22a      	bcs.n	802055a <awe_fwModuleClassConstructorIDs+0xaa>
 8020504:	9b06      	ldr	r3, [sp, #24]
 8020506:	f846 3f04 	str.w	r3, [r6, #4]!
 802050a:	42ac      	cmp	r4, r5
 802050c:	d00f      	beq.n	802052e <awe_fwModuleClassConstructorIDs+0x7e>
 802050e:	ab07      	add	r3, sp, #28
 8020510:	aa06      	add	r2, sp, #24
 8020512:	f854 1f04 	ldr.w	r1, [r4, #4]!
 8020516:	4640      	mov	r0, r8
 8020518:	f7e9 f9a4 	bl	8009864 <awe_fwGetObjectByID>
 802051c:	6038      	str	r0, [r7, #0]
 802051e:	2800      	cmp	r0, #0
 8020520:	d0eb      	beq.n	80204fa <awe_fwModuleClassConstructorIDs+0x4a>
 8020522:	f04f 0800 	mov.w	r8, #0
 8020526:	4640      	mov	r0, r8
 8020528:	b009      	add	sp, #36	@ 0x24
 802052a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802052e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8020530:	9302      	str	r3, [sp, #8]
 8020532:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8020534:	463a      	mov	r2, r7
 8020536:	e9cd b300 	strd	fp, r3, [sp]
 802053a:	4651      	mov	r1, sl
 802053c:	4640      	mov	r0, r8
 802053e:	9b05      	ldr	r3, [sp, #20]
 8020540:	f7ff ff4e 	bl	80203e0 <awe_fwModuleClassConstructorObjs>
 8020544:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8020548:	4680      	mov	r8, r0
 802054a:	2100      	movs	r1, #0
 802054c:	4658      	mov	r0, fp
 802054e:	f00d fb01 	bl	802db54 <memset>
 8020552:	4640      	mov	r0, r8
 8020554:	b009      	add	sp, #36	@ 0x24
 8020556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802055a:	f06f 0308 	mvn.w	r3, #8
 802055e:	603b      	str	r3, [r7, #0]
 8020560:	f04f 0800 	mov.w	r8, #0
 8020564:	e7df      	b.n	8020526 <awe_fwModuleClassConstructorIDs+0x76>
 8020566:	f06f 0310 	mvn.w	r3, #16
 802056a:	603b      	str	r3, [r7, #0]
 802056c:	f04f 0800 	mov.w	r8, #0
 8020570:	e7ef      	b.n	8020552 <awe_fwModuleClassConstructorIDs+0xa2>
 8020572:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 8020576:	6013      	str	r3, [r2, #0]
 8020578:	e7eb      	b.n	8020552 <awe_fwModuleClassConstructorIDs+0xa2>
 802057a:	f06f 0305 	mvn.w	r3, #5
 802057e:	4680      	mov	r8, r0
 8020580:	603b      	str	r3, [r7, #0]
 8020582:	e7e6      	b.n	8020552 <awe_fwModuleClassConstructorIDs+0xa2>
 8020584:	4110ff80 	.word	0x4110ff80

08020588 <ClassModule_Constructor>:
 8020588:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802058c:	4f2e      	ldr	r7, [pc, #184]	@ (8020648 <ClassModule_Constructor+0xc0>)
 802058e:	683c      	ldr	r4, [r7, #0]
 8020590:	b084      	sub	sp, #16
 8020592:	2c00      	cmp	r4, #0
 8020594:	d041      	beq.n	802061a <ClassModule_Constructor+0x92>
 8020596:	460e      	mov	r6, r1
 8020598:	4601      	mov	r1, r0
 802059a:	4620      	mov	r0, r4
 802059c:	4698      	mov	r8, r3
 802059e:	4615      	mov	r5, r2
 80205a0:	f7e8 fc54 	bl	8008e4c <awe_fwGetAweInstanceModuleClass>
 80205a4:	4681      	mov	r9, r0
 80205a6:	2800      	cmp	r0, #0
 80205a8:	d03c      	beq.n	8020624 <ClassModule_Constructor+0x9c>
 80205aa:	f8d0 a000 	ldr.w	sl, [r0]
 80205ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80205b0:	603c      	str	r4, [r7, #0]
 80205b2:	f1ba 0f00 	cmp.w	sl, #0
 80205b6:	d03a      	beq.n	802062e <ClassModule_Constructor+0xa6>
 80205b8:	9300      	str	r3, [sp, #0]
 80205ba:	4629      	mov	r1, r5
 80205bc:	4642      	mov	r2, r8
 80205be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80205c0:	4630      	mov	r0, r6
 80205c2:	47d0      	blx	sl
 80205c4:	4605      	mov	r5, r0
 80205c6:	b125      	cbz	r5, 80205d2 <ClassModule_Constructor+0x4a>
 80205c8:	68eb      	ldr	r3, [r5, #12]
 80205ca:	429c      	cmp	r4, r3
 80205cc:	d11a      	bne.n	8020604 <ClassModule_Constructor+0x7c>
 80205ce:	2300      	movs	r3, #0
 80205d0:	60eb      	str	r3, [r5, #12]
 80205d2:	6833      	ldr	r3, [r6, #0]
 80205d4:	b98b      	cbnz	r3, 80205fa <ClassModule_Constructor+0x72>
 80205d6:	462a      	mov	r2, r5
 80205d8:	68a9      	ldr	r1, [r5, #8]
 80205da:	4620      	mov	r0, r4
 80205dc:	f7e9 f9be 	bl	800995c <awe_fwSetIDPointer>
 80205e0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80205e4:	b123      	cbz	r3, 80205f0 <ClassModule_Constructor+0x68>
 80205e6:	f04f 31ff 	mov.w	r1, #4294967295
 80205ea:	4628      	mov	r0, r5
 80205ec:	4798      	blx	r3
 80205ee:	6030      	str	r0, [r6, #0]
 80205f0:	603c      	str	r4, [r7, #0]
 80205f2:	4628      	mov	r0, r5
 80205f4:	b004      	add	sp, #16
 80205f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80205fa:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80205fc:	b15b      	cbz	r3, 8020616 <ClassModule_Constructor+0x8e>
 80205fe:	2200      	movs	r2, #0
 8020600:	601a      	str	r2, [r3, #0]
 8020602:	e7f5      	b.n	80205f0 <ClassModule_Constructor+0x68>
 8020604:	2500      	movs	r5, #0
 8020606:	f06f 036e 	mvn.w	r3, #110	@ 0x6e
 802060a:	4628      	mov	r0, r5
 802060c:	6033      	str	r3, [r6, #0]
 802060e:	603c      	str	r4, [r7, #0]
 8020610:	b004      	add	sp, #16
 8020612:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020616:	6723      	str	r3, [r4, #112]	@ 0x70
 8020618:	e7ea      	b.n	80205f0 <ClassModule_Constructor+0x68>
 802061a:	f06f 0350 	mvn.w	r3, #80	@ 0x50
 802061e:	4625      	mov	r5, r4
 8020620:	600b      	str	r3, [r1, #0]
 8020622:	e7e6      	b.n	80205f2 <ClassModule_Constructor+0x6a>
 8020624:	f06f 0305 	mvn.w	r3, #5
 8020628:	4605      	mov	r5, r0
 802062a:	6033      	str	r3, [r6, #0]
 802062c:	e7e1      	b.n	80205f2 <ClassModule_Constructor+0x6a>
 802062e:	9302      	str	r3, [sp, #8]
 8020630:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020632:	4601      	mov	r1, r0
 8020634:	e9cd 8300 	strd	r8, r3, [sp]
 8020638:	4632      	mov	r2, r6
 802063a:	462b      	mov	r3, r5
 802063c:	4620      	mov	r0, r4
 802063e:	f7ff fe2d 	bl	802029c <awe_fwModuleClassBaseConstructor>
 8020642:	4605      	mov	r5, r0
 8020644:	e7bf      	b.n	80205c6 <ClassModule_Constructor+0x3e>
 8020646:	bf00      	nop
 8020648:	20000ac0 	.word	0x20000ac0

0802064c <ClassWire_Constructor>:
 802064c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020650:	460e      	mov	r6, r1
 8020652:	461f      	mov	r7, r3
 8020654:	4691      	mov	r9, r2
 8020656:	460b      	mov	r3, r1
 8020658:	2202      	movs	r2, #2
 802065a:	2128      	movs	r1, #40	@ 0x28
 802065c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020660:	4605      	mov	r5, r0
 8020662:	f7ff f929 	bl	801f8b8 <awe_fwMallocInst>
 8020666:	b380      	cbz	r0, 80206ca <ClassWire_Constructor+0x7e>
 8020668:	4604      	mov	r4, r0
 802066a:	4628      	mov	r0, r5
 802066c:	f7e9 f944 	bl	80098f8 <awe_fwGetNextAvailableObjectID>
 8020670:	4622      	mov	r2, r4
 8020672:	4601      	mov	r1, r0
 8020674:	60a0      	str	r0, [r4, #8]
 8020676:	4628      	mov	r0, r5
 8020678:	f7e9 f970 	bl	800995c <awe_fwSetIDPointer>
 802067c:	f3c7 0209 	ubfx	r2, r7, #0, #10
 8020680:	0f3b      	lsrs	r3, r7, #28
 8020682:	fb03 f302 	mul.w	r3, r3, r2
 8020686:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020688:	4a12      	ldr	r2, [pc, #72]	@ (80206d4 <ClassWire_Constructor+0x88>)
 802068a:	61e0      	str	r0, [r4, #28]
 802068c:	f3c8 0110 	ubfx	r1, r8, #0, #17
 8020690:	fb01 f103 	mul.w	r1, r1, r3
 8020694:	6062      	str	r2, [r4, #4]
 8020696:	f8c4 9010 	str.w	r9, [r4, #16]
 802069a:	e9c4 7805 	strd	r7, r8, [r4, #20]
 802069e:	4633      	mov	r3, r6
 80206a0:	f240 2231 	movw	r2, #561	@ 0x231
 80206a4:	4628      	mov	r0, r5
 80206a6:	f7ff f907 	bl	801f8b8 <awe_fwMallocInst>
 80206aa:	60e0      	str	r0, [r4, #12]
 80206ac:	b168      	cbz	r0, 80206ca <ClassWire_Constructor+0x7e>
 80206ae:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80206b0:	4a09      	ldr	r2, [pc, #36]	@ (80206d8 <ClassWire_Constructor+0x8c>)
 80206b2:	f840 2c04 	str.w	r2, [r0, #-4]
 80206b6:	b133      	cbz	r3, 80206c6 <ClassWire_Constructor+0x7a>
 80206b8:	601c      	str	r4, [r3, #0]
 80206ba:	2300      	movs	r3, #0
 80206bc:	6033      	str	r3, [r6, #0]
 80206be:	4620      	mov	r0, r4
 80206c0:	676c      	str	r4, [r5, #116]	@ 0x74
 80206c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80206c6:	672c      	str	r4, [r5, #112]	@ 0x70
 80206c8:	e7f7      	b.n	80206ba <ClassWire_Constructor+0x6e>
 80206ca:	2400      	movs	r4, #0
 80206cc:	4620      	mov	r0, r4
 80206ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80206d2:	bf00      	nop
 80206d4:	08035e84 	.word	0x08035e84
 80206d8:	deadbeef 	.word	0xdeadbeef

080206dc <awe_fwGetWireType>:
 80206dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80206de:	b083      	sub	sp, #12
 80206e0:	4617      	mov	r7, r2
 80206e2:	461e      	mov	r6, r3
 80206e4:	466a      	mov	r2, sp
 80206e6:	ab01      	add	r3, sp, #4
 80206e8:	f7e9 f8bc 	bl	8009864 <awe_fwGetObjectByID>
 80206ec:	b9e0      	cbnz	r0, 8020728 <awe_fwGetWireType+0x4c>
 80206ee:	9a01      	ldr	r2, [sp, #4]
 80206f0:	4b0f      	ldr	r3, [pc, #60]	@ (8020730 <awe_fwGetWireType+0x54>)
 80206f2:	9c00      	ldr	r4, [sp, #0]
 80206f4:	4413      	add	r3, r2
 80206f6:	f5b3 6ff0 	cmp.w	r3, #1920	@ 0x780
 80206fa:	d212      	bcs.n	8020722 <awe_fwGetWireType+0x46>
 80206fc:	4605      	mov	r5, r0
 80206fe:	4620      	mov	r0, r4
 8020700:	f7e9 f902 	bl	8009908 <awe_fwGetClassType>
 8020704:	6922      	ldr	r2, [r4, #16]
 8020706:	6038      	str	r0, [r7, #0]
 8020708:	6963      	ldr	r3, [r4, #20]
 802070a:	6032      	str	r2, [r6, #0]
 802070c:	9a08      	ldr	r2, [sp, #32]
 802070e:	6013      	str	r3, [r2, #0]
 8020710:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020712:	69a3      	ldr	r3, [r4, #24]
 8020714:	6013      	str	r3, [r2, #0]
 8020716:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020718:	69e3      	ldr	r3, [r4, #28]
 802071a:	6013      	str	r3, [r2, #0]
 802071c:	4628      	mov	r0, r5
 802071e:	b003      	add	sp, #12
 8020720:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020722:	f06f 0008 	mvn.w	r0, #8
 8020726:	e7fa      	b.n	802071e <awe_fwGetWireType+0x42>
 8020728:	f06f 004e 	mvn.w	r0, #78	@ 0x4e
 802072c:	e7f7      	b.n	802071e <awe_fwGetWireType+0x42>
 802072e:	bf00      	nop
 8020730:	4110ff80 	.word	0x4110ff80

08020734 <awe_fwCreateWireBufferPool>:
 8020734:	b530      	push	{r4, r5, lr}
 8020736:	b083      	sub	sp, #12
 8020738:	460c      	mov	r4, r1
 802073a:	ab01      	add	r3, sp, #4
 802073c:	0089      	lsls	r1, r1, #2
 802073e:	f240 2231 	movw	r2, #561	@ 0x231
 8020742:	4605      	mov	r5, r0
 8020744:	f7ff f8b8 	bl	801f8b8 <awe_fwMallocInst>
 8020748:	b120      	cbz	r0, 8020754 <awe_fwCreateWireBufferPool+0x20>
 802074a:	e9c5 043e 	strd	r0, r4, [r5, #248]	@ 0xf8
 802074e:	2000      	movs	r0, #0
 8020750:	b003      	add	sp, #12
 8020752:	bd30      	pop	{r4, r5, pc}
 8020754:	f06f 0001 	mvn.w	r0, #1
 8020758:	e7fa      	b.n	8020750 <awe_fwCreateWireBufferPool+0x1c>
 802075a:	bf00      	nop

0802075c <awe_fwCreateWireInBufferPool>:
 802075c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020760:	b082      	sub	sp, #8
 8020762:	460e      	mov	r6, r1
 8020764:	9100      	str	r1, [sp, #0]
 8020766:	4690      	mov	r8, r2
 8020768:	461f      	mov	r7, r3
 802076a:	2204      	movs	r2, #4
 802076c:	f240 2331 	movw	r3, #561	@ 0x231
 8020770:	2128      	movs	r1, #40	@ 0x28
 8020772:	4605      	mov	r5, r0
 8020774:	f7ff fabc 	bl	801fcf0 <awe_fwMallocCommon>
 8020778:	4604      	mov	r4, r0
 802077a:	2800      	cmp	r0, #0
 802077c:	d03a      	beq.n	80207f4 <awe_fwCreateWireInBufferPool+0x98>
 802077e:	4628      	mov	r0, r5
 8020780:	f7e9 f8ba 	bl	80098f8 <awe_fwGetNextAvailableObjectID>
 8020784:	4622      	mov	r2, r4
 8020786:	4601      	mov	r1, r0
 8020788:	60a0      	str	r0, [r4, #8]
 802078a:	4628      	mov	r0, r5
 802078c:	f7e9 f8e6 	bl	800995c <awe_fwSetIDPointer>
 8020790:	9b08      	ldr	r3, [sp, #32]
 8020792:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8020794:	f8d5 20fc 	ldr.w	r2, [r5, #252]	@ 0xfc
 8020798:	f8df c070 	ldr.w	ip, [pc, #112]	@ 802080c <awe_fwCreateWireInBufferPool+0xb0>
 802079c:	f8c4 8010 	str.w	r8, [r4, #16]
 80207a0:	f3c7 0109 	ubfx	r1, r7, #0, #10
 80207a4:	f3c3 0310 	ubfx	r3, r3, #0, #17
 80207a8:	fb01 0303 	mla	r3, r1, r3, r0
 80207ac:	9808      	ldr	r0, [sp, #32]
 80207ae:	4916      	ldr	r1, [pc, #88]	@ (8020808 <awe_fwCreateWireInBufferPool+0xac>)
 80207b0:	61a0      	str	r0, [r4, #24]
 80207b2:	4293      	cmp	r3, r2
 80207b4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80207b6:	6167      	str	r7, [r4, #20]
 80207b8:	61e0      	str	r0, [r4, #28]
 80207ba:	f8c4 c004 	str.w	ip, [r4, #4]
 80207be:	6261      	str	r1, [r4, #36]	@ 0x24
 80207c0:	d908      	bls.n	80207d4 <awe_fwCreateWireInBufferPool+0x78>
 80207c2:	f06f 036b 	mvn.w	r3, #107	@ 0x6b
 80207c6:	6033      	str	r3, [r6, #0]
 80207c8:	676c      	str	r4, [r5, #116]	@ 0x74
 80207ca:	2400      	movs	r4, #0
 80207cc:	4620      	mov	r0, r4
 80207ce:	b002      	add	sp, #8
 80207d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207d4:	f8d5 30f8 	ldr.w	r3, [r5, #248]	@ 0xf8
 80207d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80207da:	6f6a      	ldr	r2, [r5, #116]	@ 0x74
 80207dc:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80207e0:	60e3      	str	r3, [r4, #12]
 80207e2:	b172      	cbz	r2, 8020802 <awe_fwCreateWireInBufferPool+0xa6>
 80207e4:	6014      	str	r4, [r2, #0]
 80207e6:	2300      	movs	r3, #0
 80207e8:	4620      	mov	r0, r4
 80207ea:	6033      	str	r3, [r6, #0]
 80207ec:	676c      	str	r4, [r5, #116]	@ 0x74
 80207ee:	b002      	add	sp, #8
 80207f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207f4:	6833      	ldr	r3, [r6, #0]
 80207f6:	2b00      	cmp	r3, #0
 80207f8:	d1e7      	bne.n	80207ca <awe_fwCreateWireInBufferPool+0x6e>
 80207fa:	4620      	mov	r0, r4
 80207fc:	b002      	add	sp, #8
 80207fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020802:	672c      	str	r4, [r5, #112]	@ 0x70
 8020804:	e7ef      	b.n	80207e6 <awe_fwCreateWireInBufferPool+0x8a>
 8020806:	bf00      	nop
 8020808:	deadbeef 	.word	0xdeadbeef
 802080c:	08035e84 	.word	0x08035e84

08020810 <bam_reset>:
 8020810:	b538      	push	{r3, r4, r5, lr}
 8020812:	2278      	movs	r2, #120	@ 0x78
 8020814:	2301      	movs	r3, #1
 8020816:	2500      	movs	r5, #0
 8020818:	4604      	mov	r4, r0
 802081a:	f8a0 28ba 	strh.w	r2, [r0, #2234]	@ 0x8ba
 802081e:	f8a0 38b4 	strh.w	r3, [r0, #2228]	@ 0x8b4
 8020822:	f8a0 38b6 	strh.w	r3, [r0, #2230]	@ 0x8b6
 8020826:	6001      	str	r1, [r0, #0]
 8020828:	f8a0 58b8 	strh.w	r5, [r0, #2232]	@ 0x8b8
 802082c:	30a0      	adds	r0, #160	@ 0xa0
 802082e:	f009 fd1f 	bl	802a270 <bam_biquad_reset>
 8020832:	f504 7001 	add.w	r0, r4, #516	@ 0x204
 8020836:	f009 fd1b 	bl	802a270 <bam_biquad_reset>
 802083a:	f504 705a 	add.w	r0, r4, #872	@ 0x368
 802083e:	f009 fd17 	bl	802a270 <bam_biquad_reset>
 8020842:	f204 40cc 	addw	r0, r4, #1228	@ 0x4cc
 8020846:	f009 fd13 	bl	802a270 <bam_biquad_reset>
 802084a:	6821      	ldr	r1, [r4, #0]
 802084c:	f504 60b6 	add.w	r0, r4, #1456	@ 0x5b0
 8020850:	f00a f896 	bl	802a980 <bam_svc_reset>
 8020854:	f604 008c 	addw	r0, r4, #2188	@ 0x88c
 8020858:	f005 fd52 	bl	8026300 <limiter_reset>
 802085c:	4628      	mov	r0, r5
 802085e:	bd38      	pop	{r3, r4, r5, pc}

08020860 <bam_setConfig>:
 8020860:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020864:	f9b1 28b4 	ldrsh.w	r2, [r1, #2228]	@ 0x8b4
 8020868:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802086c:	429a      	cmp	r2, r3
 802086e:	4605      	mov	r5, r0
 8020870:	460c      	mov	r4, r1
 8020872:	d031      	beq.n	80208d8 <bam_setConfig+0x78>
 8020874:	8882      	ldrh	r2, [r0, #4]
 8020876:	f8a1 38b4 	strh.w	r3, [r1, #2228]	@ 0x8b4
 802087a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 802087e:	f8a1 28b8 	strh.w	r2, [r1, #2232]	@ 0x8b8
 8020882:	2601      	movs	r6, #1
 8020884:	2201      	movs	r2, #1
 8020886:	2103      	movs	r1, #3
 8020888:	f884 1055 	strb.w	r1, [r4, #85]	@ 0x55
 802088c:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8020890:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8020894:	f8a4 38ba 	strh.w	r3, [r4, #2234]	@ 0x8ba
 8020898:	2a96      	cmp	r2, #150	@ 0x96
 802089a:	f000 813b 	beq.w	8020b14 <bam_setConfig+0x2b4>
 802089e:	dd47      	ble.n	8020930 <bam_setConfig+0xd0>
 80208a0:	2adc      	cmp	r2, #220	@ 0xdc
 80208a2:	f000 820f 	beq.w	8020cc4 <bam_setConfig+0x464>
 80208a6:	f340 80ff 	ble.w	8020aa8 <bam_setConfig+0x248>
 80208aa:	f5b2 7f8c 	cmp.w	r2, #280	@ 0x118
 80208ae:	f000 81fb 	beq.w	8020ca8 <bam_setConfig+0x448>
 80208b2:	f5b2 7f96 	cmp.w	r2, #300	@ 0x12c
 80208b6:	f000 8114 	beq.w	8020ae2 <bam_setConfig+0x282>
 80208ba:	2afa      	cmp	r2, #250	@ 0xfa
 80208bc:	f000 81dc 	beq.w	8020c78 <bam_setConfig+0x418>
 80208c0:	4ad6      	ldr	r2, [pc, #856]	@ (8020c1c <bam_setConfig+0x3bc>)
 80208c2:	215c      	movs	r1, #92	@ 0x5c
 80208c4:	f1a2 0348 	sub.w	r3, r2, #72	@ 0x48
 80208c8:	2058      	movs	r0, #88	@ 0x58
 80208ca:	f04f 0e54 	mov.w	lr, #84	@ 0x54
 80208ce:	f04f 0c50 	mov.w	ip, #80	@ 0x50
 80208d2:	f04f 084c 	mov.w	r8, #76	@ 0x4c
 80208d6:	e04f      	b.n	8020978 <bam_setConfig+0x118>
 80208d8:	f9b1 68b8 	ldrsh.w	r6, [r1, #2232]	@ 0x8b8
 80208dc:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80208e0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80208e4:	f9b4 28ba 	ldrsh.w	r2, [r4, #2234]	@ 0x8ba
 80208e8:	1a76      	subs	r6, r6, r1
 80208ea:	bf18      	it	ne
 80208ec:	2601      	movne	r6, #1
 80208ee:	429a      	cmp	r2, r3
 80208f0:	bf08      	it	eq
 80208f2:	2700      	moveq	r7, #0
 80208f4:	d1c6      	bne.n	8020884 <bam_setConfig+0x24>
 80208f6:	b166      	cbz	r6, 8020912 <bam_setConfig+0xb2>
 80208f8:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80208fc:	f8a4 38b8 	strh.w	r3, [r4, #2232]	@ 0x8b8
 8020900:	005b      	lsls	r3, r3, #1
 8020902:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8020906:	f504 61b6 	add.w	r1, r4, #1456	@ 0x5b0
 802090a:	f204 509c 	addw	r0, r4, #1436	@ 0x59c
 802090e:	f00a f877 	bl	802aa00 <bam_svc_setConfig>
 8020912:	896a      	ldrh	r2, [r5, #10]
 8020914:	682b      	ldr	r3, [r5, #0]
 8020916:	f8c4 3888 	str.w	r3, [r4, #2184]	@ 0x888
 802091a:	f8a4 2884 	strh.w	r2, [r4, #2180]	@ 0x884
 802091e:	f604 018c 	addw	r1, r4, #2188	@ 0x88c
 8020922:	f604 0084 	addw	r0, r4, #2180	@ 0x884
 8020926:	f005 fd0b 	bl	8026340 <limiter_setConfig>
 802092a:	4638      	mov	r0, r7
 802092c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020930:	2a50      	cmp	r2, #80	@ 0x50
 8020932:	f000 81ad 	beq.w	8020c90 <bam_setConfig+0x430>
 8020936:	dc10      	bgt.n	802095a <bam_setConfig+0xfa>
 8020938:	2a3c      	cmp	r2, #60	@ 0x3c
 802093a:	f000 80e0 	beq.w	8020afe <bam_setConfig+0x29e>
 802093e:	2a46      	cmp	r2, #70	@ 0x46
 8020940:	d1be      	bne.n	80208c0 <bam_setConfig+0x60>
 8020942:	4ab7      	ldr	r2, [pc, #732]	@ (8020c20 <bam_setConfig+0x3c0>)
 8020944:	212c      	movs	r1, #44	@ 0x2c
 8020946:	f1a2 0318 	sub.w	r3, r2, #24
 802094a:	2028      	movs	r0, #40	@ 0x28
 802094c:	f04f 0e24 	mov.w	lr, #36	@ 0x24
 8020950:	f04f 0c20 	mov.w	ip, #32
 8020954:	f04f 081c 	mov.w	r8, #28
 8020958:	e00e      	b.n	8020978 <bam_setConfig+0x118>
 802095a:	2a64      	cmp	r2, #100	@ 0x64
 802095c:	d0b0      	beq.n	80208c0 <bam_setConfig+0x60>
 802095e:	2a78      	cmp	r2, #120	@ 0x78
 8020960:	d1ae      	bne.n	80208c0 <bam_setConfig+0x60>
 8020962:	4ab0      	ldr	r2, [pc, #704]	@ (8020c24 <bam_setConfig+0x3c4>)
 8020964:	2174      	movs	r1, #116	@ 0x74
 8020966:	f1a2 0360 	sub.w	r3, r2, #96	@ 0x60
 802096a:	2070      	movs	r0, #112	@ 0x70
 802096c:	f04f 0e6c 	mov.w	lr, #108	@ 0x6c
 8020970:	f04f 0c68 	mov.w	ip, #104	@ 0x68
 8020974:	f04f 0864 	mov.w	r8, #100	@ 0x64
 8020978:	6817      	ldr	r7, [r2, #0]
 802097a:	f8c4 7088 	str.w	r7, [r4, #136]	@ 0x88
 802097e:	f853 7008 	ldr.w	r7, [r3, r8]
 8020982:	f8c4 708c 	str.w	r7, [r4, #140]	@ 0x8c
 8020986:	f853 700c 	ldr.w	r7, [r3, ip]
 802098a:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
 802098e:	f853 700e 	ldr.w	r7, [r3, lr]
 8020992:	f8c4 7094 	str.w	r7, [r4, #148]	@ 0x94
 8020996:	581f      	ldr	r7, [r3, r0]
 8020998:	f8c4 7098 	str.w	r7, [r4, #152]	@ 0x98
 802099c:	585f      	ldr	r7, [r3, r1]
 802099e:	f8c4 709c 	str.w	r7, [r4, #156]	@ 0x9c
 80209a2:	6817      	ldr	r7, [r2, #0]
 80209a4:	6727      	str	r7, [r4, #112]	@ 0x70
 80209a6:	f853 7008 	ldr.w	r7, [r3, r8]
 80209aa:	6767      	str	r7, [r4, #116]	@ 0x74
 80209ac:	f853 700c 	ldr.w	r7, [r3, ip]
 80209b0:	67a7      	str	r7, [r4, #120]	@ 0x78
 80209b2:	f853 700e 	ldr.w	r7, [r3, lr]
 80209b6:	67e7      	str	r7, [r4, #124]	@ 0x7c
 80209b8:	581f      	ldr	r7, [r3, r0]
 80209ba:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
 80209be:	585f      	ldr	r7, [r3, r1]
 80209c0:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
 80209c4:	6812      	ldr	r2, [r2, #0]
 80209c6:	65a2      	str	r2, [r4, #88]	@ 0x58
 80209c8:	f853 2008 	ldr.w	r2, [r3, r8]
 80209cc:	65e2      	str	r2, [r4, #92]	@ 0x5c
 80209ce:	f853 200c 	ldr.w	r2, [r3, ip]
 80209d2:	6622      	str	r2, [r4, #96]	@ 0x60
 80209d4:	f853 200e 	ldr.w	r2, [r3, lr]
 80209d8:	6662      	str	r2, [r4, #100]	@ 0x64
 80209da:	581a      	ldr	r2, [r3, r0]
 80209dc:	66a2      	str	r2, [r4, #104]	@ 0x68
 80209de:	585b      	ldr	r3, [r3, r1]
 80209e0:	66e3      	str	r3, [r4, #108]	@ 0x6c
 80209e2:	f104 01a0 	add.w	r1, r4, #160	@ 0xa0
 80209e6:	f104 0054 	add.w	r0, r4, #84	@ 0x54
 80209ea:	f009 fc61 	bl	802a2b0 <bam_biquad_setConfig>
 80209ee:	2301      	movs	r3, #1
 80209f0:	2202      	movs	r2, #2
 80209f2:	f884 21b9 	strb.w	r2, [r4, #441]	@ 0x1b9
 80209f6:	f884 31b8 	strb.w	r3, [r4, #440]	@ 0x1b8
 80209fa:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80209fe:	2b96      	cmp	r3, #150	@ 0x96
 8020a00:	f000 817a 	beq.w	8020cf8 <bam_setConfig+0x498>
 8020a04:	f340 8092 	ble.w	8020b2c <bam_setConfig+0x2cc>
 8020a08:	2bdc      	cmp	r3, #220	@ 0xdc
 8020a0a:	f000 8183 	beq.w	8020d14 <bam_setConfig+0x4b4>
 8020a0e:	f340 80b7 	ble.w	8020b80 <bam_setConfig+0x320>
 8020a12:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 8020a16:	f000 80e4 	beq.w	8020be2 <bam_setConfig+0x382>
 8020a1a:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8020a1e:	f000 80d0 	beq.w	8020bc2 <bam_setConfig+0x362>
 8020a22:	2bfa      	cmp	r3, #250	@ 0xfa
 8020a24:	f000 815a 	beq.w	8020cdc <bam_setConfig+0x47c>
 8020a28:	f8df 9214 	ldr.w	r9, [pc, #532]	@ 8020c40 <bam_setConfig+0x3e0>
 8020a2c:	225c      	movs	r2, #92	@ 0x5c
 8020a2e:	f1a9 0348 	sub.w	r3, r9, #72	@ 0x48
 8020a32:	f04f 0e54 	mov.w	lr, #84	@ 0x54
 8020a36:	2158      	movs	r1, #88	@ 0x58
 8020a38:	f04f 0c50 	mov.w	ip, #80	@ 0x50
 8020a3c:	f04f 084c 	mov.w	r8, #76	@ 0x4c
 8020a40:	f06f 0703 	mvn.w	r7, #3
 8020a44:	2001      	movs	r0, #1
 8020a46:	f8c4 01d4 	str.w	r0, [r4, #468]	@ 0x1d4
 8020a4a:	f853 0008 	ldr.w	r0, [r3, r8]
 8020a4e:	f8c4 01d8 	str.w	r0, [r4, #472]	@ 0x1d8
 8020a52:	f853 000c 	ldr.w	r0, [r3, ip]
 8020a56:	f8c4 01dc 	str.w	r0, [r4, #476]	@ 0x1dc
 8020a5a:	f853 000e 	ldr.w	r0, [r3, lr]
 8020a5e:	f8c4 01e0 	str.w	r0, [r4, #480]	@ 0x1e0
 8020a62:	5858      	ldr	r0, [r3, r1]
 8020a64:	f8c4 01e4 	str.w	r0, [r4, #484]	@ 0x1e4
 8020a68:	5898      	ldr	r0, [r3, r2]
 8020a6a:	f8c4 01e8 	str.w	r0, [r4, #488]	@ 0x1e8
 8020a6e:	f8d9 0000 	ldr.w	r0, [r9]
 8020a72:	f8c4 01bc 	str.w	r0, [r4, #444]	@ 0x1bc
 8020a76:	f853 0008 	ldr.w	r0, [r3, r8]
 8020a7a:	f8c4 01c0 	str.w	r0, [r4, #448]	@ 0x1c0
 8020a7e:	f853 000c 	ldr.w	r0, [r3, ip]
 8020a82:	f8c4 01c4 	str.w	r0, [r4, #452]	@ 0x1c4
 8020a86:	f853 000e 	ldr.w	r0, [r3, lr]
 8020a8a:	f8c4 01c8 	str.w	r0, [r4, #456]	@ 0x1c8
 8020a8e:	5859      	ldr	r1, [r3, r1]
 8020a90:	f8c4 11cc 	str.w	r1, [r4, #460]	@ 0x1cc
 8020a94:	589b      	ldr	r3, [r3, r2]
 8020a96:	f8c4 31d0 	str.w	r3, [r4, #464]	@ 0x1d0
 8020a9a:	f504 7101 	add.w	r1, r4, #516	@ 0x204
 8020a9e:	f504 70dc 	add.w	r0, r4, #440	@ 0x1b8
 8020aa2:	f009 fc05 	bl	802a2b0 <bam_biquad_setConfig>
 8020aa6:	e726      	b.n	80208f6 <bam_setConfig+0x96>
 8020aa8:	2ab4      	cmp	r2, #180	@ 0xb4
 8020aaa:	d00e      	beq.n	8020aca <bam_setConfig+0x26a>
 8020aac:	2ac8      	cmp	r2, #200	@ 0xc8
 8020aae:	f47f af07 	bne.w	80208c0 <bam_setConfig+0x60>
 8020ab2:	4a5d      	ldr	r2, [pc, #372]	@ (8020c28 <bam_setConfig+0x3c8>)
 8020ab4:	21bc      	movs	r1, #188	@ 0xbc
 8020ab6:	f1a2 03a8 	sub.w	r3, r2, #168	@ 0xa8
 8020aba:	20b8      	movs	r0, #184	@ 0xb8
 8020abc:	f04f 0eb4 	mov.w	lr, #180	@ 0xb4
 8020ac0:	f04f 0cb0 	mov.w	ip, #176	@ 0xb0
 8020ac4:	f04f 08ac 	mov.w	r8, #172	@ 0xac
 8020ac8:	e756      	b.n	8020978 <bam_setConfig+0x118>
 8020aca:	4a58      	ldr	r2, [pc, #352]	@ (8020c2c <bam_setConfig+0x3cc>)
 8020acc:	21a4      	movs	r1, #164	@ 0xa4
 8020ace:	f1a2 0390 	sub.w	r3, r2, #144	@ 0x90
 8020ad2:	20a0      	movs	r0, #160	@ 0xa0
 8020ad4:	f04f 0e9c 	mov.w	lr, #156	@ 0x9c
 8020ad8:	f04f 0c98 	mov.w	ip, #152	@ 0x98
 8020adc:	f04f 0894 	mov.w	r8, #148	@ 0x94
 8020ae0:	e74a      	b.n	8020978 <bam_setConfig+0x118>
 8020ae2:	4a53      	ldr	r2, [pc, #332]	@ (8020c30 <bam_setConfig+0x3d0>)
 8020ae4:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8020ae8:	f5a2 7384 	sub.w	r3, r2, #264	@ 0x108
 8020aec:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8020af0:	f44f 7e8a 	mov.w	lr, #276	@ 0x114
 8020af4:	f44f 7c88 	mov.w	ip, #272	@ 0x110
 8020af8:	f44f 7886 	mov.w	r8, #268	@ 0x10c
 8020afc:	e73c      	b.n	8020978 <bam_setConfig+0x118>
 8020afe:	4b4d      	ldr	r3, [pc, #308]	@ (8020c34 <bam_setConfig+0x3d4>)
 8020b00:	2114      	movs	r1, #20
 8020b02:	461a      	mov	r2, r3
 8020b04:	2010      	movs	r0, #16
 8020b06:	f04f 0e0c 	mov.w	lr, #12
 8020b0a:	f04f 0c08 	mov.w	ip, #8
 8020b0e:	f04f 0804 	mov.w	r8, #4
 8020b12:	e731      	b.n	8020978 <bam_setConfig+0x118>
 8020b14:	4a48      	ldr	r2, [pc, #288]	@ (8020c38 <bam_setConfig+0x3d8>)
 8020b16:	218c      	movs	r1, #140	@ 0x8c
 8020b18:	f1a2 0378 	sub.w	r3, r2, #120	@ 0x78
 8020b1c:	2088      	movs	r0, #136	@ 0x88
 8020b1e:	f04f 0e84 	mov.w	lr, #132	@ 0x84
 8020b22:	f04f 0c80 	mov.w	ip, #128	@ 0x80
 8020b26:	f04f 087c 	mov.w	r8, #124	@ 0x7c
 8020b2a:	e725      	b.n	8020978 <bam_setConfig+0x118>
 8020b2c:	2b50      	cmp	r3, #80	@ 0x50
 8020b2e:	d03a      	beq.n	8020ba6 <bam_setConfig+0x346>
 8020b30:	dc12      	bgt.n	8020b58 <bam_setConfig+0x2f8>
 8020b32:	2b3c      	cmp	r3, #60	@ 0x3c
 8020b34:	d065      	beq.n	8020c02 <bam_setConfig+0x3a2>
 8020b36:	2b46      	cmp	r3, #70	@ 0x46
 8020b38:	f47f af76 	bne.w	8020a28 <bam_setConfig+0x1c8>
 8020b3c:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 8020c44 <bam_setConfig+0x3e4>
 8020b40:	222c      	movs	r2, #44	@ 0x2c
 8020b42:	f1a9 0318 	sub.w	r3, r9, #24
 8020b46:	f04f 0e24 	mov.w	lr, #36	@ 0x24
 8020b4a:	2128      	movs	r1, #40	@ 0x28
 8020b4c:	f04f 0c20 	mov.w	ip, #32
 8020b50:	f04f 081c 	mov.w	r8, #28
 8020b54:	2700      	movs	r7, #0
 8020b56:	e775      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020b58:	2b64      	cmp	r3, #100	@ 0x64
 8020b5a:	f000 80e9 	beq.w	8020d30 <bam_setConfig+0x4d0>
 8020b5e:	2b78      	cmp	r3, #120	@ 0x78
 8020b60:	f47f af62 	bne.w	8020a28 <bam_setConfig+0x1c8>
 8020b64:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8020c48 <bam_setConfig+0x3e8>
 8020b68:	2274      	movs	r2, #116	@ 0x74
 8020b6a:	f1a9 0360 	sub.w	r3, r9, #96	@ 0x60
 8020b6e:	f04f 0e6c 	mov.w	lr, #108	@ 0x6c
 8020b72:	2170      	movs	r1, #112	@ 0x70
 8020b74:	f04f 0c68 	mov.w	ip, #104	@ 0x68
 8020b78:	f04f 0864 	mov.w	r8, #100	@ 0x64
 8020b7c:	2700      	movs	r7, #0
 8020b7e:	e761      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020b80:	2bb4      	cmp	r3, #180	@ 0xb4
 8020b82:	d06b      	beq.n	8020c5c <bam_setConfig+0x3fc>
 8020b84:	2bc8      	cmp	r3, #200	@ 0xc8
 8020b86:	f47f af4f 	bne.w	8020a28 <bam_setConfig+0x1c8>
 8020b8a:	f8df 90c0 	ldr.w	r9, [pc, #192]	@ 8020c4c <bam_setConfig+0x3ec>
 8020b8e:	22bc      	movs	r2, #188	@ 0xbc
 8020b90:	f1a9 03a8 	sub.w	r3, r9, #168	@ 0xa8
 8020b94:	f04f 0eb4 	mov.w	lr, #180	@ 0xb4
 8020b98:	21b8      	movs	r1, #184	@ 0xb8
 8020b9a:	f04f 0cb0 	mov.w	ip, #176	@ 0xb0
 8020b9e:	f04f 08ac 	mov.w	r8, #172	@ 0xac
 8020ba2:	2700      	movs	r7, #0
 8020ba4:	e74e      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020ba6:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 8020c50 <bam_setConfig+0x3f0>
 8020baa:	2244      	movs	r2, #68	@ 0x44
 8020bac:	f1a9 0330 	sub.w	r3, r9, #48	@ 0x30
 8020bb0:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 8020bb4:	2140      	movs	r1, #64	@ 0x40
 8020bb6:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8020bba:	f04f 0834 	mov.w	r8, #52	@ 0x34
 8020bbe:	2700      	movs	r7, #0
 8020bc0:	e740      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020bc2:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8020c54 <bam_setConfig+0x3f4>
 8020bc6:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 8020bca:	f5a9 7384 	sub.w	r3, r9, #264	@ 0x108
 8020bce:	f44f 7e8a 	mov.w	lr, #276	@ 0x114
 8020bd2:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8020bd6:	f44f 7c88 	mov.w	ip, #272	@ 0x110
 8020bda:	f44f 7886 	mov.w	r8, #268	@ 0x10c
 8020bde:	2700      	movs	r7, #0
 8020be0:	e730      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020be2:	f8df 9074 	ldr.w	r9, [pc, #116]	@ 8020c58 <bam_setConfig+0x3f8>
 8020be6:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8020bea:	f1a9 03f0 	sub.w	r3, r9, #240	@ 0xf0
 8020bee:	f04f 0efc 	mov.w	lr, #252	@ 0xfc
 8020bf2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8020bf6:	f04f 0cf8 	mov.w	ip, #248	@ 0xf8
 8020bfa:	f04f 08f4 	mov.w	r8, #244	@ 0xf4
 8020bfe:	2700      	movs	r7, #0
 8020c00:	e720      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020c02:	4b0e      	ldr	r3, [pc, #56]	@ (8020c3c <bam_setConfig+0x3dc>)
 8020c04:	2214      	movs	r2, #20
 8020c06:	4699      	mov	r9, r3
 8020c08:	f04f 0e0c 	mov.w	lr, #12
 8020c0c:	2110      	movs	r1, #16
 8020c0e:	f04f 0c08 	mov.w	ip, #8
 8020c12:	f04f 0804 	mov.w	r8, #4
 8020c16:	2700      	movs	r7, #0
 8020c18:	e714      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020c1a:	bf00      	nop
 8020c1c:	08035ed4 	.word	0x08035ed4
 8020c20:	08035ea4 	.word	0x08035ea4
 8020c24:	08035eec 	.word	0x08035eec
 8020c28:	08035f34 	.word	0x08035f34
 8020c2c:	08035f1c 	.word	0x08035f1c
 8020c30:	08035f94 	.word	0x08035f94
 8020c34:	08035e8c 	.word	0x08035e8c
 8020c38:	08035f04 	.word	0x08035f04
 8020c3c:	08035fac 	.word	0x08035fac
 8020c40:	08035ff4 	.word	0x08035ff4
 8020c44:	08035fc4 	.word	0x08035fc4
 8020c48:	0803600c 	.word	0x0803600c
 8020c4c:	08036054 	.word	0x08036054
 8020c50:	08035fdc 	.word	0x08035fdc
 8020c54:	080360b4 	.word	0x080360b4
 8020c58:	0803609c 	.word	0x0803609c
 8020c5c:	f8df 90fc 	ldr.w	r9, [pc, #252]	@ 8020d5c <bam_setConfig+0x4fc>
 8020c60:	22a4      	movs	r2, #164	@ 0xa4
 8020c62:	f1a9 0390 	sub.w	r3, r9, #144	@ 0x90
 8020c66:	f04f 0e9c 	mov.w	lr, #156	@ 0x9c
 8020c6a:	21a0      	movs	r1, #160	@ 0xa0
 8020c6c:	f04f 0c98 	mov.w	ip, #152	@ 0x98
 8020c70:	f04f 0894 	mov.w	r8, #148	@ 0x94
 8020c74:	2700      	movs	r7, #0
 8020c76:	e6e5      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020c78:	4a34      	ldr	r2, [pc, #208]	@ (8020d4c <bam_setConfig+0x4ec>)
 8020c7a:	21ec      	movs	r1, #236	@ 0xec
 8020c7c:	f1a2 03d8 	sub.w	r3, r2, #216	@ 0xd8
 8020c80:	20e8      	movs	r0, #232	@ 0xe8
 8020c82:	f04f 0ee4 	mov.w	lr, #228	@ 0xe4
 8020c86:	f04f 0ce0 	mov.w	ip, #224	@ 0xe0
 8020c8a:	f04f 08dc 	mov.w	r8, #220	@ 0xdc
 8020c8e:	e673      	b.n	8020978 <bam_setConfig+0x118>
 8020c90:	4a2f      	ldr	r2, [pc, #188]	@ (8020d50 <bam_setConfig+0x4f0>)
 8020c92:	2144      	movs	r1, #68	@ 0x44
 8020c94:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8020c98:	2040      	movs	r0, #64	@ 0x40
 8020c9a:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 8020c9e:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8020ca2:	f04f 0834 	mov.w	r8, #52	@ 0x34
 8020ca6:	e667      	b.n	8020978 <bam_setConfig+0x118>
 8020ca8:	4a2a      	ldr	r2, [pc, #168]	@ (8020d54 <bam_setConfig+0x4f4>)
 8020caa:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8020cae:	f1a2 03f0 	sub.w	r3, r2, #240	@ 0xf0
 8020cb2:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8020cb6:	f04f 0efc 	mov.w	lr, #252	@ 0xfc
 8020cba:	f04f 0cf8 	mov.w	ip, #248	@ 0xf8
 8020cbe:	f04f 08f4 	mov.w	r8, #244	@ 0xf4
 8020cc2:	e659      	b.n	8020978 <bam_setConfig+0x118>
 8020cc4:	4a24      	ldr	r2, [pc, #144]	@ (8020d58 <bam_setConfig+0x4f8>)
 8020cc6:	21d4      	movs	r1, #212	@ 0xd4
 8020cc8:	f1a2 03c0 	sub.w	r3, r2, #192	@ 0xc0
 8020ccc:	20d0      	movs	r0, #208	@ 0xd0
 8020cce:	f04f 0ecc 	mov.w	lr, #204	@ 0xcc
 8020cd2:	f04f 0cc8 	mov.w	ip, #200	@ 0xc8
 8020cd6:	f04f 08c4 	mov.w	r8, #196	@ 0xc4
 8020cda:	e64d      	b.n	8020978 <bam_setConfig+0x118>
 8020cdc:	f8df 9080 	ldr.w	r9, [pc, #128]	@ 8020d60 <bam_setConfig+0x500>
 8020ce0:	22ec      	movs	r2, #236	@ 0xec
 8020ce2:	f1a9 03d8 	sub.w	r3, r9, #216	@ 0xd8
 8020ce6:	f04f 0ee4 	mov.w	lr, #228	@ 0xe4
 8020cea:	21e8      	movs	r1, #232	@ 0xe8
 8020cec:	f04f 0ce0 	mov.w	ip, #224	@ 0xe0
 8020cf0:	f04f 08dc 	mov.w	r8, #220	@ 0xdc
 8020cf4:	2700      	movs	r7, #0
 8020cf6:	e6a5      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020cf8:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 8020d64 <bam_setConfig+0x504>
 8020cfc:	228c      	movs	r2, #140	@ 0x8c
 8020cfe:	f1a9 0378 	sub.w	r3, r9, #120	@ 0x78
 8020d02:	f04f 0e84 	mov.w	lr, #132	@ 0x84
 8020d06:	2188      	movs	r1, #136	@ 0x88
 8020d08:	f04f 0c80 	mov.w	ip, #128	@ 0x80
 8020d0c:	f04f 087c 	mov.w	r8, #124	@ 0x7c
 8020d10:	2700      	movs	r7, #0
 8020d12:	e697      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020d14:	f8df 9050 	ldr.w	r9, [pc, #80]	@ 8020d68 <bam_setConfig+0x508>
 8020d18:	22d4      	movs	r2, #212	@ 0xd4
 8020d1a:	f1a9 03c0 	sub.w	r3, r9, #192	@ 0xc0
 8020d1e:	f04f 0ecc 	mov.w	lr, #204	@ 0xcc
 8020d22:	21d0      	movs	r1, #208	@ 0xd0
 8020d24:	f04f 0cc8 	mov.w	ip, #200	@ 0xc8
 8020d28:	f04f 08c4 	mov.w	r8, #196	@ 0xc4
 8020d2c:	2700      	movs	r7, #0
 8020d2e:	e689      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020d30:	f8df 9038 	ldr.w	r9, [pc, #56]	@ 8020d6c <bam_setConfig+0x50c>
 8020d34:	225c      	movs	r2, #92	@ 0x5c
 8020d36:	f1a9 0348 	sub.w	r3, r9, #72	@ 0x48
 8020d3a:	f04f 0e54 	mov.w	lr, #84	@ 0x54
 8020d3e:	2158      	movs	r1, #88	@ 0x58
 8020d40:	f04f 0c50 	mov.w	ip, #80	@ 0x50
 8020d44:	f04f 084c 	mov.w	r8, #76	@ 0x4c
 8020d48:	2700      	movs	r7, #0
 8020d4a:	e67b      	b.n	8020a44 <bam_setConfig+0x1e4>
 8020d4c:	08035f64 	.word	0x08035f64
 8020d50:	08035ebc 	.word	0x08035ebc
 8020d54:	08035f7c 	.word	0x08035f7c
 8020d58:	08035f4c 	.word	0x08035f4c
 8020d5c:	0803603c 	.word	0x0803603c
 8020d60:	08036084 	.word	0x08036084
 8020d64:	08036024 	.word	0x08036024
 8020d68:	0803606c 	.word	0x0803606c
 8020d6c:	08035ff4 	.word	0x08035ff4

08020d70 <bam_getConfig>:
 8020d70:	b470      	push	{r4, r5, r6}
 8020d72:	f8b1 2890 	ldrh.w	r2, [r1, #2192]	@ 0x890
 8020d76:	f8b1 68b4 	ldrh.w	r6, [r1, #2228]	@ 0x8b4
 8020d7a:	f8b1 58b8 	ldrh.w	r5, [r1, #2232]	@ 0x8b8
 8020d7e:	f8b1 48ba 	ldrh.w	r4, [r1, #2234]	@ 0x8ba
 8020d82:	f8d1 3894 	ldr.w	r3, [r1, #2196]	@ 0x894
 8020d86:	6003      	str	r3, [r0, #0]
 8020d88:	8106      	strh	r6, [r0, #8]
 8020d8a:	8085      	strh	r5, [r0, #4]
 8020d8c:	80c4      	strh	r4, [r0, #6]
 8020d8e:	8142      	strh	r2, [r0, #10]
 8020d90:	bc70      	pop	{r4, r5, r6}
 8020d92:	2000      	movs	r0, #0
 8020d94:	4770      	bx	lr
 8020d96:	bf00      	nop

08020d98 <bam_setParam>:
 8020d98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020d9c:	f9b1 38ba 	ldrsh.w	r3, [r1, #2234]	@ 0x8ba
 8020da0:	2203      	movs	r2, #3
 8020da2:	2b96      	cmp	r3, #150	@ 0x96
 8020da4:	460c      	mov	r4, r1
 8020da6:	720a      	strb	r2, [r1, #8]
 8020da8:	4681      	mov	r9, r0
 8020daa:	f000 81fe 	beq.w	80211aa <bam_setParam+0x412>
 8020dae:	dd1a      	ble.n	8020de6 <bam_setParam+0x4e>
 8020db0:	2bdc      	cmp	r3, #220	@ 0xdc
 8020db2:	f000 8134 	beq.w	802101e <bam_setParam+0x286>
 8020db6:	f340 8165 	ble.w	8021084 <bam_setParam+0x2ec>
 8020dba:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 8020dbe:	f000 8121 	beq.w	8021004 <bam_setParam+0x26c>
 8020dc2:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8020dc6:	f000 8208 	beq.w	80211da <bam_setParam+0x442>
 8020dca:	2bfa      	cmp	r3, #250	@ 0xfa
 8020dcc:	f000 81a3 	beq.w	8021116 <bam_setParam+0x37e>
 8020dd0:	4ad6      	ldr	r2, [pc, #856]	@ (802112c <bam_setParam+0x394>)
 8020dd2:	215c      	movs	r1, #92	@ 0x5c
 8020dd4:	f1a2 0348 	sub.w	r3, r2, #72	@ 0x48
 8020dd8:	2058      	movs	r0, #88	@ 0x58
 8020dda:	2554      	movs	r5, #84	@ 0x54
 8020ddc:	f04f 0e50 	mov.w	lr, #80	@ 0x50
 8020de0:	f04f 0c4c 	mov.w	ip, #76	@ 0x4c
 8020de4:	e013      	b.n	8020e0e <bam_setParam+0x76>
 8020de6:	2b50      	cmp	r3, #80	@ 0x50
 8020de8:	f000 822d 	beq.w	8021246 <bam_setParam+0x4ae>
 8020dec:	f300 80f9 	bgt.w	8020fe2 <bam_setParam+0x24a>
 8020df0:	2b3c      	cmp	r3, #60	@ 0x3c
 8020df2:	f000 8200 	beq.w	80211f6 <bam_setParam+0x45e>
 8020df6:	2b46      	cmp	r3, #70	@ 0x46
 8020df8:	d1ea      	bne.n	8020dd0 <bam_setParam+0x38>
 8020dfa:	4acd      	ldr	r2, [pc, #820]	@ (8021130 <bam_setParam+0x398>)
 8020dfc:	212c      	movs	r1, #44	@ 0x2c
 8020dfe:	f1a2 0318 	sub.w	r3, r2, #24
 8020e02:	2028      	movs	r0, #40	@ 0x28
 8020e04:	2524      	movs	r5, #36	@ 0x24
 8020e06:	f04f 0e20 	mov.w	lr, #32
 8020e0a:	f04f 0c1c 	mov.w	ip, #28
 8020e0e:	6817      	ldr	r7, [r2, #0]
 8020e10:	63e7      	str	r7, [r4, #60]	@ 0x3c
 8020e12:	f853 700c 	ldr.w	r7, [r3, ip]
 8020e16:	6427      	str	r7, [r4, #64]	@ 0x40
 8020e18:	f853 700e 	ldr.w	r7, [r3, lr]
 8020e1c:	6467      	str	r7, [r4, #68]	@ 0x44
 8020e1e:	595f      	ldr	r7, [r3, r5]
 8020e20:	64a7      	str	r7, [r4, #72]	@ 0x48
 8020e22:	581f      	ldr	r7, [r3, r0]
 8020e24:	64e7      	str	r7, [r4, #76]	@ 0x4c
 8020e26:	585f      	ldr	r7, [r3, r1]
 8020e28:	6527      	str	r7, [r4, #80]	@ 0x50
 8020e2a:	6817      	ldr	r7, [r2, #0]
 8020e2c:	6267      	str	r7, [r4, #36]	@ 0x24
 8020e2e:	f853 700c 	ldr.w	r7, [r3, ip]
 8020e32:	62a7      	str	r7, [r4, #40]	@ 0x28
 8020e34:	f853 700e 	ldr.w	r7, [r3, lr]
 8020e38:	62e7      	str	r7, [r4, #44]	@ 0x2c
 8020e3a:	595f      	ldr	r7, [r3, r5]
 8020e3c:	6327      	str	r7, [r4, #48]	@ 0x30
 8020e3e:	581f      	ldr	r7, [r3, r0]
 8020e40:	6367      	str	r7, [r4, #52]	@ 0x34
 8020e42:	585f      	ldr	r7, [r3, r1]
 8020e44:	63a7      	str	r7, [r4, #56]	@ 0x38
 8020e46:	6812      	ldr	r2, [r2, #0]
 8020e48:	60e2      	str	r2, [r4, #12]
 8020e4a:	f853 200c 	ldr.w	r2, [r3, ip]
 8020e4e:	6122      	str	r2, [r4, #16]
 8020e50:	f853 200e 	ldr.w	r2, [r3, lr]
 8020e54:	6162      	str	r2, [r4, #20]
 8020e56:	595a      	ldr	r2, [r3, r5]
 8020e58:	61a2      	str	r2, [r4, #24]
 8020e5a:	581a      	ldr	r2, [r3, r0]
 8020e5c:	61e2      	str	r2, [r4, #28]
 8020e5e:	585b      	ldr	r3, [r3, r1]
 8020e60:	6223      	str	r3, [r4, #32]
 8020e62:	f104 01a0 	add.w	r1, r4, #160	@ 0xa0
 8020e66:	f104 0008 	add.w	r0, r4, #8
 8020e6a:	f009 fa65 	bl	802a338 <bam_biquad_setParam>
 8020e6e:	f9b4 38ba 	ldrsh.w	r3, [r4, #2234]	@ 0x8ba
 8020e72:	2202      	movs	r2, #2
 8020e74:	2b96      	cmp	r3, #150	@ 0x96
 8020e76:	f884 216c 	strb.w	r2, [r4, #364]	@ 0x16c
 8020e7a:	f000 81ef 	beq.w	802125c <bam_setParam+0x4c4>
 8020e7e:	f340 80d9 	ble.w	8021034 <bam_setParam+0x29c>
 8020e82:	2bdc      	cmp	r3, #220	@ 0xdc
 8020e84:	f000 81f7 	beq.w	8021276 <bam_setParam+0x4de>
 8020e88:	f340 810d 	ble.w	80210a6 <bam_setParam+0x30e>
 8020e8c:	f5b3 7f8c 	cmp.w	r3, #280	@ 0x118
 8020e90:	f000 81ca 	beq.w	8021228 <bam_setParam+0x490>
 8020e94:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8020e98:	f000 81b7 	beq.w	802120a <bam_setParam+0x472>
 8020e9c:	2bfa      	cmp	r3, #250	@ 0xfa
 8020e9e:	f000 8177 	beq.w	8021190 <bam_setParam+0x3f8>
 8020ea2:	48a4      	ldr	r0, [pc, #656]	@ (8021134 <bam_setParam+0x39c>)
 8020ea4:	f04f 0c50 	mov.w	ip, #80	@ 0x50
 8020ea8:	f1a0 0348 	sub.w	r3, r0, #72	@ 0x48
 8020eac:	f04f 084c 	mov.w	r8, #76	@ 0x4c
 8020eb0:	225c      	movs	r2, #92	@ 0x5c
 8020eb2:	2158      	movs	r1, #88	@ 0x58
 8020eb4:	f04f 0e54 	mov.w	lr, #84	@ 0x54
 8020eb8:	f06f 0703 	mvn.w	r7, #3
 8020ebc:	2501      	movs	r5, #1
 8020ebe:	f8c4 5188 	str.w	r5, [r4, #392]	@ 0x188
 8020ec2:	f853 6008 	ldr.w	r6, [r3, r8]
 8020ec6:	f8c4 618c 	str.w	r6, [r4, #396]	@ 0x18c
 8020eca:	f853 600c 	ldr.w	r6, [r3, ip]
 8020ece:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
 8020ed2:	f853 600e 	ldr.w	r6, [r3, lr]
 8020ed6:	f8c4 6194 	str.w	r6, [r4, #404]	@ 0x194
 8020eda:	585e      	ldr	r6, [r3, r1]
 8020edc:	f8c4 6198 	str.w	r6, [r4, #408]	@ 0x198
 8020ee0:	589e      	ldr	r6, [r3, r2]
 8020ee2:	f8c4 619c 	str.w	r6, [r4, #412]	@ 0x19c
 8020ee6:	6800      	ldr	r0, [r0, #0]
 8020ee8:	f8c4 0170 	str.w	r0, [r4, #368]	@ 0x170
 8020eec:	f853 0008 	ldr.w	r0, [r3, r8]
 8020ef0:	f8c4 0174 	str.w	r0, [r4, #372]	@ 0x174
 8020ef4:	f853 000c 	ldr.w	r0, [r3, ip]
 8020ef8:	f8c4 0178 	str.w	r0, [r4, #376]	@ 0x178
 8020efc:	f853 000e 	ldr.w	r0, [r3, lr]
 8020f00:	f8c4 017c 	str.w	r0, [r4, #380]	@ 0x17c
 8020f04:	5859      	ldr	r1, [r3, r1]
 8020f06:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
 8020f0a:	589b      	ldr	r3, [r3, r2]
 8020f0c:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
 8020f10:	f504 7101 	add.w	r1, r4, #516	@ 0x204
 8020f14:	f504 70b6 	add.w	r0, r4, #364	@ 0x16c
 8020f18:	f009 fa0e 	bl	802a338 <bam_biquad_setParam>
 8020f1c:	4b86      	ldr	r3, [pc, #536]	@ (8021138 <bam_setParam+0x3a0>)
 8020f1e:	4a87      	ldr	r2, [pc, #540]	@ (802113c <bam_setParam+0x3a4>)
 8020f20:	4887      	ldr	r0, [pc, #540]	@ (8021140 <bam_setParam+0x3a8>)
 8020f22:	4988      	ldr	r1, [pc, #544]	@ (8021144 <bam_setParam+0x3ac>)
 8020f24:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
 8020f28:	f8c4 32e0 	str.w	r3, [r4, #736]	@ 0x2e0
 8020f2c:	f8c4 02dc 	str.w	r0, [r4, #732]	@ 0x2dc
 8020f30:	f8c4 12e4 	str.w	r1, [r4, #740]	@ 0x2e4
 8020f34:	f8c4 22e8 	str.w	r2, [r4, #744]	@ 0x2e8
 8020f38:	f504 715a 	add.w	r1, r4, #872	@ 0x368
 8020f3c:	f884 52d0 	strb.w	r5, [r4, #720]	@ 0x2d0
 8020f40:	f8c4 52d4 	str.w	r5, [r4, #724]	@ 0x2d4
 8020f44:	f504 7034 	add.w	r0, r4, #720	@ 0x2d0
 8020f48:	f009 f9f6 	bl	802a338 <bam_biquad_setParam>
 8020f4c:	4b7e      	ldr	r3, [pc, #504]	@ (8021148 <bam_setParam+0x3b0>)
 8020f4e:	4a7f      	ldr	r2, [pc, #508]	@ (802114c <bam_setParam+0x3b4>)
 8020f50:	487f      	ldr	r0, [pc, #508]	@ (8021150 <bam_setParam+0x3b8>)
 8020f52:	4980      	ldr	r1, [pc, #512]	@ (8021154 <bam_setParam+0x3bc>)
 8020f54:	f8c4 244c 	str.w	r2, [r4, #1100]	@ 0x44c
 8020f58:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
 8020f5c:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 8020f60:	f8c4 0440 	str.w	r0, [r4, #1088]	@ 0x440
 8020f64:	f8c4 1448 	str.w	r1, [r4, #1096]	@ 0x448
 8020f68:	f884 5434 	strb.w	r5, [r4, #1076]	@ 0x434
 8020f6c:	f204 41cc 	addw	r1, r4, #1228	@ 0x4cc
 8020f70:	f8c4 5438 	str.w	r5, [r4, #1080]	@ 0x438
 8020f74:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 8020f78:	f009 f9de 	bl	802a338 <bam_biquad_setParam>
 8020f7c:	f8b9 3000 	ldrh.w	r3, [r9]
 8020f80:	f8a4 38b6 	strh.w	r3, [r4, #2230]	@ 0x8b6
 8020f84:	f504 68b6 	add.w	r8, r4, #1456	@ 0x5b0
 8020f88:	2350      	movs	r3, #80	@ 0x50
 8020f8a:	f8a4 3598 	strh.w	r3, [r4, #1432]	@ 0x598
 8020f8e:	4641      	mov	r1, r8
 8020f90:	f504 60b3 	add.w	r0, r4, #1432	@ 0x598
 8020f94:	f009 fdb8 	bl	802ab08 <bam_svc_setParam>
 8020f98:	f8b4 38b8 	ldrh.w	r3, [r4, #2232]	@ 0x8b8
 8020f9c:	4a6e      	ldr	r2, [pc, #440]	@ (8021158 <bam_setParam+0x3c0>)
 8020f9e:	486f      	ldr	r0, [pc, #444]	@ (802115c <bam_setParam+0x3c4>)
 8020fa0:	f8c4 05a4 	str.w	r0, [r4, #1444]	@ 0x5a4
 8020fa4:	40ab      	lsls	r3, r5
 8020fa6:	2600      	movs	r6, #0
 8020fa8:	4641      	mov	r1, r8
 8020faa:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8020fae:	f8c4 25a8 	str.w	r2, [r4, #1448]	@ 0x5a8
 8020fb2:	f8a4 55a0 	strh.w	r5, [r4, #1440]	@ 0x5a0
 8020fb6:	f8a4 55ac 	strh.w	r5, [r4, #1452]	@ 0x5ac
 8020fba:	f8a4 659e 	strh.w	r6, [r4, #1438]	@ 0x59e
 8020fbe:	f204 509c 	addw	r0, r4, #1436	@ 0x59c
 8020fc2:	f009 fd1d 	bl	802aa00 <bam_svc_setConfig>
 8020fc6:	4b66      	ldr	r3, [pc, #408]	@ (8021160 <bam_setParam+0x3c8>)
 8020fc8:	f8a4 6884 	strh.w	r6, [r4, #2180]	@ 0x884
 8020fcc:	f8c4 3888 	str.w	r3, [r4, #2184]	@ 0x888
 8020fd0:	f604 018c 	addw	r1, r4, #2188	@ 0x88c
 8020fd4:	f604 0084 	addw	r0, r4, #2180	@ 0x884
 8020fd8:	f005 f9b2 	bl	8026340 <limiter_setConfig>
 8020fdc:	4638      	mov	r0, r7
 8020fde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020fe2:	2b64      	cmp	r3, #100	@ 0x64
 8020fe4:	f43f aef4 	beq.w	8020dd0 <bam_setParam+0x38>
 8020fe8:	2b78      	cmp	r3, #120	@ 0x78
 8020fea:	f47f aef1 	bne.w	8020dd0 <bam_setParam+0x38>
 8020fee:	4a5d      	ldr	r2, [pc, #372]	@ (8021164 <bam_setParam+0x3cc>)
 8020ff0:	2174      	movs	r1, #116	@ 0x74
 8020ff2:	f1a2 0360 	sub.w	r3, r2, #96	@ 0x60
 8020ff6:	2070      	movs	r0, #112	@ 0x70
 8020ff8:	256c      	movs	r5, #108	@ 0x6c
 8020ffa:	f04f 0e68 	mov.w	lr, #104	@ 0x68
 8020ffe:	f04f 0c64 	mov.w	ip, #100	@ 0x64
 8021002:	e704      	b.n	8020e0e <bam_setParam+0x76>
 8021004:	4a58      	ldr	r2, [pc, #352]	@ (8021168 <bam_setParam+0x3d0>)
 8021006:	f44f 7182 	mov.w	r1, #260	@ 0x104
 802100a:	f1a2 03f0 	sub.w	r3, r2, #240	@ 0xf0
 802100e:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8021012:	25fc      	movs	r5, #252	@ 0xfc
 8021014:	f04f 0ef8 	mov.w	lr, #248	@ 0xf8
 8021018:	f04f 0cf4 	mov.w	ip, #244	@ 0xf4
 802101c:	e6f7      	b.n	8020e0e <bam_setParam+0x76>
 802101e:	4a53      	ldr	r2, [pc, #332]	@ (802116c <bam_setParam+0x3d4>)
 8021020:	21d4      	movs	r1, #212	@ 0xd4
 8021022:	f1a2 03c0 	sub.w	r3, r2, #192	@ 0xc0
 8021026:	20d0      	movs	r0, #208	@ 0xd0
 8021028:	25cc      	movs	r5, #204	@ 0xcc
 802102a:	f04f 0ec8 	mov.w	lr, #200	@ 0xc8
 802102e:	f04f 0cc4 	mov.w	ip, #196	@ 0xc4
 8021032:	e6ec      	b.n	8020e0e <bam_setParam+0x76>
 8021034:	2b50      	cmp	r3, #80	@ 0x50
 8021036:	d048      	beq.n	80210ca <bam_setParam+0x332>
 8021038:	dc11      	bgt.n	802105e <bam_setParam+0x2c6>
 802103a:	2b3c      	cmp	r3, #60	@ 0x3c
 802103c:	d052      	beq.n	80210e4 <bam_setParam+0x34c>
 802103e:	2b46      	cmp	r3, #70	@ 0x46
 8021040:	f47f af2f 	bne.w	8020ea2 <bam_setParam+0x10a>
 8021044:	484a      	ldr	r0, [pc, #296]	@ (8021170 <bam_setParam+0x3d8>)
 8021046:	f04f 0c20 	mov.w	ip, #32
 802104a:	f1a0 0318 	sub.w	r3, r0, #24
 802104e:	f04f 081c 	mov.w	r8, #28
 8021052:	222c      	movs	r2, #44	@ 0x2c
 8021054:	2128      	movs	r1, #40	@ 0x28
 8021056:	f04f 0e24 	mov.w	lr, #36	@ 0x24
 802105a:	2700      	movs	r7, #0
 802105c:	e72e      	b.n	8020ebc <bam_setParam+0x124>
 802105e:	2b64      	cmp	r3, #100	@ 0x64
 8021060:	f000 80ae 	beq.w	80211c0 <bam_setParam+0x428>
 8021064:	2b78      	cmp	r3, #120	@ 0x78
 8021066:	f47f af1c 	bne.w	8020ea2 <bam_setParam+0x10a>
 802106a:	4842      	ldr	r0, [pc, #264]	@ (8021174 <bam_setParam+0x3dc>)
 802106c:	f04f 0c68 	mov.w	ip, #104	@ 0x68
 8021070:	f1a0 0360 	sub.w	r3, r0, #96	@ 0x60
 8021074:	f04f 0864 	mov.w	r8, #100	@ 0x64
 8021078:	2274      	movs	r2, #116	@ 0x74
 802107a:	2170      	movs	r1, #112	@ 0x70
 802107c:	f04f 0e6c 	mov.w	lr, #108	@ 0x6c
 8021080:	2700      	movs	r7, #0
 8021082:	e71b      	b.n	8020ebc <bam_setParam+0x124>
 8021084:	2bb4      	cmp	r3, #180	@ 0xb4
 8021086:	f000 8103 	beq.w	8021290 <bam_setParam+0x4f8>
 802108a:	2bc8      	cmp	r3, #200	@ 0xc8
 802108c:	f47f aea0 	bne.w	8020dd0 <bam_setParam+0x38>
 8021090:	4a39      	ldr	r2, [pc, #228]	@ (8021178 <bam_setParam+0x3e0>)
 8021092:	21bc      	movs	r1, #188	@ 0xbc
 8021094:	f1a2 03a8 	sub.w	r3, r2, #168	@ 0xa8
 8021098:	20b8      	movs	r0, #184	@ 0xb8
 802109a:	25b4      	movs	r5, #180	@ 0xb4
 802109c:	f04f 0eb0 	mov.w	lr, #176	@ 0xb0
 80210a0:	f04f 0cac 	mov.w	ip, #172	@ 0xac
 80210a4:	e6b3      	b.n	8020e0e <bam_setParam+0x76>
 80210a6:	2bb4      	cmp	r3, #180	@ 0xb4
 80210a8:	d028      	beq.n	80210fc <bam_setParam+0x364>
 80210aa:	2bc8      	cmp	r3, #200	@ 0xc8
 80210ac:	f47f aef9 	bne.w	8020ea2 <bam_setParam+0x10a>
 80210b0:	4832      	ldr	r0, [pc, #200]	@ (802117c <bam_setParam+0x3e4>)
 80210b2:	f04f 0cb0 	mov.w	ip, #176	@ 0xb0
 80210b6:	f1a0 03a8 	sub.w	r3, r0, #168	@ 0xa8
 80210ba:	f04f 08ac 	mov.w	r8, #172	@ 0xac
 80210be:	22bc      	movs	r2, #188	@ 0xbc
 80210c0:	21b8      	movs	r1, #184	@ 0xb8
 80210c2:	f04f 0eb4 	mov.w	lr, #180	@ 0xb4
 80210c6:	2700      	movs	r7, #0
 80210c8:	e6f8      	b.n	8020ebc <bam_setParam+0x124>
 80210ca:	482d      	ldr	r0, [pc, #180]	@ (8021180 <bam_setParam+0x3e8>)
 80210cc:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 80210d0:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 80210d4:	f04f 0834 	mov.w	r8, #52	@ 0x34
 80210d8:	2244      	movs	r2, #68	@ 0x44
 80210da:	2140      	movs	r1, #64	@ 0x40
 80210dc:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 80210e0:	2700      	movs	r7, #0
 80210e2:	e6eb      	b.n	8020ebc <bam_setParam+0x124>
 80210e4:	4b27      	ldr	r3, [pc, #156]	@ (8021184 <bam_setParam+0x3ec>)
 80210e6:	f04f 0c08 	mov.w	ip, #8
 80210ea:	4618      	mov	r0, r3
 80210ec:	f04f 0804 	mov.w	r8, #4
 80210f0:	2214      	movs	r2, #20
 80210f2:	2110      	movs	r1, #16
 80210f4:	f04f 0e0c 	mov.w	lr, #12
 80210f8:	2700      	movs	r7, #0
 80210fa:	e6df      	b.n	8020ebc <bam_setParam+0x124>
 80210fc:	4822      	ldr	r0, [pc, #136]	@ (8021188 <bam_setParam+0x3f0>)
 80210fe:	f04f 0c98 	mov.w	ip, #152	@ 0x98
 8021102:	f1a0 0390 	sub.w	r3, r0, #144	@ 0x90
 8021106:	f04f 0894 	mov.w	r8, #148	@ 0x94
 802110a:	22a4      	movs	r2, #164	@ 0xa4
 802110c:	21a0      	movs	r1, #160	@ 0xa0
 802110e:	f04f 0e9c 	mov.w	lr, #156	@ 0x9c
 8021112:	2700      	movs	r7, #0
 8021114:	e6d2      	b.n	8020ebc <bam_setParam+0x124>
 8021116:	4a1d      	ldr	r2, [pc, #116]	@ (802118c <bam_setParam+0x3f4>)
 8021118:	21ec      	movs	r1, #236	@ 0xec
 802111a:	f1a2 03d8 	sub.w	r3, r2, #216	@ 0xd8
 802111e:	20e8      	movs	r0, #232	@ 0xe8
 8021120:	25e4      	movs	r5, #228	@ 0xe4
 8021122:	f04f 0ee0 	mov.w	lr, #224	@ 0xe0
 8021126:	f04f 0cdc 	mov.w	ip, #220	@ 0xdc
 802112a:	e670      	b.n	8020e0e <bam_setParam+0x76>
 802112c:	08035ed4 	.word	0x08035ed4
 8021130:	08035ea4 	.word	0x08035ea4
 8021134:	08035ff4 	.word	0x08035ff4
 8021138:	3fe1b182 	.word	0x3fe1b182
 802113c:	c03c8ea1 	.word	0xc03c8ea1
 8021140:	803c9cfb 	.word	0x803c9cfb
 8021144:	7fc354ac 	.word	0x7fc354ac
 8021148:	0005efbe 	.word	0x0005efbe
 802114c:	c3753a42 	.word	0xc3753a42
 8021150:	000bdf7d 	.word	0x000bdf7d
 8021154:	7c723123 	.word	0x7c723123
 8021158:	7feef011 	.word	0x7feef011
 802115c:	7faac715 	.word	0x7faac715
 8021160:	7ffc963a 	.word	0x7ffc963a
 8021164:	08035eec 	.word	0x08035eec
 8021168:	08035f7c 	.word	0x08035f7c
 802116c:	08035f4c 	.word	0x08035f4c
 8021170:	08035fc4 	.word	0x08035fc4
 8021174:	0803600c 	.word	0x0803600c
 8021178:	08035f34 	.word	0x08035f34
 802117c:	08036054 	.word	0x08036054
 8021180:	08035fdc 	.word	0x08035fdc
 8021184:	08035fac 	.word	0x08035fac
 8021188:	0803603c 	.word	0x0803603c
 802118c:	08035f64 	.word	0x08035f64
 8021190:	4845      	ldr	r0, [pc, #276]	@ (80212a8 <bam_setParam+0x510>)
 8021192:	f04f 0ce0 	mov.w	ip, #224	@ 0xe0
 8021196:	f1a0 03d8 	sub.w	r3, r0, #216	@ 0xd8
 802119a:	f04f 08dc 	mov.w	r8, #220	@ 0xdc
 802119e:	22ec      	movs	r2, #236	@ 0xec
 80211a0:	21e8      	movs	r1, #232	@ 0xe8
 80211a2:	f04f 0ee4 	mov.w	lr, #228	@ 0xe4
 80211a6:	2700      	movs	r7, #0
 80211a8:	e688      	b.n	8020ebc <bam_setParam+0x124>
 80211aa:	4a40      	ldr	r2, [pc, #256]	@ (80212ac <bam_setParam+0x514>)
 80211ac:	218c      	movs	r1, #140	@ 0x8c
 80211ae:	f1a2 0378 	sub.w	r3, r2, #120	@ 0x78
 80211b2:	2088      	movs	r0, #136	@ 0x88
 80211b4:	2584      	movs	r5, #132	@ 0x84
 80211b6:	f04f 0e80 	mov.w	lr, #128	@ 0x80
 80211ba:	f04f 0c7c 	mov.w	ip, #124	@ 0x7c
 80211be:	e626      	b.n	8020e0e <bam_setParam+0x76>
 80211c0:	483b      	ldr	r0, [pc, #236]	@ (80212b0 <bam_setParam+0x518>)
 80211c2:	f04f 0c50 	mov.w	ip, #80	@ 0x50
 80211c6:	f1a0 0348 	sub.w	r3, r0, #72	@ 0x48
 80211ca:	f04f 084c 	mov.w	r8, #76	@ 0x4c
 80211ce:	225c      	movs	r2, #92	@ 0x5c
 80211d0:	2158      	movs	r1, #88	@ 0x58
 80211d2:	f04f 0e54 	mov.w	lr, #84	@ 0x54
 80211d6:	2700      	movs	r7, #0
 80211d8:	e670      	b.n	8020ebc <bam_setParam+0x124>
 80211da:	4a36      	ldr	r2, [pc, #216]	@ (80212b4 <bam_setParam+0x51c>)
 80211dc:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 80211e0:	f5a2 7384 	sub.w	r3, r2, #264	@ 0x108
 80211e4:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80211e8:	f44f 758a 	mov.w	r5, #276	@ 0x114
 80211ec:	f44f 7e88 	mov.w	lr, #272	@ 0x110
 80211f0:	f44f 7c86 	mov.w	ip, #268	@ 0x10c
 80211f4:	e60b      	b.n	8020e0e <bam_setParam+0x76>
 80211f6:	4b30      	ldr	r3, [pc, #192]	@ (80212b8 <bam_setParam+0x520>)
 80211f8:	2114      	movs	r1, #20
 80211fa:	461a      	mov	r2, r3
 80211fc:	2010      	movs	r0, #16
 80211fe:	250c      	movs	r5, #12
 8021200:	f04f 0e08 	mov.w	lr, #8
 8021204:	f04f 0c04 	mov.w	ip, #4
 8021208:	e601      	b.n	8020e0e <bam_setParam+0x76>
 802120a:	482c      	ldr	r0, [pc, #176]	@ (80212bc <bam_setParam+0x524>)
 802120c:	f44f 7c88 	mov.w	ip, #272	@ 0x110
 8021210:	f5a0 7384 	sub.w	r3, r0, #264	@ 0x108
 8021214:	f44f 7886 	mov.w	r8, #268	@ 0x10c
 8021218:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 802121c:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8021220:	f44f 7e8a 	mov.w	lr, #276	@ 0x114
 8021224:	2700      	movs	r7, #0
 8021226:	e649      	b.n	8020ebc <bam_setParam+0x124>
 8021228:	4825      	ldr	r0, [pc, #148]	@ (80212c0 <bam_setParam+0x528>)
 802122a:	f04f 0cf8 	mov.w	ip, #248	@ 0xf8
 802122e:	f1a0 03f0 	sub.w	r3, r0, #240	@ 0xf0
 8021232:	f04f 08f4 	mov.w	r8, #244	@ 0xf4
 8021236:	f44f 7282 	mov.w	r2, #260	@ 0x104
 802123a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 802123e:	f04f 0efc 	mov.w	lr, #252	@ 0xfc
 8021242:	2700      	movs	r7, #0
 8021244:	e63a      	b.n	8020ebc <bam_setParam+0x124>
 8021246:	4a1f      	ldr	r2, [pc, #124]	@ (80212c4 <bam_setParam+0x52c>)
 8021248:	2144      	movs	r1, #68	@ 0x44
 802124a:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 802124e:	2040      	movs	r0, #64	@ 0x40
 8021250:	253c      	movs	r5, #60	@ 0x3c
 8021252:	f04f 0e38 	mov.w	lr, #56	@ 0x38
 8021256:	f04f 0c34 	mov.w	ip, #52	@ 0x34
 802125a:	e5d8      	b.n	8020e0e <bam_setParam+0x76>
 802125c:	481a      	ldr	r0, [pc, #104]	@ (80212c8 <bam_setParam+0x530>)
 802125e:	f04f 0c80 	mov.w	ip, #128	@ 0x80
 8021262:	f1a0 0378 	sub.w	r3, r0, #120	@ 0x78
 8021266:	f04f 087c 	mov.w	r8, #124	@ 0x7c
 802126a:	228c      	movs	r2, #140	@ 0x8c
 802126c:	2188      	movs	r1, #136	@ 0x88
 802126e:	f04f 0e84 	mov.w	lr, #132	@ 0x84
 8021272:	2700      	movs	r7, #0
 8021274:	e622      	b.n	8020ebc <bam_setParam+0x124>
 8021276:	4815      	ldr	r0, [pc, #84]	@ (80212cc <bam_setParam+0x534>)
 8021278:	f04f 0cc8 	mov.w	ip, #200	@ 0xc8
 802127c:	f1a0 03c0 	sub.w	r3, r0, #192	@ 0xc0
 8021280:	f04f 08c4 	mov.w	r8, #196	@ 0xc4
 8021284:	22d4      	movs	r2, #212	@ 0xd4
 8021286:	21d0      	movs	r1, #208	@ 0xd0
 8021288:	f04f 0ecc 	mov.w	lr, #204	@ 0xcc
 802128c:	2700      	movs	r7, #0
 802128e:	e615      	b.n	8020ebc <bam_setParam+0x124>
 8021290:	4a0f      	ldr	r2, [pc, #60]	@ (80212d0 <bam_setParam+0x538>)
 8021292:	21a4      	movs	r1, #164	@ 0xa4
 8021294:	f1a2 0390 	sub.w	r3, r2, #144	@ 0x90
 8021298:	20a0      	movs	r0, #160	@ 0xa0
 802129a:	259c      	movs	r5, #156	@ 0x9c
 802129c:	f04f 0e98 	mov.w	lr, #152	@ 0x98
 80212a0:	f04f 0c94 	mov.w	ip, #148	@ 0x94
 80212a4:	e5b3      	b.n	8020e0e <bam_setParam+0x76>
 80212a6:	bf00      	nop
 80212a8:	08036084 	.word	0x08036084
 80212ac:	08035f04 	.word	0x08035f04
 80212b0:	08035ff4 	.word	0x08035ff4
 80212b4:	08035f94 	.word	0x08035f94
 80212b8:	08035e8c 	.word	0x08035e8c
 80212bc:	080360b4 	.word	0x080360b4
 80212c0:	0803609c 	.word	0x0803609c
 80212c4:	08035ebc 	.word	0x08035ebc
 80212c8:	08036024 	.word	0x08036024
 80212cc:	0803606c 	.word	0x0803606c
 80212d0:	08035f1c 	.word	0x08035f1c

080212d4 <bam_process>:
 80212d4:	6843      	ldr	r3, [r0, #4]
 80212d6:	2b04      	cmp	r3, #4
 80212d8:	f040 80dc 	bne.w	8021494 <bam_process+0x1c0>
 80212dc:	684b      	ldr	r3, [r1, #4]
 80212de:	2b04      	cmp	r3, #4
 80212e0:	f040 80d8 	bne.w	8021494 <bam_process+0x1c0>
 80212e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212e8:	68c5      	ldr	r5, [r0, #12]
 80212ea:	f9b2 45c4 	ldrsh.w	r4, [r2, #1476]	@ 0x5c4
 80212ee:	42ac      	cmp	r4, r5
 80212f0:	b08f      	sub	sp, #60	@ 0x3c
 80212f2:	f300 80d8 	bgt.w	80214a6 <bam_process+0x1d2>
 80212f6:	f5b5 7ff0 	cmp.w	r5, #480	@ 0x1e0
 80212fa:	f300 80d4 	bgt.w	80214a6 <bam_process+0x1d2>
 80212fe:	688c      	ldr	r4, [r1, #8]
 8021300:	6817      	ldr	r7, [r2, #0]
 8021302:	9305      	str	r3, [sp, #20]
 8021304:	2101      	movs	r1, #1
 8021306:	9104      	str	r1, [sp, #16]
 8021308:	9108      	str	r1, [sp, #32]
 802130a:	910d      	str	r1, [sp, #52]	@ 0x34
 802130c:	6901      	ldr	r1, [r0, #16]
 802130e:	930a      	str	r3, [sp, #40]	@ 0x28
 8021310:	f507 6e70 	add.w	lr, r7, #3840	@ 0xf00
 8021314:	2602      	movs	r6, #2
 8021316:	2901      	cmp	r1, #1
 8021318:	9507      	str	r5, [sp, #28]
 802131a:	950c      	str	r5, [sp, #48]	@ 0x30
 802131c:	970b      	str	r7, [sp, #44]	@ 0x2c
 802131e:	f8cd e018 	str.w	lr, [sp, #24]
 8021322:	9609      	str	r6, [sp, #36]	@ 0x24
 8021324:	6883      	ldr	r3, [r0, #8]
 8021326:	f9b2 b8b6 	ldrsh.w	fp, [r2, #2230]	@ 0x8b6
 802132a:	f040 80b6 	bne.w	802149a <bam_process+0x1c6>
 802132e:	6801      	ldr	r1, [r0, #0]
 8021330:	42b1      	cmp	r1, r6
 8021332:	f040 80b5 	bne.w	80214a0 <bam_process+0x1cc>
 8021336:	f9b2 18b4 	ldrsh.w	r1, [r2, #2228]	@ 0x8b4
 802133a:	2901      	cmp	r1, #1
 802133c:	d025      	beq.n	802138a <bam_process+0xb6>
 802133e:	bb01      	cbnz	r1, 8021382 <bam_process+0xae>
 8021340:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8021344:	f1bb 0f01 	cmp.w	fp, #1
 8021348:	ea4f 0565 	mov.w	r5, r5, asr #1
 802134c:	f000 808d 	beq.w	802146a <bam_process+0x196>
 8021350:	2d00      	cmp	r5, #0
 8021352:	dd16      	ble.n	8021382 <bam_process+0xae>
 8021354:	3501      	adds	r5, #1
 8021356:	eb03 1505 	add.w	r5, r3, r5, lsl #4
 802135a:	3418      	adds	r4, #24
 802135c:	3310      	adds	r3, #16
 802135e:	2200      	movs	r2, #0
 8021360:	e953 0104 	ldrd	r0, r1, [r3, #-16]
 8021364:	e944 0106 	strd	r0, r1, [r4, #-24]
 8021368:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 802136c:	3310      	adds	r3, #16
 802136e:	42ab      	cmp	r3, r5
 8021370:	f844 2c10 	str.w	r2, [r4, #-16]
 8021374:	e944 0103 	strd	r0, r1, [r4, #-12]
 8021378:	f844 2c04 	str.w	r2, [r4, #-4]
 802137c:	f104 0418 	add.w	r4, r4, #24
 8021380:	d1ee      	bne.n	8021360 <bam_process+0x8c>
 8021382:	2000      	movs	r0, #0
 8021384:	b00f      	add	sp, #60	@ 0x3c
 8021386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802138a:	f1bb 0f01 	cmp.w	fp, #1
 802138e:	4616      	mov	r6, r2
 8021390:	4682      	mov	sl, r0
 8021392:	f000 808b 	beq.w	80214ac <bam_process+0x1d8>
 8021396:	f1ab 0202 	sub.w	r2, fp, #2
 802139a:	b292      	uxth	r2, r2
 802139c:	2a01      	cmp	r2, #1
 802139e:	f200 816a 	bhi.w	8021676 <bam_process+0x3a2>
 80213a2:	2d00      	cmp	r5, #0
 80213a4:	dd10      	ble.n	80213c8 <bam_process+0xf4>
 80213a6:	3308      	adds	r3, #8
 80213a8:	eb0e 0085 	add.w	r0, lr, r5, lsl #2
 80213ac:	f853 2c08 	ldr.w	r2, [r3, #-8]
 80213b0:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80213b4:	1052      	asrs	r2, r2, #1
 80213b6:	1049      	asrs	r1, r1, #1
 80213b8:	fa81 f282 	qadd	r2, r2, r1
 80213bc:	f84e 2b04 	str.w	r2, [lr], #4
 80213c0:	4586      	cmp	lr, r0
 80213c2:	f103 0308 	add.w	r3, r3, #8
 80213c6:	d1f1      	bne.n	80213ac <bam_process+0xd8>
 80213c8:	a904      	add	r1, sp, #16
 80213ca:	4608      	mov	r0, r1
 80213cc:	f106 02a0 	add.w	r2, r6, #160	@ 0xa0
 80213d0:	f008 ffd6 	bl	802a380 <bam_biquad_process>
 80213d4:	a904      	add	r1, sp, #16
 80213d6:	4608      	mov	r0, r1
 80213d8:	f506 725a 	add.w	r2, r6, #872	@ 0x368
 80213dc:	f008 ffd0 	bl	802a380 <bam_biquad_process>
 80213e0:	a904      	add	r1, sp, #16
 80213e2:	4608      	mov	r0, r1
 80213e4:	f506 62b6 	add.w	r2, r6, #1456	@ 0x5b0
 80213e8:	f009 fb98 	bl	802ab1c <bam_svc_process>
 80213ec:	a904      	add	r1, sp, #16
 80213ee:	4608      	mov	r0, r1
 80213f0:	f606 028c 	addw	r2, r6, #2188	@ 0x88c
 80213f4:	f004 ffae 	bl	8026354 <limiter_process>
 80213f8:	a904      	add	r1, sp, #16
 80213fa:	4608      	mov	r0, r1
 80213fc:	f206 42cc 	addw	r2, r6, #1228	@ 0x4cc
 8021400:	f008 ffbe 	bl	802a380 <bam_biquad_process>
 8021404:	f1bb 0f02 	cmp.w	fp, #2
 8021408:	f000 80ed 	beq.w	80215e6 <bam_process+0x312>
 802140c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8021410:	106d      	asrs	r5, r5, #1
 8021412:	2d00      	cmp	r5, #0
 8021414:	f8da 2008 	ldr.w	r2, [sl, #8]
 8021418:	9e06      	ldr	r6, [sp, #24]
 802141a:	ddb2      	ble.n	8021382 <bam_process+0xae>
 802141c:	3501      	adds	r5, #1
 802141e:	eb02 1505 	add.w	r5, r2, r5, lsl #4
 8021422:	3418      	adds	r4, #24
 8021424:	3210      	adds	r2, #16
 8021426:	3608      	adds	r6, #8
 8021428:	e952 0104 	ldrd	r0, r1, [r2, #-16]
 802142c:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8021430:	e944 0106 	strd	r0, r1, [r4, #-24]
 8021434:	005b      	lsls	r3, r3, #1
 8021436:	f303 031e 	ssat	r3, #31, r3
 802143a:	005b      	lsls	r3, r3, #1
 802143c:	f844 3c10 	str.w	r3, [r4, #-16]
 8021440:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8021444:	e952 0102 	ldrd	r0, r1, [r2, #-8]
 8021448:	3210      	adds	r2, #16
 802144a:	005b      	lsls	r3, r3, #1
 802144c:	4295      	cmp	r5, r2
 802144e:	f303 031e 	ssat	r3, #31, r3
 8021452:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8021456:	f844 3c04 	str.w	r3, [r4, #-4]
 802145a:	e944 0103 	strd	r0, r1, [r4, #-12]
 802145e:	f106 0608 	add.w	r6, r6, #8
 8021462:	f104 0418 	add.w	r4, r4, #24
 8021466:	d1df      	bne.n	8021428 <bam_process+0x154>
 8021468:	e78b      	b.n	8021382 <bam_process+0xae>
 802146a:	2d00      	cmp	r5, #0
 802146c:	dd89      	ble.n	8021382 <bam_process+0xae>
 802146e:	1c6a      	adds	r2, r5, #1
 8021470:	eb04 1202 	add.w	r2, r4, r2, lsl #4
 8021474:	3310      	adds	r3, #16
 8021476:	3410      	adds	r4, #16
 8021478:	e953 0104 	ldrd	r0, r1, [r3, #-16]
 802147c:	e944 0104 	strd	r0, r1, [r4, #-16]
 8021480:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8021484:	3410      	adds	r4, #16
 8021486:	e944 0106 	strd	r0, r1, [r4, #-24]
 802148a:	42a2      	cmp	r2, r4
 802148c:	f103 0310 	add.w	r3, r3, #16
 8021490:	d1f2      	bne.n	8021478 <bam_process+0x1a4>
 8021492:	e776      	b.n	8021382 <bam_process+0xae>
 8021494:	f06f 0002 	mvn.w	r0, #2
 8021498:	4770      	bx	lr
 802149a:	f04f 30ff 	mov.w	r0, #4294967295
 802149e:	e771      	b.n	8021384 <bam_process+0xb0>
 80214a0:	f06f 0001 	mvn.w	r0, #1
 80214a4:	e76e      	b.n	8021384 <bam_process+0xb0>
 80214a6:	f06f 0006 	mvn.w	r0, #6
 80214aa:	e76b      	b.n	8021384 <bam_process+0xb0>
 80214ac:	2d00      	cmp	r5, #0
 80214ae:	dd0d      	ble.n	80214cc <bam_process+0x1f8>
 80214b0:	3308      	adds	r3, #8
 80214b2:	eb0e 0085 	add.w	r0, lr, r5, lsl #2
 80214b6:	e913 0006 	ldmdb	r3, {r1, r2}
 80214ba:	1052      	asrs	r2, r2, #1
 80214bc:	eb02 0261 	add.w	r2, r2, r1, asr #1
 80214c0:	f84e 2b04 	str.w	r2, [lr], #4
 80214c4:	4586      	cmp	lr, r0
 80214c6:	f103 0308 	add.w	r3, r3, #8
 80214ca:	d1f4      	bne.n	80214b6 <bam_process+0x1e2>
 80214cc:	a904      	add	r1, sp, #16
 80214ce:	4608      	mov	r0, r1
 80214d0:	f106 02a0 	add.w	r2, r6, #160	@ 0xa0
 80214d4:	f008 ff54 	bl	802a380 <bam_biquad_process>
 80214d8:	a904      	add	r1, sp, #16
 80214da:	4608      	mov	r0, r1
 80214dc:	f506 725a 	add.w	r2, r6, #872	@ 0x368
 80214e0:	f008 ff4e 	bl	802a380 <bam_biquad_process>
 80214e4:	eb05 7bd5 	add.w	fp, r5, r5, lsr #31
 80214e8:	a904      	add	r1, sp, #16
 80214ea:	4608      	mov	r0, r1
 80214ec:	f506 62b6 	add.w	r2, r6, #1456	@ 0x5b0
 80214f0:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 80214f4:	f009 fb12 	bl	802ab1c <bam_svc_process>
 80214f8:	f1bb 0f00 	cmp.w	fp, #0
 80214fc:	f8da 1008 	ldr.w	r1, [sl, #8]
 8021500:	f340 80bc 	ble.w	802167c <bam_process+0x3a8>
 8021504:	f10b 0001 	add.w	r0, fp, #1
 8021508:	eb07 1000 	add.w	r0, r7, r0, lsl #4
 802150c:	3110      	adds	r1, #16
 802150e:	3710      	adds	r7, #16
 8021510:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 8021514:	e947 2304 	strd	r2, r3, [r7, #-16]
 8021518:	e951 2302 	ldrd	r2, r3, [r1, #-8]
 802151c:	3710      	adds	r7, #16
 802151e:	e947 2306 	strd	r2, r3, [r7, #-24]
 8021522:	42b8      	cmp	r0, r7
 8021524:	f101 0110 	add.w	r1, r1, #16
 8021528:	d1f2      	bne.n	8021510 <bam_process+0x23c>
 802152a:	ab09      	add	r3, sp, #36	@ 0x24
 802152c:	4619      	mov	r1, r3
 802152e:	4618      	mov	r0, r3
 8021530:	f506 7201 	add.w	r2, r6, #516	@ 0x204
 8021534:	469a      	mov	sl, r3
 8021536:	f008 ff23 	bl	802a380 <bam_biquad_process>
 802153a:	f8dd e018 	ldr.w	lr, [sp, #24]
 802153e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021540:	9500      	str	r5, [sp, #0]
 8021542:	eb0e 02cb 	add.w	r2, lr, fp, lsl #3
 8021546:	3310      	adds	r3, #16
 8021548:	9401      	str	r4, [sp, #4]
 802154a:	4617      	mov	r7, r2
 802154c:	46b4      	mov	ip, r6
 802154e:	f85e 2b08 	ldr.w	r2, [lr], #8
 8021552:	f853 4c10 	ldr.w	r4, [r3, #-16]
 8021556:	f85e 6c04 	ldr.w	r6, [lr, #-4]
 802155a:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 802155e:	fa82 fb84 	qadd	fp, r4, r2
 8021562:	fa82 f585 	qadd	r5, r5, r2
 8021566:	f04f 0800 	mov.w	r8, #0
 802156a:	ea48 040b 	orr.w	r4, r8, fp
 802156e:	e943 4504 	strd	r4, r5, [r3, #-16]
 8021572:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8021576:	fa86 f282 	qadd	r2, r2, r6
 802157a:	f853 4c04 	ldr.w	r4, [r3, #-4]
 802157e:	fa86 f684 	qadd	r6, r4, r6
 8021582:	ea48 0402 	orr.w	r4, r8, r2
 8021586:	4635      	mov	r5, r6
 8021588:	45be      	cmp	lr, r7
 802158a:	e943 4502 	strd	r4, r5, [r3, #-8]
 802158e:	f103 0310 	add.w	r3, r3, #16
 8021592:	d1dc      	bne.n	802154e <bam_process+0x27a>
 8021594:	9d00      	ldr	r5, [sp, #0]
 8021596:	9c01      	ldr	r4, [sp, #4]
 8021598:	4666      	mov	r6, ip
 802159a:	f606 028c 	addw	r2, r6, #2188	@ 0x88c
 802159e:	4651      	mov	r1, sl
 80215a0:	4650      	mov	r0, sl
 80215a2:	f004 fed7 	bl	8026354 <limiter_process>
 80215a6:	2d00      	cmp	r5, #0
 80215a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80215aa:	f77f aeea 	ble.w	8021382 <bam_process+0xae>
 80215ae:	3501      	adds	r5, #1
 80215b0:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 80215b4:	3408      	adds	r4, #8
 80215b6:	3208      	adds	r2, #8
 80215b8:	f852 3c08 	ldr.w	r3, [r2, #-8]
 80215bc:	005b      	lsls	r3, r3, #1
 80215be:	f303 031e 	ssat	r3, #31, r3
 80215c2:	005b      	lsls	r3, r3, #1
 80215c4:	f844 3c08 	str.w	r3, [r4, #-8]
 80215c8:	f852 3c04 	ldr.w	r3, [r2, #-4]
 80215cc:	3208      	adds	r2, #8
 80215ce:	005b      	lsls	r3, r3, #1
 80215d0:	4295      	cmp	r5, r2
 80215d2:	f303 031e 	ssat	r3, #31, r3
 80215d6:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80215da:	f844 3c04 	str.w	r3, [r4, #-4]
 80215de:	f104 0408 	add.w	r4, r4, #8
 80215e2:	d1e9      	bne.n	80215b8 <bam_process+0x2e4>
 80215e4:	e6cd      	b.n	8021382 <bam_process+0xae>
 80215e6:	eb05 73d5 	add.w	r3, r5, r5, lsr #31
 80215ea:	105b      	asrs	r3, r3, #1
 80215ec:	2b00      	cmp	r3, #0
 80215ee:	f8da 1008 	ldr.w	r1, [sl, #8]
 80215f2:	dd11      	ble.n	8021618 <bam_process+0x344>
 80215f4:	3301      	adds	r3, #1
 80215f6:	eb07 1003 	add.w	r0, r7, r3, lsl #4
 80215fa:	3110      	adds	r1, #16
 80215fc:	3710      	adds	r7, #16
 80215fe:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 8021602:	e947 2304 	strd	r2, r3, [r7, #-16]
 8021606:	e951 2302 	ldrd	r2, r3, [r1, #-8]
 802160a:	3710      	adds	r7, #16
 802160c:	e947 2306 	strd	r2, r3, [r7, #-24]
 8021610:	42b8      	cmp	r0, r7
 8021612:	f101 0110 	add.w	r1, r1, #16
 8021616:	d1f2      	bne.n	80215fe <bam_process+0x32a>
 8021618:	a909      	add	r1, sp, #36	@ 0x24
 802161a:	f506 7201 	add.w	r2, r6, #516	@ 0x204
 802161e:	4608      	mov	r0, r1
 8021620:	f008 feae 	bl	802a380 <bam_biquad_process>
 8021624:	2d00      	cmp	r5, #0
 8021626:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021628:	9906      	ldr	r1, [sp, #24]
 802162a:	f77f aeaa 	ble.w	8021382 <bam_process+0xae>
 802162e:	3208      	adds	r2, #8
 8021630:	340c      	adds	r4, #12
 8021632:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 8021636:	f852 3c08 	ldr.w	r3, [r2, #-8]
 802163a:	005b      	lsls	r3, r3, #1
 802163c:	f303 031e 	ssat	r3, #31, r3
 8021640:	005b      	lsls	r3, r3, #1
 8021642:	f844 3c0c 	str.w	r3, [r4, #-12]
 8021646:	f852 3c04 	ldr.w	r3, [r2, #-4]
 802164a:	005b      	lsls	r3, r3, #1
 802164c:	f303 031e 	ssat	r3, #31, r3
 8021650:	005b      	lsls	r3, r3, #1
 8021652:	f844 3c08 	str.w	r3, [r4, #-8]
 8021656:	f851 3b04 	ldr.w	r3, [r1], #4
 802165a:	005b      	lsls	r3, r3, #1
 802165c:	428d      	cmp	r5, r1
 802165e:	f303 031e 	ssat	r3, #31, r3
 8021662:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8021666:	f844 3c04 	str.w	r3, [r4, #-4]
 802166a:	f102 0208 	add.w	r2, r2, #8
 802166e:	f104 040c 	add.w	r4, r4, #12
 8021672:	d1e0      	bne.n	8021636 <bam_process+0x362>
 8021674:	e685      	b.n	8021382 <bam_process+0xae>
 8021676:	f06f 0004 	mvn.w	r0, #4
 802167a:	e683      	b.n	8021384 <bam_process+0xb0>
 802167c:	ab09      	add	r3, sp, #36	@ 0x24
 802167e:	4619      	mov	r1, r3
 8021680:	4618      	mov	r0, r3
 8021682:	f506 7201 	add.w	r2, r6, #516	@ 0x204
 8021686:	469a      	mov	sl, r3
 8021688:	f008 fe7a 	bl	802a380 <bam_biquad_process>
 802168c:	e785      	b.n	802159a <bam_process+0x2c6>
 802168e:	bf00      	nop

08021690 <biquad_df1_cascade_reset>:
 8021690:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021694:	4604      	mov	r4, r0
 8021696:	2500      	movs	r5, #0
 8021698:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 802169c:	2601      	movs	r6, #1
 802169e:	f100 09f8 	add.w	r9, r0, #248	@ 0xf8
 80216a2:	27a0      	movs	r7, #160	@ 0xa0
 80216a4:	6001      	str	r1, [r0, #0]
 80216a6:	7106      	strb	r6, [r0, #4]
 80216a8:	7146      	strb	r6, [r0, #5]
 80216aa:	6085      	str	r5, [r0, #8]
 80216ac:	6105      	str	r5, [r0, #16]
 80216ae:	6145      	str	r5, [r0, #20]
 80216b0:	6185      	str	r5, [r0, #24]
 80216b2:	61c5      	str	r5, [r0, #28]
 80216b4:	6205      	str	r5, [r0, #32]
 80216b6:	6285      	str	r5, [r0, #40]	@ 0x28
 80216b8:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80216ba:	6305      	str	r5, [r0, #48]	@ 0x30
 80216bc:	6345      	str	r5, [r0, #52]	@ 0x34
 80216be:	6385      	str	r5, [r0, #56]	@ 0x38
 80216c0:	6405      	str	r5, [r0, #64]	@ 0x40
 80216c2:	6445      	str	r5, [r0, #68]	@ 0x44
 80216c4:	6485      	str	r5, [r0, #72]	@ 0x48
 80216c6:	64c5      	str	r5, [r0, #76]	@ 0x4c
 80216c8:	6505      	str	r5, [r0, #80]	@ 0x50
 80216ca:	6585      	str	r5, [r0, #88]	@ 0x58
 80216cc:	65c5      	str	r5, [r0, #92]	@ 0x5c
 80216ce:	6605      	str	r5, [r0, #96]	@ 0x60
 80216d0:	6645      	str	r5, [r0, #100]	@ 0x64
 80216d2:	6685      	str	r5, [r0, #104]	@ 0x68
 80216d4:	6705      	str	r5, [r0, #112]	@ 0x70
 80216d6:	6745      	str	r5, [r0, #116]	@ 0x74
 80216d8:	6785      	str	r5, [r0, #120]	@ 0x78
 80216da:	60c2      	str	r2, [r0, #12]
 80216dc:	6242      	str	r2, [r0, #36]	@ 0x24
 80216de:	63c2      	str	r2, [r0, #60]	@ 0x3c
 80216e0:	6542      	str	r2, [r0, #84]	@ 0x54
 80216e2:	4629      	mov	r1, r5
 80216e4:	66c2      	str	r2, [r0, #108]	@ 0x6c
 80216e6:	f504 78cc 	add.w	r8, r4, #408	@ 0x198
 80216ea:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
 80216ee:	f8c4 209c 	str.w	r2, [r4, #156]	@ 0x9c
 80216f2:	f8c4 20b4 	str.w	r2, [r4, #180]	@ 0xb4
 80216f6:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
 80216fa:	f8c4 20e4 	str.w	r2, [r4, #228]	@ 0xe4
 80216fe:	4648      	mov	r0, r9
 8021700:	463a      	mov	r2, r7
 8021702:	67e5      	str	r5, [r4, #124]	@ 0x7c
 8021704:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
 8021708:	f8c4 5088 	str.w	r5, [r4, #136]	@ 0x88
 802170c:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
 8021710:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
 8021714:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
 8021718:	f8c4 5098 	str.w	r5, [r4, #152]	@ 0x98
 802171c:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8021720:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8021724:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8021728:	f8c4 50ac 	str.w	r5, [r4, #172]	@ 0xac
 802172c:	f8c4 50b0 	str.w	r5, [r4, #176]	@ 0xb0
 8021730:	f8c4 50b8 	str.w	r5, [r4, #184]	@ 0xb8
 8021734:	f8c4 50bc 	str.w	r5, [r4, #188]	@ 0xbc
 8021738:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 802173c:	f8c4 50c4 	str.w	r5, [r4, #196]	@ 0xc4
 8021740:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8021744:	f8c4 50d0 	str.w	r5, [r4, #208]	@ 0xd0
 8021748:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
 802174c:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
 8021750:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
 8021754:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
 8021758:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
 802175c:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 8021760:	f8c4 50f0 	str.w	r5, [r4, #240]	@ 0xf0
 8021764:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
 8021768:	f00c f9f4 	bl	802db54 <memset>
 802176c:	463a      	mov	r2, r7
 802176e:	4629      	mov	r1, r5
 8021770:	f104 0708 	add.w	r7, r4, #8
 8021774:	4640      	mov	r0, r8
 8021776:	f00c f9ed 	bl	802db54 <memset>
 802177a:	464b      	mov	r3, r9
 802177c:	4631      	mov	r1, r6
 802177e:	463a      	mov	r2, r7
 8021780:	f504 700e 	add.w	r0, r4, #568	@ 0x238
 8021784:	f009 fc3c 	bl	802b000 <biquad_cascade_df1_init_q31>
 8021788:	f504 7012 	add.w	r0, r4, #584	@ 0x248
 802178c:	4643      	mov	r3, r8
 802178e:	463a      	mov	r2, r7
 8021790:	7961      	ldrb	r1, [r4, #5]
 8021792:	f009 fc35 	bl	802b000 <biquad_cascade_df1_init_q31>
 8021796:	4628      	mov	r0, r5
 8021798:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0802179c <biquad_df1_cascade_setConfig>:
 802179c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802179e:	f890 e000 	ldrb.w	lr, [r0]
 80217a2:	790b      	ldrb	r3, [r1, #4]
 80217a4:	4573      	cmp	r3, lr
 80217a6:	d026      	beq.n	80217f6 <biquad_df1_cascade_setConfig+0x5a>
 80217a8:	f881 e004 	strb.w	lr, [r1, #4]
 80217ac:	7845      	ldrb	r5, [r0, #1]
 80217ae:	714d      	strb	r5, [r1, #5]
 80217b0:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 80217b4:	005c      	lsls	r4, r3, #1
 80217b6:	d009      	beq.n	80217cc <biquad_df1_cascade_setConfig+0x30>
 80217b8:	3401      	adds	r4, #1
 80217ba:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80217be:	1d0b      	adds	r3, r1, #4
 80217c0:	f850 2f04 	ldr.w	r2, [r0, #4]!
 80217c4:	f843 2f04 	str.w	r2, [r3, #4]!
 80217c8:	42a3      	cmp	r3, r4
 80217ca:	d1f9      	bne.n	80217c0 <biquad_df1_cascade_setConfig+0x24>
 80217cc:	460c      	mov	r4, r1
 80217ce:	f101 0608 	add.w	r6, r1, #8
 80217d2:	4632      	mov	r2, r6
 80217d4:	4629      	mov	r1, r5
 80217d6:	f104 03f8 	add.w	r3, r4, #248	@ 0xf8
 80217da:	f504 700e 	add.w	r0, r4, #568	@ 0x238
 80217de:	f009 fc0f 	bl	802b000 <biquad_cascade_df1_init_q31>
 80217e2:	4632      	mov	r2, r6
 80217e4:	f504 73cc 	add.w	r3, r4, #408	@ 0x198
 80217e8:	7961      	ldrb	r1, [r4, #5]
 80217ea:	f504 7012 	add.w	r0, r4, #584	@ 0x248
 80217ee:	f009 fc07 	bl	802b000 <biquad_cascade_df1_init_q31>
 80217f2:	2000      	movs	r0, #0
 80217f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80217f6:	794a      	ldrb	r2, [r1, #5]
 80217f8:	7843      	ldrb	r3, [r0, #1]
 80217fa:	4293      	cmp	r3, r2
 80217fc:	d1d4      	bne.n	80217a8 <biquad_df1_cascade_setConfig+0xc>
 80217fe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021802:	005b      	lsls	r3, r3, #1
 8021804:	d0f5      	beq.n	80217f2 <biquad_df1_cascade_setConfig+0x56>
 8021806:	1c5f      	adds	r7, r3, #1
 8021808:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 802180c:	1d0b      	adds	r3, r1, #4
 802180e:	4604      	mov	r4, r0
 8021810:	2200      	movs	r2, #0
 8021812:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8021816:	f854 5f04 	ldr.w	r5, [r4, #4]!
 802181a:	42ae      	cmp	r6, r5
 802181c:	bf18      	it	ne
 802181e:	2201      	movne	r2, #1
 8021820:	42bb      	cmp	r3, r7
 8021822:	d1f6      	bne.n	8021812 <biquad_df1_cascade_setConfig+0x76>
 8021824:	2a00      	cmp	r2, #0
 8021826:	d0e4      	beq.n	80217f2 <biquad_df1_cascade_setConfig+0x56>
 8021828:	e7be      	b.n	80217a8 <biquad_df1_cascade_setConfig+0xc>
 802182a:	bf00      	nop

0802182c <biquad_df1_cascade_getConfig>:
 802182c:	790b      	ldrb	r3, [r1, #4]
 802182e:	7003      	strb	r3, [r0, #0]
 8021830:	794b      	ldrb	r3, [r1, #5]
 8021832:	7043      	strb	r3, [r0, #1]
 8021834:	794b      	ldrb	r3, [r1, #5]
 8021836:	b18b      	cbz	r3, 802185c <biquad_df1_cascade_getConfig+0x30>
 8021838:	b410      	push	{r4}
 802183a:	2200      	movs	r2, #0
 802183c:	1d0c      	adds	r4, r1, #4
 802183e:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8021842:	f840 3f04 	str.w	r3, [r0, #4]!
 8021846:	794b      	ldrb	r3, [r1, #5]
 8021848:	3201      	adds	r2, #1
 802184a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802184e:	ebb2 0f43 	cmp.w	r2, r3, lsl #1
 8021852:	dbf4      	blt.n	802183e <biquad_df1_cascade_getConfig+0x12>
 8021854:	2000      	movs	r0, #0
 8021856:	f85d 4b04 	ldr.w	r4, [sp], #4
 802185a:	4770      	bx	lr
 802185c:	2000      	movs	r0, #0
 802185e:	4770      	bx	lr

08021860 <biquad_df1_cascade_setParam>:
 8021860:	b538      	push	{r3, r4, r5, lr}
 8021862:	460d      	mov	r5, r1
 8021864:	7801      	ldrb	r1, [r0, #0]
 8021866:	7169      	strb	r1, [r5, #5]
 8021868:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 802186c:	005c      	lsls	r4, r3, #1
 802186e:	d009      	beq.n	8021884 <biquad_df1_cascade_setParam+0x24>
 8021870:	3401      	adds	r4, #1
 8021872:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8021876:	1d2b      	adds	r3, r5, #4
 8021878:	f850 2f04 	ldr.w	r2, [r0, #4]!
 802187c:	f843 2f04 	str.w	r2, [r3, #4]!
 8021880:	42a3      	cmp	r3, r4
 8021882:	d1f9      	bne.n	8021878 <biquad_df1_cascade_setParam+0x18>
 8021884:	f105 0408 	add.w	r4, r5, #8
 8021888:	4622      	mov	r2, r4
 802188a:	f105 03f8 	add.w	r3, r5, #248	@ 0xf8
 802188e:	f505 700e 	add.w	r0, r5, #568	@ 0x238
 8021892:	f009 fbb5 	bl	802b000 <biquad_cascade_df1_init_q31>
 8021896:	f505 7012 	add.w	r0, r5, #584	@ 0x248
 802189a:	4622      	mov	r2, r4
 802189c:	f505 73cc 	add.w	r3, r5, #408	@ 0x198
 80218a0:	7969      	ldrb	r1, [r5, #5]
 80218a2:	f009 fbad 	bl	802b000 <biquad_cascade_df1_init_q31>
 80218a6:	2000      	movs	r0, #0
 80218a8:	bd38      	pop	{r3, r4, r5, pc}
 80218aa:	bf00      	nop

080218ac <biquad_df1_cascade_process>:
 80218ac:	6843      	ldr	r3, [r0, #4]
 80218ae:	2b04      	cmp	r3, #4
 80218b0:	d13c      	bne.n	802192c <biquad_df1_cascade_process+0x80>
 80218b2:	684b      	ldr	r3, [r1, #4]
 80218b4:	2b04      	cmp	r3, #4
 80218b6:	d139      	bne.n	802192c <biquad_df1_cascade_process+0x80>
 80218b8:	b570      	push	{r4, r5, r6, lr}
 80218ba:	7915      	ldrb	r5, [r2, #4]
 80218bc:	688c      	ldr	r4, [r1, #8]
 80218be:	68c3      	ldr	r3, [r0, #12]
 80218c0:	6881      	ldr	r1, [r0, #8]
 80218c2:	2d01      	cmp	r5, #1
 80218c4:	b082      	sub	sp, #8
 80218c6:	d018      	beq.n	80218fa <biquad_df1_cascade_process+0x4e>
 80218c8:	b9a5      	cbnz	r5, 80218f4 <biquad_df1_cascade_process+0x48>
 80218ca:	6802      	ldr	r2, [r0, #0]
 80218cc:	1e56      	subs	r6, r2, #1
 80218ce:	2e01      	cmp	r6, #1
 80218d0:	d829      	bhi.n	8021926 <biquad_df1_cascade_process+0x7a>
 80218d2:	fb02 f203 	mul.w	r2, r2, r3
 80218d6:	2a00      	cmp	r2, #0
 80218d8:	dd0c      	ble.n	80218f4 <biquad_df1_cascade_process+0x48>
 80218da:	3904      	subs	r1, #4
 80218dc:	1f22      	subs	r2, r4, #4
 80218de:	f851 3f04 	ldr.w	r3, [r1, #4]!
 80218e2:	f842 3f04 	str.w	r3, [r2, #4]!
 80218e6:	6803      	ldr	r3, [r0, #0]
 80218e8:	68c4      	ldr	r4, [r0, #12]
 80218ea:	3501      	adds	r5, #1
 80218ec:	fb04 f403 	mul.w	r4, r4, r3
 80218f0:	42ac      	cmp	r4, r5
 80218f2:	dcf4      	bgt.n	80218de <biquad_df1_cascade_process+0x32>
 80218f4:	2000      	movs	r0, #0
 80218f6:	b002      	add	sp, #8
 80218f8:	bd70      	pop	{r4, r5, r6, pc}
 80218fa:	4615      	mov	r5, r2
 80218fc:	6802      	ldr	r2, [r0, #0]
 80218fe:	2a01      	cmp	r2, #1
 8021900:	d01a      	beq.n	8021938 <biquad_df1_cascade_process+0x8c>
 8021902:	2a02      	cmp	r2, #2
 8021904:	d10f      	bne.n	8021926 <biquad_df1_cascade_process+0x7a>
 8021906:	6902      	ldr	r2, [r0, #16]
 8021908:	2a01      	cmp	r2, #1
 802190a:	d112      	bne.n	8021932 <biquad_df1_cascade_process+0x86>
 802190c:	9201      	str	r2, [sp, #4]
 802190e:	9300      	str	r3, [sp, #0]
 8021910:	460a      	mov	r2, r1
 8021912:	f505 700e 	add.w	r0, r5, #568	@ 0x238
 8021916:	4623      	mov	r3, r4
 8021918:	f505 7112 	add.w	r1, r5, #584	@ 0x248
 802191c:	f000 f964 	bl	8021be8 <biquad_df1_cascade_stereo_compute_q31>
 8021920:	2000      	movs	r0, #0
 8021922:	b002      	add	sp, #8
 8021924:	bd70      	pop	{r4, r5, r6, pc}
 8021926:	f06f 0001 	mvn.w	r0, #1
 802192a:	e7e4      	b.n	80218f6 <biquad_df1_cascade_process+0x4a>
 802192c:	f06f 0002 	mvn.w	r0, #2
 8021930:	4770      	bx	lr
 8021932:	f04f 30ff 	mov.w	r0, #4294967295
 8021936:	e7de      	b.n	80218f6 <biquad_df1_cascade_process+0x4a>
 8021938:	f505 700e 	add.w	r0, r5, #568	@ 0x238
 802193c:	4622      	mov	r2, r4
 802193e:	f000 f803 	bl	8021948 <biquad_df1_cascade_mono_compute_q31>
 8021942:	2000      	movs	r0, #0
 8021944:	e7d7      	b.n	80218f6 <biquad_df1_cascade_process+0x4a>
 8021946:	bf00      	nop

08021948 <biquad_df1_cascade_mono_compute_q31>:
 8021948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802194c:	b08d      	sub	sp, #52	@ 0x34
 802194e:	08dc      	lsrs	r4, r3, #3
 8021950:	9407      	str	r4, [sp, #28]
 8021952:	0124      	lsls	r4, r4, #4
 8021954:	4626      	mov	r6, r4
 8021956:	9408      	str	r4, [sp, #32]
 8021958:	4617      	mov	r7, r2
 802195a:	c831      	ldmia	r0, {r0, r4, r5}
 802195c:	f003 0307 	and.w	r3, r3, #7
 8021960:	9206      	str	r2, [sp, #24]
 8021962:	19ba      	adds	r2, r7, r6
 8021964:	9309      	str	r3, [sp, #36]	@ 0x24
 8021966:	f102 0310 	add.w	r3, r2, #16
 802196a:	930a      	str	r3, [sp, #40]	@ 0x28
 802196c:	1993      	adds	r3, r2, r6
 802196e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021970:	f105 0318 	add.w	r3, r5, #24
 8021974:	9304      	str	r3, [sp, #16]
 8021976:	f104 0310 	add.w	r3, r4, #16
 802197a:	9005      	str	r0, [sp, #20]
 802197c:	9102      	str	r1, [sp, #8]
 802197e:	9303      	str	r3, [sp, #12]
 8021980:	9a04      	ldr	r2, [sp, #16]
 8021982:	f852 5c18 	ldr.w	r5, [r2, #-24]
 8021986:	f852 bc14 	ldr.w	fp, [r2, #-20]
 802198a:	f852 6c10 	ldr.w	r6, [r2, #-16]
 802198e:	f852 7c0c 	ldr.w	r7, [r2, #-12]
 8021992:	f852 ec08 	ldr.w	lr, [r2, #-8]
 8021996:	f852 cc04 	ldr.w	ip, [r2, #-4]
 802199a:	9a03      	ldr	r2, [sp, #12]
 802199c:	f852 0c10 	ldr.w	r0, [r2, #-16]
 80219a0:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 80219a4:	e912 0018 	ldmdb	r2, {r3, r4}
 80219a8:	1c6a      	adds	r2, r5, #1
 80219aa:	9201      	str	r2, [sp, #4]
 80219ac:	9a07      	ldr	r2, [sp, #28]
 80219ae:	2a00      	cmp	r2, #0
 80219b0:	f000 8116 	beq.w	8021be0 <biquad_df1_cascade_mono_compute_q31+0x298>
 80219b4:	9d02      	ldr	r5, [sp, #8]
 80219b6:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80219ba:	9200      	str	r2, [sp, #0]
 80219bc:	f105 0a10 	add.w	sl, r5, #16
 80219c0:	9d06      	ldr	r5, [sp, #24]
 80219c2:	f105 0910 	add.w	r9, r5, #16
 80219c6:	f85a 5c10 	ldr.w	r5, [sl, #-16]
 80219ca:	10ad      	asrs	r5, r5, #2
 80219cc:	fb56 f210 	smmulr	r2, r6, r0
 80219d0:	fb5b 2215 	smmlar	r2, fp, r5, r2
 80219d4:	fb57 2111 	smmlar	r1, r7, r1, r2
 80219d8:	fb5e 1113 	smmlar	r1, lr, r3, r1
 80219dc:	fb5c 1414 	smmlar	r4, ip, r4, r1
 80219e0:	f85a 2c0c 	ldr.w	r2, [sl, #-12]
 80219e4:	fa04 f408 	lsl.w	r4, r4, r8
 80219e8:	0061      	lsls	r1, r4, #1
 80219ea:	f301 011e 	ssat	r1, #31, r1
 80219ee:	0049      	lsls	r1, r1, #1
 80219f0:	f849 1c10 	str.w	r1, [r9, #-16]
 80219f4:	1092      	asrs	r2, r2, #2
 80219f6:	fb5b f112 	smmulr	r1, fp, r2
 80219fa:	fb56 1115 	smmlar	r1, r6, r5, r1
 80219fe:	fb57 1010 	smmlar	r0, r7, r0, r1
 8021a02:	fb5e 0014 	smmlar	r0, lr, r4, r0
 8021a06:	fb5c 0313 	smmlar	r3, ip, r3, r0
 8021a0a:	f85a 1c08 	ldr.w	r1, [sl, #-8]
 8021a0e:	fa03 f308 	lsl.w	r3, r3, r8
 8021a12:	0058      	lsls	r0, r3, #1
 8021a14:	f300 001e 	ssat	r0, #31, r0
 8021a18:	0040      	lsls	r0, r0, #1
 8021a1a:	f849 0c0c 	str.w	r0, [r9, #-12]
 8021a1e:	1089      	asrs	r1, r1, #2
 8021a20:	fb5b f011 	smmulr	r0, fp, r1
 8021a24:	fb56 0012 	smmlar	r0, r6, r2, r0
 8021a28:	fb57 0515 	smmlar	r5, r7, r5, r0
 8021a2c:	fb5e 5513 	smmlar	r5, lr, r3, r5
 8021a30:	fb5c 5414 	smmlar	r4, ip, r4, r5
 8021a34:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8021a38:	fa04 f408 	lsl.w	r4, r4, r8
 8021a3c:	0065      	lsls	r5, r4, #1
 8021a3e:	f305 051e 	ssat	r5, #31, r5
 8021a42:	006d      	lsls	r5, r5, #1
 8021a44:	f849 5c08 	str.w	r5, [r9, #-8]
 8021a48:	1080      	asrs	r0, r0, #2
 8021a4a:	fb5b f510 	smmulr	r5, fp, r0
 8021a4e:	fb56 5511 	smmlar	r5, r6, r1, r5
 8021a52:	fb57 5212 	smmlar	r2, r7, r2, r5
 8021a56:	fb5e 2214 	smmlar	r2, lr, r4, r2
 8021a5a:	fb5c 2313 	smmlar	r3, ip, r3, r2
 8021a5e:	fa03 f308 	lsl.w	r3, r3, r8
 8021a62:	005a      	lsls	r2, r3, #1
 8021a64:	f302 021e 	ssat	r2, #31, r2
 8021a68:	0052      	lsls	r2, r2, #1
 8021a6a:	f849 2c04 	str.w	r2, [r9, #-4]
 8021a6e:	9a00      	ldr	r2, [sp, #0]
 8021a70:	3a01      	subs	r2, #1
 8021a72:	f10a 0a10 	add.w	sl, sl, #16
 8021a76:	f109 0910 	add.w	r9, r9, #16
 8021a7a:	9200      	str	r2, [sp, #0]
 8021a7c:	d1a3      	bne.n	80219c6 <biquad_df1_cascade_mono_compute_q31+0x7e>
 8021a7e:	9a02      	ldr	r2, [sp, #8]
 8021a80:	9d08      	ldr	r5, [sp, #32]
 8021a82:	442a      	add	r2, r5
 8021a84:	46c2      	mov	sl, r8
 8021a86:	9202      	str	r2, [sp, #8]
 8021a88:	f102 0910 	add.w	r9, r2, #16
 8021a8c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8021a90:	9a07      	ldr	r2, [sp, #28]
 8021a92:	9200      	str	r2, [sp, #0]
 8021a94:	f859 5c10 	ldr.w	r5, [r9, #-16]
 8021a98:	10ad      	asrs	r5, r5, #2
 8021a9a:	fb56 f210 	smmulr	r2, r6, r0
 8021a9e:	fb5b 2215 	smmlar	r2, fp, r5, r2
 8021aa2:	fb57 2111 	smmlar	r1, r7, r1, r2
 8021aa6:	fb5e 1113 	smmlar	r1, lr, r3, r1
 8021aaa:	fb5c 1414 	smmlar	r4, ip, r4, r1
 8021aae:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 8021ab2:	fa04 f40a 	lsl.w	r4, r4, sl
 8021ab6:	0061      	lsls	r1, r4, #1
 8021ab8:	f301 011e 	ssat	r1, #31, r1
 8021abc:	0049      	lsls	r1, r1, #1
 8021abe:	f848 1c10 	str.w	r1, [r8, #-16]
 8021ac2:	1092      	asrs	r2, r2, #2
 8021ac4:	fb5b f112 	smmulr	r1, fp, r2
 8021ac8:	fb56 1115 	smmlar	r1, r6, r5, r1
 8021acc:	fb57 1010 	smmlar	r0, r7, r0, r1
 8021ad0:	fb5e 0014 	smmlar	r0, lr, r4, r0
 8021ad4:	fb5c 0313 	smmlar	r3, ip, r3, r0
 8021ad8:	f859 1c08 	ldr.w	r1, [r9, #-8]
 8021adc:	fa03 f30a 	lsl.w	r3, r3, sl
 8021ae0:	0058      	lsls	r0, r3, #1
 8021ae2:	f300 001e 	ssat	r0, #31, r0
 8021ae6:	0040      	lsls	r0, r0, #1
 8021ae8:	f848 0c0c 	str.w	r0, [r8, #-12]
 8021aec:	1089      	asrs	r1, r1, #2
 8021aee:	fb5b f011 	smmulr	r0, fp, r1
 8021af2:	fb56 0012 	smmlar	r0, r6, r2, r0
 8021af6:	fb57 0515 	smmlar	r5, r7, r5, r0
 8021afa:	fb5e 5513 	smmlar	r5, lr, r3, r5
 8021afe:	fb5c 5414 	smmlar	r4, ip, r4, r5
 8021b02:	f859 0c04 	ldr.w	r0, [r9, #-4]
 8021b06:	fa04 f40a 	lsl.w	r4, r4, sl
 8021b0a:	0065      	lsls	r5, r4, #1
 8021b0c:	f305 051e 	ssat	r5, #31, r5
 8021b10:	006d      	lsls	r5, r5, #1
 8021b12:	f848 5c08 	str.w	r5, [r8, #-8]
 8021b16:	1080      	asrs	r0, r0, #2
 8021b18:	fb5b f510 	smmulr	r5, fp, r0
 8021b1c:	fb56 5511 	smmlar	r5, r6, r1, r5
 8021b20:	fb57 5212 	smmlar	r2, r7, r2, r5
 8021b24:	fb5e 2214 	smmlar	r2, lr, r4, r2
 8021b28:	fb5c 2313 	smmlar	r3, ip, r3, r2
 8021b2c:	fa03 f30a 	lsl.w	r3, r3, sl
 8021b30:	005a      	lsls	r2, r3, #1
 8021b32:	f302 021e 	ssat	r2, #31, r2
 8021b36:	0052      	lsls	r2, r2, #1
 8021b38:	f848 2c04 	str.w	r2, [r8, #-4]
 8021b3c:	9a00      	ldr	r2, [sp, #0]
 8021b3e:	3a01      	subs	r2, #1
 8021b40:	f109 0910 	add.w	r9, r9, #16
 8021b44:	f108 0810 	add.w	r8, r8, #16
 8021b48:	9200      	str	r2, [sp, #0]
 8021b4a:	d1a3      	bne.n	8021a94 <biquad_df1_cascade_mono_compute_q31+0x14c>
 8021b4c:	9a02      	ldr	r2, [sp, #8]
 8021b4e:	9d08      	ldr	r5, [sp, #32]
 8021b50:	f8cd a004 	str.w	sl, [sp, #4]
 8021b54:	442a      	add	r2, r5
 8021b56:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 8021b5a:	9202      	str	r2, [sp, #8]
 8021b5c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021b5e:	2a00      	cmp	r2, #0
 8021b60:	d039      	beq.n	8021bd6 <biquad_df1_cascade_mono_compute_q31+0x28e>
 8021b62:	4691      	mov	r9, r2
 8021b64:	9d02      	ldr	r5, [sp, #8]
 8021b66:	e001      	b.n	8021b6c <biquad_df1_cascade_mono_compute_q31+0x224>
 8021b68:	4613      	mov	r3, r2
 8021b6a:	4640      	mov	r0, r8
 8021b6c:	f855 2b04 	ldr.w	r2, [r5], #4
 8021b70:	ea4f 08a2 	mov.w	r8, r2, asr #2
 8021b74:	fb5b f218 	smmulr	r2, fp, r8
 8021b78:	fb56 2210 	smmlar	r2, r6, r0, r2
 8021b7c:	fb57 2211 	smmlar	r2, r7, r1, r2
 8021b80:	fb5e 2213 	smmlar	r2, lr, r3, r2
 8021b84:	fb5c 2214 	smmlar	r2, ip, r4, r2
 8021b88:	9901      	ldr	r1, [sp, #4]
 8021b8a:	408a      	lsls	r2, r1
 8021b8c:	0051      	lsls	r1, r2, #1
 8021b8e:	f1b9 0901 	subs.w	r9, r9, #1
 8021b92:	f301 011e 	ssat	r1, #31, r1
 8021b96:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8021b9a:	f84a 1b04 	str.w	r1, [sl], #4
 8021b9e:	461c      	mov	r4, r3
 8021ba0:	4601      	mov	r1, r0
 8021ba2:	d1e1      	bne.n	8021b68 <biquad_df1_cascade_mono_compute_q31+0x220>
 8021ba4:	9c03      	ldr	r4, [sp, #12]
 8021ba6:	f844 3c04 	str.w	r3, [r4, #-4]
 8021baa:	9b04      	ldr	r3, [sp, #16]
 8021bac:	f844 8c10 	str.w	r8, [r4, #-16]
 8021bb0:	3318      	adds	r3, #24
 8021bb2:	9304      	str	r3, [sp, #16]
 8021bb4:	f104 0310 	add.w	r3, r4, #16
 8021bb8:	9303      	str	r3, [sp, #12]
 8021bba:	9b06      	ldr	r3, [sp, #24]
 8021bbc:	9302      	str	r3, [sp, #8]
 8021bbe:	9b05      	ldr	r3, [sp, #20]
 8021bc0:	f844 0c0c 	str.w	r0, [r4, #-12]
 8021bc4:	3b01      	subs	r3, #1
 8021bc6:	f844 2c08 	str.w	r2, [r4, #-8]
 8021bca:	9305      	str	r3, [sp, #20]
 8021bcc:	f47f aed8 	bne.w	8021980 <biquad_df1_cascade_mono_compute_q31+0x38>
 8021bd0:	b00d      	add	sp, #52	@ 0x34
 8021bd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bd6:	461a      	mov	r2, r3
 8021bd8:	4680      	mov	r8, r0
 8021bda:	4623      	mov	r3, r4
 8021bdc:	4608      	mov	r0, r1
 8021bde:	e7e1      	b.n	8021ba4 <biquad_df1_cascade_mono_compute_q31+0x25c>
 8021be0:	f8dd a018 	ldr.w	sl, [sp, #24]
 8021be4:	e7ba      	b.n	8021b5c <biquad_df1_cascade_mono_compute_q31+0x214>
 8021be6:	bf00      	nop

08021be8 <biquad_df1_cascade_stereo_compute_q31>:
 8021be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bec:	684e      	ldr	r6, [r1, #4]
 8021bee:	b091      	sub	sp, #68	@ 0x44
 8021bf0:	c823      	ldmia	r0, {r0, r1, r5}
 8021bf2:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 8021bf4:	900b      	str	r0, [sp, #44]	@ 0x2c
 8021bf6:	08a0      	lsrs	r0, r4, #2
 8021bf8:	9008      	str	r0, [sp, #32]
 8021bfa:	0140      	lsls	r0, r0, #5
 8021bfc:	930c      	str	r3, [sp, #48]	@ 0x30
 8021bfe:	4403      	add	r3, r0
 8021c00:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021c02:	f105 0318 	add.w	r3, r5, #24
 8021c06:	f004 0703 	and.w	r7, r4, #3
 8021c0a:	9306      	str	r3, [sp, #24]
 8021c0c:	00e4      	lsls	r4, r4, #3
 8021c0e:	f101 0310 	add.w	r3, r1, #16
 8021c12:	9305      	str	r3, [sp, #20]
 8021c14:	f1c4 0304 	rsb	r3, r4, #4
 8021c18:	3610      	adds	r6, #16
 8021c1a:	930e      	str	r3, [sp, #56]	@ 0x38
 8021c1c:	00fb      	lsls	r3, r7, #3
 8021c1e:	9009      	str	r0, [sp, #36]	@ 0x24
 8021c20:	970a      	str	r7, [sp, #40]	@ 0x28
 8021c22:	9607      	str	r6, [sp, #28]
 8021c24:	9203      	str	r2, [sp, #12]
 8021c26:	930d      	str	r3, [sp, #52]	@ 0x34
 8021c28:	9a06      	ldr	r2, [sp, #24]
 8021c2a:	4613      	mov	r3, r2
 8021c2c:	f852 0c18 	ldr.w	r0, [r2, #-24]
 8021c30:	f852 2c14 	ldr.w	r2, [r2, #-20]
 8021c34:	9202      	str	r2, [sp, #8]
 8021c36:	9a05      	ldr	r2, [sp, #20]
 8021c38:	f853 4c10 	ldr.w	r4, [r3, #-16]
 8021c3c:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 8021c40:	f853 6c08 	ldr.w	r6, [r3, #-8]
 8021c44:	f853 7c04 	ldr.w	r7, [r3, #-4]
 8021c48:	f852 ec10 	ldr.w	lr, [r2, #-16]
 8021c4c:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 8021c50:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8021c54:	f852 cc04 	ldr.w	ip, [r2, #-4]
 8021c58:	1c42      	adds	r2, r0, #1
 8021c5a:	9201      	str	r2, [sp, #4]
 8021c5c:	9a08      	ldr	r2, [sp, #32]
 8021c5e:	2a00      	cmp	r2, #0
 8021c60:	f000 818e 	beq.w	8021f80 <biquad_df1_cascade_stereo_compute_q31+0x398>
 8021c64:	9803      	ldr	r0, [sp, #12]
 8021c66:	f8dd b008 	ldr.w	fp, [sp, #8]
 8021c6a:	f100 0920 	add.w	r9, r0, #32
 8021c6e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8021c70:	f100 0820 	add.w	r8, r0, #32
 8021c74:	9801      	ldr	r0, [sp, #4]
 8021c76:	9201      	str	r2, [sp, #4]
 8021c78:	f859 2c20 	ldr.w	r2, [r9, #-32]
 8021c7c:	ea4f 0aa2 	mov.w	sl, r2, asr #2
 8021c80:	fb54 f21e 	smmulr	r2, r4, lr
 8021c84:	fb5b 221a 	smmlar	r2, fp, sl, r2
 8021c88:	fb55 2111 	smmlar	r1, r5, r1, r2
 8021c8c:	fb56 1113 	smmlar	r1, r6, r3, r1
 8021c90:	fb57 1c1c 	smmlar	ip, r7, ip, r1
 8021c94:	f859 2c18 	ldr.w	r2, [r9, #-24]
 8021c98:	fa0c fc00 	lsl.w	ip, ip, r0
 8021c9c:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8021ca0:	f301 011e 	ssat	r1, #31, r1
 8021ca4:	0049      	lsls	r1, r1, #1
 8021ca6:	f848 1c20 	str.w	r1, [r8, #-32]
 8021caa:	1092      	asrs	r2, r2, #2
 8021cac:	fb5b f112 	smmulr	r1, fp, r2
 8021cb0:	fb54 111a 	smmlar	r1, r4, sl, r1
 8021cb4:	fb55 1e1e 	smmlar	lr, r5, lr, r1
 8021cb8:	fb56 ee1c 	smmlar	lr, r6, ip, lr
 8021cbc:	fb57 e313 	smmlar	r3, r7, r3, lr
 8021cc0:	f859 ec10 	ldr.w	lr, [r9, #-16]
 8021cc4:	4083      	lsls	r3, r0
 8021cc6:	0059      	lsls	r1, r3, #1
 8021cc8:	f301 011e 	ssat	r1, #31, r1
 8021ccc:	0049      	lsls	r1, r1, #1
 8021cce:	f848 1c18 	str.w	r1, [r8, #-24]
 8021cd2:	ea4f 01ae 	mov.w	r1, lr, asr #2
 8021cd6:	fb5b fe11 	smmulr	lr, fp, r1
 8021cda:	fb54 ee12 	smmlar	lr, r4, r2, lr
 8021cde:	fb55 ea1a 	smmlar	sl, r5, sl, lr
 8021ce2:	fb56 aa13 	smmlar	sl, r6, r3, sl
 8021ce6:	fb57 ac1c 	smmlar	ip, r7, ip, sl
 8021cea:	f859 ec08 	ldr.w	lr, [r9, #-8]
 8021cee:	fa0c fc00 	lsl.w	ip, ip, r0
 8021cf2:	ea4f 0a4c 	mov.w	sl, ip, lsl #1
 8021cf6:	f30a 0a1e 	ssat	sl, #31, sl
 8021cfa:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8021cfe:	f848 ac10 	str.w	sl, [r8, #-16]
 8021d02:	ea4f 0eae 	mov.w	lr, lr, asr #2
 8021d06:	fb5b fa1e 	smmulr	sl, fp, lr
 8021d0a:	fb54 aa11 	smmlar	sl, r4, r1, sl
 8021d0e:	fb55 a212 	smmlar	r2, r5, r2, sl
 8021d12:	fb56 221c 	smmlar	r2, r6, ip, r2
 8021d16:	fb57 2313 	smmlar	r3, r7, r3, r2
 8021d1a:	4083      	lsls	r3, r0
 8021d1c:	005a      	lsls	r2, r3, #1
 8021d1e:	f302 021e 	ssat	r2, #31, r2
 8021d22:	0052      	lsls	r2, r2, #1
 8021d24:	f848 2c08 	str.w	r2, [r8, #-8]
 8021d28:	9a01      	ldr	r2, [sp, #4]
 8021d2a:	3a01      	subs	r2, #1
 8021d2c:	f109 0920 	add.w	r9, r9, #32
 8021d30:	f108 0820 	add.w	r8, r8, #32
 8021d34:	9201      	str	r2, [sp, #4]
 8021d36:	d19f      	bne.n	8021c78 <biquad_df1_cascade_stereo_compute_q31+0x90>
 8021d38:	9a03      	ldr	r2, [sp, #12]
 8021d3a:	9001      	str	r0, [sp, #4]
 8021d3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8021d3e:	4402      	add	r2, r0
 8021d40:	9203      	str	r2, [sp, #12]
 8021d42:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021d44:	9204      	str	r2, [sp, #16]
 8021d46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021d48:	2a00      	cmp	r2, #0
 8021d4a:	f000 8114 	beq.w	8021f76 <biquad_df1_cascade_stereo_compute_q31+0x38e>
 8021d4e:	9803      	ldr	r0, [sp, #12]
 8021d50:	f100 0b08 	add.w	fp, r0, #8
 8021d54:	9804      	ldr	r0, [sp, #16]
 8021d56:	4691      	mov	r9, r2
 8021d58:	f100 0a08 	add.w	sl, r0, #8
 8021d5c:	9802      	ldr	r0, [sp, #8]
 8021d5e:	e001      	b.n	8021d64 <biquad_df1_cascade_stereo_compute_q31+0x17c>
 8021d60:	4643      	mov	r3, r8
 8021d62:	4696      	mov	lr, r2
 8021d64:	f85b 2c08 	ldr.w	r2, [fp, #-8]
 8021d68:	1092      	asrs	r2, r2, #2
 8021d6a:	fb50 f812 	smmulr	r8, r0, r2
 8021d6e:	fb54 881e 	smmlar	r8, r4, lr, r8
 8021d72:	fb55 8811 	smmlar	r8, r5, r1, r8
 8021d76:	fb56 8813 	smmlar	r8, r6, r3, r8
 8021d7a:	fb57 881c 	smmlar	r8, r7, ip, r8
 8021d7e:	9901      	ldr	r1, [sp, #4]
 8021d80:	fa08 f801 	lsl.w	r8, r8, r1
 8021d84:	ea4f 0148 	mov.w	r1, r8, lsl #1
 8021d88:	f1b9 0901 	subs.w	r9, r9, #1
 8021d8c:	f301 011e 	ssat	r1, #31, r1
 8021d90:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8021d94:	f84a 1c08 	str.w	r1, [sl, #-8]
 8021d98:	f10b 0b08 	add.w	fp, fp, #8
 8021d9c:	4671      	mov	r1, lr
 8021d9e:	f10a 0a08 	add.w	sl, sl, #8
 8021da2:	469c      	mov	ip, r3
 8021da4:	d1dc      	bne.n	8021d60 <biquad_df1_cascade_stereo_compute_q31+0x178>
 8021da6:	9803      	ldr	r0, [sp, #12]
 8021da8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8021daa:	4408      	add	r0, r1
 8021dac:	9003      	str	r0, [sp, #12]
 8021dae:	9804      	ldr	r0, [sp, #16]
 8021db0:	4408      	add	r0, r1
 8021db2:	9004      	str	r0, [sp, #16]
 8021db4:	9805      	ldr	r0, [sp, #20]
 8021db6:	f840 3c04 	str.w	r3, [r0, #-4]
 8021dba:	9b03      	ldr	r3, [sp, #12]
 8021dbc:	f840 2c10 	str.w	r2, [r0, #-16]
 8021dc0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021dc2:	f840 ec0c 	str.w	lr, [r0, #-12]
 8021dc6:	4619      	mov	r1, r3
 8021dc8:	4411      	add	r1, r2
 8021dca:	9103      	str	r1, [sp, #12]
 8021dcc:	9904      	ldr	r1, [sp, #16]
 8021dce:	f840 8c08 	str.w	r8, [r0, #-8]
 8021dd2:	4411      	add	r1, r2
 8021dd4:	9a07      	ldr	r2, [sp, #28]
 8021dd6:	9104      	str	r1, [sp, #16]
 8021dd8:	f852 ec10 	ldr.w	lr, [r2, #-16]
 8021ddc:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 8021de0:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8021de4:	f852 cc04 	ldr.w	ip, [r2, #-4]
 8021de8:	9a08      	ldr	r2, [sp, #32]
 8021dea:	2a00      	cmp	r2, #0
 8021dec:	d073      	beq.n	8021ed6 <biquad_df1_cascade_stereo_compute_q31+0x2ee>
 8021dee:	4693      	mov	fp, r2
 8021df0:	9a03      	ldr	r2, [sp, #12]
 8021df2:	9801      	ldr	r0, [sp, #4]
 8021df4:	f8cd b004 	str.w	fp, [sp, #4]
 8021df8:	f102 0920 	add.w	r9, r2, #32
 8021dfc:	9a04      	ldr	r2, [sp, #16]
 8021dfe:	f8dd b008 	ldr.w	fp, [sp, #8]
 8021e02:	f102 0820 	add.w	r8, r2, #32
 8021e06:	f859 2c20 	ldr.w	r2, [r9, #-32]
 8021e0a:	ea4f 0aa2 	mov.w	sl, r2, asr #2
 8021e0e:	fb54 f21e 	smmulr	r2, r4, lr
 8021e12:	fb5b 221a 	smmlar	r2, fp, sl, r2
 8021e16:	fb55 2111 	smmlar	r1, r5, r1, r2
 8021e1a:	fb56 1113 	smmlar	r1, r6, r3, r1
 8021e1e:	fb57 1c1c 	smmlar	ip, r7, ip, r1
 8021e22:	f859 2c18 	ldr.w	r2, [r9, #-24]
 8021e26:	fa0c fc00 	lsl.w	ip, ip, r0
 8021e2a:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8021e2e:	f301 011e 	ssat	r1, #31, r1
 8021e32:	0049      	lsls	r1, r1, #1
 8021e34:	f848 1c20 	str.w	r1, [r8, #-32]
 8021e38:	1092      	asrs	r2, r2, #2
 8021e3a:	fb5b f112 	smmulr	r1, fp, r2
 8021e3e:	fb54 111a 	smmlar	r1, r4, sl, r1
 8021e42:	fb55 1e1e 	smmlar	lr, r5, lr, r1
 8021e46:	fb56 ee1c 	smmlar	lr, r6, ip, lr
 8021e4a:	fb57 e313 	smmlar	r3, r7, r3, lr
 8021e4e:	f859 ec10 	ldr.w	lr, [r9, #-16]
 8021e52:	4083      	lsls	r3, r0
 8021e54:	0059      	lsls	r1, r3, #1
 8021e56:	f301 011e 	ssat	r1, #31, r1
 8021e5a:	0049      	lsls	r1, r1, #1
 8021e5c:	f848 1c18 	str.w	r1, [r8, #-24]
 8021e60:	ea4f 01ae 	mov.w	r1, lr, asr #2
 8021e64:	fb5b fe11 	smmulr	lr, fp, r1
 8021e68:	fb54 ee12 	smmlar	lr, r4, r2, lr
 8021e6c:	fb55 ea1a 	smmlar	sl, r5, sl, lr
 8021e70:	fb56 aa13 	smmlar	sl, r6, r3, sl
 8021e74:	fb57 ac1c 	smmlar	ip, r7, ip, sl
 8021e78:	f859 ec08 	ldr.w	lr, [r9, #-8]
 8021e7c:	fa0c fc00 	lsl.w	ip, ip, r0
 8021e80:	ea4f 0a4c 	mov.w	sl, ip, lsl #1
 8021e84:	f30a 0a1e 	ssat	sl, #31, sl
 8021e88:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8021e8c:	f848 ac10 	str.w	sl, [r8, #-16]
 8021e90:	ea4f 0eae 	mov.w	lr, lr, asr #2
 8021e94:	fb5b fa1e 	smmulr	sl, fp, lr
 8021e98:	fb54 aa11 	smmlar	sl, r4, r1, sl
 8021e9c:	fb55 a212 	smmlar	r2, r5, r2, sl
 8021ea0:	fb56 221c 	smmlar	r2, r6, ip, r2
 8021ea4:	fb57 2313 	smmlar	r3, r7, r3, r2
 8021ea8:	4083      	lsls	r3, r0
 8021eaa:	005a      	lsls	r2, r3, #1
 8021eac:	f302 021e 	ssat	r2, #31, r2
 8021eb0:	0052      	lsls	r2, r2, #1
 8021eb2:	f848 2c08 	str.w	r2, [r8, #-8]
 8021eb6:	9a01      	ldr	r2, [sp, #4]
 8021eb8:	3a01      	subs	r2, #1
 8021eba:	f109 0920 	add.w	r9, r9, #32
 8021ebe:	f108 0820 	add.w	r8, r8, #32
 8021ec2:	9201      	str	r2, [sp, #4]
 8021ec4:	d19f      	bne.n	8021e06 <biquad_df1_cascade_stereo_compute_q31+0x21e>
 8021ec6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021ec8:	9001      	str	r0, [sp, #4]
 8021eca:	9803      	ldr	r0, [sp, #12]
 8021ecc:	4410      	add	r0, r2
 8021ece:	9003      	str	r0, [sp, #12]
 8021ed0:	9804      	ldr	r0, [sp, #16]
 8021ed2:	4410      	add	r0, r2
 8021ed4:	9004      	str	r0, [sp, #16]
 8021ed6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021ed8:	2a00      	cmp	r2, #0
 8021eda:	d047      	beq.n	8021f6c <biquad_df1_cascade_stereo_compute_q31+0x384>
 8021edc:	9803      	ldr	r0, [sp, #12]
 8021ede:	f100 0b08 	add.w	fp, r0, #8
 8021ee2:	9804      	ldr	r0, [sp, #16]
 8021ee4:	4691      	mov	r9, r2
 8021ee6:	f100 0a08 	add.w	sl, r0, #8
 8021eea:	9802      	ldr	r0, [sp, #8]
 8021eec:	e001      	b.n	8021ef2 <biquad_df1_cascade_stereo_compute_q31+0x30a>
 8021eee:	4643      	mov	r3, r8
 8021ef0:	4696      	mov	lr, r2
 8021ef2:	f85b 2c08 	ldr.w	r2, [fp, #-8]
 8021ef6:	1092      	asrs	r2, r2, #2
 8021ef8:	fb50 f812 	smmulr	r8, r0, r2
 8021efc:	fb54 881e 	smmlar	r8, r4, lr, r8
 8021f00:	fb55 8811 	smmlar	r8, r5, r1, r8
 8021f04:	fb56 8813 	smmlar	r8, r6, r3, r8
 8021f08:	fb57 881c 	smmlar	r8, r7, ip, r8
 8021f0c:	9901      	ldr	r1, [sp, #4]
 8021f0e:	fa08 f801 	lsl.w	r8, r8, r1
 8021f12:	ea4f 0148 	mov.w	r1, r8, lsl #1
 8021f16:	f1b9 0901 	subs.w	r9, r9, #1
 8021f1a:	f301 011e 	ssat	r1, #31, r1
 8021f1e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8021f22:	f84a 1c08 	str.w	r1, [sl, #-8]
 8021f26:	f10b 0b08 	add.w	fp, fp, #8
 8021f2a:	4671      	mov	r1, lr
 8021f2c:	f10a 0a08 	add.w	sl, sl, #8
 8021f30:	469c      	mov	ip, r3
 8021f32:	d1dc      	bne.n	8021eee <biquad_df1_cascade_stereo_compute_q31+0x306>
 8021f34:	9807      	ldr	r0, [sp, #28]
 8021f36:	f840 3c04 	str.w	r3, [r0, #-4]
 8021f3a:	9b06      	ldr	r3, [sp, #24]
 8021f3c:	f840 2c10 	str.w	r2, [r0, #-16]
 8021f40:	3318      	adds	r3, #24
 8021f42:	9306      	str	r3, [sp, #24]
 8021f44:	9b05      	ldr	r3, [sp, #20]
 8021f46:	f840 ec0c 	str.w	lr, [r0, #-12]
 8021f4a:	3310      	adds	r3, #16
 8021f4c:	9305      	str	r3, [sp, #20]
 8021f4e:	f100 0310 	add.w	r3, r0, #16
 8021f52:	9307      	str	r3, [sp, #28]
 8021f54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021f56:	9303      	str	r3, [sp, #12]
 8021f58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021f5a:	f840 8c08 	str.w	r8, [r0, #-8]
 8021f5e:	3b01      	subs	r3, #1
 8021f60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021f62:	f47f ae61 	bne.w	8021c28 <biquad_df1_cascade_stereo_compute_q31+0x40>
 8021f66:	b011      	add	sp, #68	@ 0x44
 8021f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f6c:	4698      	mov	r8, r3
 8021f6e:	4672      	mov	r2, lr
 8021f70:	4663      	mov	r3, ip
 8021f72:	468e      	mov	lr, r1
 8021f74:	e7de      	b.n	8021f34 <biquad_df1_cascade_stereo_compute_q31+0x34c>
 8021f76:	4698      	mov	r8, r3
 8021f78:	4672      	mov	r2, lr
 8021f7a:	4663      	mov	r3, ip
 8021f7c:	468e      	mov	lr, r1
 8021f7e:	e719      	b.n	8021db4 <biquad_df1_cascade_stereo_compute_q31+0x1cc>
 8021f80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021f82:	9204      	str	r2, [sp, #16]
 8021f84:	e6df      	b.n	8021d46 <biquad_df1_cascade_stereo_compute_q31+0x15e>
 8021f86:	bf00      	nop

08021f88 <design_butterworth>:
 8021f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f8c:	1e43      	subs	r3, r0, #1
 8021f8e:	4604      	mov	r4, r0
 8021f90:	4616      	mov	r6, r2
 8021f92:	b09b      	sub	sp, #108	@ 0x6c
 8021f94:	ee10 0a10 	vmov	r0, s0
 8021f98:	4a2f      	ldr	r2, [pc, #188]	@ (8022058 <design_butterworth+0xd0>)
 8021f9a:	2900      	cmp	r1, #0
 8021f9c:	f040 81ac 	bne.w	80222f8 <design_butterworth+0x370>
 8021fa0:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8021fa4:	edcd 0a00 	vstr	s1, [sp]
 8021fa8:	f7de fa7a 	bl	80004a0 <__aeabi_f2d>
 8021fac:	a326      	add	r3, pc, #152	@ (adr r3, 8022048 <design_butterworth+0xc0>)
 8021fae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021fb2:	f7de facd 	bl	8000550 <__aeabi_dmul>
 8021fb6:	eddd 0a00 	vldr	s1, [sp]
 8021fba:	4680      	mov	r8, r0
 8021fbc:	ee10 0a90 	vmov	r0, s1
 8021fc0:	4689      	mov	r9, r1
 8021fc2:	f7de fa6d 	bl	80004a0 <__aeabi_f2d>
 8021fc6:	4602      	mov	r2, r0
 8021fc8:	460b      	mov	r3, r1
 8021fca:	4640      	mov	r0, r8
 8021fcc:	4649      	mov	r1, r9
 8021fce:	f7de fbe9 	bl	80007a4 <__aeabi_ddiv>
 8021fd2:	a31f      	add	r3, pc, #124	@ (adr r3, 8022050 <design_butterworth+0xc8>)
 8021fd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021fd8:	4680      	mov	r8, r0
 8021fda:	4689      	mov	r9, r1
 8021fdc:	f7de f902 	bl	80001e4 <__adddf3>
 8021fe0:	2200      	movs	r2, #0
 8021fe2:	4b1e      	ldr	r3, [pc, #120]	@ (802205c <design_butterworth+0xd4>)
 8021fe4:	f7de fab4 	bl	8000550 <__aeabi_dmul>
 8021fe8:	ec41 0b10 	vmov	d0, r0, r1
 8021fec:	f00c fafc 	bl	802e5e8 <sin>
 8021ff0:	4642      	mov	r2, r8
 8021ff2:	464b      	mov	r3, r9
 8021ff4:	a116      	add	r1, pc, #88	@ (adr r1, 8022050 <design_butterworth+0xc8>)
 8021ff6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021ffa:	ec5b ab10 	vmov	sl, fp, d0
 8021ffe:	f7de f8ef 	bl	80001e0 <__aeabi_dsub>
 8022002:	2200      	movs	r2, #0
 8022004:	4b15      	ldr	r3, [pc, #84]	@ (802205c <design_butterworth+0xd4>)
 8022006:	f7de faa3 	bl	8000550 <__aeabi_dmul>
 802200a:	ec41 0b10 	vmov	d0, r0, r1
 802200e:	f00c faeb 	bl	802e5e8 <sin>
 8022012:	3401      	adds	r4, #1
 8022014:	4652      	mov	r2, sl
 8022016:	465b      	mov	r3, fp
 8022018:	ec51 0b10 	vmov	r0, r1, d0
 802201c:	f7de fbc2 	bl	80007a4 <__aeabi_ddiv>
 8022020:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8022024:	1064      	asrs	r4, r4, #1
 8022026:	2c00      	cmp	r4, #0
 8022028:	4682      	mov	sl, r0
 802202a:	468b      	mov	fp, r1
 802202c:	f340 8161 	ble.w	80222f2 <design_butterworth+0x36a>
 8022030:	f106 0914 	add.w	r9, r6, #20
 8022034:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8022038:	eb09 0384 	add.w	r3, r9, r4, lsl #2
 802203c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802203e:	f105 0828 	add.w	r8, r5, #40	@ 0x28
 8022042:	e06f      	b.n	8022124 <design_butterworth+0x19c>
 8022044:	f3af 8000 	nop.w
 8022048:	54442d18 	.word	0x54442d18
 802204c:	401921fb 	.word	0x401921fb
 8022050:	54442d15 	.word	0x54442d15
 8022054:	3fe921fb 	.word	0x3fe921fb
 8022058:	08036110 	.word	0x08036110
 802205c:	3fe00000 	.word	0x3fe00000
 8022060:	2200      	movs	r2, #0
 8022062:	2300      	movs	r3, #0
 8022064:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8022068:	f7de fcda 	bl	8000a20 <__aeabi_dcmpeq>
 802206c:	2800      	cmp	r0, #0
 802206e:	f000 8096 	beq.w	802219e <design_butterworth+0x216>
 8022072:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8022076:	9319      	str	r3, [sp, #100]	@ 0x64
 8022078:	f8cd a060 	str.w	sl, [sp, #96]	@ 0x60
 802207c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022080:	e9dd 0118 	ldrd	r0, r1, [sp, #96]	@ 0x60
 8022084:	f7de fa64 	bl	8000550 <__aeabi_dmul>
 8022088:	4622      	mov	r2, r4
 802208a:	462b      	mov	r3, r5
 802208c:	f7de f8aa 	bl	80001e4 <__adddf3>
 8022090:	4652      	mov	r2, sl
 8022092:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8022096:	465b      	mov	r3, fp
 8022098:	4630      	mov	r0, r6
 802209a:	4639      	mov	r1, r7
 802209c:	f7de f8a0 	bl	80001e0 <__aeabi_dsub>
 80220a0:	2400      	movs	r4, #0
 80220a2:	2500      	movs	r5, #0
 80220a4:	ec45 4b17 	vmov	d7, r4, r5
 80220a8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80220ac:	ed8d 7b02 	vstr	d7, [sp, #8]
 80220b0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80220b4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80220b8:	f7de fb74 	bl	80007a4 <__aeabi_ddiv>
 80220bc:	f7de fd20 	bl	8000b00 <__aeabi_d2f>
 80220c0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80220c4:	f849 0c14 	str.w	r0, [r9, #-20]
 80220c8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80220cc:	f7de fb6a 	bl	80007a4 <__aeabi_ddiv>
 80220d0:	f7de fd16 	bl	8000b00 <__aeabi_d2f>
 80220d4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80220d8:	f849 0c10 	str.w	r0, [r9, #-16]
 80220dc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80220e0:	f7de fb60 	bl	80007a4 <__aeabi_ddiv>
 80220e4:	f7de fd0c 	bl	8000b00 <__aeabi_d2f>
 80220e8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80220ec:	f849 0c0c 	str.w	r0, [r9, #-12]
 80220f0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80220f4:	f7de fb56 	bl	80007a4 <__aeabi_ddiv>
 80220f8:	f7de fd02 	bl	8000b00 <__aeabi_d2f>
 80220fc:	e9dd 2300 	ldrd	r2, r3, [sp]
 8022100:	f849 0c08 	str.w	r0, [r9, #-8]
 8022104:	4629      	mov	r1, r5
 8022106:	4620      	mov	r0, r4
 8022108:	f7de fb4c 	bl	80007a4 <__aeabi_ddiv>
 802210c:	f7de fcf8 	bl	8000b00 <__aeabi_d2f>
 8022110:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8022112:	f849 0c04 	str.w	r0, [r9, #-4]
 8022116:	f109 0914 	add.w	r9, r9, #20
 802211a:	454b      	cmp	r3, r9
 802211c:	f108 0828 	add.w	r8, r8, #40	@ 0x28
 8022120:	f000 80e7 	beq.w	80222f2 <design_butterworth+0x36a>
 8022124:	e958 4508 	ldrd	r4, r5, [r8, #-32]
 8022128:	ed18 7b0a 	vldr	d7, [r8, #-40]	@ 0xffffffd8
 802212c:	4622      	mov	r2, r4
 802212e:	462b      	mov	r3, r5
 8022130:	4650      	mov	r0, sl
 8022132:	4659      	mov	r1, fp
 8022134:	ed8d 7b02 	vstr	d7, [sp, #8]
 8022138:	f7de fa0a 	bl	8000550 <__aeabi_dmul>
 802213c:	ed18 7b04 	vldr	d7, [r8, #-16]
 8022140:	4602      	mov	r2, r0
 8022142:	460b      	mov	r3, r1
 8022144:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022148:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 802214c:	ed8d 7b08 	vstr	d7, [sp, #32]
 8022150:	f7de f846 	bl	80001e0 <__aeabi_dsub>
 8022154:	e9dd 6708 	ldrd	r6, r7, [sp, #32]
 8022158:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802215c:	4632      	mov	r2, r6
 802215e:	463b      	mov	r3, r7
 8022160:	4650      	mov	r0, sl
 8022162:	4659      	mov	r1, fp
 8022164:	f7de f9f4 	bl	8000550 <__aeabi_dmul>
 8022168:	ed18 7b06 	vldr	d7, [r8, #-24]	@ 0xffffffe8
 802216c:	4602      	mov	r2, r0
 802216e:	460b      	mov	r3, r1
 8022170:	2000      	movs	r0, #0
 8022172:	4965      	ldr	r1, [pc, #404]	@ (8022308 <design_butterworth+0x380>)
 8022174:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8022178:	ed8d 7b06 	vstr	d7, [sp, #24]
 802217c:	f7de f830 	bl	80001e0 <__aeabi_dsub>
 8022180:	ed18 7b02 	vldr	d7, [r8, #-8]
 8022184:	e9cd 0100 	strd	r0, r1, [sp]
 8022188:	2200      	movs	r2, #0
 802218a:	2300      	movs	r3, #0
 802218c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8022190:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8022194:	f7de fc44 	bl	8000a20 <__aeabi_dcmpeq>
 8022198:	2800      	cmp	r0, #0
 802219a:	f47f af61 	bne.w	8022060 <design_butterworth+0xd8>
 802219e:	4652      	mov	r2, sl
 80221a0:	465b      	mov	r3, fp
 80221a2:	4650      	mov	r0, sl
 80221a4:	4659      	mov	r1, fp
 80221a6:	f7de f9d3 	bl	8000550 <__aeabi_dmul>
 80221aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80221ae:	9e02      	ldr	r6, [sp, #8]
 80221b0:	9614      	str	r6, [sp, #80]	@ 0x50
 80221b2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80221b6:	f7de f9cb 	bl	8000550 <__aeabi_dmul>
 80221ba:	9e03      	ldr	r6, [sp, #12]
 80221bc:	4602      	mov	r2, r0
 80221be:	460b      	mov	r3, r1
 80221c0:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 80221c4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80221c8:	9615      	str	r6, [sp, #84]	@ 0x54
 80221ca:	f7de f80b 	bl	80001e4 <__adddf3>
 80221ce:	4652      	mov	r2, sl
 80221d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80221d4:	465b      	mov	r3, fp
 80221d6:	4650      	mov	r0, sl
 80221d8:	4659      	mov	r1, fp
 80221da:	f7de f803 	bl	80001e4 <__adddf3>
 80221de:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
 80221e2:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 80221e6:	4602      	mov	r2, r0
 80221e8:	460b      	mov	r3, r1
 80221ea:	f7dd fffb 	bl	80001e4 <__adddf3>
 80221ee:	4652      	mov	r2, sl
 80221f0:	465b      	mov	r3, fp
 80221f2:	f7de f9ad 	bl	8000550 <__aeabi_dmul>
 80221f6:	4622      	mov	r2, r4
 80221f8:	462b      	mov	r3, r5
 80221fa:	f7dd fff3 	bl	80001e4 <__adddf3>
 80221fe:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8022202:	4604      	mov	r4, r0
 8022204:	460d      	mov	r5, r1
 8022206:	4650      	mov	r0, sl
 8022208:	4659      	mov	r1, fp
 802220a:	f7de f9a1 	bl	8000550 <__aeabi_dmul>
 802220e:	4602      	mov	r2, r0
 8022210:	460b      	mov	r3, r1
 8022212:	4620      	mov	r0, r4
 8022214:	4629      	mov	r1, r5
 8022216:	f7dd ffe5 	bl	80001e4 <__adddf3>
 802221a:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 802221e:	4604      	mov	r4, r0
 8022220:	460d      	mov	r5, r1
 8022222:	4632      	mov	r2, r6
 8022224:	463b      	mov	r3, r7
 8022226:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
 802222a:	f7de f991 	bl	8000550 <__aeabi_dmul>
 802222e:	4602      	mov	r2, r0
 8022230:	460b      	mov	r3, r1
 8022232:	4620      	mov	r0, r4
 8022234:	4629      	mov	r1, r5
 8022236:	f7dd ffd3 	bl	80001e0 <__aeabi_dsub>
 802223a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802223e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8022242:	4650      	mov	r0, sl
 8022244:	4659      	mov	r1, fp
 8022246:	f7de f983 	bl	8000550 <__aeabi_dmul>
 802224a:	4652      	mov	r2, sl
 802224c:	465b      	mov	r3, fp
 802224e:	f7de f97f 	bl	8000550 <__aeabi_dmul>
 8022252:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8022256:	f7dd ffc3 	bl	80001e0 <__aeabi_dsub>
 802225a:	4632      	mov	r2, r6
 802225c:	463b      	mov	r3, r7
 802225e:	f7dd ffc1 	bl	80001e4 <__adddf3>
 8022262:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 8022266:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802226a:	4632      	mov	r2, r6
 802226c:	463b      	mov	r3, r7
 802226e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8022272:	f7de f96d 	bl	8000550 <__aeabi_dmul>
 8022276:	4602      	mov	r2, r0
 8022278:	460b      	mov	r3, r1
 802227a:	e9dd 0100 	ldrd	r0, r1, [sp]
 802227e:	f7dd ffb1 	bl	80001e4 <__adddf3>
 8022282:	2200      	movs	r2, #0
 8022284:	e9cd 0100 	strd	r0, r1, [sp]
 8022288:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 802228c:	4650      	mov	r0, sl
 802228e:	4659      	mov	r1, fp
 8022290:	f7de f95e 	bl	8000550 <__aeabi_dmul>
 8022294:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8022298:	f7dd ffa4 	bl	80001e4 <__adddf3>
 802229c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80222a0:	4604      	mov	r4, r0
 80222a2:	460d      	mov	r5, r1
 80222a4:	4650      	mov	r0, sl
 80222a6:	4659      	mov	r1, fp
 80222a8:	f7de f952 	bl	8000550 <__aeabi_dmul>
 80222ac:	4602      	mov	r2, r0
 80222ae:	460b      	mov	r3, r1
 80222b0:	4620      	mov	r0, r4
 80222b2:	4629      	mov	r1, r5
 80222b4:	f7dd ff96 	bl	80001e4 <__adddf3>
 80222b8:	4632      	mov	r2, r6
 80222ba:	4604      	mov	r4, r0
 80222bc:	460d      	mov	r5, r1
 80222be:	463b      	mov	r3, r7
 80222c0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
 80222c4:	f7de f944 	bl	8000550 <__aeabi_dmul>
 80222c8:	4602      	mov	r2, r0
 80222ca:	460b      	mov	r3, r1
 80222cc:	4620      	mov	r0, r4
 80222ce:	4629      	mov	r1, r5
 80222d0:	f7dd ff86 	bl	80001e0 <__aeabi_dsub>
 80222d4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80222d8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80222dc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80222e0:	f7dd ff7e 	bl	80001e0 <__aeabi_dsub>
 80222e4:	4632      	mov	r2, r6
 80222e6:	463b      	mov	r3, r7
 80222e8:	f7dd ff7c 	bl	80001e4 <__adddf3>
 80222ec:	4604      	mov	r4, r0
 80222ee:	460d      	mov	r5, r1
 80222f0:	e6de      	b.n	80220b0 <design_butterworth+0x128>
 80222f2:	b01b      	add	sp, #108	@ 0x6c
 80222f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80222f8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80222fc:	2901      	cmp	r1, #1
 80222fe:	bf0c      	ite	eq
 8022300:	6a9d      	ldreq	r5, [r3, #40]	@ 0x28
 8022302:	6d1d      	ldrne	r5, [r3, #80]	@ 0x50
 8022304:	e64e      	b.n	8021fa4 <design_butterworth+0x1c>
 8022306:	bf00      	nop
 8022308:	3ff00000 	.word	0x3ff00000
 802230c:	00000000 	.word	0x00000000

08022310 <design_geq>:
 8022310:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022314:	ee61 7aa7 	vmul.f32	s15, s3, s15
 8022318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802231c:	eec0 7a27 	vdiv.f32	s15, s0, s15
 8022320:	4680      	mov	r8, r0
 8022322:	eb00 7ad0 	add.w	sl, r0, r0, lsr #31
 8022326:	4689      	mov	r9, r1
 8022328:	ea4f 0a6a 	mov.w	sl, sl, asr #1
 802232c:	ed2d 8b10 	vpush	{d8-d15}
 8022330:	ee11 0a10 	vmov	r0, s2
 8022334:	b08a      	sub	sp, #40	@ 0x28
 8022336:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 802233a:	eef0 8a61 	vmov.f32	s17, s3
 802233e:	eeb0 ba40 	vmov.f32	s22, s0
 8022342:	eeb0 aa60 	vmov.f32	s20, s1
 8022346:	edcd 0a04 	vstr	s1, [sp, #16]
 802234a:	f7de f8a9 	bl	80004a0 <__aeabi_f2d>
 802234e:	a334      	add	r3, pc, #208	@ (adr r3, 8022420 <design_geq+0x110>)
 8022350:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022354:	f7de f8fc 	bl	8000550 <__aeabi_dmul>
 8022358:	ec41 0b10 	vmov	d0, r0, r1
 802235c:	f00b ffd4 	bl	802e308 <exp>
 8022360:	ec51 0b10 	vmov	r0, r1, d0
 8022364:	f7de fbcc 	bl	8000b00 <__aeabi_d2f>
 8022368:	f7de f89a 	bl	80004a0 <__aeabi_f2d>
 802236c:	ec41 0b19 	vmov	d9, r0, r1
 8022370:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022374:	4640      	mov	r0, r8
 8022376:	f7de f881 	bl	800047c <__aeabi_i2d>
 802237a:	4602      	mov	r2, r0
 802237c:	460b      	mov	r3, r1
 802237e:	2000      	movs	r0, #0
 8022380:	4923      	ldr	r1, [pc, #140]	@ (8022410 <design_geq+0x100>)
 8022382:	f7de fa0f 	bl	80007a4 <__aeabi_ddiv>
 8022386:	eeb0 0a49 	vmov.f32	s0, s18
 802238a:	eef0 0a69 	vmov.f32	s1, s19
 802238e:	ec41 0b11 	vmov	d1, r0, r1
 8022392:	f00c f801 	bl	802e398 <pow>
 8022396:	ec51 0b10 	vmov	r0, r1, d0
 802239a:	f7de fbb1 	bl	8000b00 <__aeabi_d2f>
 802239e:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8022414 <design_geq+0x104>
 80223a2:	ee7a 7a4b 	vsub.f32	s15, s20, s22
 80223a6:	ee38 0aa8 	vadd.f32	s0, s17, s17
 80223aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80223ae:	ee08 0a10 	vmov	s16, r0
 80223b2:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80223b6:	f00c fcab 	bl	802ed10 <tanf>
 80223ba:	f1b8 0f00 	cmp.w	r8, #0
 80223be:	bfb8      	it	lt
 80223c0:	f108 0803 	addlt.w	r8, r8, #3
 80223c4:	ea4f 08a8 	mov.w	r8, r8, asr #2
 80223c8:	f1b8 0f00 	cmp.w	r8, #0
 80223cc:	ee20 8a08 	vmul.f32	s16, s0, s16
 80223d0:	f340 8241 	ble.w	8022856 <design_geq+0x546>
 80223d4:	ee07 aa90 	vmov	s15, sl
 80223d8:	eeb8 cae7 	vcvt.f32.s32	s24, s15
 80223dc:	4650      	mov	r0, sl
 80223de:	ee7c 7a0c 	vadd.f32	s15, s24, s24
 80223e2:	f108 0801 	add.w	r8, r8, #1
 80223e6:	edcd 7a05 	vstr	s15, [sp, #20]
 80223ea:	f7de f847 	bl	800047c <__aeabi_i2d>
 80223ee:	ee78 7a08 	vadd.f32	s15, s16, s16
 80223f2:	4602      	mov	r2, r0
 80223f4:	460b      	mov	r3, r1
 80223f6:	2000      	movs	r0, #0
 80223f8:	4907      	ldr	r1, [pc, #28]	@ (8022418 <design_geq+0x108>)
 80223fa:	edcd 7a08 	vstr	s15, [sp, #32]
 80223fe:	f7de f9d1 	bl	80007a4 <__aeabi_ddiv>
 8022402:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8022406:	ed9f 8a05 	vldr	s16, [pc, #20]	@ 802241c <design_geq+0x10c>
 802240a:	464c      	mov	r4, r9
 802240c:	2501      	movs	r5, #1
 802240e:	e00b      	b.n	8022428 <design_geq+0x118>
 8022410:	bff00000 	.word	0xbff00000
 8022414:	40c90fdb 	.word	0x40c90fdb
 8022418:	3ff00000 	.word	0x3ff00000
 802241c:	40490fdb 	.word	0x40490fdb
 8022420:	5f88880e 	.word	0x5f88880e
 8022424:	3fbd791c 	.word	0x3fbd791c
 8022428:	ee07 5a90 	vmov	s15, r5
 802242c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022430:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8022434:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022438:	eea7 7aa6 	vfma.f32	s14, s15, s13
 802243c:	3501      	adds	r5, #1
 802243e:	3428      	adds	r4, #40	@ 0x28
 8022440:	eddd 7a05 	vldr	s15, [sp, #20]
 8022444:	eec7 7a27 	vdiv.f32	s15, s14, s15
 8022448:	eeb6 da00 	vmov.f32	s26, #96	@ 0x3f000000  0.5
 802244c:	ee7d 7a67 	vsub.f32	s15, s26, s15
 8022450:	eef7 ca00 	vmov.f32	s25, #112	@ 0x3f800000  1.0
 8022454:	ee67 7a88 	vmul.f32	s15, s15, s16
 8022458:	eeb1 aa00 	vmov.f32	s20, #16	@ 0x40800000  4.0
 802245c:	ee17 0a90 	vmov	r0, s15
 8022460:	f7de f81e 	bl	80004a0 <__aeabi_f2d>
 8022464:	ec41 0b10 	vmov	d0, r0, r1
 8022468:	ec41 0b1e 	vmov	d14, r0, r1
 802246c:	f00c f868 	bl	802e540 <cos>
 8022470:	ec51 0b10 	vmov	r0, r1, d0
 8022474:	f7de fb44 	bl	8000b00 <__aeabi_d2f>
 8022478:	eeb0 0a4e 	vmov.f32	s0, s28
 802247c:	eef0 0a6e 	vmov.f32	s1, s29
 8022480:	ee0d 0a90 	vmov	s27, r0
 8022484:	f00c f8b0 	bl	802e5e8 <sin>
 8022488:	ec51 0b10 	vmov	r0, r1, d0
 802248c:	f7de fb38 	bl	8000b00 <__aeabi_d2f>
 8022490:	ed9d 1b06 	vldr	d1, [sp, #24]
 8022494:	ed9d 0b02 	vldr	d0, [sp, #8]
 8022498:	ee0e 0a10 	vmov	s28, r0
 802249c:	f00b ff7c 	bl	802e398 <pow>
 80224a0:	ec51 0b10 	vmov	r0, r1, d0
 80224a4:	f7de fb2c 	bl	8000b00 <__aeabi_d2f>
 80224a8:	eddd 7a08 	vldr	s15, [sp, #32]
 80224ac:	eecc 4aa7 	vdiv.f32	s9, s25, s15
 80224b0:	ee07 0a10 	vmov	s14, r0
 80224b4:	ee74 7aa4 	vadd.f32	s15, s9, s9
 80224b8:	eeb1 6a6d 	vneg.f32	s12, s27
 80224bc:	ee66 fa07 	vmul.f32	s31, s12, s14
 80224c0:	eec6 6a27 	vdiv.f32	s13, s12, s15
 80224c4:	ee6e 3a0e 	vmul.f32	s7, s28, s28
 80224c8:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80224cc:	ee2e 7a07 	vmul.f32	s14, s28, s14
 80224d0:	ee83 2a86 	vdiv.f32	s4, s7, s12
 80224d4:	ee27 4a07 	vmul.f32	s8, s14, s14
 80224d8:	eecf 5aa7 	vdiv.f32	s11, s31, s15
 80224dc:	ee84 3a06 	vdiv.f32	s6, s8, s12
 80224e0:	eece 3a24 	vdiv.f32	s7, s28, s9
 80224e4:	ee87 4a24 	vdiv.f32	s8, s14, s9
 80224e8:	ee3d 6aa7 	vadd.f32	s12, s27, s15
 80224ec:	ee7c 4ae6 	vsub.f32	s9, s25, s13
 80224f0:	eecc 2a86 	vdiv.f32	s5, s25, s12
 80224f4:	eeb0 6a42 	vmov.f32	s12, s4
 80224f8:	eea4 2aa4 	vfma.f32	s4, s9, s9
 80224fc:	ee76 6aac 	vadd.f32	s13, s13, s25
 8022500:	ee7c 1ae5 	vsub.f32	s3, s25, s11
 8022504:	ee35 7aac 	vadd.f32	s14, s11, s25
 8022508:	ee96 6aa4 	vfnms.f32	s12, s13, s9
 802250c:	eef0 4a42 	vmov.f32	s9, s4
 8022510:	eeb0 2a43 	vmov.f32	s4, s6
 8022514:	ee97 2a21 	vfnms.f32	s4, s14, s3
 8022518:	ee2b 7a08 	vmul.f32	s14, s22, s16
 802251c:	eef0 6a43 	vmov.f32	s13, s6
 8022520:	ee87 7a28 	vdiv.f32	s14, s14, s17
 8022524:	eee1 6aa1 	vfma.f32	s13, s3, s3
 8022528:	ee77 7aef 	vsub.f32	s15, s15, s31
 802252c:	ee17 0a10 	vmov	r0, s14
 8022530:	eec3 9aa4 	vdiv.f32	s19, s7, s9
 8022534:	eec6 aa24 	vdiv.f32	s21, s12, s9
 8022538:	ee82 fa26 	vdiv.f32	s30, s4, s13
 802253c:	ee62 faa7 	vmul.f32	s31, s5, s15
 8022540:	eec4 da26 	vdiv.f32	s27, s8, s13
 8022544:	f7dd ffac 	bl	80004a0 <__aeabi_f2d>
 8022548:	ec41 0b10 	vmov	d0, r0, r1
 802254c:	f00c f8a0 	bl	802e690 <tan>
 8022550:	eddd 7a04 	vldr	s15, [sp, #16]
 8022554:	ee67 7a88 	vmul.f32	s15, s15, s16
 8022558:	ec57 6b10 	vmov	r6, r7, d0
 802255c:	eec7 7aa8 	vdiv.f32	s15, s15, s17
 8022560:	ee17 0a90 	vmov	r0, s15
 8022564:	f7dd ff9c 	bl	80004a0 <__aeabi_f2d>
 8022568:	ec41 0b10 	vmov	d0, r0, r1
 802256c:	f00c f890 	bl	802e690 <tan>
 8022570:	4630      	mov	r0, r6
 8022572:	ec53 2b10 	vmov	r2, r3, d0
 8022576:	4639      	mov	r1, r7
 8022578:	f7dd ffea 	bl	8000550 <__aeabi_dmul>
 802257c:	f7de fac0 	bl	8000b00 <__aeabi_d2f>
 8022580:	ee07 0a90 	vmov	s15, r0
 8022584:	ee7c 6ae7 	vsub.f32	s13, s25, s15
 8022588:	ee77 7aac 	vadd.f32	s15, s15, s25
 802258c:	ee29 7ae9 	vnmul.f32	s14, s19, s19
 8022590:	eec6 caa7 	vdiv.f32	s25, s13, s15
 8022594:	eef0 7a47 	vmov.f32	s15, s14
 8022598:	ee7c 6aac 	vadd.f32	s13, s25, s25
 802259c:	ee2c caac 	vmul.f32	s24, s25, s25
 80225a0:	ee66 baac 	vmul.f32	s23, s13, s25
 80225a4:	eeea 7aaa 	vfma.f32	s15, s21, s21
 80225a8:	ee2b eaaa 	vmul.f32	s28, s23, s21
 80225ac:	ee6e ea29 	vmul.f32	s29, s28, s19
 80225b0:	ee3c ea0e 	vadd.f32	s28, s24, s28
 80225b4:	eeeb eaa9 	vfma.f32	s29, s23, s19
 80225b8:	eeac ea27 	vfma.f32	s28, s24, s15
 80225bc:	eee9 eaca 	vfms.f32	s29, s19, s20
 80225c0:	eeaa eaca 	vfms.f32	s28, s21, s20
 80225c4:	ee6e 7aae 	vmul.f32	s15, s29, s29
 80225c8:	eeee 7a0e 	vfma.f32	s15, s28, s28
 80225cc:	ee17 0a90 	vmov	r0, s15
 80225d0:	f7dd ff66 	bl	80004a0 <__aeabi_f2d>
 80225d4:	ec41 0b10 	vmov	d0, r0, r1
 80225d8:	f00b ff86 	bl	802e4e8 <sqrt>
 80225dc:	ee1e 0a10 	vmov	r0, s28
 80225e0:	ec57 6b10 	vmov	r6, r7, d0
 80225e4:	f7dd ff5c 	bl	80004a0 <__aeabi_f2d>
 80225e8:	e9cd 0100 	strd	r0, r1, [sp]
 80225ec:	ee1e 0a90 	vmov	r0, s29
 80225f0:	f7dd ff56 	bl	80004a0 <__aeabi_f2d>
 80225f4:	ed9d 1b00 	vldr	d1, [sp]
 80225f8:	ec41 0b10 	vmov	d0, r0, r1
 80225fc:	f00b fe80 	bl	802e300 <atan2>
 8022600:	ec51 0b10 	vmov	r0, r1, d0
 8022604:	f7de fa7c 	bl	8000b00 <__aeabi_d2f>
 8022608:	4639      	mov	r1, r7
 802260a:	ee0e 0a10 	vmov	s28, r0
 802260e:	4630      	mov	r0, r6
 8022610:	f7de fa76 	bl	8000b00 <__aeabi_d2f>
 8022614:	f7dd ff44 	bl	80004a0 <__aeabi_f2d>
 8022618:	ec41 0b10 	vmov	d0, r0, r1
 802261c:	f00b ff64 	bl	802e4e8 <sqrt>
 8022620:	ee6e 7a0d 	vmul.f32	s15, s28, s26
 8022624:	ec57 6b10 	vmov	r6, r7, d0
 8022628:	ee17 0a90 	vmov	r0, s15
 802262c:	f7dd ff38 	bl	80004a0 <__aeabi_f2d>
 8022630:	ec41 0b10 	vmov	d0, r0, r1
 8022634:	ec41 0b1e 	vmov	d14, r0, r1
 8022638:	f00b ff82 	bl	802e540 <cos>
 802263c:	4639      	mov	r1, r7
 802263e:	4630      	mov	r0, r6
 8022640:	ed8d 0b00 	vstr	d0, [sp]
 8022644:	f7de fa5c 	bl	8000b00 <__aeabi_d2f>
 8022648:	f7dd ff2a 	bl	80004a0 <__aeabi_f2d>
 802264c:	ed9d 0b00 	vldr	d0, [sp]
 8022650:	4602      	mov	r2, r0
 8022652:	460b      	mov	r3, r1
 8022654:	4606      	mov	r6, r0
 8022656:	460f      	mov	r7, r1
 8022658:	ec51 0b10 	vmov	r0, r1, d0
 802265c:	f7dd ff78 	bl	8000550 <__aeabi_dmul>
 8022660:	f7de fa4e 	bl	8000b00 <__aeabi_d2f>
 8022664:	eeb0 0a4e 	vmov.f32	s0, s28
 8022668:	eef0 0a6e 	vmov.f32	s1, s29
 802266c:	ee09 0a10 	vmov	s18, r0
 8022670:	f00b ffba 	bl	802e5e8 <sin>
 8022674:	4630      	mov	r0, r6
 8022676:	ec53 2b10 	vmov	r2, r3, d0
 802267a:	4639      	mov	r1, r7
 802267c:	f7dd ff68 	bl	8000550 <__aeabi_dmul>
 8022680:	f7de fa3e 	bl	8000b00 <__aeabi_d2f>
 8022684:	ee6b ea8f 	vmul.f32	s29, s23, s30
 8022688:	ee2d 4aed 	vnmul.f32	s8, s27, s27
 802268c:	ee2e eaad 	vmul.f32	s28, s29, s27
 8022690:	eeaf 4a0f 	vfma.f32	s8, s30, s30
 8022694:	ee7c ea2e 	vadd.f32	s29, s24, s29
 8022698:	eeab eaad 	vfma.f32	s28, s23, s27
 802269c:	eeec ea04 	vfma.f32	s29, s24, s8
 80226a0:	eead eaca 	vfms.f32	s28, s27, s20
 80226a4:	eeef ea4a 	vfms.f32	s29, s30, s20
 80226a8:	eef0 5a6c 	vmov.f32	s11, s25
 80226ac:	ee2e 5a0e 	vmul.f32	s10, s28, s28
 80226b0:	eeec 5aaa 	vfma.f32	s11, s25, s21
 80226b4:	ee07 0a90 	vmov	s15, r0
 80226b8:	ee06 0a90 	vmov	s13, r0
 80226bc:	eeae 5aae 	vfma.f32	s10, s29, s29
 80226c0:	eeec 6aa9 	vfma.f32	s13, s25, s19
 80226c4:	eedc 7aa9 	vfnms.f32	s15, s25, s19
 80226c8:	ee39 6a25 	vadd.f32	s12, s18, s11
 80226cc:	ee35 7ac9 	vsub.f32	s14, s11, s18
 80226d0:	ee15 0a10 	vmov	r0, s10
 80226d4:	ee26 aa0d 	vmul.f32	s20, s12, s26
 80226d8:	ee27 ca0d 	vmul.f32	s24, s14, s26
 80226dc:	ee26 9a8d 	vmul.f32	s18, s13, s26
 80226e0:	ee67 aa8d 	vmul.f32	s21, s15, s26
 80226e4:	f7dd fedc 	bl	80004a0 <__aeabi_f2d>
 80226e8:	ec41 0b10 	vmov	d0, r0, r1
 80226ec:	f00b fefc 	bl	802e4e8 <sqrt>
 80226f0:	ee1e 0a90 	vmov	r0, s29
 80226f4:	ec57 6b10 	vmov	r6, r7, d0
 80226f8:	f7dd fed2 	bl	80004a0 <__aeabi_f2d>
 80226fc:	e9cd 0100 	strd	r0, r1, [sp]
 8022700:	ee1e 0a10 	vmov	r0, s28
 8022704:	f7dd fecc 	bl	80004a0 <__aeabi_f2d>
 8022708:	ed9d 1b00 	vldr	d1, [sp]
 802270c:	ec41 0b10 	vmov	d0, r0, r1
 8022710:	f00b fdf6 	bl	802e300 <atan2>
 8022714:	ec51 0b10 	vmov	r0, r1, d0
 8022718:	f7de f9f2 	bl	8000b00 <__aeabi_d2f>
 802271c:	4639      	mov	r1, r7
 802271e:	ee0e 0a10 	vmov	s28, r0
 8022722:	4630      	mov	r0, r6
 8022724:	f7de f9ec 	bl	8000b00 <__aeabi_d2f>
 8022728:	f7dd feba 	bl	80004a0 <__aeabi_f2d>
 802272c:	ec41 0b10 	vmov	d0, r0, r1
 8022730:	f00b feda 	bl	802e4e8 <sqrt>
 8022734:	ee6e 7a0d 	vmul.f32	s15, s28, s26
 8022738:	ec57 6b10 	vmov	r6, r7, d0
 802273c:	ee17 0a90 	vmov	r0, s15
 8022740:	f7dd feae 	bl	80004a0 <__aeabi_f2d>
 8022744:	ec41 0b10 	vmov	d0, r0, r1
 8022748:	ec41 0b1e 	vmov	d14, r0, r1
 802274c:	f00b fef8 	bl	802e540 <cos>
 8022750:	4639      	mov	r1, r7
 8022752:	4630      	mov	r0, r6
 8022754:	ed8d 0b00 	vstr	d0, [sp]
 8022758:	f7de f9d2 	bl	8000b00 <__aeabi_d2f>
 802275c:	f7dd fea0 	bl	80004a0 <__aeabi_f2d>
 8022760:	ed9d 0b00 	vldr	d0, [sp]
 8022764:	4602      	mov	r2, r0
 8022766:	460b      	mov	r3, r1
 8022768:	4606      	mov	r6, r0
 802276a:	460f      	mov	r7, r1
 802276c:	ec51 0b10 	vmov	r0, r1, d0
 8022770:	f7dd feee 	bl	8000550 <__aeabi_dmul>
 8022774:	f7de f9c4 	bl	8000b00 <__aeabi_d2f>
 8022778:	eeb0 0a4e 	vmov.f32	s0, s28
 802277c:	eef0 0a6e 	vmov.f32	s1, s29
 8022780:	ee09 0a90 	vmov	s19, r0
 8022784:	f00b ff30 	bl	802e5e8 <sin>
 8022788:	4630      	mov	r0, r6
 802278a:	ec53 2b10 	vmov	r2, r3, d0
 802278e:	4639      	mov	r1, r7
 8022790:	f7dd fede 	bl	8000550 <__aeabi_dmul>
 8022794:	f7de f9b4 	bl	8000b00 <__aeabi_d2f>
 8022798:	eef0 4a6c 	vmov.f32	s9, s25
 802279c:	eeec 4a8f 	vfma.f32	s9, s25, s30
 80227a0:	ee05 0a90 	vmov	s11, r0
 80227a4:	ee05 0a10 	vmov	s10, r0
 80227a8:	eedc 5aad 	vfnms.f32	s11, s25, s27
 80227ac:	eeac 5aad 	vfma.f32	s10, s25, s27
 80227b0:	ee6f 7aaf 	vmul.f32	s15, s31, s31
 80227b4:	ee39 eaa4 	vadd.f32	s28, s19, s9
 80227b8:	ee74 cae9 	vsub.f32	s25, s9, s19
 80227bc:	ee17 0a90 	vmov	r0, s15
 80227c0:	ee65 da0d 	vmul.f32	s27, s10, s26
 80227c4:	ee2e ea0d 	vmul.f32	s28, s28, s26
 80227c8:	ee6c ca8d 	vmul.f32	s25, s25, s26
 80227cc:	ee25 da8d 	vmul.f32	s26, s11, s26
 80227d0:	f7dd fe66 	bl	80004a0 <__aeabi_f2d>
 80227d4:	ec41 0b10 	vmov	d0, r0, r1
 80227d8:	f00b fe86 	bl	802e4e8 <sqrt>
 80227dc:	ec51 0b10 	vmov	r0, r1, d0
 80227e0:	f7de f98e 	bl	8000b00 <__aeabi_d2f>
 80227e4:	ee6d daad 	vmul.f32	s27, s27, s27
 80227e8:	ee2d da0d 	vmul.f32	s26, s26, s26
 80227ec:	ee05 0a90 	vmov	s11, r0
 80227f0:	eeee da0e 	vfma.f32	s27, s28, s28
 80227f4:	4545      	cmp	r5, r8
 80227f6:	f844 0c28 	str.w	r0, [r4, #-40]
 80227fa:	eeac daac 	vfma.f32	s26, s25, s25
 80227fe:	f844 0c14 	str.w	r0, [r4, #-20]
 8022802:	ee69 6a09 	vmul.f32	s13, s18, s18
 8022806:	ee6a 7aaa 	vmul.f32	s15, s21, s21
 802280a:	eeb8 5a00 	vmov.f32	s10, #128	@ 0xc0000000 -2.0
 802280e:	ee65 4a85 	vmul.f32	s9, s11, s10
 8022812:	eeea 6a0a 	vfma.f32	s13, s20, s20
 8022816:	eeec 7a0c 	vfma.f32	s15, s24, s24
 802281a:	ee6d daa5 	vmul.f32	s27, s27, s11
 802281e:	ee2d da25 	vmul.f32	s26, s26, s11
 8022822:	ee2e ea24 	vmul.f32	s28, s28, s9
 8022826:	ee2a 6a05 	vmul.f32	s12, s20, s10
 802282a:	ee6c caa4 	vmul.f32	s25, s25, s9
 802282e:	ee2c 7a05 	vmul.f32	s14, s24, s10
 8022832:	ed44 6a06 	vstr	s13, [r4, #-24]	@ 0xffffffe8
 8022836:	ed44 7a01 	vstr	s15, [r4, #-4]
 802283a:	ed44 da08 	vstr	s27, [r4, #-32]	@ 0xffffffe0
 802283e:	ed04 da03 	vstr	s26, [r4, #-12]
 8022842:	ed04 ea09 	vstr	s28, [r4, #-36]	@ 0xffffffdc
 8022846:	ed04 6a07 	vstr	s12, [r4, #-28]	@ 0xffffffe4
 802284a:	ed44 ca04 	vstr	s25, [r4, #-16]
 802284e:	ed04 7a02 	vstr	s14, [r4, #-8]
 8022852:	f47f ade9 	bne.w	8022428 <design_geq+0x118>
 8022856:	eddf 7a27 	vldr	s15, [pc, #156]	@ 80228f4 <design_geq+0x5e4>
 802285a:	ed9d 7a09 	vldr	s14, [sp, #36]	@ 0x24
 802285e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8022862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022866:	dd3d      	ble.n	80228e4 <design_geq+0x5d4>
 8022868:	f1ba 0f00 	cmp.w	sl, #0
 802286c:	dd3f      	ble.n	80228ee <design_geq+0x5de>
 802286e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8022872:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
 8022876:	eef0 4a66 	vmov.f32	s9, s13
 802287a:	eb09 0a8a 	add.w	sl, r9, sl, lsl #2
 802287e:	464b      	mov	r3, r9
 8022880:	ed93 7a00 	vldr	s14, [r3]
 8022884:	ed93 5a01 	vldr	s10, [r3, #4]
 8022888:	edd3 7a03 	vldr	s15, [r3, #12]
 802288c:	ed93 6a04 	vldr	s12, [r3, #16]
 8022890:	edd3 5a02 	vldr	s11, [r3, #8]
 8022894:	ee37 7a05 	vadd.f32	s14, s14, s10
 8022898:	ee77 7aa4 	vadd.f32	s15, s15, s9
 802289c:	ee37 7a25 	vadd.f32	s14, s14, s11
 80228a0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80228a4:	3314      	adds	r3, #20
 80228a6:	ee87 6a27 	vdiv.f32	s12, s14, s15
 80228aa:	459a      	cmp	sl, r3
 80228ac:	ee66 6a86 	vmul.f32	s13, s13, s12
 80228b0:	d1e6      	bne.n	8022880 <design_geq+0x570>
 80228b2:	eef5 6a40 	vcmp.f32	s13, #0.0
 80228b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80228ba:	d013      	beq.n	80228e4 <design_geq+0x5d4>
 80228bc:	ee84 6aa6 	vdiv.f32	s12, s9, s13
 80228c0:	edd9 6a00 	vldr	s13, [r9]
 80228c4:	ed99 7a01 	vldr	s14, [r9, #4]
 80228c8:	edd9 7a02 	vldr	s15, [r9, #8]
 80228cc:	ee66 6a86 	vmul.f32	s13, s13, s12
 80228d0:	ee27 7a06 	vmul.f32	s14, s14, s12
 80228d4:	ee67 7a86 	vmul.f32	s15, s15, s12
 80228d8:	edc9 6a00 	vstr	s13, [r9]
 80228dc:	ed89 7a01 	vstr	s14, [r9, #4]
 80228e0:	edc9 7a02 	vstr	s15, [r9, #8]
 80228e4:	b00a      	add	sp, #40	@ 0x28
 80228e6:	ecbd 8b10 	vpop	{d8-d15}
 80228ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80228ee:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80228f2:	e7e5      	b.n	80228c0 <design_geq+0x5b0>
 80228f4:	3ba3d70a 	.word	0x3ba3d70a

080228f8 <design_second_order_filter>:
 80228f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228fc:	ed2d 8b06 	vpush	{d8-d10}
 8022900:	4683      	mov	fp, r0
 8022902:	b08d      	sub	sp, #52	@ 0x34
 8022904:	ee10 0a10 	vmov	r0, s0
 8022908:	eeb0 9a60 	vmov.f32	s18, s1
 802290c:	eeb0 8a61 	vmov.f32	s16, s3
 8022910:	eef0 8a40 	vmov.f32	s17, s0
 8022914:	ed8d 1a00 	vstr	s2, [sp]
 8022918:	468a      	mov	sl, r1
 802291a:	f7dd fdc1 	bl	80004a0 <__aeabi_f2d>
 802291e:	4680      	mov	r8, r0
 8022920:	ee19 0a10 	vmov	r0, s18
 8022924:	4689      	mov	r9, r1
 8022926:	f7dd fdbb 	bl	80004a0 <__aeabi_f2d>
 802292a:	ed9d 1a00 	vldr	s2, [sp]
 802292e:	4604      	mov	r4, r0
 8022930:	ee11 0a10 	vmov	r0, s2
 8022934:	460d      	mov	r5, r1
 8022936:	f7dd fdb3 	bl	80004a0 <__aeabi_f2d>
 802293a:	4606      	mov	r6, r0
 802293c:	ee18 0a10 	vmov	r0, s16
 8022940:	460f      	mov	r7, r1
 8022942:	f7dd fdad 	bl	80004a0 <__aeabi_f2d>
 8022946:	a3ba      	add	r3, pc, #744	@ (adr r3, 8022c30 <design_second_order_filter+0x338>)
 8022948:	e9d3 2300 	ldrd	r2, r3, [r3]
 802294c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022950:	4620      	mov	r0, r4
 8022952:	4629      	mov	r1, r5
 8022954:	f7dd fdfc 	bl	8000550 <__aeabi_dmul>
 8022958:	4642      	mov	r2, r8
 802295a:	464b      	mov	r3, r9
 802295c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022960:	f7dd ff20 	bl	80007a4 <__aeabi_ddiv>
 8022964:	2200      	movs	r2, #0
 8022966:	e9cd 0100 	strd	r0, r1, [sp]
 802296a:	4baf      	ldr	r3, [pc, #700]	@ (8022c28 <design_second_order_filter+0x330>)
 802296c:	4630      	mov	r0, r6
 802296e:	4639      	mov	r1, r7
 8022970:	f7dd fdee 	bl	8000550 <__aeabi_dmul>
 8022974:	a3a6      	add	r3, pc, #664	@ (adr r3, 8022c10 <design_second_order_filter+0x318>)
 8022976:	e9d3 2300 	ldrd	r2, r3, [r3]
 802297a:	f7dd fde9 	bl	8000550 <__aeabi_dmul>
 802297e:	ec41 0b10 	vmov	d0, r0, r1
 8022982:	f00b fcc1 	bl	802e308 <exp>
 8022986:	f10b 33ff 	add.w	r3, fp, #4294967295
 802298a:	eeb0 aa40 	vmov.f32	s20, s0
 802298e:	eef0 aa60 	vmov.f32	s21, s1
 8022992:	2b16      	cmp	r3, #22
 8022994:	f200 87d0 	bhi.w	8023938 <design_second_order_filter+0x1040>
 8022998:	e8df f013 	tbh	[pc, r3, lsl #1]
 802299c:	065604fd 	.word	0x065604fd
 80229a0:	02ec02e5 	.word	0x02ec02e5
 80229a4:	005e00a0 	.word	0x005e00a0
 80229a8:	05720517 	.word	0x05720517
 80229ac:	01ba0572 	.word	0x01ba0572
 80229b0:	027901ba 	.word	0x027901ba
 80229b4:	014e00eb 	.word	0x014e00eb
 80229b8:	00ae0017 	.word	0x00ae0017
 80229bc:	02fc02fc 	.word	0x02fc02fc
 80229c0:	037d037d 	.word	0x037d037d
 80229c4:	04140414 	.word	0x04140414
 80229c8:	048a      	.short	0x048a
 80229ca:	4642      	mov	r2, r8
 80229cc:	464b      	mov	r3, r9
 80229ce:	4640      	mov	r0, r8
 80229d0:	4649      	mov	r1, r9
 80229d2:	f7dd fc07 	bl	80001e4 <__adddf3>
 80229d6:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80229da:	4602      	mov	r2, r0
 80229dc:	460b      	mov	r3, r1
 80229de:	4606      	mov	r6, r0
 80229e0:	460f      	mov	r7, r1
 80229e2:	4640      	mov	r0, r8
 80229e4:	4649      	mov	r1, r9
 80229e6:	f7dd fbfd 	bl	80001e4 <__adddf3>
 80229ea:	4604      	mov	r4, r0
 80229ec:	4602      	mov	r2, r0
 80229ee:	460b      	mov	r3, r1
 80229f0:	460d      	mov	r5, r1
 80229f2:	4640      	mov	r0, r8
 80229f4:	4649      	mov	r1, r9
 80229f6:	e9cd 8902 	strd	r8, r9, [sp, #8]
 80229fa:	f7dd fed3 	bl	80007a4 <__aeabi_ddiv>
 80229fe:	f7de f87f 	bl	8000b00 <__aeabi_d2f>
 8022a02:	4622      	mov	r2, r4
 8022a04:	4683      	mov	fp, r0
 8022a06:	462b      	mov	r3, r5
 8022a08:	2000      	movs	r0, #0
 8022a0a:	2100      	movs	r1, #0
 8022a0c:	f7dd feca 	bl	80007a4 <__aeabi_ddiv>
 8022a10:	f7de f876 	bl	8000b00 <__aeabi_d2f>
 8022a14:	4632      	mov	r2, r6
 8022a16:	4681      	mov	r9, r0
 8022a18:	463b      	mov	r3, r7
 8022a1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022a1e:	f7dd fbdf 	bl	80001e0 <__aeabi_dsub>
 8022a22:	4622      	mov	r2, r4
 8022a24:	462b      	mov	r3, r5
 8022a26:	f7dd febd 	bl	80007a4 <__aeabi_ddiv>
 8022a2a:	f7de f869 	bl	8000b00 <__aeabi_d2f>
 8022a2e:	ee07 ba90 	vmov	s15, fp
 8022a32:	4604      	mov	r4, r0
 8022a34:	46c8      	mov	r8, r9
 8022a36:	f8cd b000 	str.w	fp, [sp]
 8022a3a:	f8ca b000 	str.w	fp, [sl]
 8022a3e:	edca 7a01 	vstr	s15, [sl, #4]
 8022a42:	f8ca 9008 	str.w	r9, [sl, #8]
 8022a46:	f8ca 400c 	str.w	r4, [sl, #12]
 8022a4a:	f8ca 8010 	str.w	r8, [sl, #16]
 8022a4e:	b00d      	add	sp, #52	@ 0x34
 8022a50:	ecbd 8b06 	vpop	{d8-d10}
 8022a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a58:	2200      	movs	r2, #0
 8022a5a:	4b73      	ldr	r3, [pc, #460]	@ (8022c28 <design_second_order_filter+0x330>)
 8022a5c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8022a60:	f7dd fd76 	bl	8000550 <__aeabi_dmul>
 8022a64:	ec41 0b10 	vmov	d0, r0, r1
 8022a68:	f00b fe12 	bl	802e690 <tan>
 8022a6c:	a36a      	add	r3, pc, #424	@ (adr r3, 8022c18 <design_second_order_filter+0x320>)
 8022a6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022a72:	ec51 0b10 	vmov	r0, r1, d0
 8022a76:	f7dd fe95 	bl	80007a4 <__aeabi_ddiv>
 8022a7a:	a367      	add	r3, pc, #412	@ (adr r3, 8022c18 <design_second_order_filter+0x320>)
 8022a7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022a80:	f7dd fd66 	bl	8000550 <__aeabi_dmul>
 8022a84:	2200      	movs	r2, #0
 8022a86:	4b69      	ldr	r3, [pc, #420]	@ (8022c2c <design_second_order_filter+0x334>)
 8022a88:	4606      	mov	r6, r0
 8022a8a:	460f      	mov	r7, r1
 8022a8c:	f7dd fbaa 	bl	80001e4 <__adddf3>
 8022a90:	2200      	movs	r2, #0
 8022a92:	4604      	mov	r4, r0
 8022a94:	460d      	mov	r5, r1
 8022a96:	4b65      	ldr	r3, [pc, #404]	@ (8022c2c <design_second_order_filter+0x334>)
 8022a98:	4630      	mov	r0, r6
 8022a9a:	4639      	mov	r1, r7
 8022a9c:	f7dd fba0 	bl	80001e0 <__aeabi_dsub>
 8022aa0:	4622      	mov	r2, r4
 8022aa2:	462b      	mov	r3, r5
 8022aa4:	f7dd fe7e 	bl	80007a4 <__aeabi_ddiv>
 8022aa8:	f7de f82a 	bl	8000b00 <__aeabi_d2f>
 8022aac:	4622      	mov	r2, r4
 8022aae:	462b      	mov	r3, r5
 8022ab0:	4683      	mov	fp, r0
 8022ab2:	4629      	mov	r1, r5
 8022ab4:	4620      	mov	r0, r4
 8022ab6:	f7dd fe75 	bl	80007a4 <__aeabi_ddiv>
 8022aba:	f7de f821 	bl	8000b00 <__aeabi_d2f>
 8022abe:	4622      	mov	r2, r4
 8022ac0:	9000      	str	r0, [sp, #0]
 8022ac2:	462b      	mov	r3, r5
 8022ac4:	2000      	movs	r0, #0
 8022ac6:	2100      	movs	r1, #0
 8022ac8:	f7dd fe6c 	bl	80007a4 <__aeabi_ddiv>
 8022acc:	f7de f818 	bl	8000b00 <__aeabi_d2f>
 8022ad0:	465c      	mov	r4, fp
 8022ad2:	4681      	mov	r9, r0
 8022ad4:	4680      	mov	r8, r0
 8022ad6:	eddd 7a00 	vldr	s15, [sp]
 8022ada:	e7ae      	b.n	8022a3a <design_second_order_filter+0x142>
 8022adc:	4652      	mov	r2, sl
 8022ade:	eef0 0a68 	vmov.f32	s1, s17
 8022ae2:	eeb0 0a49 	vmov.f32	s0, s18
 8022ae6:	2101      	movs	r1, #1
 8022ae8:	2002      	movs	r0, #2
 8022aea:	b00d      	add	sp, #52	@ 0x34
 8022aec:	ecbd 8b06 	vpop	{d8-d10}
 8022af0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022af4:	f7ff ba48 	b.w	8021f88 <design_butterworth>
 8022af8:	464b      	mov	r3, r9
 8022afa:	4642      	mov	r2, r8
 8022afc:	4649      	mov	r1, r9
 8022afe:	4640      	mov	r0, r8
 8022b00:	f7dd fb70 	bl	80001e4 <__adddf3>
 8022b04:	4604      	mov	r4, r0
 8022b06:	460d      	mov	r5, r1
 8022b08:	4602      	mov	r2, r0
 8022b0a:	460b      	mov	r3, r1
 8022b0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022b10:	f7dd fb68 	bl	80001e4 <__adddf3>
 8022b14:	4606      	mov	r6, r0
 8022b16:	460f      	mov	r7, r1
 8022b18:	4602      	mov	r2, r0
 8022b1a:	460b      	mov	r3, r1
 8022b1c:	4620      	mov	r0, r4
 8022b1e:	4629      	mov	r1, r5
 8022b20:	f7dd fe40 	bl	80007a4 <__aeabi_ddiv>
 8022b24:	f7dd ffec 	bl	8000b00 <__aeabi_d2f>
 8022b28:	4632      	mov	r2, r6
 8022b2a:	463b      	mov	r3, r7
 8022b2c:	4683      	mov	fp, r0
 8022b2e:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8022b32:	4620      	mov	r0, r4
 8022b34:	f7dd fe36 	bl	80007a4 <__aeabi_ddiv>
 8022b38:	f7dd ffe2 	bl	8000b00 <__aeabi_d2f>
 8022b3c:	4632      	mov	r2, r6
 8022b3e:	463b      	mov	r3, r7
 8022b40:	9000      	str	r0, [sp, #0]
 8022b42:	2100      	movs	r1, #0
 8022b44:	2000      	movs	r0, #0
 8022b46:	f7dd fe2d 	bl	80007a4 <__aeabi_ddiv>
 8022b4a:	f7dd ffd9 	bl	8000b00 <__aeabi_d2f>
 8022b4e:	4622      	mov	r2, r4
 8022b50:	462b      	mov	r3, r5
 8022b52:	4681      	mov	r9, r0
 8022b54:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022b58:	f7dd fb42 	bl	80001e0 <__aeabi_dsub>
 8022b5c:	4632      	mov	r2, r6
 8022b5e:	463b      	mov	r3, r7
 8022b60:	f7dd fe20 	bl	80007a4 <__aeabi_ddiv>
 8022b64:	f7dd ffcc 	bl	8000b00 <__aeabi_d2f>
 8022b68:	46c8      	mov	r8, r9
 8022b6a:	4604      	mov	r4, r0
 8022b6c:	eddd 7a00 	vldr	s15, [sp]
 8022b70:	e763      	b.n	8022a3a <design_second_order_filter+0x142>
 8022b72:	ed9d 0b00 	vldr	d0, [sp]
 8022b76:	f00b fd37 	bl	802e5e8 <sin>
 8022b7a:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022b7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b82:	ec55 4b10 	vmov	r4, r5, d0
 8022b86:	f040 8571 	bne.w	802366c <design_second_order_filter+0xd74>
 8022b8a:	a325      	add	r3, pc, #148	@ (adr r3, 8022c20 <design_second_order_filter+0x328>)
 8022b8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b90:	4620      	mov	r0, r4
 8022b92:	4629      	mov	r1, r5
 8022b94:	f7dd fe06 	bl	80007a4 <__aeabi_ddiv>
 8022b98:	4604      	mov	r4, r0
 8022b9a:	460d      	mov	r5, r1
 8022b9c:	ed9d 0b00 	vldr	d0, [sp]
 8022ba0:	f00b fcce 	bl	802e540 <cos>
 8022ba4:	2200      	movs	r2, #0
 8022ba6:	4b21      	ldr	r3, [pc, #132]	@ (8022c2c <design_second_order_filter+0x334>)
 8022ba8:	4620      	mov	r0, r4
 8022baa:	4629      	mov	r1, r5
 8022bac:	ed8d 0b00 	vstr	d0, [sp]
 8022bb0:	f7dd fb18 	bl	80001e4 <__adddf3>
 8022bb4:	4602      	mov	r2, r0
 8022bb6:	460b      	mov	r3, r1
 8022bb8:	4606      	mov	r6, r0
 8022bba:	460f      	mov	r7, r1
 8022bbc:	2000      	movs	r0, #0
 8022bbe:	491b      	ldr	r1, [pc, #108]	@ (8022c2c <design_second_order_filter+0x334>)
 8022bc0:	f7dd fdf0 	bl	80007a4 <__aeabi_ddiv>
 8022bc4:	f7dd ff9c 	bl	8000b00 <__aeabi_d2f>
 8022bc8:	ed9d 0b00 	vldr	d0, [sp]
 8022bcc:	4683      	mov	fp, r0
 8022bce:	2200      	movs	r2, #0
 8022bd0:	ec51 0b10 	vmov	r0, r1, d0
 8022bd4:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8022bd8:	f7dd fcba 	bl	8000550 <__aeabi_dmul>
 8022bdc:	4632      	mov	r2, r6
 8022bde:	463b      	mov	r3, r7
 8022be0:	f7dd fde0 	bl	80007a4 <__aeabi_ddiv>
 8022be4:	f7dd ff8c 	bl	8000b00 <__aeabi_d2f>
 8022be8:	4622      	mov	r2, r4
 8022bea:	4681      	mov	r9, r0
 8022bec:	9000      	str	r0, [sp, #0]
 8022bee:	462b      	mov	r3, r5
 8022bf0:	2000      	movs	r0, #0
 8022bf2:	490e      	ldr	r1, [pc, #56]	@ (8022c2c <design_second_order_filter+0x334>)
 8022bf4:	f7dd faf4 	bl	80001e0 <__aeabi_dsub>
 8022bf8:	4632      	mov	r2, r6
 8022bfa:	463b      	mov	r3, r7
 8022bfc:	f7dd fdd2 	bl	80007a4 <__aeabi_ddiv>
 8022c00:	f7dd ff7e 	bl	8000b00 <__aeabi_d2f>
 8022c04:	464c      	mov	r4, r9
 8022c06:	4680      	mov	r8, r0
 8022c08:	46d9      	mov	r9, fp
 8022c0a:	eddd 7a00 	vldr	s15, [sp]
 8022c0e:	e714      	b.n	8022a3a <design_second_order_filter+0x142>
 8022c10:	5f88880e 	.word	0x5f88880e
 8022c14:	3fbd791c 	.word	0x3fbd791c
 8022c18:	54442d18 	.word	0x54442d18
 8022c1c:	400921fb 	.word	0x400921fb
 8022c20:	d9d7bdbb 	.word	0xd9d7bdbb
 8022c24:	3deb7cdf 	.word	0x3deb7cdf
 8022c28:	3fe00000 	.word	0x3fe00000
 8022c2c:	3ff00000 	.word	0x3ff00000
 8022c30:	54442d18 	.word	0x54442d18
 8022c34:	401921fb 	.word	0x401921fb
 8022c38:	ed9d 0b00 	vldr	d0, [sp]
 8022c3c:	f00b fcd4 	bl	802e5e8 <sin>
 8022c40:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022c48:	ec55 4b10 	vmov	r4, r5, d0
 8022c4c:	f000 8509 	beq.w	8023662 <design_second_order_filter+0xd6a>
 8022c50:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8022c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022c58:	f2c0 8605 	blt.w	8023866 <design_second_order_filter+0xf6e>
 8022c5c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8022c60:	4610      	mov	r0, r2
 8022c62:	4619      	mov	r1, r3
 8022c64:	f7dd fabe 	bl	80001e4 <__adddf3>
 8022c68:	4602      	mov	r2, r0
 8022c6a:	460b      	mov	r3, r1
 8022c6c:	4620      	mov	r0, r4
 8022c6e:	4629      	mov	r1, r5
 8022c70:	f7dd fd98 	bl	80007a4 <__aeabi_ddiv>
 8022c74:	4606      	mov	r6, r0
 8022c76:	460f      	mov	r7, r1
 8022c78:	2200      	movs	r2, #0
 8022c7a:	4bc5      	ldr	r3, [pc, #788]	@ (8022f90 <design_second_order_filter+0x698>)
 8022c7c:	4630      	mov	r0, r6
 8022c7e:	4639      	mov	r1, r7
 8022c80:	f7dd fab0 	bl	80001e4 <__adddf3>
 8022c84:	ed9d 0b00 	vldr	d0, [sp]
 8022c88:	4604      	mov	r4, r0
 8022c8a:	460d      	mov	r5, r1
 8022c8c:	f00b fc58 	bl	802e540 <cos>
 8022c90:	4622      	mov	r2, r4
 8022c92:	462b      	mov	r3, r5
 8022c94:	4630      	mov	r0, r6
 8022c96:	4639      	mov	r1, r7
 8022c98:	ed8d 0b02 	vstr	d0, [sp, #8]
 8022c9c:	f7dd fd82 	bl	80007a4 <__aeabi_ddiv>
 8022ca0:	f7dd ff2e 	bl	8000b00 <__aeabi_d2f>
 8022ca4:	4622      	mov	r2, r4
 8022ca6:	462b      	mov	r3, r5
 8022ca8:	4683      	mov	fp, r0
 8022caa:	2100      	movs	r1, #0
 8022cac:	2000      	movs	r0, #0
 8022cae:	f7dd fd79 	bl	80007a4 <__aeabi_ddiv>
 8022cb2:	f7dd ff25 	bl	8000b00 <__aeabi_d2f>
 8022cb6:	4622      	mov	r2, r4
 8022cb8:	462b      	mov	r3, r5
 8022cba:	9000      	str	r0, [sp, #0]
 8022cbc:	f107 4100 	add.w	r1, r7, #2147483648	@ 0x80000000
 8022cc0:	4630      	mov	r0, r6
 8022cc2:	f7dd fd6f 	bl	80007a4 <__aeabi_ddiv>
 8022cc6:	f7dd ff1b 	bl	8000b00 <__aeabi_d2f>
 8022cca:	ed9d 0b02 	vldr	d0, [sp, #8]
 8022cce:	2200      	movs	r2, #0
 8022cd0:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8022cd4:	4681      	mov	r9, r0
 8022cd6:	ec51 0b10 	vmov	r0, r1, d0
 8022cda:	f7dd fc39 	bl	8000550 <__aeabi_dmul>
 8022cde:	4622      	mov	r2, r4
 8022ce0:	462b      	mov	r3, r5
 8022ce2:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8022ce6:	f7dd fd5d 	bl	80007a4 <__aeabi_ddiv>
 8022cea:	f7dd ff09 	bl	8000b00 <__aeabi_d2f>
 8022cee:	4632      	mov	r2, r6
 8022cf0:	463b      	mov	r3, r7
 8022cf2:	4604      	mov	r4, r0
 8022cf4:	49a6      	ldr	r1, [pc, #664]	@ (8022f90 <design_second_order_filter+0x698>)
 8022cf6:	2000      	movs	r0, #0
 8022cf8:	f7dd fa72 	bl	80001e0 <__aeabi_dsub>
 8022cfc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022d00:	f7dd fd50 	bl	80007a4 <__aeabi_ddiv>
 8022d04:	f7dd fefc 	bl	8000b00 <__aeabi_d2f>
 8022d08:	eddd 7a00 	vldr	s15, [sp]
 8022d0c:	4680      	mov	r8, r0
 8022d0e:	e694      	b.n	8022a3a <design_second_order_filter+0x142>
 8022d10:	ed9d 0b00 	vldr	d0, [sp]
 8022d14:	f00b fc68 	bl	802e5e8 <sin>
 8022d18:	f1bb 0f0a 	cmp.w	fp, #10
 8022d1c:	ec55 4b10 	vmov	r4, r5, d0
 8022d20:	f000 84d5 	beq.w	80236ce <design_second_order_filter+0xdd6>
 8022d24:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022d28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022d2c:	f040 85bb 	bne.w	80238a6 <design_second_order_filter+0xfae>
 8022d30:	a395      	add	r3, pc, #596	@ (adr r3, 8022f88 <design_second_order_filter+0x690>)
 8022d32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022d36:	4620      	mov	r0, r4
 8022d38:	4629      	mov	r1, r5
 8022d3a:	f7dd fd33 	bl	80007a4 <__aeabi_ddiv>
 8022d3e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022d42:	eeb0 0a4a 	vmov.f32	s0, s20
 8022d46:	eef0 0a6a 	vmov.f32	s1, s21
 8022d4a:	f00b fbcd 	bl	802e4e8 <sqrt>
 8022d4e:	2200      	movs	r2, #0
 8022d50:	4b8f      	ldr	r3, [pc, #572]	@ (8022f90 <design_second_order_filter+0x698>)
 8022d52:	eeb0 8a40 	vmov.f32	s16, s0
 8022d56:	eef0 8a60 	vmov.f32	s17, s1
 8022d5a:	ec51 0b1a 	vmov	r0, r1, d10
 8022d5e:	f7dd fa41 	bl	80001e4 <__adddf3>
 8022d62:	2200      	movs	r2, #0
 8022d64:	4604      	mov	r4, r0
 8022d66:	460d      	mov	r5, r1
 8022d68:	4b89      	ldr	r3, [pc, #548]	@ (8022f90 <design_second_order_filter+0x698>)
 8022d6a:	ec51 0b1a 	vmov	r0, r1, d10
 8022d6e:	f7dd fa37 	bl	80001e0 <__aeabi_dsub>
 8022d72:	ed9d 0b00 	vldr	d0, [sp]
 8022d76:	4680      	mov	r8, r0
 8022d78:	4689      	mov	r9, r1
 8022d7a:	f00b fbe1 	bl	802e540 <cos>
 8022d7e:	ec57 6b10 	vmov	r6, r7, d0
 8022d82:	ee10 2a10 	vmov	r2, s0
 8022d86:	463b      	mov	r3, r7
 8022d88:	4640      	mov	r0, r8
 8022d8a:	4649      	mov	r1, r9
 8022d8c:	e9cd 8904 	strd	r8, r9, [sp, #16]
 8022d90:	f7dd fbde 	bl	8000550 <__aeabi_dmul>
 8022d94:	4680      	mov	r8, r0
 8022d96:	4689      	mov	r9, r1
 8022d98:	4602      	mov	r2, r0
 8022d9a:	460b      	mov	r3, r1
 8022d9c:	4620      	mov	r0, r4
 8022d9e:	4629      	mov	r1, r5
 8022da0:	f7dd fa20 	bl	80001e4 <__adddf3>
 8022da4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022da8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8022dac:	ec51 0b18 	vmov	r0, r1, d8
 8022db0:	f7dd fbce 	bl	8000550 <__aeabi_dmul>
 8022db4:	4602      	mov	r2, r0
 8022db6:	460b      	mov	r3, r1
 8022db8:	f7dd fa14 	bl	80001e4 <__adddf3>
 8022dbc:	4632      	mov	r2, r6
 8022dbe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022dc2:	463b      	mov	r3, r7
 8022dc4:	4620      	mov	r0, r4
 8022dc6:	4629      	mov	r1, r5
 8022dc8:	f7dd fbc2 	bl	8000550 <__aeabi_dmul>
 8022dcc:	4642      	mov	r2, r8
 8022dce:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8022dd2:	464b      	mov	r3, r9
 8022dd4:	4620      	mov	r0, r4
 8022dd6:	4629      	mov	r1, r5
 8022dd8:	f7dd fa02 	bl	80001e0 <__aeabi_dsub>
 8022ddc:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8022de0:	4603      	mov	r3, r0
 8022de2:	460c      	mov	r4, r1
 8022de4:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
 8022de8:	4602      	mov	r2, r0
 8022dea:	460b      	mov	r3, r1
 8022dec:	4640      	mov	r0, r8
 8022dee:	4649      	mov	r1, r9
 8022df0:	f7dd f9f8 	bl	80001e4 <__adddf3>
 8022df4:	4642      	mov	r2, r8
 8022df6:	4606      	mov	r6, r0
 8022df8:	460f      	mov	r7, r1
 8022dfa:	464b      	mov	r3, r9
 8022dfc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8022e00:	f7dd f9f0 	bl	80001e4 <__adddf3>
 8022e04:	ec53 2b1a 	vmov	r2, r3, d10
 8022e08:	f7dd fba2 	bl	8000550 <__aeabi_dmul>
 8022e0c:	4632      	mov	r2, r6
 8022e0e:	463b      	mov	r3, r7
 8022e10:	f7dd fcc8 	bl	80007a4 <__aeabi_ddiv>
 8022e14:	f7dd fe74 	bl	8000b00 <__aeabi_d2f>
 8022e18:	2200      	movs	r2, #0
 8022e1a:	4683      	mov	fp, r0
 8022e1c:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8022e20:	ec51 0b1a 	vmov	r0, r1, d10
 8022e24:	f7dd fb94 	bl	8000550 <__aeabi_dmul>
 8022e28:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8022e2c:	4604      	mov	r4, r0
 8022e2e:	460d      	mov	r5, r1
 8022e30:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8022e34:	f7dd f9d6 	bl	80001e4 <__adddf3>
 8022e38:	4602      	mov	r2, r0
 8022e3a:	460b      	mov	r3, r1
 8022e3c:	4620      	mov	r0, r4
 8022e3e:	4629      	mov	r1, r5
 8022e40:	f7dd fb86 	bl	8000550 <__aeabi_dmul>
 8022e44:	4632      	mov	r2, r6
 8022e46:	463b      	mov	r3, r7
 8022e48:	f7dd fcac 	bl	80007a4 <__aeabi_ddiv>
 8022e4c:	f7dd fe58 	bl	8000b00 <__aeabi_d2f>
 8022e50:	4642      	mov	r2, r8
 8022e52:	9000      	str	r0, [sp, #0]
 8022e54:	464b      	mov	r3, r9
 8022e56:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8022e5a:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8022e5e:	f7dd f9bf 	bl	80001e0 <__aeabi_dsub>
 8022e62:	ec53 2b1a 	vmov	r2, r3, d10
 8022e66:	f7dd fb73 	bl	8000550 <__aeabi_dmul>
 8022e6a:	4632      	mov	r2, r6
 8022e6c:	463b      	mov	r3, r7
 8022e6e:	f7dd fc99 	bl	80007a4 <__aeabi_ddiv>
 8022e72:	f7dd fe45 	bl	8000b00 <__aeabi_d2f>
 8022e76:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8022e7a:	4681      	mov	r9, r0
 8022e7c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8022e80:	f7dd f9ae 	bl	80001e0 <__aeabi_dsub>
 8022e84:	4602      	mov	r2, r0
 8022e86:	460b      	mov	r3, r1
 8022e88:	f7dd f9ac 	bl	80001e4 <__adddf3>
 8022e8c:	e3af      	b.n	80235ee <design_second_order_filter+0xcf6>
 8022e8e:	ed9d 0b00 	vldr	d0, [sp]
 8022e92:	f00b fba9 	bl	802e5e8 <sin>
 8022e96:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022e9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e9e:	ec55 4b10 	vmov	r4, r5, d0
 8022ea2:	f040 83f2 	bne.w	802368a <design_second_order_filter+0xd92>
 8022ea6:	a338      	add	r3, pc, #224	@ (adr r3, 8022f88 <design_second_order_filter+0x690>)
 8022ea8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022eac:	4620      	mov	r0, r4
 8022eae:	4629      	mov	r1, r5
 8022eb0:	f7dd fc78 	bl	80007a4 <__aeabi_ddiv>
 8022eb4:	4604      	mov	r4, r0
 8022eb6:	460d      	mov	r5, r1
 8022eb8:	ec53 2b1a 	vmov	r2, r3, d10
 8022ebc:	4620      	mov	r0, r4
 8022ebe:	4629      	mov	r1, r5
 8022ec0:	f7dd fb46 	bl	8000550 <__aeabi_dmul>
 8022ec4:	ed9d 0b00 	vldr	d0, [sp]
 8022ec8:	4606      	mov	r6, r0
 8022eca:	460f      	mov	r7, r1
 8022ecc:	f00b fb38 	bl	802e540 <cos>
 8022ed0:	ec53 2b1a 	vmov	r2, r3, d10
 8022ed4:	4620      	mov	r0, r4
 8022ed6:	4629      	mov	r1, r5
 8022ed8:	ed8d 0b00 	vstr	d0, [sp]
 8022edc:	f7dd fc62 	bl	80007a4 <__aeabi_ddiv>
 8022ee0:	2200      	movs	r2, #0
 8022ee2:	4b2b      	ldr	r3, [pc, #172]	@ (8022f90 <design_second_order_filter+0x698>)
 8022ee4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022ee8:	f7dd f97c 	bl	80001e4 <__adddf3>
 8022eec:	2200      	movs	r2, #0
 8022eee:	4604      	mov	r4, r0
 8022ef0:	460d      	mov	r5, r1
 8022ef2:	4b27      	ldr	r3, [pc, #156]	@ (8022f90 <design_second_order_filter+0x698>)
 8022ef4:	4630      	mov	r0, r6
 8022ef6:	4639      	mov	r1, r7
 8022ef8:	f7dd f974 	bl	80001e4 <__adddf3>
 8022efc:	4622      	mov	r2, r4
 8022efe:	462b      	mov	r3, r5
 8022f00:	f7dd fc50 	bl	80007a4 <__aeabi_ddiv>
 8022f04:	f7dd fdfc 	bl	8000b00 <__aeabi_d2f>
 8022f08:	ed9d 0b00 	vldr	d0, [sp]
 8022f0c:	2200      	movs	r2, #0
 8022f0e:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8022f12:	4683      	mov	fp, r0
 8022f14:	ec51 0b10 	vmov	r0, r1, d0
 8022f18:	f7dd fb1a 	bl	8000550 <__aeabi_dmul>
 8022f1c:	4622      	mov	r2, r4
 8022f1e:	462b      	mov	r3, r5
 8022f20:	f7dd fc40 	bl	80007a4 <__aeabi_ddiv>
 8022f24:	f7dd fdec 	bl	8000b00 <__aeabi_d2f>
 8022f28:	4632      	mov	r2, r6
 8022f2a:	9000      	str	r0, [sp, #0]
 8022f2c:	463b      	mov	r3, r7
 8022f2e:	2000      	movs	r0, #0
 8022f30:	4917      	ldr	r1, [pc, #92]	@ (8022f90 <design_second_order_filter+0x698>)
 8022f32:	f7dd f955 	bl	80001e0 <__aeabi_dsub>
 8022f36:	4622      	mov	r2, r4
 8022f38:	462b      	mov	r3, r5
 8022f3a:	f7dd fc33 	bl	80007a4 <__aeabi_ddiv>
 8022f3e:	f7dd fddf 	bl	8000b00 <__aeabi_d2f>
 8022f42:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022f46:	4681      	mov	r9, r0
 8022f48:	4911      	ldr	r1, [pc, #68]	@ (8022f90 <design_second_order_filter+0x698>)
 8022f4a:	2000      	movs	r0, #0
 8022f4c:	f7dd f948 	bl	80001e0 <__aeabi_dsub>
 8022f50:	4622      	mov	r2, r4
 8022f52:	462b      	mov	r3, r5
 8022f54:	f7dd fc26 	bl	80007a4 <__aeabi_ddiv>
 8022f58:	f7dd fdd2 	bl	8000b00 <__aeabi_d2f>
 8022f5c:	9c00      	ldr	r4, [sp, #0]
 8022f5e:	4680      	mov	r8, r0
 8022f60:	ee07 4a90 	vmov	s15, r4
 8022f64:	e569      	b.n	8022a3a <design_second_order_filter+0x142>
 8022f66:	4652      	mov	r2, sl
 8022f68:	eef0 0a68 	vmov.f32	s1, s17
 8022f6c:	eeb0 0a49 	vmov.f32	s0, s18
 8022f70:	2100      	movs	r1, #0
 8022f72:	e5b9      	b.n	8022ae8 <design_second_order_filter+0x1f0>
 8022f74:	2101      	movs	r1, #1
 8022f76:	4652      	mov	r2, sl
 8022f78:	eef0 0a68 	vmov.f32	s1, s17
 8022f7c:	eeb0 0a49 	vmov.f32	s0, s18
 8022f80:	4608      	mov	r0, r1
 8022f82:	e5b2      	b.n	8022aea <design_second_order_filter+0x1f2>
 8022f84:	f3af 8000 	nop.w
 8022f88:	d9d7bdbb 	.word	0xd9d7bdbb
 8022f8c:	3deb7cdf 	.word	0x3deb7cdf
 8022f90:	3ff00000 	.word	0x3ff00000
 8022f94:	2200      	movs	r2, #0
 8022f96:	4bc4      	ldr	r3, [pc, #784]	@ (80232a8 <design_second_order_filter+0x9b0>)
 8022f98:	e9dd 0100 	ldrd	r0, r1, [sp]
 8022f9c:	f7dd fad8 	bl	8000550 <__aeabi_dmul>
 8022fa0:	ec41 0b10 	vmov	d0, r0, r1
 8022fa4:	f00b fb74 	bl	802e690 <tan>
 8022fa8:	a3b9      	add	r3, pc, #740	@ (adr r3, 8023290 <design_second_order_filter+0x998>)
 8022faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022fae:	ec51 0b10 	vmov	r0, r1, d0
 8022fb2:	f7dd fbf7 	bl	80007a4 <__aeabi_ddiv>
 8022fb6:	a3b6      	add	r3, pc, #728	@ (adr r3, 8023290 <design_second_order_filter+0x998>)
 8022fb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022fbc:	f7dd fac8 	bl	8000550 <__aeabi_dmul>
 8022fc0:	2200      	movs	r2, #0
 8022fc2:	4bba      	ldr	r3, [pc, #744]	@ (80232ac <design_second_order_filter+0x9b4>)
 8022fc4:	4604      	mov	r4, r0
 8022fc6:	460d      	mov	r5, r1
 8022fc8:	f7dd f90a 	bl	80001e0 <__aeabi_dsub>
 8022fcc:	2200      	movs	r2, #0
 8022fce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8022fd2:	4bb6      	ldr	r3, [pc, #728]	@ (80232ac <design_second_order_filter+0x9b4>)
 8022fd4:	4620      	mov	r0, r4
 8022fd6:	4629      	mov	r1, r5
 8022fd8:	f7dd f904 	bl	80001e4 <__adddf3>
 8022fdc:	a3ae      	add	r3, pc, #696	@ (adr r3, 8023298 <design_second_order_filter+0x9a0>)
 8022fde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022fe2:	4604      	mov	r4, r0
 8022fe4:	460d      	mov	r5, r1
 8022fe6:	4630      	mov	r0, r6
 8022fe8:	4639      	mov	r1, r7
 8022fea:	f7dd fab1 	bl	8000550 <__aeabi_dmul>
 8022fee:	ec41 0b10 	vmov	d0, r0, r1
 8022ff2:	f00b f989 	bl	802e308 <exp>
 8022ff6:	2200      	movs	r2, #0
 8022ff8:	4bac      	ldr	r3, [pc, #688]	@ (80232ac <design_second_order_filter+0x9b4>)
 8022ffa:	ec51 0b10 	vmov	r0, r1, d0
 8022ffe:	f7dd f8ef 	bl	80001e0 <__aeabi_dsub>
 8023002:	2200      	movs	r2, #0
 8023004:	4ba8      	ldr	r3, [pc, #672]	@ (80232a8 <design_second_order_filter+0x9b0>)
 8023006:	f7dd faa3 	bl	8000550 <__aeabi_dmul>
 802300a:	f1bb 0f11 	cmp.w	fp, #17
 802300e:	4680      	mov	r8, r0
 8023010:	4689      	mov	r9, r1
 8023012:	4602      	mov	r2, r0
 8023014:	460b      	mov	r3, r1
 8023016:	4620      	mov	r0, r4
 8023018:	4629      	mov	r1, r5
 802301a:	f000 835d 	beq.w	80236d8 <design_second_order_filter+0xde0>
 802301e:	f7dd fa97 	bl	8000550 <__aeabi_dmul>
 8023022:	4642      	mov	r2, r8
 8023024:	4606      	mov	r6, r0
 8023026:	460f      	mov	r7, r1
 8023028:	464b      	mov	r3, r9
 802302a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802302e:	f7dd fa8f 	bl	8000550 <__aeabi_dmul>
 8023032:	4622      	mov	r2, r4
 8023034:	4680      	mov	r8, r0
 8023036:	4689      	mov	r9, r1
 8023038:	462b      	mov	r3, r5
 802303a:	4630      	mov	r0, r6
 802303c:	4639      	mov	r1, r7
 802303e:	f7dd f8d1 	bl	80001e4 <__adddf3>
 8023042:	4642      	mov	r2, r8
 8023044:	464b      	mov	r3, r9
 8023046:	f7dd f8cb 	bl	80001e0 <__aeabi_dsub>
 802304a:	4622      	mov	r2, r4
 802304c:	462b      	mov	r3, r5
 802304e:	f7dd fba9 	bl	80007a4 <__aeabi_ddiv>
 8023052:	f7dd fd55 	bl	8000b00 <__aeabi_d2f>
 8023056:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802305a:	4683      	mov	fp, r0
 802305c:	4649      	mov	r1, r9
 802305e:	4640      	mov	r0, r8
 8023060:	f7dd f8c0 	bl	80001e4 <__adddf3>
 8023064:	4632      	mov	r2, r6
 8023066:	463b      	mov	r3, r7
 8023068:	f7dd f8ba 	bl	80001e0 <__aeabi_dsub>
 802306c:	4622      	mov	r2, r4
 802306e:	462b      	mov	r3, r5
 8023070:	f7dd fb98 	bl	80007a4 <__aeabi_ddiv>
 8023074:	f7dd fd44 	bl	8000b00 <__aeabi_d2f>
 8023078:	4622      	mov	r2, r4
 802307a:	462b      	mov	r3, r5
 802307c:	9000      	str	r0, [sp, #0]
 802307e:	2100      	movs	r1, #0
 8023080:	2000      	movs	r0, #0
 8023082:	f7dd fb8f 	bl	80007a4 <__aeabi_ddiv>
 8023086:	f7dd fd3b 	bl	8000b00 <__aeabi_d2f>
 802308a:	4622      	mov	r2, r4
 802308c:	4681      	mov	r9, r0
 802308e:	462b      	mov	r3, r5
 8023090:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023094:	e564      	b.n	8022b60 <design_second_order_filter+0x268>
 8023096:	4642      	mov	r2, r8
 8023098:	464b      	mov	r3, r9
 802309a:	2000      	movs	r0, #0
 802309c:	4983      	ldr	r1, [pc, #524]	@ (80232ac <design_second_order_filter+0x9b4>)
 802309e:	f7dd fb81 	bl	80007a4 <__aeabi_ddiv>
 80230a2:	a37d      	add	r3, pc, #500	@ (adr r3, 8023298 <design_second_order_filter+0x9a0>)
 80230a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80230a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80230ac:	4630      	mov	r0, r6
 80230ae:	4639      	mov	r1, r7
 80230b0:	f7dd fa4e 	bl	8000550 <__aeabi_dmul>
 80230b4:	f1bb 0f13 	cmp.w	fp, #19
 80230b8:	ec41 0b10 	vmov	d0, r0, r1
 80230bc:	f000 8334 	beq.w	8023728 <design_second_order_filter+0xe30>
 80230c0:	f00b f922 	bl	802e308 <exp>
 80230c4:	ed8d 0b04 	vstr	d0, [sp, #16]
 80230c8:	4f78      	ldr	r7, [pc, #480]	@ (80232ac <design_second_order_filter+0x9b4>)
 80230ca:	2600      	movs	r6, #0
 80230cc:	a370      	add	r3, pc, #448	@ (adr r3, 8023290 <design_second_order_filter+0x998>)
 80230ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80230d2:	4620      	mov	r0, r4
 80230d4:	4629      	mov	r1, r5
 80230d6:	f7dd fa3b 	bl	8000550 <__aeabi_dmul>
 80230da:	4642      	mov	r2, r8
 80230dc:	464b      	mov	r3, r9
 80230de:	f7dd fb61 	bl	80007a4 <__aeabi_ddiv>
 80230e2:	ec41 0b10 	vmov	d0, r0, r1
 80230e6:	f00b fad3 	bl	802e690 <tan>
 80230ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80230ee:	4630      	mov	r0, r6
 80230f0:	4639      	mov	r1, r7
 80230f2:	ec55 4b10 	vmov	r4, r5, d0
 80230f6:	f7dd fb55 	bl	80007a4 <__aeabi_ddiv>
 80230fa:	ec41 0b10 	vmov	d0, r0, r1
 80230fe:	f00b f9f3 	bl	802e4e8 <sqrt>
 8023102:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023106:	4630      	mov	r0, r6
 8023108:	4639      	mov	r1, r7
 802310a:	ed8d 0b06 	vstr	d0, [sp, #24]
 802310e:	f7dd fa1f 	bl	8000550 <__aeabi_dmul>
 8023112:	4642      	mov	r2, r8
 8023114:	e9cd 0100 	strd	r0, r1, [sp]
 8023118:	464b      	mov	r3, r9
 802311a:	4640      	mov	r0, r8
 802311c:	4649      	mov	r1, r9
 802311e:	f7dd f861 	bl	80001e4 <__adddf3>
 8023122:	4622      	mov	r2, r4
 8023124:	462b      	mov	r3, r5
 8023126:	f7dd fa13 	bl	8000550 <__aeabi_dmul>
 802312a:	4602      	mov	r2, r0
 802312c:	460b      	mov	r3, r1
 802312e:	2000      	movs	r0, #0
 8023130:	495e      	ldr	r1, [pc, #376]	@ (80232ac <design_second_order_filter+0x9b4>)
 8023132:	f7dd fb37 	bl	80007a4 <__aeabi_ddiv>
 8023136:	ed9d 0b06 	vldr	d0, [sp, #24]
 802313a:	ec53 2b10 	vmov	r2, r3, d0
 802313e:	f7dd fa07 	bl	8000550 <__aeabi_dmul>
 8023142:	4602      	mov	r2, r0
 8023144:	460b      	mov	r3, r1
 8023146:	f7dd f84d 	bl	80001e4 <__adddf3>
 802314a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802314e:	4680      	mov	r8, r0
 8023150:	4689      	mov	r9, r1
 8023152:	f7dd f9fd 	bl	8000550 <__aeabi_dmul>
 8023156:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802315a:	4606      	mov	r6, r0
 802315c:	460f      	mov	r7, r1
 802315e:	4640      	mov	r0, r8
 8023160:	4649      	mov	r1, r9
 8023162:	f7dd f83f 	bl	80001e4 <__adddf3>
 8023166:	4632      	mov	r2, r6
 8023168:	4604      	mov	r4, r0
 802316a:	460d      	mov	r5, r1
 802316c:	463b      	mov	r3, r7
 802316e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023172:	f7dd f837 	bl	80001e4 <__adddf3>
 8023176:	4622      	mov	r2, r4
 8023178:	462b      	mov	r3, r5
 802317a:	f7dd fb13 	bl	80007a4 <__aeabi_ddiv>
 802317e:	f7dd fcbf 	bl	8000b00 <__aeabi_d2f>
 8023182:	4632      	mov	r2, r6
 8023184:	463b      	mov	r3, r7
 8023186:	4683      	mov	fp, r0
 8023188:	e9dd 0100 	ldrd	r0, r1, [sp]
 802318c:	f7dd f828 	bl	80001e0 <__aeabi_dsub>
 8023190:	4622      	mov	r2, r4
 8023192:	462b      	mov	r3, r5
 8023194:	f7dd fb06 	bl	80007a4 <__aeabi_ddiv>
 8023198:	f7dd fcb2 	bl	8000b00 <__aeabi_d2f>
 802319c:	4642      	mov	r2, r8
 802319e:	464b      	mov	r3, r9
 80231a0:	9000      	str	r0, [sp, #0]
 80231a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80231a6:	f7dd f81b 	bl	80001e0 <__aeabi_dsub>
 80231aa:	4622      	mov	r2, r4
 80231ac:	462b      	mov	r3, r5
 80231ae:	f7dd faf9 	bl	80007a4 <__aeabi_ddiv>
 80231b2:	f7dd fca5 	bl	8000b00 <__aeabi_d2f>
 80231b6:	f04f 0800 	mov.w	r8, #0
 80231ba:	4604      	mov	r4, r0
 80231bc:	46c1      	mov	r9, r8
 80231be:	eddd 7a00 	vldr	s15, [sp]
 80231c2:	e43a      	b.n	8022a3a <design_second_order_filter+0x142>
 80231c4:	ed9d 0b00 	vldr	d0, [sp]
 80231c8:	f00b fa0e 	bl	802e5e8 <sin>
 80231cc:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80231d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80231d4:	ec55 4b10 	vmov	r4, r5, d0
 80231d8:	f040 8266 	bne.w	80236a8 <design_second_order_filter+0xdb0>
 80231dc:	a330      	add	r3, pc, #192	@ (adr r3, 80232a0 <design_second_order_filter+0x9a8>)
 80231de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80231e2:	4620      	mov	r0, r4
 80231e4:	4629      	mov	r1, r5
 80231e6:	f7dd fadd 	bl	80007a4 <__aeabi_ddiv>
 80231ea:	4680      	mov	r8, r0
 80231ec:	4689      	mov	r9, r1
 80231ee:	ed9d 0b00 	vldr	d0, [sp]
 80231f2:	f00b f9a5 	bl	802e540 <cos>
 80231f6:	2200      	movs	r2, #0
 80231f8:	4b2c      	ldr	r3, [pc, #176]	@ (80232ac <design_second_order_filter+0x9b4>)
 80231fa:	4640      	mov	r0, r8
 80231fc:	4649      	mov	r1, r9
 80231fe:	ec57 6b10 	vmov	r6, r7, d0
 8023202:	f7dc ffef 	bl	80001e4 <__adddf3>
 8023206:	2200      	movs	r2, #0
 8023208:	4604      	mov	r4, r0
 802320a:	460d      	mov	r5, r1
 802320c:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8023210:	4630      	mov	r0, r6
 8023212:	4639      	mov	r1, r7
 8023214:	f7dd f99c 	bl	8000550 <__aeabi_dmul>
 8023218:	4622      	mov	r2, r4
 802321a:	462b      	mov	r3, r5
 802321c:	e9cd 4500 	strd	r4, r5, [sp]
 8023220:	f7dd fac0 	bl	80007a4 <__aeabi_ddiv>
 8023224:	f7dd fc6c 	bl	8000b00 <__aeabi_d2f>
 8023228:	4642      	mov	r2, r8
 802322a:	464b      	mov	r3, r9
 802322c:	4604      	mov	r4, r0
 802322e:	491f      	ldr	r1, [pc, #124]	@ (80232ac <design_second_order_filter+0x9b4>)
 8023230:	2000      	movs	r0, #0
 8023232:	f7dc ffd5 	bl	80001e0 <__aeabi_dsub>
 8023236:	e9dd 2300 	ldrd	r2, r3, [sp]
 802323a:	f7dd fab3 	bl	80007a4 <__aeabi_ddiv>
 802323e:	f7dd fc5f 	bl	8000b00 <__aeabi_d2f>
 8023242:	f1bb 0f15 	cmp.w	fp, #21
 8023246:	4680      	mov	r8, r0
 8023248:	f000 8277 	beq.w	802373a <design_second_order_filter+0xe42>
 802324c:	4630      	mov	r0, r6
 802324e:	4639      	mov	r1, r7
 8023250:	2200      	movs	r2, #0
 8023252:	4b16      	ldr	r3, [pc, #88]	@ (80232ac <design_second_order_filter+0x9b4>)
 8023254:	f7dc ffc6 	bl	80001e4 <__adddf3>
 8023258:	2200      	movs	r2, #0
 802325a:	4b13      	ldr	r3, [pc, #76]	@ (80232a8 <design_second_order_filter+0x9b0>)
 802325c:	4606      	mov	r6, r0
 802325e:	460f      	mov	r7, r1
 8023260:	f7dd f976 	bl	8000550 <__aeabi_dmul>
 8023264:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023268:	f7dd fa9c 	bl	80007a4 <__aeabi_ddiv>
 802326c:	f7dd fc48 	bl	8000b00 <__aeabi_d2f>
 8023270:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023274:	4683      	mov	fp, r0
 8023276:	f107 4100 	add.w	r1, r7, #2147483648	@ 0x80000000
 802327a:	4630      	mov	r0, r6
 802327c:	f7dd fa92 	bl	80007a4 <__aeabi_ddiv>
 8023280:	f7dd fc3e 	bl	8000b00 <__aeabi_d2f>
 8023284:	46d9      	mov	r9, fp
 8023286:	9000      	str	r0, [sp, #0]
 8023288:	ee07 0a90 	vmov	s15, r0
 802328c:	f7ff bbd5 	b.w	8022a3a <design_second_order_filter+0x142>
 8023290:	54442d18 	.word	0x54442d18
 8023294:	400921fb 	.word	0x400921fb
 8023298:	5f88880e 	.word	0x5f88880e
 802329c:	3fbd791c 	.word	0x3fbd791c
 80232a0:	d9d7bdbb 	.word	0xd9d7bdbb
 80232a4:	3deb7cdf 	.word	0x3deb7cdf
 80232a8:	3fe00000 	.word	0x3fe00000
 80232ac:	3ff00000 	.word	0x3ff00000
 80232b0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80232b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232b8:	d103      	bne.n	80232c2 <design_second_order_filter+0x9ca>
 80232ba:	ed9f 7bd9 	vldr	d7, [pc, #868]	@ 8023620 <design_second_order_filter+0xd28>
 80232be:	ed8d 7b04 	vstr	d7, [sp, #16]
 80232c2:	eef5 8a40 	vcmp.f32	s17, #0.0
 80232c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232ca:	bf08      	it	eq
 80232cc:	f8df 9368 	ldreq.w	r9, [pc, #872]	@ 8023638 <design_second_order_filter+0xd40>
 80232d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80232d4:	4620      	mov	r0, r4
 80232d6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 80232da:	bf08      	it	eq
 80232dc:	f04f 0800 	moveq.w	r8, #0
 80232e0:	f7dd fa60 	bl	80007a4 <__aeabi_ddiv>
 80232e4:	a3d6      	add	r3, pc, #856	@ (adr r3, 8023640 <design_second_order_filter+0xd48>)
 80232e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80232ea:	f7dd f931 	bl	8000550 <__aeabi_dmul>
 80232ee:	4642      	mov	r2, r8
 80232f0:	464b      	mov	r3, r9
 80232f2:	f7dd fa57 	bl	80007a4 <__aeabi_ddiv>
 80232f6:	ec41 0b10 	vmov	d0, r0, r1
 80232fa:	f00b f805 	bl	802e308 <exp>
 80232fe:	ec57 6b10 	vmov	r6, r7, d0
 8023302:	ee10 2a10 	vmov	r2, s0
 8023306:	ee10 0a10 	vmov	r0, s0
 802330a:	463b      	mov	r3, r7
 802330c:	4639      	mov	r1, r7
 802330e:	f7dd f91f 	bl	8000550 <__aeabi_dmul>
 8023312:	4642      	mov	r2, r8
 8023314:	4604      	mov	r4, r0
 8023316:	464b      	mov	r3, r9
 8023318:	460d      	mov	r5, r1
 802331a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802331e:	f7dd fa41 	bl	80007a4 <__aeabi_ddiv>
 8023322:	ec41 0b10 	vmov	d0, r0, r1
 8023326:	f00b f90b 	bl	802e540 <cos>
 802332a:	4632      	mov	r2, r6
 802332c:	463b      	mov	r3, r7
 802332e:	2000      	movs	r0, #0
 8023330:	49c1      	ldr	r1, [pc, #772]	@ (8023638 <design_second_order_filter+0xd40>)
 8023332:	ed8d 0b02 	vstr	d0, [sp, #8]
 8023336:	f7dc ff53 	bl	80001e0 <__aeabi_dsub>
 802333a:	f7dd fbe1 	bl	8000b00 <__aeabi_d2f>
 802333e:	4622      	mov	r2, r4
 8023340:	462b      	mov	r3, r5
 8023342:	4683      	mov	fp, r0
 8023344:	4639      	mov	r1, r7
 8023346:	4630      	mov	r0, r6
 8023348:	e9cd 4500 	strd	r4, r5, [sp]
 802334c:	f7dc ff48 	bl	80001e0 <__aeabi_dsub>
 8023350:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023354:	4619      	mov	r1, r3
 8023356:	f7dd fbd3 	bl	8000b00 <__aeabi_d2f>
 802335a:	4632      	mov	r2, r6
 802335c:	463b      	mov	r3, r7
 802335e:	4681      	mov	r9, r0
 8023360:	4639      	mov	r1, r7
 8023362:	4630      	mov	r0, r6
 8023364:	f7dc ff3e 	bl	80001e4 <__adddf3>
 8023368:	ed9d 0b02 	vldr	d0, [sp, #8]
 802336c:	ec53 2b10 	vmov	r2, r3, d0
 8023370:	f7dd f8ee 	bl	8000550 <__aeabi_dmul>
 8023374:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023378:	4619      	mov	r1, r3
 802337a:	f7dd fbc1 	bl	8000b00 <__aeabi_d2f>
 802337e:	4604      	mov	r4, r0
 8023380:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023384:	f7dd fbbc 	bl	8000b00 <__aeabi_d2f>
 8023388:	eddf 7aac 	vldr	s15, [pc, #688]	@ 802363c <design_second_order_filter+0xd44>
 802338c:	4680      	mov	r8, r0
 802338e:	edcd 7a00 	vstr	s15, [sp]
 8023392:	f7ff bb52 	b.w	8022a3a <design_second_order_filter+0x142>
 8023396:	a3a4      	add	r3, pc, #656	@ (adr r3, 8023628 <design_second_order_filter+0xd30>)
 8023398:	e9d3 2300 	ldrd	r2, r3, [r3]
 802339c:	4630      	mov	r0, r6
 802339e:	4639      	mov	r1, r7
 80233a0:	f7dd f8d6 	bl	8000550 <__aeabi_dmul>
 80233a4:	ec41 0b10 	vmov	d0, r0, r1
 80233a8:	f00a ffae 	bl	802e308 <exp>
 80233ac:	ec51 0b10 	vmov	r0, r1, d0
 80233b0:	f7dd fba6 	bl	8000b00 <__aeabi_d2f>
 80233b4:	f04f 0800 	mov.w	r8, #0
 80233b8:	4683      	mov	fp, r0
 80233ba:	4644      	mov	r4, r8
 80233bc:	46c1      	mov	r9, r8
 80233be:	f8cd 8000 	str.w	r8, [sp]
 80233c2:	ee07 8a90 	vmov	s15, r8
 80233c6:	f7ff bb38 	b.w	8022a3a <design_second_order_filter+0x142>
 80233ca:	ed9d 0b00 	vldr	d0, [sp]
 80233ce:	f00b f90b 	bl	802e5e8 <sin>
 80233d2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80233d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233da:	ec55 4b10 	vmov	r4, r5, d0
 80233de:	f000 813c 	beq.w	802365a <design_second_order_filter+0xd62>
 80233e2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80233e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233ea:	f2c0 81fe 	blt.w	80237ea <design_second_order_filter+0xef2>
 80233ee:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80233f2:	4610      	mov	r0, r2
 80233f4:	4619      	mov	r1, r3
 80233f6:	f7dc fef5 	bl	80001e4 <__adddf3>
 80233fa:	4602      	mov	r2, r0
 80233fc:	460b      	mov	r3, r1
 80233fe:	4620      	mov	r0, r4
 8023400:	4629      	mov	r1, r5
 8023402:	f7dd f9cf 	bl	80007a4 <__aeabi_ddiv>
 8023406:	4606      	mov	r6, r0
 8023408:	460f      	mov	r7, r1
 802340a:	ed9d 0b00 	vldr	d0, [sp]
 802340e:	f00b f897 	bl	802e540 <cos>
 8023412:	2200      	movs	r2, #0
 8023414:	4b88      	ldr	r3, [pc, #544]	@ (8023638 <design_second_order_filter+0xd40>)
 8023416:	4630      	mov	r0, r6
 8023418:	4639      	mov	r1, r7
 802341a:	ed8d 0b00 	vstr	d0, [sp]
 802341e:	f7dc fee1 	bl	80001e4 <__adddf3>
 8023422:	4632      	mov	r2, r6
 8023424:	4604      	mov	r4, r0
 8023426:	460d      	mov	r5, r1
 8023428:	463b      	mov	r3, r7
 802342a:	2000      	movs	r0, #0
 802342c:	4982      	ldr	r1, [pc, #520]	@ (8023638 <design_second_order_filter+0xd40>)
 802342e:	f7dc fed7 	bl	80001e0 <__aeabi_dsub>
 8023432:	4622      	mov	r2, r4
 8023434:	462b      	mov	r3, r5
 8023436:	f7dd f9b5 	bl	80007a4 <__aeabi_ddiv>
 802343a:	f7dd fb61 	bl	8000b00 <__aeabi_d2f>
 802343e:	ed9d 0b00 	vldr	d0, [sp]
 8023442:	4683      	mov	fp, r0
 8023444:	2200      	movs	r2, #0
 8023446:	ec51 0b10 	vmov	r0, r1, d0
 802344a:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 802344e:	f7dd f87f 	bl	8000550 <__aeabi_dmul>
 8023452:	4622      	mov	r2, r4
 8023454:	462b      	mov	r3, r5
 8023456:	f7dd f9a5 	bl	80007a4 <__aeabi_ddiv>
 802345a:	f7dd fb51 	bl	8000b00 <__aeabi_d2f>
 802345e:	4622      	mov	r2, r4
 8023460:	4606      	mov	r6, r0
 8023462:	9000      	str	r0, [sp, #0]
 8023464:	462b      	mov	r3, r5
 8023466:	4620      	mov	r0, r4
 8023468:	4629      	mov	r1, r5
 802346a:	f7dd f99b 	bl	80007a4 <__aeabi_ddiv>
 802346e:	f7dd fb47 	bl	8000b00 <__aeabi_d2f>
 8023472:	46d8      	mov	r8, fp
 8023474:	4681      	mov	r9, r0
 8023476:	4634      	mov	r4, r6
 8023478:	ee07 6a90 	vmov	s15, r6
 802347c:	f7ff badd 	b.w	8022a3a <design_second_order_filter+0x142>
 8023480:	ed9d 0b00 	vldr	d0, [sp]
 8023484:	f00b f8b0 	bl	802e5e8 <sin>
 8023488:	f1bb 0f08 	cmp.w	fp, #8
 802348c:	ec55 4b10 	vmov	r4, r5, d0
 8023490:	f000 8119 	beq.w	80236c6 <design_second_order_filter+0xdce>
 8023494:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8023498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802349c:	f040 8228 	bne.w	80238f0 <design_second_order_filter+0xff8>
 80234a0:	a363      	add	r3, pc, #396	@ (adr r3, 8023630 <design_second_order_filter+0xd38>)
 80234a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234a6:	4620      	mov	r0, r4
 80234a8:	4629      	mov	r1, r5
 80234aa:	f7dd f97b 	bl	80007a4 <__aeabi_ddiv>
 80234ae:	4604      	mov	r4, r0
 80234b0:	460d      	mov	r5, r1
 80234b2:	eeb0 0a4a 	vmov.f32	s0, s20
 80234b6:	eef0 0a6a 	vmov.f32	s1, s21
 80234ba:	f00b f815 	bl	802e4e8 <sqrt>
 80234be:	ec53 2b10 	vmov	r2, r3, d0
 80234c2:	ee10 0a10 	vmov	r0, s0
 80234c6:	4619      	mov	r1, r3
 80234c8:	f7dc fe8c 	bl	80001e4 <__adddf3>
 80234cc:	4622      	mov	r2, r4
 80234ce:	462b      	mov	r3, r5
 80234d0:	f7dd f83e 	bl	8000550 <__aeabi_dmul>
 80234d4:	2200      	movs	r2, #0
 80234d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80234da:	4b57      	ldr	r3, [pc, #348]	@ (8023638 <design_second_order_filter+0xd40>)
 80234dc:	ec51 0b1a 	vmov	r0, r1, d10
 80234e0:	f7dc fe80 	bl	80001e4 <__adddf3>
 80234e4:	2200      	movs	r2, #0
 80234e6:	4604      	mov	r4, r0
 80234e8:	460d      	mov	r5, r1
 80234ea:	4b53      	ldr	r3, [pc, #332]	@ (8023638 <design_second_order_filter+0xd40>)
 80234ec:	ec51 0b1a 	vmov	r0, r1, d10
 80234f0:	f7dc fe76 	bl	80001e0 <__aeabi_dsub>
 80234f4:	ed9d 0b00 	vldr	d0, [sp]
 80234f8:	4680      	mov	r8, r0
 80234fa:	4689      	mov	r9, r1
 80234fc:	f00b f820 	bl	802e540 <cos>
 8023500:	ec57 6b10 	vmov	r6, r7, d0
 8023504:	ee10 2a10 	vmov	r2, s0
 8023508:	463b      	mov	r3, r7
 802350a:	4640      	mov	r0, r8
 802350c:	4649      	mov	r1, r9
 802350e:	e9cd 8904 	strd	r8, r9, [sp, #16]
 8023512:	f7dd f81d 	bl	8000550 <__aeabi_dmul>
 8023516:	4680      	mov	r8, r0
 8023518:	4689      	mov	r9, r1
 802351a:	4602      	mov	r2, r0
 802351c:	460b      	mov	r3, r1
 802351e:	4620      	mov	r0, r4
 8023520:	4629      	mov	r1, r5
 8023522:	f7dc fe5d 	bl	80001e0 <__aeabi_dsub>
 8023526:	4632      	mov	r2, r6
 8023528:	e9cd 0106 	strd	r0, r1, [sp, #24]
 802352c:	463b      	mov	r3, r7
 802352e:	4620      	mov	r0, r4
 8023530:	4629      	mov	r1, r5
 8023532:	f7dd f80d 	bl	8000550 <__aeabi_dmul>
 8023536:	4642      	mov	r2, r8
 8023538:	e9cd 0108 	strd	r0, r1, [sp, #32]
 802353c:	464b      	mov	r3, r9
 802353e:	4620      	mov	r0, r4
 8023540:	4629      	mov	r1, r5
 8023542:	f7dc fe4f 	bl	80001e4 <__adddf3>
 8023546:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 802354a:	464b      	mov	r3, r9
 802354c:	4642      	mov	r2, r8
 802354e:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8023552:	f7dc fe47 	bl	80001e4 <__adddf3>
 8023556:	464b      	mov	r3, r9
 8023558:	4606      	mov	r6, r0
 802355a:	460f      	mov	r7, r1
 802355c:	4642      	mov	r2, r8
 802355e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8023562:	f7dc fe3f 	bl	80001e4 <__adddf3>
 8023566:	ec53 2b1a 	vmov	r2, r3, d10
 802356a:	f7dc fff1 	bl	8000550 <__aeabi_dmul>
 802356e:	4632      	mov	r2, r6
 8023570:	463b      	mov	r3, r7
 8023572:	f7dd f917 	bl	80007a4 <__aeabi_ddiv>
 8023576:	f7dd fac3 	bl	8000b00 <__aeabi_d2f>
 802357a:	ec53 2b1a 	vmov	r2, r3, d10
 802357e:	4683      	mov	fp, r0
 8023580:	ec51 0b1a 	vmov	r0, r1, d10
 8023584:	f7dc fe2e 	bl	80001e4 <__adddf3>
 8023588:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 802358c:	4604      	mov	r4, r0
 802358e:	460d      	mov	r5, r1
 8023590:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8023594:	f7dc fe24 	bl	80001e0 <__aeabi_dsub>
 8023598:	4602      	mov	r2, r0
 802359a:	460b      	mov	r3, r1
 802359c:	4620      	mov	r0, r4
 802359e:	4629      	mov	r1, r5
 80235a0:	f7dc ffd6 	bl	8000550 <__aeabi_dmul>
 80235a4:	4632      	mov	r2, r6
 80235a6:	463b      	mov	r3, r7
 80235a8:	f7dd f8fc 	bl	80007a4 <__aeabi_ddiv>
 80235ac:	f7dd faa8 	bl	8000b00 <__aeabi_d2f>
 80235b0:	464b      	mov	r3, r9
 80235b2:	9000      	str	r0, [sp, #0]
 80235b4:	4642      	mov	r2, r8
 80235b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80235ba:	e9cd 8902 	strd	r8, r9, [sp, #8]
 80235be:	f7dc fe0f 	bl	80001e0 <__aeabi_dsub>
 80235c2:	ec53 2b1a 	vmov	r2, r3, d10
 80235c6:	f7dc ffc3 	bl	8000550 <__aeabi_dmul>
 80235ca:	4632      	mov	r2, r6
 80235cc:	463b      	mov	r3, r7
 80235ce:	f7dd f8e9 	bl	80007a4 <__aeabi_ddiv>
 80235d2:	f7dd fa95 	bl	8000b00 <__aeabi_d2f>
 80235d6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80235da:	4681      	mov	r9, r0
 80235dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80235e0:	f7dc fe00 	bl	80001e4 <__adddf3>
 80235e4:	2200      	movs	r2, #0
 80235e6:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 80235ea:	f7dc ffb1 	bl	8000550 <__aeabi_dmul>
 80235ee:	4632      	mov	r2, r6
 80235f0:	463b      	mov	r3, r7
 80235f2:	f7dd f8d7 	bl	80007a4 <__aeabi_ddiv>
 80235f6:	f7dd fa83 	bl	8000b00 <__aeabi_d2f>
 80235fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80235fe:	4604      	mov	r4, r0
 8023600:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8023604:	f7dc fdec 	bl	80001e0 <__aeabi_dsub>
 8023608:	4632      	mov	r2, r6
 802360a:	463b      	mov	r3, r7
 802360c:	f7dd f8ca 	bl	80007a4 <__aeabi_ddiv>
 8023610:	f7dd fa76 	bl	8000b00 <__aeabi_d2f>
 8023614:	eddd 7a00 	vldr	s15, [sp]
 8023618:	4680      	mov	r8, r0
 802361a:	f7ff ba0e 	b.w	8022a3a <design_second_order_filter+0x142>
 802361e:	bf00      	nop
 8023620:	d9d7bdbb 	.word	0xd9d7bdbb
 8023624:	3ddb7cdf 	.word	0x3ddb7cdf
 8023628:	5f88880e 	.word	0x5f88880e
 802362c:	3fbd791c 	.word	0x3fbd791c
 8023630:	d9d7bdbb 	.word	0xd9d7bdbb
 8023634:	3deb7cdf 	.word	0x3deb7cdf
 8023638:	3ff00000 	.word	0x3ff00000
 802363c:	00000000 	.word	0x00000000
 8023640:	54442d18 	.word	0x54442d18
 8023644:	401921fb 	.word	0x401921fb
 8023648:	4652      	mov	r2, sl
 802364a:	eef0 0a68 	vmov.f32	s1, s17
 802364e:	eeb0 0a49 	vmov.f32	s0, s18
 8023652:	2100      	movs	r1, #0
 8023654:	2001      	movs	r0, #1
 8023656:	f7ff ba48 	b.w	8022aea <design_second_order_filter+0x1f2>
 802365a:	a3cd      	add	r3, pc, #820	@ (adr r3, 8023990 <design_second_order_filter+0x1098>)
 802365c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023660:	e6cd      	b.n	80233fe <design_second_order_filter+0xb06>
 8023662:	a3cb      	add	r3, pc, #812	@ (adr r3, 8023990 <design_second_order_filter+0x1098>)
 8023664:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023668:	f7ff bb00 	b.w	8022c6c <design_second_order_filter+0x374>
 802366c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8023670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023674:	db79      	blt.n	802376a <design_second_order_filter+0xe72>
 8023676:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802367a:	4610      	mov	r0, r2
 802367c:	4619      	mov	r1, r3
 802367e:	f7dc fdb1 	bl	80001e4 <__adddf3>
 8023682:	4602      	mov	r2, r0
 8023684:	460b      	mov	r3, r1
 8023686:	f7ff ba83 	b.w	8022b90 <design_second_order_filter+0x298>
 802368a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 802368e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023692:	f2c0 808a 	blt.w	80237aa <design_second_order_filter+0xeb2>
 8023696:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802369a:	4610      	mov	r0, r2
 802369c:	4619      	mov	r1, r3
 802369e:	f7dc fda1 	bl	80001e4 <__adddf3>
 80236a2:	4602      	mov	r2, r0
 80236a4:	460b      	mov	r3, r1
 80236a6:	e401      	b.n	8022eac <design_second_order_filter+0x5b4>
 80236a8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80236ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236b0:	f2c0 80ba 	blt.w	8023828 <design_second_order_filter+0xf30>
 80236b4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80236b8:	4610      	mov	r0, r2
 80236ba:	4619      	mov	r1, r3
 80236bc:	f7dc fd92 	bl	80001e4 <__adddf3>
 80236c0:	4602      	mov	r2, r0
 80236c2:	460b      	mov	r3, r1
 80236c4:	e58d      	b.n	80231e2 <design_second_order_filter+0x8ea>
 80236c6:	a3b4      	add	r3, pc, #720	@ (adr r3, 8023998 <design_second_order_filter+0x10a0>)
 80236c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80236cc:	e6eb      	b.n	80234a6 <design_second_order_filter+0xbae>
 80236ce:	a3b2      	add	r3, pc, #712	@ (adr r3, 8023998 <design_second_order_filter+0x10a0>)
 80236d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80236d4:	f7ff bb2f 	b.w	8022d36 <design_second_order_filter+0x43e>
 80236d8:	f7dc ff3a 	bl	8000550 <__aeabi_dmul>
 80236dc:	4642      	mov	r2, r8
 80236de:	4606      	mov	r6, r0
 80236e0:	460f      	mov	r7, r1
 80236e2:	464b      	mov	r3, r9
 80236e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80236e8:	f7dc ff32 	bl	8000550 <__aeabi_dmul>
 80236ec:	4622      	mov	r2, r4
 80236ee:	4680      	mov	r8, r0
 80236f0:	4689      	mov	r9, r1
 80236f2:	462b      	mov	r3, r5
 80236f4:	4630      	mov	r0, r6
 80236f6:	4639      	mov	r1, r7
 80236f8:	f7dc fd74 	bl	80001e4 <__adddf3>
 80236fc:	4642      	mov	r2, r8
 80236fe:	464b      	mov	r3, r9
 8023700:	f7dc fd70 	bl	80001e4 <__adddf3>
 8023704:	4622      	mov	r2, r4
 8023706:	462b      	mov	r3, r5
 8023708:	f7dd f84c 	bl	80007a4 <__aeabi_ddiv>
 802370c:	f7dd f9f8 	bl	8000b00 <__aeabi_d2f>
 8023710:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8023714:	4683      	mov	fp, r0
 8023716:	4649      	mov	r1, r9
 8023718:	4640      	mov	r0, r8
 802371a:	f7dc fd63 	bl	80001e4 <__adddf3>
 802371e:	4632      	mov	r2, r6
 8023720:	463b      	mov	r3, r7
 8023722:	f7dc fd5f 	bl	80001e4 <__adddf3>
 8023726:	e4a1      	b.n	802306c <design_second_order_filter+0x774>
 8023728:	f00a fdee 	bl	802e308 <exp>
 802372c:	ed9f 7b92 	vldr	d7, [pc, #584]	@ 8023978 <design_second_order_filter+0x1080>
 8023730:	ec57 6b10 	vmov	r6, r7, d0
 8023734:	ed8d 7b04 	vstr	d7, [sp, #16]
 8023738:	e4c8      	b.n	80230cc <design_second_order_filter+0x7d4>
 802373a:	4632      	mov	r2, r6
 802373c:	463b      	mov	r3, r7
 802373e:	2000      	movs	r0, #0
 8023740:	4991      	ldr	r1, [pc, #580]	@ (8023988 <design_second_order_filter+0x1090>)
 8023742:	f7dc fd4d 	bl	80001e0 <__aeabi_dsub>
 8023746:	2200      	movs	r2, #0
 8023748:	4b90      	ldr	r3, [pc, #576]	@ (802398c <design_second_order_filter+0x1094>)
 802374a:	4606      	mov	r6, r0
 802374c:	460f      	mov	r7, r1
 802374e:	f7dc feff 	bl	8000550 <__aeabi_dmul>
 8023752:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023756:	f7dd f825 	bl	80007a4 <__aeabi_ddiv>
 802375a:	f7dd f9d1 	bl	8000b00 <__aeabi_d2f>
 802375e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023762:	4683      	mov	fp, r0
 8023764:	4639      	mov	r1, r7
 8023766:	4630      	mov	r0, r6
 8023768:	e588      	b.n	802327c <design_second_order_filter+0x984>
 802376a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802376e:	4610      	mov	r0, r2
 8023770:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8023774:	a382      	add	r3, pc, #520	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 8023776:	e9d3 2300 	ldrd	r2, r3, [r3]
 802377a:	f7dc fee9 	bl	8000550 <__aeabi_dmul>
 802377e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023782:	f7dc fee5 	bl	8000550 <__aeabi_dmul>
 8023786:	4622      	mov	r2, r4
 8023788:	462b      	mov	r3, r5
 802378a:	f7dd f80b 	bl	80007a4 <__aeabi_ddiv>
 802378e:	ec41 0b10 	vmov	d0, r0, r1
 8023792:	f00a fe71 	bl	802e478 <sinh>
 8023796:	4622      	mov	r2, r4
 8023798:	462b      	mov	r3, r5
 802379a:	ec51 0b10 	vmov	r0, r1, d0
 802379e:	f7dc fed7 	bl	8000550 <__aeabi_dmul>
 80237a2:	4604      	mov	r4, r0
 80237a4:	460d      	mov	r5, r1
 80237a6:	f7ff b9f9 	b.w	8022b9c <design_second_order_filter+0x2a4>
 80237aa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80237ae:	4610      	mov	r0, r2
 80237b0:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80237b4:	a372      	add	r3, pc, #456	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 80237b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237ba:	f7dc fec9 	bl	8000550 <__aeabi_dmul>
 80237be:	e9dd 2300 	ldrd	r2, r3, [sp]
 80237c2:	f7dc fec5 	bl	8000550 <__aeabi_dmul>
 80237c6:	4622      	mov	r2, r4
 80237c8:	462b      	mov	r3, r5
 80237ca:	f7dc ffeb 	bl	80007a4 <__aeabi_ddiv>
 80237ce:	ec41 0b10 	vmov	d0, r0, r1
 80237d2:	f00a fe51 	bl	802e478 <sinh>
 80237d6:	4622      	mov	r2, r4
 80237d8:	462b      	mov	r3, r5
 80237da:	ec51 0b10 	vmov	r0, r1, d0
 80237de:	f7dc feb7 	bl	8000550 <__aeabi_dmul>
 80237e2:	4604      	mov	r4, r0
 80237e4:	460d      	mov	r5, r1
 80237e6:	f7ff bb67 	b.w	8022eb8 <design_second_order_filter+0x5c0>
 80237ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80237ee:	4610      	mov	r0, r2
 80237f0:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80237f4:	a362      	add	r3, pc, #392	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 80237f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237fa:	f7dc fea9 	bl	8000550 <__aeabi_dmul>
 80237fe:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023802:	f7dc fea5 	bl	8000550 <__aeabi_dmul>
 8023806:	4622      	mov	r2, r4
 8023808:	462b      	mov	r3, r5
 802380a:	f7dc ffcb 	bl	80007a4 <__aeabi_ddiv>
 802380e:	ec41 0b10 	vmov	d0, r0, r1
 8023812:	f00a fe31 	bl	802e478 <sinh>
 8023816:	4622      	mov	r2, r4
 8023818:	462b      	mov	r3, r5
 802381a:	ec51 0b10 	vmov	r0, r1, d0
 802381e:	f7dc fe97 	bl	8000550 <__aeabi_dmul>
 8023822:	4606      	mov	r6, r0
 8023824:	460f      	mov	r7, r1
 8023826:	e5f0      	b.n	802340a <design_second_order_filter+0xb12>
 8023828:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802382c:	4610      	mov	r0, r2
 802382e:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8023832:	a353      	add	r3, pc, #332	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 8023834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023838:	f7dc fe8a 	bl	8000550 <__aeabi_dmul>
 802383c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023840:	f7dc fe86 	bl	8000550 <__aeabi_dmul>
 8023844:	4622      	mov	r2, r4
 8023846:	462b      	mov	r3, r5
 8023848:	f7dc ffac 	bl	80007a4 <__aeabi_ddiv>
 802384c:	ec41 0b10 	vmov	d0, r0, r1
 8023850:	f00a fe12 	bl	802e478 <sinh>
 8023854:	4622      	mov	r2, r4
 8023856:	462b      	mov	r3, r5
 8023858:	ec51 0b10 	vmov	r0, r1, d0
 802385c:	f7dc fe78 	bl	8000550 <__aeabi_dmul>
 8023860:	4680      	mov	r8, r0
 8023862:	4689      	mov	r9, r1
 8023864:	e4c3      	b.n	80231ee <design_second_order_filter+0x8f6>
 8023866:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802386a:	4610      	mov	r0, r2
 802386c:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8023870:	a343      	add	r3, pc, #268	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 8023872:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023876:	f7dc fe6b 	bl	8000550 <__aeabi_dmul>
 802387a:	e9dd 2300 	ldrd	r2, r3, [sp]
 802387e:	f7dc fe67 	bl	8000550 <__aeabi_dmul>
 8023882:	4622      	mov	r2, r4
 8023884:	462b      	mov	r3, r5
 8023886:	f7dc ff8d 	bl	80007a4 <__aeabi_ddiv>
 802388a:	ec41 0b10 	vmov	d0, r0, r1
 802388e:	f00a fdf3 	bl	802e478 <sinh>
 8023892:	4622      	mov	r2, r4
 8023894:	462b      	mov	r3, r5
 8023896:	ec51 0b10 	vmov	r0, r1, d0
 802389a:	f7dc fe59 	bl	8000550 <__aeabi_dmul>
 802389e:	4606      	mov	r6, r0
 80238a0:	460f      	mov	r7, r1
 80238a2:	f7ff b9e9 	b.w	8022c78 <design_second_order_filter+0x380>
 80238a6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80238aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80238ae:	da4f      	bge.n	8023950 <design_second_order_filter+0x1058>
 80238b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80238b4:	4610      	mov	r0, r2
 80238b6:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80238ba:	a331      	add	r3, pc, #196	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 80238bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80238c0:	f7dc fe46 	bl	8000550 <__aeabi_dmul>
 80238c4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80238c8:	f7dc fe42 	bl	8000550 <__aeabi_dmul>
 80238cc:	4622      	mov	r2, r4
 80238ce:	462b      	mov	r3, r5
 80238d0:	f7dc ff68 	bl	80007a4 <__aeabi_ddiv>
 80238d4:	ec41 0b10 	vmov	d0, r0, r1
 80238d8:	f00a fdce 	bl	802e478 <sinh>
 80238dc:	4622      	mov	r2, r4
 80238de:	462b      	mov	r3, r5
 80238e0:	ec51 0b10 	vmov	r0, r1, d0
 80238e4:	f7dc fe34 	bl	8000550 <__aeabi_dmul>
 80238e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80238ec:	f7ff ba29 	b.w	8022d42 <design_second_order_filter+0x44a>
 80238f0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80238f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80238f8:	da34      	bge.n	8023964 <design_second_order_filter+0x106c>
 80238fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80238fe:	4610      	mov	r0, r2
 8023900:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8023904:	a31e      	add	r3, pc, #120	@ (adr r3, 8023980 <design_second_order_filter+0x1088>)
 8023906:	e9d3 2300 	ldrd	r2, r3, [r3]
 802390a:	f7dc fe21 	bl	8000550 <__aeabi_dmul>
 802390e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023912:	f7dc fe1d 	bl	8000550 <__aeabi_dmul>
 8023916:	4622      	mov	r2, r4
 8023918:	462b      	mov	r3, r5
 802391a:	f7dc ff43 	bl	80007a4 <__aeabi_ddiv>
 802391e:	ec41 0b10 	vmov	d0, r0, r1
 8023922:	f00a fda9 	bl	802e478 <sinh>
 8023926:	4622      	mov	r2, r4
 8023928:	462b      	mov	r3, r5
 802392a:	ec51 0b10 	vmov	r0, r1, d0
 802392e:	f7dc fe0f 	bl	8000550 <__aeabi_dmul>
 8023932:	4604      	mov	r4, r0
 8023934:	460d      	mov	r5, r1
 8023936:	e5bc      	b.n	80234b2 <design_second_order_filter+0xbba>
 8023938:	f04f 0800 	mov.w	r8, #0
 802393c:	4644      	mov	r4, r8
 802393e:	46c1      	mov	r9, r8
 8023940:	f8cd 8000 	str.w	r8, [sp]
 8023944:	f04f 5b7e 	mov.w	fp, #1065353216	@ 0x3f800000
 8023948:	ee07 8a90 	vmov	s15, r8
 802394c:	f7ff b875 	b.w	8022a3a <design_second_order_filter+0x142>
 8023950:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023954:	4610      	mov	r0, r2
 8023956:	4619      	mov	r1, r3
 8023958:	f7dc fc44 	bl	80001e4 <__adddf3>
 802395c:	4602      	mov	r2, r0
 802395e:	460b      	mov	r3, r1
 8023960:	f7ff b9e9 	b.w	8022d36 <design_second_order_filter+0x43e>
 8023964:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023968:	4610      	mov	r0, r2
 802396a:	4619      	mov	r1, r3
 802396c:	f7dc fc3a 	bl	80001e4 <__adddf3>
 8023970:	4602      	mov	r2, r0
 8023972:	460b      	mov	r3, r1
 8023974:	e597      	b.n	80234a6 <design_second_order_filter+0xbae>
 8023976:	bf00      	nop
 8023978:	00000000 	.word	0x00000000
 802397c:	3ff00000 	.word	0x3ff00000
 8023980:	00000000 	.word	0x00000000
 8023984:	3fd62e43 	.word	0x3fd62e43
 8023988:	3ff00000 	.word	0x3ff00000
 802398c:	3fe00000 	.word	0x3fe00000
 8023990:	d9d7bdbb 	.word	0xd9d7bdbb
 8023994:	3deb7cdf 	.word	0x3deb7cdf
 8023998:	667f3bd1 	.word	0x667f3bd1
 802399c:	3ff6a09e 	.word	0x3ff6a09e

080239a0 <design_smoother>:
 80239a0:	ee07 0a90 	vmov	s15, r0
 80239a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80239a8:	eddf 7a49 	vldr	s15, [pc, #292]	@ 8023ad0 <design_smoother+0x130>
 80239ac:	ee60 6a20 	vmul.f32	s13, s0, s1
 80239b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80239b4:	eef4 6ae7 	vcmpe.f32	s13, s15
 80239b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80239bc:	d502      	bpl.n	80239c4 <design_smoother+0x24>
 80239be:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80239c2:	4770      	bx	lr
 80239c4:	eec0 7a87 	vdiv.f32	s15, s1, s14
 80239c8:	b510      	push	{r4, lr}
 80239ca:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8023ad4 <design_smoother+0x134>
 80239ce:	ee27 0a80 	vmul.f32	s0, s15, s0
 80239d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80239d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80239da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80239de:	db55      	blt.n	8023a8c <design_smoother+0xec>
 80239e0:	ed9f 7a3d 	vldr	s14, [pc, #244]	@ 8023ad8 <design_smoother+0x138>
 80239e4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80239e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80239ec:	d44b      	bmi.n	8023a86 <design_smoother+0xe6>
 80239ee:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8023adc <design_smoother+0x13c>
 80239f2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80239f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80239fa:	da58      	bge.n	8023aae <design_smoother+0x10e>
 80239fc:	2400      	movs	r4, #0
 80239fe:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8023ae0 <design_smoother+0x140>
 8023a02:	ee27 7a87 	vmul.f32	s14, s15, s14
 8023a06:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8023a0a:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8023a0e:	ee16 3a90 	vmov	r3, s13
 8023a12:	2b00      	cmp	r3, #0
 8023a14:	bfb8      	it	lt
 8023a16:	f103 33ff 	addlt.w	r3, r3, #4294967295
 8023a1a:	ee06 3a90 	vmov	s13, r3
 8023a1e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8023a22:	1c58      	adds	r0, r3, #1
 8023a24:	ee37 7a66 	vsub.f32	s14, s14, s13
 8023a28:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8023a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023a30:	da40      	bge.n	8023ab4 <design_smoother+0x114>
 8023a32:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8023ae4 <design_smoother+0x144>
 8023a36:	ed9f 6a2c 	vldr	s12, [pc, #176]	@ 8023ae8 <design_smoother+0x148>
 8023a3a:	ed9f 5a2c 	vldr	s10, [pc, #176]	@ 8023aec <design_smoother+0x14c>
 8023a3e:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 8023af0 <design_smoother+0x150>
 8023a42:	eee6 7ac7 	vfms.f32	s15, s13, s14
 8023a46:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 8023a4a:	eee6 7a86 	vfma.f32	s15, s13, s12
 8023a4e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8023a52:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8023a56:	eea6 7a85 	vfma.f32	s14, s13, s10
 8023a5a:	eeb0 5a46 	vmov.f32	s10, s12
 8023a5e:	eea6 5aa5 	vfma.f32	s10, s13, s11
 8023a62:	ee67 7a27 	vmul.f32	s15, s14, s15
 8023a66:	ee35 7a67 	vsub.f32	s14, s10, s15
 8023a6a:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8023a6e:	ee30 0a06 	vadd.f32	s0, s0, s12
 8023a72:	f00a f8f8 	bl	802dc66 <ldexpf>
 8023a76:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8023a7a:	b32c      	cbz	r4, 8023ac8 <design_smoother+0x128>
 8023a7c:	ee87 7a80 	vdiv.f32	s14, s15, s0
 8023a80:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8023a84:	bd10      	pop	{r4, pc}
 8023a86:	ed9f 0a1b 	vldr	s0, [pc, #108]	@ 8023af4 <design_smoother+0x154>
 8023a8a:	bd10      	pop	{r4, pc}
 8023a8c:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8023af8 <design_smoother+0x158>
 8023a90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8023a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023a98:	dcf5      	bgt.n	8023a86 <design_smoother+0xe6>
 8023a9a:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8023afc <design_smoother+0x15c>
 8023a9e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8023aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023aa6:	d80b      	bhi.n	8023ac0 <design_smoother+0x120>
 8023aa8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8023aac:	bd10      	pop	{r4, pc}
 8023aae:	ed9f 0a14 	vldr	s0, [pc, #80]	@ 8023b00 <design_smoother+0x160>
 8023ab2:	bd10      	pop	{r4, pc}
 8023ab4:	ee07 0a10 	vmov	s14, r0
 8023ab8:	1c98      	adds	r0, r3, #2
 8023aba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8023abe:	e7b8      	b.n	8023a32 <design_smoother+0x92>
 8023ac0:	eef1 7a67 	vneg.f32	s15, s15
 8023ac4:	2401      	movs	r4, #1
 8023ac6:	e79a      	b.n	80239fe <design_smoother+0x5e>
 8023ac8:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8023acc:	bd10      	pop	{r4, pc}
 8023ace:	bf00      	nop
 8023ad0:	42c80000 	.word	0x42c80000
 8023ad4:	c47a0000 	.word	0xc47a0000
 8023ad8:	33d6bf95 	.word	0x33d6bf95
 8023adc:	42af5c72 	.word	0x42af5c72
 8023ae0:	3fb8aa3b 	.word	0x3fb8aa3b
 8023ae4:	3f318000 	.word	0x3f318000
 8023ae8:	395e8083 	.word	0x395e8083
 8023aec:	3b885308 	.word	0x3b885308
 8023af0:	3d4cbf5b 	.word	0x3d4cbf5b
 8023af4:	00000000 	.word	0x00000000
 8023af8:	b3d6bf95 	.word	0xb3d6bf95
 8023afc:	c2af5c72 	.word	0xc2af5c72
 8023b00:	feb48e52 	.word	0xfeb48e52

08023b04 <fix32_ln22lin_q3_s2>:
 8023b04:	490d      	ldr	r1, [pc, #52]	@ (8023b3c <fix32_ln22lin_q3_s2+0x38>)
 8023b06:	1343      	asrs	r3, r0, #13
 8023b08:	f003 0304 	and.w	r3, r3, #4
 8023b0c:	eb01 0283 	add.w	r2, r1, r3, lsl #2
 8023b10:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8023b14:	6851      	ldr	r1, [r2, #4]
 8023b16:	fb10 1313 	smlabt	r3, r0, r3, r1
 8023b1a:	6891      	ldr	r1, [r2, #8]
 8023b1c:	fb10 1313 	smlabt	r3, r0, r3, r1
 8023b20:	68d2      	ldr	r2, [r2, #12]
 8023b22:	fb10 2313 	smlabt	r3, r0, r3, r2
 8023b26:	1400      	asrs	r0, r0, #16
 8023b28:	4240      	negs	r0, r0
 8023b2a:	f300 0005 	ssat	r0, #6, r0
 8023b2e:	fa43 f000 	asr.w	r0, r3, r0
 8023b32:	f300 001e 	ssat	r0, #31, r0
 8023b36:	0040      	lsls	r0, r0, #1
 8023b38:	4770      	bx	lr
 8023b3a:	bf00      	nop
 8023b3c:	080370c0 	.word	0x080370c0

08023b40 <gam_reset>:
 8023b40:	4603      	mov	r3, r0
 8023b42:	1d02      	adds	r2, r0, #4
 8023b44:	b430      	push	{r4, r5}
 8023b46:	f840 1b44 	str.w	r1, [r0], #68
 8023b4a:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 8023b4e:	4302      	orrs	r2, r0
 8023b50:	4311      	orrs	r1, r2
 8023b52:	f103 0274 	add.w	r2, r3, #116	@ 0x74
 8023b56:	430a      	orrs	r2, r1
 8023b58:	0752      	lsls	r2, r2, #29
 8023b5a:	d12b      	bne.n	8023bb4 <gam_reset+0x74>
 8023b5c:	f640 501b 	movw	r0, #3355	@ 0xd1b
 8023b60:	f640 511b 	movw	r1, #3355	@ 0xd1b
 8023b64:	f06f 149f 	mvn.w	r4, #10420383	@ 0x9f009f
 8023b68:	f06f 159f 	mvn.w	r5, #10420383	@ 0x9f009f
 8023b6c:	e9c3 4511 	strd	r4, r5, [r3, #68]	@ 0x44
 8023b70:	e9c3 451d 	strd	r4, r5, [r3, #116]	@ 0x74
 8023b74:	e9c3 4513 	strd	r4, r5, [r3, #76]	@ 0x4c
 8023b78:	e9c3 451f 	strd	r4, r5, [r3, #124]	@ 0x7c
 8023b7c:	e9c3 0101 	strd	r0, r1, [r3, #4]
 8023b80:	e9c3 0103 	strd	r0, r1, [r3, #12]
 8023b84:	e9c3 0109 	strd	r0, r1, [r3, #36]	@ 0x24
 8023b88:	e9c3 010b 	strd	r0, r1, [r3, #44]	@ 0x2c
 8023b8c:	e9c3 0105 	strd	r0, r1, [r3, #20]
 8023b90:	e9c3 0107 	strd	r0, r1, [r3, #28]
 8023b94:	e9c3 010d 	strd	r0, r1, [r3, #52]	@ 0x34
 8023b98:	e9c3 010f 	strd	r0, r1, [r3, #60]	@ 0x3c
 8023b9c:	2200      	movs	r2, #0
 8023b9e:	665a      	str	r2, [r3, #100]	@ 0x64
 8023ba0:	669a      	str	r2, [r3, #104]	@ 0x68
 8023ba2:	66da      	str	r2, [r3, #108]	@ 0x6c
 8023ba4:	671a      	str	r2, [r3, #112]	@ 0x70
 8023ba6:	655a      	str	r2, [r3, #84]	@ 0x54
 8023ba8:	659a      	str	r2, [r3, #88]	@ 0x58
 8023baa:	65da      	str	r2, [r3, #92]	@ 0x5c
 8023bac:	661a      	str	r2, [r3, #96]	@ 0x60
 8023bae:	4610      	mov	r0, r2
 8023bb0:	bc30      	pop	{r4, r5}
 8023bb2:	4770      	bx	lr
 8023bb4:	f64f 7160 	movw	r1, #65376	@ 0xff60
 8023bb8:	f640 521b 	movw	r2, #3355	@ 0xd1b
 8023bbc:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 8023bc0:	f8a3 1074 	strh.w	r1, [r3, #116]	@ 0x74
 8023bc4:	f8a3 1046 	strh.w	r1, [r3, #70]	@ 0x46
 8023bc8:	f8a3 1076 	strh.w	r1, [r3, #118]	@ 0x76
 8023bcc:	f8a3 1048 	strh.w	r1, [r3, #72]	@ 0x48
 8023bd0:	f8a3 1078 	strh.w	r1, [r3, #120]	@ 0x78
 8023bd4:	f8a3 104a 	strh.w	r1, [r3, #74]	@ 0x4a
 8023bd8:	f8a3 107a 	strh.w	r1, [r3, #122]	@ 0x7a
 8023bdc:	f8a3 104c 	strh.w	r1, [r3, #76]	@ 0x4c
 8023be0:	f8a3 107c 	strh.w	r1, [r3, #124]	@ 0x7c
 8023be4:	f8a3 104e 	strh.w	r1, [r3, #78]	@ 0x4e
 8023be8:	f8a3 107e 	strh.w	r1, [r3, #126]	@ 0x7e
 8023bec:	f8a3 1050 	strh.w	r1, [r3, #80]	@ 0x50
 8023bf0:	f8a3 1080 	strh.w	r1, [r3, #128]	@ 0x80
 8023bf4:	f8a3 1052 	strh.w	r1, [r3, #82]	@ 0x52
 8023bf8:	f8a3 1082 	strh.w	r1, [r3, #130]	@ 0x82
 8023bfc:	605a      	str	r2, [r3, #4]
 8023bfe:	625a      	str	r2, [r3, #36]	@ 0x24
 8023c00:	609a      	str	r2, [r3, #8]
 8023c02:	629a      	str	r2, [r3, #40]	@ 0x28
 8023c04:	60da      	str	r2, [r3, #12]
 8023c06:	62da      	str	r2, [r3, #44]	@ 0x2c
 8023c08:	611a      	str	r2, [r3, #16]
 8023c0a:	631a      	str	r2, [r3, #48]	@ 0x30
 8023c0c:	615a      	str	r2, [r3, #20]
 8023c0e:	635a      	str	r2, [r3, #52]	@ 0x34
 8023c10:	619a      	str	r2, [r3, #24]
 8023c12:	639a      	str	r2, [r3, #56]	@ 0x38
 8023c14:	61da      	str	r2, [r3, #28]
 8023c16:	63da      	str	r2, [r3, #60]	@ 0x3c
 8023c18:	621a      	str	r2, [r3, #32]
 8023c1a:	641a      	str	r2, [r3, #64]	@ 0x40
 8023c1c:	e7be      	b.n	8023b9c <gam_reset+0x5c>
 8023c1e:	bf00      	nop

08023c20 <gam_setConfig>:
 8023c20:	f9b0 3000 	ldrsh.w	r3, [r0]
 8023c24:	f103 02a0 	add.w	r2, r3, #160	@ 0xa0
 8023c28:	b292      	uxth	r2, r2
 8023c2a:	2aa0      	cmp	r2, #160	@ 0xa0
 8023c2c:	f200 8160 	bhi.w	8023ef0 <gam_setConfig+0x2d0>
 8023c30:	b430      	push	{r4, r5}
 8023c32:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8023c36:	2d01      	cmp	r5, #1
 8023c38:	f000 80fa 	beq.w	8023e30 <gam_setConfig+0x210>
 8023c3c:	2d00      	cmp	r5, #0
 8023c3e:	f040 8139 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023c42:	f9b1 2044 	ldrsh.w	r2, [r1, #68]	@ 0x44
 8023c46:	429a      	cmp	r2, r3
 8023c48:	d002      	beq.n	8023c50 <gam_setConfig+0x30>
 8023c4a:	2201      	movs	r2, #1
 8023c4c:	f8a1 2064 	strh.w	r2, [r1, #100]	@ 0x64
 8023c50:	f8a1 3074 	strh.w	r3, [r1, #116]	@ 0x74
 8023c54:	f8a1 3044 	strh.w	r3, [r1, #68]	@ 0x44
 8023c58:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8023c5c:	4aa6      	ldr	r2, [pc, #664]	@ (8023ef8 <gam_setConfig+0x2d8>)
 8023c5e:	f8a1 5054 	strh.w	r5, [r1, #84]	@ 0x54
 8023c62:	425b      	negs	r3, r3
 8023c64:	f104 05a0 	add.w	r5, r4, #160	@ 0xa0
 8023c68:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023c6c:	604b      	str	r3, [r1, #4]
 8023c6e:	b2ab      	uxth	r3, r5
 8023c70:	2ba0      	cmp	r3, #160	@ 0xa0
 8023c72:	f200 8139 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023c76:	f9b0 5012 	ldrsh.w	r5, [r0, #18]
 8023c7a:	2d01      	cmp	r5, #1
 8023c7c:	f000 80e3 	beq.w	8023e46 <gam_setConfig+0x226>
 8023c80:	2d00      	cmp	r5, #0
 8023c82:	f040 8117 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023c86:	f9b1 3046 	ldrsh.w	r3, [r1, #70]	@ 0x46
 8023c8a:	42a3      	cmp	r3, r4
 8023c8c:	d002      	beq.n	8023c94 <gam_setConfig+0x74>
 8023c8e:	2301      	movs	r3, #1
 8023c90:	f8a1 3066 	strh.w	r3, [r1, #102]	@ 0x66
 8023c94:	f8a1 4076 	strh.w	r4, [r1, #118]	@ 0x76
 8023c98:	f8a1 4046 	strh.w	r4, [r1, #70]	@ 0x46
 8023c9c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8023ca0:	f8a1 5056 	strh.w	r5, [r1, #86]	@ 0x56
 8023ca4:	4264      	negs	r4, r4
 8023ca6:	f103 05a0 	add.w	r5, r3, #160	@ 0xa0
 8023caa:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8023cae:	608c      	str	r4, [r1, #8]
 8023cb0:	b2ac      	uxth	r4, r5
 8023cb2:	2ca0      	cmp	r4, #160	@ 0xa0
 8023cb4:	f200 8118 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023cb8:	f9b0 5014 	ldrsh.w	r5, [r0, #20]
 8023cbc:	2d01      	cmp	r5, #1
 8023cbe:	f000 80cd 	beq.w	8023e5c <gam_setConfig+0x23c>
 8023cc2:	2d00      	cmp	r5, #0
 8023cc4:	f040 80f6 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023cc8:	f9b1 4048 	ldrsh.w	r4, [r1, #72]	@ 0x48
 8023ccc:	429c      	cmp	r4, r3
 8023cce:	d002      	beq.n	8023cd6 <gam_setConfig+0xb6>
 8023cd0:	2401      	movs	r4, #1
 8023cd2:	f8a1 4068 	strh.w	r4, [r1, #104]	@ 0x68
 8023cd6:	f8a1 3078 	strh.w	r3, [r1, #120]	@ 0x78
 8023cda:	f8a1 3048 	strh.w	r3, [r1, #72]	@ 0x48
 8023cde:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8023ce2:	f8a1 5058 	strh.w	r5, [r1, #88]	@ 0x58
 8023ce6:	425b      	negs	r3, r3
 8023ce8:	f104 05a0 	add.w	r5, r4, #160	@ 0xa0
 8023cec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023cf0:	60cb      	str	r3, [r1, #12]
 8023cf2:	b2ab      	uxth	r3, r5
 8023cf4:	2ba0      	cmp	r3, #160	@ 0xa0
 8023cf6:	f200 80f7 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023cfa:	f9b0 5016 	ldrsh.w	r5, [r0, #22]
 8023cfe:	2d01      	cmp	r5, #1
 8023d00:	f000 80b7 	beq.w	8023e72 <gam_setConfig+0x252>
 8023d04:	2d00      	cmp	r5, #0
 8023d06:	f040 80d5 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023d0a:	f9b1 304a 	ldrsh.w	r3, [r1, #74]	@ 0x4a
 8023d0e:	42a3      	cmp	r3, r4
 8023d10:	d002      	beq.n	8023d18 <gam_setConfig+0xf8>
 8023d12:	2301      	movs	r3, #1
 8023d14:	f8a1 306a 	strh.w	r3, [r1, #106]	@ 0x6a
 8023d18:	f8a1 407a 	strh.w	r4, [r1, #122]	@ 0x7a
 8023d1c:	f8a1 404a 	strh.w	r4, [r1, #74]	@ 0x4a
 8023d20:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8023d24:	f8a1 505a 	strh.w	r5, [r1, #90]	@ 0x5a
 8023d28:	4264      	negs	r4, r4
 8023d2a:	f103 05a0 	add.w	r5, r3, #160	@ 0xa0
 8023d2e:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8023d32:	610c      	str	r4, [r1, #16]
 8023d34:	b2ac      	uxth	r4, r5
 8023d36:	2ca0      	cmp	r4, #160	@ 0xa0
 8023d38:	f200 80d6 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023d3c:	f9b0 5018 	ldrsh.w	r5, [r0, #24]
 8023d40:	2d01      	cmp	r5, #1
 8023d42:	f000 80a1 	beq.w	8023e88 <gam_setConfig+0x268>
 8023d46:	2d00      	cmp	r5, #0
 8023d48:	f040 80b4 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023d4c:	f9b1 404c 	ldrsh.w	r4, [r1, #76]	@ 0x4c
 8023d50:	429c      	cmp	r4, r3
 8023d52:	d002      	beq.n	8023d5a <gam_setConfig+0x13a>
 8023d54:	2401      	movs	r4, #1
 8023d56:	f8a1 406c 	strh.w	r4, [r1, #108]	@ 0x6c
 8023d5a:	f8a1 307c 	strh.w	r3, [r1, #124]	@ 0x7c
 8023d5e:	f8a1 304c 	strh.w	r3, [r1, #76]	@ 0x4c
 8023d62:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8023d66:	f8a1 505c 	strh.w	r5, [r1, #92]	@ 0x5c
 8023d6a:	425b      	negs	r3, r3
 8023d6c:	f104 05a0 	add.w	r5, r4, #160	@ 0xa0
 8023d70:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023d74:	614b      	str	r3, [r1, #20]
 8023d76:	b2ab      	uxth	r3, r5
 8023d78:	2ba0      	cmp	r3, #160	@ 0xa0
 8023d7a:	f200 80b5 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023d7e:	f9b0 501a 	ldrsh.w	r5, [r0, #26]
 8023d82:	2d01      	cmp	r5, #1
 8023d84:	f000 808b 	beq.w	8023e9e <gam_setConfig+0x27e>
 8023d88:	2d00      	cmp	r5, #0
 8023d8a:	f040 8093 	bne.w	8023eb4 <gam_setConfig+0x294>
 8023d8e:	f9b1 304e 	ldrsh.w	r3, [r1, #78]	@ 0x4e
 8023d92:	42a3      	cmp	r3, r4
 8023d94:	d002      	beq.n	8023d9c <gam_setConfig+0x17c>
 8023d96:	2301      	movs	r3, #1
 8023d98:	f8a1 306e 	strh.w	r3, [r1, #110]	@ 0x6e
 8023d9c:	f8a1 407e 	strh.w	r4, [r1, #126]	@ 0x7e
 8023da0:	f8a1 404e 	strh.w	r4, [r1, #78]	@ 0x4e
 8023da4:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8023da8:	f8a1 505e 	strh.w	r5, [r1, #94]	@ 0x5e
 8023dac:	4264      	negs	r4, r4
 8023dae:	f103 05a0 	add.w	r5, r3, #160	@ 0xa0
 8023db2:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8023db6:	618c      	str	r4, [r1, #24]
 8023db8:	b2ac      	uxth	r4, r5
 8023dba:	2ca0      	cmp	r4, #160	@ 0xa0
 8023dbc:	f200 8094 	bhi.w	8023ee8 <gam_setConfig+0x2c8>
 8023dc0:	f9b0 501c 	ldrsh.w	r5, [r0, #28]
 8023dc4:	2d01      	cmp	r5, #1
 8023dc6:	d079      	beq.n	8023ebc <gam_setConfig+0x29c>
 8023dc8:	2d00      	cmp	r5, #0
 8023dca:	d173      	bne.n	8023eb4 <gam_setConfig+0x294>
 8023dcc:	f9b1 4050 	ldrsh.w	r4, [r1, #80]	@ 0x50
 8023dd0:	429c      	cmp	r4, r3
 8023dd2:	d002      	beq.n	8023dda <gam_setConfig+0x1ba>
 8023dd4:	2401      	movs	r4, #1
 8023dd6:	f8a1 4070 	strh.w	r4, [r1, #112]	@ 0x70
 8023dda:	f8a1 3080 	strh.w	r3, [r1, #128]	@ 0x80
 8023dde:	f8a1 3050 	strh.w	r3, [r1, #80]	@ 0x50
 8023de2:	f9b0 400e 	ldrsh.w	r4, [r0, #14]
 8023de6:	f8a1 5060 	strh.w	r5, [r1, #96]	@ 0x60
 8023dea:	425b      	negs	r3, r3
 8023dec:	f104 05a0 	add.w	r5, r4, #160	@ 0xa0
 8023df0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023df4:	61cb      	str	r3, [r1, #28]
 8023df6:	b2ab      	uxth	r3, r5
 8023df8:	2ba0      	cmp	r3, #160	@ 0xa0
 8023dfa:	d875      	bhi.n	8023ee8 <gam_setConfig+0x2c8>
 8023dfc:	f9b0 301e 	ldrsh.w	r3, [r0, #30]
 8023e00:	2b01      	cmp	r3, #1
 8023e02:	d066      	beq.n	8023ed2 <gam_setConfig+0x2b2>
 8023e04:	2b00      	cmp	r3, #0
 8023e06:	d155      	bne.n	8023eb4 <gam_setConfig+0x294>
 8023e08:	f9b1 0052 	ldrsh.w	r0, [r1, #82]	@ 0x52
 8023e0c:	f8a1 4082 	strh.w	r4, [r1, #130]	@ 0x82
 8023e10:	42a0      	cmp	r0, r4
 8023e12:	bf1c      	itt	ne
 8023e14:	2001      	movne	r0, #1
 8023e16:	f8a1 0072 	strhne.w	r0, [r1, #114]	@ 0x72
 8023e1a:	f8a1 4052 	strh.w	r4, [r1, #82]	@ 0x52
 8023e1e:	4264      	negs	r4, r4
 8023e20:	f8a1 3062 	strh.w	r3, [r1, #98]	@ 0x62
 8023e24:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 8023e28:	620b      	str	r3, [r1, #32]
 8023e2a:	2000      	movs	r0, #0
 8023e2c:	bc30      	pop	{r4, r5}
 8023e2e:	4770      	bx	lr
 8023e30:	f64f 7260 	movw	r2, #65376	@ 0xff60
 8023e34:	f8a1 3074 	strh.w	r3, [r1, #116]	@ 0x74
 8023e38:	f8a1 5064 	strh.w	r5, [r1, #100]	@ 0x64
 8023e3c:	f8a1 2044 	strh.w	r2, [r1, #68]	@ 0x44
 8023e40:	f06f 039f 	mvn.w	r3, #159	@ 0x9f
 8023e44:	e708      	b.n	8023c58 <gam_setConfig+0x38>
 8023e46:	f64f 7360 	movw	r3, #65376	@ 0xff60
 8023e4a:	f8a1 4076 	strh.w	r4, [r1, #118]	@ 0x76
 8023e4e:	f8a1 5066 	strh.w	r5, [r1, #102]	@ 0x66
 8023e52:	f8a1 3046 	strh.w	r3, [r1, #70]	@ 0x46
 8023e56:	f06f 049f 	mvn.w	r4, #159	@ 0x9f
 8023e5a:	e71f      	b.n	8023c9c <gam_setConfig+0x7c>
 8023e5c:	f64f 7460 	movw	r4, #65376	@ 0xff60
 8023e60:	f8a1 3078 	strh.w	r3, [r1, #120]	@ 0x78
 8023e64:	f8a1 5068 	strh.w	r5, [r1, #104]	@ 0x68
 8023e68:	f8a1 4048 	strh.w	r4, [r1, #72]	@ 0x48
 8023e6c:	f06f 039f 	mvn.w	r3, #159	@ 0x9f
 8023e70:	e735      	b.n	8023cde <gam_setConfig+0xbe>
 8023e72:	f64f 7360 	movw	r3, #65376	@ 0xff60
 8023e76:	f8a1 407a 	strh.w	r4, [r1, #122]	@ 0x7a
 8023e7a:	f8a1 506a 	strh.w	r5, [r1, #106]	@ 0x6a
 8023e7e:	f8a1 304a 	strh.w	r3, [r1, #74]	@ 0x4a
 8023e82:	f06f 049f 	mvn.w	r4, #159	@ 0x9f
 8023e86:	e74b      	b.n	8023d20 <gam_setConfig+0x100>
 8023e88:	f64f 7460 	movw	r4, #65376	@ 0xff60
 8023e8c:	f8a1 307c 	strh.w	r3, [r1, #124]	@ 0x7c
 8023e90:	f8a1 506c 	strh.w	r5, [r1, #108]	@ 0x6c
 8023e94:	f8a1 404c 	strh.w	r4, [r1, #76]	@ 0x4c
 8023e98:	f06f 039f 	mvn.w	r3, #159	@ 0x9f
 8023e9c:	e761      	b.n	8023d62 <gam_setConfig+0x142>
 8023e9e:	f64f 7360 	movw	r3, #65376	@ 0xff60
 8023ea2:	f8a1 407e 	strh.w	r4, [r1, #126]	@ 0x7e
 8023ea6:	f8a1 506e 	strh.w	r5, [r1, #110]	@ 0x6e
 8023eaa:	f8a1 304e 	strh.w	r3, [r1, #78]	@ 0x4e
 8023eae:	f06f 049f 	mvn.w	r4, #159	@ 0x9f
 8023eb2:	e777      	b.n	8023da4 <gam_setConfig+0x184>
 8023eb4:	f06f 0001 	mvn.w	r0, #1
 8023eb8:	bc30      	pop	{r4, r5}
 8023eba:	4770      	bx	lr
 8023ebc:	f64f 7460 	movw	r4, #65376	@ 0xff60
 8023ec0:	f8a1 3080 	strh.w	r3, [r1, #128]	@ 0x80
 8023ec4:	f8a1 5070 	strh.w	r5, [r1, #112]	@ 0x70
 8023ec8:	f8a1 4050 	strh.w	r4, [r1, #80]	@ 0x50
 8023ecc:	f06f 039f 	mvn.w	r3, #159	@ 0x9f
 8023ed0:	e787      	b.n	8023de2 <gam_setConfig+0x1c2>
 8023ed2:	f64f 7060 	movw	r0, #65376	@ 0xff60
 8023ed6:	f8a1 4082 	strh.w	r4, [r1, #130]	@ 0x82
 8023eda:	f8a1 3072 	strh.w	r3, [r1, #114]	@ 0x72
 8023ede:	f8a1 0052 	strh.w	r0, [r1, #82]	@ 0x52
 8023ee2:	f06f 049f 	mvn.w	r4, #159	@ 0x9f
 8023ee6:	e79a      	b.n	8023e1e <gam_setConfig+0x1fe>
 8023ee8:	f04f 30ff 	mov.w	r0, #4294967295
 8023eec:	bc30      	pop	{r4, r5}
 8023eee:	4770      	bx	lr
 8023ef0:	f04f 30ff 	mov.w	r0, #4294967295
 8023ef4:	4770      	bx	lr
 8023ef6:	bf00      	nop
 8023ef8:	080370e0 	.word	0x080370e0

08023efc <gam_getConfig>:
 8023efc:	1d03      	adds	r3, r0, #4
 8023efe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f00:	f101 0278 	add.w	r2, r1, #120	@ 0x78
 8023f04:	f101 0454 	add.w	r4, r1, #84	@ 0x54
 8023f08:	4290      	cmp	r0, r2
 8023f0a:	bf38      	it	cc
 8023f0c:	429c      	cmpcc	r4, r3
 8023f0e:	bf2c      	ite	cs
 8023f10:	2301      	movcs	r3, #1
 8023f12:	2300      	movcc	r3, #0
 8023f14:	f010 0f03 	tst.w	r0, #3
 8023f18:	f003 0301 	and.w	r3, r3, #1
 8023f1c:	bf18      	it	ne
 8023f1e:	2300      	movne	r3, #0
 8023f20:	b1d3      	cbz	r3, 8023f58 <gam_getConfig+0x5c>
 8023f22:	f100 0510 	add.w	r5, r0, #16
 8023f26:	f100 0314 	add.w	r3, r0, #20
 8023f2a:	4295      	cmp	r5, r2
 8023f2c:	bf38      	it	cc
 8023f2e:	429c      	cmpcc	r4, r3
 8023f30:	d312      	bcc.n	8023f58 <gam_getConfig+0x5c>
 8023f32:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
 8023f34:	6103      	str	r3, [r0, #16]
 8023f36:	6f4b      	ldr	r3, [r1, #116]	@ 0x74
 8023f38:	6003      	str	r3, [r0, #0]
 8023f3a:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
 8023f3c:	6143      	str	r3, [r0, #20]
 8023f3e:	6f8b      	ldr	r3, [r1, #120]	@ 0x78
 8023f40:	6043      	str	r3, [r0, #4]
 8023f42:	6dcb      	ldr	r3, [r1, #92]	@ 0x5c
 8023f44:	6183      	str	r3, [r0, #24]
 8023f46:	6fcb      	ldr	r3, [r1, #124]	@ 0x7c
 8023f48:	6083      	str	r3, [r0, #8]
 8023f4a:	6e0b      	ldr	r3, [r1, #96]	@ 0x60
 8023f4c:	61c3      	str	r3, [r0, #28]
 8023f4e:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
 8023f52:	60c3      	str	r3, [r0, #12]
 8023f54:	2000      	movs	r0, #0
 8023f56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f58:	f8b1 4054 	ldrh.w	r4, [r1, #84]	@ 0x54
 8023f5c:	f8b1 2074 	ldrh.w	r2, [r1, #116]	@ 0x74
 8023f60:	f8b1 3056 	ldrh.w	r3, [r1, #86]	@ 0x56
 8023f64:	f8b1 7076 	ldrh.w	r7, [r1, #118]	@ 0x76
 8023f68:	f8b1 6058 	ldrh.w	r6, [r1, #88]	@ 0x58
 8023f6c:	f8b1 5078 	ldrh.w	r5, [r1, #120]	@ 0x78
 8023f70:	8204      	strh	r4, [r0, #16]
 8023f72:	f8b1 405a 	ldrh.w	r4, [r1, #90]	@ 0x5a
 8023f76:	8002      	strh	r2, [r0, #0]
 8023f78:	f8b1 207a 	ldrh.w	r2, [r1, #122]	@ 0x7a
 8023f7c:	8243      	strh	r3, [r0, #18]
 8023f7e:	f8b1 305c 	ldrh.w	r3, [r1, #92]	@ 0x5c
 8023f82:	f8b1 e07c 	ldrh.w	lr, [r1, #124]	@ 0x7c
 8023f86:	8047      	strh	r7, [r0, #2]
 8023f88:	8286      	strh	r6, [r0, #20]
 8023f8a:	f8b1 705e 	ldrh.w	r7, [r1, #94]	@ 0x5e
 8023f8e:	f8b1 607e 	ldrh.w	r6, [r1, #126]	@ 0x7e
 8023f92:	8085      	strh	r5, [r0, #4]
 8023f94:	82c4      	strh	r4, [r0, #22]
 8023f96:	f8b1 5060 	ldrh.w	r5, [r1, #96]	@ 0x60
 8023f9a:	f8b1 4080 	ldrh.w	r4, [r1, #128]	@ 0x80
 8023f9e:	80c2      	strh	r2, [r0, #6]
 8023fa0:	8303      	strh	r3, [r0, #24]
 8023fa2:	f8b1 2062 	ldrh.w	r2, [r1, #98]	@ 0x62
 8023fa6:	f8b1 3082 	ldrh.w	r3, [r1, #130]	@ 0x82
 8023faa:	81c3      	strh	r3, [r0, #14]
 8023fac:	f8a0 e008 	strh.w	lr, [r0, #8]
 8023fb0:	8347      	strh	r7, [r0, #26]
 8023fb2:	8146      	strh	r6, [r0, #10]
 8023fb4:	8385      	strh	r5, [r0, #28]
 8023fb6:	8184      	strh	r4, [r0, #12]
 8023fb8:	83c2      	strh	r2, [r0, #30]
 8023fba:	2000      	movs	r0, #0
 8023fbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023fbe:	bf00      	nop

08023fc0 <gam_process>:
 8023fc0:	6843      	ldr	r3, [r0, #4]
 8023fc2:	2b04      	cmp	r3, #4
 8023fc4:	f040 81ec 	bne.w	80243a0 <gam_process+0x3e0>
 8023fc8:	684b      	ldr	r3, [r1, #4]
 8023fca:	2b04      	cmp	r3, #4
 8023fcc:	f040 81e8 	bne.w	80243a0 <gam_process+0x3e0>
 8023fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fd4:	6903      	ldr	r3, [r0, #16]
 8023fd6:	688f      	ldr	r7, [r1, #8]
 8023fd8:	6805      	ldr	r5, [r0, #0]
 8023fda:	6886      	ldr	r6, [r0, #8]
 8023fdc:	b08f      	sub	sp, #60	@ 0x3c
 8023fde:	2b01      	cmp	r3, #1
 8023fe0:	4614      	mov	r4, r2
 8023fe2:	9005      	str	r0, [sp, #20]
 8023fe4:	4602      	mov	r2, r0
 8023fe6:	f000 81cc 	beq.w	8024382 <gam_process+0x3c2>
 8023fea:	2d01      	cmp	r5, #1
 8023fec:	bf18      	it	ne
 8023fee:	f06f 0003 	mvnne.w	r0, #3
 8023ff2:	f040 8163 	bne.w	80242bc <gam_process+0x2fc>
 8023ff6:	f8d2 800c 	ldr.w	r8, [r2, #12]
 8023ffa:	2d01      	cmp	r5, #1
 8023ffc:	462a      	mov	r2, r5
 8023ffe:	bfb8      	it	lt
 8024000:	2201      	movlt	r2, #1
 8024002:	0092      	lsls	r2, r2, #2
 8024004:	2100      	movs	r1, #0
 8024006:	a806      	add	r0, sp, #24
 8024008:	f009 fda4 	bl	802db54 <memset>
 802400c:	f9b4 3064 	ldrsh.w	r3, [r4, #100]	@ 0x64
 8024010:	2b00      	cmp	r3, #0
 8024012:	f040 81ae 	bne.w	8024372 <gam_process+0x3b2>
 8024016:	2d01      	cmp	r5, #1
 8024018:	dd2e      	ble.n	8024078 <gam_process+0xb8>
 802401a:	f9b4 3066 	ldrsh.w	r3, [r4, #102]	@ 0x66
 802401e:	2b00      	cmp	r3, #0
 8024020:	f040 819f 	bne.w	8024362 <gam_process+0x3a2>
 8024024:	2d02      	cmp	r5, #2
 8024026:	d027      	beq.n	8024078 <gam_process+0xb8>
 8024028:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	@ 0x68
 802402c:	2b00      	cmp	r3, #0
 802402e:	f040 8190 	bne.w	8024352 <gam_process+0x392>
 8024032:	2d03      	cmp	r5, #3
 8024034:	d020      	beq.n	8024078 <gam_process+0xb8>
 8024036:	f9b4 306a 	ldrsh.w	r3, [r4, #106]	@ 0x6a
 802403a:	2b00      	cmp	r3, #0
 802403c:	f040 8181 	bne.w	8024342 <gam_process+0x382>
 8024040:	2d04      	cmp	r5, #4
 8024042:	d019      	beq.n	8024078 <gam_process+0xb8>
 8024044:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 8024048:	2b00      	cmp	r3, #0
 802404a:	f040 8172 	bne.w	8024332 <gam_process+0x372>
 802404e:	2d05      	cmp	r5, #5
 8024050:	d012      	beq.n	8024078 <gam_process+0xb8>
 8024052:	f9b4 306e 	ldrsh.w	r3, [r4, #110]	@ 0x6e
 8024056:	2b00      	cmp	r3, #0
 8024058:	f040 8163 	bne.w	8024322 <gam_process+0x362>
 802405c:	2d06      	cmp	r5, #6
 802405e:	d00b      	beq.n	8024078 <gam_process+0xb8>
 8024060:	f9b4 3070 	ldrsh.w	r3, [r4, #112]	@ 0x70
 8024064:	2b00      	cmp	r3, #0
 8024066:	f040 8154 	bne.w	8024312 <gam_process+0x352>
 802406a:	2d07      	cmp	r5, #7
 802406c:	d004      	beq.n	8024078 <gam_process+0xb8>
 802406e:	f9b4 3072 	ldrsh.w	r3, [r4, #114]	@ 0x72
 8024072:	2b00      	cmp	r3, #0
 8024074:	f040 8145 	bne.w	8024302 <gam_process+0x342>
 8024078:	f1b8 0f00 	cmp.w	r8, #0
 802407c:	f340 80b0 	ble.w	80241e0 <gam_process+0x220>
 8024080:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024082:	9300      	str	r3, [sp, #0]
 8024084:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024086:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802408a:	9301      	str	r3, [sp, #4]
 802408c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802408e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024090:	f8dd e018 	ldr.w	lr, [sp, #24]
 8024094:	9302      	str	r3, [sp, #8]
 8024096:	2100      	movs	r1, #0
 8024098:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802409a:	f8dd b020 	ldr.w	fp, [sp, #32]
 802409e:	f8cd e010 	str.w	lr, [sp, #16]
 80240a2:	9303      	str	r3, [sp, #12]
 80240a4:	4608      	mov	r0, r1
 80240a6:	46e2      	mov	sl, ip
 80240a8:	4696      	mov	lr, r2
 80240aa:	2d00      	cmp	r5, #0
 80240ac:	f340 8091 	ble.w	80241d2 <gam_process+0x212>
 80240b0:	f856 3021 	ldr.w	r3, [r6, r1, lsl #2]
 80240b4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80240b6:	fb53 f312 	smmulr	r3, r3, r2
 80240ba:	019b      	lsls	r3, r3, #6
 80240bc:	f303 031e 	ssat	r3, #31, r3
 80240c0:	005b      	lsls	r3, r3, #1
 80240c2:	f847 3021 	str.w	r3, [r7, r1, lsl #2]
 80240c6:	9a04      	ldr	r2, [sp, #16]
 80240c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80240ca:	2d01      	cmp	r5, #1
 80240cc:	4413      	add	r3, r2
 80240ce:	f101 0c01 	add.w	ip, r1, #1
 80240d2:	6263      	str	r3, [r4, #36]	@ 0x24
 80240d4:	d07d      	beq.n	80241d2 <gam_process+0x212>
 80240d6:	f856 302c 	ldr.w	r3, [r6, ip, lsl #2]
 80240da:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80240dc:	fb53 f312 	smmulr	r3, r3, r2
 80240e0:	019b      	lsls	r3, r3, #6
 80240e2:	f303 031e 	ssat	r3, #31, r3
 80240e6:	005b      	lsls	r3, r3, #1
 80240e8:	f847 302c 	str.w	r3, [r7, ip, lsl #2]
 80240ec:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80240ee:	2d02      	cmp	r5, #2
 80240f0:	4453      	add	r3, sl
 80240f2:	f101 0902 	add.w	r9, r1, #2
 80240f6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80240f8:	d06b      	beq.n	80241d2 <gam_process+0x212>
 80240fa:	f856 3029 	ldr.w	r3, [r6, r9, lsl #2]
 80240fe:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8024100:	fb53 f312 	smmulr	r3, r3, r2
 8024104:	019b      	lsls	r3, r3, #6
 8024106:	f303 031e 	ssat	r3, #31, r3
 802410a:	005b      	lsls	r3, r3, #1
 802410c:	f847 3029 	str.w	r3, [r7, r9, lsl #2]
 8024110:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8024112:	2d03      	cmp	r5, #3
 8024114:	445b      	add	r3, fp
 8024116:	f101 0c03 	add.w	ip, r1, #3
 802411a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802411c:	d059      	beq.n	80241d2 <gam_process+0x212>
 802411e:	f856 302c 	ldr.w	r3, [r6, ip, lsl #2]
 8024122:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8024124:	fb53 f312 	smmulr	r3, r3, r2
 8024128:	019b      	lsls	r3, r3, #6
 802412a:	f303 031e 	ssat	r3, #31, r3
 802412e:	005b      	lsls	r3, r3, #1
 8024130:	f847 302c 	str.w	r3, [r7, ip, lsl #2]
 8024134:	9a00      	ldr	r2, [sp, #0]
 8024136:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8024138:	2d04      	cmp	r5, #4
 802413a:	4413      	add	r3, r2
 802413c:	f101 0904 	add.w	r9, r1, #4
 8024140:	6323      	str	r3, [r4, #48]	@ 0x30
 8024142:	d046      	beq.n	80241d2 <gam_process+0x212>
 8024144:	f856 3029 	ldr.w	r3, [r6, r9, lsl #2]
 8024148:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 802414a:	fb53 f312 	smmulr	r3, r3, r2
 802414e:	019b      	lsls	r3, r3, #6
 8024150:	f303 031e 	ssat	r3, #31, r3
 8024154:	005b      	lsls	r3, r3, #1
 8024156:	f847 3029 	str.w	r3, [r7, r9, lsl #2]
 802415a:	9a01      	ldr	r2, [sp, #4]
 802415c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802415e:	2d05      	cmp	r5, #5
 8024160:	4413      	add	r3, r2
 8024162:	f101 0c05 	add.w	ip, r1, #5
 8024166:	6363      	str	r3, [r4, #52]	@ 0x34
 8024168:	d033      	beq.n	80241d2 <gam_process+0x212>
 802416a:	f856 302c 	ldr.w	r3, [r6, ip, lsl #2]
 802416e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8024170:	fb53 f312 	smmulr	r3, r3, r2
 8024174:	019b      	lsls	r3, r3, #6
 8024176:	f303 031e 	ssat	r3, #31, r3
 802417a:	005b      	lsls	r3, r3, #1
 802417c:	f847 302c 	str.w	r3, [r7, ip, lsl #2]
 8024180:	9a02      	ldr	r2, [sp, #8]
 8024182:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8024184:	2d06      	cmp	r5, #6
 8024186:	4413      	add	r3, r2
 8024188:	f101 0906 	add.w	r9, r1, #6
 802418c:	63a3      	str	r3, [r4, #56]	@ 0x38
 802418e:	d020      	beq.n	80241d2 <gam_process+0x212>
 8024190:	f856 3029 	ldr.w	r3, [r6, r9, lsl #2]
 8024194:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8024196:	fb53 f312 	smmulr	r3, r3, r2
 802419a:	019b      	lsls	r3, r3, #6
 802419c:	f303 031e 	ssat	r3, #31, r3
 80241a0:	005b      	lsls	r3, r3, #1
 80241a2:	f847 3029 	str.w	r3, [r7, r9, lsl #2]
 80241a6:	9a03      	ldr	r2, [sp, #12]
 80241a8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80241aa:	2d08      	cmp	r5, #8
 80241ac:	4413      	add	r3, r2
 80241ae:	f101 0c07 	add.w	ip, r1, #7
 80241b2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80241b4:	d10d      	bne.n	80241d2 <gam_process+0x212>
 80241b6:	f856 302c 	ldr.w	r3, [r6, ip, lsl #2]
 80241ba:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80241bc:	fb53 f312 	smmulr	r3, r3, r2
 80241c0:	019b      	lsls	r3, r3, #6
 80241c2:	f303 031e 	ssat	r3, #31, r3
 80241c6:	005b      	lsls	r3, r3, #1
 80241c8:	f847 302c 	str.w	r3, [r7, ip, lsl #2]
 80241cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80241ce:	4473      	add	r3, lr
 80241d0:	6423      	str	r3, [r4, #64]	@ 0x40
 80241d2:	3001      	adds	r0, #1
 80241d4:	4540      	cmp	r0, r8
 80241d6:	4429      	add	r1, r5
 80241d8:	f47f af67 	bne.w	80240aa <gam_process+0xea>
 80241dc:	9b05      	ldr	r3, [sp, #20]
 80241de:	681d      	ldr	r5, [r3, #0]
 80241e0:	2d00      	cmp	r5, #0
 80241e2:	dd6a      	ble.n	80242ba <gam_process+0x2fa>
 80241e4:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	@ 0x54
 80241e8:	f9b4 2064 	ldrsh.w	r2, [r4, #100]	@ 0x64
 80241ec:	2b01      	cmp	r3, #1
 80241ee:	bf0a      	itet	eq
 80241f0:	2300      	moveq	r3, #0
 80241f2:	6863      	ldrne	r3, [r4, #4]
 80241f4:	6063      	streq	r3, [r4, #4]
 80241f6:	6263      	str	r3, [r4, #36]	@ 0x24
 80241f8:	2a00      	cmp	r2, #0
 80241fa:	d17e      	bne.n	80242fa <gam_process+0x33a>
 80241fc:	2d01      	cmp	r5, #1
 80241fe:	d05c      	beq.n	80242ba <gam_process+0x2fa>
 8024200:	f9b4 3056 	ldrsh.w	r3, [r4, #86]	@ 0x56
 8024204:	f9b4 2066 	ldrsh.w	r2, [r4, #102]	@ 0x66
 8024208:	2b01      	cmp	r3, #1
 802420a:	bf0a      	itet	eq
 802420c:	2300      	moveq	r3, #0
 802420e:	68a3      	ldrne	r3, [r4, #8]
 8024210:	60a3      	streq	r3, [r4, #8]
 8024212:	62a3      	str	r3, [r4, #40]	@ 0x28
 8024214:	2a00      	cmp	r2, #0
 8024216:	d16c      	bne.n	80242f2 <gam_process+0x332>
 8024218:	2d02      	cmp	r5, #2
 802421a:	d04e      	beq.n	80242ba <gam_process+0x2fa>
 802421c:	f9b4 3058 	ldrsh.w	r3, [r4, #88]	@ 0x58
 8024220:	f9b4 2068 	ldrsh.w	r2, [r4, #104]	@ 0x68
 8024224:	2b01      	cmp	r3, #1
 8024226:	bf0a      	itet	eq
 8024228:	2300      	moveq	r3, #0
 802422a:	68e3      	ldrne	r3, [r4, #12]
 802422c:	60e3      	streq	r3, [r4, #12]
 802422e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8024230:	2a00      	cmp	r2, #0
 8024232:	d15a      	bne.n	80242ea <gam_process+0x32a>
 8024234:	2d03      	cmp	r5, #3
 8024236:	d040      	beq.n	80242ba <gam_process+0x2fa>
 8024238:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 802423c:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	@ 0x6a
 8024240:	2b01      	cmp	r3, #1
 8024242:	bf0a      	itet	eq
 8024244:	2300      	moveq	r3, #0
 8024246:	6923      	ldrne	r3, [r4, #16]
 8024248:	6123      	streq	r3, [r4, #16]
 802424a:	6323      	str	r3, [r4, #48]	@ 0x30
 802424c:	2a00      	cmp	r2, #0
 802424e:	d148      	bne.n	80242e2 <gam_process+0x322>
 8024250:	2d04      	cmp	r5, #4
 8024252:	d032      	beq.n	80242ba <gam_process+0x2fa>
 8024254:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8024258:	f9b4 206c 	ldrsh.w	r2, [r4, #108]	@ 0x6c
 802425c:	2b01      	cmp	r3, #1
 802425e:	bf0a      	itet	eq
 8024260:	2300      	moveq	r3, #0
 8024262:	6963      	ldrne	r3, [r4, #20]
 8024264:	6163      	streq	r3, [r4, #20]
 8024266:	6363      	str	r3, [r4, #52]	@ 0x34
 8024268:	2a00      	cmp	r2, #0
 802426a:	d136      	bne.n	80242da <gam_process+0x31a>
 802426c:	2d05      	cmp	r5, #5
 802426e:	d024      	beq.n	80242ba <gam_process+0x2fa>
 8024270:	f9b4 305e 	ldrsh.w	r3, [r4, #94]	@ 0x5e
 8024274:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 8024278:	2b01      	cmp	r3, #1
 802427a:	bf0a      	itet	eq
 802427c:	2300      	moveq	r3, #0
 802427e:	69a3      	ldrne	r3, [r4, #24]
 8024280:	61a3      	streq	r3, [r4, #24]
 8024282:	63a3      	str	r3, [r4, #56]	@ 0x38
 8024284:	bb2a      	cbnz	r2, 80242d2 <gam_process+0x312>
 8024286:	2d06      	cmp	r5, #6
 8024288:	d017      	beq.n	80242ba <gam_process+0x2fa>
 802428a:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	@ 0x60
 802428e:	f9b4 2070 	ldrsh.w	r2, [r4, #112]	@ 0x70
 8024292:	2b01      	cmp	r3, #1
 8024294:	bf0a      	itet	eq
 8024296:	2300      	moveq	r3, #0
 8024298:	69e3      	ldrne	r3, [r4, #28]
 802429a:	61e3      	streq	r3, [r4, #28]
 802429c:	63e3      	str	r3, [r4, #60]	@ 0x3c
 802429e:	b9a2      	cbnz	r2, 80242ca <gam_process+0x30a>
 80242a0:	2d07      	cmp	r5, #7
 80242a2:	d00a      	beq.n	80242ba <gam_process+0x2fa>
 80242a4:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	@ 0x62
 80242a8:	f9b4 2072 	ldrsh.w	r2, [r4, #114]	@ 0x72
 80242ac:	2b01      	cmp	r3, #1
 80242ae:	bf0a      	itet	eq
 80242b0:	2300      	moveq	r3, #0
 80242b2:	6a23      	ldrne	r3, [r4, #32]
 80242b4:	6223      	streq	r3, [r4, #32]
 80242b6:	6423      	str	r3, [r4, #64]	@ 0x40
 80242b8:	b91a      	cbnz	r2, 80242c2 <gam_process+0x302>
 80242ba:	2000      	movs	r0, #0
 80242bc:	b00f      	add	sp, #60	@ 0x3c
 80242be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242c2:	2300      	movs	r3, #0
 80242c4:	f8a4 3072 	strh.w	r3, [r4, #114]	@ 0x72
 80242c8:	e7f7      	b.n	80242ba <gam_process+0x2fa>
 80242ca:	2300      	movs	r3, #0
 80242cc:	f8a4 3070 	strh.w	r3, [r4, #112]	@ 0x70
 80242d0:	e7e6      	b.n	80242a0 <gam_process+0x2e0>
 80242d2:	2300      	movs	r3, #0
 80242d4:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
 80242d8:	e7d5      	b.n	8024286 <gam_process+0x2c6>
 80242da:	2300      	movs	r3, #0
 80242dc:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
 80242e0:	e7c4      	b.n	802426c <gam_process+0x2ac>
 80242e2:	2300      	movs	r3, #0
 80242e4:	f8a4 306a 	strh.w	r3, [r4, #106]	@ 0x6a
 80242e8:	e7b2      	b.n	8024250 <gam_process+0x290>
 80242ea:	2300      	movs	r3, #0
 80242ec:	f8a4 3068 	strh.w	r3, [r4, #104]	@ 0x68
 80242f0:	e7a0      	b.n	8024234 <gam_process+0x274>
 80242f2:	2300      	movs	r3, #0
 80242f4:	f8a4 3066 	strh.w	r3, [r4, #102]	@ 0x66
 80242f8:	e78e      	b.n	8024218 <gam_process+0x258>
 80242fa:	2300      	movs	r3, #0
 80242fc:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 8024300:	e77c      	b.n	80241fc <gam_process+0x23c>
 8024302:	6a23      	ldr	r3, [r4, #32]
 8024304:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8024306:	1a9b      	subs	r3, r3, r2
 8024308:	bf18      	it	ne
 802430a:	fb93 f3f8 	sdivne	r3, r3, r8
 802430e:	930d      	str	r3, [sp, #52]	@ 0x34
 8024310:	e6b2      	b.n	8024078 <gam_process+0xb8>
 8024312:	69e3      	ldr	r3, [r4, #28]
 8024314:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8024316:	1a9b      	subs	r3, r3, r2
 8024318:	bf18      	it	ne
 802431a:	fb93 f3f8 	sdivne	r3, r3, r8
 802431e:	930c      	str	r3, [sp, #48]	@ 0x30
 8024320:	e6a3      	b.n	802406a <gam_process+0xaa>
 8024322:	69a3      	ldr	r3, [r4, #24]
 8024324:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8024326:	1a9b      	subs	r3, r3, r2
 8024328:	bf18      	it	ne
 802432a:	fb93 f3f8 	sdivne	r3, r3, r8
 802432e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024330:	e694      	b.n	802405c <gam_process+0x9c>
 8024332:	6963      	ldr	r3, [r4, #20]
 8024334:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8024336:	1a9b      	subs	r3, r3, r2
 8024338:	bf18      	it	ne
 802433a:	fb93 f3f8 	sdivne	r3, r3, r8
 802433e:	930a      	str	r3, [sp, #40]	@ 0x28
 8024340:	e685      	b.n	802404e <gam_process+0x8e>
 8024342:	6923      	ldr	r3, [r4, #16]
 8024344:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8024346:	1a9b      	subs	r3, r3, r2
 8024348:	bf18      	it	ne
 802434a:	fb93 f3f8 	sdivne	r3, r3, r8
 802434e:	9309      	str	r3, [sp, #36]	@ 0x24
 8024350:	e676      	b.n	8024040 <gam_process+0x80>
 8024352:	68e3      	ldr	r3, [r4, #12]
 8024354:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8024356:	1a9b      	subs	r3, r3, r2
 8024358:	bf18      	it	ne
 802435a:	fb93 f3f8 	sdivne	r3, r3, r8
 802435e:	9308      	str	r3, [sp, #32]
 8024360:	e667      	b.n	8024032 <gam_process+0x72>
 8024362:	68a3      	ldr	r3, [r4, #8]
 8024364:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8024366:	1a9b      	subs	r3, r3, r2
 8024368:	bf18      	it	ne
 802436a:	fb93 f3f8 	sdivne	r3, r3, r8
 802436e:	9307      	str	r3, [sp, #28]
 8024370:	e658      	b.n	8024024 <gam_process+0x64>
 8024372:	6863      	ldr	r3, [r4, #4]
 8024374:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8024376:	1a9b      	subs	r3, r3, r2
 8024378:	bf18      	it	ne
 802437a:	fb93 f3f8 	sdivne	r3, r3, r8
 802437e:	9306      	str	r3, [sp, #24]
 8024380:	e649      	b.n	8024016 <gam_process+0x56>
 8024382:	2d08      	cmp	r5, #8
 8024384:	dc09      	bgt.n	802439a <gam_process+0x3da>
 8024386:	2d00      	cmp	r5, #0
 8024388:	f8d0 800c 	ldr.w	r8, [r0, #12]
 802438c:	f73f ae35 	bgt.w	8023ffa <gam_process+0x3a>
 8024390:	f1b8 0f00 	cmp.w	r8, #0
 8024394:	f73f ae74 	bgt.w	8024080 <gam_process+0xc0>
 8024398:	e78f      	b.n	80242ba <gam_process+0x2fa>
 802439a:	f06f 0004 	mvn.w	r0, #4
 802439e:	e78d      	b.n	80242bc <gam_process+0x2fc>
 80243a0:	f06f 0002 	mvn.w	r0, #2
 80243a4:	4770      	bx	lr
 80243a6:	bf00      	nop

080243a8 <greq_reset>:
 80243a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80243ac:	4604      	mov	r4, r0
 80243ae:	2500      	movs	r5, #0
 80243b0:	2201      	movs	r2, #1
 80243b2:	2608      	movs	r6, #8
 80243b4:	6021      	str	r1, [r4, #0]
 80243b6:	f8a4 2204 	strh.w	r2, [r4, #516]	@ 0x204
 80243ba:	f8a4 521a 	strh.w	r5, [r4, #538]	@ 0x21a
 80243be:	f8c4 5206 	str.w	r5, [r4, #518]	@ 0x206
 80243c2:	f8a4 621c 	strh.w	r6, [r4, #540]	@ 0x21c
 80243c6:	4b4d      	ldr	r3, [pc, #308]	@ (80244fc <greq_reset+0x154>)
 80243c8:	f8c4 520a 	str.w	r5, [r4, #522]	@ 0x20a
 80243cc:	f8c4 520e 	str.w	r5, [r4, #526]	@ 0x20e
 80243d0:	f8c4 5212 	str.w	r5, [r4, #530]	@ 0x212
 80243d4:	6062      	str	r2, [r4, #4]
 80243d6:	fb33 f305 	smulwb	r3, r3, r5
 80243da:	4849      	ldr	r0, [pc, #292]	@ (8024500 <greq_reset+0x158>)
 80243dc:	4949      	ldr	r1, [pc, #292]	@ (8024504 <greq_reset+0x15c>)
 80243de:	f303 031e 	ssat	r3, #31, r3
 80243e2:	4093      	lsls	r3, r2
 80243e4:	60a3      	str	r3, [r4, #8]
 80243e6:	6162      	str	r2, [r4, #20]
 80243e8:	60e0      	str	r0, [r4, #12]
 80243ea:	6121      	str	r1, [r4, #16]
 80243ec:	4b46      	ldr	r3, [pc, #280]	@ (8024508 <greq_reset+0x160>)
 80243ee:	fb33 f305 	smulwb	r3, r3, r5
 80243f2:	4846      	ldr	r0, [pc, #280]	@ (802450c <greq_reset+0x164>)
 80243f4:	4946      	ldr	r1, [pc, #280]	@ (8024510 <greq_reset+0x168>)
 80243f6:	f303 031e 	ssat	r3, #31, r3
 80243fa:	4093      	lsls	r3, r2
 80243fc:	61a3      	str	r3, [r4, #24]
 80243fe:	6262      	str	r2, [r4, #36]	@ 0x24
 8024400:	61e0      	str	r0, [r4, #28]
 8024402:	6221      	str	r1, [r4, #32]
 8024404:	4b43      	ldr	r3, [pc, #268]	@ (8024514 <greq_reset+0x16c>)
 8024406:	fb33 f305 	smulwb	r3, r3, r5
 802440a:	f1a0 70e8 	sub.w	r0, r0, #30408704	@ 0x1d00000
 802440e:	f5a0 30ae 	sub.w	r0, r0, #89088	@ 0x15c00
 8024412:	383b      	subs	r0, #59	@ 0x3b
 8024414:	4940      	ldr	r1, [pc, #256]	@ (8024518 <greq_reset+0x170>)
 8024416:	f303 031e 	ssat	r3, #31, r3
 802441a:	4093      	lsls	r3, r2
 802441c:	62a3      	str	r3, [r4, #40]	@ 0x28
 802441e:	6362      	str	r2, [r4, #52]	@ 0x34
 8024420:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8024422:	6321      	str	r1, [r4, #48]	@ 0x30
 8024424:	4b3d      	ldr	r3, [pc, #244]	@ (802451c <greq_reset+0x174>)
 8024426:	fb33 f305 	smulwb	r3, r3, r5
 802442a:	f1a0 7074 	sub.w	r0, r0, #63963136	@ 0x3d00000
 802442e:	f5a0 3022 	sub.w	r0, r0, #165888	@ 0x28800
 8024432:	3872      	subs	r0, #114	@ 0x72
 8024434:	493a      	ldr	r1, [pc, #232]	@ (8024520 <greq_reset+0x178>)
 8024436:	f303 031e 	ssat	r3, #31, r3
 802443a:	4093      	lsls	r3, r2
 802443c:	63a3      	str	r3, [r4, #56]	@ 0x38
 802443e:	6462      	str	r2, [r4, #68]	@ 0x44
 8024440:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8024442:	6421      	str	r1, [r4, #64]	@ 0x40
 8024444:	4b37      	ldr	r3, [pc, #220]	@ (8024524 <greq_reset+0x17c>)
 8024446:	fb33 f305 	smulwb	r3, r3, r5
 802444a:	f1a0 6002 	sub.w	r0, r0, #136314880	@ 0x8200000
 802444e:	f5a0 2064 	sub.w	r0, r0, #933888	@ 0xe4000
 8024452:	f6a0 5077 	subw	r0, r0, #3447	@ 0xd77
 8024456:	4934      	ldr	r1, [pc, #208]	@ (8024528 <greq_reset+0x180>)
 8024458:	f303 031e 	ssat	r3, #31, r3
 802445c:	4093      	lsls	r3, r2
 802445e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8024460:	6562      	str	r2, [r4, #84]	@ 0x54
 8024462:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8024464:	6521      	str	r1, [r4, #80]	@ 0x50
 8024466:	4b31      	ldr	r3, [pc, #196]	@ (802452c <greq_reset+0x184>)
 8024468:	fb33 f305 	smulwb	r3, r3, r5
 802446c:	4930      	ldr	r1, [pc, #192]	@ (8024530 <greq_reset+0x188>)
 802446e:	4a31      	ldr	r2, [pc, #196]	@ (8024534 <greq_reset+0x18c>)
 8024470:	f303 031e 	ssat	r3, #31, r3
 8024474:	005b      	lsls	r3, r3, #1
 8024476:	65a3      	str	r3, [r4, #88]	@ 0x58
 8024478:	6665      	str	r5, [r4, #100]	@ 0x64
 802447a:	65e1      	str	r1, [r4, #92]	@ 0x5c
 802447c:	6622      	str	r2, [r4, #96]	@ 0x60
 802447e:	4b2e      	ldr	r3, [pc, #184]	@ (8024538 <greq_reset+0x190>)
 8024480:	fb33 f305 	smulwb	r3, r3, r5
 8024484:	f101 5188 	add.w	r1, r1, #285212672	@ 0x11000000
 8024488:	f501 2161 	add.w	r1, r1, #921600	@ 0xe1000
 802448c:	f501 61be 	add.w	r1, r1, #1520	@ 0x5f0
 8024490:	4a2a      	ldr	r2, [pc, #168]	@ (802453c <greq_reset+0x194>)
 8024492:	f303 031e 	ssat	r3, #31, r3
 8024496:	005b      	lsls	r3, r3, #1
 8024498:	66a3      	str	r3, [r4, #104]	@ 0x68
 802449a:	6765      	str	r5, [r4, #116]	@ 0x74
 802449c:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802449e:	6722      	str	r2, [r4, #112]	@ 0x70
 80244a0:	4b27      	ldr	r3, [pc, #156]	@ (8024540 <greq_reset+0x198>)
 80244a2:	fb33 f305 	smulwb	r3, r3, r5
 80244a6:	f04f 0880 	mov.w	r8, #128	@ 0x80
 80244aa:	f104 0aa4 	add.w	sl, r4, #164	@ 0xa4
 80244ae:	f104 0904 	add.w	r9, r4, #4
 80244b2:	4924      	ldr	r1, [pc, #144]	@ (8024544 <greq_reset+0x19c>)
 80244b4:	4a24      	ldr	r2, [pc, #144]	@ (8024548 <greq_reset+0x1a0>)
 80244b6:	f303 031e 	ssat	r3, #31, r3
 80244ba:	005b      	lsls	r3, r3, #1
 80244bc:	67a3      	str	r3, [r4, #120]	@ 0x78
 80244be:	67e1      	str	r1, [r4, #124]	@ 0x7c
 80244c0:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
 80244c4:	4629      	mov	r1, r5
 80244c6:	4642      	mov	r2, r8
 80244c8:	f504 77a2 	add.w	r7, r4, #324	@ 0x144
 80244cc:	f8c4 61e4 	str.w	r6, [r4, #484]	@ 0x1e4
 80244d0:	4650      	mov	r0, sl
 80244d2:	f8c4 91ec 	str.w	r9, [r4, #492]	@ 0x1ec
 80244d6:	f009 fb3d 	bl	802db54 <memset>
 80244da:	f8c4 a1e8 	str.w	sl, [r4, #488]	@ 0x1e8
 80244de:	f8c4 91fc 	str.w	r9, [r4, #508]	@ 0x1fc
 80244e2:	f8c4 61f4 	str.w	r6, [r4, #500]	@ 0x1f4
 80244e6:	4642      	mov	r2, r8
 80244e8:	4638      	mov	r0, r7
 80244ea:	4629      	mov	r1, r5
 80244ec:	f009 fb32 	bl	802db54 <memset>
 80244f0:	f8c4 71f8 	str.w	r7, [r4, #504]	@ 0x1f8
 80244f4:	4628      	mov	r0, r5
 80244f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80244fa:	bf00      	nop
 80244fc:	006a8861 	.word	0x006a8861
 8024500:	7f28253e 	.word	0x7f28253e
 8024504:	c0d510c2 	.word	0xc0d510c2
 8024508:	00d6cdc7 	.word	0x00d6cdc7
 802450c:	7e46f9d4 	.word	0x7e46f9d4
 8024510:	c1ad9b8e 	.word	0xc1ad9b8e
 8024514:	01adff1f 	.word	0x01adff1f
 8024518:	c35bfe3e 	.word	0xc35bfe3e
 802451c:	03514ff0 	.word	0x03514ff0
 8024520:	c6a29fe0 	.word	0xc6a29fe0
 8024524:	065a9411 	.word	0x065a9411
 8024528:	ccb52822 	.word	0xccb52822
 802452c:	0b74bfa5 	.word	0x0b74bfa5
 8024530:	5e9216de 	.word	0x5e9216de
 8024534:	d6e97f4a 	.word	0xd6e97f4a
 8024538:	24594105 	.word	0x24594105
 802453c:	c8b28209 	.word	0xc8b28209
 8024540:	2978f49a 	.word	0x2978f49a
 8024544:	ceb82b3b 	.word	0xceb82b3b
 8024548:	d2f1e935 	.word	0xd2f1e935

0802454c <greq_setConfig>:
 802454c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024550:	f9b1 b21c 	ldrsh.w	fp, [r1, #540]	@ 0x21c
 8024554:	8802      	ldrh	r2, [r0, #0]
 8024556:	f9b0 3016 	ldrsh.w	r3, [r0, #22]
 802455a:	f8a1 321a 	strh.w	r3, [r1, #538]	@ 0x21a
 802455e:	f1bb 0f05 	cmp.w	fp, #5
 8024562:	b08d      	sub	sp, #52	@ 0x34
 8024564:	f8a1 2204 	strh.w	r2, [r1, #516]	@ 0x204
 8024568:	d012      	beq.n	8024590 <greq_setConfig+0x44>
 802456a:	f1bb 0f08 	cmp.w	fp, #8
 802456e:	d01b      	beq.n	80245a8 <greq_setConfig+0x5c>
 8024570:	f1bb 0f0a 	cmp.w	fp, #10
 8024574:	f040 8395 	bne.w	8024ca2 <greq_setConfig+0x756>
 8024578:	2b06      	cmp	r3, #6
 802457a:	f200 871c 	bhi.w	80253b6 <greq_setConfig+0xe6a>
 802457e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8024582:	0386      	.short	0x0386
 8024584:	001f0384 	.word	0x001f0384
 8024588:	038c038e 	.word	0x038c038e
 802458c:	0388038a 	.word	0x0388038a
 8024590:	2b06      	cmp	r3, #6
 8024592:	f200 8710 	bhi.w	80253b6 <greq_setConfig+0xe6a>
 8024596:	e8df f013 	tbh	[pc, r3, lsl #1]
 802459a:	04b4      	.short	0x04b4
 802459c:	03db04b2 	.word	0x03db04b2
 80245a0:	04ac04aa 	.word	0x04ac04aa
 80245a4:	04b004ae 	.word	0x04b004ae
 80245a8:	2b06      	cmp	r3, #6
 80245aa:	f200 8704 	bhi.w	80253b6 <greq_setConfig+0xe6a>
 80245ae:	e8df f013 	tbh	[pc, r3, lsl #1]
 80245b2:	06fc      	.short	0x06fc
 80245b4:	04d506ff 	.word	0x04d506ff
 80245b8:	06f306f0 	.word	0x06f306f0
 80245bc:	06f906f6 	.word	0x06f906f6
 80245c0:	4bd7      	ldr	r3, [pc, #860]	@ (8024920 <greq_setConfig+0x3d4>)
 80245c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80245c6:	f102 000c 	add.w	r0, r2, #12
 80245ca:	2818      	cmp	r0, #24
 80245cc:	f200 8372 	bhi.w	8024cb4 <greq_setConfig+0x768>
 80245d0:	f8a1 2206 	strh.w	r2, [r1, #518]	@ 0x206
 80245d4:	881a      	ldrh	r2, [r3, #0]
 80245d6:	f8df c3a0 	ldr.w	ip, [pc, #928]	@ 8024978 <greq_setConfig+0x42c>
 80245da:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 80245de:	320c      	adds	r2, #12
 80245e0:	b212      	sxth	r2, r2
 80245e2:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 80245e6:	f100 040c 	add.w	r4, r0, #12
 80245ea:	f8b2 2290 	ldrh.w	r2, [r2, #656]	@ 0x290
 80245ee:	f5a2 52ff 	sub.w	r2, r2, #8160	@ 0x1fe0
 80245f2:	3a1f      	subs	r2, #31
 80245f4:	2c18      	cmp	r4, #24
 80245f6:	b212      	sxth	r2, r2
 80245f8:	f200 835c 	bhi.w	8024cb4 <greq_setConfig+0x768>
 80245fc:	f8a1 0208 	strh.w	r0, [r1, #520]	@ 0x208
 8024600:	8858      	ldrh	r0, [r3, #2]
 8024602:	f9b3 4004 	ldrsh.w	r4, [r3, #4]
 8024606:	300c      	adds	r0, #12
 8024608:	b200      	sxth	r0, r0
 802460a:	eb0c 0040 	add.w	r0, ip, r0, lsl #1
 802460e:	f104 050c 	add.w	r5, r4, #12
 8024612:	f8b0 0290 	ldrh.w	r0, [r0, #656]	@ 0x290
 8024616:	f5a0 50ff 	sub.w	r0, r0, #8160	@ 0x1fe0
 802461a:	381f      	subs	r0, #31
 802461c:	2d18      	cmp	r5, #24
 802461e:	b200      	sxth	r0, r0
 8024620:	f200 8348 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024624:	f8a1 420a 	strh.w	r4, [r1, #522]	@ 0x20a
 8024628:	889c      	ldrh	r4, [r3, #4]
 802462a:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 802462e:	340c      	adds	r4, #12
 8024630:	b224      	sxth	r4, r4
 8024632:	eb0c 0444 	add.w	r4, ip, r4, lsl #1
 8024636:	f105 060c 	add.w	r6, r5, #12
 802463a:	f8b4 4290 	ldrh.w	r4, [r4, #656]	@ 0x290
 802463e:	f5a4 54ff 	sub.w	r4, r4, #8160	@ 0x1fe0
 8024642:	3c1f      	subs	r4, #31
 8024644:	2e18      	cmp	r6, #24
 8024646:	b224      	sxth	r4, r4
 8024648:	f200 8334 	bhi.w	8024cb4 <greq_setConfig+0x768>
 802464c:	f8a1 520c 	strh.w	r5, [r1, #524]	@ 0x20c
 8024650:	88dd      	ldrh	r5, [r3, #6]
 8024652:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 8024656:	350c      	adds	r5, #12
 8024658:	b22d      	sxth	r5, r5
 802465a:	eb0c 0545 	add.w	r5, ip, r5, lsl #1
 802465e:	f106 070c 	add.w	r7, r6, #12
 8024662:	f8b5 5290 	ldrh.w	r5, [r5, #656]	@ 0x290
 8024666:	f5a5 55ff 	sub.w	r5, r5, #8160	@ 0x1fe0
 802466a:	3d1f      	subs	r5, #31
 802466c:	b22d      	sxth	r5, r5
 802466e:	2f18      	cmp	r7, #24
 8024670:	9500      	str	r5, [sp, #0]
 8024672:	f200 831f 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024676:	f8a1 620e 	strh.w	r6, [r1, #526]	@ 0x20e
 802467a:	891e      	ldrh	r6, [r3, #8]
 802467c:	f9b3 700a 	ldrsh.w	r7, [r3, #10]
 8024680:	360c      	adds	r6, #12
 8024682:	b236      	sxth	r6, r6
 8024684:	eb0c 0646 	add.w	r6, ip, r6, lsl #1
 8024688:	f107 0e0c 	add.w	lr, r7, #12
 802468c:	f8b6 6290 	ldrh.w	r6, [r6, #656]	@ 0x290
 8024690:	f5a6 56ff 	sub.w	r6, r6, #8160	@ 0x1fe0
 8024694:	3e1f      	subs	r6, #31
 8024696:	b235      	sxth	r5, r6
 8024698:	f1be 0f18 	cmp.w	lr, #24
 802469c:	9501      	str	r5, [sp, #4]
 802469e:	f200 8309 	bhi.w	8024cb4 <greq_setConfig+0x768>
 80246a2:	f8a1 7210 	strh.w	r7, [r1, #528]	@ 0x210
 80246a6:	895f      	ldrh	r7, [r3, #10]
 80246a8:	f9b3 e00c 	ldrsh.w	lr, [r3, #12]
 80246ac:	370c      	adds	r7, #12
 80246ae:	b23f      	sxth	r7, r7
 80246b0:	eb0c 0747 	add.w	r7, ip, r7, lsl #1
 80246b4:	f10e 080c 	add.w	r8, lr, #12
 80246b8:	f8b7 7290 	ldrh.w	r7, [r7, #656]	@ 0x290
 80246bc:	f5a7 57ff 	sub.w	r7, r7, #8160	@ 0x1fe0
 80246c0:	3f1f      	subs	r7, #31
 80246c2:	b23d      	sxth	r5, r7
 80246c4:	f1b8 0f18 	cmp.w	r8, #24
 80246c8:	9502      	str	r5, [sp, #8]
 80246ca:	f200 82f3 	bhi.w	8024cb4 <greq_setConfig+0x768>
 80246ce:	f8a1 e212 	strh.w	lr, [r1, #530]	@ 0x212
 80246d2:	f8b3 e00c 	ldrh.w	lr, [r3, #12]
 80246d6:	f9b3 800e 	ldrsh.w	r8, [r3, #14]
 80246da:	f10e 0e0c 	add.w	lr, lr, #12
 80246de:	fa0f fe8e 	sxth.w	lr, lr
 80246e2:	eb0c 0e4e 	add.w	lr, ip, lr, lsl #1
 80246e6:	f108 090c 	add.w	r9, r8, #12
 80246ea:	f8be e290 	ldrh.w	lr, [lr, #656]	@ 0x290
 80246ee:	f5ae 5eff 	sub.w	lr, lr, #8160	@ 0x1fe0
 80246f2:	f1ae 0e1f 	sub.w	lr, lr, #31
 80246f6:	f1b9 0f18 	cmp.w	r9, #24
 80246fa:	fa0f fe8e 	sxth.w	lr, lr
 80246fe:	f200 82d9 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024702:	f8a1 8214 	strh.w	r8, [r1, #532]	@ 0x214
 8024706:	f8b3 800e 	ldrh.w	r8, [r3, #14]
 802470a:	f9b3 9010 	ldrsh.w	r9, [r3, #16]
 802470e:	f108 080c 	add.w	r8, r8, #12
 8024712:	fa0f f888 	sxth.w	r8, r8
 8024716:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802471a:	f109 0a0c 	add.w	sl, r9, #12
 802471e:	f8b8 8290 	ldrh.w	r8, [r8, #656]	@ 0x290
 8024722:	f5a8 58ff 	sub.w	r8, r8, #8160	@ 0x1fe0
 8024726:	f1a8 081f 	sub.w	r8, r8, #31
 802472a:	fa0f f688 	sxth.w	r6, r8
 802472e:	f1ba 0f18 	cmp.w	sl, #24
 8024732:	9603      	str	r6, [sp, #12]
 8024734:	f200 82be 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024738:	f8a1 9216 	strh.w	r9, [r1, #534]	@ 0x216
 802473c:	f8b3 8010 	ldrh.w	r8, [r3, #16]
 8024740:	f9b3 9012 	ldrsh.w	r9, [r3, #18]
 8024744:	f108 080c 	add.w	r8, r8, #12
 8024748:	fa0f f888 	sxth.w	r8, r8
 802474c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024750:	f109 0a0c 	add.w	sl, r9, #12
 8024754:	f8b8 8290 	ldrh.w	r8, [r8, #656]	@ 0x290
 8024758:	f5a8 58ff 	sub.w	r8, r8, #8160	@ 0x1fe0
 802475c:	f1a8 081f 	sub.w	r8, r8, #31
 8024760:	fa0f f588 	sxth.w	r5, r8
 8024764:	f1ba 0f18 	cmp.w	sl, #24
 8024768:	9504      	str	r5, [sp, #16]
 802476a:	f200 82a3 	bhi.w	8024cb4 <greq_setConfig+0x768>
 802476e:	f8a1 9218 	strh.w	r9, [r1, #536]	@ 0x218
 8024772:	f8b3 8012 	ldrh.w	r8, [r3, #18]
 8024776:	4b6b      	ldr	r3, [pc, #428]	@ (8024924 <greq_setConfig+0x3d8>)
 8024778:	f108 080c 	add.w	r8, r8, #12
 802477c:	fa0f f888 	sxth.w	r8, r8
 8024780:	eb0c 0c48 	add.w	ip, ip, r8, lsl #1
 8024784:	f8bc c290 	ldrh.w	ip, [ip, #656]	@ 0x290
 8024788:	f5ac 5cff 	sub.w	ip, ip, #8160	@ 0x1fe0
 802478c:	f1ac 0c1f 	sub.w	ip, ip, #31
 8024790:	fa0f f78c 	sxth.w	r7, ip
 8024794:	fb33 f302 	smulwb	r3, r3, r2
 8024798:	f8df c1e0 	ldr.w	ip, [pc, #480]	@ 802497c <greq_setConfig+0x430>
 802479c:	fb3c 3300 	smlawb	r3, ip, r0, r3
 80247a0:	f8df 81dc 	ldr.w	r8, [pc, #476]	@ 8024980 <greq_setConfig+0x434>
 80247a4:	fb38 3304 	smlawb	r3, r8, r4, r3
 80247a8:	4e5f      	ldr	r6, [pc, #380]	@ (8024928 <greq_setConfig+0x3dc>)
 80247aa:	9d00      	ldr	r5, [sp, #0]
 80247ac:	fb36 3305 	smlawb	r3, r6, r5, r3
 80247b0:	4e5e      	ldr	r6, [pc, #376]	@ (802492c <greq_setConfig+0x3e0>)
 80247b2:	9d01      	ldr	r5, [sp, #4]
 80247b4:	fb36 3305 	smlawb	r3, r6, r5, r3
 80247b8:	4e5d      	ldr	r6, [pc, #372]	@ (8024930 <greq_setConfig+0x3e4>)
 80247ba:	9d02      	ldr	r5, [sp, #8]
 80247bc:	fb36 3305 	smlawb	r3, r6, r5, r3
 80247c0:	4e5c      	ldr	r6, [pc, #368]	@ (8024934 <greq_setConfig+0x3e8>)
 80247c2:	fb36 330e 	smlawb	r3, r6, lr, r3
 80247c6:	f46f 653c 	mvn.w	r5, #3008	@ 0xbc0
 80247ca:	9e03      	ldr	r6, [sp, #12]
 80247cc:	fb35 3306 	smlawb	r3, r5, r6, r3
 80247d0:	f605 15a7 	addw	r5, r5, #2471	@ 0x9a7
 80247d4:	9e04      	ldr	r6, [sp, #16]
 80247d6:	fb35 3306 	smlawb	r3, r5, r6, r3
 80247da:	f06f 0534 	mvn.w	r5, #52	@ 0x34
 80247de:	9705      	str	r7, [sp, #20]
 80247e0:	fb35 3307 	smlawb	r3, r5, r7, r3
 80247e4:	139b      	asrs	r3, r3, #14
 80247e6:	f303 030f 	ssat	r3, #16, r3
 80247ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80247ee:	fb3c fc02 	smulwb	ip, ip, r2
 80247f2:	4b51      	ldr	r3, [pc, #324]	@ (8024938 <greq_setConfig+0x3ec>)
 80247f4:	fb33 c300 	smlawb	r3, r3, r0, ip
 80247f8:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 8024984 <greq_setConfig+0x438>
 80247fc:	fb39 3304 	smlawb	r3, r9, r4, r3
 8024800:	f8df c184 	ldr.w	ip, [pc, #388]	@ 8024988 <greq_setConfig+0x43c>
 8024804:	9f00      	ldr	r7, [sp, #0]
 8024806:	fb3c 3307 	smlawb	r3, ip, r7, r3
 802480a:	4d4c      	ldr	r5, [pc, #304]	@ (802493c <greq_setConfig+0x3f0>)
 802480c:	9f01      	ldr	r7, [sp, #4]
 802480e:	fb35 3307 	smlawb	r3, r5, r7, r3
 8024812:	4d4b      	ldr	r5, [pc, #300]	@ (8024940 <greq_setConfig+0x3f4>)
 8024814:	9e02      	ldr	r6, [sp, #8]
 8024816:	fb35 3306 	smlawb	r3, r5, r6, r3
 802481a:	4d4a      	ldr	r5, [pc, #296]	@ (8024944 <greq_setConfig+0x3f8>)
 802481c:	fb35 330e 	smlawb	r3, r5, lr, r3
 8024820:	4d49      	ldr	r5, [pc, #292]	@ (8024948 <greq_setConfig+0x3fc>)
 8024822:	9e03      	ldr	r6, [sp, #12]
 8024824:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024828:	4d48      	ldr	r5, [pc, #288]	@ (802494c <greq_setConfig+0x400>)
 802482a:	9e04      	ldr	r6, [sp, #16]
 802482c:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024830:	f06f 05fb 	mvn.w	r5, #251	@ 0xfb
 8024834:	9f05      	ldr	r7, [sp, #20]
 8024836:	fb35 3307 	smlawb	r3, r5, r7, r3
 802483a:	139b      	asrs	r3, r3, #14
 802483c:	f303 030f 	ssat	r3, #16, r3
 8024840:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024844:	fb38 f802 	smulwb	r8, r8, r2
 8024848:	fb39 8900 	smlawb	r9, r9, r0, r8
 802484c:	4b40      	ldr	r3, [pc, #256]	@ (8024950 <greq_setConfig+0x404>)
 802484e:	fb33 9304 	smlawb	r3, r3, r4, r9
 8024852:	f8df a138 	ldr.w	sl, [pc, #312]	@ 802498c <greq_setConfig+0x440>
 8024856:	9d00      	ldr	r5, [sp, #0]
 8024858:	fb3a 3305 	smlawb	r3, sl, r5, r3
 802485c:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8024990 <greq_setConfig+0x444>
 8024860:	9d01      	ldr	r5, [sp, #4]
 8024862:	fb38 3305 	smlawb	r3, r8, r5, r3
 8024866:	4d3b      	ldr	r5, [pc, #236]	@ (8024954 <greq_setConfig+0x408>)
 8024868:	9f02      	ldr	r7, [sp, #8]
 802486a:	fb35 3307 	smlawb	r3, r5, r7, r3
 802486e:	4d3a      	ldr	r5, [pc, #232]	@ (8024958 <greq_setConfig+0x40c>)
 8024870:	fb35 330e 	smlawb	r3, r5, lr, r3
 8024874:	4d39      	ldr	r5, [pc, #228]	@ (802495c <greq_setConfig+0x410>)
 8024876:	9e03      	ldr	r6, [sp, #12]
 8024878:	fb35 3306 	smlawb	r3, r5, r6, r3
 802487c:	4d38      	ldr	r5, [pc, #224]	@ (8024960 <greq_setConfig+0x414>)
 802487e:	9e04      	ldr	r6, [sp, #16]
 8024880:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024884:	4d37      	ldr	r5, [pc, #220]	@ (8024964 <greq_setConfig+0x418>)
 8024886:	9f05      	ldr	r7, [sp, #20]
 8024888:	fb35 3307 	smlawb	r3, r5, r7, r3
 802488c:	139b      	asrs	r3, r3, #14
 802488e:	f303 030f 	ssat	r3, #16, r3
 8024892:	f8ad 3020 	strh.w	r3, [sp, #32]
 8024896:	4b24      	ldr	r3, [pc, #144]	@ (8024928 <greq_setConfig+0x3dc>)
 8024898:	fb33 f302 	smulwb	r3, r3, r2
 802489c:	fb3c 3300 	smlawb	r3, ip, r0, r3
 80248a0:	fb3a 3a04 	smlawb	sl, sl, r4, r3
 80248a4:	4b30      	ldr	r3, [pc, #192]	@ (8024968 <greq_setConfig+0x41c>)
 80248a6:	9e00      	ldr	r6, [sp, #0]
 80248a8:	fb33 a306 	smlawb	r3, r3, r6, sl
 80248ac:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 8024994 <greq_setConfig+0x448>
 80248b0:	9d01      	ldr	r5, [sp, #4]
 80248b2:	fb39 3305 	smlawb	r3, r9, r5, r3
 80248b6:	f60c 4cfc 	addw	ip, ip, #3324	@ 0xcfc
 80248ba:	9e02      	ldr	r6, [sp, #8]
 80248bc:	fb3c 3306 	smlawb	r3, ip, r6, r3
 80248c0:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8024998 <greq_setConfig+0x44c>
 80248c4:	fb3a 330e 	smlawb	r3, sl, lr, r3
 80248c8:	4d28      	ldr	r5, [pc, #160]	@ (802496c <greq_setConfig+0x420>)
 80248ca:	9e03      	ldr	r6, [sp, #12]
 80248cc:	fb35 3306 	smlawb	r3, r5, r6, r3
 80248d0:	4d27      	ldr	r5, [pc, #156]	@ (8024970 <greq_setConfig+0x424>)
 80248d2:	9f04      	ldr	r7, [sp, #16]
 80248d4:	fb35 3307 	smlawb	r3, r5, r7, r3
 80248d8:	f46f 55c4 	mvn.w	r5, #6272	@ 0x1880
 80248dc:	9f05      	ldr	r7, [sp, #20]
 80248de:	fb35 3307 	smlawb	r3, r5, r7, r3
 80248e2:	139b      	asrs	r3, r3, #14
 80248e4:	f303 030f 	ssat	r3, #16, r3
 80248e8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80248ec:	4b0f      	ldr	r3, [pc, #60]	@ (802492c <greq_setConfig+0x3e0>)
 80248ee:	fb33 f302 	smulwb	r3, r3, r2
 80248f2:	4d12      	ldr	r5, [pc, #72]	@ (802493c <greq_setConfig+0x3f0>)
 80248f4:	fb35 3300 	smlawb	r3, r5, r0, r3
 80248f8:	fb38 3304 	smlawb	r3, r8, r4, r3
 80248fc:	9f00      	ldr	r7, [sp, #0]
 80248fe:	fb39 3907 	smlawb	r9, r9, r7, r3
 8024902:	4b1c      	ldr	r3, [pc, #112]	@ (8024974 <greq_setConfig+0x428>)
 8024904:	9f01      	ldr	r7, [sp, #4]
 8024906:	fb33 9307 	smlawb	r3, r3, r7, r9
 802490a:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 802499c <greq_setConfig+0x450>
 802490e:	9d02      	ldr	r5, [sp, #8]
 8024910:	fb38 3305 	smlawb	r3, r8, r5, r3
 8024914:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 80249a0 <greq_setConfig+0x454>
 8024918:	fb39 330e 	smlawb	r3, r9, lr, r3
 802491c:	e042      	b.n	80249a4 <greq_setConfig+0x458>
 802491e:	bf00      	nop
 8024920:	08037414 	.word	0x08037414
 8024924:	437f9a53 	.word	0x437f9a53
 8024928:	ffd4231b 	.word	0xffd4231b
 802492c:	fffb31ce 	.word	0xfffb31ce
 8024930:	fffec38a 	.word	0xfffec38a
 8024934:	ffffc5a0 	.word	0xffffc5a0
 8024938:	46f2fd24 	.word	0x46f2fd24
 802493c:	ffd5ad3d 	.word	0xffd5ad3d
 8024940:	fffb7949 	.word	0xfffb7949
 8024944:	fffed4a0 	.word	0xfffed4a0
 8024948:	ffffc9cb 	.word	0xffffc9cb
 802494c:	fffff5fd 	.word	0xfffff5fd
 8024950:	46d6f35d 	.word	0x46d6f35d
 8024954:	ffd58a7c 	.word	0xffd58a7c
 8024958:	fffb728a 	.word	0xfffb728a
 802495c:	fffedb15 	.word	0xfffedb15
 8024960:	ffffced6 	.word	0xffffced6
 8024964:	fffffb0c 	.word	0xfffffb0c
 8024968:	46d7cb88 	.word	0x46d7cb88
 802496c:	fffb7b86 	.word	0xfffb7b86
 8024970:	fffefbce 	.word	0xfffefbce
 8024974:	46db82d7 	.word	0x46db82d7
 8024978:	0803736c 	.word	0x0803736c
 802497c:	f09712df 	.word	0xf09712df
 8024980:	003cefc6 	.word	0x003cefc6
 8024984:	f0b1f215 	.word	0xf0b1f215
 8024988:	00437c98 	.word	0x00437c98
 802498c:	f0cb65ad 	.word	0xf0cb65ad
 8024990:	004359bc 	.word	0x004359bc
 8024994:	f0b0e9e9 	.word	0xf0b0e9e9
 8024998:	ffd5f133 	.word	0xffd5f133
 802499c:	f0c3bb91 	.word	0xf0c3bb91
 80249a0:	003e8db9 	.word	0x003e8db9
 80249a4:	4dc6      	ldr	r5, [pc, #792]	@ (8024cc0 <greq_setConfig+0x774>)
 80249a6:	fb35 3306 	smlawb	r3, r5, r6, r3
 80249aa:	4dc6      	ldr	r5, [pc, #792]	@ (8024cc4 <greq_setConfig+0x778>)
 80249ac:	9e04      	ldr	r6, [sp, #16]
 80249ae:	fb35 3306 	smlawb	r3, r5, r6, r3
 80249b2:	4dc5      	ldr	r5, [pc, #788]	@ (8024cc8 <greq_setConfig+0x77c>)
 80249b4:	9f05      	ldr	r7, [sp, #20]
 80249b6:	fb35 3307 	smlawb	r3, r5, r7, r3
 80249ba:	139b      	asrs	r3, r3, #14
 80249bc:	f303 030f 	ssat	r3, #16, r3
 80249c0:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80249c4:	4bc1      	ldr	r3, [pc, #772]	@ (8024ccc <greq_setConfig+0x780>)
 80249c6:	fb33 f302 	smulwb	r3, r3, r2
 80249ca:	4dc1      	ldr	r5, [pc, #772]	@ (8024cd0 <greq_setConfig+0x784>)
 80249cc:	fb35 3300 	smlawb	r3, r5, r0, r3
 80249d0:	4dc0      	ldr	r5, [pc, #768]	@ (8024cd4 <greq_setConfig+0x788>)
 80249d2:	fb35 3304 	smlawb	r3, r5, r4, r3
 80249d6:	9e00      	ldr	r6, [sp, #0]
 80249d8:	fb3c 3306 	smlawb	r3, ip, r6, r3
 80249dc:	9e01      	ldr	r6, [sp, #4]
 80249de:	fb38 3806 	smlawb	r8, r8, r6, r3
 80249e2:	4bbd      	ldr	r3, [pc, #756]	@ (8024cd8 <greq_setConfig+0x78c>)
 80249e4:	9f02      	ldr	r7, [sp, #8]
 80249e6:	fb33 8307 	smlawb	r3, r3, r7, r8
 80249ea:	f8df c348 	ldr.w	ip, [pc, #840]	@ 8024d34 <greq_setConfig+0x7e8>
 80249ee:	fb3c 330e 	smlawb	r3, ip, lr, r3
 80249f2:	f8df 8344 	ldr.w	r8, [pc, #836]	@ 8024d38 <greq_setConfig+0x7ec>
 80249f6:	9e03      	ldr	r6, [sp, #12]
 80249f8:	fb38 3306 	smlawb	r3, r8, r6, r3
 80249fc:	4db7      	ldr	r5, [pc, #732]	@ (8024cdc <greq_setConfig+0x790>)
 80249fe:	9f04      	ldr	r7, [sp, #16]
 8024a00:	fb35 3307 	smlawb	r3, r5, r7, r3
 8024a04:	4db6      	ldr	r5, [pc, #728]	@ (8024ce0 <greq_setConfig+0x794>)
 8024a06:	9f05      	ldr	r7, [sp, #20]
 8024a08:	fb35 3307 	smlawb	r3, r5, r7, r3
 8024a0c:	139b      	asrs	r3, r3, #14
 8024a0e:	f303 030f 	ssat	r3, #16, r3
 8024a12:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8024a16:	4bb3      	ldr	r3, [pc, #716]	@ (8024ce4 <greq_setConfig+0x798>)
 8024a18:	fb33 f302 	smulwb	r3, r3, r2
 8024a1c:	4db2      	ldr	r5, [pc, #712]	@ (8024ce8 <greq_setConfig+0x79c>)
 8024a1e:	fb35 3300 	smlawb	r3, r5, r0, r3
 8024a22:	4db2      	ldr	r5, [pc, #712]	@ (8024cec <greq_setConfig+0x7a0>)
 8024a24:	fb35 3304 	smlawb	r3, r5, r4, r3
 8024a28:	9d00      	ldr	r5, [sp, #0]
 8024a2a:	fb3a 3305 	smlawb	r3, sl, r5, r3
 8024a2e:	9d01      	ldr	r5, [sp, #4]
 8024a30:	fb39 3305 	smlawb	r3, r9, r5, r3
 8024a34:	9e02      	ldr	r6, [sp, #8]
 8024a36:	fb3c 3c06 	smlawb	ip, ip, r6, r3
 8024a3a:	4bad      	ldr	r3, [pc, #692]	@ (8024cf0 <greq_setConfig+0x7a4>)
 8024a3c:	fb33 c30e 	smlawb	r3, r3, lr, ip
 8024a40:	f8df a2f8 	ldr.w	sl, [pc, #760]	@ 8024d3c <greq_setConfig+0x7f0>
 8024a44:	9e03      	ldr	r6, [sp, #12]
 8024a46:	fb3a 3306 	smlawb	r3, sl, r6, r3
 8024a4a:	f8df c2f4 	ldr.w	ip, [pc, #756]	@ 8024d40 <greq_setConfig+0x7f4>
 8024a4e:	9e04      	ldr	r6, [sp, #16]
 8024a50:	fb3c 3306 	smlawb	r3, ip, r6, r3
 8024a54:	f8df 92ec 	ldr.w	r9, [pc, #748]	@ 8024d44 <greq_setConfig+0x7f8>
 8024a58:	fb39 3307 	smlawb	r3, r9, r7, r3
 8024a5c:	139b      	asrs	r3, r3, #14
 8024a5e:	f303 030f 	ssat	r3, #16, r3
 8024a62:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8024a66:	f46f 633c 	mvn.w	r3, #3008	@ 0xbc0
 8024a6a:	fb33 f302 	smulwb	r3, r3, r2
 8024a6e:	4da1      	ldr	r5, [pc, #644]	@ (8024cf4 <greq_setConfig+0x7a8>)
 8024a70:	fb35 3300 	smlawb	r3, r5, r0, r3
 8024a74:	4da0      	ldr	r5, [pc, #640]	@ (8024cf8 <greq_setConfig+0x7ac>)
 8024a76:	fb35 3304 	smlawb	r3, r5, r4, r3
 8024a7a:	4da0      	ldr	r5, [pc, #640]	@ (8024cfc <greq_setConfig+0x7b0>)
 8024a7c:	9f00      	ldr	r7, [sp, #0]
 8024a7e:	fb35 3307 	smlawb	r3, r5, r7, r3
 8024a82:	f5a5 150e 	sub.w	r5, r5, #2326528	@ 0x238000
 8024a86:	f5a5 654b 	sub.w	r5, r5, #3248	@ 0xcb0
 8024a8a:	9f01      	ldr	r7, [sp, #4]
 8024a8c:	fb35 3307 	smlawb	r3, r5, r7, r3
 8024a90:	9d02      	ldr	r5, [sp, #8]
 8024a92:	fb38 3305 	smlawb	r3, r8, r5, r3
 8024a96:	fb3a 3a0e 	smlawb	sl, sl, lr, r3
 8024a9a:	4b99      	ldr	r3, [pc, #612]	@ (8024d00 <greq_setConfig+0x7b4>)
 8024a9c:	9e03      	ldr	r6, [sp, #12]
 8024a9e:	fb33 a306 	smlawb	r3, r3, r6, sl
 8024aa2:	f8df a2a4 	ldr.w	sl, [pc, #676]	@ 8024d48 <greq_setConfig+0x7fc>
 8024aa6:	9f04      	ldr	r7, [sp, #16]
 8024aa8:	fb3a 3307 	smlawb	r3, sl, r7, r3
 8024aac:	f5a8 08ad 	sub.w	r8, r8, #5668864	@ 0x568000
 8024ab0:	f6a8 687f 	subw	r8, r8, #3711	@ 0xe7f
 8024ab4:	9f05      	ldr	r7, [sp, #20]
 8024ab6:	fb38 3307 	smlawb	r3, r8, r7, r3
 8024aba:	139b      	asrs	r3, r3, #14
 8024abc:	f303 030f 	ssat	r3, #16, r3
 8024ac0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8024ac4:	4b8f      	ldr	r3, [pc, #572]	@ (8024d04 <greq_setConfig+0x7b8>)
 8024ac6:	fb33 f302 	smulwb	r3, r3, r2
 8024aca:	4d8f      	ldr	r5, [pc, #572]	@ (8024d08 <greq_setConfig+0x7bc>)
 8024acc:	fb35 3300 	smlawb	r3, r5, r0, r3
 8024ad0:	4d8e      	ldr	r5, [pc, #568]	@ (8024d0c <greq_setConfig+0x7c0>)
 8024ad2:	fb35 3304 	smlawb	r3, r5, r4, r3
 8024ad6:	4d8e      	ldr	r5, [pc, #568]	@ (8024d10 <greq_setConfig+0x7c4>)
 8024ad8:	9e00      	ldr	r6, [sp, #0]
 8024ada:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024ade:	4d79      	ldr	r5, [pc, #484]	@ (8024cc4 <greq_setConfig+0x778>)
 8024ae0:	9e01      	ldr	r6, [sp, #4]
 8024ae2:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024ae6:	f5a5 15ea 	sub.w	r5, r5, #1916928	@ 0x1d4000
 8024aea:	f5a5 55e2 	sub.w	r5, r5, #7232	@ 0x1c40
 8024aee:	9e02      	ldr	r6, [sp, #8]
 8024af0:	fb35 3306 	smlawb	r3, r5, r6, r3
 8024af4:	fb3c 330e 	smlawb	r3, ip, lr, r3
 8024af8:	9e03      	ldr	r6, [sp, #12]
 8024afa:	fb3a 3a06 	smlawb	sl, sl, r6, r3
 8024afe:	4b85      	ldr	r3, [pc, #532]	@ (8024d14 <greq_setConfig+0x7c8>)
 8024b00:	9e04      	ldr	r6, [sp, #16]
 8024b02:	fb33 a306 	smlawb	r3, r3, r6, sl
 8024b06:	f8df c244 	ldr.w	ip, [pc, #580]	@ 8024d4c <greq_setConfig+0x800>
 8024b0a:	463d      	mov	r5, r7
 8024b0c:	fb3c 3307 	smlawb	r3, ip, r7, r3
 8024b10:	139b      	asrs	r3, r3, #14
 8024b12:	f303 030f 	ssat	r3, #16, r3
 8024b16:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8024b1a:	f06f 0334 	mvn.w	r3, #52	@ 0x34
 8024b1e:	fb33 f202 	smulwb	r2, r3, r2
 8024b22:	f06f 03fb 	mvn.w	r3, #251	@ 0xfb
 8024b26:	fb33 2200 	smlawb	r2, r3, r0, r2
 8024b2a:	f5a3 737e 	sub.w	r3, r3, #1016	@ 0x3f8
 8024b2e:	fb33 2204 	smlawb	r2, r3, r4, r2
 8024b32:	f46f 53c4 	mvn.w	r3, #6272	@ 0x1880
 8024b36:	9f00      	ldr	r7, [sp, #0]
 8024b38:	fb33 2207 	smlawb	r2, r3, r7, r2
 8024b3c:	4b62      	ldr	r3, [pc, #392]	@ (8024cc8 <greq_setConfig+0x77c>)
 8024b3e:	9c01      	ldr	r4, [sp, #4]
 8024b40:	fb33 2204 	smlawb	r2, r3, r4, r2
 8024b44:	4b66      	ldr	r3, [pc, #408]	@ (8024ce0 <greq_setConfig+0x794>)
 8024b46:	9802      	ldr	r0, [sp, #8]
 8024b48:	fb33 2200 	smlawb	r2, r3, r0, r2
 8024b4c:	fb39 220e 	smlawb	r2, r9, lr, r2
 8024b50:	9e03      	ldr	r6, [sp, #12]
 8024b52:	fb38 2206 	smlawb	r2, r8, r6, r2
 8024b56:	9e04      	ldr	r6, [sp, #16]
 8024b58:	fb3c 2206 	smlawb	r2, ip, r6, r2
 8024b5c:	4b6e      	ldr	r3, [pc, #440]	@ (8024d18 <greq_setConfig+0x7cc>)
 8024b5e:	fb33 2205 	smlawb	r2, r3, r5, r2
 8024b62:	4b6e      	ldr	r3, [pc, #440]	@ (8024d1c <greq_setConfig+0x7d0>)
 8024b64:	1392      	asrs	r2, r2, #14
 8024b66:	f302 020f 	ssat	r2, #16, r2
 8024b6a:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8024b6e:	685a      	ldr	r2, [r3, #4]
 8024b70:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8024b74:	fb32 f200 	smulwb	r2, r2, r0
 8024b78:	f302 021e 	ssat	r2, #31, r2
 8024b7c:	f1bb 0f01 	cmp.w	fp, #1
 8024b80:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024b84:	608a      	str	r2, [r1, #8]
 8024b86:	f340 8091 	ble.w	8024cac <greq_setConfig+0x760>
 8024b8a:	695a      	ldr	r2, [r3, #20]
 8024b8c:	f9bd 001e 	ldrsh.w	r0, [sp, #30]
 8024b90:	fb32 f200 	smulwb	r2, r2, r0
 8024b94:	f302 021e 	ssat	r2, #31, r2
 8024b98:	f1bb 0f02 	cmp.w	fp, #2
 8024b9c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024ba0:	618a      	str	r2, [r1, #24]
 8024ba2:	f000 8083 	beq.w	8024cac <greq_setConfig+0x760>
 8024ba6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8024ba8:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8024bac:	fb32 f200 	smulwb	r2, r2, r0
 8024bb0:	f302 021e 	ssat	r2, #31, r2
 8024bb4:	f1bb 0f03 	cmp.w	fp, #3
 8024bb8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024bbc:	628a      	str	r2, [r1, #40]	@ 0x28
 8024bbe:	d075      	beq.n	8024cac <greq_setConfig+0x760>
 8024bc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8024bc2:	f9bd 0022 	ldrsh.w	r0, [sp, #34]	@ 0x22
 8024bc6:	fb32 f200 	smulwb	r2, r2, r0
 8024bca:	f302 021e 	ssat	r2, #31, r2
 8024bce:	f1bb 0f04 	cmp.w	fp, #4
 8024bd2:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024bd6:	638a      	str	r2, [r1, #56]	@ 0x38
 8024bd8:	d068      	beq.n	8024cac <greq_setConfig+0x760>
 8024bda:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8024bdc:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	@ 0x24
 8024be0:	fb32 f200 	smulwb	r2, r2, r0
 8024be4:	f302 021e 	ssat	r2, #31, r2
 8024be8:	f1bb 0f05 	cmp.w	fp, #5
 8024bec:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024bf0:	648a      	str	r2, [r1, #72]	@ 0x48
 8024bf2:	d05b      	beq.n	8024cac <greq_setConfig+0x760>
 8024bf4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8024bf6:	f9bd 0026 	ldrsh.w	r0, [sp, #38]	@ 0x26
 8024bfa:	fb32 f200 	smulwb	r2, r2, r0
 8024bfe:	f302 021e 	ssat	r2, #31, r2
 8024c02:	f1bb 0f06 	cmp.w	fp, #6
 8024c06:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024c0a:	658a      	str	r2, [r1, #88]	@ 0x58
 8024c0c:	d04e      	beq.n	8024cac <greq_setConfig+0x760>
 8024c0e:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8024c10:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024c14:	fb32 f200 	smulwb	r2, r2, r0
 8024c18:	f302 021e 	ssat	r2, #31, r2
 8024c1c:	f1bb 0f07 	cmp.w	fp, #7
 8024c20:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024c24:	668a      	str	r2, [r1, #104]	@ 0x68
 8024c26:	d041      	beq.n	8024cac <greq_setConfig+0x760>
 8024c28:	6f5a      	ldr	r2, [r3, #116]	@ 0x74
 8024c2a:	f9bd 002a 	ldrsh.w	r0, [sp, #42]	@ 0x2a
 8024c2e:	fb32 f200 	smulwb	r2, r2, r0
 8024c32:	f302 021e 	ssat	r2, #31, r2
 8024c36:	f1bb 0f08 	cmp.w	fp, #8
 8024c3a:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024c3e:	678a      	str	r2, [r1, #120]	@ 0x78
 8024c40:	d034      	beq.n	8024cac <greq_setConfig+0x760>
 8024c42:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 8024c46:	f9bd 002c 	ldrsh.w	r0, [sp, #44]	@ 0x2c
 8024c4a:	fb32 f200 	smulwb	r2, r2, r0
 8024c4e:	f302 021e 	ssat	r2, #31, r2
 8024c52:	f1bb 0f09 	cmp.w	fp, #9
 8024c56:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024c5a:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8024c5e:	d025      	beq.n	8024cac <greq_setConfig+0x760>
 8024c60:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8024c64:	f9bd 002e 	ldrsh.w	r0, [sp, #46]	@ 0x2e
 8024c68:	fb32 f200 	smulwb	r2, r2, r0
 8024c6c:	f302 021e 	ssat	r2, #31, r2
 8024c70:	f1bb 0f0a 	cmp.w	fp, #10
 8024c74:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8024c78:	f8c1 2098 	str.w	r2, [r1, #152]	@ 0x98
 8024c7c:	d016      	beq.n	8024cac <greq_setConfig+0x760>
 8024c7e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8024c82:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8024c86:	fb33 f302 	smulwb	r3, r3, r2
 8024c8a:	4b25      	ldr	r3, [pc, #148]	@ (8024d20 <greq_setConfig+0x7d4>)
 8024c8c:	e499      	b.n	80245c2 <greq_setConfig+0x76>
 8024c8e:	1c83      	adds	r3, r0, #2
 8024c90:	e497      	b.n	80245c2 <greq_setConfig+0x76>
 8024c92:	4b24      	ldr	r3, [pc, #144]	@ (8024d24 <greq_setConfig+0x7d8>)
 8024c94:	e495      	b.n	80245c2 <greq_setConfig+0x76>
 8024c96:	4b24      	ldr	r3, [pc, #144]	@ (8024d28 <greq_setConfig+0x7dc>)
 8024c98:	e493      	b.n	80245c2 <greq_setConfig+0x76>
 8024c9a:	4b24      	ldr	r3, [pc, #144]	@ (8024d2c <greq_setConfig+0x7e0>)
 8024c9c:	e491      	b.n	80245c2 <greq_setConfig+0x76>
 8024c9e:	4b24      	ldr	r3, [pc, #144]	@ (8024d30 <greq_setConfig+0x7e4>)
 8024ca0:	e48f      	b.n	80245c2 <greq_setConfig+0x76>
 8024ca2:	f06f 0002 	mvn.w	r0, #2
 8024ca6:	b00d      	add	sp, #52	@ 0x34
 8024ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cac:	2000      	movs	r0, #0
 8024cae:	b00d      	add	sp, #52	@ 0x34
 8024cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cb4:	f06f 0006 	mvn.w	r0, #6
 8024cb8:	b00d      	add	sp, #52	@ 0x34
 8024cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cbe:	bf00      	nop
 8024cc0:	ffd7eed6 	.word	0xffd7eed6
 8024cc4:	fffbc3a6 	.word	0xfffbc3a6
 8024cc8:	ffff82c9 	.word	0xffff82c9
 8024ccc:	fffec38a 	.word	0xfffec38a
 8024cd0:	fffb7949 	.word	0xfffb7949
 8024cd4:	ffd58a7c 	.word	0xffd58a7c
 8024cd8:	46ba1415 	.word	0x46ba1415
 8024cdc:	ffde6766 	.word	0xffde6766
 8024ce0:	fffdb683 	.word	0xfffdb683
 8024ce4:	ffffc5a0 	.word	0xffffc5a0
 8024ce8:	fffed4a0 	.word	0xfffed4a0
 8024cec:	fffb728a 	.word	0xfffb728a
 8024cf0:	464eb3cc 	.word	0x464eb3cc
 8024cf4:	ffffc9cb 	.word	0xffffc9cb
 8024cf8:	fffedb15 	.word	0xfffedb15
 8024cfc:	fffb7b86 	.word	0xfffb7b86
 8024d00:	450d8218 	.word	0x450d8218
 8024d04:	fffffde6 	.word	0xfffffde6
 8024d08:	fffff5fd 	.word	0xfffff5fd
 8024d0c:	ffffced6 	.word	0xffffced6
 8024d10:	fffefbce 	.word	0xfffefbce
 8024d14:	426bfd18 	.word	0x426bfd18
 8024d18:	405d1eb8 	.word	0x405d1eb8
 8024d1c:	0803755c 	.word	0x0803755c
 8024d20:	08037428 	.word	0x08037428
 8024d24:	08037478 	.word	0x08037478
 8024d28:	08037464 	.word	0x08037464
 8024d2c:	08037450 	.word	0x08037450
 8024d30:	0803743c 	.word	0x0803743c
 8024d34:	f1036186 	.word	0xf1036186
 8024d38:	002ea293 	.word	0x002ea293
 8024d3c:	f1d127dc 	.word	0xf1d127dc
 8024d40:	0004cb5a 	.word	0x0004cb5a
 8024d44:	fff1aba5 	.word	0xfff1aba5
 8024d48:	f4575a1b 	.word	0xf4575a1b
 8024d4c:	fb31bda4 	.word	0xfb31bda4
 8024d50:	4a6d      	ldr	r2, [pc, #436]	@ (8024f08 <greq_setConfig+0x9bc>)
 8024d52:	f9b2 3000 	ldrsh.w	r3, [r2]
 8024d56:	f103 000c 	add.w	r0, r3, #12
 8024d5a:	2818      	cmp	r0, #24
 8024d5c:	d8aa      	bhi.n	8024cb4 <greq_setConfig+0x768>
 8024d5e:	f8a1 3206 	strh.w	r3, [r1, #518]	@ 0x206
 8024d62:	8810      	ldrh	r0, [r2, #0]
 8024d64:	4b68      	ldr	r3, [pc, #416]	@ (8024f08 <greq_setConfig+0x9bc>)
 8024d66:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8024d6a:	300c      	adds	r0, #12
 8024d6c:	b200      	sxth	r0, r0
 8024d6e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8024d72:	f104 050c 	add.w	r5, r4, #12
 8024d76:	f8b0 0290 	ldrh.w	r0, [r0, #656]	@ 0x290
 8024d7a:	f5a0 50ff 	sub.w	r0, r0, #8160	@ 0x1fe0
 8024d7e:	381f      	subs	r0, #31
 8024d80:	2d18      	cmp	r5, #24
 8024d82:	b200      	sxth	r0, r0
 8024d84:	d896      	bhi.n	8024cb4 <greq_setConfig+0x768>
 8024d86:	f8a1 4208 	strh.w	r4, [r1, #520]	@ 0x208
 8024d8a:	8854      	ldrh	r4, [r2, #2]
 8024d8c:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8024d90:	340c      	adds	r4, #12
 8024d92:	b224      	sxth	r4, r4
 8024d94:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024d98:	f105 060c 	add.w	r6, r5, #12
 8024d9c:	f8b4 4290 	ldrh.w	r4, [r4, #656]	@ 0x290
 8024da0:	f5a4 54ff 	sub.w	r4, r4, #8160	@ 0x1fe0
 8024da4:	3c1f      	subs	r4, #31
 8024da6:	2e18      	cmp	r6, #24
 8024da8:	b224      	sxth	r4, r4
 8024daa:	d883      	bhi.n	8024cb4 <greq_setConfig+0x768>
 8024dac:	f8a1 520a 	strh.w	r5, [r1, #522]	@ 0x20a
 8024db0:	8895      	ldrh	r5, [r2, #4]
 8024db2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8024db6:	350c      	adds	r5, #12
 8024db8:	b22d      	sxth	r5, r5
 8024dba:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8024dbe:	f106 070c 	add.w	r7, r6, #12
 8024dc2:	f8b5 5290 	ldrh.w	r5, [r5, #656]	@ 0x290
 8024dc6:	f5a5 55ff 	sub.w	r5, r5, #8160	@ 0x1fe0
 8024dca:	3d1f      	subs	r5, #31
 8024dcc:	2f18      	cmp	r7, #24
 8024dce:	b22d      	sxth	r5, r5
 8024dd0:	f63f af70 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024dd4:	f8a1 620c 	strh.w	r6, [r1, #524]	@ 0x20c
 8024dd8:	88d6      	ldrh	r6, [r2, #6]
 8024dda:	f9b2 7008 	ldrsh.w	r7, [r2, #8]
 8024dde:	360c      	adds	r6, #12
 8024de0:	b236      	sxth	r6, r6
 8024de2:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 8024de6:	f107 0e0c 	add.w	lr, r7, #12
 8024dea:	f8b6 6290 	ldrh.w	r6, [r6, #656]	@ 0x290
 8024dee:	f5a6 56ff 	sub.w	r6, r6, #8160	@ 0x1fe0
 8024df2:	3e1f      	subs	r6, #31
 8024df4:	f1be 0f18 	cmp.w	lr, #24
 8024df8:	b236      	sxth	r6, r6
 8024dfa:	f63f af5b 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024dfe:	f8a1 720e 	strh.w	r7, [r1, #526]	@ 0x20e
 8024e02:	8917      	ldrh	r7, [r2, #8]
 8024e04:	4a41      	ldr	r2, [pc, #260]	@ (8024f0c <greq_setConfig+0x9c0>)
 8024e06:	370c      	adds	r7, #12
 8024e08:	b23f      	sxth	r7, r7
 8024e0a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024e0e:	f8b7 7290 	ldrh.w	r7, [r7, #656]	@ 0x290
 8024e12:	f5a7 57ff 	sub.w	r7, r7, #8160	@ 0x1fe0
 8024e16:	3f1f      	subs	r7, #31
 8024e18:	b23f      	sxth	r7, r7
 8024e1a:	9700      	str	r7, [sp, #0]
 8024e1c:	fb32 f200 	smulwb	r2, r2, r0
 8024e20:	f8df e118 	ldr.w	lr, [pc, #280]	@ 8024f3c <greq_setConfig+0x9f0>
 8024e24:	fb3e 2204 	smlawb	r2, lr, r4, r2
 8024e28:	4f39      	ldr	r7, [pc, #228]	@ (8024f10 <greq_setConfig+0x9c4>)
 8024e2a:	fb37 2205 	smlawb	r2, r7, r5, r2
 8024e2e:	f8df 9110 	ldr.w	r9, [pc, #272]	@ 8024f40 <greq_setConfig+0x9f4>
 8024e32:	fb39 2206 	smlawb	r2, r9, r6, r2
 8024e36:	f8df c10c 	ldr.w	ip, [pc, #268]	@ 8024f44 <greq_setConfig+0x9f8>
 8024e3a:	9f00      	ldr	r7, [sp, #0]
 8024e3c:	fb3c 2207 	smlawb	r2, ip, r7, r2
 8024e40:	1392      	asrs	r2, r2, #14
 8024e42:	f302 020f 	ssat	r2, #16, r2
 8024e46:	f8ad 201c 	strh.w	r2, [sp, #28]
 8024e4a:	fb3e fe00 	smulwb	lr, lr, r0
 8024e4e:	4a31      	ldr	r2, [pc, #196]	@ (8024f14 <greq_setConfig+0x9c8>)
 8024e50:	fb32 e204 	smlawb	r2, r2, r4, lr
 8024e54:	f8df a0f0 	ldr.w	sl, [pc, #240]	@ 8024f48 <greq_setConfig+0x9fc>
 8024e58:	fb3a 2205 	smlawb	r2, sl, r5, r2
 8024e5c:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 8024f4c <greq_setConfig+0xa00>
 8024e60:	fb38 2206 	smlawb	r2, r8, r6, r2
 8024e64:	f8df e0e8 	ldr.w	lr, [pc, #232]	@ 8024f50 <greq_setConfig+0xa04>
 8024e68:	fb3e 2207 	smlawb	r2, lr, r7, r2
 8024e6c:	1392      	asrs	r2, r2, #14
 8024e6e:	f302 020f 	ssat	r2, #16, r2
 8024e72:	f8ad 201e 	strh.w	r2, [sp, #30]
 8024e76:	4a26      	ldr	r2, [pc, #152]	@ (8024f10 <greq_setConfig+0x9c4>)
 8024e78:	fb32 f200 	smulwb	r2, r2, r0
 8024e7c:	fb3a 2a04 	smlawb	sl, sl, r4, r2
 8024e80:	4a25      	ldr	r2, [pc, #148]	@ (8024f18 <greq_setConfig+0x9cc>)
 8024e82:	fb32 a205 	smlawb	r2, r2, r5, sl
 8024e86:	4f25      	ldr	r7, [pc, #148]	@ (8024f1c <greq_setConfig+0x9d0>)
 8024e88:	fb37 2206 	smlawb	r2, r7, r6, r2
 8024e8c:	f8df a0c4 	ldr.w	sl, [pc, #196]	@ 8024f54 <greq_setConfig+0xa08>
 8024e90:	9f00      	ldr	r7, [sp, #0]
 8024e92:	fb3a 2207 	smlawb	r2, sl, r7, r2
 8024e96:	1392      	asrs	r2, r2, #14
 8024e98:	f302 020f 	ssat	r2, #16, r2
 8024e9c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8024ea0:	fb39 f200 	smulwb	r2, r9, r0
 8024ea4:	fb38 2204 	smlawb	r2, r8, r4, r2
 8024ea8:	4f1c      	ldr	r7, [pc, #112]	@ (8024f1c <greq_setConfig+0x9d0>)
 8024eaa:	fb37 2805 	smlawb	r8, r7, r5, r2
 8024eae:	4a1c      	ldr	r2, [pc, #112]	@ (8024f20 <greq_setConfig+0x9d4>)
 8024eb0:	fb32 8206 	smlawb	r2, r2, r6, r8
 8024eb4:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8024f58 <greq_setConfig+0xa0c>
 8024eb8:	9f00      	ldr	r7, [sp, #0]
 8024eba:	fb38 2207 	smlawb	r2, r8, r7, r2
 8024ebe:	1392      	asrs	r2, r2, #14
 8024ec0:	f302 020f 	ssat	r2, #16, r2
 8024ec4:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8024ec8:	fb3c f200 	smulwb	r2, ip, r0
 8024ecc:	fb3e 2204 	smlawb	r2, lr, r4, r2
 8024ed0:	fb3a 2205 	smlawb	r2, sl, r5, r2
 8024ed4:	fb38 2606 	smlawb	r6, r8, r6, r2
 8024ed8:	4a12      	ldr	r2, [pc, #72]	@ (8024f24 <greq_setConfig+0x9d8>)
 8024eda:	fb32 6207 	smlawb	r2, r2, r7, r6
 8024ede:	1392      	asrs	r2, r2, #14
 8024ee0:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 8024ee4:	f302 020f 	ssat	r2, #16, r2
 8024ee8:	f8ad 2024 	strh.w	r2, [sp, #36]	@ 0x24
 8024eec:	e63f      	b.n	8024b6e <greq_setConfig+0x622>
 8024eee:	4a0e      	ldr	r2, [pc, #56]	@ (8024f28 <greq_setConfig+0x9dc>)
 8024ef0:	e72f      	b.n	8024d52 <greq_setConfig+0x806>
 8024ef2:	4a0e      	ldr	r2, [pc, #56]	@ (8024f2c <greq_setConfig+0x9e0>)
 8024ef4:	e72d      	b.n	8024d52 <greq_setConfig+0x806>
 8024ef6:	4a0e      	ldr	r2, [pc, #56]	@ (8024f30 <greq_setConfig+0x9e4>)
 8024ef8:	e72b      	b.n	8024d52 <greq_setConfig+0x806>
 8024efa:	4a0e      	ldr	r2, [pc, #56]	@ (8024f34 <greq_setConfig+0x9e8>)
 8024efc:	e729      	b.n	8024d52 <greq_setConfig+0x806>
 8024efe:	4a0e      	ldr	r2, [pc, #56]	@ (8024f38 <greq_setConfig+0x9ec>)
 8024f00:	e727      	b.n	8024d52 <greq_setConfig+0x806>
 8024f02:	1c82      	adds	r2, r0, #2
 8024f04:	e725      	b.n	8024d52 <greq_setConfig+0x806>
 8024f06:	bf00      	nop
 8024f08:	0803736c 	.word	0x0803736c
 8024f0c:	445cfbe7 	.word	0x445cfbe7
 8024f10:	02ba502b 	.word	0x02ba502b
 8024f14:	48f4f3d7 	.word	0x48f4f3d7
 8024f18:	48a24f34 	.word	0x48a24f34
 8024f1c:	eec5cc42 	.word	0xeec5cc42
 8024f20:	459bc20d 	.word	0x459bc20d
 8024f24:	41835efa 	.word	0x41835efa
 8024f28:	08037384 	.word	0x08037384
 8024f2c:	08037390 	.word	0x08037390
 8024f30:	0803739c 	.word	0x0803739c
 8024f34:	080373a8 	.word	0x080373a8
 8024f38:	08037378 	.word	0x08037378
 8024f3c:	ee403792 	.word	0xee403792
 8024f40:	ff9e0573 	.word	0xff9e0573
 8024f44:	00088ef1 	.word	0x00088ef1
 8024f48:	ed9dcf5e 	.word	0xed9dcf5e
 8024f4c:	02a8d0af 	.word	0x02a8d0af
 8024f50:	ffc47dda 	.word	0xffc47dda
 8024f54:	018cef2e 	.word	0x018cef2e
 8024f58:	f5c8f3bc 	.word	0xf5c8f3bc
 8024f5c:	f8df e3bc 	ldr.w	lr, [pc, #956]	@ 802531c <greq_setConfig+0xdd0>
 8024f60:	f9be 3000 	ldrsh.w	r3, [lr]
 8024f64:	f103 020c 	add.w	r2, r3, #12
 8024f68:	2a18      	cmp	r2, #24
 8024f6a:	f63f aea3 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024f6e:	f8a1 3206 	strh.w	r3, [r1, #518]	@ 0x206
 8024f72:	f8be 2000 	ldrh.w	r2, [lr]
 8024f76:	4bde      	ldr	r3, [pc, #888]	@ (80252f0 <greq_setConfig+0xda4>)
 8024f78:	f9be 0002 	ldrsh.w	r0, [lr, #2]
 8024f7c:	320c      	adds	r2, #12
 8024f7e:	b212      	sxth	r2, r2
 8024f80:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 8024f84:	f100 040c 	add.w	r4, r0, #12
 8024f88:	f8b2 2290 	ldrh.w	r2, [r2, #656]	@ 0x290
 8024f8c:	f5a2 52ff 	sub.w	r2, r2, #8160	@ 0x1fe0
 8024f90:	3a1f      	subs	r2, #31
 8024f92:	2c18      	cmp	r4, #24
 8024f94:	b212      	sxth	r2, r2
 8024f96:	f63f ae8d 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024f9a:	f8a1 0208 	strh.w	r0, [r1, #520]	@ 0x208
 8024f9e:	f8be 0002 	ldrh.w	r0, [lr, #2]
 8024fa2:	f9be 4004 	ldrsh.w	r4, [lr, #4]
 8024fa6:	300c      	adds	r0, #12
 8024fa8:	b200      	sxth	r0, r0
 8024faa:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8024fae:	f104 050c 	add.w	r5, r4, #12
 8024fb2:	f8b0 0290 	ldrh.w	r0, [r0, #656]	@ 0x290
 8024fb6:	f5a0 50ff 	sub.w	r0, r0, #8160	@ 0x1fe0
 8024fba:	381f      	subs	r0, #31
 8024fbc:	2d18      	cmp	r5, #24
 8024fbe:	b200      	sxth	r0, r0
 8024fc0:	f63f ae78 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024fc4:	f8a1 420a 	strh.w	r4, [r1, #522]	@ 0x20a
 8024fc8:	f8be 4004 	ldrh.w	r4, [lr, #4]
 8024fcc:	f9be 5006 	ldrsh.w	r5, [lr, #6]
 8024fd0:	340c      	adds	r4, #12
 8024fd2:	b224      	sxth	r4, r4
 8024fd4:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024fd8:	f105 060c 	add.w	r6, r5, #12
 8024fdc:	f8b4 4290 	ldrh.w	r4, [r4, #656]	@ 0x290
 8024fe0:	f5a4 54ff 	sub.w	r4, r4, #8160	@ 0x1fe0
 8024fe4:	3c1f      	subs	r4, #31
 8024fe6:	2e18      	cmp	r6, #24
 8024fe8:	b224      	sxth	r4, r4
 8024fea:	f63f ae63 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8024fee:	f8a1 520c 	strh.w	r5, [r1, #524]	@ 0x20c
 8024ff2:	f8be 5006 	ldrh.w	r5, [lr, #6]
 8024ff6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8024ffa:	350c      	adds	r5, #12
 8024ffc:	b22d      	sxth	r5, r5
 8024ffe:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8025002:	f106 070c 	add.w	r7, r6, #12
 8025006:	f8b5 5290 	ldrh.w	r5, [r5, #656]	@ 0x290
 802500a:	f5a5 55ff 	sub.w	r5, r5, #8160	@ 0x1fe0
 802500e:	3d1f      	subs	r5, #31
 8025010:	2f18      	cmp	r7, #24
 8025012:	b22d      	sxth	r5, r5
 8025014:	f63f ae4e 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8025018:	f8a1 620e 	strh.w	r6, [r1, #526]	@ 0x20e
 802501c:	f8be 6008 	ldrh.w	r6, [lr, #8]
 8025020:	f9be 700a 	ldrsh.w	r7, [lr, #10]
 8025024:	360c      	adds	r6, #12
 8025026:	b236      	sxth	r6, r6
 8025028:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 802502c:	f107 0c0c 	add.w	ip, r7, #12
 8025030:	f8b6 6290 	ldrh.w	r6, [r6, #656]	@ 0x290
 8025034:	f5a6 56ff 	sub.w	r6, r6, #8160	@ 0x1fe0
 8025038:	3e1f      	subs	r6, #31
 802503a:	b233      	sxth	r3, r6
 802503c:	f1bc 0f18 	cmp.w	ip, #24
 8025040:	9300      	str	r3, [sp, #0]
 8025042:	f63f ae37 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8025046:	f8a1 7210 	strh.w	r7, [r1, #528]	@ 0x210
 802504a:	f8be 700a 	ldrh.w	r7, [lr, #10]
 802504e:	4ba8      	ldr	r3, [pc, #672]	@ (80252f0 <greq_setConfig+0xda4>)
 8025050:	f9be c00c 	ldrsh.w	ip, [lr, #12]
 8025054:	370c      	adds	r7, #12
 8025056:	b23f      	sxth	r7, r7
 8025058:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802505c:	f10c 080c 	add.w	r8, ip, #12
 8025060:	f8b7 7290 	ldrh.w	r7, [r7, #656]	@ 0x290
 8025064:	f5a7 57ff 	sub.w	r7, r7, #8160	@ 0x1fe0
 8025068:	3f1f      	subs	r7, #31
 802506a:	b23b      	sxth	r3, r7
 802506c:	f1b8 0f18 	cmp.w	r8, #24
 8025070:	9303      	str	r3, [sp, #12]
 8025072:	f63f ae1f 	bhi.w	8024cb4 <greq_setConfig+0x768>
 8025076:	f8a1 c212 	strh.w	ip, [r1, #530]	@ 0x212
 802507a:	f8be c00c 	ldrh.w	ip, [lr, #12]
 802507e:	4b9c      	ldr	r3, [pc, #624]	@ (80252f0 <greq_setConfig+0xda4>)
 8025080:	f9be 800e 	ldrsh.w	r8, [lr, #14]
 8025084:	f10c 0c0c 	add.w	ip, ip, #12
 8025088:	fa0f fc8c 	sxth.w	ip, ip
 802508c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025090:	f108 090c 	add.w	r9, r8, #12
 8025094:	f8bc c290 	ldrh.w	ip, [ip, #656]	@ 0x290
 8025098:	f5ac 5cff 	sub.w	ip, ip, #8160	@ 0x1fe0
 802509c:	f1ac 0c1f 	sub.w	ip, ip, #31
 80250a0:	fa0f f38c 	sxth.w	r3, ip
 80250a4:	f1b9 0f18 	cmp.w	r9, #24
 80250a8:	9301      	str	r3, [sp, #4]
 80250aa:	f63f ae03 	bhi.w	8024cb4 <greq_setConfig+0x768>
 80250ae:	f8a1 8214 	strh.w	r8, [r1, #532]	@ 0x214
 80250b2:	f8be e00e 	ldrh.w	lr, [lr, #14]
 80250b6:	4b8e      	ldr	r3, [pc, #568]	@ (80252f0 <greq_setConfig+0xda4>)
 80250b8:	f8df c264 	ldr.w	ip, [pc, #612]	@ 8025320 <greq_setConfig+0xdd4>
 80250bc:	f10e 0e0c 	add.w	lr, lr, #12
 80250c0:	fa0f fe8e 	sxth.w	lr, lr
 80250c4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80250c8:	f8be e290 	ldrh.w	lr, [lr, #656]	@ 0x290
 80250cc:	f5ae 5eff 	sub.w	lr, lr, #8160	@ 0x1fe0
 80250d0:	f1ae 0e1f 	sub.w	lr, lr, #31
 80250d4:	fa0f f78e 	sxth.w	r7, lr
 80250d8:	fb3c fe02 	smulwb	lr, ip, r2
 80250dc:	f8df c244 	ldr.w	ip, [pc, #580]	@ 8025324 <greq_setConfig+0xdd8>
 80250e0:	fb3c ee00 	smlawb	lr, ip, r0, lr
 80250e4:	f8df 8240 	ldr.w	r8, [pc, #576]	@ 8025328 <greq_setConfig+0xddc>
 80250e8:	fb38 ee04 	smlawb	lr, r8, r4, lr
 80250ec:	4b81      	ldr	r3, [pc, #516]	@ (80252f4 <greq_setConfig+0xda8>)
 80250ee:	fb33 ee05 	smlawb	lr, r3, r5, lr
 80250f2:	4b81      	ldr	r3, [pc, #516]	@ (80252f8 <greq_setConfig+0xdac>)
 80250f4:	9e00      	ldr	r6, [sp, #0]
 80250f6:	fb33 ee06 	smlawb	lr, r3, r6, lr
 80250fa:	4b80      	ldr	r3, [pc, #512]	@ (80252fc <greq_setConfig+0xdb0>)
 80250fc:	9e03      	ldr	r6, [sp, #12]
 80250fe:	fb33 ee06 	smlawb	lr, r3, r6, lr
 8025102:	f241 5992 	movw	r9, #5522	@ 0x1592
 8025106:	9b01      	ldr	r3, [sp, #4]
 8025108:	fb39 ee03 	smlawb	lr, r9, r3, lr
 802510c:	f46f 79c4 	mvn.w	r9, #392	@ 0x188
 8025110:	9702      	str	r7, [sp, #8]
 8025112:	fb39 ee07 	smlawb	lr, r9, r7, lr
 8025116:	ea4f 3eae 	mov.w	lr, lr, asr #14
 802511a:	f30e 0e0f 	ssat	lr, #16, lr
 802511e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8025122:	fb3c fc02 	smulwb	ip, ip, r2
 8025126:	f8df e204 	ldr.w	lr, [pc, #516]	@ 802532c <greq_setConfig+0xde0>
 802512a:	fb3e ce00 	smlawb	lr, lr, r0, ip
 802512e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8025330 <greq_setConfig+0xde4>
 8025132:	fb39 ee04 	smlawb	lr, r9, r4, lr
 8025136:	f8df c1fc 	ldr.w	ip, [pc, #508]	@ 8025334 <greq_setConfig+0xde8>
 802513a:	fb3c ee05 	smlawb	lr, ip, r5, lr
 802513e:	f8df a1f8 	ldr.w	sl, [pc, #504]	@ 8025338 <greq_setConfig+0xdec>
 8025142:	9b00      	ldr	r3, [sp, #0]
 8025144:	fb3a ee03 	smlawb	lr, sl, r3, lr
 8025148:	4b6d      	ldr	r3, [pc, #436]	@ (8025300 <greq_setConfig+0xdb4>)
 802514a:	fb33 ee06 	smlawb	lr, r3, r6, lr
 802514e:	4f6d      	ldr	r7, [pc, #436]	@ (8025304 <greq_setConfig+0xdb8>)
 8025150:	9b01      	ldr	r3, [sp, #4]
 8025152:	fb37 ee03 	smlawb	lr, r7, r3, lr
 8025156:	f640 1361 	movw	r3, #2401	@ 0x961
 802515a:	9f02      	ldr	r7, [sp, #8]
 802515c:	fb33 ee07 	smlawb	lr, r3, r7, lr
 8025160:	ea4f 3eae 	mov.w	lr, lr, asr #14
 8025164:	f30e 0e0f 	ssat	lr, #16, lr
 8025168:	f8ad e01e 	strh.w	lr, [sp, #30]
 802516c:	fb38 f802 	smulwb	r8, r8, r2
 8025170:	fb39 8900 	smlawb	r9, r9, r0, r8
 8025174:	f8df e1c4 	ldr.w	lr, [pc, #452]	@ 802533c <greq_setConfig+0xdf0>
 8025178:	fb3e 9e04 	smlawb	lr, lr, r4, r9
 802517c:	f8df 81c0 	ldr.w	r8, [pc, #448]	@ 8025340 <greq_setConfig+0xdf4>
 8025180:	fb38 ee05 	smlawb	lr, r8, r5, lr
 8025184:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8025344 <greq_setConfig+0xdf8>
 8025188:	9b00      	ldr	r3, [sp, #0]
 802518a:	fb39 ee03 	smlawb	lr, r9, r3, lr
 802518e:	4b5e      	ldr	r3, [pc, #376]	@ (8025308 <greq_setConfig+0xdbc>)
 8025190:	fb33 ee06 	smlawb	lr, r3, r6, lr
 8025194:	4f5d      	ldr	r7, [pc, #372]	@ (802530c <greq_setConfig+0xdc0>)
 8025196:	9b01      	ldr	r3, [sp, #4]
 8025198:	fb37 ee03 	smlawb	lr, r7, r3, lr
 802519c:	4b5c      	ldr	r3, [pc, #368]	@ (8025310 <greq_setConfig+0xdc4>)
 802519e:	9f02      	ldr	r7, [sp, #8]
 80251a0:	fb33 ee07 	smlawb	lr, r3, r7, lr
 80251a4:	f5a3 039e 	sub.w	r3, r3, #5177344	@ 0x4f0000
 80251a8:	ea4f 3eae 	mov.w	lr, lr, asr #14
 80251ac:	3b20      	subs	r3, #32
 80251ae:	f30e 0e0f 	ssat	lr, #16, lr
 80251b2:	f8ad e020 	strh.w	lr, [sp, #32]
 80251b6:	fb33 fe02 	smulwb	lr, r3, r2
 80251ba:	fb3c ee00 	smlawb	lr, ip, r0, lr
 80251be:	fb38 e804 	smlawb	r8, r8, r4, lr
 80251c2:	f8df e184 	ldr.w	lr, [pc, #388]	@ 8025348 <greq_setConfig+0xdfc>
 80251c6:	fb3e 8e05 	smlawb	lr, lr, r5, r8
 80251ca:	f8df c180 	ldr.w	ip, [pc, #384]	@ 802534c <greq_setConfig+0xe00>
 80251ce:	9b00      	ldr	r3, [sp, #0]
 80251d0:	fb3c ee03 	smlawb	lr, ip, r3, lr
 80251d4:	f8df 8178 	ldr.w	r8, [pc, #376]	@ 8025350 <greq_setConfig+0xe04>
 80251d8:	fb38 ee06 	smlawb	lr, r8, r6, lr
 80251dc:	4f4d      	ldr	r7, [pc, #308]	@ (8025314 <greq_setConfig+0xdc8>)
 80251de:	9b01      	ldr	r3, [sp, #4]
 80251e0:	fb37 ee03 	smlawb	lr, r7, r3, lr
 80251e4:	4b4c      	ldr	r3, [pc, #304]	@ (8025318 <greq_setConfig+0xdcc>)
 80251e6:	9f02      	ldr	r7, [sp, #8]
 80251e8:	fb33 ee07 	smlawb	lr, r3, r7, lr
 80251ec:	4b42      	ldr	r3, [pc, #264]	@ (80252f8 <greq_setConfig+0xdac>)
 80251ee:	ea4f 3eae 	mov.w	lr, lr, asr #14
 80251f2:	f30e 0e0f 	ssat	lr, #16, lr
 80251f6:	f8ad e022 	strh.w	lr, [sp, #34]	@ 0x22
 80251fa:	fb33 fe02 	smulwb	lr, r3, r2
 80251fe:	fb3a ee00 	smlawb	lr, sl, r0, lr
 8025202:	fb39 ee04 	smlawb	lr, r9, r4, lr
 8025206:	fb3c ec05 	smlawb	ip, ip, r5, lr
 802520a:	f8df e148 	ldr.w	lr, [pc, #328]	@ 8025354 <greq_setConfig+0xe08>
 802520e:	9b00      	ldr	r3, [sp, #0]
 8025210:	fb3e ce03 	smlawb	lr, lr, r3, ip
 8025214:	f8df a140 	ldr.w	sl, [pc, #320]	@ 8025358 <greq_setConfig+0xe0c>
 8025218:	fb3a ee06 	smlawb	lr, sl, r6, lr
 802521c:	f8df c13c 	ldr.w	ip, [pc, #316]	@ 802535c <greq_setConfig+0xe10>
 8025220:	9b01      	ldr	r3, [sp, #4]
 8025222:	fb3c ee03 	smlawb	lr, ip, r3, lr
 8025226:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 8025360 <greq_setConfig+0xe14>
 802522a:	9f02      	ldr	r7, [sp, #8]
 802522c:	fb39 ee07 	smlawb	lr, r9, r7, lr
 8025230:	4b32      	ldr	r3, [pc, #200]	@ (80252fc <greq_setConfig+0xdb0>)
 8025232:	ea4f 3eae 	mov.w	lr, lr, asr #14
 8025236:	f30e 0e0f 	ssat	lr, #16, lr
 802523a:	f8ad e024 	strh.w	lr, [sp, #36]	@ 0x24
 802523e:	fb33 fe02 	smulwb	lr, r3, r2
 8025242:	4b2f      	ldr	r3, [pc, #188]	@ (8025300 <greq_setConfig+0xdb4>)
 8025244:	fb33 ee00 	smlawb	lr, r3, r0, lr
 8025248:	4b2f      	ldr	r3, [pc, #188]	@ (8025308 <greq_setConfig+0xdbc>)
 802524a:	fb33 ee04 	smlawb	lr, r3, r4, lr
 802524e:	fb38 ee05 	smlawb	lr, r8, r5, lr
 8025252:	9b00      	ldr	r3, [sp, #0]
 8025254:	fb3a ea03 	smlawb	sl, sl, r3, lr
 8025258:	f8df e108 	ldr.w	lr, [pc, #264]	@ 8025364 <greq_setConfig+0xe18>
 802525c:	fb3e ae06 	smlawb	lr, lr, r6, sl
 8025260:	f8df a104 	ldr.w	sl, [pc, #260]	@ 8025368 <greq_setConfig+0xe1c>
 8025264:	9b01      	ldr	r3, [sp, #4]
 8025266:	fb3a ee03 	smlawb	lr, sl, r3, lr
 802526a:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 802536c <greq_setConfig+0xe20>
 802526e:	fb38 ee07 	smlawb	lr, r8, r7, lr
 8025272:	ea4f 3eae 	mov.w	lr, lr, asr #14
 8025276:	f30e 0e0f 	ssat	lr, #16, lr
 802527a:	f8ad e026 	strh.w	lr, [sp, #38]	@ 0x26
 802527e:	f241 5e92 	movw	lr, #5522	@ 0x1592
 8025282:	fb3e fe02 	smulwb	lr, lr, r2
 8025286:	4b1f      	ldr	r3, [pc, #124]	@ (8025304 <greq_setConfig+0xdb8>)
 8025288:	fb33 ee00 	smlawb	lr, r3, r0, lr
 802528c:	4b1f      	ldr	r3, [pc, #124]	@ (802530c <greq_setConfig+0xdc0>)
 802528e:	fb33 ee04 	smlawb	lr, r3, r4, lr
 8025292:	4b20      	ldr	r3, [pc, #128]	@ (8025314 <greq_setConfig+0xdc8>)
 8025294:	fb33 ee05 	smlawb	lr, r3, r5, lr
 8025298:	9b00      	ldr	r3, [sp, #0]
 802529a:	fb3c ee03 	smlawb	lr, ip, r3, lr
 802529e:	fb3a ee06 	smlawb	lr, sl, r6, lr
 80252a2:	f8df a0cc 	ldr.w	sl, [pc, #204]	@ 8025370 <greq_setConfig+0xe24>
 80252a6:	9b01      	ldr	r3, [sp, #4]
 80252a8:	fb3a ee03 	smlawb	lr, sl, r3, lr
 80252ac:	f8df c0c4 	ldr.w	ip, [pc, #196]	@ 8025374 <greq_setConfig+0xe28>
 80252b0:	9f02      	ldr	r7, [sp, #8]
 80252b2:	fb3c ee07 	smlawb	lr, ip, r7, lr
 80252b6:	ea4f 3eae 	mov.w	lr, lr, asr #14
 80252ba:	f30e 0e0f 	ssat	lr, #16, lr
 80252be:	f8ad e028 	strh.w	lr, [sp, #40]	@ 0x28
 80252c2:	f46f 7ec4 	mvn.w	lr, #392	@ 0x188
 80252c6:	fb3e f202 	smulwb	r2, lr, r2
 80252ca:	f640 1e61 	movw	lr, #2401	@ 0x961
 80252ce:	fb3e 2200 	smlawb	r2, lr, r0, r2
 80252d2:	480f      	ldr	r0, [pc, #60]	@ (8025310 <greq_setConfig+0xdc4>)
 80252d4:	fb30 2204 	smlawb	r2, r0, r4, r2
 80252d8:	480f      	ldr	r0, [pc, #60]	@ (8025318 <greq_setConfig+0xdcc>)
 80252da:	fb30 2205 	smlawb	r2, r0, r5, r2
 80252de:	9b00      	ldr	r3, [sp, #0]
 80252e0:	fb39 2203 	smlawb	r2, r9, r3, r2
 80252e4:	fb38 2206 	smlawb	r2, r8, r6, r2
 80252e8:	9b01      	ldr	r3, [sp, #4]
 80252ea:	fb3c 2c03 	smlawb	ip, ip, r3, r2
 80252ee:	e043      	b.n	8025378 <greq_setConfig+0xe2c>
 80252f0:	0803736c 	.word	0x0803736c
 80252f4:	ffb091c9 	.word	0xffb091c9
 80252f8:	000791ce 	.word	0x000791ce
 80252fc:	fffeebd6 	.word	0xfffeebd6
 8025300:	0007885e 	.word	0x0007885e
 8025304:	ffff113b 	.word	0xffff113b
 8025308:	ffb24a72 	.word	0xffb24a72
 802530c:	00062cbf 	.word	0x00062cbf
 8025310:	ffff91e9 	.word	0xffff91e9
 8025314:	ffbe677c 	.word	0xffbe677c
 8025318:	000292ce 	.word	0x000292ce
 802531c:	080373b4 	.word	0x080373b4
 8025320:	46433f4b 	.word	0x46433f4b
 8025324:	ea81d601 	.word	0xea81d601
 8025328:	0219b23d 	.word	0x0219b23d
 802532c:	4cd6d25f 	.word	0x4cd6d25f
 8025330:	e9dd89d2 	.word	0xe9dd89d2
 8025334:	022f4abf 	.word	0x022f4abf
 8025338:	ffaefff5 	.word	0xffaefff5
 802533c:	4cda03f6 	.word	0x4cda03f6
 8025340:	e9f4a7eb 	.word	0xe9f4a7eb
 8025344:	0229bd79 	.word	0x0229bd79
 8025348:	4cc3bcdf 	.word	0x4cc3bcdf
 802534c:	ea0eaaac 	.word	0xea0eaaac
 8025350:	0211216f 	.word	0x0211216f
 8025354:	4c6064de 	.word	0x4c6064de
 8025358:	ead1ef26 	.word	0xead1ef26
 802535c:	01b3dc44 	.word	0x01b3dc44
 8025360:	ffe196d4 	.word	0xffe196d4
 8025364:	4acdc089 	.word	0x4acdc089
 8025368:	ed79d790 	.word	0xed79d790
 802536c:	00b99400 	.word	0x00b99400
 8025370:	4650753d 	.word	0x4650753d
 8025374:	f5c62463 	.word	0xf5c62463
 8025378:	4a10      	ldr	r2, [pc, #64]	@ (80253bc <greq_setConfig+0xe70>)
 802537a:	fb32 c207 	smlawb	r2, r2, r7, ip
 802537e:	4b10      	ldr	r3, [pc, #64]	@ (80253c0 <greq_setConfig+0xe74>)
 8025380:	1392      	asrs	r2, r2, #14
 8025382:	f503 7390 	add.w	r3, r3, #288	@ 0x120
 8025386:	f302 020f 	ssat	r2, #16, r2
 802538a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 802538e:	f7ff bbee 	b.w	8024b6e <greq_setConfig+0x622>
 8025392:	f8df e030 	ldr.w	lr, [pc, #48]	@ 80253c4 <greq_setConfig+0xe78>
 8025396:	e5e3      	b.n	8024f60 <greq_setConfig+0xa14>
 8025398:	f8df e02c 	ldr.w	lr, [pc, #44]	@ 80253c8 <greq_setConfig+0xe7c>
 802539c:	e5e0      	b.n	8024f60 <greq_setConfig+0xa14>
 802539e:	f8df e02c 	ldr.w	lr, [pc, #44]	@ 80253cc <greq_setConfig+0xe80>
 80253a2:	e5dd      	b.n	8024f60 <greq_setConfig+0xa14>
 80253a4:	f8df e028 	ldr.w	lr, [pc, #40]	@ 80253d0 <greq_setConfig+0xe84>
 80253a8:	e5da      	b.n	8024f60 <greq_setConfig+0xa14>
 80253aa:	f100 0e02 	add.w	lr, r0, #2
 80253ae:	e5d7      	b.n	8024f60 <greq_setConfig+0xa14>
 80253b0:	f8df e020 	ldr.w	lr, [pc, #32]	@ 80253d4 <greq_setConfig+0xe88>
 80253b4:	e5d4      	b.n	8024f60 <greq_setConfig+0xa14>
 80253b6:	f06f 0003 	mvn.w	r0, #3
 80253ba:	e474      	b.n	8024ca6 <greq_setConfig+0x75a>
 80253bc:	418bb81d 	.word	0x418bb81d
 80253c0:	0803736c 	.word	0x0803736c
 80253c4:	080373d4 	.word	0x080373d4
 80253c8:	080373e4 	.word	0x080373e4
 80253cc:	080373f4 	.word	0x080373f4
 80253d0:	08037404 	.word	0x08037404
 80253d4:	080373c4 	.word	0x080373c4

080253d8 <greq_getConfig>:
 80253d8:	b4f0      	push	{r4, r5, r6, r7}
 80253da:	f9b1 421c 	ldrsh.w	r4, [r1, #540]	@ 0x21c
 80253de:	f8b1 2204 	ldrh.w	r2, [r1, #516]	@ 0x204
 80253e2:	f8b1 321a 	ldrh.w	r3, [r1, #538]	@ 0x21a
 80253e6:	82c3      	strh	r3, [r0, #22]
 80253e8:	2c00      	cmp	r4, #0
 80253ea:	8002      	strh	r2, [r0, #0]
 80253ec:	dd43      	ble.n	8025476 <greq_getConfig+0x9e>
 80253ee:	f201 2206 	addw	r2, r1, #518	@ 0x206
 80253f2:	1c85      	adds	r5, r0, #2
 80253f4:	f100 060a 	add.w	r6, r0, #10
 80253f8:	f201 270e 	addw	r7, r1, #526	@ 0x20e
 80253fc:	42bd      	cmp	r5, r7
 80253fe:	bf38      	it	cc
 8025400:	42b2      	cmpcc	r2, r6
 8025402:	bf2c      	ite	cs
 8025404:	2301      	movcs	r3, #1
 8025406:	2300      	movcc	r3, #0
 8025408:	2c09      	cmp	r4, #9
 802540a:	bf94      	ite	ls
 802540c:	2300      	movls	r3, #0
 802540e:	f003 0301 	andhi.w	r3, r3, #1
 8025412:	2b00      	cmp	r3, #0
 8025414:	d03b      	beq.n	802548e <greq_getConfig+0xb6>
 8025416:	ea42 0305 	orr.w	r3, r2, r5
 802541a:	075b      	lsls	r3, r3, #29
 802541c:	d137      	bne.n	802548e <greq_getConfig+0xb6>
 802541e:	e9d2 2300 	ldrd	r2, r3, [r2]
 8025422:	e9c5 2300 	strd	r2, r3, [r5]
 8025426:	1f25      	subs	r5, r4, #4
 8025428:	e9d7 2300 	ldrd	r2, r3, [r7]
 802542c:	08ad      	lsrs	r5, r5, #2
 802542e:	3501      	adds	r5, #1
 8025430:	2d02      	cmp	r5, #2
 8025432:	e9c6 2300 	strd	r2, r3, [r6]
 8025436:	ea4f 0385 	mov.w	r3, r5, lsl #2
 802543a:	d11f      	bne.n	802547c <greq_getConfig+0xa4>
 802543c:	429c      	cmp	r4, r3
 802543e:	d01a      	beq.n	8025476 <greq_getConfig+0x9e>
 8025440:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 8025444:	eb00 0543 	add.w	r5, r0, r3, lsl #1
 8025448:	f8b2 2206 	ldrh.w	r2, [r2, #518]	@ 0x206
 802544c:	806a      	strh	r2, [r5, #2]
 802544e:	1c5a      	adds	r2, r3, #1
 8025450:	4294      	cmp	r4, r2
 8025452:	dd10      	ble.n	8025476 <greq_getConfig+0x9e>
 8025454:	eb01 0543 	add.w	r5, r1, r3, lsl #1
 8025458:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802545c:	f8b5 5208 	ldrh.w	r5, [r5, #520]	@ 0x208
 8025460:	8055      	strh	r5, [r2, #2]
 8025462:	1c9a      	adds	r2, r3, #2
 8025464:	4294      	cmp	r4, r2
 8025466:	dd06      	ble.n	8025476 <greq_getConfig+0x9e>
 8025468:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 802546c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025470:	f8b1 320a 	ldrh.w	r3, [r1, #522]	@ 0x20a
 8025474:	8043      	strh	r3, [r0, #2]
 8025476:	2000      	movs	r0, #0
 8025478:	bcf0      	pop	{r4, r5, r6, r7}
 802547a:	4770      	bx	lr
 802547c:	f201 2216 	addw	r2, r1, #534	@ 0x216
 8025480:	e9d2 6700 	ldrd	r6, r7, [r2]
 8025484:	f100 0212 	add.w	r2, r0, #18
 8025488:	e9c2 6700 	strd	r6, r7, [r2]
 802548c:	e7d6      	b.n	802543c <greq_getConfig+0x64>
 802548e:	f8b1 3206 	ldrh.w	r3, [r1, #518]	@ 0x206
 8025492:	8043      	strh	r3, [r0, #2]
 8025494:	2c01      	cmp	r4, #1
 8025496:	d0ee      	beq.n	8025476 <greq_getConfig+0x9e>
 8025498:	f8b1 3208 	ldrh.w	r3, [r1, #520]	@ 0x208
 802549c:	8083      	strh	r3, [r0, #4]
 802549e:	2c02      	cmp	r4, #2
 80254a0:	d0e9      	beq.n	8025476 <greq_getConfig+0x9e>
 80254a2:	f8b1 320a 	ldrh.w	r3, [r1, #522]	@ 0x20a
 80254a6:	80c3      	strh	r3, [r0, #6]
 80254a8:	2c03      	cmp	r4, #3
 80254aa:	d0e4      	beq.n	8025476 <greq_getConfig+0x9e>
 80254ac:	f8b1 320c 	ldrh.w	r3, [r1, #524]	@ 0x20c
 80254b0:	8103      	strh	r3, [r0, #8]
 80254b2:	2c04      	cmp	r4, #4
 80254b4:	d0df      	beq.n	8025476 <greq_getConfig+0x9e>
 80254b6:	f8b1 320e 	ldrh.w	r3, [r1, #526]	@ 0x20e
 80254ba:	8143      	strh	r3, [r0, #10]
 80254bc:	2c05      	cmp	r4, #5
 80254be:	d0da      	beq.n	8025476 <greq_getConfig+0x9e>
 80254c0:	f8b1 3210 	ldrh.w	r3, [r1, #528]	@ 0x210
 80254c4:	8183      	strh	r3, [r0, #12]
 80254c6:	2c06      	cmp	r4, #6
 80254c8:	d0d5      	beq.n	8025476 <greq_getConfig+0x9e>
 80254ca:	f8b1 3212 	ldrh.w	r3, [r1, #530]	@ 0x212
 80254ce:	81c3      	strh	r3, [r0, #14]
 80254d0:	2c07      	cmp	r4, #7
 80254d2:	d0d0      	beq.n	8025476 <greq_getConfig+0x9e>
 80254d4:	f8b1 3214 	ldrh.w	r3, [r1, #532]	@ 0x214
 80254d8:	8203      	strh	r3, [r0, #16]
 80254da:	2c08      	cmp	r4, #8
 80254dc:	d0cb      	beq.n	8025476 <greq_getConfig+0x9e>
 80254de:	f8b1 3216 	ldrh.w	r3, [r1, #534]	@ 0x216
 80254e2:	8243      	strh	r3, [r0, #18]
 80254e4:	2c09      	cmp	r4, #9
 80254e6:	bf1c      	itt	ne
 80254e8:	f8b1 3218 	ldrhne.w	r3, [r1, #536]	@ 0x218
 80254ec:	8283      	strhne	r3, [r0, #20]
 80254ee:	bcf0      	pop	{r4, r5, r6, r7}
 80254f0:	2000      	movs	r0, #0
 80254f2:	4770      	bx	lr

080254f4 <greq_setParam>:
 80254f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80254f6:	f9b0 6000 	ldrsh.w	r6, [r0]
 80254fa:	f8a1 621c 	strh.w	r6, [r1, #540]	@ 0x21c
 80254fe:	2e08      	cmp	r6, #8
 8025500:	f000 80de 	beq.w	80256c0 <greq_setParam+0x1cc>
 8025504:	2e0a      	cmp	r6, #10
 8025506:	f000 80d9 	beq.w	80256bc <greq_setParam+0x1c8>
 802550a:	2e05      	cmp	r6, #5
 802550c:	d002      	beq.n	8025514 <greq_setParam+0x20>
 802550e:	f06f 0002 	mvn.w	r0, #2
 8025512:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025514:	4d6b      	ldr	r5, [pc, #428]	@ (80256c4 <greq_setParam+0x1d0>)
 8025516:	2e01      	cmp	r6, #1
 8025518:	460c      	mov	r4, r1
 802551a:	4632      	mov	r2, r6
 802551c:	bfb8      	it	lt
 802551e:	2201      	movlt	r2, #1
 8025520:	0052      	lsls	r2, r2, #1
 8025522:	2100      	movs	r1, #0
 8025524:	f204 2006 	addw	r0, r4, #518	@ 0x206
 8025528:	f008 fb14 	bl	802db54 <memset>
 802552c:	682b      	ldr	r3, [r5, #0]
 802552e:	6063      	str	r3, [r4, #4]
 8025530:	686a      	ldr	r2, [r5, #4]
 8025532:	2300      	movs	r3, #0
 8025534:	fb32 f203 	smulwb	r2, r2, r3
 8025538:	f302 021e 	ssat	r2, #31, r2
 802553c:	0052      	lsls	r2, r2, #1
 802553e:	60a2      	str	r2, [r4, #8]
 8025540:	68aa      	ldr	r2, [r5, #8]
 8025542:	60e2      	str	r2, [r4, #12]
 8025544:	68ea      	ldr	r2, [r5, #12]
 8025546:	6122      	str	r2, [r4, #16]
 8025548:	2e01      	cmp	r6, #1
 802554a:	f340 8097 	ble.w	802567c <greq_setParam+0x188>
 802554e:	692a      	ldr	r2, [r5, #16]
 8025550:	6162      	str	r2, [r4, #20]
 8025552:	696a      	ldr	r2, [r5, #20]
 8025554:	fb32 f203 	smulwb	r2, r2, r3
 8025558:	f302 021e 	ssat	r2, #31, r2
 802555c:	0052      	lsls	r2, r2, #1
 802555e:	61a2      	str	r2, [r4, #24]
 8025560:	69aa      	ldr	r2, [r5, #24]
 8025562:	61e2      	str	r2, [r4, #28]
 8025564:	69ea      	ldr	r2, [r5, #28]
 8025566:	6222      	str	r2, [r4, #32]
 8025568:	2e02      	cmp	r6, #2
 802556a:	f000 8087 	beq.w	802567c <greq_setParam+0x188>
 802556e:	6a2a      	ldr	r2, [r5, #32]
 8025570:	6262      	str	r2, [r4, #36]	@ 0x24
 8025572:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 8025574:	fb32 f203 	smulwb	r2, r2, r3
 8025578:	f302 021e 	ssat	r2, #31, r2
 802557c:	0052      	lsls	r2, r2, #1
 802557e:	62a2      	str	r2, [r4, #40]	@ 0x28
 8025580:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8025582:	62e2      	str	r2, [r4, #44]	@ 0x2c
 8025584:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 8025586:	6322      	str	r2, [r4, #48]	@ 0x30
 8025588:	2e03      	cmp	r6, #3
 802558a:	d077      	beq.n	802567c <greq_setParam+0x188>
 802558c:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
 802558e:	6362      	str	r2, [r4, #52]	@ 0x34
 8025590:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8025592:	fb32 f203 	smulwb	r2, r2, r3
 8025596:	f302 021e 	ssat	r2, #31, r2
 802559a:	0052      	lsls	r2, r2, #1
 802559c:	63a2      	str	r2, [r4, #56]	@ 0x38
 802559e:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 80255a0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80255a2:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
 80255a4:	6422      	str	r2, [r4, #64]	@ 0x40
 80255a6:	2e04      	cmp	r6, #4
 80255a8:	d068      	beq.n	802567c <greq_setParam+0x188>
 80255aa:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 80255ac:	6462      	str	r2, [r4, #68]	@ 0x44
 80255ae:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 80255b0:	fb32 f203 	smulwb	r2, r2, r3
 80255b4:	f302 021e 	ssat	r2, #31, r2
 80255b8:	0052      	lsls	r2, r2, #1
 80255ba:	64a2      	str	r2, [r4, #72]	@ 0x48
 80255bc:	6caa      	ldr	r2, [r5, #72]	@ 0x48
 80255be:	64e2      	str	r2, [r4, #76]	@ 0x4c
 80255c0:	6cea      	ldr	r2, [r5, #76]	@ 0x4c
 80255c2:	6522      	str	r2, [r4, #80]	@ 0x50
 80255c4:	2e05      	cmp	r6, #5
 80255c6:	d059      	beq.n	802567c <greq_setParam+0x188>
 80255c8:	6d2a      	ldr	r2, [r5, #80]	@ 0x50
 80255ca:	6562      	str	r2, [r4, #84]	@ 0x54
 80255cc:	6d6a      	ldr	r2, [r5, #84]	@ 0x54
 80255ce:	fb32 f203 	smulwb	r2, r2, r3
 80255d2:	f302 021e 	ssat	r2, #31, r2
 80255d6:	0052      	lsls	r2, r2, #1
 80255d8:	65a2      	str	r2, [r4, #88]	@ 0x58
 80255da:	6daa      	ldr	r2, [r5, #88]	@ 0x58
 80255dc:	65e2      	str	r2, [r4, #92]	@ 0x5c
 80255de:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
 80255e0:	6622      	str	r2, [r4, #96]	@ 0x60
 80255e2:	2e06      	cmp	r6, #6
 80255e4:	d04a      	beq.n	802567c <greq_setParam+0x188>
 80255e6:	6e2a      	ldr	r2, [r5, #96]	@ 0x60
 80255e8:	6662      	str	r2, [r4, #100]	@ 0x64
 80255ea:	6e6a      	ldr	r2, [r5, #100]	@ 0x64
 80255ec:	fb32 f203 	smulwb	r2, r2, r3
 80255f0:	f302 021e 	ssat	r2, #31, r2
 80255f4:	0052      	lsls	r2, r2, #1
 80255f6:	66a2      	str	r2, [r4, #104]	@ 0x68
 80255f8:	6eaa      	ldr	r2, [r5, #104]	@ 0x68
 80255fa:	66e2      	str	r2, [r4, #108]	@ 0x6c
 80255fc:	6eea      	ldr	r2, [r5, #108]	@ 0x6c
 80255fe:	6722      	str	r2, [r4, #112]	@ 0x70
 8025600:	2e07      	cmp	r6, #7
 8025602:	d03b      	beq.n	802567c <greq_setParam+0x188>
 8025604:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8025606:	6762      	str	r2, [r4, #116]	@ 0x74
 8025608:	6f6a      	ldr	r2, [r5, #116]	@ 0x74
 802560a:	fb32 f203 	smulwb	r2, r2, r3
 802560e:	f302 021e 	ssat	r2, #31, r2
 8025612:	0052      	lsls	r2, r2, #1
 8025614:	67a2      	str	r2, [r4, #120]	@ 0x78
 8025616:	6faa      	ldr	r2, [r5, #120]	@ 0x78
 8025618:	67e2      	str	r2, [r4, #124]	@ 0x7c
 802561a:	6fea      	ldr	r2, [r5, #124]	@ 0x7c
 802561c:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
 8025620:	2e08      	cmp	r6, #8
 8025622:	d02b      	beq.n	802567c <greq_setParam+0x188>
 8025624:	f8d5 2080 	ldr.w	r2, [r5, #128]	@ 0x80
 8025628:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
 802562c:	f8d5 2084 	ldr.w	r2, [r5, #132]	@ 0x84
 8025630:	fb32 f203 	smulwb	r2, r2, r3
 8025634:	f302 021e 	ssat	r2, #31, r2
 8025638:	0052      	lsls	r2, r2, #1
 802563a:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 802563e:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
 8025642:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 8025646:	f8d5 208c 	ldr.w	r2, [r5, #140]	@ 0x8c
 802564a:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 802564e:	2e09      	cmp	r6, #9
 8025650:	d014      	beq.n	802567c <greq_setParam+0x188>
 8025652:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 8025656:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 802565a:	f8d5 2094 	ldr.w	r2, [r5, #148]	@ 0x94
 802565e:	fb32 f303 	smulwb	r3, r2, r3
 8025662:	f303 031e 	ssat	r3, #31, r3
 8025666:	005b      	lsls	r3, r3, #1
 8025668:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 802566c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8025670:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8025674:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 8025678:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 802567c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8025680:	b2f2      	uxtb	r2, r6
 8025682:	1d27      	adds	r7, r4, #4
 8025684:	f8c4 21e4 	str.w	r2, [r4, #484]	@ 0x1e4
 8025688:	f8c4 71ec 	str.w	r7, [r4, #492]	@ 0x1ec
 802568c:	0112      	lsls	r2, r2, #4
 802568e:	4628      	mov	r0, r5
 8025690:	2100      	movs	r1, #0
 8025692:	f008 fa5f 	bl	802db54 <memset>
 8025696:	f894 221c 	ldrb.w	r2, [r4, #540]	@ 0x21c
 802569a:	f8c4 51e8 	str.w	r5, [r4, #488]	@ 0x1e8
 802569e:	f504 75a2 	add.w	r5, r4, #324	@ 0x144
 80256a2:	f8c4 21f4 	str.w	r2, [r4, #500]	@ 0x1f4
 80256a6:	f8c4 71fc 	str.w	r7, [r4, #508]	@ 0x1fc
 80256aa:	0112      	lsls	r2, r2, #4
 80256ac:	4628      	mov	r0, r5
 80256ae:	2100      	movs	r1, #0
 80256b0:	f008 fa50 	bl	802db54 <memset>
 80256b4:	f8c4 51f8 	str.w	r5, [r4, #504]	@ 0x1f8
 80256b8:	2000      	movs	r0, #0
 80256ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80256bc:	4d02      	ldr	r5, [pc, #8]	@ (80256c8 <greq_setParam+0x1d4>)
 80256be:	e72a      	b.n	8025516 <greq_setParam+0x22>
 80256c0:	4d02      	ldr	r5, [pc, #8]	@ (80256cc <greq_setParam+0x1d8>)
 80256c2:	e728      	b.n	8025516 <greq_setParam+0x22>
 80256c4:	0803750c 	.word	0x0803750c
 80256c8:	0803755c 	.word	0x0803755c
 80256cc:	0803748c 	.word	0x0803748c

080256d0 <greq_process>:
 80256d0:	6843      	ldr	r3, [r0, #4]
 80256d2:	2b04      	cmp	r3, #4
 80256d4:	f040 8273 	bne.w	8025bbe <greq_process+0x4ee>
 80256d8:	6803      	ldr	r3, [r0, #0]
 80256da:	2b02      	cmp	r3, #2
 80256dc:	f040 8272 	bne.w	8025bc4 <greq_process+0x4f4>
 80256e0:	6903      	ldr	r3, [r0, #16]
 80256e2:	2b01      	cmp	r3, #1
 80256e4:	f040 8271 	bne.w	8025bca <greq_process+0x4fa>
 80256e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80256ec:	68c3      	ldr	r3, [r0, #12]
 80256ee:	b097      	sub	sp, #92	@ 0x5c
 80256f0:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 80256f4:	461d      	mov	r5, r3
 80256f6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80256f8:	f300 826a 	bgt.w	8025bd0 <greq_process+0x500>
 80256fc:	f9b2 3204 	ldrsh.w	r3, [r2, #516]	@ 0x204
 8025700:	6880      	ldr	r0, [r0, #8]
 8025702:	6889      	ldr	r1, [r1, #8]
 8025704:	900a      	str	r0, [sp, #40]	@ 0x28
 8025706:	2b01      	cmp	r3, #1
 8025708:	9114      	str	r1, [sp, #80]	@ 0x50
 802570a:	d01d      	beq.n	8025748 <greq_process+0x78>
 802570c:	2d00      	cmp	r5, #0
 802570e:	dd17      	ble.n	8025740 <greq_process+0x70>
 8025710:	460a      	mov	r2, r1
 8025712:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025714:	4628      	mov	r0, r5
 8025716:	3001      	adds	r0, #1
 8025718:	460b      	mov	r3, r1
 802571a:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 802571e:	3208      	adds	r2, #8
 8025720:	3308      	adds	r3, #8
 8025722:	f853 1c08 	ldr.w	r1, [r3, #-8]
 8025726:	1089      	asrs	r1, r1, #2
 8025728:	f842 1c08 	str.w	r1, [r2, #-8]
 802572c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8025730:	3308      	adds	r3, #8
 8025732:	1089      	asrs	r1, r1, #2
 8025734:	4283      	cmp	r3, r0
 8025736:	f842 1c04 	str.w	r1, [r2, #-4]
 802573a:	f102 0208 	add.w	r2, r2, #8
 802573e:	d1f0      	bne.n	8025722 <greq_process+0x52>
 8025740:	2000      	movs	r0, #0
 8025742:	b017      	add	sp, #92	@ 0x5c
 8025744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025748:	6813      	ldr	r3, [r2, #0]
 802574a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802574c:	9315      	str	r3, [sp, #84]	@ 0x54
 802574e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025750:	2b00      	cmp	r3, #0
 8025752:	dd16      	ble.n	8025782 <greq_process+0xb2>
 8025754:	1c5c      	adds	r4, r3, #1
 8025756:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025758:	f103 0108 	add.w	r1, r3, #8
 802575c:	4603      	mov	r3, r0
 802575e:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
 8025762:	3308      	adds	r3, #8
 8025764:	f853 0c08 	ldr.w	r0, [r3, #-8]
 8025768:	1080      	asrs	r0, r0, #2
 802576a:	f841 0c08 	str.w	r0, [r1, #-8]
 802576e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8025772:	3308      	adds	r3, #8
 8025774:	1080      	asrs	r0, r0, #2
 8025776:	42a3      	cmp	r3, r4
 8025778:	f841 0c04 	str.w	r0, [r1, #-4]
 802577c:	f101 0108 	add.w	r1, r1, #8
 8025780:	d1f0      	bne.n	8025764 <greq_process+0x94>
 8025782:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025784:	f8d2 41ec 	ldr.w	r4, [r2, #492]	@ 0x1ec
 8025788:	f8d2 01e8 	ldr.w	r0, [r2, #488]	@ 0x1e8
 802578c:	f8d2 11f8 	ldr.w	r1, [r2, #504]	@ 0x1f8
 8025790:	f9b2 221c 	ldrsh.w	r2, [r2, #540]	@ 0x21c
 8025794:	9207      	str	r2, [sp, #28]
 8025796:	10ab      	asrs	r3, r5, #2
 8025798:	9306      	str	r3, [sp, #24]
 802579a:	3301      	adds	r3, #1
 802579c:	015b      	lsls	r3, r3, #5
 802579e:	461e      	mov	r6, r3
 80257a0:	9311      	str	r3, [sp, #68]	@ 0x44
 80257a2:	3b20      	subs	r3, #32
 80257a4:	461f      	mov	r7, r3
 80257a6:	9310      	str	r3, [sp, #64]	@ 0x40
 80257a8:	462b      	mov	r3, r5
 80257aa:	ea4f 0ec3 	mov.w	lr, r3, lsl #3
 80257ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80257b0:	f005 0203 	and.w	r2, r5, #3
 80257b4:	4615      	mov	r5, r2
 80257b6:	9202      	str	r2, [sp, #8]
 80257b8:	463a      	mov	r2, r7
 80257ba:	19df      	adds	r7, r3, r7
 80257bc:	4433      	add	r3, r6
 80257be:	9312      	str	r3, [sp, #72]	@ 0x48
 80257c0:	f104 0310 	add.w	r3, r4, #16
 80257c4:	9304      	str	r3, [sp, #16]
 80257c6:	f100 0310 	add.w	r3, r0, #16
 80257ca:	9301      	str	r3, [sp, #4]
 80257cc:	f101 0310 	add.w	r3, r1, #16
 80257d0:	970e      	str	r7, [sp, #56]	@ 0x38
 80257d2:	9305      	str	r3, [sp, #20]
 80257d4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80257d6:	00eb      	lsls	r3, r5, #3
 80257d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80257da:	1e6b      	subs	r3, r5, #1
 80257dc:	18ba      	adds	r2, r7, r2
 80257de:	9308      	str	r3, [sp, #32]
 80257e0:	f1ce 0304 	rsb	r3, lr, #4
 80257e4:	920d      	str	r2, [sp, #52]	@ 0x34
 80257e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80257e8:	9904      	ldr	r1, [sp, #16]
 80257ea:	f851 2c10 	ldr.w	r2, [r1, #-16]
 80257ee:	f851 4c0c 	ldr.w	r4, [r1, #-12]
 80257f2:	e911 0600 	ldmdb	r1, {r9, sl}
 80257f6:	f102 0801 	add.w	r8, r2, #1
 80257fa:	9901      	ldr	r1, [sp, #4]
 80257fc:	9a06      	ldr	r2, [sp, #24]
 80257fe:	f851 cc10 	ldr.w	ip, [r1, #-16]
 8025802:	f851 7c0c 	ldr.w	r7, [r1, #-12]
 8025806:	e911 000a 	ldmdb	r1, {r1, r3}
 802580a:	2a00      	cmp	r2, #0
 802580c:	f000 81c0 	beq.w	8025b90 <greq_process+0x4c0>
 8025810:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025812:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
 8025816:	f102 0e20 	add.w	lr, r2, #32
 802581a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802581c:	f102 0520 	add.w	r5, r2, #32
 8025820:	f85e 0c20 	ldr.w	r0, [lr, #-32]
 8025824:	1080      	asrs	r0, r0, #2
 8025826:	fb54 f210 	smmulr	r2, r4, r0
 802582a:	fb64 2717 	smmlsr	r7, r4, r7, r2
 802582e:	fb59 7711 	smmlar	r7, r9, r1, r7
 8025832:	fb5a 7313 	smmlar	r3, sl, r3, r7
 8025836:	f85e 2c18 	ldr.w	r2, [lr, #-24]
 802583a:	f855 7c20 	ldr.w	r7, [r5, #-32]
 802583e:	fa03 f308 	lsl.w	r3, r3, r8
 8025842:	005e      	lsls	r6, r3, #1
 8025844:	1092      	asrs	r2, r2, #2
 8025846:	f306 061e 	ssat	r6, #31, r6
 802584a:	0076      	lsls	r6, r6, #1
 802584c:	fa86 f687 	qadd	r6, r7, r6
 8025850:	f845 6c20 	str.w	r6, [r5, #-32]
 8025854:	fb54 f612 	smmulr	r6, r4, r2
 8025858:	fb64 661c 	smmlsr	r6, r4, ip, r6
 802585c:	fb59 6613 	smmlar	r6, r9, r3, r6
 8025860:	fb5a 6111 	smmlar	r1, sl, r1, r6
 8025864:	f85e 7c10 	ldr.w	r7, [lr, #-16]
 8025868:	f855 6c18 	ldr.w	r6, [r5, #-24]
 802586c:	fa01 f108 	lsl.w	r1, r1, r8
 8025870:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8025874:	10bf      	asrs	r7, r7, #2
 8025876:	f30c 0c1e 	ssat	ip, #31, ip
 802587a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 802587e:	fa8c f686 	qadd	r6, r6, ip
 8025882:	f845 6c18 	str.w	r6, [r5, #-24]
 8025886:	fb54 f617 	smmulr	r6, r4, r7
 802588a:	fb64 6010 	smmlsr	r0, r4, r0, r6
 802588e:	fb59 0011 	smmlar	r0, r9, r1, r0
 8025892:	fb5a 0313 	smmlar	r3, sl, r3, r0
 8025896:	f85e 6c08 	ldr.w	r6, [lr, #-8]
 802589a:	fa03 f308 	lsl.w	r3, r3, r8
 802589e:	0058      	lsls	r0, r3, #1
 80258a0:	ea4f 0ca6 	mov.w	ip, r6, asr #2
 80258a4:	f300 001e 	ssat	r0, #31, r0
 80258a8:	f855 6c10 	ldr.w	r6, [r5, #-16]
 80258ac:	0040      	lsls	r0, r0, #1
 80258ae:	fa80 f086 	qadd	r0, r6, r0
 80258b2:	f845 0c10 	str.w	r0, [r5, #-16]
 80258b6:	fb54 f01c 	smmulr	r0, r4, ip
 80258ba:	fb64 0212 	smmlsr	r2, r4, r2, r0
 80258be:	fb59 2213 	smmlar	r2, r9, r3, r2
 80258c2:	fb5a 2111 	smmlar	r1, sl, r1, r2
 80258c6:	fa01 f108 	lsl.w	r1, r1, r8
 80258ca:	0048      	lsls	r0, r1, #1
 80258cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
 80258d0:	f300 001e 	ssat	r0, #31, r0
 80258d4:	0040      	lsls	r0, r0, #1
 80258d6:	fa80 f282 	qadd	r2, r2, r0
 80258da:	f10e 0e20 	add.w	lr, lr, #32
 80258de:	45de      	cmp	lr, fp
 80258e0:	f845 2c08 	str.w	r2, [r5, #-8]
 80258e4:	f105 0520 	add.w	r5, r5, #32
 80258e8:	d19a      	bne.n	8025820 <greq_process+0x150>
 80258ea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80258ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80258ee:	9a02      	ldr	r2, [sp, #8]
 80258f0:	2a00      	cmp	r2, #0
 80258f2:	d048      	beq.n	8025986 <greq_process+0x2b6>
 80258f4:	682a      	ldr	r2, [r5, #0]
 80258f6:	ea4f 0ea2 	mov.w	lr, r2, asr #2
 80258fa:	fb54 f21e 	smmulr	r2, r4, lr
 80258fe:	fb64 2717 	smmlsr	r7, r4, r7, r2
 8025902:	fb59 7711 	smmlar	r7, r9, r1, r7
 8025906:	fb5a 7313 	smmlar	r3, sl, r3, r7
 802590a:	fa03 f608 	lsl.w	r6, r3, r8
 802590e:	0072      	lsls	r2, r6, #1
 8025910:	6803      	ldr	r3, [r0, #0]
 8025912:	f302 021e 	ssat	r2, #31, r2
 8025916:	0052      	lsls	r2, r2, #1
 8025918:	fa82 f383 	qadd	r3, r3, r2
 802591c:	6003      	str	r3, [r0, #0]
 802591e:	9b08      	ldr	r3, [sp, #32]
 8025920:	2b00      	cmp	r3, #0
 8025922:	f000 813d 	beq.w	8025ba0 <greq_process+0x4d0>
 8025926:	68af      	ldr	r7, [r5, #8]
 8025928:	10bf      	asrs	r7, r7, #2
 802592a:	fb54 f317 	smmulr	r3, r4, r7
 802592e:	fb64 331c 	smmlsr	r3, r4, ip, r3
 8025932:	fb59 3316 	smmlar	r3, r9, r6, r3
 8025936:	fb5a 3311 	smmlar	r3, sl, r1, r3
 802593a:	fa03 f308 	lsl.w	r3, r3, r8
 802593e:	0059      	lsls	r1, r3, #1
 8025940:	6882      	ldr	r2, [r0, #8]
 8025942:	f301 011e 	ssat	r1, #31, r1
 8025946:	0049      	lsls	r1, r1, #1
 8025948:	fa81 f282 	qadd	r2, r2, r1
 802594c:	6082      	str	r2, [r0, #8]
 802594e:	9a02      	ldr	r2, [sp, #8]
 8025950:	2a02      	cmp	r2, #2
 8025952:	f000 812f 	beq.w	8025bb4 <greq_process+0x4e4>
 8025956:	692a      	ldr	r2, [r5, #16]
 8025958:	ea4f 0ca2 	mov.w	ip, r2, asr #2
 802595c:	fb54 f21c 	smmulr	r2, r4, ip
 8025960:	fb64 221e 	smmlsr	r2, r4, lr, r2
 8025964:	fb59 2213 	smmlar	r2, r9, r3, r2
 8025968:	fb5a 2116 	smmlar	r1, sl, r6, r2
 802596c:	fa01 f108 	lsl.w	r1, r1, r8
 8025970:	004e      	lsls	r6, r1, #1
 8025972:	6902      	ldr	r2, [r0, #16]
 8025974:	f306 061e 	ssat	r6, #31, r6
 8025978:	0076      	lsls	r6, r6, #1
 802597a:	fa86 f282 	qadd	r2, r2, r6
 802597e:	6102      	str	r2, [r0, #16]
 8025980:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8025982:	4435      	add	r5, r6
 8025984:	4430      	add	r0, r6
 8025986:	9e01      	ldr	r6, [sp, #4]
 8025988:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802598a:	f846 cc10 	str.w	ip, [r6, #-16]
 802598e:	e906 000a 	stmdb	r6, {r1, r3}
 8025992:	eb00 0b02 	add.w	fp, r0, r2
 8025996:	18ab      	adds	r3, r5, r2
 8025998:	9a05      	ldr	r2, [sp, #20]
 802599a:	f846 7c0c 	str.w	r7, [r6, #-12]
 802599e:	461d      	mov	r5, r3
 80259a0:	9303      	str	r3, [sp, #12]
 80259a2:	f852 cc10 	ldr.w	ip, [r2, #-16]
 80259a6:	f852 7c0c 	ldr.w	r7, [r2, #-12]
 80259aa:	f852 1c08 	ldr.w	r1, [r2, #-8]
 80259ae:	f852 3c04 	ldr.w	r3, [r2, #-4]
 80259b2:	9a06      	ldr	r2, [sp, #24]
 80259b4:	2a00      	cmp	r2, #0
 80259b6:	d076      	beq.n	8025aa6 <greq_process+0x3d6>
 80259b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80259ba:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80259be:	462a      	mov	r2, r5
 80259c0:	4402      	add	r2, r0
 80259c2:	f105 0e20 	add.w	lr, r5, #32
 80259c6:	f10b 0520 	add.w	r5, fp, #32
 80259ca:	4693      	mov	fp, r2
 80259cc:	f85e 0c20 	ldr.w	r0, [lr, #-32]
 80259d0:	1080      	asrs	r0, r0, #2
 80259d2:	fb54 f210 	smmulr	r2, r4, r0
 80259d6:	fb64 2717 	smmlsr	r7, r4, r7, r2
 80259da:	fb59 7711 	smmlar	r7, r9, r1, r7
 80259de:	fb5a 7313 	smmlar	r3, sl, r3, r7
 80259e2:	f85e 2c18 	ldr.w	r2, [lr, #-24]
 80259e6:	f855 7c20 	ldr.w	r7, [r5, #-32]
 80259ea:	fa03 f308 	lsl.w	r3, r3, r8
 80259ee:	005e      	lsls	r6, r3, #1
 80259f0:	1092      	asrs	r2, r2, #2
 80259f2:	f306 061e 	ssat	r6, #31, r6
 80259f6:	0076      	lsls	r6, r6, #1
 80259f8:	fa86 f687 	qadd	r6, r7, r6
 80259fc:	f845 6c20 	str.w	r6, [r5, #-32]
 8025a00:	fb54 f612 	smmulr	r6, r4, r2
 8025a04:	fb64 661c 	smmlsr	r6, r4, ip, r6
 8025a08:	fb59 6613 	smmlar	r6, r9, r3, r6
 8025a0c:	fb5a 6111 	smmlar	r1, sl, r1, r6
 8025a10:	f85e 7c10 	ldr.w	r7, [lr, #-16]
 8025a14:	f855 6c18 	ldr.w	r6, [r5, #-24]
 8025a18:	fa01 f108 	lsl.w	r1, r1, r8
 8025a1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8025a20:	10bf      	asrs	r7, r7, #2
 8025a22:	f30c 0c1e 	ssat	ip, #31, ip
 8025a26:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8025a2a:	fa8c f686 	qadd	r6, r6, ip
 8025a2e:	f845 6c18 	str.w	r6, [r5, #-24]
 8025a32:	fb54 f617 	smmulr	r6, r4, r7
 8025a36:	fb64 6010 	smmlsr	r0, r4, r0, r6
 8025a3a:	fb59 0011 	smmlar	r0, r9, r1, r0
 8025a3e:	fb5a 0313 	smmlar	r3, sl, r3, r0
 8025a42:	f85e 6c08 	ldr.w	r6, [lr, #-8]
 8025a46:	fa03 f308 	lsl.w	r3, r3, r8
 8025a4a:	0058      	lsls	r0, r3, #1
 8025a4c:	ea4f 0ca6 	mov.w	ip, r6, asr #2
 8025a50:	f300 001e 	ssat	r0, #31, r0
 8025a54:	f855 6c10 	ldr.w	r6, [r5, #-16]
 8025a58:	0040      	lsls	r0, r0, #1
 8025a5a:	fa80 f086 	qadd	r0, r6, r0
 8025a5e:	f845 0c10 	str.w	r0, [r5, #-16]
 8025a62:	fb54 f01c 	smmulr	r0, r4, ip
 8025a66:	fb64 0212 	smmlsr	r2, r4, r2, r0
 8025a6a:	fb59 2213 	smmlar	r2, r9, r3, r2
 8025a6e:	fb5a 2111 	smmlar	r1, sl, r1, r2
 8025a72:	fa01 f108 	lsl.w	r1, r1, r8
 8025a76:	0048      	lsls	r0, r1, #1
 8025a78:	f855 2c08 	ldr.w	r2, [r5, #-8]
 8025a7c:	f300 001e 	ssat	r0, #31, r0
 8025a80:	0040      	lsls	r0, r0, #1
 8025a82:	fa80 f282 	qadd	r2, r2, r0
 8025a86:	f10e 0e20 	add.w	lr, lr, #32
 8025a8a:	45de      	cmp	lr, fp
 8025a8c:	f845 2c08 	str.w	r2, [r5, #-8]
 8025a90:	f105 0520 	add.w	r5, r5, #32
 8025a94:	d19a      	bne.n	80259cc <greq_process+0x2fc>
 8025a96:	9a03      	ldr	r2, [sp, #12]
 8025a98:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8025a9a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8025a9e:	4615      	mov	r5, r2
 8025aa0:	4405      	add	r5, r0
 8025aa2:	9503      	str	r5, [sp, #12]
 8025aa4:	4483      	add	fp, r0
 8025aa6:	9a02      	ldr	r2, [sp, #8]
 8025aa8:	2a00      	cmp	r2, #0
 8025aaa:	d049      	beq.n	8025b40 <greq_process+0x470>
 8025aac:	9e03      	ldr	r6, [sp, #12]
 8025aae:	6832      	ldr	r2, [r6, #0]
 8025ab0:	1095      	asrs	r5, r2, #2
 8025ab2:	fb54 f215 	smmulr	r2, r4, r5
 8025ab6:	fb64 2717 	smmlsr	r7, r4, r7, r2
 8025aba:	fb59 7711 	smmlar	r7, r9, r1, r7
 8025abe:	fb5a 7313 	smmlar	r3, sl, r3, r7
 8025ac2:	fa03 f008 	lsl.w	r0, r3, r8
 8025ac6:	0043      	lsls	r3, r0, #1
 8025ac8:	f8db 2000 	ldr.w	r2, [fp]
 8025acc:	f303 031e 	ssat	r3, #31, r3
 8025ad0:	005b      	lsls	r3, r3, #1
 8025ad2:	fa83 f282 	qadd	r2, r2, r3
 8025ad6:	9b08      	ldr	r3, [sp, #32]
 8025ad8:	f8cb 2000 	str.w	r2, [fp]
 8025adc:	2b00      	cmp	r3, #0
 8025ade:	d064      	beq.n	8025baa <greq_process+0x4da>
 8025ae0:	68b7      	ldr	r7, [r6, #8]
 8025ae2:	10bf      	asrs	r7, r7, #2
 8025ae4:	fb54 f317 	smmulr	r3, r4, r7
 8025ae8:	fb64 331c 	smmlsr	r3, r4, ip, r3
 8025aec:	fb59 3310 	smmlar	r3, r9, r0, r3
 8025af0:	fb5a 3311 	smmlar	r3, sl, r1, r3
 8025af4:	fa03 f308 	lsl.w	r3, r3, r8
 8025af8:	0059      	lsls	r1, r3, #1
 8025afa:	f8db 2008 	ldr.w	r2, [fp, #8]
 8025afe:	f301 011e 	ssat	r1, #31, r1
 8025b02:	0049      	lsls	r1, r1, #1
 8025b04:	fa81 f282 	qadd	r2, r2, r1
 8025b08:	f8cb 2008 	str.w	r2, [fp, #8]
 8025b0c:	9a02      	ldr	r2, [sp, #8]
 8025b0e:	2a02      	cmp	r2, #2
 8025b10:	d041      	beq.n	8025b96 <greq_process+0x4c6>
 8025b12:	6932      	ldr	r2, [r6, #16]
 8025b14:	ea4f 0ca2 	mov.w	ip, r2, asr #2
 8025b18:	fb54 f21c 	smmulr	r2, r4, ip
 8025b1c:	fb64 2215 	smmlsr	r2, r4, r5, r2
 8025b20:	fb59 2213 	smmlar	r2, r9, r3, r2
 8025b24:	fb5a 2210 	smmlar	r2, sl, r0, r2
 8025b28:	fa02 f108 	lsl.w	r1, r2, r8
 8025b2c:	0048      	lsls	r0, r1, #1
 8025b2e:	f8db 2010 	ldr.w	r2, [fp, #16]
 8025b32:	f300 001e 	ssat	r0, #31, r0
 8025b36:	0040      	lsls	r0, r0, #1
 8025b38:	fa80 f282 	qadd	r2, r2, r0
 8025b3c:	f8cb 2010 	str.w	r2, [fp, #16]
 8025b40:	9805      	ldr	r0, [sp, #20]
 8025b42:	f840 3c04 	str.w	r3, [r0, #-4]
 8025b46:	9b04      	ldr	r3, [sp, #16]
 8025b48:	f840 cc10 	str.w	ip, [r0, #-16]
 8025b4c:	3310      	adds	r3, #16
 8025b4e:	9304      	str	r3, [sp, #16]
 8025b50:	9b01      	ldr	r3, [sp, #4]
 8025b52:	f840 7c0c 	str.w	r7, [r0, #-12]
 8025b56:	3310      	adds	r3, #16
 8025b58:	9301      	str	r3, [sp, #4]
 8025b5a:	f100 0310 	add.w	r3, r0, #16
 8025b5e:	9305      	str	r3, [sp, #20]
 8025b60:	9b07      	ldr	r3, [sp, #28]
 8025b62:	f840 1c08 	str.w	r1, [r0, #-8]
 8025b66:	3b01      	subs	r3, #1
 8025b68:	9307      	str	r3, [sp, #28]
 8025b6a:	f47f ae3d 	bne.w	80257e8 <greq_process+0x118>
 8025b6e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025b70:	2b00      	cmp	r3, #0
 8025b72:	f77f ade5 	ble.w	8025740 <greq_process+0x70>
 8025b76:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025b78:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8025b7a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8025b7e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025b80:	3a08      	subs	r2, #8
 8025b82:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8025b86:	4299      	cmp	r1, r3
 8025b88:	e9e2 4502 	strd	r4, r5, [r2, #8]!
 8025b8c:	d1f9      	bne.n	8025b82 <greq_process+0x4b2>
 8025b8e:	e5d7      	b.n	8025740 <greq_process+0x70>
 8025b90:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8025b92:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8025b94:	e6ab      	b.n	80258ee <greq_process+0x21e>
 8025b96:	4619      	mov	r1, r3
 8025b98:	46bc      	mov	ip, r7
 8025b9a:	4603      	mov	r3, r0
 8025b9c:	462f      	mov	r7, r5
 8025b9e:	e7cf      	b.n	8025b40 <greq_process+0x470>
 8025ba0:	4667      	mov	r7, ip
 8025ba2:	460b      	mov	r3, r1
 8025ba4:	46f4      	mov	ip, lr
 8025ba6:	4631      	mov	r1, r6
 8025ba8:	e6ea      	b.n	8025980 <greq_process+0x2b0>
 8025baa:	4667      	mov	r7, ip
 8025bac:	460b      	mov	r3, r1
 8025bae:	46ac      	mov	ip, r5
 8025bb0:	4601      	mov	r1, r0
 8025bb2:	e7c5      	b.n	8025b40 <greq_process+0x470>
 8025bb4:	4619      	mov	r1, r3
 8025bb6:	46bc      	mov	ip, r7
 8025bb8:	4633      	mov	r3, r6
 8025bba:	4677      	mov	r7, lr
 8025bbc:	e6e0      	b.n	8025980 <greq_process+0x2b0>
 8025bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8025bc2:	4770      	bx	lr
 8025bc4:	f06f 0001 	mvn.w	r0, #1
 8025bc8:	4770      	bx	lr
 8025bca:	f06f 0004 	mvn.w	r0, #4
 8025bce:	4770      	bx	lr
 8025bd0:	f06f 0005 	mvn.w	r0, #5
 8025bd4:	e5b5      	b.n	8025742 <greq_process+0x72>
 8025bd6:	bf00      	nop

08025bd8 <hpv_reset>:
 8025bd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025bda:	f648 24ec 	movw	r4, #35564	@ 0x8aec
 8025bde:	1903      	adds	r3, r0, r4
 8025be0:	e880 000a 	stmia.w	r0, {r1, r3}
 8025be4:	4d07      	ldr	r5, [pc, #28]	@ (8025c04 <hpv_reset+0x2c>)
 8025be6:	79e9      	ldrb	r1, [r5, #7]
 8025be8:	2707      	movs	r7, #7
 8025bea:	f041 0108 	orr.w	r1, r1, #8
 8025bee:	2601      	movs	r6, #1
 8025bf0:	2502      	movs	r5, #2
 8025bf2:	5507      	strb	r7, [r0, r4]
 8025bf4:	70de      	strb	r6, [r3, #3]
 8025bf6:	7059      	strb	r1, [r3, #1]
 8025bf8:	709d      	strb	r5, [r3, #2]
 8025bfa:	f007 f957 	bl	802ceac <initialize>
 8025bfe:	2000      	movs	r0, #0
 8025c00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025c02:	bf00      	nop
 8025c04:	0803abc0 	.word	0x0803abc0

08025c08 <hpv_setConfig>:
 8025c08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025c0c:	f648 23f4 	movw	r3, #35572	@ 0x8af4
 8025c10:	b083      	sub	sp, #12
 8025c12:	58cb      	ldr	r3, [r1, r3]
 8025c14:	6802      	ldr	r2, [r0, #0]
 8025c16:	2b01      	cmp	r3, #1
 8025c18:	4604      	mov	r4, r0
 8025c1a:	f000 81ff 	beq.w	802601c <hpv_setConfig+0x414>
 8025c1e:	6863      	ldr	r3, [r4, #4]
 8025c20:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8025c24:	f648 20f4 	movw	r0, #35572	@ 0x8af4
 8025c28:	2b64      	cmp	r3, #100	@ 0x64
 8025c2a:	500a      	str	r2, [r1, r0]
 8025c2c:	f200 8242 	bhi.w	80260b4 <hpv_setConfig+0x4ac>
 8025c30:	2b00      	cmp	r3, #0
 8025c32:	f000 80b8 	beq.w	8025da6 <hpv_setConfig+0x19e>
 8025c36:	f648 22f8 	movw	r2, #35576	@ 0x8af8
 8025c3a:	508b      	str	r3, [r1, r2]
 8025c3c:	f648 23fc 	movw	r3, #35580	@ 0x8afc
 8025c40:	68a5      	ldr	r5, [r4, #8]
 8025c42:	58ca      	ldr	r2, [r1, r3]
 8025c44:	42aa      	cmp	r2, r5
 8025c46:	d004      	beq.n	8025c52 <hpv_setConfig+0x4a>
 8025c48:	f245 62e4 	movw	r2, #22244	@ 0x56e4
 8025c4c:	2001      	movs	r0, #1
 8025c4e:	50cd      	str	r5, [r1, r3]
 8025c50:	5288      	strh	r0, [r1, r2]
 8025c52:	2d01      	cmp	r5, #1
 8025c54:	f000 81ec 	beq.w	8026030 <hpv_setConfig+0x428>
 8025c58:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 8025c5c:	2200      	movs	r2, #0
 8025c5e:	52ca      	strh	r2, [r1, r3]
 8025c60:	f648 23f8 	movw	r3, #35576	@ 0x8af8
 8025c64:	4f52      	ldr	r7, [pc, #328]	@ (8025db0 <hpv_setConfig+0x1a8>)
 8025c66:	58cb      	ldr	r3, [r1, r3]
 8025c68:	061b      	lsls	r3, r3, #24
 8025c6a:	fb87 2703 	smull	r2, r7, r7, r3
 8025c6e:	17db      	asrs	r3, r3, #31
 8025c70:	ebc3 1767 	rsb	r7, r3, r7, asr #5
 8025c74:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8025c78:	f307 0318 	ssat	r3, #25, r7
 8025c7c:	01db      	lsls	r3, r3, #7
 8025c7e:	fb33 f202 	smulwb	r2, r3, r2
 8025c82:	0052      	lsls	r2, r2, #1
 8025c84:	610a      	str	r2, [r1, #16]
 8025c86:	f640 42cd 	movw	r2, #3277	@ 0xccd
 8025c8a:	fb33 f002 	smulwb	r0, r3, r2
 8025c8e:	0040      	lsls	r0, r0, #1
 8025c90:	6148      	str	r0, [r1, #20]
 8025c92:	f241 3033 	movw	r0, #4915	@ 0x1333
 8025c96:	fb33 f000 	smulwb	r0, r3, r0
 8025c9a:	f644 247c 	movw	r4, #19068	@ 0x4a7c
 8025c9e:	0040      	lsls	r0, r0, #1
 8025ca0:	4e44      	ldr	r6, [pc, #272]	@ (8025db4 <hpv_setConfig+0x1ac>)
 8025ca2:	6188      	str	r0, [r1, #24]
 8025ca4:	510e      	str	r6, [r1, r4]
 8025ca6:	f243 3032 	movw	r0, #13106	@ 0x3332
 8025caa:	fb33 f000 	smulwb	r0, r3, r0
 8025cae:	f501 4695 	add.w	r6, r1, #19072	@ 0x4a80
 8025cb2:	0040      	lsls	r0, r0, #1
 8025cb4:	6030      	str	r0, [r6, #0]
 8025cb6:	fb33 f402 	smulwb	r4, r3, r2
 8025cba:	f644 2c84 	movw	ip, #19076	@ 0x4a84
 8025cbe:	0064      	lsls	r4, r4, #1
 8025cc0:	f841 400c 	str.w	r4, [r1, ip]
 8025cc4:	fb33 f202 	smulwb	r2, r3, r2
 8025cc8:	f644 2c88 	movw	ip, #19080	@ 0x4a88
 8025ccc:	0052      	lsls	r2, r2, #1
 8025cce:	f841 200c 	str.w	r2, [r1, ip]
 8025cd2:	f643 7cff 	movw	ip, #16383	@ 0x3fff
 8025cd6:	fb33 f30c 	smulwb	r3, r3, ip
 8025cda:	f89e e000 	ldrb.w	lr, [lr]
 8025cde:	f248 7878 	movw	r8, #34680	@ 0x8778
 8025ce2:	f10e 3cff 	add.w	ip, lr, #4294967295
 8025ce6:	005b      	lsls	r3, r3, #1
 8025ce8:	f1bc 0f01 	cmp.w	ip, #1
 8025cec:	f841 3008 	str.w	r3, [r1, r8]
 8025cf0:	f240 81af 	bls.w	8026052 <hpv_setConfig+0x44a>
 8025cf4:	f1be 0f07 	cmp.w	lr, #7
 8025cf8:	f000 81b6 	beq.w	8026068 <hpv_setConfig+0x460>
 8025cfc:	f1be 0f0b 	cmp.w	lr, #11
 8025d00:	f000 81bf 	beq.w	8026082 <hpv_setConfig+0x47a>
 8025d04:	f644 238c 	movw	r3, #19084	@ 0x4a8c
 8025d08:	58cb      	ldr	r3, [r1, r3]
 8025d0a:	fb90 f0f3 	sdiv	r0, r0, r3
 8025d0e:	f644 2c7c 	movw	ip, #19068	@ 0x4a7c
 8025d12:	ea4f 2e00 	mov.w	lr, r0, lsl #8
 8025d16:	fb94 f4f3 	sdiv	r4, r4, r3
 8025d1a:	fb92 f2f3 	sdiv	r2, r2, r3
 8025d1e:	4826      	ldr	r0, [pc, #152]	@ (8025db8 <hpv_setConfig+0x1b0>)
 8025d20:	fb90 f3f3 	sdiv	r3, r0, r3
 8025d24:	021b      	lsls	r3, r3, #8
 8025d26:	f841 300c 	str.w	r3, [r1, ip]
 8025d2a:	f644 2084 	movw	r0, #19076	@ 0x4a84
 8025d2e:	f644 2388 	movw	r3, #19080	@ 0x4a88
 8025d32:	0224      	lsls	r4, r4, #8
 8025d34:	0212      	lsls	r2, r2, #8
 8025d36:	f8c6 e000 	str.w	lr, [r6]
 8025d3a:	500c      	str	r4, [r1, r0]
 8025d3c:	50ca      	str	r2, [r1, r3]
 8025d3e:	2d00      	cmp	r5, #0
 8025d40:	d13c      	bne.n	8025dbc <hpv_setConfig+0x1b4>
 8025d42:	f644 2690 	movw	r6, #19088	@ 0x4a90
 8025d46:	f644 2492 	movw	r4, #19090	@ 0x4a92
 8025d4a:	538d      	strh	r5, [r1, r6]
 8025d4c:	f644 2094 	movw	r0, #19092	@ 0x4a94
 8025d50:	f44f 76a5 	mov.w	r6, #330	@ 0x14a
 8025d54:	530e      	strh	r6, [r1, r4]
 8025d56:	f644 2296 	movw	r2, #19094	@ 0x4a96
 8025d5a:	261e      	movs	r6, #30
 8025d5c:	520e      	strh	r6, [r1, r0]
 8025d5e:	f644 2398 	movw	r3, #19096	@ 0x4a98
 8025d62:	26fa      	movs	r6, #250	@ 0xfa
 8025d64:	528e      	strh	r6, [r1, r2]
 8025d66:	f644 249a 	movw	r4, #19098	@ 0x4a9a
 8025d6a:	266e      	movs	r6, #110	@ 0x6e
 8025d6c:	52ce      	strh	r6, [r1, r3]
 8025d6e:	f644 209c 	movw	r0, #19100	@ 0x4a9c
 8025d72:	f644 229e 	movw	r2, #19102	@ 0x4a9e
 8025d76:	f644 23a0 	movw	r3, #19104	@ 0x4aa0
 8025d7a:	26d2      	movs	r6, #210	@ 0xd2
 8025d7c:	530e      	strh	r6, [r1, r4]
 8025d7e:	2496      	movs	r4, #150	@ 0x96
 8025d80:	520c      	strh	r4, [r1, r0]
 8025d82:	528d      	strh	r5, [r1, r2]
 8025d84:	52cd      	strh	r5, [r1, r3]
 8025d86:	f307 0718 	ssat	r7, #25, r7
 8025d8a:	f245 705c 	movw	r0, #22364	@ 0x575c
 8025d8e:	01ff      	lsls	r7, r7, #7
 8025d90:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8025d94:	f245 7258 	movw	r2, #22360	@ 0x5758
 8025d98:	1bdb      	subs	r3, r3, r7
 8025d9a:	500f      	str	r7, [r1, r0]
 8025d9c:	508b      	str	r3, [r1, r2]
 8025d9e:	2000      	movs	r0, #0
 8025da0:	b003      	add	sp, #12
 8025da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025da6:	f648 23f8 	movw	r3, #35576	@ 0x8af8
 8025daa:	2201      	movs	r2, #1
 8025dac:	50ca      	str	r2, [r1, r3]
 8025dae:	e745      	b.n	8025c3c <hpv_setConfig+0x34>
 8025db0:	51eb851f 	.word	0x51eb851f
 8025db4:	3fff8000 	.word	0x3fff8000
 8025db8:	7fff0000 	.word	0x7fff0000
 8025dbc:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 8025dc0:	5ecb      	ldrsh	r3, [r1, r3]
 8025dc2:	2b01      	cmp	r3, #1
 8025dc4:	d1df      	bne.n	8025d86 <hpv_setConfig+0x17e>
 8025dc6:	f644 2290 	movw	r2, #19088	@ 0x4a90
 8025dca:	f245 63e6 	movw	r3, #22246	@ 0x56e6
 8025dce:	f644 2e92 	movw	lr, #19090	@ 0x4a92
 8025dd2:	f644 2594 	movw	r5, #19092	@ 0x4a94
 8025dd6:	f644 2096 	movw	r0, #19094	@ 0x4a96
 8025dda:	f644 2698 	movw	r6, #19096	@ 0x4a98
 8025dde:	f644 249a 	movw	r4, #19098	@ 0x4a9a
 8025de2:	5a8a      	ldrh	r2, [r1, r2]
 8025de4:	f831 e00e 	ldrh.w	lr, [r1, lr]
 8025de8:	5b4d      	ldrh	r5, [r1, r5]
 8025dea:	5a08      	ldrh	r0, [r1, r0]
 8025dec:	5b8e      	ldrh	r6, [r1, r6]
 8025dee:	5b0c      	ldrh	r4, [r1, r4]
 8025df0:	52ca      	strh	r2, [r1, r3]
 8025df2:	f245 63e8 	movw	r3, #22248	@ 0x56e8
 8025df6:	f644 229c 	movw	r2, #19100	@ 0x4a9c
 8025dfa:	f821 e003 	strh.w	lr, [r1, r3]
 8025dfe:	f245 63ea 	movw	r3, #22250	@ 0x56ea
 8025e02:	5a8a      	ldrh	r2, [r1, r2]
 8025e04:	52cd      	strh	r5, [r1, r3]
 8025e06:	f245 63ec 	movw	r3, #22252	@ 0x56ec
 8025e0a:	f245 65ee 	movw	r5, #22254	@ 0x56ee
 8025e0e:	52c8      	strh	r0, [r1, r3]
 8025e10:	f245 60f0 	movw	r0, #22256	@ 0x56f0
 8025e14:	f245 63f2 	movw	r3, #22258	@ 0x56f2
 8025e18:	534e      	strh	r6, [r1, r5]
 8025e1a:	f04f 0c00 	mov.w	ip, #0
 8025e1e:	520c      	strh	r4, [r1, r0]
 8025e20:	52ca      	strh	r2, [r1, r3]
 8025e22:	4665      	mov	r5, ip
 8025e24:	4666      	mov	r6, ip
 8025e26:	468e      	mov	lr, r1
 8025e28:	f50e 4395 	add.w	r3, lr, #19072	@ 0x4a80
 8025e2c:	f50e 42a1 	add.w	r2, lr, #20608	@ 0x5080
 8025e30:	f50e 4496 	add.w	r4, lr, #19200	@ 0x4b00
 8025e34:	3320      	adds	r3, #32
 8025e36:	3240      	adds	r2, #64	@ 0x40
 8025e38:	3440      	adds	r4, #64	@ 0x40
 8025e3a:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8025e3e:	f842 0f04 	str.w	r0, [r2, #4]!
 8025e42:	42a3      	cmp	r3, r4
 8025e44:	601d      	str	r5, [r3, #0]
 8025e46:	d1f8      	bne.n	8025e3a <hpv_setConfig+0x232>
 8025e48:	eb01 030c 	add.w	r3, r1, ip
 8025e4c:	f503 489e 	add.w	r8, r3, #20224	@ 0x4f00
 8025e50:	f503 44aa 	add.w	r4, r3, #21760	@ 0x5500
 8025e54:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8025e58:	6262      	str	r2, [r4, #36]	@ 0x24
 8025e5a:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025e5e:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025e62:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8025e64:	f8c9 2004 	str.w	r2, [r9, #4]
 8025e68:	f8c8 6004 	str.w	r6, [r8, #4]
 8025e6c:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025e70:	6646      	str	r6, [r0, #100]	@ 0x64
 8025e72:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8025e76:	f8c9 2028 	str.w	r2, [r9, #40]	@ 0x28
 8025e7a:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025e7e:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025e82:	6e82      	ldr	r2, [r0, #104]	@ 0x68
 8025e84:	f8c9 2008 	str.w	r2, [r9, #8]
 8025e88:	f8c8 6008 	str.w	r6, [r8, #8]
 8025e8c:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025e90:	6686      	str	r6, [r0, #104]	@ 0x68
 8025e92:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8025e96:	f8c9 202c 	str.w	r2, [r9, #44]	@ 0x2c
 8025e9a:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025e9e:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025ea2:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 8025ea4:	f8c9 200c 	str.w	r2, [r9, #12]
 8025ea8:	f8c8 600c 	str.w	r6, [r8, #12]
 8025eac:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025eb0:	66c6      	str	r6, [r0, #108]	@ 0x6c
 8025eb2:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8025eb6:	f8c9 2030 	str.w	r2, [r9, #48]	@ 0x30
 8025eba:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025ebe:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025ec2:	6f02      	ldr	r2, [r0, #112]	@ 0x70
 8025ec4:	f8c9 2010 	str.w	r2, [r9, #16]
 8025ec8:	f8c8 6010 	str.w	r6, [r8, #16]
 8025ecc:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025ed0:	6706      	str	r6, [r0, #112]	@ 0x70
 8025ed2:	f8d8 2014 	ldr.w	r2, [r8, #20]
 8025ed6:	f8c9 2034 	str.w	r2, [r9, #52]	@ 0x34
 8025eda:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025ede:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025ee2:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 8025ee4:	f8c9 2014 	str.w	r2, [r9, #20]
 8025ee8:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025eec:	f8c8 6014 	str.w	r6, [r8, #20]
 8025ef0:	6746      	str	r6, [r0, #116]	@ 0x74
 8025ef2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8025ef6:	f8c9 2038 	str.w	r2, [r9, #56]	@ 0x38
 8025efa:	f503 409f 	add.w	r0, r3, #20352	@ 0x4f80
 8025efe:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025f02:	6f82      	ldr	r2, [r0, #120]	@ 0x78
 8025f04:	f8c9 2018 	str.w	r2, [r9, #24]
 8025f08:	f8c8 6018 	str.w	r6, [r8, #24]
 8025f0c:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025f10:	6786      	str	r6, [r0, #120]	@ 0x78
 8025f12:	f8d8 201c 	ldr.w	r2, [r8, #28]
 8025f16:	f8c9 203c 	str.w	r2, [r9, #60]	@ 0x3c
 8025f1a:	f503 449f 	add.w	r4, r3, #20352	@ 0x4f80
 8025f1e:	f503 49ac 	add.w	r9, r3, #22016	@ 0x5600
 8025f22:	6fe2      	ldr	r2, [r4, #124]	@ 0x7c
 8025f24:	f8c9 201c 	str.w	r2, [r9, #28]
 8025f28:	f8c8 601c 	str.w	r6, [r8, #28]
 8025f2c:	f503 49aa 	add.w	r9, r3, #21760	@ 0x5500
 8025f30:	67e6      	str	r6, [r4, #124]	@ 0x7c
 8025f32:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8025f36:	f8c9 2040 	str.w	r2, [r9, #64]	@ 0x40
 8025f3a:	f503 44a0 	add.w	r4, r3, #20480	@ 0x5000
 8025f3e:	f10c 0c20 	add.w	ip, ip, #32
 8025f42:	f503 43ac 	add.w	r3, r3, #22016	@ 0x5600
 8025f46:	6822      	ldr	r2, [r4, #0]
 8025f48:	621a      	str	r2, [r3, #32]
 8025f4a:	f1bc 0fe0 	cmp.w	ip, #224	@ 0xe0
 8025f4e:	f8c8 6020 	str.w	r6, [r8, #32]
 8025f52:	f10e 0ea0 	add.w	lr, lr, #160	@ 0xa0
 8025f56:	6026      	str	r6, [r4, #0]
 8025f58:	f47f af66 	bne.w	8025e28 <hpv_setConfig+0x220>
 8025f5c:	f501 430b 	add.w	r3, r1, #35584	@ 0x8b00
 8025f60:	681b      	ldr	r3, [r3, #0]
 8025f62:	425a      	negs	r2, r3
 8025f64:	f5b2 7fb4 	cmp.w	r2, #360	@ 0x168
 8025f68:	f2c0 809a 	blt.w	80260a0 <hpv_setConfig+0x498>
 8025f6c:	b29a      	uxth	r2, r3
 8025f6e:	f5c2 407e 	rsb	r0, r2, #65024	@ 0xfe00
 8025f72:	f644 2490 	movw	r4, #19088	@ 0x4a90
 8025f76:	3098      	adds	r0, #152	@ 0x98
 8025f78:	5308      	strh	r0, [r1, r4]
 8025f7a:	f5c3 70a5 	rsb	r0, r3, #330	@ 0x14a
 8025f7e:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 8025f82:	bfac      	ite	ge
 8025f84:	f5c2 447f 	rsbge	r4, r2, #65280	@ 0xff00
 8025f88:	f5c2 74a5 	rsblt	r4, r2, #330	@ 0x14a
 8025f8c:	f1c3 001e 	rsb	r0, r3, #30
 8025f90:	bfa8      	it	ge
 8025f92:	34e2      	addge	r4, #226	@ 0xe2
 8025f94:	f644 2592 	movw	r5, #19090	@ 0x4a92
 8025f98:	b224      	sxth	r4, r4
 8025f9a:	2800      	cmp	r0, #0
 8025f9c:	534c      	strh	r4, [r1, r5]
 8025f9e:	f1c3 00fa 	rsb	r0, r3, #250	@ 0xfa
 8025fa2:	bfb4      	ite	lt
 8025fa4:	f5c2 74c3 	rsblt	r4, r2, #390	@ 0x186
 8025fa8:	f1c2 041e 	rsbge	r4, r2, #30
 8025fac:	f644 2594 	movw	r5, #19092	@ 0x4a94
 8025fb0:	b224      	sxth	r4, r4
 8025fb2:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 8025fb6:	534c      	strh	r4, [r1, r5]
 8025fb8:	bfac      	ite	ge
 8025fba:	f5c2 447f 	rsbge	r4, r2, #65280	@ 0xff00
 8025fbe:	f1c2 04fa 	rsblt	r4, r2, #250	@ 0xfa
 8025fc2:	f1c3 006e 	rsb	r0, r3, #110	@ 0x6e
 8025fc6:	bfa8      	it	ge
 8025fc8:	3492      	addge	r4, #146	@ 0x92
 8025fca:	f644 2596 	movw	r5, #19094	@ 0x4a96
 8025fce:	b224      	sxth	r4, r4
 8025fd0:	2800      	cmp	r0, #0
 8025fd2:	f1c3 00d2 	rsb	r0, r3, #210	@ 0xd2
 8025fd6:	534c      	strh	r4, [r1, r5]
 8025fd8:	bfb4      	ite	lt
 8025fda:	f5c2 74eb 	rsblt	r4, r2, #470	@ 0x1d6
 8025fde:	f1c2 046e 	rsbge	r4, r2, #110	@ 0x6e
 8025fe2:	f644 2598 	movw	r5, #19096	@ 0x4a98
 8025fe6:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 8025fea:	bfa8      	it	ge
 8025fec:	f5c2 407f 	rsbge	r0, r2, #65280	@ 0xff00
 8025ff0:	b224      	sxth	r4, r4
 8025ff2:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 8025ff6:	534c      	strh	r4, [r1, r5]
 8025ff8:	bfb4      	ite	lt
 8025ffa:	f1c2 00d2 	rsblt	r0, r2, #210	@ 0xd2
 8025ffe:	306a      	addge	r0, #106	@ 0x6a
 8026000:	f644 249a 	movw	r4, #19098	@ 0x4a9a
 8026004:	2b00      	cmp	r3, #0
 8026006:	f644 239c 	movw	r3, #19100	@ 0x4a9c
 802600a:	b200      	sxth	r0, r0
 802600c:	bfb4      	ite	lt
 802600e:	f5c2 72ff 	rsblt	r2, r2, #510	@ 0x1fe
 8026012:	f1c2 0296 	rsbge	r2, r2, #150	@ 0x96
 8026016:	5308      	strh	r0, [r1, r4]
 8026018:	52ca      	strh	r2, [r1, r3]
 802601a:	e6b4      	b.n	8025d86 <hpv_setConfig+0x17e>
 802601c:	2a00      	cmp	r2, #0
 802601e:	f47f adfe 	bne.w	8025c1e <hpv_setConfig+0x16>
 8026022:	4608      	mov	r0, r1
 8026024:	9101      	str	r1, [sp, #4]
 8026026:	f006 ff41 	bl	802ceac <initialize>
 802602a:	6822      	ldr	r2, [r4, #0]
 802602c:	9901      	ldr	r1, [sp, #4]
 802602e:	e5f6      	b.n	8025c1e <hpv_setConfig+0x16>
 8026030:	68e3      	ldr	r3, [r4, #12]
 8026032:	f103 02b3 	add.w	r2, r3, #179	@ 0xb3
 8026036:	f5b2 7fb4 	cmp.w	r2, #360	@ 0x168
 802603a:	d23e      	bcs.n	80260ba <hpv_setConfig+0x4b2>
 802603c:	f501 420b 	add.w	r2, r1, #35584	@ 0x8b00
 8026040:	6810      	ldr	r0, [r2, #0]
 8026042:	4283      	cmp	r3, r0
 8026044:	f43f ae0c 	beq.w	8025c60 <hpv_setConfig+0x58>
 8026048:	f245 60e4 	movw	r0, #22244	@ 0x56e4
 802604c:	520d      	strh	r5, [r1, r0]
 802604e:	6013      	str	r3, [r2, #0]
 8026050:	e606      	b.n	8025c60 <hpv_setConfig+0x58>
 8026052:	1063      	asrs	r3, r4, #1
 8026054:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8026058:	f503 137e 	add.w	r3, r3, #4161536	@ 0x3f8000
 802605c:	f644 2e8c 	movw	lr, #19084	@ 0x4a8c
 8026060:	159b      	asrs	r3, r3, #22
 8026062:	f841 300e 	str.w	r3, [r1, lr]
 8026066:	e650      	b.n	8025d0a <hpv_setConfig+0x102>
 8026068:	1083      	asrs	r3, r0, #2
 802606a:	f103 637f 	add.w	r3, r3, #267386880	@ 0xff00000
 802606e:	f503 237e 	add.w	r3, r3, #1040384	@ 0xfe000
 8026072:	eb03 03a2 	add.w	r3, r3, r2, asr #2
 8026076:	f644 2e8c 	movw	lr, #19084	@ 0x4a8c
 802607a:	151b      	asrs	r3, r3, #20
 802607c:	f841 300e 	str.w	r3, [r1, lr]
 8026080:	e643      	b.n	8025d0a <hpv_setConfig+0x102>
 8026082:	1083      	asrs	r3, r0, #2
 8026084:	f103 637f 	add.w	r3, r3, #267386880	@ 0xff00000
 8026088:	f503 237e 	add.w	r3, r3, #1040384	@ 0xfe000
 802608c:	eb03 03a4 	add.w	r3, r3, r4, asr #2
 8026090:	eb03 03a2 	add.w	r3, r3, r2, asr #2
 8026094:	f644 2e8c 	movw	lr, #19084	@ 0x4a8c
 8026098:	151b      	asrs	r3, r3, #20
 802609a:	f841 300e 	str.w	r3, [r1, lr]
 802609e:	e634      	b.n	8025d0a <hpv_setConfig+0x102>
 80260a0:	2a00      	cmp	r2, #0
 80260a2:	f644 2090 	movw	r0, #19088	@ 0x4a90
 80260a6:	b29a      	uxth	r2, r3
 80260a8:	bfb4      	ite	lt
 80260aa:	f5c2 74b4 	rsblt	r4, r2, #360	@ 0x168
 80260ae:	4254      	negge	r4, r2
 80260b0:	520c      	strh	r4, [r1, r0]
 80260b2:	e762      	b.n	8025f7a <hpv_setConfig+0x372>
 80260b4:	f06f 0001 	mvn.w	r0, #1
 80260b8:	e672      	b.n	8025da0 <hpv_setConfig+0x198>
 80260ba:	f06f 0002 	mvn.w	r0, #2
 80260be:	e66f      	b.n	8025da0 <hpv_setConfig+0x198>

080260c0 <hpv_getConfig>:
 80260c0:	b430      	push	{r4, r5}
 80260c2:	f648 22fc 	movw	r2, #35580	@ 0x8afc
 80260c6:	f648 25f4 	movw	r5, #35572	@ 0x8af4
 80260ca:	f648 24f8 	movw	r4, #35576	@ 0x8af8
 80260ce:	f501 430b 	add.w	r3, r1, #35584	@ 0x8b00
 80260d2:	594d      	ldr	r5, [r1, r5]
 80260d4:	590c      	ldr	r4, [r1, r4]
 80260d6:	588a      	ldr	r2, [r1, r2]
 80260d8:	681b      	ldr	r3, [r3, #0]
 80260da:	60c3      	str	r3, [r0, #12]
 80260dc:	6005      	str	r5, [r0, #0]
 80260de:	6044      	str	r4, [r0, #4]
 80260e0:	6082      	str	r2, [r0, #8]
 80260e2:	bc30      	pop	{r4, r5}
 80260e4:	2000      	movs	r0, #0
 80260e6:	4770      	bx	lr

080260e8 <hpv_setParam>:
 80260e8:	b570      	push	{r4, r5, r6, lr}
 80260ea:	6804      	ldr	r4, [r0, #0]
 80260ec:	684a      	ldr	r2, [r1, #4]
 80260ee:	1e65      	subs	r5, r4, #1
 80260f0:	2d0a      	cmp	r5, #10
 80260f2:	d822      	bhi.n	802613a <hpv_setParam+0x52>
 80260f4:	f240 4343 	movw	r3, #1091	@ 0x443
 80260f8:	40eb      	lsrs	r3, r5
 80260fa:	f003 0301 	and.w	r3, r3, #1
 80260fe:	f083 0601 	eor.w	r6, r3, #1
 8026102:	b1d3      	cbz	r3, 802613a <hpv_setParam+0x52>
 8026104:	6885      	ldr	r5, [r0, #8]
 8026106:	4b15      	ldr	r3, [pc, #84]	@ (802615c <hpv_setParam+0x74>)
 8026108:	7014      	strb	r4, [r2, #0]
 802610a:	70d5      	strb	r5, [r2, #3]
 802610c:	5d1b      	ldrb	r3, [r3, r4]
 802610e:	ea43 03c5 	orr.w	r3, r3, r5, lsl #3
 8026112:	7053      	strb	r3, [r2, #1]
 8026114:	6843      	ldr	r3, [r0, #4]
 8026116:	f64a 4044 	movw	r0, #44100	@ 0xac44
 802611a:	4283      	cmp	r3, r0
 802611c:	d010      	beq.n	8026140 <hpv_setParam+0x58>
 802611e:	f64b 3080 	movw	r0, #48000	@ 0xbb80
 8026122:	4283      	cmp	r3, r0
 8026124:	d002      	beq.n	802612c <hpv_setParam+0x44>
 8026126:	f5b3 4ffa 	cmp.w	r3, #32000	@ 0x7d00
 802612a:	d010      	beq.n	802614e <hpv_setParam+0x66>
 802612c:	2302      	movs	r3, #2
 802612e:	4608      	mov	r0, r1
 8026130:	7093      	strb	r3, [r2, #2]
 8026132:	f006 febb 	bl	802ceac <initialize>
 8026136:	2000      	movs	r0, #0
 8026138:	bd70      	pop	{r4, r5, r6, pc}
 802613a:	f06f 0003 	mvn.w	r0, #3
 802613e:	bd70      	pop	{r4, r5, r6, pc}
 8026140:	2301      	movs	r3, #1
 8026142:	4608      	mov	r0, r1
 8026144:	7093      	strb	r3, [r2, #2]
 8026146:	f006 feb1 	bl	802ceac <initialize>
 802614a:	2000      	movs	r0, #0
 802614c:	bd70      	pop	{r4, r5, r6, pc}
 802614e:	4608      	mov	r0, r1
 8026150:	7096      	strb	r6, [r2, #2]
 8026152:	f006 feab 	bl	802ceac <initialize>
 8026156:	2000      	movs	r0, #0
 8026158:	bd70      	pop	{r4, r5, r6, pc}
 802615a:	bf00      	nop
 802615c:	0803abc0 	.word	0x0803abc0

08026160 <hpv_process>:
 8026160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026164:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8026168:	6817      	ldr	r7, [r2, #0]
 802616a:	6855      	ldr	r5, [r2, #4]
 802616c:	b085      	sub	sp, #20
 802616e:	f018 0303 	ands.w	r3, r8, #3
 8026172:	9303      	str	r3, [sp, #12]
 8026174:	f040 80be 	bne.w	80262f4 <hpv_process+0x194>
 8026178:	f1b8 0f5f 	cmp.w	r8, #95	@ 0x5f
 802617c:	f340 80ba 	ble.w	80262f4 <hpv_process+0x194>
 8026180:	688b      	ldr	r3, [r1, #8]
 8026182:	9300      	str	r3, [sp, #0]
 8026184:	f502 430a 	add.w	r3, r2, #35328	@ 0x8a00
 8026188:	33f4      	adds	r3, #244	@ 0xf4
 802618a:	6884      	ldr	r4, [r0, #8]
 802618c:	9201      	str	r2, [sp, #4]
 802618e:	9302      	str	r3, [sp, #8]
 8026190:	4646      	mov	r6, r8
 8026192:	2e60      	cmp	r6, #96	@ 0x60
 8026194:	bfa8      	it	ge
 8026196:	2660      	movge	r6, #96	@ 0x60
 8026198:	9b01      	ldr	r3, [sp, #4]
 802619a:	2e00      	cmp	r6, #0
 802619c:	60de      	str	r6, [r3, #12]
 802619e:	ebc6 0808 	rsb	r8, r6, r8
 80261a2:	dd73      	ble.n	802628c <hpv_process+0x12c>
 80261a4:	f607 2a7c 	addw	sl, r7, #2684	@ 0xa7c
 80261a8:	463b      	mov	r3, r7
 80261aa:	f607 09fc 	addw	r9, r7, #2300	@ 0x8fc
 80261ae:	f207 7c7c 	addw	ip, r7, #1916	@ 0x77c
 80261b2:	f207 5efc 	addw	lr, r7, #1532	@ 0x5fc
 80261b6:	f207 407c 	addw	r0, r7, #1148	@ 0x47c
 80261ba:	2100      	movs	r1, #0
 80261bc:	e04b      	b.n	8026256 <hpv_process+0xf6>
 80261be:	6822      	ldr	r2, [r4, #0]
 80261c0:	3404      	adds	r4, #4
 80261c2:	1092      	asrs	r2, r2, #2
 80261c4:	f8c3 2180 	str.w	r2, [r3, #384]	@ 0x180
 80261c8:	786a      	ldrb	r2, [r5, #1]
 80261ca:	f002 0204 	and.w	r2, r2, #4
 80261ce:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 80261d2:	2a00      	cmp	r2, #0
 80261d4:	d052      	beq.n	802627c <hpv_process+0x11c>
 80261d6:	6822      	ldr	r2, [r4, #0]
 80261d8:	3404      	adds	r4, #4
 80261da:	1092      	asrs	r2, r2, #2
 80261dc:	f8c3 2300 	str.w	r2, [r3, #768]	@ 0x300
 80261e0:	786a      	ldrb	r2, [r5, #1]
 80261e2:	f002 0208 	and.w	r2, r2, #8
 80261e6:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 80261ea:	2a00      	cmp	r2, #0
 80261ec:	d044      	beq.n	8026278 <hpv_process+0x118>
 80261ee:	6822      	ldr	r2, [r4, #0]
 80261f0:	3404      	adds	r4, #4
 80261f2:	1092      	asrs	r2, r2, #2
 80261f4:	f840 2f04 	str.w	r2, [r0, #4]!
 80261f8:	786a      	ldrb	r2, [r5, #1]
 80261fa:	f002 0210 	and.w	r2, r2, #16
 80261fe:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 8026202:	2a00      	cmp	r2, #0
 8026204:	d03e      	beq.n	8026284 <hpv_process+0x124>
 8026206:	6822      	ldr	r2, [r4, #0]
 8026208:	3404      	adds	r4, #4
 802620a:	1092      	asrs	r2, r2, #2
 802620c:	f84e 2f04 	str.w	r2, [lr, #4]!
 8026210:	786a      	ldrb	r2, [r5, #1]
 8026212:	f002 0220 	and.w	r2, r2, #32
 8026216:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 802621a:	b38a      	cbz	r2, 8026280 <hpv_process+0x120>
 802621c:	6822      	ldr	r2, [r4, #0]
 802621e:	3404      	adds	r4, #4
 8026220:	1092      	asrs	r2, r2, #2
 8026222:	f84c 2f04 	str.w	r2, [ip, #4]!
 8026226:	786a      	ldrb	r2, [r5, #1]
 8026228:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 802622c:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 8026230:	b352      	cbz	r2, 8026288 <hpv_process+0x128>
 8026232:	6822      	ldr	r2, [r4, #0]
 8026234:	3404      	adds	r4, #4
 8026236:	1092      	asrs	r2, r2, #2
 8026238:	f849 2f04 	str.w	r2, [r9, #4]!
 802623c:	786a      	ldrb	r2, [r5, #1]
 802623e:	11d2      	asrs	r2, r2, #7
 8026240:	d002      	beq.n	8026248 <hpv_process+0xe8>
 8026242:	6822      	ldr	r2, [r4, #0]
 8026244:	3404      	adds	r4, #4
 8026246:	1092      	asrs	r2, r2, #2
 8026248:	3101      	adds	r1, #1
 802624a:	428e      	cmp	r6, r1
 802624c:	f84a 2f04 	str.w	r2, [sl, #4]!
 8026250:	f103 0304 	add.w	r3, r3, #4
 8026254:	d01a      	beq.n	802628c <hpv_process+0x12c>
 8026256:	786a      	ldrb	r2, [r5, #1]
 8026258:	f012 0201 	ands.w	r2, r2, #1
 802625c:	d002      	beq.n	8026264 <hpv_process+0x104>
 802625e:	6822      	ldr	r2, [r4, #0]
 8026260:	3404      	adds	r4, #4
 8026262:	1092      	asrs	r2, r2, #2
 8026264:	601a      	str	r2, [r3, #0]
 8026266:	786a      	ldrb	r2, [r5, #1]
 8026268:	f002 0202 	and.w	r2, r2, #2
 802626c:	f002 0bff 	and.w	fp, r2, #255	@ 0xff
 8026270:	2a00      	cmp	r2, #0
 8026272:	d1a4      	bne.n	80261be <hpv_process+0x5e>
 8026274:	465a      	mov	r2, fp
 8026276:	e7a5      	b.n	80261c4 <hpv_process+0x64>
 8026278:	465a      	mov	r2, fp
 802627a:	e7bb      	b.n	80261f4 <hpv_process+0x94>
 802627c:	465a      	mov	r2, fp
 802627e:	e7ad      	b.n	80261dc <hpv_process+0x7c>
 8026280:	465a      	mov	r2, fp
 8026282:	e7ce      	b.n	8026222 <hpv_process+0xc2>
 8026284:	465a      	mov	r2, fp
 8026286:	e7c1      	b.n	802620c <hpv_process+0xac>
 8026288:	465a      	mov	r2, fp
 802628a:	e7d5      	b.n	8026238 <hpv_process+0xd8>
 802628c:	9b02      	ldr	r3, [sp, #8]
 802628e:	9801      	ldr	r0, [sp, #4]
 8026290:	681b      	ldr	r3, [r3, #0]
 8026292:	2b01      	cmp	r3, #1
 8026294:	d02b      	beq.n	80262ee <hpv_process+0x18e>
 8026296:	f007 f993 	bl	802d5c0 <downmix>
 802629a:	2e00      	cmp	r6, #0
 802629c:	dd1f      	ble.n	80262de <hpv_process+0x17e>
 802629e:	3601      	adds	r6, #1
 80262a0:	9a00      	ldr	r2, [sp, #0]
 80262a2:	ea4f 0ec6 	mov.w	lr, r6, lsl #3
 80262a6:	eb02 060e 	add.w	r6, r2, lr
 80262aa:	1f38      	subs	r0, r7, #4
 80262ac:	3208      	adds	r2, #8
 80262ae:	f507 71be 	add.w	r1, r7, #380	@ 0x17c
 80262b2:	f850 3f04 	ldr.w	r3, [r0, #4]!
 80262b6:	f303 031d 	ssat	r3, #30, r3
 80262ba:	009b      	lsls	r3, r3, #2
 80262bc:	f842 3c08 	str.w	r3, [r2, #-8]
 80262c0:	f851 3f04 	ldr.w	r3, [r1, #4]!
 80262c4:	f303 031d 	ssat	r3, #30, r3
 80262c8:	009b      	lsls	r3, r3, #2
 80262ca:	f842 3c04 	str.w	r3, [r2, #-4]
 80262ce:	3208      	adds	r2, #8
 80262d0:	4296      	cmp	r6, r2
 80262d2:	d1ee      	bne.n	80262b2 <hpv_process+0x152>
 80262d4:	9b00      	ldr	r3, [sp, #0]
 80262d6:	f1ae 0e08 	sub.w	lr, lr, #8
 80262da:	4473      	add	r3, lr
 80262dc:	9300      	str	r3, [sp, #0]
 80262de:	f1b8 0f00 	cmp.w	r8, #0
 80262e2:	f47f af55 	bne.w	8026190 <hpv_process+0x30>
 80262e6:	9803      	ldr	r0, [sp, #12]
 80262e8:	b005      	add	sp, #20
 80262ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262ee:	f005 fb49 	bl	802b984 <hpv_2>
 80262f2:	e7d2      	b.n	802629a <hpv_process+0x13a>
 80262f4:	f06f 0304 	mvn.w	r3, #4
 80262f8:	9303      	str	r3, [sp, #12]
 80262fa:	4618      	mov	r0, r3
 80262fc:	e7f4      	b.n	80262e8 <hpv_process+0x188>
 80262fe:	bf00      	nop

08026300 <limiter_reset>:
 8026300:	b4f0      	push	{r4, r5, r6, r7}
 8026302:	4603      	mov	r3, r0
 8026304:	4809      	ldr	r0, [pc, #36]	@ (802632c <limiter_reset+0x2c>)
 8026306:	4e0a      	ldr	r6, [pc, #40]	@ (8026330 <limiter_reset+0x30>)
 8026308:	4d0a      	ldr	r5, [pc, #40]	@ (8026334 <limiter_reset+0x34>)
 802630a:	490b      	ldr	r1, [pc, #44]	@ (8026338 <limiter_reset+0x38>)
 802630c:	4a0b      	ldr	r2, [pc, #44]	@ (802633c <limiter_reset+0x3c>)
 802630e:	6198      	str	r0, [r3, #24]
 8026310:	f647 7790 	movw	r7, #32656	@ 0x7f90
 8026314:	2000      	movs	r0, #0
 8026316:	2401      	movs	r4, #1
 8026318:	61df      	str	r7, [r3, #28]
 802631a:	611e      	str	r6, [r3, #16]
 802631c:	615d      	str	r5, [r3, #20]
 802631e:	809c      	strh	r4, [r3, #4]
 8026320:	6099      	str	r1, [r3, #8]
 8026322:	60da      	str	r2, [r3, #12]
 8026324:	6218      	str	r0, [r3, #32]
 8026326:	6258      	str	r0, [r3, #36]	@ 0x24
 8026328:	bcf0      	pop	{r4, r5, r6, r7}
 802632a:	4770      	bx	lr
 802632c:	ffff8070 	.word	0xffff8070
 8026330:	79999999 	.word	0x79999999
 8026334:	3d023d29 	.word	0x3d023d29
 8026338:	7ffc963a 	.word	0x7ffc963a
 802633c:	000369c5 	.word	0x000369c5

08026340 <limiter_setConfig>:
 8026340:	6842      	ldr	r2, [r0, #4]
 8026342:	8803      	ldrh	r3, [r0, #0]
 8026344:	808b      	strh	r3, [r1, #4]
 8026346:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 802634a:	1a9b      	subs	r3, r3, r2
 802634c:	608a      	str	r2, [r1, #8]
 802634e:	60cb      	str	r3, [r1, #12]
 8026350:	2000      	movs	r0, #0
 8026352:	4770      	bx	lr

08026354 <limiter_process>:
 8026354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026356:	6843      	ldr	r3, [r0, #4]
 8026358:	2b04      	cmp	r3, #4
 802635a:	d130      	bne.n	80263be <limiter_process+0x6a>
 802635c:	684b      	ldr	r3, [r1, #4]
 802635e:	2b04      	cmp	r3, #4
 8026360:	d12d      	bne.n	80263be <limiter_process+0x6a>
 8026362:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8026366:	6889      	ldr	r1, [r1, #8]
 8026368:	6884      	ldr	r4, [r0, #8]
 802636a:	2b01      	cmp	r3, #1
 802636c:	d016      	beq.n	802639c <limiter_process+0x48>
 802636e:	b99b      	cbnz	r3, 8026398 <limiter_process+0x44>
 8026370:	6805      	ldr	r5, [r0, #0]
 8026372:	1e6a      	subs	r2, r5, #1
 8026374:	2a01      	cmp	r2, #1
 8026376:	d81f      	bhi.n	80263b8 <limiter_process+0x64>
 8026378:	68c2      	ldr	r2, [r0, #12]
 802637a:	fb02 f205 	mul.w	r2, r2, r5
 802637e:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8026382:	1052      	asrs	r2, r2, #1
 8026384:	2a00      	cmp	r2, #0
 8026386:	dd07      	ble.n	8026398 <limiter_process+0x44>
 8026388:	3908      	subs	r1, #8
 802638a:	e8f4 6702 	ldrd	r6, r7, [r4], #8
 802638e:	3301      	adds	r3, #1
 8026390:	4293      	cmp	r3, r2
 8026392:	e9e1 6702 	strd	r6, r7, [r1, #8]!
 8026396:	d1f8      	bne.n	802638a <limiter_process+0x36>
 8026398:	2000      	movs	r0, #0
 802639a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802639c:	6803      	ldr	r3, [r0, #0]
 802639e:	2b01      	cmp	r3, #1
 80263a0:	d013      	beq.n	80263ca <limiter_process+0x76>
 80263a2:	2b02      	cmp	r3, #2
 80263a4:	d108      	bne.n	80263b8 <limiter_process+0x64>
 80263a6:	6903      	ldr	r3, [r0, #16]
 80263a8:	2b01      	cmp	r3, #1
 80263aa:	d10b      	bne.n	80263c4 <limiter_process+0x70>
 80263ac:	68c3      	ldr	r3, [r0, #12]
 80263ae:	4620      	mov	r0, r4
 80263b0:	f000 f89e 	bl	80264f0 <limiter_stereo_compute>
 80263b4:	2000      	movs	r0, #0
 80263b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80263b8:	f06f 0001 	mvn.w	r0, #1
 80263bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80263be:	f06f 0002 	mvn.w	r0, #2
 80263c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80263c4:	f04f 30ff 	mov.w	r0, #4294967295
 80263c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80263ca:	68c3      	ldr	r3, [r0, #12]
 80263cc:	4620      	mov	r0, r4
 80263ce:	f000 f803 	bl	80263d8 <limiter_mono_compute>
 80263d2:	2000      	movs	r0, #0
 80263d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80263d6:	bf00      	nop

080263d8 <limiter_mono_compute>:
 80263d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263dc:	4692      	mov	sl, r2
 80263de:	b089      	sub	sp, #36	@ 0x24
 80263e0:	6992      	ldr	r2, [r2, #24]
 80263e2:	9205      	str	r2, [sp, #20]
 80263e4:	f8da 2010 	ldr.w	r2, [sl, #16]
 80263e8:	f8da b01c 	ldr.w	fp, [sl, #28]
 80263ec:	f8da e020 	ldr.w	lr, [sl, #32]
 80263f0:	4680      	mov	r8, r0
 80263f2:	4610      	mov	r0, r2
 80263f4:	f8da 2014 	ldr.w	r2, [sl, #20]
 80263f8:	9206      	str	r2, [sp, #24]
 80263fa:	f8da 2008 	ldr.w	r2, [sl, #8]
 80263fe:	9202      	str	r2, [sp, #8]
 8026400:	2b00      	cmp	r3, #0
 8026402:	f8da 200c 	ldr.w	r2, [sl, #12]
 8026406:	9203      	str	r2, [sp, #12]
 8026408:	dd6c      	ble.n	80264e4 <limiter_mono_compute+0x10c>
 802640a:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80264ec <limiter_mono_compute+0x114>
 802640e:	f8cd a01c 	str.w	sl, [sp, #28]
 8026412:	2700      	movs	r7, #0
 8026414:	1d0e      	adds	r6, r1, #4
 8026416:	4682      	mov	sl, r0
 8026418:	9301      	str	r3, [sp, #4]
 802641a:	f858 4b04 	ldr.w	r4, [r8], #4
 802641e:	2c00      	cmp	r4, #0
 8026420:	dd57      	ble.n	80264d2 <limiter_mono_compute+0xfa>
 8026422:	4622      	mov	r2, r4
 8026424:	fab2 f382 	clz	r3, r2
 8026428:	409a      	lsls	r2, r3
 802642a:	1711      	asrs	r1, r2, #28
 802642c:	f001 0104 	and.w	r1, r1, #4
 8026430:	eb09 0081 	add.w	r0, r9, r1, lsl #2
 8026434:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8026438:	6845      	ldr	r5, [r0, #4]
 802643a:	fb32 5c11 	smlawt	ip, r2, r1, r5
 802643e:	6881      	ldr	r1, [r0, #8]
 8026440:	fb32 111c 	smlawt	r1, r2, ip, r1
 8026444:	68c0      	ldr	r0, [r0, #12]
 8026446:	fb32 0111 	smlawt	r1, r2, r1, r0
 802644a:	1349      	asrs	r1, r1, #13
 802644c:	041b      	lsls	r3, r3, #16
 802644e:	fa83 f3a1 	qsub	r3, r1, r3
 8026452:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 8026456:	ebcb 0203 	rsb	r2, fp, r3
 802645a:	2a00      	cmp	r2, #0
 802645c:	dd2d      	ble.n	80264ba <limiter_mono_compute+0xe2>
 802645e:	035b      	lsls	r3, r3, #13
 8026460:	fb5a f313 	smmulr	r3, sl, r3
 8026464:	4573      	cmp	r3, lr
 8026466:	da06      	bge.n	8026476 <limiter_mono_compute+0x9e>
 8026468:	9a02      	ldr	r2, [sp, #8]
 802646a:	fb52 fe1e 	smmulr	lr, r2, lr
 802646e:	9a03      	ldr	r2, [sp, #12]
 8026470:	fb52 e313 	smmlar	r3, r2, r3, lr
 8026474:	005b      	lsls	r3, r3, #1
 8026476:	b98b      	cbnz	r3, 802649c <limiter_mono_compute+0xc4>
 8026478:	f846 4c04 	str.w	r4, [r6, #-4]
 802647c:	f04f 0e00 	mov.w	lr, #0
 8026480:	9b01      	ldr	r3, [sp, #4]
 8026482:	3701      	adds	r7, #1
 8026484:	42bb      	cmp	r3, r7
 8026486:	f106 0604 	add.w	r6, r6, #4
 802648a:	d1c6      	bne.n	802641a <limiter_mono_compute+0x42>
 802648c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8026490:	f8ca e020 	str.w	lr, [sl, #32]
 8026494:	2000      	movs	r0, #0
 8026496:	b009      	add	sp, #36	@ 0x24
 8026498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802649c:	4258      	negs	r0, r3
 802649e:	1300      	asrs	r0, r0, #12
 80264a0:	9304      	str	r3, [sp, #16]
 80264a2:	f7fd fb2f 	bl	8023b04 <fix32_ln22lin_q3_s2>
 80264a6:	fb54 f010 	smmulr	r0, r4, r0
 80264aa:	f300 001c 	ssat	r0, #29, r0
 80264ae:	9b04      	ldr	r3, [sp, #16]
 80264b0:	0040      	lsls	r0, r0, #1
 80264b2:	f846 0c04 	str.w	r0, [r6, #-4]
 80264b6:	469e      	mov	lr, r3
 80264b8:	e7e2      	b.n	8026480 <limiter_mono_compute+0xa8>
 80264ba:	9a05      	ldr	r2, [sp, #20]
 80264bc:	1a9b      	subs	r3, r3, r2
 80264be:	2b00      	cmp	r3, #0
 80264c0:	dd0b      	ble.n	80264da <limiter_mono_compute+0x102>
 80264c2:	03db      	lsls	r3, r3, #15
 80264c4:	fb53 f313 	smmulr	r3, r3, r3
 80264c8:	9a06      	ldr	r2, [sp, #24]
 80264ca:	fb53 f312 	smmulr	r3, r3, r2
 80264ce:	105b      	asrs	r3, r3, #1
 80264d0:	e7c8      	b.n	8026464 <limiter_mono_compute+0x8c>
 80264d2:	2300      	movs	r3, #0
 80264d4:	fa84 f2a3 	qsub	r2, r3, r4
 80264d8:	e7a4      	b.n	8026424 <limiter_mono_compute+0x4c>
 80264da:	f1be 0f00 	cmp.w	lr, #0
 80264de:	ddcb      	ble.n	8026478 <limiter_mono_compute+0xa0>
 80264e0:	2300      	movs	r3, #0
 80264e2:	e7c1      	b.n	8026468 <limiter_mono_compute+0x90>
 80264e4:	f04f 0e00 	mov.w	lr, #0
 80264e8:	e7d2      	b.n	8026490 <limiter_mono_compute+0xb8>
 80264ea:	bf00      	nop
 80264ec:	080370a0 	.word	0x080370a0

080264f0 <limiter_stereo_compute>:
 80264f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80264f4:	461e      	mov	r6, r3
 80264f6:	b089      	sub	sp, #36	@ 0x24
 80264f8:	005b      	lsls	r3, r3, #1
 80264fa:	468b      	mov	fp, r1
 80264fc:	1e59      	subs	r1, r3, #1
 80264fe:	9107      	str	r1, [sp, #28]
 8026500:	6993      	ldr	r3, [r2, #24]
 8026502:	9303      	str	r3, [sp, #12]
 8026504:	4611      	mov	r1, r2
 8026506:	6953      	ldr	r3, [r2, #20]
 8026508:	9206      	str	r2, [sp, #24]
 802650a:	69d7      	ldr	r7, [r2, #28]
 802650c:	f8d2 8010 	ldr.w	r8, [r2, #16]
 8026510:	9305      	str	r3, [sp, #20]
 8026512:	6892      	ldr	r2, [r2, #8]
 8026514:	68cb      	ldr	r3, [r1, #12]
 8026516:	9302      	str	r3, [sp, #8]
 8026518:	2e00      	cmp	r6, #0
 802651a:	9201      	str	r2, [sp, #4]
 802651c:	6a0b      	ldr	r3, [r1, #32]
 802651e:	f340 80d5 	ble.w	80266cc <limiter_stereo_compute+0x1dc>
 8026522:	4d6c      	ldr	r5, [pc, #432]	@ (80266d4 <limiter_stereo_compute+0x1e4>)
 8026524:	9600      	str	r6, [sp, #0]
 8026526:	4682      	mov	sl, r0
 8026528:	f04f 0900 	mov.w	r9, #0
 802652c:	f85a 4039 	ldr.w	r4, [sl, r9, lsl #3]
 8026530:	2c00      	cmp	r4, #0
 8026532:	f340 80be 	ble.w	80266b2 <limiter_stereo_compute+0x1c2>
 8026536:	4622      	mov	r2, r4
 8026538:	fab2 f082 	clz	r0, r2
 802653c:	4082      	lsls	r2, r0
 802653e:	1711      	asrs	r1, r2, #28
 8026540:	f001 0104 	and.w	r1, r1, #4
 8026544:	eb05 0e81 	add.w	lr, r5, r1, lsl #2
 8026548:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802654c:	f8de 6004 	ldr.w	r6, [lr, #4]
 8026550:	fb32 6c11 	smlawt	ip, r2, r1, r6
 8026554:	f8de 1008 	ldr.w	r1, [lr, #8]
 8026558:	fb32 111c 	smlawt	r1, r2, ip, r1
 802655c:	f8de c00c 	ldr.w	ip, [lr, #12]
 8026560:	fb32 cc11 	smlawt	ip, r2, r1, ip
 8026564:	ea4f 3c6c 	mov.w	ip, ip, asr #13
 8026568:	0402      	lsls	r2, r0, #16
 802656a:	fa82 f2ac 	qsub	r2, ip, r2
 802656e:	f502 3200 	add.w	r2, r2, #131072	@ 0x20000
 8026572:	1bd1      	subs	r1, r2, r7
 8026574:	2900      	cmp	r1, #0
 8026576:	f340 8090 	ble.w	802669a <limiter_stereo_compute+0x1aa>
 802657a:	0352      	lsls	r2, r2, #13
 802657c:	fb58 f212 	smmulr	r2, r8, r2
 8026580:	429a      	cmp	r2, r3
 8026582:	da06      	bge.n	8026592 <limiter_stereo_compute+0xa2>
 8026584:	9901      	ldr	r1, [sp, #4]
 8026586:	fb51 f313 	smmulr	r3, r1, r3
 802658a:	9902      	ldr	r1, [sp, #8]
 802658c:	fb51 3212 	smmlar	r2, r1, r2, r3
 8026590:	0052      	lsls	r2, r2, #1
 8026592:	2a00      	cmp	r2, #0
 8026594:	d162      	bne.n	802665c <limiter_stereo_compute+0x16c>
 8026596:	f84b 4039 	str.w	r4, [fp, r9, lsl #3]
 802659a:	2300      	movs	r3, #0
 802659c:	9a00      	ldr	r2, [sp, #0]
 802659e:	f109 0901 	add.w	r9, r9, #1
 80265a2:	454a      	cmp	r2, r9
 80265a4:	d1c2      	bne.n	802652c <limiter_stereo_compute+0x3c>
 80265a6:	4616      	mov	r6, r2
 80265a8:	9a07      	ldr	r2, [sp, #28]
 80265aa:	0091      	lsls	r1, r2, #2
 80265ac:	ebc1 01c6 	rsb	r1, r1, r6, lsl #3
 80265b0:	448a      	add	sl, r1
 80265b2:	448b      	add	fp, r1
 80265b4:	9906      	ldr	r1, [sp, #24]
 80265b6:	2400      	movs	r4, #0
 80265b8:	620b      	str	r3, [r1, #32]
 80265ba:	6a49      	ldr	r1, [r1, #36]	@ 0x24
 80265bc:	46a1      	mov	r9, r4
 80265be:	f85a 4039 	ldr.w	r4, [sl, r9, lsl #3]
 80265c2:	2c00      	cmp	r4, #0
 80265c4:	dd65      	ble.n	8026692 <limiter_stereo_compute+0x1a2>
 80265c6:	4623      	mov	r3, r4
 80265c8:	fab3 f083 	clz	r0, r3
 80265cc:	4083      	lsls	r3, r0
 80265ce:	171a      	asrs	r2, r3, #28
 80265d0:	f002 0204 	and.w	r2, r2, #4
 80265d4:	eb05 0e82 	add.w	lr, r5, r2, lsl #2
 80265d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80265dc:	f8de 6004 	ldr.w	r6, [lr, #4]
 80265e0:	fb33 6c12 	smlawt	ip, r3, r2, r6
 80265e4:	f8de 2008 	ldr.w	r2, [lr, #8]
 80265e8:	fb33 221c 	smlawt	r2, r3, ip, r2
 80265ec:	f8de c00c 	ldr.w	ip, [lr, #12]
 80265f0:	fb33 cc12 	smlawt	ip, r3, r2, ip
 80265f4:	ea4f 3c6c 	mov.w	ip, ip, asr #13
 80265f8:	0403      	lsls	r3, r0, #16
 80265fa:	fa83 f3ac 	qsub	r3, ip, r3
 80265fe:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 8026602:	1bda      	subs	r2, r3, r7
 8026604:	2a00      	cmp	r2, #0
 8026606:	dd38      	ble.n	802667a <limiter_stereo_compute+0x18a>
 8026608:	035b      	lsls	r3, r3, #13
 802660a:	fb58 f313 	smmulr	r3, r8, r3
 802660e:	428b      	cmp	r3, r1
 8026610:	da06      	bge.n	8026620 <limiter_stereo_compute+0x130>
 8026612:	9a01      	ldr	r2, [sp, #4]
 8026614:	fb52 f111 	smmulr	r1, r2, r1
 8026618:	9a02      	ldr	r2, [sp, #8]
 802661a:	fb52 1313 	smmlar	r3, r2, r3, r1
 802661e:	005b      	lsls	r3, r3, #1
 8026620:	b96b      	cbnz	r3, 802663e <limiter_stereo_compute+0x14e>
 8026622:	f84b 4039 	str.w	r4, [fp, r9, lsl #3]
 8026626:	2100      	movs	r1, #0
 8026628:	9b00      	ldr	r3, [sp, #0]
 802662a:	f109 0901 	add.w	r9, r9, #1
 802662e:	454b      	cmp	r3, r9
 8026630:	d1c5      	bne.n	80265be <limiter_stereo_compute+0xce>
 8026632:	9b06      	ldr	r3, [sp, #24]
 8026634:	6259      	str	r1, [r3, #36]	@ 0x24
 8026636:	2000      	movs	r0, #0
 8026638:	b009      	add	sp, #36	@ 0x24
 802663a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802663e:	4258      	negs	r0, r3
 8026640:	1300      	asrs	r0, r0, #12
 8026642:	9304      	str	r3, [sp, #16]
 8026644:	f7fd fa5e 	bl	8023b04 <fix32_ln22lin_q3_s2>
 8026648:	fb54 f010 	smmulr	r0, r4, r0
 802664c:	f300 001c 	ssat	r0, #29, r0
 8026650:	9b04      	ldr	r3, [sp, #16]
 8026652:	0040      	lsls	r0, r0, #1
 8026654:	f84b 0039 	str.w	r0, [fp, r9, lsl #3]
 8026658:	4619      	mov	r1, r3
 802665a:	e7e5      	b.n	8026628 <limiter_stereo_compute+0x138>
 802665c:	4250      	negs	r0, r2
 802665e:	1300      	asrs	r0, r0, #12
 8026660:	9204      	str	r2, [sp, #16]
 8026662:	f7fd fa4f 	bl	8023b04 <fix32_ln22lin_q3_s2>
 8026666:	fb54 f010 	smmulr	r0, r4, r0
 802666a:	f300 001c 	ssat	r0, #29, r0
 802666e:	9a04      	ldr	r2, [sp, #16]
 8026670:	0040      	lsls	r0, r0, #1
 8026672:	f84b 0039 	str.w	r0, [fp, r9, lsl #3]
 8026676:	4613      	mov	r3, r2
 8026678:	e790      	b.n	802659c <limiter_stereo_compute+0xac>
 802667a:	9a03      	ldr	r2, [sp, #12]
 802667c:	1a9b      	subs	r3, r3, r2
 802667e:	2b00      	cmp	r3, #0
 8026680:	dd1b      	ble.n	80266ba <limiter_stereo_compute+0x1ca>
 8026682:	03db      	lsls	r3, r3, #15
 8026684:	fb53 f313 	smmulr	r3, r3, r3
 8026688:	9a05      	ldr	r2, [sp, #20]
 802668a:	fb53 f312 	smmulr	r3, r3, r2
 802668e:	105b      	asrs	r3, r3, #1
 8026690:	e7bd      	b.n	802660e <limiter_stereo_compute+0x11e>
 8026692:	2300      	movs	r3, #0
 8026694:	fa84 f3a3 	qsub	r3, r3, r4
 8026698:	e796      	b.n	80265c8 <limiter_stereo_compute+0xd8>
 802669a:	9903      	ldr	r1, [sp, #12]
 802669c:	1a52      	subs	r2, r2, r1
 802669e:	2a00      	cmp	r2, #0
 80266a0:	dd0f      	ble.n	80266c2 <limiter_stereo_compute+0x1d2>
 80266a2:	03d2      	lsls	r2, r2, #15
 80266a4:	fb52 f212 	smmulr	r2, r2, r2
 80266a8:	9905      	ldr	r1, [sp, #20]
 80266aa:	fb52 f211 	smmulr	r2, r2, r1
 80266ae:	1052      	asrs	r2, r2, #1
 80266b0:	e766      	b.n	8026580 <limiter_stereo_compute+0x90>
 80266b2:	2200      	movs	r2, #0
 80266b4:	fa84 f2a2 	qsub	r2, r2, r4
 80266b8:	e73e      	b.n	8026538 <limiter_stereo_compute+0x48>
 80266ba:	2900      	cmp	r1, #0
 80266bc:	ddb1      	ble.n	8026622 <limiter_stereo_compute+0x132>
 80266be:	2300      	movs	r3, #0
 80266c0:	e7a7      	b.n	8026612 <limiter_stereo_compute+0x122>
 80266c2:	2b00      	cmp	r3, #0
 80266c4:	f77f af67 	ble.w	8026596 <limiter_stereo_compute+0xa6>
 80266c8:	2200      	movs	r2, #0
 80266ca:	e75b      	b.n	8026584 <limiter_stereo_compute+0x94>
 80266cc:	9b06      	ldr	r3, [sp, #24]
 80266ce:	2100      	movs	r1, #0
 80266d0:	6219      	str	r1, [r3, #32]
 80266d2:	e7af      	b.n	8026634 <limiter_stereo_compute+0x144>
 80266d4:	080370a0 	.word	0x080370a0

080266d8 <omni2_decode>:
 80266d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266dc:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 80266de:	6943      	ldr	r3, [r0, #20]
 80266e0:	b091      	sub	sp, #68	@ 0x44
 80266e2:	4614      	mov	r4, r2
 80266e4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80266e6:	f9b3 202e 	ldrsh.w	r2, [r3, #46]	@ 0x2e
 80266ea:	9302      	str	r3, [sp, #8]
 80266ec:	9209      	str	r2, [sp, #36]	@ 0x24
 80266ee:	6803      	ldr	r3, [r0, #0]
 80266f0:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 80266f4:	9301      	str	r3, [sp, #4]
 80266f6:	4604      	mov	r4, r0
 80266f8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80266fa:	9307      	str	r3, [sp, #28]
 80266fc:	9008      	str	r0, [sp, #32]
 80266fe:	920a      	str	r2, [sp, #40]	@ 0x28
 8026700:	f000 fa56 	bl	8026bb0 <omni2_process_buffer_info>
 8026704:	7b23      	ldrb	r3, [r4, #12]
 8026706:	9003      	str	r0, [sp, #12]
 8026708:	2b01      	cmp	r3, #1
 802670a:	d057      	beq.n	80267bc <omni2_decode+0xe4>
 802670c:	9b07      	ldr	r3, [sp, #28]
 802670e:	9a02      	ldr	r2, [sp, #8]
 8026710:	781b      	ldrb	r3, [r3, #0]
 8026712:	f8d2 b028 	ldr.w	fp, [r2, #40]	@ 0x28
 8026716:	2b01      	cmp	r3, #1
 8026718:	d05b      	beq.n	80267d2 <omni2_decode+0xfa>
 802671a:	9b07      	ldr	r3, [sp, #28]
 802671c:	9a01      	ldr	r2, [sp, #4]
 802671e:	785b      	ldrb	r3, [r3, #1]
 8026720:	2b01      	cmp	r3, #1
 8026722:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026724:	ea4f 0683 	mov.w	r6, r3, lsl #2
 8026728:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802672a:	bf14      	ite	ne
 802672c:	2702      	movne	r7, #2
 802672e:	2703      	moveq	r7, #3
 8026730:	0098      	lsls	r0, r3, #2
 8026732:	9b02      	ldr	r3, [sp, #8]
 8026734:	f207 27c1 	addw	r7, r7, #705	@ 0x2c1
 8026738:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 802673c:	f602 3404 	addw	r4, r2, #2820	@ 0xb04
 8026740:	f103 0e32 	add.w	lr, r3, #50	@ 0x32
 8026744:	2500      	movs	r5, #0
 8026746:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 802674a:	b36b      	cbz	r3, 80267a8 <omni2_decode+0xd0>
 802674c:	f1bb 0f00 	cmp.w	fp, #0
 8026750:	f854 3c20 	ldr.w	r3, [r4, #-32]
 8026754:	6822      	ldr	r2, [r4, #0]
 8026756:	dd09      	ble.n	802676c <omni2_decode+0x94>
 8026758:	2100      	movs	r1, #0
 802675a:	46a4      	mov	ip, r4
 802675c:	3101      	adds	r1, #1
 802675e:	681c      	ldr	r4, [r3, #0]
 8026760:	6014      	str	r4, [r2, #0]
 8026762:	458b      	cmp	fp, r1
 8026764:	4433      	add	r3, r6
 8026766:	4402      	add	r2, r0
 8026768:	d1f8      	bne.n	802675c <omni2_decode+0x84>
 802676a:	4664      	mov	r4, ip
 802676c:	3404      	adds	r4, #4
 802676e:	42bc      	cmp	r4, r7
 8026770:	d1e9      	bne.n	8026746 <omni2_decode+0x6e>
 8026772:	9a02      	ldr	r2, [sp, #8]
 8026774:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8026776:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026778:	f892 2030 	ldrb.w	r2, [r2, #48]	@ 0x30
 802677c:	6283      	str	r3, [r0, #40]	@ 0x28
 802677e:	2302      	movs	r3, #2
 8026780:	f880 2030 	strb.w	r2, [r0, #48]	@ 0x30
 8026784:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 8026788:	9b03      	ldr	r3, [sp, #12]
 802678a:	b92b      	cbnz	r3, 8026798 <omni2_decode+0xc0>
 802678c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802678e:	2301      	movs	r3, #1
 8026790:	f881 3033 	strb.w	r3, [r1, #51]	@ 0x33
 8026794:	f881 3034 	strb.w	r3, [r1, #52]	@ 0x34
 8026798:	9b02      	ldr	r3, [sp, #8]
 802679a:	9a08      	ldr	r2, [sp, #32]
 802679c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802679e:	9803      	ldr	r0, [sp, #12]
 80267a0:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80267a2:	b011      	add	sp, #68	@ 0x44
 80267a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80267a8:	f1bb 0f00 	cmp.w	fp, #0
 80267ac:	6822      	ldr	r2, [r4, #0]
 80267ae:	dddd      	ble.n	802676c <omni2_decode+0x94>
 80267b0:	3301      	adds	r3, #1
 80267b2:	459b      	cmp	fp, r3
 80267b4:	6015      	str	r5, [r2, #0]
 80267b6:	4402      	add	r2, r0
 80267b8:	d1fa      	bne.n	80267b0 <omni2_decode+0xd8>
 80267ba:	e7d7      	b.n	802676c <omni2_decode+0x94>
 80267bc:	9901      	ldr	r1, [sp, #4]
 80267be:	4b63      	ldr	r3, [pc, #396]	@ (802694c <omni2_decode+0x274>)
 80267c0:	f8d1 2adc 	ldr.w	r2, [r1, #2780]	@ 0xadc
 80267c4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80267c8:	9a08      	ldr	r2, [sp, #32]
 80267ca:	648b      	str	r3, [r1, #72]	@ 0x48
 80267cc:	2300      	movs	r3, #0
 80267ce:	7313      	strb	r3, [r2, #12]
 80267d0:	e79c      	b.n	802670c <omni2_decode+0x34>
 80267d2:	9901      	ldr	r1, [sp, #4]
 80267d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80267d6:	f8cd b000 	str.w	fp, [sp]
 80267da:	3232      	adds	r2, #50	@ 0x32
 80267dc:	920e      	str	r2, [sp, #56]	@ 0x38
 80267de:	f601 22e4 	addw	r2, r1, #2788	@ 0xae4
 80267e2:	009c      	lsls	r4, r3, #2
 80267e4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80267e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80267e8:	460a      	mov	r2, r1
 80267ea:	3298      	adds	r2, #152	@ 0x98
 80267ec:	009b      	lsls	r3, r3, #2
 80267ee:	920d      	str	r2, [sp, #52]	@ 0x34
 80267f0:	f601 3204 	addw	r2, r1, #2820	@ 0xb04
 80267f4:	920c      	str	r2, [sp, #48]	@ 0x30
 80267f6:	461e      	mov	r6, r3
 80267f8:	9a00      	ldr	r2, [sp, #0]
 80267fa:	9901      	ldr	r1, [sp, #4]
 80267fc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 80267fe:	9606      	str	r6, [sp, #24]
 8026800:	2a30      	cmp	r2, #48	@ 0x30
 8026802:	4613      	mov	r3, r2
 8026804:	bfa8      	it	ge
 8026806:	2330      	movge	r3, #48	@ 0x30
 8026808:	4699      	mov	r9, r3
 802680a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802680c:	f8c1 9ae0 	str.w	r9, [r1, #2784]	@ 0xae0
 8026810:	fb09 f303 	mul.w	r3, r9, r3
 8026814:	ebc9 0202 	rsb	r2, r9, r2
 8026818:	009b      	lsls	r3, r3, #2
 802681a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802681c:	9200      	str	r2, [sp, #0]
 802681e:	461a      	mov	r2, r3
 8026820:	ea4f 0389 	mov.w	r3, r9, lsl #2
 8026824:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
 8026828:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802682a:	9104      	str	r1, [sp, #16]
 802682c:	468a      	mov	sl, r1
 802682e:	9705      	str	r7, [sp, #20]
 8026830:	4693      	mov	fp, r2
 8026832:	461e      	mov	r6, r3
 8026834:	e00b      	b.n	802684e <omni2_decode+0x176>
 8026836:	f1b9 0f00 	cmp.w	r9, #0
 802683a:	dd03      	ble.n	8026844 <omni2_decode+0x16c>
 802683c:	4632      	mov	r2, r6
 802683e:	4638      	mov	r0, r7
 8026840:	f007 f988 	bl	802db54 <memset>
 8026844:	3504      	adds	r5, #4
 8026846:	4555      	cmp	r5, sl
 8026848:	f107 07c0 	add.w	r7, r7, #192	@ 0xc0
 802684c:	d01a      	beq.n	8026884 <omni2_decode+0x1ac>
 802684e:	f818 1f01 	ldrb.w	r1, [r8, #1]!
 8026852:	2900      	cmp	r1, #0
 8026854:	d0ef      	beq.n	8026836 <omni2_decode+0x15e>
 8026856:	f1b9 0f00 	cmp.w	r9, #0
 802685a:	682b      	ldr	r3, [r5, #0]
 802685c:	dd0a      	ble.n	8026874 <omni2_decode+0x19c>
 802685e:	eb07 0e06 	add.w	lr, r7, r6
 8026862:	4638      	mov	r0, r7
 8026864:	4619      	mov	r1, r3
 8026866:	680a      	ldr	r2, [r1, #0]
 8026868:	10d2      	asrs	r2, r2, #3
 802686a:	f840 2b04 	str.w	r2, [r0], #4
 802686e:	4570      	cmp	r0, lr
 8026870:	4421      	add	r1, r4
 8026872:	d1f8      	bne.n	8026866 <omni2_decode+0x18e>
 8026874:	eb03 020b 	add.w	r2, r3, fp
 8026878:	602a      	str	r2, [r5, #0]
 802687a:	3504      	adds	r5, #4
 802687c:	4555      	cmp	r5, sl
 802687e:	f107 07c0 	add.w	r7, r7, #192	@ 0xc0
 8026882:	d1e4      	bne.n	802684e <omni2_decode+0x176>
 8026884:	9a03      	ldr	r2, [sp, #12]
 8026886:	f8dd a010 	ldr.w	sl, [sp, #16]
 802688a:	f8dd b014 	ldr.w	fp, [sp, #20]
 802688e:	4633      	mov	r3, r6
 8026890:	9e06      	ldr	r6, [sp, #24]
 8026892:	2a00      	cmp	r2, #0
 8026894:	d04b      	beq.n	802692e <omni2_decode+0x256>
 8026896:	9a02      	ldr	r2, [sp, #8]
 8026898:	9908      	ldr	r1, [sp, #32]
 802689a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 802689c:	63ca      	str	r2, [r1, #60]	@ 0x3c
 802689e:	9a07      	ldr	r2, [sp, #28]
 80268a0:	f892 8001 	ldrb.w	r8, [r2, #1]
 80268a4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80268a6:	f1b8 0f01 	cmp.w	r8, #1
 80268aa:	fb09 fe02 	mul.w	lr, r9, r2
 80268ae:	bf14      	ite	ne
 80268b0:	f04f 0c02 	movne.w	ip, #2
 80268b4:	f04f 0c03 	moveq.w	ip, #3
 80268b8:	9a01      	ldr	r2, [sp, #4]
 80268ba:	f20c 2cc1 	addw	ip, ip, #705	@ 0x2c1
 80268be:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
 80268c2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80268c6:	f1b9 0f00 	cmp.w	r9, #0
 80268ca:	f8da 7000 	ldr.w	r7, [sl]
 80268ce:	dd0d      	ble.n	80268ec <omni2_decode+0x214>
 80268d0:	eb03 050b 	add.w	r5, r3, fp
 80268d4:	4658      	mov	r0, fp
 80268d6:	4639      	mov	r1, r7
 80268d8:	f850 2b04 	ldr.w	r2, [r0], #4
 80268dc:	f302 021c 	ssat	r2, #29, r2
 80268e0:	4285      	cmp	r5, r0
 80268e2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80268e6:	600a      	str	r2, [r1, #0]
 80268e8:	4431      	add	r1, r6
 80268ea:	d1f5      	bne.n	80268d8 <omni2_decode+0x200>
 80268ec:	4477      	add	r7, lr
 80268ee:	f84a 7b04 	str.w	r7, [sl], #4
 80268f2:	45d4      	cmp	ip, sl
 80268f4:	f10b 0bc0 	add.w	fp, fp, #192	@ 0xc0
 80268f8:	d1e5      	bne.n	80268c6 <omni2_decode+0x1ee>
 80268fa:	9b00      	ldr	r3, [sp, #0]
 80268fc:	2b00      	cmp	r3, #0
 80268fe:	f47f af7b 	bne.w	80267f8 <omni2_decode+0x120>
 8026902:	9c02      	ldr	r4, [sp, #8]
 8026904:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8026906:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8026908:	6282      	str	r2, [r0, #40]	@ 0x28
 802690a:	469b      	mov	fp, r3
 802690c:	f894 2030 	ldrb.w	r2, [r4, #48]	@ 0x30
 8026910:	f880 2030 	strb.w	r2, [r0, #48]	@ 0x30
 8026914:	f1b8 0f01 	cmp.w	r8, #1
 8026918:	f8c0 b033 	str.w	fp, [r0, #51]	@ 0x33
 802691c:	f8c0 b037 	str.w	fp, [r0, #55]	@ 0x37
 8026920:	f8a0 b03b 	strh.w	fp, [r0, #59]	@ 0x3b
 8026924:	d00a      	beq.n	802693c <omni2_decode+0x264>
 8026926:	2302      	movs	r3, #2
 8026928:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 802692c:	e72c      	b.n	8026788 <omni2_decode+0xb0>
 802692e:	9808      	ldr	r0, [sp, #32]
 8026930:	9304      	str	r3, [sp, #16]
 8026932:	f000 fa93 	bl	8026e5c <omni2>
 8026936:	9b04      	ldr	r3, [sp, #16]
 8026938:	9003      	str	r0, [sp, #12]
 802693a:	e7b0      	b.n	802689e <omni2_decode+0x1c6>
 802693c:	4602      	mov	r2, r0
 802693e:	2303      	movs	r3, #3
 8026940:	f882 8035 	strb.w	r8, [r2, #53]	@ 0x35
 8026944:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 8026948:	e71e      	b.n	8026788 <omni2_decode+0xb0>
 802694a:	bf00      	nop
 802694c:	08037b3c 	.word	0x08037b3c

08026950 <omni2_init_heap>:
 8026950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026954:	4604      	mov	r4, r0
 8026956:	f500 66d3 	add.w	r6, r0, #1688	@ 0x698
 802695a:	460f      	mov	r7, r1
 802695c:	f44f 6288 	mov.w	r2, #1088	@ 0x440
 8026960:	4630      	mov	r0, r6
 8026962:	2100      	movs	r1, #0
 8026964:	f007 f8f6 	bl	802db54 <memset>
 8026968:	f894 3ad8 	ldrb.w	r3, [r4, #2776]	@ 0xad8
 802696c:	4a6c      	ldr	r2, [pc, #432]	@ (8026b20 <omni2_init_heap+0x1d0>)
 802696e:	5cd5      	ldrb	r5, [r2, r3]
 8026970:	2d06      	cmp	r5, #6
 8026972:	bfc6      	itte	gt
 8026974:	2502      	movgt	r5, #2
 8026976:	f04f 38ff 	movgt.w	r8, #4294967295
 802697a:	f04f 0800 	movle.w	r8, #0
 802697e:	2f0a      	cmp	r7, #10
 8026980:	f8c4 5adc 	str.w	r5, [r4, #2780]	@ 0xadc
 8026984:	d06f      	beq.n	8026a66 <omni2_init_heap+0x116>
 8026986:	2f14      	cmp	r7, #20
 8026988:	f000 809f 	beq.w	8026aca <omni2_init_heap+0x17a>
 802698c:	2f1e      	cmp	r7, #30
 802698e:	d049      	beq.n	8026a24 <omni2_init_heap+0xd4>
 8026990:	4964      	ldr	r1, [pc, #400]	@ (8026b24 <omni2_init_heap+0x1d4>)
 8026992:	4a65      	ldr	r2, [pc, #404]	@ (8026b28 <omni2_init_heap+0x1d8>)
 8026994:	4b65      	ldr	r3, [pc, #404]	@ (8026b2c <omni2_init_heap+0x1dc>)
 8026996:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 802699a:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 802699e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80269a2:	6461      	str	r1, [r4, #68]	@ 0x44
 80269a4:	f204 70dc 	addw	r0, r4, #2012	@ 0x7dc
 80269a8:	f504 610a 	add.w	r1, r4, #2208	@ 0x8a0
 80269ac:	64a2      	str	r2, [r4, #72]	@ 0x48
 80269ae:	6523      	str	r3, [r4, #80]	@ 0x50
 80269b0:	f504 62f1 	add.w	r2, r4, #1928	@ 0x788
 80269b4:	f604 034c 	addw	r3, r4, #2124	@ 0x84c
 80269b8:	6260      	str	r0, [r4, #36]	@ 0x24
 80269ba:	62a1      	str	r1, [r4, #40]	@ 0x28
 80269bc:	f604 1038 	addw	r0, r4, #2360	@ 0x938
 80269c0:	f604 11e8 	addw	r1, r4, #2536	@ 0x9e8
 80269c4:	62e2      	str	r2, [r4, #44]	@ 0x2c
 80269c6:	6323      	str	r3, [r4, #48]	@ 0x30
 80269c8:	f504 6211 	add.w	r2, r4, #2320	@ 0x910
 80269cc:	f604 1324 	addw	r3, r4, #2340	@ 0x924
 80269d0:	6360      	str	r0, [r4, #52]	@ 0x34
 80269d2:	63a1      	str	r1, [r4, #56]	@ 0x38
 80269d4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80269d6:	6423      	str	r3, [r4, #64]	@ 0x40
 80269d8:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80269dc:	2100      	movs	r1, #0
 80269de:	4630      	mov	r0, r6
 80269e0:	f007 f8b8 	bl	802db54 <memset>
 80269e4:	4a52      	ldr	r2, [pc, #328]	@ (8026b30 <omni2_init_heap+0x1e0>)
 80269e6:	4b53      	ldr	r3, [pc, #332]	@ (8026b34 <omni2_init_heap+0x1e4>)
 80269e8:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80269ec:	6819      	ldr	r1, [r3, #0]
 80269ee:	67a6      	str	r6, [r4, #120]	@ 0x78
 80269f0:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 80269f4:	3b01      	subs	r3, #1
 80269f6:	f504 6203 	add.w	r2, r4, #2096	@ 0x830
 80269fa:	009b      	lsls	r3, r3, #2
 80269fc:	18f7      	adds	r7, r6, r3
 80269fe:	65e6      	str	r6, [r4, #92]	@ 0x5c
 8026a00:	4413      	add	r3, r2
 8026a02:	6626      	str	r6, [r4, #96]	@ 0x60
 8026a04:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
 8026a08:	424e      	negs	r6, r1
 8026a0a:	2500      	movs	r5, #0
 8026a0c:	4640      	mov	r0, r8
 8026a0e:	6667      	str	r7, [r4, #100]	@ 0x64
 8026a10:	6763      	str	r3, [r4, #116]	@ 0x74
 8026a12:	67e2      	str	r2, [r4, #124]	@ 0x7c
 8026a14:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8026a16:	6722      	str	r2, [r4, #112]	@ 0x70
 8026a18:	65a1      	str	r1, [r4, #88]	@ 0x58
 8026a1a:	66a6      	str	r6, [r4, #104]	@ 0x68
 8026a1c:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
 8026a20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026a24:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 8026a28:	4843      	ldr	r0, [pc, #268]	@ (8026b38 <omni2_init_heap+0x1e8>)
 8026a2a:	4944      	ldr	r1, [pc, #272]	@ (8026b3c <omni2_init_heap+0x1ec>)
 8026a2c:	4a44      	ldr	r2, [pc, #272]	@ (8026b40 <omni2_init_heap+0x1f0>)
 8026a2e:	f8df e15c 	ldr.w	lr, [pc, #348]	@ 8026b8c <omni2_init_heap+0x23c>
 8026a32:	4f44      	ldr	r7, [pc, #272]	@ (8026b44 <omni2_init_heap+0x1f4>)
 8026a34:	009b      	lsls	r3, r3, #2
 8026a36:	4418      	add	r0, r3
 8026a38:	4419      	add	r1, r3
 8026a3a:	441a      	add	r2, r3
 8026a3c:	e884 0003 	stmia.w	r4, {r0, r1}
 8026a40:	60e2      	str	r2, [r4, #12]
 8026a42:	4941      	ldr	r1, [pc, #260]	@ (8026b48 <omni2_init_heap+0x1f8>)
 8026a44:	4a41      	ldr	r2, [pc, #260]	@ (8026b4c <omni2_init_heap+0x1fc>)
 8026a46:	4842      	ldr	r0, [pc, #264]	@ (8026b50 <omni2_init_heap+0x200>)
 8026a48:	449e      	add	lr, r3
 8026a4a:	441f      	add	r7, r3
 8026a4c:	440b      	add	r3, r1
 8026a4e:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
 8026a52:	f8c4 e014 	str.w	lr, [r4, #20]
 8026a56:	2234      	movs	r2, #52	@ 0x34
 8026a58:	fb02 0205 	mla	r2, r2, r5, r0
 8026a5c:	61e7      	str	r7, [r4, #28]
 8026a5e:	6223      	str	r3, [r4, #32]
 8026a60:	64e1      	str	r1, [r4, #76]	@ 0x4c
 8026a62:	6562      	str	r2, [r4, #84]	@ 0x54
 8026a64:	e794      	b.n	8026990 <omni2_init_heap+0x40>
 8026a66:	eb05 0145 	add.w	r1, r5, r5, lsl #1
 8026a6a:	4a3a      	ldr	r2, [pc, #232]	@ (8026b54 <omni2_init_heap+0x204>)
 8026a6c:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8026b90 <omni2_init_heap+0x240>
 8026a70:	4f39      	ldr	r7, [pc, #228]	@ (8026b58 <omni2_init_heap+0x208>)
 8026a72:	483a      	ldr	r0, [pc, #232]	@ (8026b5c <omni2_init_heap+0x20c>)
 8026a74:	f8df 911c 	ldr.w	r9, [pc, #284]	@ 8026b94 <omni2_init_heap+0x244>
 8026a78:	f8df c11c 	ldr.w	ip, [pc, #284]	@ 8026b98 <omni2_init_heap+0x248>
 8026a7c:	008b      	lsls	r3, r1, #2
 8026a7e:	441f      	add	r7, r3
 8026a80:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8026a84:	eb0e 0203 	add.w	r2, lr, r3
 8026a88:	ebc5 03c5 	rsb	r3, r5, r5, lsl #3
 8026a8c:	009b      	lsls	r3, r3, #2
 8026a8e:	4418      	add	r0, r3
 8026a90:	6221      	str	r1, [r4, #32]
 8026a92:	f8df e108 	ldr.w	lr, [pc, #264]	@ 8026b9c <omni2_init_heap+0x24c>
 8026a96:	4932      	ldr	r1, [pc, #200]	@ (8026b60 <omni2_init_heap+0x210>)
 8026a98:	6027      	str	r7, [r4, #0]
 8026a9a:	6062      	str	r2, [r4, #4]
 8026a9c:	4f31      	ldr	r7, [pc, #196]	@ (8026b64 <omni2_init_heap+0x214>)
 8026a9e:	60a0      	str	r0, [r4, #8]
 8026aa0:	eb09 0203 	add.w	r2, r9, r3
 8026aa4:	4830      	ldr	r0, [pc, #192]	@ (8026b68 <omni2_init_heap+0x218>)
 8026aa6:	6122      	str	r2, [r4, #16]
 8026aa8:	449e      	add	lr, r3
 8026aaa:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 8026aae:	4a2f      	ldr	r2, [pc, #188]	@ (8026b6c <omni2_init_heap+0x21c>)
 8026ab0:	f8c4 e00c 	str.w	lr, [r4, #12]
 8026ab4:	441f      	add	r7, r3
 8026ab6:	4418      	add	r0, r3
 8026ab8:	4463      	add	r3, ip
 8026aba:	eb02 1245 	add.w	r2, r2, r5, lsl #5
 8026abe:	6167      	str	r7, [r4, #20]
 8026ac0:	61a0      	str	r0, [r4, #24]
 8026ac2:	61e3      	str	r3, [r4, #28]
 8026ac4:	64e1      	str	r1, [r4, #76]	@ 0x4c
 8026ac6:	6562      	str	r2, [r4, #84]	@ 0x54
 8026ac8:	e762      	b.n	8026990 <omni2_init_heap+0x40>
 8026aca:	eb05 0145 	add.w	r1, r5, r5, lsl #1
 8026ace:	4a28      	ldr	r2, [pc, #160]	@ (8026b70 <omni2_init_heap+0x220>)
 8026ad0:	f8df e0cc 	ldr.w	lr, [pc, #204]	@ 8026ba0 <omni2_init_heap+0x250>
 8026ad4:	4f27      	ldr	r7, [pc, #156]	@ (8026b74 <omni2_init_heap+0x224>)
 8026ad6:	4828      	ldr	r0, [pc, #160]	@ (8026b78 <omni2_init_heap+0x228>)
 8026ad8:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8026ba4 <omni2_init_heap+0x254>
 8026adc:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 8026ba8 <omni2_init_heap+0x258>
 8026ae0:	008b      	lsls	r3, r1, #2
 8026ae2:	441f      	add	r7, r3
 8026ae4:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8026ae8:	eb0e 0203 	add.w	r2, lr, r3
 8026aec:	ebc5 03c5 	rsb	r3, r5, r5, lsl #3
 8026af0:	009b      	lsls	r3, r3, #2
 8026af2:	4418      	add	r0, r3
 8026af4:	f8df e0b4 	ldr.w	lr, [pc, #180]	@ 8026bac <omni2_init_heap+0x25c>
 8026af8:	6221      	str	r1, [r4, #32]
 8026afa:	6027      	str	r7, [r4, #0]
 8026afc:	60a0      	str	r0, [r4, #8]
 8026afe:	4f1f      	ldr	r7, [pc, #124]	@ (8026b7c <omni2_init_heap+0x22c>)
 8026b00:	481f      	ldr	r0, [pc, #124]	@ (8026b80 <omni2_init_heap+0x230>)
 8026b02:	4920      	ldr	r1, [pc, #128]	@ (8026b84 <omni2_init_heap+0x234>)
 8026b04:	6062      	str	r2, [r4, #4]
 8026b06:	449e      	add	lr, r3
 8026b08:	eb09 0203 	add.w	r2, r9, r3
 8026b0c:	441f      	add	r7, r3
 8026b0e:	4418      	add	r0, r3
 8026b10:	6122      	str	r2, [r4, #16]
 8026b12:	4463      	add	r3, ip
 8026b14:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 8026b18:	f8c4 e00c 	str.w	lr, [r4, #12]
 8026b1c:	4a1a      	ldr	r2, [pc, #104]	@ (8026b88 <omni2_init_heap+0x238>)
 8026b1e:	e7cc      	b.n	8026aba <omni2_init_heap+0x16a>
 8026b20:	08038130 	.word	0x08038130
 8026b24:	08037b30 	.word	0x08037b30
 8026b28:	08037b3c 	.word	0x08037b3c
 8026b2c:	08037b24 	.word	0x08037b24
 8026b30:	0803798c 	.word	0x0803798c
 8026b34:	080379a0 	.word	0x080379a0
 8026b38:	080380c4 	.word	0x080380c4
 8026b3c:	08038058 	.word	0x08038058
 8026b40:	08037ee4 	.word	0x08037ee4
 8026b44:	08037bfc 	.word	0x08037bfc
 8026b48:	08037b48 	.word	0x08037b48
 8026b4c:	08037b00 	.word	0x08037b00
 8026b50:	080379a4 	.word	0x080379a4
 8026b54:	08037bb4 	.word	0x08037bb4
 8026b58:	0803810c 	.word	0x0803810c
 8026b5c:	08038004 	.word	0x08038004
 8026b60:	08037b18 	.word	0x08037b18
 8026b64:	08037de8 	.word	0x08037de8
 8026b68:	08037d1c 	.word	0x08037d1c
 8026b6c:	08037a40 	.word	0x08037a40
 8026b70:	08037b6c 	.word	0x08037b6c
 8026b74:	080380e8 	.word	0x080380e8
 8026b78:	08037fb0 	.word	0x08037fb0
 8026b7c:	08037d94 	.word	0x08037d94
 8026b80:	08037cc8 	.word	0x08037cc8
 8026b84:	08037b0c 	.word	0x08037b0c
 8026b88:	08037aa0 	.word	0x08037aa0
 8026b8c:	08037d70 	.word	0x08037d70
 8026b90:	080380a0 	.word	0x080380a0
 8026b94:	08037e90 	.word	0x08037e90
 8026b98:	08037c74 	.word	0x08037c74
 8026b9c:	08037f5c 	.word	0x08037f5c
 8026ba0:	0803807c 	.word	0x0803807c
 8026ba4:	08037e3c 	.word	0x08037e3c
 8026ba8:	08037c20 	.word	0x08037c20
 8026bac:	08037f08 	.word	0x08037f08

08026bb0 <omni2_process_buffer_info>:
 8026bb0:	6903      	ldr	r3, [r0, #16]
 8026bb2:	6801      	ldr	r1, [r0, #0]
 8026bb4:	2b01      	cmp	r3, #1
 8026bb6:	b4f0      	push	{r4, r5, r6, r7}
 8026bb8:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 8026bba:	d05f      	beq.n	8026c7c <omni2_process_buffer_info+0xcc>
 8026bbc:	f06f 0201 	mvn.w	r2, #1
 8026bc0:	6943      	ldr	r3, [r0, #20]
 8026bc2:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8026bc4:	f893 7031 	ldrb.w	r7, [r3, #49]	@ 0x31
 8026bc8:	f890 4031 	ldrb.w	r4, [r0, #49]	@ 0x31
 8026bcc:	f9b0 602c 	ldrsh.w	r6, [r0, #44]	@ 0x2c
 8026bd0:	2f00      	cmp	r7, #0
 8026bd2:	bf18      	it	ne
 8026bd4:	f06f 0201 	mvnne.w	r2, #1
 8026bd8:	2c00      	cmp	r4, #0
 8026bda:	f893 4030 	ldrb.w	r4, [r3, #48]	@ 0x30
 8026bde:	bf18      	it	ne
 8026be0:	f06f 0201 	mvnne.w	r2, #1
 8026be4:	2e01      	cmp	r6, #1
 8026be6:	bfd8      	it	le
 8026be8:	f06f 0201 	mvnle.w	r2, #1
 8026bec:	2c09      	cmp	r4, #9
 8026bee:	d84c      	bhi.n	8026c8a <omni2_process_buffer_info+0xda>
 8026bf0:	4e27      	ldr	r6, [pc, #156]	@ (8026c90 <omni2_process_buffer_info+0xe0>)
 8026bf2:	5d34      	ldrb	r4, [r6, r4]
 8026bf4:	2c07      	cmp	r4, #7
 8026bf6:	bf08      	it	eq
 8026bf8:	f06f 0201 	mvneq.w	r2, #1
 8026bfc:	f893 4033 	ldrb.w	r4, [r3, #51]	@ 0x33
 8026c00:	b114      	cbz	r4, 8026c08 <omni2_process_buffer_info+0x58>
 8026c02:	681c      	ldr	r4, [r3, #0]
 8026c04:	f8c1 4ae4 	str.w	r4, [r1, #2788]	@ 0xae4
 8026c08:	f893 4034 	ldrb.w	r4, [r3, #52]	@ 0x34
 8026c0c:	b114      	cbz	r4, 8026c14 <omni2_process_buffer_info+0x64>
 8026c0e:	685c      	ldr	r4, [r3, #4]
 8026c10:	f8c1 4ae8 	str.w	r4, [r1, #2792]	@ 0xae8
 8026c14:	f893 4035 	ldrb.w	r4, [r3, #53]	@ 0x35
 8026c18:	b114      	cbz	r4, 8026c20 <omni2_process_buffer_info+0x70>
 8026c1a:	689c      	ldr	r4, [r3, #8]
 8026c1c:	f8c1 4aec 	str.w	r4, [r1, #2796]	@ 0xaec
 8026c20:	f893 4036 	ldrb.w	r4, [r3, #54]	@ 0x36
 8026c24:	b114      	cbz	r4, 8026c2c <omni2_process_buffer_info+0x7c>
 8026c26:	68dc      	ldr	r4, [r3, #12]
 8026c28:	f8c1 4af0 	str.w	r4, [r1, #2800]	@ 0xaf0
 8026c2c:	f893 4037 	ldrb.w	r4, [r3, #55]	@ 0x37
 8026c30:	b114      	cbz	r4, 8026c38 <omni2_process_buffer_info+0x88>
 8026c32:	691c      	ldr	r4, [r3, #16]
 8026c34:	f8c1 4af4 	str.w	r4, [r1, #2804]	@ 0xaf4
 8026c38:	f893 4038 	ldrb.w	r4, [r3, #56]	@ 0x38
 8026c3c:	b114      	cbz	r4, 8026c44 <omni2_process_buffer_info+0x94>
 8026c3e:	695c      	ldr	r4, [r3, #20]
 8026c40:	f8c1 4af8 	str.w	r4, [r1, #2808]	@ 0xaf8
 8026c44:	f893 4039 	ldrb.w	r4, [r3, #57]	@ 0x39
 8026c48:	b114      	cbz	r4, 8026c50 <omni2_process_buffer_info+0xa0>
 8026c4a:	699c      	ldr	r4, [r3, #24]
 8026c4c:	f8c1 4afc 	str.w	r4, [r1, #2812]	@ 0xafc
 8026c50:	f893 403a 	ldrb.w	r4, [r3, #58]	@ 0x3a
 8026c54:	b114      	cbz	r4, 8026c5c <omni2_process_buffer_info+0xac>
 8026c56:	69db      	ldr	r3, [r3, #28]
 8026c58:	f8c1 3b00 	str.w	r3, [r1, #2816]	@ 0xb00
 8026c5c:	786b      	ldrb	r3, [r5, #1]
 8026c5e:	6844      	ldr	r4, [r0, #4]
 8026c60:	6805      	ldr	r5, [r0, #0]
 8026c62:	f8c1 5b04 	str.w	r5, [r1, #2820]	@ 0xb04
 8026c66:	2b01      	cmp	r3, #1
 8026c68:	bf08      	it	eq
 8026c6a:	6883      	ldreq	r3, [r0, #8]
 8026c6c:	f8c1 4b08 	str.w	r4, [r1, #2824]	@ 0xb08
 8026c70:	4610      	mov	r0, r2
 8026c72:	bf08      	it	eq
 8026c74:	f8c1 3b0c 	streq.w	r3, [r1, #2828]	@ 0xb0c
 8026c78:	bcf0      	pop	{r4, r5, r6, r7}
 8026c7a:	4770      	bx	lr
 8026c7c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8026c7e:	2b01      	cmp	r3, #1
 8026c80:	bf14      	ite	ne
 8026c82:	f06f 0201 	mvnne.w	r2, #1
 8026c86:	2200      	moveq	r2, #0
 8026c88:	e79a      	b.n	8026bc0 <omni2_process_buffer_info+0x10>
 8026c8a:	f06f 0201 	mvn.w	r2, #1
 8026c8e:	e7b5      	b.n	8026bfc <omni2_process_buffer_info+0x4c>
 8026c90:	08038130 	.word	0x08038130

08026c94 <biquad_df1_cascade_mono_compute_omni2_q31>:
 8026c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c98:	b08d      	sub	sp, #52	@ 0x34
 8026c9a:	3310      	adds	r3, #16
 8026c9c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8026c9e:	9304      	str	r3, [sp, #16]
 8026ca0:	08a5      	lsrs	r5, r4, #2
 8026ca2:	4616      	mov	r6, r2
 8026ca4:	f004 0303 	and.w	r3, r4, #3
 8026ca8:	9508      	str	r5, [sp, #32]
 8026caa:	9309      	str	r3, [sp, #36]	@ 0x24
 8026cac:	012d      	lsls	r5, r5, #4
 8026cae:	460b      	mov	r3, r1
 8026cb0:	f856 2b1c 	ldr.w	r2, [r6], #28
 8026cb4:	9107      	str	r1, [sp, #28]
 8026cb6:	442b      	add	r3, r5
 8026cb8:	950b      	str	r5, [sp, #44]	@ 0x2c
 8026cba:	9206      	str	r2, [sp, #24]
 8026cbc:	9605      	str	r6, [sp, #20]
 8026cbe:	9003      	str	r0, [sp, #12]
 8026cc0:	930a      	str	r3, [sp, #40]	@ 0x28
 8026cc2:	9905      	ldr	r1, [sp, #20]
 8026cc4:	9d04      	ldr	r5, [sp, #16]
 8026cc6:	f851 2c18 	ldr.w	r2, [r1, #-24]
 8026cca:	f851 bc14 	ldr.w	fp, [r1, #-20]
 8026cce:	f851 7c10 	ldr.w	r7, [r1, #-16]
 8026cd2:	f851 ec0c 	ldr.w	lr, [r1, #-12]
 8026cd6:	f851 cc08 	ldr.w	ip, [r1, #-8]
 8026cda:	f851 8c04 	ldr.w	r8, [r1, #-4]
 8026cde:	f855 0c10 	ldr.w	r0, [r5, #-16]
 8026ce2:	f855 1c0c 	ldr.w	r1, [r5, #-12]
 8026ce6:	f102 0901 	add.w	r9, r2, #1
 8026cea:	9a08      	ldr	r2, [sp, #32]
 8026cec:	e915 0018 	ldmdb	r5, {r3, r4}
 8026cf0:	2a00      	cmp	r2, #0
 8026cf2:	f000 80b0 	beq.w	8026e56 <biquad_df1_cascade_mono_compute_omni2_q31+0x1c2>
 8026cf6:	9d03      	ldr	r5, [sp, #12]
 8026cf8:	9201      	str	r2, [sp, #4]
 8026cfa:	f105 0610 	add.w	r6, r5, #16
 8026cfe:	9d07      	ldr	r5, [sp, #28]
 8026d00:	46ca      	mov	sl, r9
 8026d02:	3510      	adds	r5, #16
 8026d04:	f856 2c10 	ldr.w	r2, [r6, #-16]
 8026d08:	ea4f 09a2 	mov.w	r9, r2, asr #2
 8026d0c:	fb57 f210 	smmulr	r2, r7, r0
 8026d10:	fb5b 2219 	smmlar	r2, fp, r9, r2
 8026d14:	fb5e 2111 	smmlar	r1, lr, r1, r2
 8026d18:	fb5c 1113 	smmlar	r1, ip, r3, r1
 8026d1c:	fb58 1414 	smmlar	r4, r8, r4, r1
 8026d20:	f856 2c0c 	ldr.w	r2, [r6, #-12]
 8026d24:	fa04 f40a 	lsl.w	r4, r4, sl
 8026d28:	0061      	lsls	r1, r4, #1
 8026d2a:	f301 011e 	ssat	r1, #31, r1
 8026d2e:	0049      	lsls	r1, r1, #1
 8026d30:	f845 1c10 	str.w	r1, [r5, #-16]
 8026d34:	1092      	asrs	r2, r2, #2
 8026d36:	fb5b f112 	smmulr	r1, fp, r2
 8026d3a:	fb57 1119 	smmlar	r1, r7, r9, r1
 8026d3e:	fb5e 1010 	smmlar	r0, lr, r0, r1
 8026d42:	fb5c 0014 	smmlar	r0, ip, r4, r0
 8026d46:	fb58 0313 	smmlar	r3, r8, r3, r0
 8026d4a:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8026d4e:	fa03 f30a 	lsl.w	r3, r3, sl
 8026d52:	0058      	lsls	r0, r3, #1
 8026d54:	f300 001e 	ssat	r0, #31, r0
 8026d58:	0040      	lsls	r0, r0, #1
 8026d5a:	f845 0c0c 	str.w	r0, [r5, #-12]
 8026d5e:	1089      	asrs	r1, r1, #2
 8026d60:	fb5b f011 	smmulr	r0, fp, r1
 8026d64:	fb57 0012 	smmlar	r0, r7, r2, r0
 8026d68:	fb5e 0919 	smmlar	r9, lr, r9, r0
 8026d6c:	fb5c 9913 	smmlar	r9, ip, r3, r9
 8026d70:	fb58 9414 	smmlar	r4, r8, r4, r9
 8026d74:	f856 9c04 	ldr.w	r9, [r6, #-4]
 8026d78:	fa04 f40a 	lsl.w	r4, r4, sl
 8026d7c:	0060      	lsls	r0, r4, #1
 8026d7e:	f300 001e 	ssat	r0, #31, r0
 8026d82:	0040      	lsls	r0, r0, #1
 8026d84:	f845 0c08 	str.w	r0, [r5, #-8]
 8026d88:	ea4f 00a9 	mov.w	r0, r9, asr #2
 8026d8c:	fb5b f910 	smmulr	r9, fp, r0
 8026d90:	fb57 9911 	smmlar	r9, r7, r1, r9
 8026d94:	fb5e 9212 	smmlar	r2, lr, r2, r9
 8026d98:	fb5c 2214 	smmlar	r2, ip, r4, r2
 8026d9c:	fb58 2313 	smmlar	r3, r8, r3, r2
 8026da0:	fa03 f30a 	lsl.w	r3, r3, sl
 8026da4:	005a      	lsls	r2, r3, #1
 8026da6:	f302 021e 	ssat	r2, #31, r2
 8026daa:	0052      	lsls	r2, r2, #1
 8026dac:	f845 2c04 	str.w	r2, [r5, #-4]
 8026db0:	9a01      	ldr	r2, [sp, #4]
 8026db2:	3a01      	subs	r2, #1
 8026db4:	f106 0610 	add.w	r6, r6, #16
 8026db8:	f105 0510 	add.w	r5, r5, #16
 8026dbc:	9201      	str	r2, [sp, #4]
 8026dbe:	d1a1      	bne.n	8026d04 <biquad_df1_cascade_mono_compute_omni2_q31+0x70>
 8026dc0:	9a03      	ldr	r2, [sp, #12]
 8026dc2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026dc4:	46d1      	mov	r9, sl
 8026dc6:	442a      	add	r2, r5
 8026dc8:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8026dcc:	9203      	str	r2, [sp, #12]
 8026dce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026dd0:	2a00      	cmp	r2, #0
 8026dd2:	d03b      	beq.n	8026e4c <biquad_df1_cascade_mono_compute_omni2_q31+0x1b8>
 8026dd4:	9702      	str	r7, [sp, #8]
 8026dd6:	9201      	str	r2, [sp, #4]
 8026dd8:	9f03      	ldr	r7, [sp, #12]
 8026dda:	e001      	b.n	8026de0 <biquad_df1_cascade_mono_compute_omni2_q31+0x14c>
 8026ddc:	4613      	mov	r3, r2
 8026dde:	4628      	mov	r0, r5
 8026de0:	f857 5b04 	ldr.w	r5, [r7], #4
 8026de4:	10ad      	asrs	r5, r5, #2
 8026de6:	fb5b f215 	smmulr	r2, fp, r5
 8026dea:	9e02      	ldr	r6, [sp, #8]
 8026dec:	fb56 2210 	smmlar	r2, r6, r0, r2
 8026df0:	fb5e 2211 	smmlar	r2, lr, r1, r2
 8026df4:	fb5c 2213 	smmlar	r2, ip, r3, r2
 8026df8:	fb58 2214 	smmlar	r2, r8, r4, r2
 8026dfc:	9e01      	ldr	r6, [sp, #4]
 8026dfe:	fa02 f209 	lsl.w	r2, r2, r9
 8026e02:	0051      	lsls	r1, r2, #1
 8026e04:	3e01      	subs	r6, #1
 8026e06:	f301 011e 	ssat	r1, #31, r1
 8026e0a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8026e0e:	f84a 1b04 	str.w	r1, [sl], #4
 8026e12:	461c      	mov	r4, r3
 8026e14:	4601      	mov	r1, r0
 8026e16:	9601      	str	r6, [sp, #4]
 8026e18:	d1e0      	bne.n	8026ddc <biquad_df1_cascade_mono_compute_omni2_q31+0x148>
 8026e1a:	9c04      	ldr	r4, [sp, #16]
 8026e1c:	f844 3c04 	str.w	r3, [r4, #-4]
 8026e20:	9b05      	ldr	r3, [sp, #20]
 8026e22:	f844 5c10 	str.w	r5, [r4, #-16]
 8026e26:	3318      	adds	r3, #24
 8026e28:	9305      	str	r3, [sp, #20]
 8026e2a:	f104 0310 	add.w	r3, r4, #16
 8026e2e:	9304      	str	r3, [sp, #16]
 8026e30:	9b07      	ldr	r3, [sp, #28]
 8026e32:	9303      	str	r3, [sp, #12]
 8026e34:	9b06      	ldr	r3, [sp, #24]
 8026e36:	f844 0c0c 	str.w	r0, [r4, #-12]
 8026e3a:	3b01      	subs	r3, #1
 8026e3c:	f844 2c08 	str.w	r2, [r4, #-8]
 8026e40:	9306      	str	r3, [sp, #24]
 8026e42:	f47f af3e 	bne.w	8026cc2 <biquad_df1_cascade_mono_compute_omni2_q31+0x2e>
 8026e46:	b00d      	add	sp, #52	@ 0x34
 8026e48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e4c:	461a      	mov	r2, r3
 8026e4e:	4605      	mov	r5, r0
 8026e50:	4623      	mov	r3, r4
 8026e52:	4608      	mov	r0, r1
 8026e54:	e7e1      	b.n	8026e1a <biquad_df1_cascade_mono_compute_omni2_q31+0x186>
 8026e56:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8026e5a:	e7b8      	b.n	8026dce <biquad_df1_cascade_mono_compute_omni2_q31+0x13a>

08026e5c <omni2>:
 8026e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e60:	6943      	ldr	r3, [r0, #20]
 8026e62:	f8d0 9000 	ldr.w	r9, [r0]
 8026e66:	f893 2032 	ldrb.w	r2, [r3, #50]	@ 0x32
 8026e6a:	f8d9 8ae0 	ldr.w	r8, [r9, #2784]	@ 0xae0
 8026e6e:	b0a3      	sub	sp, #140	@ 0x8c
 8026e70:	2a01      	cmp	r2, #1
 8026e72:	9319      	str	r3, [sp, #100]	@ 0x64
 8026e74:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8026e76:	931a      	str	r3, [sp, #104]	@ 0x68
 8026e78:	f109 0398 	add.w	r3, r9, #152	@ 0x98
 8026e7c:	9310      	str	r3, [sp, #64]	@ 0x40
 8026e7e:	f509 73ac 	add.w	r3, r9, #344	@ 0x158
 8026e82:	900e      	str	r0, [sp, #56]	@ 0x38
 8026e84:	9203      	str	r2, [sp, #12]
 8026e86:	9311      	str	r3, [sp, #68]	@ 0x44
 8026e88:	f000 868a 	beq.w	8027ba0 <omni2+0xd44>
 8026e8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026e8e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8026e90:	930d      	str	r3, [sp, #52]	@ 0x34
 8026e92:	3301      	adds	r3, #1
 8026e94:	f000 82ed 	beq.w	8027472 <omni2+0x616>
 8026e98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026e9a:	689b      	ldr	r3, [r3, #8]
 8026e9c:	f8d3 a000 	ldr.w	sl, [r3]
 8026ea0:	f1ba 0f00 	cmp.w	sl, #0
 8026ea4:	f000 87bc 	beq.w	8027e20 <omni2+0xfc4>
 8026ea8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8026eaa:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 8026eae:	931b      	str	r3, [sp, #108]	@ 0x6c
 8026eb0:	f509 628b 	add.w	r2, r9, #1112	@ 0x458
 8026eb4:	f509 7366 	add.w	r3, r9, #920	@ 0x398
 8026eb8:	f509 61a3 	add.w	r1, r9, #1304	@ 0x518
 8026ebc:	f509 60bb 	add.w	r0, r9, #1496	@ 0x5d8
 8026ec0:	2c1e      	cmp	r4, #30
 8026ec2:	9304      	str	r3, [sp, #16]
 8026ec4:	920f      	str	r2, [sp, #60]	@ 0x3c
 8026ec6:	9114      	str	r1, [sp, #80]	@ 0x50
 8026ec8:	9015      	str	r0, [sp, #84]	@ 0x54
 8026eca:	f000 8411 	beq.w	80276f0 <omni2+0x894>
 8026ece:	9b03      	ldr	r3, [sp, #12]
 8026ed0:	2b00      	cmp	r3, #0
 8026ed2:	f040 82ef 	bne.w	80274b4 <omni2+0x658>
 8026ed6:	f1b8 0f00 	cmp.w	r8, #0
 8026eda:	dd1e      	ble.n	8026f1a <omni2+0xbe>
 8026edc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8026ede:	4e54      	ldr	r6, [pc, #336]	@ (8027030 <omni2+0x1d4>)
 8026ee0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8026ee2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8026ee4:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 8026ee6:	1f1d      	subs	r5, r3, #4
 8026ee8:	2100      	movs	r1, #0
 8026eea:	6802      	ldr	r2, [r0, #0]
 8026eec:	6823      	ldr	r3, [r4, #0]
 8026eee:	1a9b      	subs	r3, r3, r2
 8026ef0:	109b      	asrs	r3, r3, #2
 8026ef2:	425a      	negs	r2, r3
 8026ef4:	f845 2f04 	str.w	r2, [r5, #4]!
 8026ef8:	f847 3021 	str.w	r3, [r7, r1, lsl #2]
 8026efc:	6803      	ldr	r3, [r0, #0]
 8026efe:	fb53 f316 	smmulr	r3, r3, r6
 8026f02:	005b      	lsls	r3, r3, #1
 8026f04:	f840 3b04 	str.w	r3, [r0], #4
 8026f08:	6823      	ldr	r3, [r4, #0]
 8026f0a:	fb53 f316 	smmulr	r3, r3, r6
 8026f0e:	3101      	adds	r1, #1
 8026f10:	005b      	lsls	r3, r3, #1
 8026f12:	4588      	cmp	r8, r1
 8026f14:	f844 3b04 	str.w	r3, [r4], #4
 8026f18:	dce7      	bgt.n	8026eea <omni2+0x8e>
 8026f1a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026f1c:	f893 3037 	ldrb.w	r3, [r3, #55]	@ 0x37
 8026f20:	2b01      	cmp	r3, #1
 8026f22:	f000 8424 	beq.w	802776e <omni2+0x912>
 8026f26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026f28:	f8d9 0048 	ldr.w	r0, [r9, #72]	@ 0x48
 8026f2c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8026f2e:	f8d9 2050 	ldr.w	r2, [r9, #80]	@ 0x50
 8026f32:	f8d9 6034 	ldr.w	r6, [r9, #52]	@ 0x34
 8026f36:	f8d9 1044 	ldr.w	r1, [r9, #68]	@ 0x44
 8026f3a:	9617      	str	r6, [sp, #92]	@ 0x5c
 8026f3c:	4403      	add	r3, r0
 8026f3e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8026f42:	3b01      	subs	r3, #1
 8026f44:	009b      	lsls	r3, r3, #2
 8026f46:	f102 4780 	add.w	r7, r2, #1073741824	@ 0x40000000
 8026f4a:	f509 60f1 	add.w	r0, r9, #1928	@ 0x788
 8026f4e:	f609 024c 	addw	r2, r9, #2124	@ 0x84c
 8026f52:	9206      	str	r2, [sp, #24]
 8026f54:	9005      	str	r0, [sp, #20]
 8026f56:	4418      	add	r0, r3
 8026f58:	f8d9 6038 	ldr.w	r6, [r9, #56]	@ 0x38
 8026f5c:	9009      	str	r0, [sp, #36]	@ 0x24
 8026f5e:	f209 72dc 	addw	r2, r9, #2012	@ 0x7dc
 8026f62:	9806      	ldr	r0, [sp, #24]
 8026f64:	9207      	str	r2, [sp, #28]
 8026f66:	9616      	str	r6, [sp, #88]	@ 0x58
 8026f68:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8026f6c:	f8d9 6698 	ldr.w	r6, [r9, #1688]	@ 0x698
 8026f70:	9613      	str	r6, [sp, #76]	@ 0x4c
 8026f72:	4418      	add	r0, r3
 8026f74:	f509 660a 	add.w	r6, r9, #2208	@ 0x8a0
 8026f78:	9b07      	ldr	r3, [sp, #28]
 8026f7a:	9608      	str	r6, [sp, #32]
 8026f7c:	3901      	subs	r1, #1
 8026f7e:	0089      	lsls	r1, r1, #2
 8026f80:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8026f84:	900a      	str	r0, [sp, #40]	@ 0x28
 8026f86:	1858      	adds	r0, r3, r1
 8026f88:	9b08      	ldr	r3, [sp, #32]
 8026f8a:	f8dc 4000 	ldr.w	r4, [ip]
 8026f8e:	f8d9 502c 	ldr.w	r5, [r9, #44]	@ 0x2c
 8026f92:	941c      	str	r4, [sp, #112]	@ 0x70
 8026f94:	3f01      	subs	r7, #1
 8026f96:	00ba      	lsls	r2, r7, #2
 8026f98:	f609 16e8 	addw	r6, r9, #2536	@ 0x9e8
 8026f9c:	f609 1738 	addw	r7, r9, #2360	@ 0x938
 8026fa0:	440b      	add	r3, r1
 8026fa2:	9512      	str	r5, [sp, #72]	@ 0x48
 8026fa4:	f8d9 b024 	ldr.w	fp, [r9, #36]	@ 0x24
 8026fa8:	f8dc e004 	ldr.w	lr, [ip, #4]
 8026fac:	f8d9 4028 	ldr.w	r4, [r9, #40]	@ 0x28
 8026fb0:	f8d9 5030 	ldr.w	r5, [r9, #48]	@ 0x30
 8026fb4:	9718      	str	r7, [sp, #96]	@ 0x60
 8026fb6:	961e      	str	r6, [sp, #120]	@ 0x78
 8026fb8:	900b      	str	r0, [sp, #44]	@ 0x2c
 8026fba:	930c      	str	r3, [sp, #48]	@ 0x30
 8026fbc:	18bb      	adds	r3, r7, r2
 8026fbe:	931d      	str	r3, [sp, #116]	@ 0x74
 8026fc0:	f1b8 0f00 	cmp.w	r8, #0
 8026fc4:	eb06 0302 	add.w	r3, r6, r2
 8026fc8:	931f      	str	r3, [sp, #124]	@ 0x7c
 8026fca:	f340 8731 	ble.w	8027e30 <omni2+0xfd4>
 8026fce:	9b04      	ldr	r3, [sp, #16]
 8026fd0:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 8026fd2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8026fd4:	ea4f 0188 	mov.w	r1, r8, lsl #2
 8026fd8:	1858      	adds	r0, r3, r1
 8026fda:	461a      	mov	r2, r3
 8026fdc:	6813      	ldr	r3, [r2, #0]
 8026fde:	fb57 f313 	smmulr	r3, r7, r3
 8026fe2:	fb5e f616 	smmulr	r6, lr, r6
 8026fe6:	fa86 f6a3 	qsub	r6, r3, r6
 8026fea:	0076      	lsls	r6, r6, #1
 8026fec:	f842 6b04 	str.w	r6, [r2], #4
 8026ff0:	4282      	cmp	r2, r0
 8026ff2:	d1f3      	bne.n	8026fdc <omni2+0x180>
 8026ff4:	f8c9 6698 	str.w	r6, [r9, #1688]	@ 0x698
 8026ff8:	9613      	str	r6, [sp, #76]	@ 0x4c
 8026ffa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8026ffc:	f8d9 369c 	ldr.w	r3, [r9, #1692]	@ 0x69c
 8027000:	e89c 00c0 	ldmia.w	ip, {r6, r7}
 8027004:	4401      	add	r1, r0
 8027006:	6802      	ldr	r2, [r0, #0]
 8027008:	fb56 fe12 	smmulr	lr, r6, r2
 802700c:	fb57 f213 	smmulr	r2, r7, r3
 8027010:	fa82 f2ae 	qsub	r2, lr, r2
 8027014:	0053      	lsls	r3, r2, #1
 8027016:	f840 3b04 	str.w	r3, [r0], #4
 802701a:	4288      	cmp	r0, r1
 802701c:	d1f3      	bne.n	8027006 <omni2+0x1aa>
 802701e:	9a03      	ldr	r2, [sp, #12]
 8027020:	f8c9 369c 	str.w	r3, [r9, #1692]	@ 0x69c
 8027024:	f002 020b 	and.w	r2, r2, #11
 8027028:	2a0b      	cmp	r2, #11
 802702a:	f000 863e 	beq.w	8027caa <omni2+0xe4e>
 802702e:	e001      	b.n	8027034 <omni2+0x1d8>
 8027030:	5a82799a 	.word	0x5a82799a
 8027034:	f50a 73c0 	add.w	r3, sl, #384	@ 0x180
 8027038:	9303      	str	r3, [sp, #12]
 802703a:	f50a 7310 	add.w	r3, sl, #576	@ 0x240
 802703e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8027040:	f50a 7340 	add.w	r3, sl, #768	@ 0x300
 8027044:	931c      	str	r3, [sp, #112]	@ 0x70
 8027046:	f50a 7370 	add.w	r3, sl, #960	@ 0x3c0
 802704a:	9320      	str	r3, [sp, #128]	@ 0x80
 802704c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802704e:	2b0a      	cmp	r3, #10
 8027050:	f10a 06c0 	add.w	r6, sl, #192	@ 0xc0
 8027054:	f000 83ac 	beq.w	80277b0 <omni2+0x954>
 8027058:	2b14      	cmp	r3, #20
 802705a:	f000 83a9 	beq.w	80277b0 <omni2+0x954>
 802705e:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8027062:	9303      	str	r3, [sp, #12]
 8027064:	4619      	mov	r1, r3
 8027066:	f1b8 0f00 	cmp.w	r8, #0
 802706a:	f8d9 3708 	ldr.w	r3, [r9, #1800]	@ 0x708
 802706e:	f8d1 e000 	ldr.w	lr, [r1]
 8027072:	f8d1 c004 	ldr.w	ip, [r1, #4]
 8027076:	f340 8148 	ble.w	802730a <omni2+0x4ae>
 802707a:	9904      	ldr	r1, [sp, #16]
 802707c:	ea4f 0288 	mov.w	r2, r8, lsl #2
 8027080:	920d      	str	r2, [sp, #52]	@ 0x34
 8027082:	188f      	adds	r7, r1, r2
 8027084:	f1aa 0004 	sub.w	r0, sl, #4
 8027088:	f851 2b04 	ldr.w	r2, [r1], #4
 802708c:	fb5e f212 	smmulr	r2, lr, r2
 8027090:	fb5c f313 	smmulr	r3, ip, r3
 8027094:	fa83 f3a2 	qsub	r3, r2, r3
 8027098:	005b      	lsls	r3, r3, #1
 802709a:	42b9      	cmp	r1, r7
 802709c:	f840 3f04 	str.w	r3, [r0, #4]!
 80270a0:	d1f2      	bne.n	8027088 <omni2+0x22c>
 80270a2:	9a03      	ldr	r2, [sp, #12]
 80270a4:	f8c9 3708 	str.w	r3, [r9, #1800]	@ 0x708
 80270a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80270aa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80270ac:	e892 1080 	ldmia.w	r2, {r7, ip}
 80270b0:	469e      	mov	lr, r3
 80270b2:	f8d9 3718 	ldr.w	r3, [r9, #1816]	@ 0x718
 80270b6:	448e      	add	lr, r1
 80270b8:	f10a 00bc 	add.w	r0, sl, #188	@ 0xbc
 80270bc:	f851 2b04 	ldr.w	r2, [r1], #4
 80270c0:	fb57 f212 	smmulr	r2, r7, r2
 80270c4:	fb5c f313 	smmulr	r3, ip, r3
 80270c8:	fa83 f3a2 	qsub	r3, r2, r3
 80270cc:	005b      	lsls	r3, r3, #1
 80270ce:	4571      	cmp	r1, lr
 80270d0:	f840 3f04 	str.w	r3, [r0, #4]!
 80270d4:	d1f2      	bne.n	80270bc <omni2+0x260>
 80270d6:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80270da:	f8c9 3718 	str.w	r3, [r9, #1816]	@ 0x718
 80270de:	e892 5000 	ldmia.w	r2, {ip, lr}
 80270e2:	f8d9 36c8 	ldr.w	r3, [r9, #1736]	@ 0x6c8
 80270e6:	9203      	str	r2, [sp, #12]
 80270e8:	f109 0794 	add.w	r7, r9, #148	@ 0x94
 80270ec:	f50a 70be 	add.w	r0, sl, #380	@ 0x17c
 80270f0:	2100      	movs	r1, #0
 80270f2:	f857 2f04 	ldr.w	r2, [r7, #4]!
 80270f6:	fb5c f212 	smmulr	r2, ip, r2
 80270fa:	fb5e f313 	smmulr	r3, lr, r3
 80270fe:	fa83 f3a2 	qsub	r3, r2, r3
 8027102:	3101      	adds	r1, #1
 8027104:	005b      	lsls	r3, r3, #1
 8027106:	4588      	cmp	r8, r1
 8027108:	f840 3f04 	str.w	r3, [r0, #4]!
 802710c:	dcf1      	bgt.n	80270f2 <omni2+0x296>
 802710e:	9a03      	ldr	r2, [sp, #12]
 8027110:	f8c9 36c8 	str.w	r3, [r9, #1736]	@ 0x6c8
 8027114:	f8d2 e000 	ldr.w	lr, [r2]
 8027118:	f8d2 c004 	ldr.w	ip, [r2, #4]
 802711c:	f8d9 36d8 	ldr.w	r3, [r9, #1752]	@ 0x6d8
 8027120:	f509 77aa 	add.w	r7, r9, #340	@ 0x154
 8027124:	f50a 700f 	add.w	r0, sl, #572	@ 0x23c
 8027128:	2100      	movs	r1, #0
 802712a:	f857 2f04 	ldr.w	r2, [r7, #4]!
 802712e:	fb5e f212 	smmulr	r2, lr, r2
 8027132:	fb5c f313 	smmulr	r3, ip, r3
 8027136:	fa83 f3a2 	qsub	r3, r2, r3
 802713a:	3101      	adds	r1, #1
 802713c:	005b      	lsls	r3, r3, #1
 802713e:	4588      	cmp	r8, r1
 8027140:	f840 3f04 	str.w	r3, [r0, #4]!
 8027144:	dcf1      	bgt.n	802712a <omni2+0x2ce>
 8027146:	f8d9 201c 	ldr.w	r2, [r9, #28]
 802714a:	f8c9 36d8 	str.w	r3, [r9, #1752]	@ 0x6d8
 802714e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027150:	9203      	str	r2, [sp, #12]
 8027152:	3b04      	subs	r3, #4
 8027154:	e892 5000 	ldmia.w	r2, {ip, lr}
 8027158:	461f      	mov	r7, r3
 802715a:	930d      	str	r3, [sp, #52]	@ 0x34
 802715c:	f8d9 3768 	ldr.w	r3, [r9, #1896]	@ 0x768
 8027160:	f50a 703f 	add.w	r0, sl, #764	@ 0x2fc
 8027164:	2100      	movs	r1, #0
 8027166:	f857 2f04 	ldr.w	r2, [r7, #4]!
 802716a:	fb5c f212 	smmulr	r2, ip, r2
 802716e:	fb5e f313 	smmulr	r3, lr, r3
 8027172:	fa83 f3a2 	qsub	r3, r2, r3
 8027176:	3101      	adds	r1, #1
 8027178:	005b      	lsls	r3, r3, #1
 802717a:	4588      	cmp	r8, r1
 802717c:	f840 3f04 	str.w	r3, [r0, #4]!
 8027180:	dcf1      	bgt.n	8027166 <omni2+0x30a>
 8027182:	f8c9 3768 	str.w	r3, [r9, #1896]	@ 0x768
 8027186:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8027188:	9a03      	ldr	r2, [sp, #12]
 802718a:	3b04      	subs	r3, #4
 802718c:	461f      	mov	r7, r3
 802718e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8027190:	f8d2 e000 	ldr.w	lr, [r2]
 8027194:	f8d2 c004 	ldr.w	ip, [r2, #4]
 8027198:	f8d9 3778 	ldr.w	r3, [r9, #1912]	@ 0x778
 802719c:	f50a 706f 	add.w	r0, sl, #956	@ 0x3bc
 80271a0:	2100      	movs	r1, #0
 80271a2:	f857 2f04 	ldr.w	r2, [r7, #4]!
 80271a6:	fb5e f212 	smmulr	r2, lr, r2
 80271aa:	fb5c f313 	smmulr	r3, ip, r3
 80271ae:	fa83 f3a2 	qsub	r3, r2, r3
 80271b2:	3101      	adds	r1, #1
 80271b4:	005b      	lsls	r3, r3, #1
 80271b6:	4588      	cmp	r8, r1
 80271b8:	f840 3f04 	str.w	r3, [r0, #4]!
 80271bc:	dcf1      	bgt.n	80271a2 <omni2+0x346>
 80271be:	f8c9 3778 	str.w	r3, [r9, #1912]	@ 0x778
 80271c2:	9b04      	ldr	r3, [sp, #16]
 80271c4:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 80271c6:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
 80271ca:	f1a3 0e04 	sub.w	lr, r3, #4
 80271ce:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 80271d2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80271d4:	f8dd 9078 	ldr.w	r9, [sp, #120]	@ 0x78
 80271d8:	f8dd a07c 	ldr.w	sl, [sp, #124]	@ 0x7c
 80271dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80271de:	f8cd e00c 	str.w	lr, [sp, #12]
 80271e2:	2100      	movs	r1, #0
 80271e4:	f8cd b054 	str.w	fp, [sp, #84]	@ 0x54
 80271e8:	9704      	str	r7, [sp, #16]
 80271ea:	9a03      	ldr	r2, [sp, #12]
 80271ec:	9f04      	ldr	r7, [sp, #16]
 80271ee:	f852 cf04 	ldr.w	ip, [r2, #4]!
 80271f2:	9203      	str	r2, [sp, #12]
 80271f4:	f857 2f04 	ldr.w	r2, [r7, #4]!
 80271f8:	9704      	str	r7, [sp, #16]
 80271fa:	681f      	ldr	r7, [r3, #0]
 80271fc:	4494      	add	ip, r2
 80271fe:	6822      	ldr	r2, [r4, #0]
 8027200:	44bc      	add	ip, r7
 8027202:	682f      	ldr	r7, [r5, #0]
 8027204:	4494      	add	ip, r2
 8027206:	6802      	ldr	r2, [r0, #0]
 8027208:	44bc      	add	ip, r7
 802720a:	4462      	add	r2, ip
 802720c:	f840 2b04 	str.w	r2, [r0], #4
 8027210:	46a3      	mov	fp, r4
 8027212:	6832      	ldr	r2, [r6, #0]
 8027214:	f84b 2b04 	str.w	r2, [fp], #4
 8027218:	46ac      	mov	ip, r5
 802721a:	f8d6 2180 	ldr.w	r2, [r6, #384]	@ 0x180
 802721e:	f84c 2b04 	str.w	r2, [ip], #4
 8027222:	461a      	mov	r2, r3
 8027224:	f8d6 7300 	ldr.w	r7, [r6, #768]	@ 0x300
 8027228:	f842 7b04 	str.w	r7, [r2], #4
 802722c:	9f08      	ldr	r7, [sp, #32]
 802722e:	46be      	mov	lr, r7
 8027230:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8027232:	42a7      	cmp	r7, r4
 8027234:	bf88      	it	hi
 8027236:	46de      	movhi	lr, fp
 8027238:	9f06      	ldr	r7, [sp, #24]
 802723a:	4674      	mov	r4, lr
 802723c:	46be      	mov	lr, r7
 802723e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8027240:	3101      	adds	r1, #1
 8027242:	42af      	cmp	r7, r5
 8027244:	bf88      	it	hi
 8027246:	46e6      	movhi	lr, ip
 8027248:	459a      	cmp	sl, r3
 802724a:	bf94      	ite	ls
 802724c:	464b      	movls	r3, r9
 802724e:	4613      	movhi	r3, r2
 8027250:	4588      	cmp	r8, r1
 8027252:	4675      	mov	r5, lr
 8027254:	f106 0604 	add.w	r6, r6, #4
 8027258:	dcc7      	bgt.n	80271ea <omni2+0x38e>
 802725a:	9316      	str	r3, [sp, #88]	@ 0x58
 802725c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802725e:	f8dd 9034 	ldr.w	r9, [sp, #52]	@ 0x34
 8027262:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8027264:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
 8027268:	f8dd b054 	ldr.w	fp, [sp, #84]	@ 0x54
 802726c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802726e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8027272:	f8dd c074 	ldr.w	ip, [sp, #116]	@ 0x74
 8027276:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8027278:	f8cd 9018 	str.w	r9, [sp, #24]
 802727c:	1f1f      	subs	r7, r3, #4
 802727e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027280:	9703      	str	r7, [sp, #12]
 8027282:	2100      	movs	r1, #0
 8027284:	9408      	str	r4, [sp, #32]
 8027286:	950a      	str	r5, [sp, #40]	@ 0x28
 8027288:	9604      	str	r6, [sp, #16]
 802728a:	9c03      	ldr	r4, [sp, #12]
 802728c:	9e04      	ldr	r6, [sp, #16]
 802728e:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8027292:	9403      	str	r4, [sp, #12]
 8027294:	f856 4f04 	ldr.w	r4, [r6, #4]!
 8027298:	9604      	str	r6, [sp, #16]
 802729a:	6816      	ldr	r6, [r2, #0]
 802729c:	4425      	add	r5, r4
 802729e:	f8db 4000 	ldr.w	r4, [fp]
 80272a2:	4435      	add	r5, r6
 80272a4:	681e      	ldr	r6, [r3, #0]
 80272a6:	4425      	add	r5, r4
 80272a8:	6804      	ldr	r4, [r0, #0]
 80272aa:	4435      	add	r5, r6
 80272ac:	442c      	add	r4, r5
 80272ae:	f840 4b04 	str.w	r4, [r0], #4
 80272b2:	46d9      	mov	r9, fp
 80272b4:	f8da 4000 	ldr.w	r4, [sl]
 80272b8:	f849 4b04 	str.w	r4, [r9], #4
 80272bc:	461d      	mov	r5, r3
 80272be:	f8da 4180 	ldr.w	r4, [sl, #384]	@ 0x180
 80272c2:	f845 4b04 	str.w	r4, [r5], #4
 80272c6:	4614      	mov	r4, r2
 80272c8:	f8da 6300 	ldr.w	r6, [sl, #768]	@ 0x300
 80272cc:	f844 6b04 	str.w	r6, [r4], #4
 80272d0:	9e07      	ldr	r6, [sp, #28]
 80272d2:	4637      	mov	r7, r6
 80272d4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80272d6:	455e      	cmp	r6, fp
 80272d8:	bf88      	it	hi
 80272da:	464f      	movhi	r7, r9
 80272dc:	9e05      	ldr	r6, [sp, #20]
 80272de:	46bb      	mov	fp, r7
 80272e0:	4637      	mov	r7, r6
 80272e2:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 80272e4:	3101      	adds	r1, #1
 80272e6:	429e      	cmp	r6, r3
 80272e8:	bf88      	it	hi
 80272ea:	462f      	movhi	r7, r5
 80272ec:	4594      	cmp	ip, r2
 80272ee:	bf94      	ite	ls
 80272f0:	4672      	movls	r2, lr
 80272f2:	4622      	movhi	r2, r4
 80272f4:	4588      	cmp	r8, r1
 80272f6:	463b      	mov	r3, r7
 80272f8:	f10a 0a04 	add.w	sl, sl, #4
 80272fc:	dcc5      	bgt.n	802728a <omni2+0x42e>
 80272fe:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8027302:	9c08      	ldr	r4, [sp, #32]
 8027304:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8027306:	9712      	str	r7, [sp, #72]	@ 0x48
 8027308:	9217      	str	r2, [sp, #92]	@ 0x5c
 802730a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802730c:	f8c9 302c 	str.w	r3, [r9, #44]	@ 0x2c
 8027310:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027312:	f8c9 3034 	str.w	r3, [r9, #52]	@ 0x34
 8027316:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027318:	f8c9 b024 	str.w	fp, [r9, #36]	@ 0x24
 802731c:	f8c9 4028 	str.w	r4, [r9, #40]	@ 0x28
 8027320:	f8c9 5030 	str.w	r5, [r9, #48]	@ 0x30
 8027324:	f8c9 3038 	str.w	r3, [r9, #56]	@ 0x38
 8027328:	f8d9 304c 	ldr.w	r3, [r9, #76]	@ 0x4c
 802732c:	f8d9 003c 	ldr.w	r0, [r9, #60]	@ 0x3c
 8027330:	f8d9 1040 	ldr.w	r1, [r9, #64]	@ 0x40
 8027334:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8027338:	3b01      	subs	r3, #1
 802733a:	009b      	lsls	r3, r3, #2
 802733c:	f509 6211 	add.w	r2, r9, #2320	@ 0x910
 8027340:	f609 1424 	addw	r4, r9, #2340	@ 0x924
 8027344:	920c      	str	r2, [sp, #48]	@ 0x30
 8027346:	441a      	add	r2, r3
 8027348:	18e3      	adds	r3, r4, r3
 802734a:	940d      	str	r4, [sp, #52]	@ 0x34
 802734c:	9205      	str	r2, [sp, #20]
 802734e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027350:	f8d9 3020 	ldr.w	r3, [r9, #32]
 8027354:	f8d9 5728 	ldr.w	r5, [r9, #1832]	@ 0x728
 8027358:	f1b8 0f00 	cmp.w	r8, #0
 802735c:	e893 1010 	ldmia.w	r3, {r4, ip}
 8027360:	f8d9 3738 	ldr.w	r3, [r9, #1848]	@ 0x738
 8027364:	dd45      	ble.n	80273f2 <omni2+0x596>
 8027366:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8027368:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802736a:	9f11      	ldr	r7, [sp, #68]	@ 0x44
 802736c:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
 8027370:	f8cd 900c 	str.w	r9, [sp, #12]
 8027374:	f1a2 0a04 	sub.w	sl, r2, #4
 8027378:	46c1      	mov	r9, r8
 802737a:	f04f 0e00 	mov.w	lr, #0
 802737e:	46a0      	mov	r8, r4
 8027380:	680a      	ldr	r2, [r1, #0]
 8027382:	6834      	ldr	r4, [r6, #0]
 8027384:	fa82 f2a4 	qsub	r2, r4, r2
 8027388:	6032      	str	r2, [r6, #0]
 802738a:	683a      	ldr	r2, [r7, #0]
 802738c:	6804      	ldr	r4, [r0, #0]
 802738e:	fa84 f2a2 	qsub	r2, r2, r4
 8027392:	603a      	str	r2, [r7, #0]
 8027394:	fb52 f218 	smmulr	r2, r2, r8
 8027398:	fb63 221c 	smmlsr	r2, r3, ip, r2
 802739c:	0053      	lsls	r3, r2, #1
 802739e:	600b      	str	r3, [r1, #0]
 80273a0:	6834      	ldr	r4, [r6, #0]
 80273a2:	fb54 f418 	smmulr	r4, r4, r8
 80273a6:	fb65 441c 	smmlsr	r4, r5, ip, r4
 80273aa:	0065      	lsls	r5, r4, #1
 80273ac:	6005      	str	r5, [r0, #0]
 80273ae:	f85a 2f04 	ldr.w	r2, [sl, #4]!
 80273b2:	4cca      	ldr	r4, [pc, #808]	@ (80276dc <omni2+0x880>)
 80273b4:	fb52 f214 	smmulr	r2, r2, r4
 80273b8:	0052      	lsls	r2, r2, #1
 80273ba:	6834      	ldr	r4, [r6, #0]
 80273bc:	fa82 f484 	qadd	r4, r4, r2
 80273c0:	6034      	str	r4, [r6, #0]
 80273c2:	683c      	ldr	r4, [r7, #0]
 80273c4:	fa82 f284 	qadd	r2, r4, r2
 80273c8:	603a      	str	r2, [r7, #0]
 80273ca:	9a05      	ldr	r2, [sp, #20]
 80273cc:	4559      	cmp	r1, fp
 80273ce:	bf34      	ite	cc
 80273d0:	3104      	addcc	r1, #4
 80273d2:	990d      	ldrcs	r1, [sp, #52]	@ 0x34
 80273d4:	f10e 0e01 	add.w	lr, lr, #1
 80273d8:	4290      	cmp	r0, r2
 80273da:	bf34      	ite	cc
 80273dc:	3004      	addcc	r0, #4
 80273de:	980c      	ldrcs	r0, [sp, #48]	@ 0x30
 80273e0:	45f1      	cmp	r9, lr
 80273e2:	f106 0604 	add.w	r6, r6, #4
 80273e6:	f107 0704 	add.w	r7, r7, #4
 80273ea:	d1c9      	bne.n	8027380 <omni2+0x524>
 80273ec:	46c8      	mov	r8, r9
 80273ee:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80273f2:	f8c9 5728 	str.w	r5, [r9, #1832]	@ 0x728
 80273f6:	f8c9 3738 	str.w	r3, [r9, #1848]	@ 0x738
 80273fa:	f8c9 003c 	str.w	r0, [r9, #60]	@ 0x3c
 80273fe:	f8c9 1040 	str.w	r1, [r9, #64]	@ 0x40
 8027402:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8027404:	f8d9 2054 	ldr.w	r2, [r9, #84]	@ 0x54
 8027408:	f8cd 8000 	str.w	r8, [sp]
 802740c:	4608      	mov	r0, r1
 802740e:	f609 2398 	addw	r3, r9, #2712	@ 0xa98
 8027412:	f7ff fc3f 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027416:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8027418:	f8d9 2054 	ldr.w	r2, [r9, #84]	@ 0x54
 802741c:	f8cd 8000 	str.w	r8, [sp]
 8027420:	f609 23b8 	addw	r3, r9, #2744	@ 0xab8
 8027424:	4608      	mov	r0, r1
 8027426:	f7ff fc35 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 802742a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802742c:	785b      	ldrb	r3, [r3, #1]
 802742e:	2b01      	cmp	r3, #1
 8027430:	f000 814a 	beq.w	80276c8 <omni2+0x86c>
 8027434:	f1b8 0f00 	cmp.w	r8, #0
 8027438:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 802743c:	dd15      	ble.n	802746a <omni2+0x60e>
 802743e:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8027442:	f509 73aa 	add.w	r3, r9, #340	@ 0x154
 8027446:	eb01 0588 	add.w	r5, r1, r8, lsl #2
 802744a:	4618      	mov	r0, r3
 802744c:	f851 3b04 	ldr.w	r3, [r1], #4
 8027450:	f854 2f04 	ldr.w	r2, [r4, #4]!
 8027454:	105b      	asrs	r3, r3, #1
 8027456:	fa83 f282 	qadd	r2, r2, r3
 802745a:	6022      	str	r2, [r4, #0]
 802745c:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8027460:	fa83 f382 	qadd	r3, r2, r3
 8027464:	42a9      	cmp	r1, r5
 8027466:	6003      	str	r3, [r0, #0]
 8027468:	d1f0      	bne.n	802744c <omni2+0x5f0>
 802746a:	2000      	movs	r0, #0
 802746c:	b023      	add	sp, #140	@ 0x8c
 802746e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027472:	f002 037f 	and.w	r3, r2, #127	@ 0x7f
 8027476:	3b02      	subs	r3, #2
 8027478:	2b01      	cmp	r3, #1
 802747a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802747c:	f240 80b6 	bls.w	80275ec <omni2+0x790>
 8027480:	689b      	ldr	r3, [r3, #8]
 8027482:	f8d3 a000 	ldr.w	sl, [r3]
 8027486:	f1ba 0f00 	cmp.w	sl, #0
 802748a:	f000 84c9 	beq.w	8027e20 <omni2+0xfc4>
 802748e:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 8027492:	931b      	str	r3, [sp, #108]	@ 0x6c
 8027494:	f509 7366 	add.w	r3, r9, #920	@ 0x398
 8027498:	9304      	str	r3, [sp, #16]
 802749a:	f509 638b 	add.w	r3, r9, #1112	@ 0x458
 802749e:	930f      	str	r3, [sp, #60]	@ 0x3c
 80274a0:	f509 63a3 	add.w	r3, r9, #1304	@ 0x518
 80274a4:	9314      	str	r3, [sp, #80]	@ 0x50
 80274a6:	f509 63bb 	add.w	r3, r9, #1496	@ 0x5d8
 80274aa:	9315      	str	r3, [sp, #84]	@ 0x54
 80274ac:	9b03      	ldr	r3, [sp, #12]
 80274ae:	2b00      	cmp	r3, #0
 80274b0:	f43f ad11 	beq.w	8026ed6 <omni2+0x7a>
 80274b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80274b6:	f893 3037 	ldrb.w	r3, [r3, #55]	@ 0x37
 80274ba:	2b01      	cmp	r3, #1
 80274bc:	f000 8157 	beq.w	802776e <omni2+0x912>
 80274c0:	9b03      	ldr	r3, [sp, #12]
 80274c2:	2b02      	cmp	r3, #2
 80274c4:	f47f ad2f 	bne.w	8026f26 <omni2+0xca>
 80274c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80274ca:	f8d9 2048 	ldr.w	r2, [r9, #72]	@ 0x48
 80274ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80274d0:	f8d9 502c 	ldr.w	r5, [r9, #44]	@ 0x2c
 80274d4:	f8d9 4030 	ldr.w	r4, [r9, #48]	@ 0x30
 80274d8:	4413      	add	r3, r2
 80274da:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80274de:	3b01      	subs	r3, #1
 80274e0:	009b      	lsls	r3, r3, #2
 80274e2:	f609 024c 	addw	r2, r9, #2124	@ 0x84c
 80274e6:	f509 6bf1 	add.w	fp, r9, #1928	@ 0x788
 80274ea:	eb0b 0103 	add.w	r1, fp, r3
 80274ee:	18d3      	adds	r3, r2, r3
 80274f0:	9305      	str	r3, [sp, #20]
 80274f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80274f4:	9204      	str	r2, [sp, #16]
 80274f6:	2b0a      	cmp	r3, #10
 80274f8:	9103      	str	r1, [sp, #12]
 80274fa:	f10a 06c0 	add.w	r6, sl, #192	@ 0xc0
 80274fe:	f000 8406 	beq.w	8027d0e <omni2+0xeb2>
 8027502:	2b14      	cmp	r3, #20
 8027504:	f000 8403 	beq.w	8027d0e <omni2+0xeb2>
 8027508:	f8d9 300c 	ldr.w	r3, [r9, #12]
 802750c:	9306      	str	r3, [sp, #24]
 802750e:	4619      	mov	r1, r3
 8027510:	f1b8 0f00 	cmp.w	r8, #0
 8027514:	f8d9 36c8 	ldr.w	r3, [r9, #1736]	@ 0x6c8
 8027518:	e891 4080 	ldmia.w	r1, {r7, lr}
 802751c:	dd61      	ble.n	80275e2 <omni2+0x786>
 802751e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8027520:	ea4f 0288 	mov.w	r2, r8, lsl #2
 8027524:	9207      	str	r2, [sp, #28]
 8027526:	eb01 0c02 	add.w	ip, r1, r2
 802752a:	f1aa 0004 	sub.w	r0, sl, #4
 802752e:	f851 2b04 	ldr.w	r2, [r1], #4
 8027532:	fb57 f212 	smmulr	r2, r7, r2
 8027536:	fb5e f313 	smmulr	r3, lr, r3
 802753a:	fa83 f3a2 	qsub	r3, r2, r3
 802753e:	005b      	lsls	r3, r3, #1
 8027540:	4561      	cmp	r1, ip
 8027542:	f840 3f04 	str.w	r3, [r0, #4]!
 8027546:	d1f2      	bne.n	802752e <omni2+0x6d2>
 8027548:	f8c9 36c8 	str.w	r3, [r9, #1736]	@ 0x6c8
 802754c:	9a06      	ldr	r2, [sp, #24]
 802754e:	9b07      	ldr	r3, [sp, #28]
 8027550:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8027552:	f8d2 e000 	ldr.w	lr, [r2]
 8027556:	6857      	ldr	r7, [r2, #4]
 8027558:	f8d9 26d8 	ldr.w	r2, [r9, #1752]	@ 0x6d8
 802755c:	469c      	mov	ip, r3
 802755e:	448c      	add	ip, r1
 8027560:	f10a 00bc 	add.w	r0, sl, #188	@ 0xbc
 8027564:	f851 3b04 	ldr.w	r3, [r1], #4
 8027568:	fb5e f313 	smmulr	r3, lr, r3
 802756c:	fb57 f212 	smmulr	r2, r7, r2
 8027570:	fa82 f2a3 	qsub	r2, r3, r2
 8027574:	0052      	lsls	r2, r2, #1
 8027576:	4561      	cmp	r1, ip
 8027578:	f840 2f04 	str.w	r2, [r0, #4]!
 802757c:	d1f2      	bne.n	8027564 <omni2+0x708>
 802757e:	9904      	ldr	r1, [sp, #16]
 8027580:	f8dd e014 	ldr.w	lr, [sp, #20]
 8027584:	f8c9 26d8 	str.w	r2, [r9, #1752]	@ 0x6d8
 8027588:	f109 0794 	add.w	r7, r9, #148	@ 0x94
 802758c:	2000      	movs	r0, #0
 802758e:	46ac      	mov	ip, r5
 8027590:	4623      	mov	r3, r4
 8027592:	f857 2f04 	ldr.w	r2, [r7, #4]!
 8027596:	f853 5b04 	ldr.w	r5, [r3], #4
 802759a:	fa85 f282 	qadd	r2, r2, r5
 802759e:	603a      	str	r2, [r7, #0]
 80275a0:	3001      	adds	r0, #1
 80275a2:	f856 2b04 	ldr.w	r2, [r6], #4
 80275a6:	6022      	str	r2, [r4, #0]
 80275a8:	459e      	cmp	lr, r3
 80275aa:	bf2c      	ite	cs
 80275ac:	461c      	movcs	r4, r3
 80275ae:	460c      	movcc	r4, r1
 80275b0:	4580      	cmp	r8, r0
 80275b2:	dced      	bgt.n	8027590 <omni2+0x734>
 80275b4:	9f03      	ldr	r7, [sp, #12]
 80275b6:	4665      	mov	r5, ip
 80275b8:	f509 76aa 	add.w	r6, r9, #340	@ 0x154
 80275bc:	2000      	movs	r0, #0
 80275be:	462b      	mov	r3, r5
 80275c0:	f856 2f04 	ldr.w	r2, [r6, #4]!
 80275c4:	f853 1b04 	ldr.w	r1, [r3], #4
 80275c8:	fa81 f282 	qadd	r2, r2, r1
 80275cc:	6032      	str	r2, [r6, #0]
 80275ce:	3001      	adds	r0, #1
 80275d0:	f85a 2b04 	ldr.w	r2, [sl], #4
 80275d4:	602a      	str	r2, [r5, #0]
 80275d6:	429f      	cmp	r7, r3
 80275d8:	bf2c      	ite	cs
 80275da:	461d      	movcs	r5, r3
 80275dc:	465d      	movcc	r5, fp
 80275de:	4580      	cmp	r8, r0
 80275e0:	dced      	bgt.n	80275be <omni2+0x762>
 80275e2:	f8c9 502c 	str.w	r5, [r9, #44]	@ 0x2c
 80275e6:	f8c9 4030 	str.w	r4, [r9, #48]	@ 0x30
 80275ea:	e69d      	b.n	8027328 <omni2+0x4cc>
 80275ec:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80275ee:	483c      	ldr	r0, [pc, #240]	@ (80276e0 <omni2+0x884>)
 80275f0:	4b3c      	ldr	r3, [pc, #240]	@ (80276e4 <omni2+0x888>)
 80275f2:	493d      	ldr	r1, [pc, #244]	@ (80276e8 <omni2+0x88c>)
 80275f4:	f8d3 e000 	ldr.w	lr, [r3]
 80275f8:	f8d3 c004 	ldr.w	ip, [r3, #4]
 80275fc:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8027600:	f851 7022 	ldr.w	r7, [r1, r2, lsl #2]
 8027604:	f8d9 308c 	ldr.w	r3, [r9, #140]	@ 0x8c
 8027608:	f1b8 0f00 	cmp.w	r8, #0
 802760c:	dd2e      	ble.n	802766c <omni2+0x810>
 802760e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027610:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
 8027614:	2500      	movs	r5, #0
 8027616:	6821      	ldr	r1, [r4, #0]
 8027618:	f8da 2000 	ldr.w	r2, [sl]
 802761c:	fb51 f017 	smmulr	r0, r1, r7
 8027620:	fb52 fb17 	smmulr	fp, r2, r7
 8027624:	fa8b f0a0 	qsub	r0, r0, fp
 8027628:	fb51 f116 	smmulr	r1, r1, r6
 802762c:	fb52 f216 	smmulr	r2, r2, r6
 8027630:	fa83 f181 	qadd	r1, r1, r3
 8027634:	0049      	lsls	r1, r1, #1
 8027636:	f844 1b04 	str.w	r1, [r4], #4
 802763a:	fa83 f2a2 	qsub	r2, r2, r3
 802763e:	0052      	lsls	r2, r2, #1
 8027640:	f84a 2b04 	str.w	r2, [sl], #4
 8027644:	fb50 f00e 	smmul	r0, r0, lr
 8027648:	fb53 f30c 	smmul	r3, r3, ip
 802764c:	fa83 f3a0 	qsub	r3, r0, r3
 8027650:	3501      	adds	r5, #1
 8027652:	45a8      	cmp	r8, r5
 8027654:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8027658:	d1dd      	bne.n	8027616 <omni2+0x7ba>
 802765a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802765c:	7852      	ldrb	r2, [r2, #1]
 802765e:	f8c9 308c 	str.w	r3, [r9, #140]	@ 0x8c
 8027662:	2a01      	cmp	r2, #1
 8027664:	d009      	beq.n	802767a <omni2+0x81e>
 8027666:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 802766a:	e6e8      	b.n	802743e <omni2+0x5e2>
 802766c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802766e:	7852      	ldrb	r2, [r2, #1]
 8027670:	f8c9 308c 	str.w	r3, [r9, #140]	@ 0x8c
 8027674:	2a01      	cmp	r2, #1
 8027676:	f47f aef8 	bne.w	802746a <omni2+0x60e>
 802767a:	9b03      	ldr	r3, [sp, #12]
 802767c:	2b81      	cmp	r3, #129	@ 0x81
 802767e:	d005      	beq.n	802768c <omni2+0x830>
 8027680:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027682:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8027686:	2b00      	cmp	r3, #0
 8027688:	f47f aed4 	bne.w	8027434 <omni2+0x5d8>
 802768c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802768e:	6818      	ldr	r0, [r3, #0]
 8027690:	f8d0 5ae0 	ldr.w	r5, [r0, #2784]	@ 0xae0
 8027694:	2d00      	cmp	r5, #0
 8027696:	f100 0198 	add.w	r1, r0, #152	@ 0x98
 802769a:	f77f aecb 	ble.w	8027434 <omni2+0x5d8>
 802769e:	4e13      	ldr	r6, [pc, #76]	@ (80276ec <omni2+0x890>)
 80276a0:	f500 74aa 	add.w	r4, r0, #340	@ 0x154
 80276a4:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 80276a8:	f500 7005 	add.w	r0, r0, #532	@ 0x214
 80276ac:	f851 3b04 	ldr.w	r3, [r1], #4
 80276b0:	f854 2f04 	ldr.w	r2, [r4, #4]!
 80276b4:	fa82 f383 	qadd	r3, r3, r2
 80276b8:	fb53 f316 	smmulr	r3, r3, r6
 80276bc:	005b      	lsls	r3, r3, #1
 80276be:	42a9      	cmp	r1, r5
 80276c0:	f840 3f04 	str.w	r3, [r0, #4]!
 80276c4:	d1f2      	bne.n	80276ac <omni2+0x850>
 80276c6:	e6b5      	b.n	8027434 <omni2+0x5d8>
 80276c8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80276ca:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 80276ce:	9303      	str	r3, [sp, #12]
 80276d0:	2b01      	cmp	r3, #1
 80276d2:	d0db      	beq.n	802768c <omni2+0x830>
 80276d4:	9b03      	ldr	r3, [sp, #12]
 80276d6:	2b81      	cmp	r3, #129	@ 0x81
 80276d8:	d1d2      	bne.n	8027680 <omni2+0x824>
 80276da:	e7d7      	b.n	802768c <omni2+0x830>
 80276dc:	40126116 	.word	0x40126116
 80276e0:	08037960 	.word	0x08037960
 80276e4:	08037998 	.word	0x08037998
 80276e8:	08037934 	.word	0x08037934
 80276ec:	5a82799a 	.word	0x5a82799a
 80276f0:	f1b8 0f00 	cmp.w	r8, #0
 80276f4:	f340 8499 	ble.w	802802a <omni2+0x11ce>
 80276f8:	f109 0e94 	add.w	lr, r9, #148	@ 0x94
 80276fc:	f8df c348 	ldr.w	ip, [pc, #840]	@ 8027a48 <omni2+0xbec>
 8027700:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027702:	460d      	mov	r5, r1
 8027704:	4604      	mov	r4, r0
 8027706:	4611      	mov	r1, r2
 8027708:	46f3      	mov	fp, lr
 802770a:	4618      	mov	r0, r3
 802770c:	2200      	movs	r2, #0
 802770e:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 8027712:	fb53 f31c 	smmulr	r3, r3, ip
 8027716:	005b      	lsls	r3, r3, #1
 8027718:	f84b 3f04 	str.w	r3, [fp, #4]!
 802771c:	6833      	ldr	r3, [r6, #0]
 802771e:	fb53 f31c 	smmulr	r3, r3, ip
 8027722:	005b      	lsls	r3, r3, #1
 8027724:	f846 3b04 	str.w	r3, [r6], #4
 8027728:	4fc5      	ldr	r7, [pc, #788]	@ (8027a40 <omni2+0xbe4>)
 802772a:	682b      	ldr	r3, [r5, #0]
 802772c:	fb53 f317 	smmulr	r3, r3, r7
 8027730:	005b      	lsls	r3, r3, #1
 8027732:	f845 3b04 	str.w	r3, [r5], #4
 8027736:	6823      	ldr	r3, [r4, #0]
 8027738:	fb53 f317 	smmulr	r3, r3, r7
 802773c:	005b      	lsls	r3, r3, #1
 802773e:	f844 3b04 	str.w	r3, [r4], #4
 8027742:	f04f 3733 	mov.w	r7, #858993459	@ 0x33333333
 8027746:	6803      	ldr	r3, [r0, #0]
 8027748:	fb53 f317 	smmulr	r3, r3, r7
 802774c:	005b      	lsls	r3, r3, #1
 802774e:	f840 3b04 	str.w	r3, [r0], #4
 8027752:	680b      	ldr	r3, [r1, #0]
 8027754:	fb53 f317 	smmulr	r3, r3, r7
 8027758:	3201      	adds	r2, #1
 802775a:	005b      	lsls	r3, r3, #1
 802775c:	4590      	cmp	r8, r2
 802775e:	f841 3b04 	str.w	r3, [r1], #4
 8027762:	d1d4      	bne.n	802770e <omni2+0x8b2>
 8027764:	9b03      	ldr	r3, [sp, #12]
 8027766:	2b00      	cmp	r3, #0
 8027768:	f43f abb8 	beq.w	8026edc <omni2+0x80>
 802776c:	e6a2      	b.n	80274b4 <omni2+0x658>
 802776e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027770:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8027772:	f033 407f 	bics.w	r0, r3, #4278190080	@ 0xff000000
 8027776:	f040 81f8 	bne.w	8027b6a <omni2+0xd0e>
 802777a:	f1b8 0f00 	cmp.w	r8, #0
 802777e:	f77f ae9f 	ble.w	80274c0 <omni2+0x664>
 8027782:	9b04      	ldr	r3, [sp, #16]
 8027784:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027786:	4faf      	ldr	r7, [pc, #700]	@ (8027a44 <omni2+0xbe8>)
 8027788:	1f19      	subs	r1, r3, #4
 802778a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802778c:	462a      	mov	r2, r5
 802778e:	1f1c      	subs	r4, r3, #4
 8027790:	eb05 0688 	add.w	r6, r5, r8, lsl #2
 8027794:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8027798:	fb53 f317 	smmulr	r3, r3, r7
 802779c:	005b      	lsls	r3, r3, #1
 802779e:	425d      	negs	r5, r3
 80277a0:	f842 5b04 	str.w	r5, [r2], #4
 80277a4:	4296      	cmp	r6, r2
 80277a6:	f844 3f04 	str.w	r3, [r4, #4]!
 80277aa:	6008      	str	r0, [r1, #0]
 80277ac:	d1f2      	bne.n	8027794 <omni2+0x938>
 80277ae:	e687      	b.n	80274c0 <omni2+0x664>
 80277b0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80277b4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80277b6:	f8cd 8000 	str.w	r8, [sp]
 80277ba:	f509 63d5 	add.w	r3, r9, #1704	@ 0x6a8
 80277be:	4651      	mov	r1, sl
 80277c0:	f7ff fa68 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80277c4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80277c8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80277ca:	f8cd 8000 	str.w	r8, [sp]
 80277ce:	f509 63db 	add.w	r3, r9, #1752	@ 0x6d8
 80277d2:	4631      	mov	r1, r6
 80277d4:	f7ff fa5e 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80277d8:	f8d9 2010 	ldr.w	r2, [r9, #16]
 80277dc:	9903      	ldr	r1, [sp, #12]
 80277de:	9804      	ldr	r0, [sp, #16]
 80277e0:	f8cd 8000 	str.w	r8, [sp]
 80277e4:	f509 63dd 	add.w	r3, r9, #1768	@ 0x6e8
 80277e8:	f7ff fa54 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80277ec:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80277f0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80277f2:	f8cd 8000 	str.w	r8, [sp]
 80277f6:	f509 63e3 	add.w	r3, r9, #1816	@ 0x718
 80277fa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80277fc:	f7ff fa4a 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027800:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027802:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 8027806:	f003 030b 	and.w	r3, r3, #11
 802780a:	2b0b      	cmp	r3, #11
 802780c:	f000 839b 	beq.w	8027f46 <omni2+0x10ea>
 8027810:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027812:	689b      	ldr	r3, [r3, #8]
 8027814:	f1b8 0f00 	cmp.w	r8, #0
 8027818:	681a      	ldr	r2, [r3, #0]
 802781a:	dd3f      	ble.n	802789c <omni2+0xa40>
 802781c:	f20a 477c 	addw	r7, sl, #1148	@ 0x47c
 8027820:	f8dd c018 	ldr.w	ip, [sp, #24]
 8027824:	f8cd a018 	str.w	sl, [sp, #24]
 8027828:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802782c:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8027830:	eb02 0e88 	add.w	lr, r2, r8, lsl #2
 8027834:	f8cd 8058 	str.w	r8, [sp, #88]	@ 0x58
 8027838:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802783c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8027840:	f8cd b020 	str.w	fp, [sp, #32]
 8027844:	960a      	str	r6, [sp, #40]	@ 0x28
 8027846:	4628      	mov	r0, r5
 8027848:	4621      	mov	r1, r4
 802784a:	f850 3b04 	ldr.w	r3, [r0], #4
 802784e:	f851 bb04 	ldr.w	fp, [r1], #4
 8027852:	fa8b fb83 	qadd	fp, r3, fp
 8027856:	6813      	ldr	r3, [r2, #0]
 8027858:	fa83 f38b 	qadd	r3, fp, r3
 802785c:	f8d2 60c0 	ldr.w	r6, [r2, #192]	@ 0xc0
 8027860:	602e      	str	r6, [r5, #0]
 8027862:	f8d2 5180 	ldr.w	r5, [r2, #384]	@ 0x180
 8027866:	fa85 f383 	qadd	r3, r3, r5
 802786a:	f847 3f04 	str.w	r3, [r7, #4]!
 802786e:	3204      	adds	r2, #4
 8027870:	f8d2 323c 	ldr.w	r3, [r2, #572]	@ 0x23c
 8027874:	6023      	str	r3, [r4, #0]
 8027876:	4580      	cmp	r8, r0
 8027878:	bf2c      	ite	cs
 802787a:	4605      	movcs	r5, r0
 802787c:	4665      	movcc	r5, ip
 802787e:	458a      	cmp	sl, r1
 8027880:	bf2c      	ite	cs
 8027882:	460c      	movcs	r4, r1
 8027884:	464c      	movcc	r4, r9
 8027886:	4572      	cmp	r2, lr
 8027888:	d1dd      	bne.n	8027846 <omni2+0x9ea>
 802788a:	f8dd 9034 	ldr.w	r9, [sp, #52]	@ 0x34
 802788e:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8027892:	f8dd a018 	ldr.w	sl, [sp, #24]
 8027896:	f8dd b020 	ldr.w	fp, [sp, #32]
 802789a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802789c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80278a0:	f8c9 4028 	str.w	r4, [r9, #40]	@ 0x28
 80278a4:	f8c9 5030 	str.w	r5, [r9, #48]	@ 0x30
 80278a8:	f509 63d7 	add.w	r3, r9, #1720	@ 0x6b8
 80278ac:	4651      	mov	r1, sl
 80278ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80278b0:	f8cd 8000 	str.w	r8, [sp]
 80278b4:	f7ff f9ee 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80278b8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80278bc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80278be:	f8cd 8000 	str.w	r8, [sp]
 80278c2:	4631      	mov	r1, r6
 80278c4:	f509 63d9 	add.w	r3, r9, #1736	@ 0x6c8
 80278c8:	f7ff f9e4 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80278cc:	f8d9 2010 	ldr.w	r2, [r9, #16]
 80278d0:	9903      	ldr	r1, [sp, #12]
 80278d2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80278d4:	f8cd 8000 	str.w	r8, [sp]
 80278d8:	f509 63df 	add.w	r3, r9, #1784	@ 0x6f8
 80278dc:	f7ff f9da 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80278e0:	f8d9 2014 	ldr.w	r2, [r9, #20]
 80278e4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80278e6:	f8cd 8000 	str.w	r8, [sp]
 80278ea:	f509 63e1 	add.w	r3, r9, #1800	@ 0x708
 80278ee:	9804      	ldr	r0, [sp, #16]
 80278f0:	f7ff f9d0 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 80278f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80278f6:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 80278fa:	f003 030b 	and.w	r3, r3, #11
 80278fe:	2b0b      	cmp	r3, #11
 8027900:	f000 82ab 	beq.w	8027e5a <omni2+0xffe>
 8027904:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027906:	689b      	ldr	r3, [r3, #8]
 8027908:	f1b8 0f00 	cmp.w	r8, #0
 802790c:	681a      	ldr	r2, [r3, #0]
 802790e:	dd42      	ble.n	8027996 <omni2+0xb3a>
 8027910:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8027914:	eb02 0688 	add.w	r6, r2, r8, lsl #2
 8027918:	f8cd 8018 	str.w	r8, [sp, #24]
 802791c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8027920:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8027924:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
 8027928:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 802792a:	f8cd 9010 	str.w	r9, [sp, #16]
 802792e:	f20a 4a7c 	addw	sl, sl, #1148	@ 0x47c
 8027932:	f509 75aa 	add.w	r5, r9, #340	@ 0x154
 8027936:	9403      	str	r4, [sp, #12]
 8027938:	4638      	mov	r0, r7
 802793a:	4659      	mov	r1, fp
 802793c:	f850 3b04 	ldr.w	r3, [r0], #4
 8027940:	f851 9b04 	ldr.w	r9, [r1], #4
 8027944:	fa89 f983 	qadd	r9, r3, r9
 8027948:	6813      	ldr	r3, [r2, #0]
 802794a:	fa83 f389 	qadd	r3, r9, r3
 802794e:	f8d2 40c0 	ldr.w	r4, [r2, #192]	@ 0xc0
 8027952:	603c      	str	r4, [r7, #0]
 8027954:	f8d2 7180 	ldr.w	r7, [r2, #384]	@ 0x180
 8027958:	fa87 f383 	qadd	r3, r3, r7
 802795c:	f845 3f04 	str.w	r3, [r5, #4]!
 8027960:	f8d2 3240 	ldr.w	r3, [r2, #576]	@ 0x240
 8027964:	f8cb 3000 	str.w	r3, [fp]
 8027968:	9c03      	ldr	r4, [sp, #12]
 802796a:	f85a 3f04 	ldr.w	r3, [sl, #4]!
 802796e:	f844 3f04 	str.w	r3, [r4, #4]!
 8027972:	9b05      	ldr	r3, [sp, #20]
 8027974:	9403      	str	r4, [sp, #12]
 8027976:	3204      	adds	r2, #4
 8027978:	4586      	cmp	lr, r0
 802797a:	bf28      	it	cs
 802797c:	4603      	movcs	r3, r0
 802797e:	4588      	cmp	r8, r1
 8027980:	bf2c      	ite	cs
 8027982:	468b      	movcs	fp, r1
 8027984:	46e3      	movcc	fp, ip
 8027986:	42b2      	cmp	r2, r6
 8027988:	461f      	mov	r7, r3
 802798a:	d1d5      	bne.n	8027938 <omni2+0xadc>
 802798c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8027990:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8027994:	9312      	str	r3, [sp, #72]	@ 0x48
 8027996:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027998:	f8c9 b024 	str.w	fp, [r9, #36]	@ 0x24
 802799c:	f8c9 302c 	str.w	r3, [r9, #44]	@ 0x2c
 80279a0:	f8d9 204c 	ldr.w	r2, [r9, #76]	@ 0x4c
 80279a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80279a6:	f8d9 003c 	ldr.w	r0, [r9, #60]	@ 0x3c
 80279aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80279ac:	f8d9 1040 	ldr.w	r1, [r9, #64]	@ 0x40
 80279b0:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 80279b4:	3a01      	subs	r2, #1
 80279b6:	0092      	lsls	r2, r2, #2
 80279b8:	f509 6411 	add.w	r4, r9, #2320	@ 0x910
 80279bc:	f609 1524 	addw	r5, r9, #2340	@ 0x924
 80279c0:	940c      	str	r4, [sp, #48]	@ 0x30
 80279c2:	2b0a      	cmp	r3, #10
 80279c4:	4414      	add	r4, r2
 80279c6:	442a      	add	r2, r5
 80279c8:	950d      	str	r5, [sp, #52]	@ 0x34
 80279ca:	9405      	str	r4, [sp, #20]
 80279cc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80279ce:	f040 8222 	bne.w	8027e16 <omni2+0xfba>
 80279d2:	f8d9 3020 	ldr.w	r3, [r9, #32]
 80279d6:	f8d9 2728 	ldr.w	r2, [r9, #1832]	@ 0x728
 80279da:	9203      	str	r2, [sp, #12]
 80279dc:	681a      	ldr	r2, [r3, #0]
 80279de:	9213      	str	r2, [sp, #76]	@ 0x4c
 80279e0:	685a      	ldr	r2, [r3, #4]
 80279e2:	9214      	str	r2, [sp, #80]	@ 0x50
 80279e4:	689a      	ldr	r2, [r3, #8]
 80279e6:	9215      	str	r2, [sp, #84]	@ 0x54
 80279e8:	68da      	ldr	r2, [r3, #12]
 80279ea:	9216      	str	r2, [sp, #88]	@ 0x58
 80279ec:	691a      	ldr	r2, [r3, #16]
 80279ee:	9217      	str	r2, [sp, #92]	@ 0x5c
 80279f0:	f8d9 2730 	ldr.w	r2, [r9, #1840]	@ 0x730
 80279f4:	695b      	ldr	r3, [r3, #20]
 80279f6:	9318      	str	r3, [sp, #96]	@ 0x60
 80279f8:	4616      	mov	r6, r2
 80279fa:	f8d9 372c 	ldr.w	r3, [r9, #1836]	@ 0x72c
 80279fe:	f8d9 2734 	ldr.w	r2, [r9, #1844]	@ 0x734
 8027a02:	9206      	str	r2, [sp, #24]
 8027a04:	f1b8 0f00 	cmp.w	r8, #0
 8027a08:	f8d9 2738 	ldr.w	r2, [r9, #1848]	@ 0x738
 8027a0c:	9204      	str	r2, [sp, #16]
 8027a0e:	461d      	mov	r5, r3
 8027a10:	f8d9 a73c 	ldr.w	sl, [r9, #1852]	@ 0x73c
 8027a14:	f8d9 b740 	ldr.w	fp, [r9, #1856]	@ 0x740
 8027a18:	f8d9 2744 	ldr.w	r2, [r9, #1860]	@ 0x744
 8027a1c:	f340 8211 	ble.w	8027e42 <omni2+0xfe6>
 8027a20:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 8027a22:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8027a26:	3c04      	subs	r4, #4
 8027a28:	f04f 0e00 	mov.w	lr, #0
 8027a2c:	9407      	str	r4, [sp, #28]
 8027a2e:	f8cd 906c 	str.w	r9, [sp, #108]	@ 0x6c
 8027a32:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8027a34:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027a36:	9208      	str	r2, [sp, #32]
 8027a38:	46f4      	mov	ip, lr
 8027a3a:	46b1      	mov	r9, r6
 8027a3c:	4698      	mov	r8, r3
 8027a3e:	e00b      	b.n	8027a58 <omni2+0xbfc>
 8027a40:	26666666 	.word	0x26666666
 8027a44:	5a82799a 	.word	0x5a82799a
 8027a48:	5a9c779a 	.word	0x5a9c779a
 8027a4c:	4699      	mov	r9, r3
 8027a4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027a50:	9303      	str	r3, [sp, #12]
 8027a52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027a54:	9304      	str	r3, [sp, #16]
 8027a56:	46b3      	mov	fp, r6
 8027a58:	4686      	mov	lr, r0
 8027a5a:	682b      	ldr	r3, [r5, #0]
 8027a5c:	f85e 6b04 	ldr.w	r6, [lr], #4
 8027a60:	fa86 f3a3 	qsub	r3, r3, r6
 8027a64:	460a      	mov	r2, r1
 8027a66:	602b      	str	r3, [r5, #0]
 8027a68:	f852 6b04 	ldr.w	r6, [r2], #4
 8027a6c:	6823      	ldr	r3, [r4, #0]
 8027a6e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027a70:	fa86 f3a3 	qsub	r3, r3, r6
 8027a74:	6023      	str	r3, [r4, #0]
 8027a76:	682e      	ldr	r6, [r5, #0]
 8027a78:	960a      	str	r6, [sp, #40]	@ 0x28
 8027a7a:	4637      	mov	r7, r6
 8027a7c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8027a7e:	fb57 f612 	smmulr	r6, r7, r2
 8027a82:	fb53 f312 	smmulr	r3, r3, r2
 8027a86:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 8027a88:	9a04      	ldr	r2, [sp, #16]
 8027a8a:	fb57 6612 	smmlar	r6, r7, r2, r6
 8027a8e:	9a03      	ldr	r2, [sp, #12]
 8027a90:	fb57 3312 	smmlar	r3, r7, r2, r3
 8027a94:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 8027a96:	fb57 6a1a 	smmlar	sl, r7, sl, r6
 8027a9a:	fb57 3818 	smmlar	r8, r7, r8, r3
 8027a9e:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8027aa0:	fb56 aa1b 	smmlar	sl, r6, fp, sl
 8027aa4:	fb56 8819 	smmlar	r8, r6, r9, r8
 8027aa8:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 8027aaa:	9a08      	ldr	r2, [sp, #32]
 8027aac:	4633      	mov	r3, r6
 8027aae:	fb56 aa12 	smmlar	sl, r6, r2, sl
 8027ab2:	9e06      	ldr	r6, [sp, #24]
 8027ab4:	fb53 8816 	smmlar	r8, r3, r6, r8
 8027ab8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027aba:	fa0a fa02 	lsl.w	sl, sl, r2
 8027abe:	f30a 061e 	ssat	r6, #31, sl
 8027ac2:	0076      	lsls	r6, r6, #1
 8027ac4:	600e      	str	r6, [r1, #0]
 8027ac6:	6821      	ldr	r1, [r4, #0]
 8027ac8:	9109      	str	r1, [sp, #36]	@ 0x24
 8027aca:	fa08 f802 	lsl.w	r8, r8, r2
 8027ace:	9907      	ldr	r1, [sp, #28]
 8027ad0:	f308 031e 	ssat	r3, #31, r8
 8027ad4:	005b      	lsls	r3, r3, #1
 8027ad6:	6003      	str	r3, [r0, #0]
 8027ad8:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8027adc:	9107      	str	r1, [sp, #28]
 8027ade:	49d2      	ldr	r1, [pc, #840]	@ (8027e28 <omni2+0xfcc>)
 8027ae0:	fb50 f011 	smmulr	r0, r0, r1
 8027ae4:	0040      	lsls	r0, r0, #1
 8027ae6:	6821      	ldr	r1, [r4, #0]
 8027ae8:	fa80 f181 	qadd	r1, r1, r0
 8027aec:	f844 1b04 	str.w	r1, [r4], #4
 8027af0:	682a      	ldr	r2, [r5, #0]
 8027af2:	fa80 f282 	qadd	r2, r2, r0
 8027af6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8027af8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8027afa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8027afc:	f845 2b04 	str.w	r2, [r5], #4
 8027b00:	463a      	mov	r2, r7
 8027b02:	42b8      	cmp	r0, r7
 8027b04:	bf38      	it	cc
 8027b06:	460a      	movcc	r2, r1
 8027b08:	4611      	mov	r1, r2
 8027b0a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8027b0c:	9f05      	ldr	r7, [sp, #20]
 8027b0e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8027b10:	f8dd a010 	ldr.w	sl, [sp, #16]
 8027b14:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8027b18:	f8cd b020 	str.w	fp, [sp, #32]
 8027b1c:	f10c 0c01 	add.w	ip, ip, #1
 8027b20:	4577      	cmp	r7, lr
 8027b22:	bf28      	it	cs
 8027b24:	4670      	movcs	r0, lr
 8027b26:	4562      	cmp	r2, ip
 8027b28:	f8cd 9018 	str.w	r9, [sp, #24]
 8027b2c:	d18e      	bne.n	8027a4c <omni2+0xbf0>
 8027b2e:	464c      	mov	r4, r9
 8027b30:	f8dd 906c 	ldr.w	r9, [sp, #108]	@ 0x6c
 8027b34:	4690      	mov	r8, r2
 8027b36:	46b4      	mov	ip, r6
 8027b38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8027b3a:	f8c9 3730 	str.w	r3, [r9, #1840]	@ 0x730
 8027b3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027b40:	f8c9 2728 	str.w	r2, [r9, #1832]	@ 0x728
 8027b44:	f8c9 3738 	str.w	r3, [r9, #1848]	@ 0x738
 8027b48:	9a03      	ldr	r2, [sp, #12]
 8027b4a:	9b04      	ldr	r3, [sp, #16]
 8027b4c:	f8c9 272c 	str.w	r2, [r9, #1836]	@ 0x72c
 8027b50:	f8c9 4734 	str.w	r4, [r9, #1844]	@ 0x734
 8027b54:	f8c9 373c 	str.w	r3, [r9, #1852]	@ 0x73c
 8027b58:	f8c9 c740 	str.w	ip, [r9, #1856]	@ 0x740
 8027b5c:	f8c9 b744 	str.w	fp, [r9, #1860]	@ 0x744
 8027b60:	f8c9 003c 	str.w	r0, [r9, #60]	@ 0x3c
 8027b64:	f8c9 1040 	str.w	r1, [r9, #64]	@ 0x40
 8027b68:	e44b      	b.n	8027402 <omni2+0x5a6>
 8027b6a:	f240 1301 	movw	r3, #257	@ 0x101
 8027b6e:	4298      	cmp	r0, r3
 8027b70:	f47f aca6 	bne.w	80274c0 <omni2+0x664>
 8027b74:	f1b8 0f00 	cmp.w	r8, #0
 8027b78:	f77f aca2 	ble.w	80274c0 <omni2+0x664>
 8027b7c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8027b7e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8027b80:	4caa      	ldr	r4, [pc, #680]	@ (8027e2c <omni2+0xfd0>)
 8027b82:	4602      	mov	r2, r0
 8027b84:	1f19      	subs	r1, r3, #4
 8027b86:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8027b8a:	6813      	ldr	r3, [r2, #0]
 8027b8c:	fb53 f314 	smmulr	r3, r3, r4
 8027b90:	005b      	lsls	r3, r3, #1
 8027b92:	f842 3b04 	str.w	r3, [r2], #4
 8027b96:	4282      	cmp	r2, r0
 8027b98:	f841 3f04 	str.w	r3, [r1, #4]!
 8027b9c:	d1f5      	bne.n	8027b8a <omni2+0xd2e>
 8027b9e:	e48f      	b.n	80274c0 <omni2+0x664>
 8027ba0:	6883      	ldr	r3, [r0, #8]
 8027ba2:	681e      	ldr	r6, [r3, #0]
 8027ba4:	2e00      	cmp	r6, #0
 8027ba6:	f000 813b 	beq.w	8027e20 <omni2+0xfc4>
 8027baa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027bac:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8027bb0:	f106 07c0 	add.w	r7, r6, #192	@ 0xc0
 8027bb4:	b113      	cbz	r3, 8027bbc <omni2+0xd60>
 8027bb6:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 8027bba:	9310      	str	r3, [sp, #64]	@ 0x40
 8027bbc:	f1b8 0f00 	cmp.w	r8, #0
 8027bc0:	f340 8239 	ble.w	8028036 <omni2+0x11da>
 8027bc4:	4c99      	ldr	r4, [pc, #612]	@ (8027e2c <omni2+0xfd0>)
 8027bc6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8027bc8:	1f30      	subs	r0, r6, #4
 8027bca:	f106 01bc 	add.w	r1, r6, #188	@ 0xbc
 8027bce:	2200      	movs	r2, #0
 8027bd0:	682b      	ldr	r3, [r5, #0]
 8027bd2:	fb53 f314 	smmulr	r3, r3, r4
 8027bd6:	005b      	lsls	r3, r3, #1
 8027bd8:	f840 3f04 	str.w	r3, [r0, #4]!
 8027bdc:	f855 3b04 	ldr.w	r3, [r5], #4
 8027be0:	fb53 f314 	smmulr	r3, r3, r4
 8027be4:	3201      	adds	r2, #1
 8027be6:	005b      	lsls	r3, r3, #1
 8027be8:	4590      	cmp	r8, r2
 8027bea:	f841 3f04 	str.w	r3, [r1, #4]!
 8027bee:	d1ef      	bne.n	8027bd0 <omni2+0xd74>
 8027bf0:	f109 005c 	add.w	r0, r9, #92	@ 0x5c
 8027bf4:	e890 1401 	ldmia.w	r0, {r0, sl, ip}
 8027bf8:	f8d9 e058 	ldr.w	lr, [r9, #88]	@ 0x58
 8027bfc:	4635      	mov	r5, r6
 8027bfe:	2400      	movs	r4, #0
 8027c00:	6801      	ldr	r1, [r0, #0]
 8027c02:	fb5e f311 	smmulr	r3, lr, r1
 8027c06:	005a      	lsls	r2, r3, #1
 8027c08:	682b      	ldr	r3, [r5, #0]
 8027c0a:	fa82 f3a3 	qsub	r3, r3, r2
 8027c0e:	fb5e f213 	smmulr	r2, lr, r3
 8027c12:	0052      	lsls	r2, r2, #1
 8027c14:	fa81 f282 	qadd	r2, r2, r1
 8027c18:	4560      	cmp	r0, ip
 8027c1a:	f104 0401 	add.w	r4, r4, #1
 8027c1e:	f845 2b04 	str.w	r2, [r5], #4
 8027c22:	6003      	str	r3, [r0, #0]
 8027c24:	bf34      	ite	cc
 8027c26:	3004      	addcc	r0, #4
 8027c28:	4650      	movcs	r0, sl
 8027c2a:	45a0      	cmp	r8, r4
 8027c2c:	d1e8      	bne.n	8027c00 <omni2+0xda4>
 8027c2e:	f8c9 005c 	str.w	r0, [r9, #92]	@ 0x5c
 8027c32:	f109 006c 	add.w	r0, r9, #108	@ 0x6c
 8027c36:	e890 1401 	ldmia.w	r0, {r0, sl, ip}
 8027c3a:	f8d9 e068 	ldr.w	lr, [r9, #104]	@ 0x68
 8027c3e:	463d      	mov	r5, r7
 8027c40:	2400      	movs	r4, #0
 8027c42:	6801      	ldr	r1, [r0, #0]
 8027c44:	fb5e f311 	smmulr	r3, lr, r1
 8027c48:	005a      	lsls	r2, r3, #1
 8027c4a:	682b      	ldr	r3, [r5, #0]
 8027c4c:	fa82 f3a3 	qsub	r3, r3, r2
 8027c50:	fb5e f213 	smmulr	r2, lr, r3
 8027c54:	0052      	lsls	r2, r2, #1
 8027c56:	fa81 f282 	qadd	r2, r2, r1
 8027c5a:	4560      	cmp	r0, ip
 8027c5c:	f104 0401 	add.w	r4, r4, #1
 8027c60:	f845 2b04 	str.w	r2, [r5], #4
 8027c64:	6003      	str	r3, [r0, #0]
 8027c66:	bf34      	ite	cc
 8027c68:	3004      	addcc	r0, #4
 8027c6a:	4650      	movcs	r0, sl
 8027c6c:	45a0      	cmp	r8, r4
 8027c6e:	dce8      	bgt.n	8027c42 <omni2+0xde6>
 8027c70:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8027c74:	f509 73aa 	add.w	r3, r9, #340	@ 0x154
 8027c78:	f8c9 006c 	str.w	r0, [r9, #108]	@ 0x6c
 8027c7c:	4619      	mov	r1, r3
 8027c7e:	4620      	mov	r0, r4
 8027c80:	2200      	movs	r2, #0
 8027c82:	f856 5b04 	ldr.w	r5, [r6], #4
 8027c86:	f840 5f04 	str.w	r5, [r0, #4]!
 8027c8a:	3201      	adds	r2, #1
 8027c8c:	f857 5b04 	ldr.w	r5, [r7], #4
 8027c90:	f841 5f04 	str.w	r5, [r1, #4]!
 8027c94:	4590      	cmp	r8, r2
 8027c96:	dcf4      	bgt.n	8027c82 <omni2+0xe26>
 8027c98:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8027c9a:	7852      	ldrb	r2, [r2, #1]
 8027c9c:	2a01      	cmp	r2, #1
 8027c9e:	f43f acf5 	beq.w	802768c <omni2+0x830>
 8027ca2:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 8027ca6:	f7ff bbce 	b.w	8027446 <omni2+0x5ea>
 8027caa:	f8d9 e000 	ldr.w	lr, [r9]
 8027cae:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8027cb0:	f8d9 36a0 	ldr.w	r3, [r9, #1696]	@ 0x6a0
 8027cb4:	f8de 7000 	ldr.w	r7, [lr]
 8027cb8:	f8de 6004 	ldr.w	r6, [lr, #4]
 8027cbc:	1f10      	subs	r0, r2, #4
 8027cbe:	2100      	movs	r1, #0
 8027cc0:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8027cc4:	fb57 f212 	smmulr	r2, r7, r2
 8027cc8:	fb56 f313 	smmulr	r3, r6, r3
 8027ccc:	fa83 f3a2 	qsub	r3, r2, r3
 8027cd0:	3101      	adds	r1, #1
 8027cd2:	005b      	lsls	r3, r3, #1
 8027cd4:	4588      	cmp	r8, r1
 8027cd6:	6003      	str	r3, [r0, #0]
 8027cd8:	dcf2      	bgt.n	8027cc0 <omni2+0xe64>
 8027cda:	f8c9 36a0 	str.w	r3, [r9, #1696]	@ 0x6a0
 8027cde:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8027ce0:	f8d9 36a4 	ldr.w	r3, [r9, #1700]	@ 0x6a4
 8027ce4:	e89e 00c0 	ldmia.w	lr, {r6, r7}
 8027ce8:	1f10      	subs	r0, r2, #4
 8027cea:	2100      	movs	r1, #0
 8027cec:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8027cf0:	fb56 f212 	smmulr	r2, r6, r2
 8027cf4:	fb57 f313 	smmulr	r3, r7, r3
 8027cf8:	fa83 f3a2 	qsub	r3, r2, r3
 8027cfc:	3101      	adds	r1, #1
 8027cfe:	005b      	lsls	r3, r3, #1
 8027d00:	4588      	cmp	r8, r1
 8027d02:	6003      	str	r3, [r0, #0]
 8027d04:	dcf2      	bgt.n	8027cec <omni2+0xe90>
 8027d06:	f8c9 36a4 	str.w	r3, [r9, #1700]	@ 0x6a4
 8027d0a:	f7ff b993 	b.w	8027034 <omni2+0x1d8>
 8027d0e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8027d12:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8027d14:	f8cd 8000 	str.w	r8, [sp]
 8027d18:	f509 63d5 	add.w	r3, r9, #1704	@ 0x6a8
 8027d1c:	4651      	mov	r1, sl
 8027d1e:	f7fe ffb9 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027d22:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8027d26:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8027d28:	f8cd 8000 	str.w	r8, [sp]
 8027d2c:	f509 63db 	add.w	r3, r9, #1752	@ 0x6d8
 8027d30:	4631      	mov	r1, r6
 8027d32:	f7fe ffaf 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027d38:	689b      	ldr	r3, [r3, #8]
 8027d3a:	681b      	ldr	r3, [r3, #0]
 8027d3c:	f1b8 0f00 	cmp.w	r8, #0
 8027d40:	f103 0ec0 	add.w	lr, r3, #192	@ 0xc0
 8027d44:	f340 817e 	ble.w	8028044 <omni2+0x11e8>
 8027d48:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8027d4c:	f50a 77be 	add.w	r7, sl, #380	@ 0x17c
 8027d50:	9306      	str	r3, [sp, #24]
 8027d52:	f8cd 901c 	str.w	r9, [sp, #28]
 8027d56:	4453      	add	r3, sl
 8027d58:	f8cd 8020 	str.w	r8, [sp, #32]
 8027d5c:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8027d60:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8027d64:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8027d68:	46bc      	mov	ip, r7
 8027d6a:	4650      	mov	r0, sl
 8027d6c:	469b      	mov	fp, r3
 8027d6e:	4623      	mov	r3, r4
 8027d70:	f850 2b04 	ldr.w	r2, [r0], #4
 8027d74:	f853 1b04 	ldr.w	r1, [r3], #4
 8027d78:	fa81 f282 	qadd	r2, r2, r1
 8027d7c:	f84c 2f04 	str.w	r2, [ip, #4]!
 8027d80:	f85e 2b04 	ldr.w	r2, [lr], #4
 8027d84:	6022      	str	r2, [r4, #0]
 8027d86:	4599      	cmp	r9, r3
 8027d88:	bf2c      	ite	cs
 8027d8a:	461c      	movcs	r4, r3
 8027d8c:	4644      	movcc	r4, r8
 8027d8e:	4558      	cmp	r0, fp
 8027d90:	d1ed      	bne.n	8027d6e <omni2+0xf12>
 8027d92:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8027d96:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027d9a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8027d9e:	f8c9 4030 	str.w	r4, [r9, #48]	@ 0x30
 8027da2:	4631      	mov	r1, r6
 8027da4:	f509 63d7 	add.w	r3, r9, #1720	@ 0x6b8
 8027da8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8027daa:	f8cd 8000 	str.w	r8, [sp]
 8027dae:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8027db2:	f7fe ff6f 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027db6:	4651      	mov	r1, sl
 8027db8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8027dbc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8027dbe:	f8cd 8000 	str.w	r8, [sp]
 8027dc2:	f509 63d9 	add.w	r3, r9, #1736	@ 0x6c8
 8027dc6:	f7fe ff65 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027dca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027dcc:	9903      	ldr	r1, [sp, #12]
 8027dce:	689b      	ldr	r3, [r3, #8]
 8027dd0:	6818      	ldr	r0, [r3, #0]
 8027dd2:	9b06      	ldr	r3, [sp, #24]
 8027dd4:	4403      	add	r3, r0
 8027dd6:	f10a 0abc 	add.w	sl, sl, #188	@ 0xbc
 8027dda:	469e      	mov	lr, r3
 8027ddc:	f509 76aa 	add.w	r6, r9, #340	@ 0x154
 8027de0:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8027de4:	462b      	mov	r3, r5
 8027de6:	f85a 2f04 	ldr.w	r2, [sl, #4]!
 8027dea:	f853 cb04 	ldr.w	ip, [r3], #4
 8027dee:	fa8c f282 	qadd	r2, r2, ip
 8027df2:	f846 2f04 	str.w	r2, [r6, #4]!
 8027df6:	f850 2b04 	ldr.w	r2, [r0], #4
 8027dfa:	602a      	str	r2, [r5, #0]
 8027dfc:	f857 2f04 	ldr.w	r2, [r7, #4]!
 8027e00:	f844 2f04 	str.w	r2, [r4, #4]!
 8027e04:	4299      	cmp	r1, r3
 8027e06:	bf2c      	ite	cs
 8027e08:	461d      	movcs	r5, r3
 8027e0a:	465d      	movcc	r5, fp
 8027e0c:	4570      	cmp	r0, lr
 8027e0e:	d1e9      	bne.n	8027de4 <omni2+0xf88>
 8027e10:	f8c9 502c 	str.w	r5, [r9, #44]	@ 0x2c
 8027e14:	e5c4      	b.n	80279a0 <omni2+0xb44>
 8027e16:	2b14      	cmp	r3, #20
 8027e18:	f43f addb 	beq.w	80279d2 <omni2+0xb76>
 8027e1c:	f7ff ba98 	b.w	8027350 <omni2+0x4f4>
 8027e20:	2001      	movs	r0, #1
 8027e22:	f005 fc8d 	bl	802d740 <exit>
 8027e26:	bf00      	nop
 8027e28:	40126116 	.word	0x40126116
 8027e2c:	5a82799a 	.word	0x5a82799a
 8027e30:	9b03      	ldr	r3, [sp, #12]
 8027e32:	f003 030b 	and.w	r3, r3, #11
 8027e36:	2b0b      	cmp	r3, #11
 8027e38:	f47f a8fc 	bne.w	8027034 <omni2+0x1d8>
 8027e3c:	f8d9 36a4 	ldr.w	r3, [r9, #1700]	@ 0x6a4
 8027e40:	e761      	b.n	8027d06 <omni2+0xeaa>
 8027e42:	9c03      	ldr	r4, [sp, #12]
 8027e44:	9409      	str	r4, [sp, #36]	@ 0x24
 8027e46:	9c04      	ldr	r4, [sp, #16]
 8027e48:	940a      	str	r4, [sp, #40]	@ 0x28
 8027e4a:	46dc      	mov	ip, fp
 8027e4c:	4633      	mov	r3, r6
 8027e4e:	9c06      	ldr	r4, [sp, #24]
 8027e50:	9503      	str	r5, [sp, #12]
 8027e52:	4693      	mov	fp, r2
 8027e54:	f8cd a010 	str.w	sl, [sp, #16]
 8027e58:	e66e      	b.n	8027b38 <omni2+0xcdc>
 8027e5a:	f8d9 2018 	ldr.w	r2, [r9, #24]
 8027e5e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8027e60:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027e62:	f8cd 8000 	str.w	r8, [sp]
 8027e66:	f509 63eb 	add.w	r3, r9, #1880	@ 0x758
 8027e6a:	f7fe ff13 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027e6e:	f8d9 201c 	ldr.w	r2, [r9, #28]
 8027e72:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8027e74:	f8cd 8000 	str.w	r8, [sp]
 8027e78:	f509 63ed 	add.w	r3, r9, #1896	@ 0x768
 8027e7c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8027e7e:	f7fe ff09 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027e82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027e84:	689b      	ldr	r3, [r3, #8]
 8027e86:	f1b8 0f00 	cmp.w	r8, #0
 8027e8a:	681a      	ldr	r2, [r3, #0]
 8027e8c:	dd57      	ble.n	8027f3e <omni2+0x10e2>
 8027e8e:	f509 76aa 	add.w	r6, r9, #340	@ 0x154
 8027e92:	eb02 0e88 	add.w	lr, r2, r8, lsl #2
 8027e96:	f8cd 8018 	str.w	r8, [sp, #24]
 8027e9a:	f8dd c074 	ldr.w	ip, [sp, #116]	@ 0x74
 8027e9e:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 8027ea2:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8027ea4:	f8cd 9010 	str.w	r9, [sp, #16]
 8027ea8:	f20a 4a7c 	addw	sl, sl, #1148	@ 0x47c
 8027eac:	f109 0794 	add.w	r7, r9, #148	@ 0x94
 8027eb0:	9603      	str	r6, [sp, #12]
 8027eb2:	4629      	mov	r1, r5
 8027eb4:	4658      	mov	r0, fp
 8027eb6:	f851 3b04 	ldr.w	r3, [r1], #4
 8027eba:	f850 4b04 	ldr.w	r4, [r0], #4
 8027ebe:	fa84 f383 	qadd	r3, r3, r4
 8027ec2:	4644      	mov	r4, r8
 8027ec4:	f854 9b04 	ldr.w	r9, [r4], #4
 8027ec8:	fa89 f983 	qadd	r9, r3, r9
 8027ecc:	6813      	ldr	r3, [r2, #0]
 8027ece:	fa83 f389 	qadd	r3, r9, r3
 8027ed2:	f8d2 60c0 	ldr.w	r6, [r2, #192]	@ 0xc0
 8027ed6:	f8c8 6000 	str.w	r6, [r8]
 8027eda:	f8d2 6180 	ldr.w	r6, [r2, #384]	@ 0x180
 8027ede:	fa86 f383 	qadd	r3, r3, r6
 8027ee2:	f8d2 6240 	ldr.w	r6, [r2, #576]	@ 0x240
 8027ee6:	f8cb 6000 	str.w	r6, [fp]
 8027eea:	f8d2 6300 	ldr.w	r6, [r2, #768]	@ 0x300
 8027eee:	fa86 f383 	qadd	r3, r3, r6
 8027ef2:	9e03      	ldr	r6, [sp, #12]
 8027ef4:	f846 3f04 	str.w	r3, [r6, #4]!
 8027ef8:	f8d2 33c0 	ldr.w	r3, [r2, #960]	@ 0x3c0
 8027efc:	602b      	str	r3, [r5, #0]
 8027efe:	f85a 3f04 	ldr.w	r3, [sl, #4]!
 8027f02:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8027f04:	f847 3f04 	str.w	r3, [r7, #4]!
 8027f08:	9b05      	ldr	r3, [sp, #20]
 8027f0a:	9603      	str	r6, [sp, #12]
 8027f0c:	42a5      	cmp	r5, r4
 8027f0e:	bf28      	it	cs
 8027f10:	4623      	movcs	r3, r4
 8027f12:	4698      	mov	r8, r3
 8027f14:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027f16:	9b07      	ldr	r3, [sp, #28]
 8027f18:	4284      	cmp	r4, r0
 8027f1a:	bf28      	it	cs
 8027f1c:	4603      	movcs	r3, r0
 8027f1e:	469b      	mov	fp, r3
 8027f20:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8027f22:	3204      	adds	r2, #4
 8027f24:	458c      	cmp	ip, r1
 8027f26:	bf28      	it	cs
 8027f28:	460b      	movcs	r3, r1
 8027f2a:	4572      	cmp	r2, lr
 8027f2c:	461d      	mov	r5, r3
 8027f2e:	d1c0      	bne.n	8027eb2 <omni2+0x1056>
 8027f30:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8027f34:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8027f38:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8027f3c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027f3e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027f40:	f8c9 3034 	str.w	r3, [r9, #52]	@ 0x34
 8027f44:	e527      	b.n	8027996 <omni2+0xb3a>
 8027f46:	f8d9 2018 	ldr.w	r2, [r9, #24]
 8027f4a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8027f4c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8027f4e:	f8cd 8000 	str.w	r8, [sp]
 8027f52:	f509 63e9 	add.w	r3, r9, #1864	@ 0x748
 8027f56:	f7fe fe9d 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027f5a:	f8d9 201c 	ldr.w	r2, [r9, #28]
 8027f5e:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8027f60:	f8cd 8000 	str.w	r8, [sp]
 8027f64:	f509 63ef 	add.w	r3, r9, #1912	@ 0x778
 8027f68:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027f6a:	f7fe fe93 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8027f6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027f70:	689b      	ldr	r3, [r3, #8]
 8027f72:	f1b8 0f00 	cmp.w	r8, #0
 8027f76:	681a      	ldr	r2, [r3, #0]
 8027f78:	dd53      	ble.n	8028022 <omni2+0x11c6>
 8027f7a:	eb02 0388 	add.w	r3, r2, r8, lsl #2
 8027f7e:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 8027f80:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8027f84:	f20a 4c7c 	addw	ip, sl, #1148	@ 0x47c
 8027f88:	f8cd 8084 	str.w	r8, [sp, #132]	@ 0x84
 8027f8c:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 8027f90:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
 8027f94:	f8dd 907c 	ldr.w	r9, [sp, #124]	@ 0x7c
 8027f98:	f8cd a030 	str.w	sl, [sp, #48]	@ 0x30
 8027f9c:	f8cd b078 	str.w	fp, [sp, #120]	@ 0x78
 8027fa0:	961f      	str	r6, [sp, #124]	@ 0x7c
 8027fa2:	469a      	mov	sl, r3
 8027fa4:	4639      	mov	r1, r7
 8027fa6:	4620      	mov	r0, r4
 8027fa8:	f851 3b04 	ldr.w	r3, [r1], #4
 8027fac:	f850 6b04 	ldr.w	r6, [r0], #4
 8027fb0:	fa86 f383 	qadd	r3, r3, r6
 8027fb4:	462e      	mov	r6, r5
 8027fb6:	f856 bb04 	ldr.w	fp, [r6], #4
 8027fba:	fa8b fb83 	qadd	fp, r3, fp
 8027fbe:	6813      	ldr	r3, [r2, #0]
 8027fc0:	fa83 fb8b 	qadd	fp, fp, r3
 8027fc4:	f8d2 30c0 	ldr.w	r3, [r2, #192]	@ 0xc0
 8027fc8:	602b      	str	r3, [r5, #0]
 8027fca:	f8d2 5180 	ldr.w	r5, [r2, #384]	@ 0x180
 8027fce:	fa85 f38b 	qadd	r3, fp, r5
 8027fd2:	f8d2 5240 	ldr.w	r5, [r2, #576]	@ 0x240
 8027fd6:	6025      	str	r5, [r4, #0]
 8027fd8:	f8d2 4300 	ldr.w	r4, [r2, #768]	@ 0x300
 8027fdc:	fa84 f383 	qadd	r3, r3, r4
 8027fe0:	f84c 3f04 	str.w	r3, [ip, #4]!
 8027fe4:	f8d2 33c0 	ldr.w	r3, [r2, #960]	@ 0x3c0
 8027fe8:	603b      	str	r3, [r7, #0]
 8027fea:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8027fec:	9b06      	ldr	r3, [sp, #24]
 8027fee:	42b4      	cmp	r4, r6
 8027ff0:	bf28      	it	cs
 8027ff2:	4633      	movcs	r3, r6
 8027ff4:	461d      	mov	r5, r3
 8027ff6:	9b08      	ldr	r3, [sp, #32]
 8027ff8:	3204      	adds	r2, #4
 8027ffa:	4586      	cmp	lr, r0
 8027ffc:	bf28      	it	cs
 8027ffe:	4603      	movcs	r3, r0
 8028000:	4589      	cmp	r9, r1
 8028002:	bf2c      	ite	cs
 8028004:	460f      	movcs	r7, r1
 8028006:	4647      	movcc	r7, r8
 8028008:	4552      	cmp	r2, sl
 802800a:	461c      	mov	r4, r3
 802800c:	d1ca      	bne.n	8027fa4 <omni2+0x1148>
 802800e:	f8dd 9034 	ldr.w	r9, [sp, #52]	@ 0x34
 8028012:	f8dd 8084 	ldr.w	r8, [sp, #132]	@ 0x84
 8028016:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802801a:	f8dd b078 	ldr.w	fp, [sp, #120]	@ 0x78
 802801e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8028020:	9716      	str	r7, [sp, #88]	@ 0x58
 8028022:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8028024:	f8c9 3038 	str.w	r3, [r9, #56]	@ 0x38
 8028028:	e438      	b.n	802789c <omni2+0xa40>
 802802a:	9b03      	ldr	r3, [sp, #12]
 802802c:	2b00      	cmp	r3, #0
 802802e:	f43e af74 	beq.w	8026f1a <omni2+0xbe>
 8028032:	f7ff ba3f 	b.w	80274b4 <omni2+0x658>
 8028036:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8028038:	785b      	ldrb	r3, [r3, #1]
 802803a:	2b01      	cmp	r3, #1
 802803c:	f47f aa15 	bne.w	802746a <omni2+0x60e>
 8028040:	f7ff bb24 	b.w	802768c <omni2+0x830>
 8028044:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8028048:	f8c9 4030 	str.w	r4, [r9, #48]	@ 0x30
 802804c:	4631      	mov	r1, r6
 802804e:	f509 63d7 	add.w	r3, r9, #1720	@ 0x6b8
 8028052:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028054:	f8cd 8000 	str.w	r8, [sp]
 8028058:	f7fe fe1c 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 802805c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8028060:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8028062:	f8cd 8000 	str.w	r8, [sp]
 8028066:	4651      	mov	r1, sl
 8028068:	f509 63d9 	add.w	r3, r9, #1736	@ 0x6c8
 802806c:	f7fe fe12 	bl	8026c94 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028070:	e6ce      	b.n	8027e10 <omni2+0xfb4>
 8028072:	bf00      	nop

08028074 <omni2_sw_decode>:
 8028074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028078:	6943      	ldr	r3, [r0, #20]
 802807a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 802807c:	b091      	sub	sp, #68	@ 0x44
 802807e:	4604      	mov	r4, r0
 8028080:	9306      	str	r3, [sp, #24]
 8028082:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8028086:	930a      	str	r3, [sp, #40]	@ 0x28
 8028088:	f9b2 302e 	ldrsh.w	r3, [r2, #46]	@ 0x2e
 802808c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802808e:	6803      	ldr	r3, [r0, #0]
 8028090:	9304      	str	r3, [sp, #16]
 8028092:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8028094:	9308      	str	r3, [sp, #32]
 8028096:	9009      	str	r0, [sp, #36]	@ 0x24
 8028098:	920f      	str	r2, [sp, #60]	@ 0x3c
 802809a:	f000 f9c9 	bl	8028430 <omni2_sw_process_buffer_info>
 802809e:	7b23      	ldrb	r3, [r4, #12]
 80280a0:	9005      	str	r0, [sp, #20]
 80280a2:	2b01      	cmp	r3, #1
 80280a4:	d057      	beq.n	8028156 <omni2_sw_decode+0xe2>
 80280a6:	9b08      	ldr	r3, [sp, #32]
 80280a8:	9a06      	ldr	r2, [sp, #24]
 80280aa:	781b      	ldrb	r3, [r3, #0]
 80280ac:	f8d2 b028 	ldr.w	fp, [r2, #40]	@ 0x28
 80280b0:	2b01      	cmp	r3, #1
 80280b2:	d05b      	beq.n	802816c <omni2_sw_decode+0xf8>
 80280b4:	9b08      	ldr	r3, [sp, #32]
 80280b6:	9a04      	ldr	r2, [sp, #16]
 80280b8:	785b      	ldrb	r3, [r3, #1]
 80280ba:	2b01      	cmp	r3, #1
 80280bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80280be:	ea4f 0683 	mov.w	r6, r3, lsl #2
 80280c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80280c4:	bf14      	ite	ne
 80280c6:	2702      	movne	r7, #2
 80280c8:	2703      	moveq	r7, #3
 80280ca:	0098      	lsls	r0, r3, #2
 80280cc:	9b06      	ldr	r3, [sp, #24]
 80280ce:	f207 17b9 	addw	r7, r7, #441	@ 0x1b9
 80280d2:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 80280d6:	f202 64e4 	addw	r4, r2, #1764	@ 0x6e4
 80280da:	f103 0e32 	add.w	lr, r3, #50	@ 0x32
 80280de:	2500      	movs	r5, #0
 80280e0:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 80280e4:	b36b      	cbz	r3, 8028142 <omni2_sw_decode+0xce>
 80280e6:	f1bb 0f00 	cmp.w	fp, #0
 80280ea:	f854 3c10 	ldr.w	r3, [r4, #-16]
 80280ee:	6822      	ldr	r2, [r4, #0]
 80280f0:	dd09      	ble.n	8028106 <omni2_sw_decode+0x92>
 80280f2:	2100      	movs	r1, #0
 80280f4:	46a4      	mov	ip, r4
 80280f6:	3101      	adds	r1, #1
 80280f8:	681c      	ldr	r4, [r3, #0]
 80280fa:	6014      	str	r4, [r2, #0]
 80280fc:	458b      	cmp	fp, r1
 80280fe:	4433      	add	r3, r6
 8028100:	4402      	add	r2, r0
 8028102:	d1f8      	bne.n	80280f6 <omni2_sw_decode+0x82>
 8028104:	4664      	mov	r4, ip
 8028106:	3404      	adds	r4, #4
 8028108:	42bc      	cmp	r4, r7
 802810a:	d1e9      	bne.n	80280e0 <omni2_sw_decode+0x6c>
 802810c:	9a06      	ldr	r2, [sp, #24]
 802810e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028110:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8028112:	f892 2030 	ldrb.w	r2, [r2, #48]	@ 0x30
 8028116:	6283      	str	r3, [r0, #40]	@ 0x28
 8028118:	2302      	movs	r3, #2
 802811a:	f880 2030 	strb.w	r2, [r0, #48]	@ 0x30
 802811e:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 8028122:	9b05      	ldr	r3, [sp, #20]
 8028124:	b92b      	cbnz	r3, 8028132 <omni2_sw_decode+0xbe>
 8028126:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8028128:	2301      	movs	r3, #1
 802812a:	f881 3033 	strb.w	r3, [r1, #51]	@ 0x33
 802812e:	f881 3034 	strb.w	r3, [r1, #52]	@ 0x34
 8028132:	9b06      	ldr	r3, [sp, #24]
 8028134:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028136:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8028138:	9805      	ldr	r0, [sp, #20]
 802813a:	63d3      	str	r3, [r2, #60]	@ 0x3c
 802813c:	b011      	add	sp, #68	@ 0x44
 802813e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028142:	f1bb 0f00 	cmp.w	fp, #0
 8028146:	6822      	ldr	r2, [r4, #0]
 8028148:	dddd      	ble.n	8028106 <omni2_sw_decode+0x92>
 802814a:	3301      	adds	r3, #1
 802814c:	459b      	cmp	fp, r3
 802814e:	6015      	str	r5, [r2, #0]
 8028150:	4402      	add	r2, r0
 8028152:	d1fa      	bne.n	802814a <omni2_sw_decode+0xd6>
 8028154:	e7d7      	b.n	8028106 <omni2_sw_decode+0x92>
 8028156:	9904      	ldr	r1, [sp, #16]
 8028158:	4b5c      	ldr	r3, [pc, #368]	@ (80282cc <omni2_sw_decode+0x258>)
 802815a:	f8d1 26cc 	ldr.w	r2, [r1, #1740]	@ 0x6cc
 802815e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8028162:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028164:	648b      	str	r3, [r1, #72]	@ 0x48
 8028166:	2300      	movs	r3, #0
 8028168:	7313      	strb	r3, [r2, #12]
 802816a:	e79c      	b.n	80280a6 <omni2_sw_decode+0x32>
 802816c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802816e:	9904      	ldr	r1, [sp, #16]
 8028170:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028172:	f8cd b008 	str.w	fp, [sp, #8]
 8028176:	0094      	lsls	r4, r2, #2
 8028178:	9a06      	ldr	r2, [sp, #24]
 802817a:	3232      	adds	r2, #50	@ 0x32
 802817c:	920e      	str	r2, [sp, #56]	@ 0x38
 802817e:	f201 62d4 	addw	r2, r1, #1748	@ 0x6d4
 8028182:	920c      	str	r2, [sp, #48]	@ 0x30
 8028184:	460a      	mov	r2, r1
 8028186:	3298      	adds	r2, #152	@ 0x98
 8028188:	009b      	lsls	r3, r3, #2
 802818a:	920d      	str	r2, [sp, #52]	@ 0x34
 802818c:	f201 62e4 	addw	r2, r1, #1764	@ 0x6e4
 8028190:	9201      	str	r2, [sp, #4]
 8028192:	461d      	mov	r5, r3
 8028194:	9a02      	ldr	r2, [sp, #8]
 8028196:	9904      	ldr	r1, [sp, #16]
 8028198:	f8dd 9004 	ldr.w	r9, [sp, #4]
 802819c:	9407      	str	r4, [sp, #28]
 802819e:	2a30      	cmp	r2, #48	@ 0x30
 80281a0:	4613      	mov	r3, r2
 80281a2:	bfa8      	it	ge
 80281a4:	2330      	movge	r3, #48	@ 0x30
 80281a6:	4698      	mov	r8, r3
 80281a8:	ae0c      	add	r6, sp, #48	@ 0x30
 80281aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80281ac:	f8c1 86d0 	str.w	r8, [r1, #1744]	@ 0x6d0
 80281b0:	e896 04c0 	ldmia.w	r6, {r6, r7, sl}
 80281b4:	fb08 f303 	mul.w	r3, r8, r3
 80281b8:	009b      	lsls	r3, r3, #2
 80281ba:	ebc8 0202 	rsb	r2, r8, r2
 80281be:	9303      	str	r3, [sp, #12]
 80281c0:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80281c4:	9202      	str	r2, [sp, #8]
 80281c6:	46bb      	mov	fp, r7
 80281c8:	461c      	mov	r4, r3
 80281ca:	f81a 1f01 	ldrb.w	r1, [sl, #1]!
 80281ce:	2900      	cmp	r1, #0
 80281d0:	d15c      	bne.n	802828c <omni2_sw_decode+0x218>
 80281d2:	f1b8 0f00 	cmp.w	r8, #0
 80281d6:	dd03      	ble.n	80281e0 <omni2_sw_decode+0x16c>
 80281d8:	4622      	mov	r2, r4
 80281da:	4638      	mov	r0, r7
 80281dc:	f005 fcba 	bl	802db54 <memset>
 80281e0:	9b01      	ldr	r3, [sp, #4]
 80281e2:	3604      	adds	r6, #4
 80281e4:	429e      	cmp	r6, r3
 80281e6:	f107 07c0 	add.w	r7, r7, #192	@ 0xc0
 80281ea:	d1ee      	bne.n	80281ca <omni2_sw_decode+0x156>
 80281ec:	9a05      	ldr	r2, [sp, #20]
 80281ee:	4623      	mov	r3, r4
 80281f0:	9c07      	ldr	r4, [sp, #28]
 80281f2:	2a00      	cmp	r2, #0
 80281f4:	d05d      	beq.n	80282b2 <omni2_sw_decode+0x23e>
 80281f6:	9a06      	ldr	r2, [sp, #24]
 80281f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80281fa:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80281fc:	63ca      	str	r2, [r1, #60]	@ 0x3c
 80281fe:	9a08      	ldr	r2, [sp, #32]
 8028200:	f892 a001 	ldrb.w	sl, [r2, #1]
 8028204:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8028206:	f1ba 0f01 	cmp.w	sl, #1
 802820a:	fb08 fe02 	mul.w	lr, r8, r2
 802820e:	bf14      	ite	ne
 8028210:	f04f 0c02 	movne.w	ip, #2
 8028214:	f04f 0c03 	moveq.w	ip, #3
 8028218:	9a04      	ldr	r2, [sp, #16]
 802821a:	f20c 1cb9 	addw	ip, ip, #441	@ 0x1b9
 802821e:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
 8028222:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8028226:	f1b8 0f00 	cmp.w	r8, #0
 802822a:	f8d9 7000 	ldr.w	r7, [r9]
 802822e:	dd0d      	ble.n	802824c <omni2_sw_decode+0x1d8>
 8028230:	eb03 060b 	add.w	r6, r3, fp
 8028234:	4658      	mov	r0, fp
 8028236:	4639      	mov	r1, r7
 8028238:	f850 2b04 	ldr.w	r2, [r0], #4
 802823c:	f302 021c 	ssat	r2, #29, r2
 8028240:	4286      	cmp	r6, r0
 8028242:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8028246:	600a      	str	r2, [r1, #0]
 8028248:	4421      	add	r1, r4
 802824a:	d1f5      	bne.n	8028238 <omni2_sw_decode+0x1c4>
 802824c:	4477      	add	r7, lr
 802824e:	f849 7b04 	str.w	r7, [r9], #4
 8028252:	45cc      	cmp	ip, r9
 8028254:	f10b 0bc0 	add.w	fp, fp, #192	@ 0xc0
 8028258:	d1e5      	bne.n	8028226 <omni2_sw_decode+0x1b2>
 802825a:	9b02      	ldr	r3, [sp, #8]
 802825c:	2b00      	cmp	r3, #0
 802825e:	d199      	bne.n	8028194 <omni2_sw_decode+0x120>
 8028260:	9c06      	ldr	r4, [sp, #24]
 8028262:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028264:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8028266:	6282      	str	r2, [r0, #40]	@ 0x28
 8028268:	469b      	mov	fp, r3
 802826a:	f894 2030 	ldrb.w	r2, [r4, #48]	@ 0x30
 802826e:	f880 2030 	strb.w	r2, [r0, #48]	@ 0x30
 8028272:	f1ba 0f01 	cmp.w	sl, #1
 8028276:	f8c0 b033 	str.w	fp, [r0, #51]	@ 0x33
 802827a:	f8c0 b037 	str.w	fp, [r0, #55]	@ 0x37
 802827e:	f8a0 b03b 	strh.w	fp, [r0, #59]	@ 0x3b
 8028282:	d01d      	beq.n	80282c0 <omni2_sw_decode+0x24c>
 8028284:	2302      	movs	r3, #2
 8028286:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 802828a:	e74a      	b.n	8028122 <omni2_sw_decode+0xae>
 802828c:	f1b8 0f00 	cmp.w	r8, #0
 8028290:	6833      	ldr	r3, [r6, #0]
 8028292:	dd0a      	ble.n	80282aa <omni2_sw_decode+0x236>
 8028294:	eb07 0e04 	add.w	lr, r7, r4
 8028298:	4638      	mov	r0, r7
 802829a:	4619      	mov	r1, r3
 802829c:	680a      	ldr	r2, [r1, #0]
 802829e:	10d2      	asrs	r2, r2, #3
 80282a0:	f840 2b04 	str.w	r2, [r0], #4
 80282a4:	4570      	cmp	r0, lr
 80282a6:	4429      	add	r1, r5
 80282a8:	d1f8      	bne.n	802829c <omni2_sw_decode+0x228>
 80282aa:	9a03      	ldr	r2, [sp, #12]
 80282ac:	189a      	adds	r2, r3, r2
 80282ae:	6032      	str	r2, [r6, #0]
 80282b0:	e796      	b.n	80281e0 <omni2_sw_decode+0x16c>
 80282b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80282b4:	9303      	str	r3, [sp, #12]
 80282b6:	f000 f9f9 	bl	80286ac <omni2_sw>
 80282ba:	9b03      	ldr	r3, [sp, #12]
 80282bc:	9005      	str	r0, [sp, #20]
 80282be:	e79e      	b.n	80281fe <omni2_sw_decode+0x18a>
 80282c0:	2303      	movs	r3, #3
 80282c2:	f880 a035 	strb.w	sl, [r0, #53]	@ 0x35
 80282c6:	f880 3032 	strb.w	r3, [r0, #50]	@ 0x32
 80282ca:	e72a      	b.n	8028122 <omni2_sw_decode+0xae>
 80282cc:	0803832c 	.word	0x0803832c

080282d0 <omni2_sw_init_heap>:
 80282d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80282d4:	4604      	mov	r4, r0
 80282d6:	f500 7666 	add.w	r6, r0, #920	@ 0x398
 80282da:	460f      	mov	r7, r1
 80282dc:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 80282e0:	4630      	mov	r0, r6
 80282e2:	2100      	movs	r1, #0
 80282e4:	f005 fc36 	bl	802db54 <memset>
 80282e8:	f894 36c8 	ldrb.w	r3, [r4, #1736]	@ 0x6c8
 80282ec:	4a3e      	ldr	r2, [pc, #248]	@ (80283e8 <omni2_sw_init_heap+0x118>)
 80282ee:	5cd5      	ldrb	r5, [r2, r3]
 80282f0:	2d06      	cmp	r5, #6
 80282f2:	bfc6      	itte	gt
 80282f4:	2502      	movgt	r5, #2
 80282f6:	f04f 38ff 	movgt.w	r8, #4294967295
 80282fa:	f04f 0800 	movle.w	r8, #0
 80282fe:	2f0a      	cmp	r7, #10
 8028300:	f8c4 56cc 	str.w	r5, [r4, #1740]	@ 0x6cc
 8028304:	d04c      	beq.n	80283a0 <omni2_sw_init_heap+0xd0>
 8028306:	2f14      	cmp	r7, #20
 8028308:	d062      	beq.n	80283d0 <omni2_sw_init_heap+0x100>
 802830a:	2f1e      	cmp	r7, #30
 802830c:	d035      	beq.n	802837a <omni2_sw_init_heap+0xaa>
 802830e:	4b37      	ldr	r3, [pc, #220]	@ (80283ec <omni2_sw_init_heap+0x11c>)
 8028310:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8028314:	64a3      	str	r3, [r4, #72]	@ 0x48
 8028316:	f504 707e 	add.w	r0, r4, #1016	@ 0x3f8
 802831a:	f204 43b4 	addw	r3, r4, #1204	@ 0x4b4
 802831e:	f204 414c 	addw	r1, r4, #1100	@ 0x44c
 8028322:	f504 6294 	add.w	r2, r4, #1184	@ 0x4a0
 8028326:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8028328:	6321      	str	r1, [r4, #48]	@ 0x30
 802832a:	63e2      	str	r2, [r4, #60]	@ 0x3c
 802832c:	6423      	str	r3, [r4, #64]	@ 0x40
 802832e:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8028332:	2100      	movs	r1, #0
 8028334:	4630      	mov	r0, r6
 8028336:	f005 fc0d 	bl	802db54 <memset>
 802833a:	4a2d      	ldr	r2, [pc, #180]	@ (80283f0 <omni2_sw_init_heap+0x120>)
 802833c:	4b2d      	ldr	r3, [pc, #180]	@ (80283f4 <omni2_sw_init_heap+0x124>)
 802833e:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 8028342:	6819      	ldr	r1, [r3, #0]
 8028344:	67a6      	str	r6, [r4, #120]	@ 0x78
 8028346:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 802834a:	3b01      	subs	r3, #1
 802834c:	f504 62a6 	add.w	r2, r4, #1328	@ 0x530
 8028350:	009b      	lsls	r3, r3, #2
 8028352:	18f7      	adds	r7, r6, r3
 8028354:	65e6      	str	r6, [r4, #92]	@ 0x5c
 8028356:	4413      	add	r3, r2
 8028358:	6626      	str	r6, [r4, #96]	@ 0x60
 802835a:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
 802835e:	424e      	negs	r6, r1
 8028360:	2500      	movs	r5, #0
 8028362:	4640      	mov	r0, r8
 8028364:	6667      	str	r7, [r4, #100]	@ 0x64
 8028366:	6763      	str	r3, [r4, #116]	@ 0x74
 8028368:	67e2      	str	r2, [r4, #124]	@ 0x7c
 802836a:	66e2      	str	r2, [r4, #108]	@ 0x6c
 802836c:	6722      	str	r2, [r4, #112]	@ 0x70
 802836e:	65a1      	str	r1, [r4, #88]	@ 0x58
 8028370:	66a6      	str	r6, [r4, #104]	@ 0x68
 8028372:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
 8028376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802837a:	4b1f      	ldr	r3, [pc, #124]	@ (80283f8 <omni2_sw_init_heap+0x128>)
 802837c:	491f      	ldr	r1, [pc, #124]	@ (80283fc <omni2_sw_init_heap+0x12c>)
 802837e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8028382:	4f1f      	ldr	r7, [pc, #124]	@ (8028400 <omni2_sw_init_heap+0x130>)
 8028384:	481f      	ldr	r0, [pc, #124]	@ (8028404 <omni2_sw_init_heap+0x134>)
 8028386:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8028388:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 802838c:	0093      	lsls	r3, r2, #2
 802838e:	2234      	movs	r2, #52	@ 0x34
 8028390:	4419      	add	r1, r3
 8028392:	fb02 0205 	mla	r2, r2, r5, r0
 8028396:	443b      	add	r3, r7
 8028398:	60e1      	str	r1, [r4, #12]
 802839a:	6223      	str	r3, [r4, #32]
 802839c:	6562      	str	r2, [r4, #84]	@ 0x54
 802839e:	e7b6      	b.n	802830e <omni2_sw_init_heap+0x3e>
 80283a0:	4b19      	ldr	r3, [pc, #100]	@ (8028408 <omni2_sw_init_heap+0x138>)
 80283a2:	481a      	ldr	r0, [pc, #104]	@ (802840c <omni2_sw_init_heap+0x13c>)
 80283a4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80283a8:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80283aa:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 80283ae:	0093      	lsls	r3, r2, #2
 80283b0:	4f17      	ldr	r7, [pc, #92]	@ (8028410 <omni2_sw_init_heap+0x140>)
 80283b2:	4918      	ldr	r1, [pc, #96]	@ (8028414 <omni2_sw_init_heap+0x144>)
 80283b4:	4a18      	ldr	r2, [pc, #96]	@ (8028418 <omni2_sw_init_heap+0x148>)
 80283b6:	4418      	add	r0, r3
 80283b8:	60a0      	str	r0, [r4, #8]
 80283ba:	eb05 0045 	add.w	r0, r5, r5, lsl #1
 80283be:	443b      	add	r3, r7
 80283c0:	eb02 1245 	add.w	r2, r2, r5, lsl #5
 80283c4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 80283c8:	60e3      	str	r3, [r4, #12]
 80283ca:	6221      	str	r1, [r4, #32]
 80283cc:	6562      	str	r2, [r4, #84]	@ 0x54
 80283ce:	e79e      	b.n	802830e <omni2_sw_init_heap+0x3e>
 80283d0:	4b12      	ldr	r3, [pc, #72]	@ (802841c <omni2_sw_init_heap+0x14c>)
 80283d2:	4813      	ldr	r0, [pc, #76]	@ (8028420 <omni2_sw_init_heap+0x150>)
 80283d4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80283d8:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80283da:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 80283de:	0093      	lsls	r3, r2, #2
 80283e0:	4f10      	ldr	r7, [pc, #64]	@ (8028424 <omni2_sw_init_heap+0x154>)
 80283e2:	4911      	ldr	r1, [pc, #68]	@ (8028428 <omni2_sw_init_heap+0x158>)
 80283e4:	4a11      	ldr	r2, [pc, #68]	@ (802842c <omni2_sw_init_heap+0x15c>)
 80283e6:	e7e6      	b.n	80283b6 <omni2_sw_init_heap+0xe6>
 80283e8:	08038560 	.word	0x08038560
 80283ec:	0803832c 	.word	0x0803832c
 80283f0:	08038194 	.word	0x08038194
 80283f4:	080381a8 	.word	0x080381a8
 80283f8:	08038308 	.word	0x08038308
 80283fc:	080383ec 	.word	0x080383ec
 8028400:	08038338 	.word	0x08038338
 8028404:	080381ac 	.word	0x080381ac
 8028408:	08038320 	.word	0x08038320
 802840c:	0803850c 	.word	0x0803850c
 8028410:	08038464 	.word	0x08038464
 8028414:	080383a4 	.word	0x080383a4
 8028418:	08038248 	.word	0x08038248
 802841c:	08038314 	.word	0x08038314
 8028420:	080384b8 	.word	0x080384b8
 8028424:	08038410 	.word	0x08038410
 8028428:	0803835c 	.word	0x0803835c
 802842c:	080382a8 	.word	0x080382a8

08028430 <omni2_sw_process_buffer_info>:
 8028430:	6903      	ldr	r3, [r0, #16]
 8028432:	6801      	ldr	r1, [r0, #0]
 8028434:	2b01      	cmp	r3, #1
 8028436:	b4f0      	push	{r4, r5, r6, r7}
 8028438:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 802843a:	d047      	beq.n	80284cc <omni2_sw_process_buffer_info+0x9c>
 802843c:	f06f 0301 	mvn.w	r3, #1
 8028440:	6942      	ldr	r2, [r0, #20]
 8028442:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8028444:	f892 7031 	ldrb.w	r7, [r2, #49]	@ 0x31
 8028448:	f890 4031 	ldrb.w	r4, [r0, #49]	@ 0x31
 802844c:	f9b0 602c 	ldrsh.w	r6, [r0, #44]	@ 0x2c
 8028450:	2f00      	cmp	r7, #0
 8028452:	bf18      	it	ne
 8028454:	f06f 0301 	mvnne.w	r3, #1
 8028458:	2c00      	cmp	r4, #0
 802845a:	f892 4030 	ldrb.w	r4, [r2, #48]	@ 0x30
 802845e:	bf18      	it	ne
 8028460:	f06f 0301 	mvnne.w	r3, #1
 8028464:	2e01      	cmp	r6, #1
 8028466:	bfd8      	it	le
 8028468:	f06f 0301 	mvnle.w	r3, #1
 802846c:	2c09      	cmp	r4, #9
 802846e:	d834      	bhi.n	80284da <omni2_sw_process_buffer_info+0xaa>
 8028470:	4e1b      	ldr	r6, [pc, #108]	@ (80284e0 <omni2_sw_process_buffer_info+0xb0>)
 8028472:	5d34      	ldrb	r4, [r6, r4]
 8028474:	2c07      	cmp	r4, #7
 8028476:	bf08      	it	eq
 8028478:	f06f 0301 	mvneq.w	r3, #1
 802847c:	f892 4033 	ldrb.w	r4, [r2, #51]	@ 0x33
 8028480:	b114      	cbz	r4, 8028488 <omni2_sw_process_buffer_info+0x58>
 8028482:	6814      	ldr	r4, [r2, #0]
 8028484:	f8c1 46d4 	str.w	r4, [r1, #1748]	@ 0x6d4
 8028488:	f892 4034 	ldrb.w	r4, [r2, #52]	@ 0x34
 802848c:	b114      	cbz	r4, 8028494 <omni2_sw_process_buffer_info+0x64>
 802848e:	6854      	ldr	r4, [r2, #4]
 8028490:	f8c1 46d8 	str.w	r4, [r1, #1752]	@ 0x6d8
 8028494:	f892 4035 	ldrb.w	r4, [r2, #53]	@ 0x35
 8028498:	b114      	cbz	r4, 80284a0 <omni2_sw_process_buffer_info+0x70>
 802849a:	6894      	ldr	r4, [r2, #8]
 802849c:	f8c1 46dc 	str.w	r4, [r1, #1756]	@ 0x6dc
 80284a0:	f892 4036 	ldrb.w	r4, [r2, #54]	@ 0x36
 80284a4:	b114      	cbz	r4, 80284ac <omni2_sw_process_buffer_info+0x7c>
 80284a6:	68d2      	ldr	r2, [r2, #12]
 80284a8:	f8c1 26e0 	str.w	r2, [r1, #1760]	@ 0x6e0
 80284ac:	786a      	ldrb	r2, [r5, #1]
 80284ae:	6844      	ldr	r4, [r0, #4]
 80284b0:	6805      	ldr	r5, [r0, #0]
 80284b2:	f8c1 56e4 	str.w	r5, [r1, #1764]	@ 0x6e4
 80284b6:	2a01      	cmp	r2, #1
 80284b8:	bf08      	it	eq
 80284ba:	6882      	ldreq	r2, [r0, #8]
 80284bc:	f8c1 46e8 	str.w	r4, [r1, #1768]	@ 0x6e8
 80284c0:	4618      	mov	r0, r3
 80284c2:	bf08      	it	eq
 80284c4:	f8c1 26ec 	streq.w	r2, [r1, #1772]	@ 0x6ec
 80284c8:	bcf0      	pop	{r4, r5, r6, r7}
 80284ca:	4770      	bx	lr
 80284cc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80284ce:	2b01      	cmp	r3, #1
 80284d0:	bf14      	ite	ne
 80284d2:	f06f 0301 	mvnne.w	r3, #1
 80284d6:	2300      	moveq	r3, #0
 80284d8:	e7b2      	b.n	8028440 <omni2_sw_process_buffer_info+0x10>
 80284da:	f06f 0301 	mvn.w	r3, #1
 80284de:	e7cd      	b.n	802847c <omni2_sw_process_buffer_info+0x4c>
 80284e0:	08038560 	.word	0x08038560

080284e4 <biquad_df1_cascade_mono_compute_omni2_q31>:
 80284e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284e8:	b08d      	sub	sp, #52	@ 0x34
 80284ea:	3310      	adds	r3, #16
 80284ec:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80284ee:	9304      	str	r3, [sp, #16]
 80284f0:	08a5      	lsrs	r5, r4, #2
 80284f2:	4616      	mov	r6, r2
 80284f4:	f004 0303 	and.w	r3, r4, #3
 80284f8:	9508      	str	r5, [sp, #32]
 80284fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80284fc:	012d      	lsls	r5, r5, #4
 80284fe:	460b      	mov	r3, r1
 8028500:	f856 2b1c 	ldr.w	r2, [r6], #28
 8028504:	9107      	str	r1, [sp, #28]
 8028506:	442b      	add	r3, r5
 8028508:	950b      	str	r5, [sp, #44]	@ 0x2c
 802850a:	9206      	str	r2, [sp, #24]
 802850c:	9605      	str	r6, [sp, #20]
 802850e:	9003      	str	r0, [sp, #12]
 8028510:	930a      	str	r3, [sp, #40]	@ 0x28
 8028512:	9905      	ldr	r1, [sp, #20]
 8028514:	9d04      	ldr	r5, [sp, #16]
 8028516:	f851 2c18 	ldr.w	r2, [r1, #-24]
 802851a:	f851 bc14 	ldr.w	fp, [r1, #-20]
 802851e:	f851 7c10 	ldr.w	r7, [r1, #-16]
 8028522:	f851 ec0c 	ldr.w	lr, [r1, #-12]
 8028526:	f851 cc08 	ldr.w	ip, [r1, #-8]
 802852a:	f851 8c04 	ldr.w	r8, [r1, #-4]
 802852e:	f855 0c10 	ldr.w	r0, [r5, #-16]
 8028532:	f855 1c0c 	ldr.w	r1, [r5, #-12]
 8028536:	f102 0901 	add.w	r9, r2, #1
 802853a:	9a08      	ldr	r2, [sp, #32]
 802853c:	e915 0018 	ldmdb	r5, {r3, r4}
 8028540:	2a00      	cmp	r2, #0
 8028542:	f000 80b0 	beq.w	80286a6 <biquad_df1_cascade_mono_compute_omni2_q31+0x1c2>
 8028546:	9d03      	ldr	r5, [sp, #12]
 8028548:	9201      	str	r2, [sp, #4]
 802854a:	f105 0610 	add.w	r6, r5, #16
 802854e:	9d07      	ldr	r5, [sp, #28]
 8028550:	46ca      	mov	sl, r9
 8028552:	3510      	adds	r5, #16
 8028554:	f856 2c10 	ldr.w	r2, [r6, #-16]
 8028558:	ea4f 09a2 	mov.w	r9, r2, asr #2
 802855c:	fb57 f210 	smmulr	r2, r7, r0
 8028560:	fb5b 2219 	smmlar	r2, fp, r9, r2
 8028564:	fb5e 2111 	smmlar	r1, lr, r1, r2
 8028568:	fb5c 1113 	smmlar	r1, ip, r3, r1
 802856c:	fb58 1414 	smmlar	r4, r8, r4, r1
 8028570:	f856 2c0c 	ldr.w	r2, [r6, #-12]
 8028574:	fa04 f40a 	lsl.w	r4, r4, sl
 8028578:	0061      	lsls	r1, r4, #1
 802857a:	f301 011e 	ssat	r1, #31, r1
 802857e:	0049      	lsls	r1, r1, #1
 8028580:	f845 1c10 	str.w	r1, [r5, #-16]
 8028584:	1092      	asrs	r2, r2, #2
 8028586:	fb5b f112 	smmulr	r1, fp, r2
 802858a:	fb57 1119 	smmlar	r1, r7, r9, r1
 802858e:	fb5e 1010 	smmlar	r0, lr, r0, r1
 8028592:	fb5c 0014 	smmlar	r0, ip, r4, r0
 8028596:	fb58 0313 	smmlar	r3, r8, r3, r0
 802859a:	f856 1c08 	ldr.w	r1, [r6, #-8]
 802859e:	fa03 f30a 	lsl.w	r3, r3, sl
 80285a2:	0058      	lsls	r0, r3, #1
 80285a4:	f300 001e 	ssat	r0, #31, r0
 80285a8:	0040      	lsls	r0, r0, #1
 80285aa:	f845 0c0c 	str.w	r0, [r5, #-12]
 80285ae:	1089      	asrs	r1, r1, #2
 80285b0:	fb5b f011 	smmulr	r0, fp, r1
 80285b4:	fb57 0012 	smmlar	r0, r7, r2, r0
 80285b8:	fb5e 0919 	smmlar	r9, lr, r9, r0
 80285bc:	fb5c 9913 	smmlar	r9, ip, r3, r9
 80285c0:	fb58 9414 	smmlar	r4, r8, r4, r9
 80285c4:	f856 9c04 	ldr.w	r9, [r6, #-4]
 80285c8:	fa04 f40a 	lsl.w	r4, r4, sl
 80285cc:	0060      	lsls	r0, r4, #1
 80285ce:	f300 001e 	ssat	r0, #31, r0
 80285d2:	0040      	lsls	r0, r0, #1
 80285d4:	f845 0c08 	str.w	r0, [r5, #-8]
 80285d8:	ea4f 00a9 	mov.w	r0, r9, asr #2
 80285dc:	fb5b f910 	smmulr	r9, fp, r0
 80285e0:	fb57 9911 	smmlar	r9, r7, r1, r9
 80285e4:	fb5e 9212 	smmlar	r2, lr, r2, r9
 80285e8:	fb5c 2214 	smmlar	r2, ip, r4, r2
 80285ec:	fb58 2313 	smmlar	r3, r8, r3, r2
 80285f0:	fa03 f30a 	lsl.w	r3, r3, sl
 80285f4:	005a      	lsls	r2, r3, #1
 80285f6:	f302 021e 	ssat	r2, #31, r2
 80285fa:	0052      	lsls	r2, r2, #1
 80285fc:	f845 2c04 	str.w	r2, [r5, #-4]
 8028600:	9a01      	ldr	r2, [sp, #4]
 8028602:	3a01      	subs	r2, #1
 8028604:	f106 0610 	add.w	r6, r6, #16
 8028608:	f105 0510 	add.w	r5, r5, #16
 802860c:	9201      	str	r2, [sp, #4]
 802860e:	d1a1      	bne.n	8028554 <biquad_df1_cascade_mono_compute_omni2_q31+0x70>
 8028610:	9a03      	ldr	r2, [sp, #12]
 8028612:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8028614:	46d1      	mov	r9, sl
 8028616:	442a      	add	r2, r5
 8028618:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 802861c:	9203      	str	r2, [sp, #12]
 802861e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028620:	2a00      	cmp	r2, #0
 8028622:	d03b      	beq.n	802869c <biquad_df1_cascade_mono_compute_omni2_q31+0x1b8>
 8028624:	9702      	str	r7, [sp, #8]
 8028626:	9201      	str	r2, [sp, #4]
 8028628:	9f03      	ldr	r7, [sp, #12]
 802862a:	e001      	b.n	8028630 <biquad_df1_cascade_mono_compute_omni2_q31+0x14c>
 802862c:	4613      	mov	r3, r2
 802862e:	4628      	mov	r0, r5
 8028630:	f857 5b04 	ldr.w	r5, [r7], #4
 8028634:	10ad      	asrs	r5, r5, #2
 8028636:	fb5b f215 	smmulr	r2, fp, r5
 802863a:	9e02      	ldr	r6, [sp, #8]
 802863c:	fb56 2210 	smmlar	r2, r6, r0, r2
 8028640:	fb5e 2211 	smmlar	r2, lr, r1, r2
 8028644:	fb5c 2213 	smmlar	r2, ip, r3, r2
 8028648:	fb58 2214 	smmlar	r2, r8, r4, r2
 802864c:	9e01      	ldr	r6, [sp, #4]
 802864e:	fa02 f209 	lsl.w	r2, r2, r9
 8028652:	0051      	lsls	r1, r2, #1
 8028654:	3e01      	subs	r6, #1
 8028656:	f301 011e 	ssat	r1, #31, r1
 802865a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802865e:	f84a 1b04 	str.w	r1, [sl], #4
 8028662:	461c      	mov	r4, r3
 8028664:	4601      	mov	r1, r0
 8028666:	9601      	str	r6, [sp, #4]
 8028668:	d1e0      	bne.n	802862c <biquad_df1_cascade_mono_compute_omni2_q31+0x148>
 802866a:	9c04      	ldr	r4, [sp, #16]
 802866c:	f844 3c04 	str.w	r3, [r4, #-4]
 8028670:	9b05      	ldr	r3, [sp, #20]
 8028672:	f844 5c10 	str.w	r5, [r4, #-16]
 8028676:	3318      	adds	r3, #24
 8028678:	9305      	str	r3, [sp, #20]
 802867a:	f104 0310 	add.w	r3, r4, #16
 802867e:	9304      	str	r3, [sp, #16]
 8028680:	9b07      	ldr	r3, [sp, #28]
 8028682:	9303      	str	r3, [sp, #12]
 8028684:	9b06      	ldr	r3, [sp, #24]
 8028686:	f844 0c0c 	str.w	r0, [r4, #-12]
 802868a:	3b01      	subs	r3, #1
 802868c:	f844 2c08 	str.w	r2, [r4, #-8]
 8028690:	9306      	str	r3, [sp, #24]
 8028692:	f47f af3e 	bne.w	8028512 <biquad_df1_cascade_mono_compute_omni2_q31+0x2e>
 8028696:	b00d      	add	sp, #52	@ 0x34
 8028698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802869c:	461a      	mov	r2, r3
 802869e:	4605      	mov	r5, r0
 80286a0:	4623      	mov	r3, r4
 80286a2:	4608      	mov	r0, r1
 80286a4:	e7e1      	b.n	802866a <biquad_df1_cascade_mono_compute_omni2_q31+0x186>
 80286a6:	f8dd a01c 	ldr.w	sl, [sp, #28]
 80286aa:	e7b8      	b.n	802861e <biquad_df1_cascade_mono_compute_omni2_q31+0x13a>

080286ac <omni2_sw>:
 80286ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286b0:	6943      	ldr	r3, [r0, #20]
 80286b2:	f8d0 9000 	ldr.w	r9, [r0]
 80286b6:	f893 e032 	ldrb.w	lr, [r3, #50]	@ 0x32
 80286ba:	f8d9 b6d0 	ldr.w	fp, [r9, #1744]	@ 0x6d0
 80286be:	b09d      	sub	sp, #116	@ 0x74
 80286c0:	4619      	mov	r1, r3
 80286c2:	931a      	str	r3, [sp, #104]	@ 0x68
 80286c4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80286c6:	9319      	str	r3, [sp, #100]	@ 0x64
 80286c8:	f109 0398 	add.w	r3, r9, #152	@ 0x98
 80286cc:	9311      	str	r3, [sp, #68]	@ 0x44
 80286ce:	f1be 0f01 	cmp.w	lr, #1
 80286d2:	f509 73ac 	add.w	r3, r9, #344	@ 0x158
 80286d6:	900e      	str	r0, [sp, #56]	@ 0x38
 80286d8:	9318      	str	r3, [sp, #96]	@ 0x60
 80286da:	f000 8353 	beq.w	8028d84 <omni2_sw+0x6d8>
 80286de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80286e0:	f8d3 c048 	ldr.w	ip, [r3, #72]	@ 0x48
 80286e4:	f1bc 3fff 	cmp.w	ip, #4294967295
 80286e8:	f000 8141 	beq.w	802896e <omni2_sw+0x2c2>
 80286ec:	689b      	ldr	r3, [r3, #8]
 80286ee:	681e      	ldr	r6, [r3, #0]
 80286f0:	2e00      	cmp	r6, #0
 80286f2:	f000 83c9 	beq.w	8028e88 <omni2_sw+0x7dc>
 80286f6:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 80286fa:	f1bc 0f1e 	cmp.w	ip, #30
 80286fe:	9307      	str	r3, [sp, #28]
 8028700:	f000 8326 	beq.w	8028d50 <omni2_sw+0x6a4>
 8028704:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028706:	f8d9 2048 	ldr.w	r2, [r9, #72]	@ 0x48
 802870a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 802870c:	f8d9 402c 	ldr.w	r4, [r9, #44]	@ 0x2c
 8028710:	f8d9 5030 	ldr.w	r5, [r9, #48]	@ 0x30
 8028714:	4413      	add	r3, r2
 8028716:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802871a:	3b01      	subs	r3, #1
 802871c:	009b      	lsls	r3, r3, #2
 802871e:	f509 727e 	add.w	r2, r9, #1016	@ 0x3f8
 8028722:	f209 4a4c 	addw	sl, r9, #1100	@ 0x44c
 8028726:	9203      	str	r2, [sp, #12]
 8028728:	f1bc 0f0a 	cmp.w	ip, #10
 802872c:	441a      	add	r2, r3
 802872e:	4453      	add	r3, sl
 8028730:	9204      	str	r2, [sp, #16]
 8028732:	9305      	str	r3, [sp, #20]
 8028734:	f106 07c0 	add.w	r7, r6, #192	@ 0xc0
 8028738:	f000 8129 	beq.w	802898e <omni2_sw+0x2e2>
 802873c:	f1bc 0f14 	cmp.w	ip, #20
 8028740:	f000 8125 	beq.w	802898e <omni2_sw+0x2e2>
 8028744:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8028748:	9306      	str	r3, [sp, #24]
 802874a:	4619      	mov	r1, r3
 802874c:	f1bb 0f00 	cmp.w	fp, #0
 8028750:	f8d9 33b8 	ldr.w	r3, [r9, #952]	@ 0x3b8
 8028754:	f8d1 e000 	ldr.w	lr, [r1]
 8028758:	f8d1 c004 	ldr.w	ip, [r1, #4]
 802875c:	dd61      	ble.n	8028822 <omni2_sw+0x176>
 802875e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8028760:	ea4f 028b 	mov.w	r2, fp, lsl #2
 8028764:	9208      	str	r2, [sp, #32]
 8028766:	eb01 0802 	add.w	r8, r1, r2
 802876a:	1f30      	subs	r0, r6, #4
 802876c:	f851 2b04 	ldr.w	r2, [r1], #4
 8028770:	fb5e f212 	smmulr	r2, lr, r2
 8028774:	fb5c f313 	smmulr	r3, ip, r3
 8028778:	fa83 f3a2 	qsub	r3, r2, r3
 802877c:	005b      	lsls	r3, r3, #1
 802877e:	4588      	cmp	r8, r1
 8028780:	f840 3f04 	str.w	r3, [r0, #4]!
 8028784:	d1f2      	bne.n	802876c <omni2_sw+0xc0>
 8028786:	f8c9 33b8 	str.w	r3, [r9, #952]	@ 0x3b8
 802878a:	9a06      	ldr	r2, [sp, #24]
 802878c:	9b08      	ldr	r3, [sp, #32]
 802878e:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8028790:	f8d2 e000 	ldr.w	lr, [r2]
 8028794:	f8d2 8004 	ldr.w	r8, [r2, #4]
 8028798:	469c      	mov	ip, r3
 802879a:	f8d9 33c8 	ldr.w	r3, [r9, #968]	@ 0x3c8
 802879e:	448c      	add	ip, r1
 80287a0:	f106 00bc 	add.w	r0, r6, #188	@ 0xbc
 80287a4:	f851 2b04 	ldr.w	r2, [r1], #4
 80287a8:	fb5e f212 	smmulr	r2, lr, r2
 80287ac:	fb58 f313 	smmulr	r3, r8, r3
 80287b0:	fa83 f3a2 	qsub	r3, r2, r3
 80287b4:	005b      	lsls	r3, r3, #1
 80287b6:	4561      	cmp	r1, ip
 80287b8:	f840 3f04 	str.w	r3, [r0, #4]!
 80287bc:	d1f2      	bne.n	80287a4 <omni2_sw+0xf8>
 80287be:	9905      	ldr	r1, [sp, #20]
 80287c0:	f8c9 33c8 	str.w	r3, [r9, #968]	@ 0x3c8
 80287c4:	f109 0e94 	add.w	lr, r9, #148	@ 0x94
 80287c8:	2000      	movs	r0, #0
 80287ca:	462b      	mov	r3, r5
 80287cc:	f85e 2f04 	ldr.w	r2, [lr, #4]!
 80287d0:	f853 cb04 	ldr.w	ip, [r3], #4
 80287d4:	fa8c f282 	qadd	r2, r2, ip
 80287d8:	f8ce 2000 	str.w	r2, [lr]
 80287dc:	3001      	adds	r0, #1
 80287de:	f857 2b04 	ldr.w	r2, [r7], #4
 80287e2:	602a      	str	r2, [r5, #0]
 80287e4:	4299      	cmp	r1, r3
 80287e6:	bf2c      	ite	cs
 80287e8:	461d      	movcs	r5, r3
 80287ea:	4655      	movcc	r5, sl
 80287ec:	4583      	cmp	fp, r0
 80287ee:	dcec      	bgt.n	80287ca <omni2_sw+0x11e>
 80287f0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80287f4:	f8dd c010 	ldr.w	ip, [sp, #16]
 80287f8:	f509 77aa 	add.w	r7, r9, #340	@ 0x154
 80287fc:	2000      	movs	r0, #0
 80287fe:	4623      	mov	r3, r4
 8028800:	f857 2f04 	ldr.w	r2, [r7, #4]!
 8028804:	f853 1b04 	ldr.w	r1, [r3], #4
 8028808:	fa81 f282 	qadd	r2, r2, r1
 802880c:	603a      	str	r2, [r7, #0]
 802880e:	3001      	adds	r0, #1
 8028810:	f856 2b04 	ldr.w	r2, [r6], #4
 8028814:	6022      	str	r2, [r4, #0]
 8028816:	459c      	cmp	ip, r3
 8028818:	bf2c      	ite	cs
 802881a:	461c      	movcs	r4, r3
 802881c:	4674      	movcc	r4, lr
 802881e:	4583      	cmp	fp, r0
 8028820:	dced      	bgt.n	80287fe <omni2_sw+0x152>
 8028822:	f8d9 304c 	ldr.w	r3, [r9, #76]	@ 0x4c
 8028826:	f8d9 003c 	ldr.w	r0, [r9, #60]	@ 0x3c
 802882a:	f8c9 402c 	str.w	r4, [r9, #44]	@ 0x2c
 802882e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8028832:	3b01      	subs	r3, #1
 8028834:	f209 41b4 	addw	r1, r9, #1204	@ 0x4b4
 8028838:	009b      	lsls	r3, r3, #2
 802883a:	f509 6294 	add.w	r2, r9, #1184	@ 0x4a0
 802883e:	920d      	str	r2, [sp, #52]	@ 0x34
 8028840:	910c      	str	r1, [sp, #48]	@ 0x30
 8028842:	441a      	add	r2, r3
 8028844:	18cb      	adds	r3, r1, r3
 8028846:	f8d9 1040 	ldr.w	r1, [r9, #64]	@ 0x40
 802884a:	f8c9 5030 	str.w	r5, [r9, #48]	@ 0x30
 802884e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8028850:	9305      	str	r3, [sp, #20]
 8028852:	f8d9 3020 	ldr.w	r3, [r9, #32]
 8028856:	f8d9 53d8 	ldr.w	r5, [r9, #984]	@ 0x3d8
 802885a:	f1bb 0f00 	cmp.w	fp, #0
 802885e:	e893 1100 	ldmia.w	r3, {r8, ip}
 8028862:	f8d9 33e8 	ldr.w	r3, [r9, #1000]	@ 0x3e8
 8028866:	dd42      	ble.n	80288ee <omni2_sw+0x242>
 8028868:	9a07      	ldr	r2, [sp, #28]
 802886a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 802886c:	9f18      	ldr	r7, [sp, #96]	@ 0x60
 802886e:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 8028872:	f8cd 900c 	str.w	r9, [sp, #12]
 8028876:	1f14      	subs	r4, r2, #4
 8028878:	f04f 0e00 	mov.w	lr, #0
 802887c:	46a1      	mov	r9, r4
 802887e:	680a      	ldr	r2, [r1, #0]
 8028880:	6834      	ldr	r4, [r6, #0]
 8028882:	fa82 f2a4 	qsub	r2, r4, r2
 8028886:	6032      	str	r2, [r6, #0]
 8028888:	683a      	ldr	r2, [r7, #0]
 802888a:	6804      	ldr	r4, [r0, #0]
 802888c:	fa84 f2a2 	qsub	r2, r2, r4
 8028890:	603a      	str	r2, [r7, #0]
 8028892:	fb52 f218 	smmulr	r2, r2, r8
 8028896:	fb63 221c 	smmlsr	r2, r3, ip, r2
 802889a:	0053      	lsls	r3, r2, #1
 802889c:	600b      	str	r3, [r1, #0]
 802889e:	6834      	ldr	r4, [r6, #0]
 80288a0:	fb54 f418 	smmulr	r4, r4, r8
 80288a4:	fb65 441c 	smmlsr	r4, r5, ip, r4
 80288a8:	0065      	lsls	r5, r4, #1
 80288aa:	6005      	str	r5, [r0, #0]
 80288ac:	f859 2f04 	ldr.w	r2, [r9, #4]!
 80288b0:	4c9e      	ldr	r4, [pc, #632]	@ (8028b2c <omni2_sw+0x480>)
 80288b2:	fb52 f214 	smmulr	r2, r2, r4
 80288b6:	0052      	lsls	r2, r2, #1
 80288b8:	6834      	ldr	r4, [r6, #0]
 80288ba:	fa82 f484 	qadd	r4, r4, r2
 80288be:	6034      	str	r4, [r6, #0]
 80288c0:	683c      	ldr	r4, [r7, #0]
 80288c2:	fa82 f284 	qadd	r2, r4, r2
 80288c6:	603a      	str	r2, [r7, #0]
 80288c8:	9a05      	ldr	r2, [sp, #20]
 80288ca:	428a      	cmp	r2, r1
 80288cc:	bf8c      	ite	hi
 80288ce:	3104      	addhi	r1, #4
 80288d0:	990c      	ldrls	r1, [sp, #48]	@ 0x30
 80288d2:	f10e 0e01 	add.w	lr, lr, #1
 80288d6:	4582      	cmp	sl, r0
 80288d8:	bf8c      	ite	hi
 80288da:	3004      	addhi	r0, #4
 80288dc:	980d      	ldrls	r0, [sp, #52]	@ 0x34
 80288de:	45f3      	cmp	fp, lr
 80288e0:	f106 0604 	add.w	r6, r6, #4
 80288e4:	f107 0704 	add.w	r7, r7, #4
 80288e8:	d1c9      	bne.n	802887e <omni2_sw+0x1d2>
 80288ea:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80288ee:	f8c9 53d8 	str.w	r5, [r9, #984]	@ 0x3d8
 80288f2:	f8c9 33e8 	str.w	r3, [r9, #1000]	@ 0x3e8
 80288f6:	f8c9 003c 	str.w	r0, [r9, #60]	@ 0x3c
 80288fa:	f8c9 1040 	str.w	r1, [r9, #64]	@ 0x40
 80288fe:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8028900:	f8d9 2054 	ldr.w	r2, [r9, #84]	@ 0x54
 8028904:	f8cd b000 	str.w	fp, [sp]
 8028908:	4608      	mov	r0, r1
 802890a:	f509 6399 	add.w	r3, r9, #1224	@ 0x4c8
 802890e:	f7ff fde9 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028912:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8028914:	f8d9 2054 	ldr.w	r2, [r9, #84]	@ 0x54
 8028918:	f8cd b000 	str.w	fp, [sp]
 802891c:	f509 639d 	add.w	r3, r9, #1256	@ 0x4e8
 8028920:	4608      	mov	r0, r1
 8028922:	f7ff fddf 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028926:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8028928:	785b      	ldrb	r3, [r3, #1]
 802892a:	2b01      	cmp	r3, #1
 802892c:	f000 8206 	beq.w	8028d3c <omni2_sw+0x690>
 8028930:	f1bb 0f00 	cmp.w	fp, #0
 8028934:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 8028938:	dd15      	ble.n	8028966 <omni2_sw+0x2ba>
 802893a:	f509 73aa 	add.w	r3, r9, #340	@ 0x154
 802893e:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8028942:	eb01 058b 	add.w	r5, r1, fp, lsl #2
 8028946:	4618      	mov	r0, r3
 8028948:	f851 3b04 	ldr.w	r3, [r1], #4
 802894c:	f854 2f04 	ldr.w	r2, [r4, #4]!
 8028950:	105b      	asrs	r3, r3, #1
 8028952:	fa83 f282 	qadd	r2, r2, r3
 8028956:	6022      	str	r2, [r4, #0]
 8028958:	f850 2f04 	ldr.w	r2, [r0, #4]!
 802895c:	fa83 f382 	qadd	r3, r2, r3
 8028960:	42a9      	cmp	r1, r5
 8028962:	6003      	str	r3, [r0, #0]
 8028964:	d1f0      	bne.n	8028948 <omni2_sw+0x29c>
 8028966:	2000      	movs	r0, #0
 8028968:	b01d      	add	sp, #116	@ 0x74
 802896a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802896e:	f00e 037f 	and.w	r3, lr, #127	@ 0x7f
 8028972:	3b02      	subs	r3, #2
 8028974:	2b01      	cmp	r3, #1
 8028976:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028978:	f240 816a 	bls.w	8028c50 <omni2_sw+0x5a4>
 802897c:	689b      	ldr	r3, [r3, #8]
 802897e:	681e      	ldr	r6, [r3, #0]
 8028980:	2e00      	cmp	r6, #0
 8028982:	f000 8281 	beq.w	8028e88 <omni2_sw+0x7dc>
 8028986:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 802898a:	9307      	str	r3, [sp, #28]
 802898c:	e6ba      	b.n	8028704 <omni2_sw+0x58>
 802898e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8028992:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028994:	f8cd b000 	str.w	fp, [sp]
 8028998:	f509 7366 	add.w	r3, r9, #920	@ 0x398
 802899c:	4631      	mov	r1, r6
 802899e:	f7ff fda1 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 80289a2:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80289a6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80289a8:	f8cd b000 	str.w	fp, [sp]
 80289ac:	f509 7372 	add.w	r3, r9, #968	@ 0x3c8
 80289b0:	4639      	mov	r1, r7
 80289b2:	f7ff fd97 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 80289b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80289b8:	689b      	ldr	r3, [r3, #8]
 80289ba:	681b      	ldr	r3, [r3, #0]
 80289bc:	f1bb 0f00 	cmp.w	fp, #0
 80289c0:	f103 0ec0 	add.w	lr, r3, #192	@ 0xc0
 80289c4:	f340 826e 	ble.w	8028ea4 <omni2_sw+0x7f8>
 80289c8:	ea4f 038b 	mov.w	r3, fp, lsl #2
 80289cc:	f506 78be 	add.w	r8, r6, #380	@ 0x17c
 80289d0:	9306      	str	r3, [sp, #24]
 80289d2:	f8cd 9020 	str.w	r9, [sp, #32]
 80289d6:	18f3      	adds	r3, r6, r3
 80289d8:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80289dc:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80289e0:	46c4      	mov	ip, r8
 80289e2:	4630      	mov	r0, r6
 80289e4:	469b      	mov	fp, r3
 80289e6:	462b      	mov	r3, r5
 80289e8:	f850 2b04 	ldr.w	r2, [r0], #4
 80289ec:	f853 1b04 	ldr.w	r1, [r3], #4
 80289f0:	fa81 f282 	qadd	r2, r2, r1
 80289f4:	f84c 2f04 	str.w	r2, [ip, #4]!
 80289f8:	f85e 2b04 	ldr.w	r2, [lr], #4
 80289fc:	602a      	str	r2, [r5, #0]
 80289fe:	4599      	cmp	r9, r3
 8028a00:	bf2c      	ite	cs
 8028a02:	461d      	movcs	r5, r3
 8028a04:	4655      	movcc	r5, sl
 8028a06:	4558      	cmp	r0, fp
 8028a08:	d1ed      	bne.n	80289e6 <omni2_sw+0x33a>
 8028a0a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8028a0e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8028a12:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8028a16:	f8c9 5030 	str.w	r5, [r9, #48]	@ 0x30
 8028a1a:	4639      	mov	r1, r7
 8028a1c:	f509 736a 	add.w	r3, r9, #936	@ 0x3a8
 8028a20:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8028a22:	f8cd b000 	str.w	fp, [sp]
 8028a26:	f7ff fd5d 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028a2a:	4631      	mov	r1, r6
 8028a2c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8028a30:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028a32:	f8cd b000 	str.w	fp, [sp]
 8028a36:	f509 736e 	add.w	r3, r9, #952	@ 0x3b8
 8028a3a:	f7ff fd53 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028a3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028a40:	9903      	ldr	r1, [sp, #12]
 8028a42:	689b      	ldr	r3, [r3, #8]
 8028a44:	f8dd c010 	ldr.w	ip, [sp, #16]
 8028a48:	6818      	ldr	r0, [r3, #0]
 8028a4a:	9b06      	ldr	r3, [sp, #24]
 8028a4c:	4403      	add	r3, r0
 8028a4e:	36bc      	adds	r6, #188	@ 0xbc
 8028a50:	469e      	mov	lr, r3
 8028a52:	f509 77aa 	add.w	r7, r9, #340	@ 0x154
 8028a56:	f109 0594 	add.w	r5, r9, #148	@ 0x94
 8028a5a:	4623      	mov	r3, r4
 8028a5c:	f856 2f04 	ldr.w	r2, [r6, #4]!
 8028a60:	f853 ab04 	ldr.w	sl, [r3], #4
 8028a64:	fa8a f282 	qadd	r2, r2, sl
 8028a68:	f847 2f04 	str.w	r2, [r7, #4]!
 8028a6c:	f850 2b04 	ldr.w	r2, [r0], #4
 8028a70:	6022      	str	r2, [r4, #0]
 8028a72:	f858 2f04 	ldr.w	r2, [r8, #4]!
 8028a76:	f845 2f04 	str.w	r2, [r5, #4]!
 8028a7a:	459c      	cmp	ip, r3
 8028a7c:	bf2c      	ite	cs
 8028a7e:	461c      	movcs	r4, r3
 8028a80:	460c      	movcc	r4, r1
 8028a82:	4570      	cmp	r0, lr
 8028a84:	d1e9      	bne.n	8028a5a <omni2_sw+0x3ae>
 8028a86:	f8d9 204c 	ldr.w	r2, [r9, #76]	@ 0x4c
 8028a8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028a8c:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 8028a90:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8028a92:	f8c9 402c 	str.w	r4, [r9, #44]	@ 0x2c
 8028a96:	3a01      	subs	r2, #1
 8028a98:	f209 40b4 	addw	r0, r9, #1204	@ 0x4b4
 8028a9c:	0092      	lsls	r2, r2, #2
 8028a9e:	f509 6194 	add.w	r1, r9, #1184	@ 0x4a0
 8028aa2:	910d      	str	r1, [sp, #52]	@ 0x34
 8028aa4:	2b0a      	cmp	r3, #10
 8028aa6:	4411      	add	r1, r2
 8028aa8:	4402      	add	r2, r0
 8028aaa:	900c      	str	r0, [sp, #48]	@ 0x30
 8028aac:	910f      	str	r1, [sp, #60]	@ 0x3c
 8028aae:	9205      	str	r2, [sp, #20]
 8028ab0:	f8d9 003c 	ldr.w	r0, [r9, #60]	@ 0x3c
 8028ab4:	f8d9 1040 	ldr.w	r1, [r9, #64]	@ 0x40
 8028ab8:	f040 813c 	bne.w	8028d34 <omni2_sw+0x688>
 8028abc:	f8d9 3020 	ldr.w	r3, [r9, #32]
 8028ac0:	f8d9 23d8 	ldr.w	r2, [r9, #984]	@ 0x3d8
 8028ac4:	9203      	str	r2, [sp, #12]
 8028ac6:	681a      	ldr	r2, [r3, #0]
 8028ac8:	9212      	str	r2, [sp, #72]	@ 0x48
 8028aca:	685a      	ldr	r2, [r3, #4]
 8028acc:	9213      	str	r2, [sp, #76]	@ 0x4c
 8028ace:	689a      	ldr	r2, [r3, #8]
 8028ad0:	9214      	str	r2, [sp, #80]	@ 0x50
 8028ad2:	68da      	ldr	r2, [r3, #12]
 8028ad4:	9215      	str	r2, [sp, #84]	@ 0x54
 8028ad6:	691a      	ldr	r2, [r3, #16]
 8028ad8:	9216      	str	r2, [sp, #88]	@ 0x58
 8028ada:	f8d9 23e0 	ldr.w	r2, [r9, #992]	@ 0x3e0
 8028ade:	695b      	ldr	r3, [r3, #20]
 8028ae0:	9204      	str	r2, [sp, #16]
 8028ae2:	f8d9 23e4 	ldr.w	r2, [r9, #996]	@ 0x3e4
 8028ae6:	9317      	str	r3, [sp, #92]	@ 0x5c
 8028ae8:	9206      	str	r2, [sp, #24]
 8028aea:	f8d9 33dc 	ldr.w	r3, [r9, #988]	@ 0x3dc
 8028aee:	f8d9 23e8 	ldr.w	r2, [r9, #1000]	@ 0x3e8
 8028af2:	f8d9 a3ec 	ldr.w	sl, [r9, #1004]	@ 0x3ec
 8028af6:	f8d9 83f0 	ldr.w	r8, [r9, #1008]	@ 0x3f0
 8028afa:	f1bb 0f00 	cmp.w	fp, #0
 8028afe:	4616      	mov	r6, r2
 8028b00:	461f      	mov	r7, r3
 8028b02:	f8d9 23f4 	ldr.w	r2, [r9, #1012]	@ 0x3f4
 8028b06:	f340 81c2 	ble.w	8028e8e <omni2_sw+0x7e2>
 8028b0a:	9c07      	ldr	r4, [sp, #28]
 8028b0c:	f8cd 906c 	str.w	r9, [sp, #108]	@ 0x6c
 8028b10:	3c04      	subs	r4, #4
 8028b12:	f04f 0e00 	mov.w	lr, #0
 8028b16:	9407      	str	r4, [sp, #28]
 8028b18:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8028b1c:	9d18      	ldr	r5, [sp, #96]	@ 0x60
 8028b1e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028b20:	9208      	str	r2, [sp, #32]
 8028b22:	46c3      	mov	fp, r8
 8028b24:	46f4      	mov	ip, lr
 8028b26:	46b1      	mov	r9, r6
 8028b28:	4698      	mov	r8, r3
 8028b2a:	e007      	b.n	8028b3c <omni2_sw+0x490>
 8028b2c:	40126116 	.word	0x40126116
 8028b30:	9304      	str	r3, [sp, #16]
 8028b32:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8028b36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028b38:	9303      	str	r3, [sp, #12]
 8028b3a:	46b3      	mov	fp, r6
 8028b3c:	4686      	mov	lr, r0
 8028b3e:	682b      	ldr	r3, [r5, #0]
 8028b40:	f85e 6b04 	ldr.w	r6, [lr], #4
 8028b44:	fa86 f3a3 	qsub	r3, r3, r6
 8028b48:	460a      	mov	r2, r1
 8028b4a:	602b      	str	r3, [r5, #0]
 8028b4c:	f852 3b04 	ldr.w	r3, [r2], #4
 8028b50:	6826      	ldr	r6, [r4, #0]
 8028b52:	920b      	str	r2, [sp, #44]	@ 0x2c
 8028b54:	fa83 f6a6 	qsub	r6, r6, r3
 8028b58:	6026      	str	r6, [r4, #0]
 8028b5a:	682b      	ldr	r3, [r5, #0]
 8028b5c:	930a      	str	r3, [sp, #40]	@ 0x28
 8028b5e:	461f      	mov	r7, r3
 8028b60:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8028b62:	fb57 f312 	smmulr	r3, r7, r2
 8028b66:	fb56 f612 	smmulr	r6, r6, r2
 8028b6a:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8028b6c:	fb57 3319 	smmlar	r3, r7, r9, r3
 8028b70:	9a03      	ldr	r2, [sp, #12]
 8028b72:	fb57 6612 	smmlar	r6, r7, r2, r6
 8028b76:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 8028b78:	fb57 3a1a 	smmlar	sl, r7, sl, r3
 8028b7c:	fb57 6818 	smmlar	r8, r7, r8, r6
 8028b80:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8028b82:	4633      	mov	r3, r6
 8028b84:	fb56 aa1b 	smmlar	sl, r6, fp, sl
 8028b88:	9e04      	ldr	r6, [sp, #16]
 8028b8a:	fb53 8816 	smmlar	r8, r3, r6, r8
 8028b8e:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8028b90:	9a08      	ldr	r2, [sp, #32]
 8028b92:	4633      	mov	r3, r6
 8028b94:	fb56 aa12 	smmlar	sl, r6, r2, sl
 8028b98:	9e06      	ldr	r6, [sp, #24]
 8028b9a:	fb53 8816 	smmlar	r8, r3, r6, r8
 8028b9e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8028ba0:	fa0a fa02 	lsl.w	sl, sl, r2
 8028ba4:	f30a 061e 	ssat	r6, #31, sl
 8028ba8:	0076      	lsls	r6, r6, #1
 8028baa:	600e      	str	r6, [r1, #0]
 8028bac:	6821      	ldr	r1, [r4, #0]
 8028bae:	9109      	str	r1, [sp, #36]	@ 0x24
 8028bb0:	fa08 f802 	lsl.w	r8, r8, r2
 8028bb4:	9907      	ldr	r1, [sp, #28]
 8028bb6:	f308 031e 	ssat	r3, #31, r8
 8028bba:	005b      	lsls	r3, r3, #1
 8028bbc:	6003      	str	r3, [r0, #0]
 8028bbe:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8028bc2:	9107      	str	r1, [sp, #28]
 8028bc4:	49c6      	ldr	r1, [pc, #792]	@ (8028ee0 <omni2_sw+0x834>)
 8028bc6:	fb50 f011 	smmulr	r0, r0, r1
 8028bca:	0040      	lsls	r0, r0, #1
 8028bcc:	6821      	ldr	r1, [r4, #0]
 8028bce:	fa80 f181 	qadd	r1, r1, r0
 8028bd2:	f844 1b04 	str.w	r1, [r4], #4
 8028bd6:	682a      	ldr	r2, [r5, #0]
 8028bd8:	fa80 f282 	qadd	r2, r2, r0
 8028bdc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8028bde:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8028be0:	9805      	ldr	r0, [sp, #20]
 8028be2:	f845 2b04 	str.w	r2, [r5], #4
 8028be6:	463a      	mov	r2, r7
 8028be8:	42b8      	cmp	r0, r7
 8028bea:	bf38      	it	cc
 8028bec:	460a      	movcc	r2, r1
 8028bee:	4611      	mov	r1, r2
 8028bf0:	9a04      	ldr	r2, [sp, #16]
 8028bf2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028bf4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8028bf6:	9206      	str	r2, [sp, #24]
 8028bf8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8028bfa:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8028bfe:	f8cd b020 	str.w	fp, [sp, #32]
 8028c02:	f10c 0c01 	add.w	ip, ip, #1
 8028c06:	4577      	cmp	r7, lr
 8028c08:	bf28      	it	cs
 8028c0a:	4670      	movcs	r0, lr
 8028c0c:	4562      	cmp	r2, ip
 8028c0e:	46ca      	mov	sl, r9
 8028c10:	d18e      	bne.n	8028b30 <omni2_sw+0x484>
 8028c12:	464d      	mov	r5, r9
 8028c14:	f8dd 906c 	ldr.w	r9, [sp, #108]	@ 0x6c
 8028c18:	46d8      	mov	r8, fp
 8028c1a:	46b4      	mov	ip, r6
 8028c1c:	4693      	mov	fp, r2
 8028c1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028c20:	f8c9 33e0 	str.w	r3, [r9, #992]	@ 0x3e0
 8028c24:	9b04      	ldr	r3, [sp, #16]
 8028c26:	f8c9 23d8 	str.w	r2, [r9, #984]	@ 0x3d8
 8028c2a:	f8c9 33e4 	str.w	r3, [r9, #996]	@ 0x3e4
 8028c2e:	9a03      	ldr	r2, [sp, #12]
 8028c30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028c32:	f8c9 23dc 	str.w	r2, [r9, #988]	@ 0x3dc
 8028c36:	f8c9 33e8 	str.w	r3, [r9, #1000]	@ 0x3e8
 8028c3a:	f8c9 53ec 	str.w	r5, [r9, #1004]	@ 0x3ec
 8028c3e:	f8c9 c3f0 	str.w	ip, [r9, #1008]	@ 0x3f0
 8028c42:	f8c9 83f4 	str.w	r8, [r9, #1012]	@ 0x3f4
 8028c46:	f8c9 003c 	str.w	r0, [r9, #60]	@ 0x3c
 8028c4a:	f8c9 1040 	str.w	r1, [r9, #64]	@ 0x40
 8028c4e:	e656      	b.n	80288fe <omni2_sw+0x252>
 8028c50:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8028c52:	48a4      	ldr	r0, [pc, #656]	@ (8028ee4 <omni2_sw+0x838>)
 8028c54:	4ba4      	ldr	r3, [pc, #656]	@ (8028ee8 <omni2_sw+0x83c>)
 8028c56:	49a5      	ldr	r1, [pc, #660]	@ (8028eec <omni2_sw+0x840>)
 8028c58:	f8d3 c000 	ldr.w	ip, [r3]
 8028c5c:	f8d3 8004 	ldr.w	r8, [r3, #4]
 8028c60:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8028c64:	f851 7022 	ldr.w	r7, [r1, r2, lsl #2]
 8028c68:	f8d9 308c 	ldr.w	r3, [r9, #140]	@ 0x8c
 8028c6c:	f1bb 0f00 	cmp.w	fp, #0
 8028c70:	dd32      	ble.n	8028cd8 <omni2_sw+0x62c>
 8028c72:	f8cd 900c 	str.w	r9, [sp, #12]
 8028c76:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028c78:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8028c7c:	2500      	movs	r5, #0
 8028c7e:	6821      	ldr	r1, [r4, #0]
 8028c80:	f8d9 2000 	ldr.w	r2, [r9]
 8028c84:	fb51 f017 	smmulr	r0, r1, r7
 8028c88:	fb52 fa17 	smmulr	sl, r2, r7
 8028c8c:	fa8a f0a0 	qsub	r0, r0, sl
 8028c90:	fb51 f116 	smmulr	r1, r1, r6
 8028c94:	fb52 f216 	smmulr	r2, r2, r6
 8028c98:	fa83 f181 	qadd	r1, r1, r3
 8028c9c:	0049      	lsls	r1, r1, #1
 8028c9e:	f844 1b04 	str.w	r1, [r4], #4
 8028ca2:	fa83 f2a2 	qsub	r2, r2, r3
 8028ca6:	0052      	lsls	r2, r2, #1
 8028ca8:	f849 2b04 	str.w	r2, [r9], #4
 8028cac:	fb50 f00c 	smmul	r0, r0, ip
 8028cb0:	fb53 f308 	smmul	r3, r3, r8
 8028cb4:	fa83 f3a0 	qsub	r3, r0, r3
 8028cb8:	3501      	adds	r5, #1
 8028cba:	45ab      	cmp	fp, r5
 8028cbc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8028cc0:	d1dd      	bne.n	8028c7e <omni2_sw+0x5d2>
 8028cc2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8028cc4:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8028cc8:	7852      	ldrb	r2, [r2, #1]
 8028cca:	f8c9 308c 	str.w	r3, [r9, #140]	@ 0x8c
 8028cce:	2a01      	cmp	r2, #1
 8028cd0:	d009      	beq.n	8028ce6 <omni2_sw+0x63a>
 8028cd2:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 8028cd6:	e630      	b.n	802893a <omni2_sw+0x28e>
 8028cd8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8028cda:	7852      	ldrb	r2, [r2, #1]
 8028cdc:	f8c9 308c 	str.w	r3, [r9, #140]	@ 0x8c
 8028ce0:	2a01      	cmp	r2, #1
 8028ce2:	f47f ae40 	bne.w	8028966 <omni2_sw+0x2ba>
 8028ce6:	f1be 0f81 	cmp.w	lr, #129	@ 0x81
 8028cea:	d005      	beq.n	8028cf8 <omni2_sw+0x64c>
 8028cec:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8028cee:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8028cf2:	2b00      	cmp	r3, #0
 8028cf4:	f47f ae1c 	bne.w	8028930 <omni2_sw+0x284>
 8028cf8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028cfa:	6818      	ldr	r0, [r3, #0]
 8028cfc:	f8d0 56d0 	ldr.w	r5, [r0, #1744]	@ 0x6d0
 8028d00:	2d00      	cmp	r5, #0
 8028d02:	f100 0198 	add.w	r1, r0, #152	@ 0x98
 8028d06:	f77f ae13 	ble.w	8028930 <omni2_sw+0x284>
 8028d0a:	4e79      	ldr	r6, [pc, #484]	@ (8028ef0 <omni2_sw+0x844>)
 8028d0c:	f500 74aa 	add.w	r4, r0, #340	@ 0x154
 8028d10:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 8028d14:	f500 7005 	add.w	r0, r0, #532	@ 0x214
 8028d18:	f851 3b04 	ldr.w	r3, [r1], #4
 8028d1c:	f854 2f04 	ldr.w	r2, [r4, #4]!
 8028d20:	fa82 f383 	qadd	r3, r3, r2
 8028d24:	fb53 f316 	smmulr	r3, r3, r6
 8028d28:	005b      	lsls	r3, r3, #1
 8028d2a:	42a9      	cmp	r1, r5
 8028d2c:	f840 3f04 	str.w	r3, [r0, #4]!
 8028d30:	d1f2      	bne.n	8028d18 <omni2_sw+0x66c>
 8028d32:	e5fd      	b.n	8028930 <omni2_sw+0x284>
 8028d34:	2b14      	cmp	r3, #20
 8028d36:	f43f aec1 	beq.w	8028abc <omni2_sw+0x410>
 8028d3a:	e58a      	b.n	8028852 <omni2_sw+0x1a6>
 8028d3c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8028d3e:	f893 e032 	ldrb.w	lr, [r3, #50]	@ 0x32
 8028d42:	f1be 0f01 	cmp.w	lr, #1
 8028d46:	d0d7      	beq.n	8028cf8 <omni2_sw+0x64c>
 8028d48:	f1be 0f81 	cmp.w	lr, #129	@ 0x81
 8028d4c:	d1ce      	bne.n	8028cec <omni2_sw+0x640>
 8028d4e:	e7d3      	b.n	8028cf8 <omni2_sw+0x64c>
 8028d50:	f1bb 0f00 	cmp.w	fp, #0
 8028d54:	f77f acd6 	ble.w	8028704 <omni2_sw+0x58>
 8028d58:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028d5a:	4866      	ldr	r0, [pc, #408]	@ (8028ef4 <omni2_sw+0x848>)
 8028d5c:	461a      	mov	r2, r3
 8028d5e:	f509 71aa 	add.w	r1, r9, #340	@ 0x154
 8028d62:	eb03 048b 	add.w	r4, r3, fp, lsl #2
 8028d66:	6813      	ldr	r3, [r2, #0]
 8028d68:	fb53 f310 	smmulr	r3, r3, r0
 8028d6c:	005b      	lsls	r3, r3, #1
 8028d6e:	f842 3b04 	str.w	r3, [r2], #4
 8028d72:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8028d76:	fb53 f310 	smmulr	r3, r3, r0
 8028d7a:	005b      	lsls	r3, r3, #1
 8028d7c:	4294      	cmp	r4, r2
 8028d7e:	600b      	str	r3, [r1, #0]
 8028d80:	d1f1      	bne.n	8028d66 <omni2_sw+0x6ba>
 8028d82:	e4bf      	b.n	8028704 <omni2_sw+0x58>
 8028d84:	6883      	ldr	r3, [r0, #8]
 8028d86:	681e      	ldr	r6, [r3, #0]
 8028d88:	2e00      	cmp	r6, #0
 8028d8a:	d07d      	beq.n	8028e88 <omni2_sw+0x7dc>
 8028d8c:	f891 3035 	ldrb.w	r3, [r1, #53]	@ 0x35
 8028d90:	f106 07c0 	add.w	r7, r6, #192	@ 0xc0
 8028d94:	b113      	cbz	r3, 8028d9c <omni2_sw+0x6f0>
 8028d96:	f509 7306 	add.w	r3, r9, #536	@ 0x218
 8028d9a:	9311      	str	r3, [sp, #68]	@ 0x44
 8028d9c:	f1bb 0f00 	cmp.w	fp, #0
 8028da0:	f340 8097 	ble.w	8028ed2 <omni2_sw+0x826>
 8028da4:	4c52      	ldr	r4, [pc, #328]	@ (8028ef0 <omni2_sw+0x844>)
 8028da6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8028da8:	1f30      	subs	r0, r6, #4
 8028daa:	f106 01bc 	add.w	r1, r6, #188	@ 0xbc
 8028dae:	2200      	movs	r2, #0
 8028db0:	682b      	ldr	r3, [r5, #0]
 8028db2:	fb53 f314 	smmulr	r3, r3, r4
 8028db6:	005b      	lsls	r3, r3, #1
 8028db8:	f840 3f04 	str.w	r3, [r0, #4]!
 8028dbc:	f855 3b04 	ldr.w	r3, [r5], #4
 8028dc0:	fb53 f314 	smmulr	r3, r3, r4
 8028dc4:	3201      	adds	r2, #1
 8028dc6:	005b      	lsls	r3, r3, #1
 8028dc8:	4593      	cmp	fp, r2
 8028dca:	f841 3f04 	str.w	r3, [r1, #4]!
 8028dce:	d1ef      	bne.n	8028db0 <omni2_sw+0x704>
 8028dd0:	f109 005c 	add.w	r0, r9, #92	@ 0x5c
 8028dd4:	e890 1101 	ldmia.w	r0, {r0, r8, ip}
 8028dd8:	f8d9 e058 	ldr.w	lr, [r9, #88]	@ 0x58
 8028ddc:	4635      	mov	r5, r6
 8028dde:	2400      	movs	r4, #0
 8028de0:	6801      	ldr	r1, [r0, #0]
 8028de2:	fb5e f311 	smmulr	r3, lr, r1
 8028de6:	005a      	lsls	r2, r3, #1
 8028de8:	682b      	ldr	r3, [r5, #0]
 8028dea:	fa82 f3a3 	qsub	r3, r3, r2
 8028dee:	fb5e f213 	smmulr	r2, lr, r3
 8028df2:	0052      	lsls	r2, r2, #1
 8028df4:	fa81 f282 	qadd	r2, r2, r1
 8028df8:	4584      	cmp	ip, r0
 8028dfa:	f104 0401 	add.w	r4, r4, #1
 8028dfe:	f845 2b04 	str.w	r2, [r5], #4
 8028e02:	6003      	str	r3, [r0, #0]
 8028e04:	bf8c      	ite	hi
 8028e06:	3004      	addhi	r0, #4
 8028e08:	4640      	movls	r0, r8
 8028e0a:	45a3      	cmp	fp, r4
 8028e0c:	d1e8      	bne.n	8028de0 <omni2_sw+0x734>
 8028e0e:	f8c9 005c 	str.w	r0, [r9, #92]	@ 0x5c
 8028e12:	f109 006c 	add.w	r0, r9, #108	@ 0x6c
 8028e16:	e890 1101 	ldmia.w	r0, {r0, r8, ip}
 8028e1a:	f8d9 e068 	ldr.w	lr, [r9, #104]	@ 0x68
 8028e1e:	463d      	mov	r5, r7
 8028e20:	2400      	movs	r4, #0
 8028e22:	6801      	ldr	r1, [r0, #0]
 8028e24:	fb5e f311 	smmulr	r3, lr, r1
 8028e28:	005a      	lsls	r2, r3, #1
 8028e2a:	682b      	ldr	r3, [r5, #0]
 8028e2c:	fa82 f3a3 	qsub	r3, r3, r2
 8028e30:	fb5e f213 	smmulr	r2, lr, r3
 8028e34:	0052      	lsls	r2, r2, #1
 8028e36:	fa81 f282 	qadd	r2, r2, r1
 8028e3a:	4584      	cmp	ip, r0
 8028e3c:	f104 0401 	add.w	r4, r4, #1
 8028e40:	f845 2b04 	str.w	r2, [r5], #4
 8028e44:	6003      	str	r3, [r0, #0]
 8028e46:	bf8c      	ite	hi
 8028e48:	3004      	addhi	r0, #4
 8028e4a:	4640      	movls	r0, r8
 8028e4c:	45a3      	cmp	fp, r4
 8028e4e:	dce8      	bgt.n	8028e22 <omni2_sw+0x776>
 8028e50:	f109 0494 	add.w	r4, r9, #148	@ 0x94
 8028e54:	f509 73aa 	add.w	r3, r9, #340	@ 0x154
 8028e58:	f8c9 006c 	str.w	r0, [r9, #108]	@ 0x6c
 8028e5c:	4619      	mov	r1, r3
 8028e5e:	4620      	mov	r0, r4
 8028e60:	2200      	movs	r2, #0
 8028e62:	f856 5b04 	ldr.w	r5, [r6], #4
 8028e66:	f840 5f04 	str.w	r5, [r0, #4]!
 8028e6a:	3201      	adds	r2, #1
 8028e6c:	f857 5b04 	ldr.w	r5, [r7], #4
 8028e70:	f841 5f04 	str.w	r5, [r1, #4]!
 8028e74:	4593      	cmp	fp, r2
 8028e76:	dcf4      	bgt.n	8028e62 <omni2_sw+0x7b6>
 8028e78:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8028e7a:	7852      	ldrb	r2, [r2, #1]
 8028e7c:	2a01      	cmp	r2, #1
 8028e7e:	f43f af3b 	beq.w	8028cf8 <omni2_sw+0x64c>
 8028e82:	f509 7136 	add.w	r1, r9, #728	@ 0x2d8
 8028e86:	e55c      	b.n	8028942 <omni2_sw+0x296>
 8028e88:	2001      	movs	r0, #1
 8028e8a:	f004 fc59 	bl	802d740 <exit>
 8028e8e:	9c03      	ldr	r4, [sp, #12]
 8028e90:	9409      	str	r4, [sp, #36]	@ 0x24
 8028e92:	9c06      	ldr	r4, [sp, #24]
 8028e94:	9b04      	ldr	r3, [sp, #16]
 8028e96:	960a      	str	r6, [sp, #40]	@ 0x28
 8028e98:	46c4      	mov	ip, r8
 8028e9a:	9404      	str	r4, [sp, #16]
 8028e9c:	4690      	mov	r8, r2
 8028e9e:	9703      	str	r7, [sp, #12]
 8028ea0:	4655      	mov	r5, sl
 8028ea2:	e6bc      	b.n	8028c1e <omni2_sw+0x572>
 8028ea4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8028ea8:	f8c9 5030 	str.w	r5, [r9, #48]	@ 0x30
 8028eac:	4639      	mov	r1, r7
 8028eae:	f509 736a 	add.w	r3, r9, #936	@ 0x3a8
 8028eb2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8028eb4:	f8cd b000 	str.w	fp, [sp]
 8028eb8:	f7ff fb14 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028ebc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8028ec0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028ec2:	f8cd b000 	str.w	fp, [sp]
 8028ec6:	4631      	mov	r1, r6
 8028ec8:	f509 736e 	add.w	r3, r9, #952	@ 0x3b8
 8028ecc:	f7ff fb0a 	bl	80284e4 <biquad_df1_cascade_mono_compute_omni2_q31>
 8028ed0:	e5d9      	b.n	8028a86 <omni2_sw+0x3da>
 8028ed2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8028ed4:	785b      	ldrb	r3, [r3, #1]
 8028ed6:	2b01      	cmp	r3, #1
 8028ed8:	f47f ad45 	bne.w	8028966 <omni2_sw+0x2ba>
 8028edc:	e70c      	b.n	8028cf8 <omni2_sw+0x64c>
 8028ede:	bf00      	nop
 8028ee0:	40126116 	.word	0x40126116
 8028ee4:	08038168 	.word	0x08038168
 8028ee8:	080381a0 	.word	0x080381a0
 8028eec:	0803813c 	.word	0x0803813c
 8028ef0:	5a82799a 	.word	0x5a82799a
 8028ef4:	5a9c779a 	.word	0x5a9c779a

08028ef8 <awe_parserInitKey>:
 8028ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028efa:	2300      	movs	r3, #0
 8028efc:	6083      	str	r3, [r0, #8]
 8028efe:	60c3      	str	r3, [r0, #12]
 8028f00:	6103      	str	r3, [r0, #16]
 8028f02:	6143      	str	r3, [r0, #20]
 8028f04:	b1e9      	cbz	r1, 8028f42 <awe_parserInitKey+0x4a>
 8028f06:	4604      	mov	r4, r0
 8028f08:	f100 0608 	add.w	r6, r0, #8
 8028f0c:	4608      	mov	r0, r1
 8028f0e:	460d      	mov	r5, r1
 8028f10:	f7d7 f95a 	bl	80001c8 <strlen>
 8028f14:	2810      	cmp	r0, #16
 8028f16:	4602      	mov	r2, r0
 8028f18:	4629      	mov	r1, r5
 8028f1a:	bf28      	it	cs
 8028f1c:	2210      	movcs	r2, #16
 8028f1e:	4630      	mov	r0, r6
 8028f20:	f004 fe93 	bl	802dc4a <memcpy>
 8028f24:	68e6      	ldr	r6, [r4, #12]
 8028f26:	6925      	ldr	r5, [r4, #16]
 8028f28:	4a06      	ldr	r2, [pc, #24]	@ (8028f44 <awe_parserInitKey+0x4c>)
 8028f2a:	4b07      	ldr	r3, [pc, #28]	@ (8028f48 <awe_parserInitKey+0x50>)
 8028f2c:	68a0      	ldr	r0, [r4, #8]
 8028f2e:	4f07      	ldr	r7, [pc, #28]	@ (8028f4c <awe_parserInitKey+0x54>)
 8028f30:	6961      	ldr	r1, [r4, #20]
 8028f32:	4072      	eors	r2, r6
 8028f34:	406b      	eors	r3, r5
 8028f36:	e9c4 2303 	strd	r2, r3, [r4, #12]
 8028f3a:	4078      	eors	r0, r7
 8028f3c:	4079      	eors	r1, r7
 8028f3e:	60a0      	str	r0, [r4, #8]
 8028f40:	6161      	str	r1, [r4, #20]
 8028f42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028f44:	0badface 	.word	0x0badface
 8028f48:	deadbeef 	.word	0xdeadbeef
 8028f4c:	7a6b5c4d 	.word	0x7a6b5c4d

08028f50 <awe_parserModKey>:
 8028f50:	b430      	push	{r4, r5}
 8028f52:	e9d0 5402 	ldrd	r5, r4, [r0, #8]
 8028f56:	b139      	cbz	r1, 8028f68 <awe_parserModKey+0x18>
 8028f58:	680a      	ldr	r2, [r1, #0]
 8028f5a:	406a      	eors	r2, r5
 8028f5c:	6082      	str	r2, [r0, #8]
 8028f5e:	684b      	ldr	r3, [r1, #4]
 8028f60:	4063      	eors	r3, r4
 8028f62:	60c3      	str	r3, [r0, #12]
 8028f64:	bc30      	pop	{r4, r5}
 8028f66:	4770      	bx	lr
 8028f68:	e9d0 2308 	ldrd	r2, r3, [r0, #32]
 8028f6c:	406a      	eors	r2, r5
 8028f6e:	4063      	eors	r3, r4
 8028f70:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8028f74:	bc30      	pop	{r4, r5}
 8028f76:	4770      	bx	lr

08028f78 <awe_parserXxteaex>:
 8028f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028f7c:	b087      	sub	sp, #28
 8028f7e:	f100 0218 	add.w	r2, r0, #24
 8028f82:	2901      	cmp	r1, #1
 8028f84:	9200      	str	r2, [sp, #0]
 8028f86:	f340 80af 	ble.w	80290e8 <awe_parserXxteaex+0x170>
 8028f8a:	f101 4a80 	add.w	sl, r1, #1073741824	@ 0x40000000
 8028f8e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8028f92:	4ca6      	ldr	r4, [pc, #664]	@ (802922c <awe_parserXxteaex+0x2b4>)
 8028f94:	4da6      	ldr	r5, [pc, #664]	@ (8029230 <awe_parserXxteaex+0x2b8>)
 8028f96:	f852 302a 	ldr.w	r3, [r2, sl, lsl #2]
 8028f9a:	eb02 0a8a 	add.w	sl, r2, sl, lsl #2
 8028f9e:	2234      	movs	r2, #52	@ 0x34
 8028fa0:	fbb2 f2f1 	udiv	r2, r2, r1
 8028fa4:	fb04 5202 	mla	r2, r4, r2, r5
 8028fa8:	f1a1 0904 	sub.w	r9, r1, #4
 8028fac:	e9cd 2401 	strd	r2, r4, [sp, #4]
 8028fb0:	f029 0901 	bic.w	r9, r9, #1
 8028fb4:	f109 0902 	add.w	r9, r9, #2
 8028fb8:	f101 38ff 	add.w	r8, r1, #4294967295
 8028fbc:	f04f 0e00 	mov.w	lr, #0
 8028fc0:	9a02      	ldr	r2, [sp, #8]
 8028fc2:	f1b8 0f02 	cmp.w	r8, #2
 8028fc6:	4496      	add	lr, r2
 8028fc8:	ea4f 0c9e 	mov.w	ip, lr, lsr #2
 8028fcc:	f240 808a 	bls.w	80290e4 <awe_parserXxteaex+0x16c>
 8028fd0:	6987      	ldr	r7, [r0, #24]
 8028fd2:	9e00      	ldr	r6, [sp, #0]
 8028fd4:	2500      	movs	r5, #0
 8028fd6:	ea8c 0105 	eor.w	r1, ip, r5
 8028fda:	f001 0103 	and.w	r1, r1, #3
 8028fde:	3102      	adds	r1, #2
 8028fe0:	6872      	ldr	r2, [r6, #4]
 8028fe2:	f850 4021 	ldr.w	r4, [r0, r1, lsl #2]
 8028fe6:	0091      	lsls	r1, r2, #2
 8028fe8:	405c      	eors	r4, r3
 8028fea:	ea81 1153 	eor.w	r1, r1, r3, lsr #5
 8028fee:	ea8e 0b02 	eor.w	fp, lr, r2
 8028ff2:	011b      	lsls	r3, r3, #4
 8028ff4:	44a3      	add	fp, r4
 8028ff6:	ea83 03d2 	eor.w	r3, r3, r2, lsr #3
 8028ffa:	1c6c      	adds	r4, r5, #1
 8028ffc:	4419      	add	r1, r3
 8028ffe:	ea8c 0304 	eor.w	r3, ip, r4
 8029002:	f003 0303 	and.w	r3, r3, #3
 8029006:	ea81 040b 	eor.w	r4, r1, fp
 802900a:	443c      	add	r4, r7
 802900c:	3302      	adds	r3, #2
 802900e:	68b7      	ldr	r7, [r6, #8]
 8029010:	6034      	str	r4, [r6, #0]
 8029012:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8029016:	ea4f 1b54 	mov.w	fp, r4, lsr #5
 802901a:	08f9      	lsrs	r1, r7, #3
 802901c:	ea81 1104 	eor.w	r1, r1, r4, lsl #4
 8029020:	ea8b 0b87 	eor.w	fp, fp, r7, lsl #2
 8029024:	405c      	eors	r4, r3
 8029026:	ea8e 0307 	eor.w	r3, lr, r7
 802902a:	4459      	add	r1, fp
 802902c:	4423      	add	r3, r4
 802902e:	404b      	eors	r3, r1
 8029030:	3502      	adds	r5, #2
 8029032:	4413      	add	r3, r2
 8029034:	45a9      	cmp	r9, r5
 8029036:	6073      	str	r3, [r6, #4]
 8029038:	f106 0608 	add.w	r6, r6, #8
 802903c:	d1cb      	bne.n	8028fd6 <awe_parserXxteaex+0x5e>
 802903e:	9a00      	ldr	r2, [sp, #0]
 8029040:	eb02 0785 	add.w	r7, r2, r5, lsl #2
 8029044:	ea8c 0205 	eor.w	r2, ip, r5
 8029048:	f002 0203 	and.w	r2, r2, #3
 802904c:	3202      	adds	r2, #2
 802904e:	687e      	ldr	r6, [r7, #4]
 8029050:	f850 1022 	ldr.w	r1, [r0, r2, lsl #2]
 8029054:	683c      	ldr	r4, [r7, #0]
 8029056:	4059      	eors	r1, r3
 8029058:	ea8e 0206 	eor.w	r2, lr, r6
 802905c:	4411      	add	r1, r2
 802905e:	08f2      	lsrs	r2, r6, #3
 8029060:	ea82 1203 	eor.w	r2, r2, r3, lsl #4
 8029064:	095b      	lsrs	r3, r3, #5
 8029066:	ea83 0386 	eor.w	r3, r3, r6, lsl #2
 802906a:	4413      	add	r3, r2
 802906c:	404b      	eors	r3, r1
 802906e:	3501      	adds	r5, #1
 8029070:	4423      	add	r3, r4
 8029072:	45a8      	cmp	r8, r5
 8029074:	f847 3b04 	str.w	r3, [r7], #4
 8029078:	d8e4      	bhi.n	8029044 <awe_parserXxteaex+0xcc>
 802907a:	ea8c 0c08 	eor.w	ip, ip, r8
 802907e:	f00c 0c03 	and.w	ip, ip, #3
 8029082:	f10c 0c02 	add.w	ip, ip, #2
 8029086:	6985      	ldr	r5, [r0, #24]
 8029088:	f850 402c 	ldr.w	r4, [r0, ip, lsl #2]
 802908c:	f8da 2000 	ldr.w	r2, [sl]
 8029090:	405c      	eors	r4, r3
 8029092:	ea8e 0105 	eor.w	r1, lr, r5
 8029096:	440c      	add	r4, r1
 8029098:	00a9      	lsls	r1, r5, #2
 802909a:	ea81 1153 	eor.w	r1, r1, r3, lsr #5
 802909e:	011b      	lsls	r3, r3, #4
 80290a0:	ea83 03d5 	eor.w	r3, r3, r5, lsr #3
 80290a4:	440b      	add	r3, r1
 80290a6:	4063      	eors	r3, r4
 80290a8:	4413      	add	r3, r2
 80290aa:	9a01      	ldr	r2, [sp, #4]
 80290ac:	f8ca 3000 	str.w	r3, [sl]
 80290b0:	4596      	cmp	lr, r2
 80290b2:	d185      	bne.n	8028fc0 <awe_parserXxteaex+0x48>
 80290b4:	6883      	ldr	r3, [r0, #8]
 80290b6:	6945      	ldr	r5, [r0, #20]
 80290b8:	e9d0 2103 	ldrd	r2, r1, [r0, #12]
 80290bc:	3301      	adds	r3, #1
 80290be:	005c      	lsls	r4, r3, #1
 80290c0:	0fdb      	lsrs	r3, r3, #31
 80290c2:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 80290c6:	0fd2      	lsrs	r2, r2, #31
 80290c8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80290cc:	0fc9      	lsrs	r1, r1, #31
 80290ce:	ea44 74d5 	orr.w	r4, r4, r5, lsr #31
 80290d2:	ea41 0145 	orr.w	r1, r1, r5, lsl #1
 80290d6:	6084      	str	r4, [r0, #8]
 80290d8:	6141      	str	r1, [r0, #20]
 80290da:	e9c0 3203 	strd	r3, r2, [r0, #12]
 80290de:	b007      	add	sp, #28
 80290e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290e4:	2500      	movs	r5, #0
 80290e6:	e7aa      	b.n	802903e <awe_parserXxteaex+0xc6>
 80290e8:	1c4b      	adds	r3, r1, #1
 80290ea:	dae3      	bge.n	80290b4 <awe_parserXxteaex+0x13c>
 80290ec:	4e4f      	ldr	r6, [pc, #316]	@ (802922c <awe_parserXxteaex+0x2b4>)
 80290ee:	4d51      	ldr	r5, [pc, #324]	@ (8029234 <awe_parserXxteaex+0x2bc>)
 80290f0:	4f51      	ldr	r7, [pc, #324]	@ (8029238 <awe_parserXxteaex+0x2c0>)
 80290f2:	6983      	ldr	r3, [r0, #24]
 80290f4:	9503      	str	r5, [sp, #12]
 80290f6:	424c      	negs	r4, r1
 80290f8:	2234      	movs	r2, #52	@ 0x34
 80290fa:	fbb2 f2f4 	udiv	r2, r2, r4
 80290fe:	1d94      	adds	r4, r2, #6
 8029100:	fb06 f904 	mul.w	r9, r6, r4
 8029104:	fb05 9202 	mla	r2, r5, r2, r9
 8029108:	43ce      	mvns	r6, r1
 802910a:	443a      	add	r2, r7
 802910c:	00b4      	lsls	r4, r6, #2
 802910e:	9202      	str	r2, [sp, #8]
 8029110:	9a00      	ldr	r2, [sp, #0]
 8029112:	9601      	str	r6, [sp, #4]
 8029114:	1901      	adds	r1, r0, r4
 8029116:	eb02 0a86 	add.w	sl, r2, r6, lsl #2
 802911a:	9105      	str	r1, [sp, #20]
 802911c:	1e71      	subs	r1, r6, #1
 802911e:	f8cd a010 	str.w	sl, [sp, #16]
 8029122:	9100      	str	r1, [sp, #0]
 8029124:	4693      	mov	fp, r2
 8029126:	4680      	mov	r8, r0
 8029128:	9a00      	ldr	r2, [sp, #0]
 802912a:	2a01      	cmp	r2, #1
 802912c:	ea4f 0e99 	mov.w	lr, r9, lsr #2
 8029130:	d97a      	bls.n	8029228 <awe_parserXxteaex+0x2b0>
 8029132:	9905      	ldr	r1, [sp, #20]
 8029134:	9e04      	ldr	r6, [sp, #16]
 8029136:	698f      	ldr	r7, [r1, #24]
 8029138:	9d01      	ldr	r5, [sp, #4]
 802913a:	4694      	mov	ip, r2
 802913c:	ea8e 0105 	eor.w	r1, lr, r5
 8029140:	f001 0103 	and.w	r1, r1, #3
 8029144:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8029148:	3102      	adds	r1, #2
 802914a:	0114      	lsls	r4, r2, #4
 802914c:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 8029150:	ea84 04d3 	eor.w	r4, r4, r3, lsr #3
 8029154:	ea89 0103 	eor.w	r1, r9, r3
 8029158:	009b      	lsls	r3, r3, #2
 802915a:	ea83 1352 	eor.w	r3, r3, r2, lsr #5
 802915e:	4050      	eors	r0, r2
 8029160:	4408      	add	r0, r1
 8029162:	1919      	adds	r1, r3, r4
 8029164:	4041      	eors	r1, r0
 8029166:	1a79      	subs	r1, r7, r1
 8029168:	ea8e 030c 	eor.w	r3, lr, ip
 802916c:	f84b 1025 	str.w	r1, [fp, r5, lsl #2]
 8029170:	f003 0303 	and.w	r3, r3, #3
 8029174:	3302      	adds	r3, #2
 8029176:	f856 7c08 	ldr.w	r7, [r6, #-8]
 802917a:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
 802917e:	097c      	lsrs	r4, r7, #5
 8029180:	08cb      	lsrs	r3, r1, #3
 8029182:	ea84 0481 	eor.w	r4, r4, r1, lsl #2
 8029186:	ea83 1307 	eor.w	r3, r3, r7, lsl #4
 802918a:	ea81 0109 	eor.w	r1, r1, r9
 802918e:	4078      	eors	r0, r7
 8029190:	4423      	add	r3, r4
 8029192:	4401      	add	r1, r0
 8029194:	404b      	eors	r3, r1
 8029196:	f1ac 0c02 	sub.w	ip, ip, #2
 802919a:	1ad3      	subs	r3, r2, r3
 802919c:	f1bc 0f01 	cmp.w	ip, #1
 80291a0:	f846 3c04 	str.w	r3, [r6, #-4]
 80291a4:	f1a5 0502 	sub.w	r5, r5, #2
 80291a8:	f1a6 0608 	sub.w	r6, r6, #8
 80291ac:	d8c6      	bhi.n	802913c <awe_parserXxteaex+0x1c4>
 80291ae:	eb0b 0685 	add.w	r6, fp, r5, lsl #2
 80291b2:	ea8e 0205 	eor.w	r2, lr, r5
 80291b6:	f002 0203 	and.w	r2, r2, #3
 80291ba:	3202      	adds	r2, #2
 80291bc:	f856 4c04 	ldr.w	r4, [r6, #-4]
 80291c0:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80291c4:	6831      	ldr	r1, [r6, #0]
 80291c6:	ea89 0003 	eor.w	r0, r9, r3
 80291ca:	4062      	eors	r2, r4
 80291cc:	4402      	add	r2, r0
 80291ce:	0960      	lsrs	r0, r4, #5
 80291d0:	ea80 0083 	eor.w	r0, r0, r3, lsl #2
 80291d4:	08db      	lsrs	r3, r3, #3
 80291d6:	ea83 1304 	eor.w	r3, r3, r4, lsl #4
 80291da:	4403      	add	r3, r0
 80291dc:	4053      	eors	r3, r2
 80291de:	1acb      	subs	r3, r1, r3
 80291e0:	3d01      	subs	r5, #1
 80291e2:	f846 3904 	str.w	r3, [r6], #-4
 80291e6:	d1e4      	bne.n	80291b2 <awe_parserXxteaex+0x23a>
 80291e8:	f00e 0e03 	and.w	lr, lr, #3
 80291ec:	f10e 0e02 	add.w	lr, lr, #2
 80291f0:	f8da 0000 	ldr.w	r0, [sl]
 80291f4:	f858 102e 	ldr.w	r1, [r8, lr, lsl #2]
 80291f8:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80291fc:	ea89 0403 	eor.w	r4, r9, r3
 8029200:	4041      	eors	r1, r0
 8029202:	4421      	add	r1, r4
 8029204:	0104      	lsls	r4, r0, #4
 8029206:	ea84 04d3 	eor.w	r4, r4, r3, lsr #3
 802920a:	009b      	lsls	r3, r3, #2
 802920c:	ea83 1350 	eor.w	r3, r3, r0, lsr #5
 8029210:	4423      	add	r3, r4
 8029212:	404b      	eors	r3, r1
 8029214:	9903      	ldr	r1, [sp, #12]
 8029216:	1ad3      	subs	r3, r2, r3
 8029218:	9a02      	ldr	r2, [sp, #8]
 802921a:	f8c8 3018 	str.w	r3, [r8, #24]
 802921e:	4489      	add	r9, r1
 8029220:	4591      	cmp	r9, r2
 8029222:	d181      	bne.n	8029128 <awe_parserXxteaex+0x1b0>
 8029224:	4640      	mov	r0, r8
 8029226:	e745      	b.n	80290b4 <awe_parserXxteaex+0x13c>
 8029228:	9d01      	ldr	r5, [sp, #4]
 802922a:	e7c0      	b.n	80291ae <awe_parserXxteaex+0x236>
 802922c:	9e3779b9 	.word	0x9e3779b9
 8029230:	b54cda56 	.word	0xb54cda56
 8029234:	61c88647 	.word	0x61c88647
 8029238:	4ab325aa 	.word	0x4ab325aa

0802923c <awe_packetProcessMulti>:
 802923c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802923e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8029240:	2b00      	cmp	r3, #0
 8029242:	f000 8152 	beq.w	80294ea <awe_packetProcessMulti+0x2ae>
 8029246:	4604      	mov	r4, r0
 8029248:	b981      	cbnz	r1, 802926c <awe_packetProcessMulti+0x30>
 802924a:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 802924c:	2d00      	cmp	r5, #0
 802924e:	f000 813e 	beq.w	80294ce <awe_packetProcessMulti+0x292>
 8029252:	f103 010c 	add.w	r1, r3, #12
 8029256:	2201      	movs	r2, #1
 8029258:	47a8      	blx	r5
 802925a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802925c:	6823      	ldr	r3, [r4, #0]
 802925e:	68d2      	ldr	r2, [r2, #12]
 8029260:	429a      	cmp	r2, r3
 8029262:	f000 80cf 	beq.w	8029404 <awe_packetProcessMulti+0x1c8>
 8029266:	2500      	movs	r5, #0
 8029268:	4628      	mov	r0, r5
 802926a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802926c:	f8d0 0100 	ldr.w	r0, [r0, #256]	@ 0x100
 8029270:	2804      	cmp	r0, #4
 8029272:	d8f8      	bhi.n	8029266 <awe_packetProcessMulti+0x2a>
 8029274:	e8df f000 	tbb	[pc, r0]
 8029278:	0303395a 	.word	0x0303395a
 802927c:	03          	.byte	0x03
 802927d:	00          	.byte	0x00
 802927e:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 8029280:	2e00      	cmp	r6, #0
 8029282:	f000 813b 	beq.w	80294fc <awe_packetProcessMulti+0x2c0>
 8029286:	f103 010c 	add.w	r1, r3, #12
 802928a:	2201      	movs	r2, #1
 802928c:	4620      	mov	r0, r4
 802928e:	47b0      	blx	r6
 8029290:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8029292:	68da      	ldr	r2, [r3, #12]
 8029294:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8029298:	d172      	bne.n	8029380 <awe_packetProcessMulti+0x144>
 802929a:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 802929c:	b136      	cbz	r6, 80292ac <awe_packetProcessMulti+0x70>
 802929e:	f103 0114 	add.w	r1, r3, #20
 80292a2:	2201      	movs	r2, #1
 80292a4:	4620      	mov	r0, r4
 80292a6:	47b0      	blx	r6
 80292a8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80292aa:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 80292ac:	695a      	ldr	r2, [r3, #20]
 80292ae:	3201      	adds	r2, #1
 80292b0:	615a      	str	r2, [r3, #20]
 80292b2:	695a      	ldr	r2, [r3, #20]
 80292b4:	6821      	ldr	r1, [r4, #0]
 80292b6:	4291      	cmp	r1, r2
 80292b8:	d102      	bne.n	80292c0 <awe_packetProcessMulti+0x84>
 80292ba:	695a      	ldr	r2, [r3, #20]
 80292bc:	3201      	adds	r2, #1
 80292be:	615a      	str	r2, [r3, #20]
 80292c0:	6959      	ldr	r1, [r3, #20]
 80292c2:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 80292c4:	4291      	cmp	r1, r2
 80292c6:	f0c0 80b8 	bcc.w	802943a <awe_packetProcessMulti+0x1fe>
 80292ca:	2500      	movs	r5, #0
 80292cc:	f8c4 5100 	str.w	r5, [r4, #256]	@ 0x100
 80292d0:	2e00      	cmp	r6, #0
 80292d2:	d0c9      	beq.n	8029268 <awe_packetProcessMulti+0x2c>
 80292d4:	4619      	mov	r1, r3
 80292d6:	2207      	movs	r2, #7
 80292d8:	4620      	mov	r0, r4
 80292da:	47b0      	blx	r6
 80292dc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80292de:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80292e0:	2202      	movs	r2, #2
 80292e2:	4620      	mov	r0, r4
 80292e4:	4798      	blx	r3
 80292e6:	4628      	mov	r0, r5
 80292e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80292ea:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 80292ec:	2d00      	cmp	r5, #0
 80292ee:	f000 80ff 	beq.w	80294f0 <awe_packetProcessMulti+0x2b4>
 80292f2:	f103 010c 	add.w	r1, r3, #12
 80292f6:	2201      	movs	r2, #1
 80292f8:	4620      	mov	r0, r4
 80292fa:	47a8      	blx	r5
 80292fc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80292fe:	68da      	ldr	r2, [r3, #12]
 8029300:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8029304:	d13c      	bne.n	8029380 <awe_packetProcessMulti+0x144>
 8029306:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8029308:	b155      	cbz	r5, 8029320 <awe_packetProcessMulti+0xe4>
 802930a:	f103 0108 	add.w	r1, r3, #8
 802930e:	2201      	movs	r2, #1
 8029310:	4620      	mov	r0, r4
 8029312:	47a8      	blx	r5
 8029314:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8029316:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	@ 0x3c
 802931a:	4620      	mov	r0, r4
 802931c:	4798      	blx	r3
 802931e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8029320:	2200      	movs	r2, #0
 8029322:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 8029326:	689d      	ldr	r5, [r3, #8]
 8029328:	4628      	mov	r0, r5
 802932a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802932c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 802932e:	6816      	ldr	r6, [r2, #0]
 8029330:	b2f7      	uxtb	r7, r6
 8029332:	2f7f      	cmp	r7, #127	@ 0x7f
 8029334:	f000 80aa 	beq.w	802948c <awe_packetProcessMulti+0x250>
 8029338:	2f0c      	cmp	r7, #12
 802933a:	d024      	beq.n	8029386 <awe_packetProcessMulti+0x14a>
 802933c:	f1a7 021b 	sub.w	r2, r7, #27
 8029340:	2a01      	cmp	r2, #1
 8029342:	d920      	bls.n	8029386 <awe_packetProcessMulti+0x14a>
 8029344:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8029346:	b133      	cbz	r3, 8029356 <awe_packetProcessMulti+0x11a>
 8029348:	4620      	mov	r0, r4
 802934a:	f7df fb25 	bl	8008998 <awe_fwFlashFileSystemCommandHandler>
 802934e:	f110 0f3b 	cmn.w	r0, #59	@ 0x3b
 8029352:	4605      	mov	r5, r0
 8029354:	d188      	bne.n	8029268 <awe_packetProcessMulti+0x2c>
 8029356:	6823      	ldr	r3, [r4, #0]
 8029358:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802935c:	42b3      	cmp	r3, r6
 802935e:	f000 80d6 	beq.w	802950e <awe_packetProcessMulti+0x2d2>
 8029362:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 8029364:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8029366:	60ce      	str	r6, [r1, #12]
 8029368:	2201      	movs	r2, #1
 802936a:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 802936e:	b13b      	cbz	r3, 8029380 <awe_packetProcessMulti+0x144>
 8029370:	310c      	adds	r1, #12
 8029372:	4620      	mov	r0, r4
 8029374:	4798      	blx	r3
 8029376:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8029378:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 802937a:	884a      	ldrh	r2, [r1, #2]
 802937c:	4620      	mov	r0, r4
 802937e:	4798      	blx	r3
 8029380:	f06f 0574 	mvn.w	r5, #116	@ 0x74
 8029384:	e770      	b.n	8029268 <awe_packetProcessMulti+0x2c>
 8029386:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8029388:	2a00      	cmp	r2, #0
 802938a:	d06d      	beq.n	8029468 <awe_packetProcessMulti+0x22c>
 802938c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 802938e:	2a00      	cmp	r2, #0
 8029390:	d06a      	beq.n	8029468 <awe_packetProcessMulti+0x22c>
 8029392:	4620      	mov	r0, r4
 8029394:	f7ed f9b0 	bl	80166f8 <awe_packetProcess>
 8029398:	6823      	ldr	r3, [r4, #0]
 802939a:	4605      	mov	r5, r0
 802939c:	b18b      	cbz	r3, 80293c2 <awe_packetProcessMulti+0x186>
 802939e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80293a0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80293a2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 80293a4:	e9c2 6600 	strd	r6, r6, [r2]
 80293a8:	2201      	movs	r2, #1
 80293aa:	2100      	movs	r1, #0
 80293ac:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 80293b0:	60d9      	str	r1, [r3, #12]
 80293b2:	2d00      	cmp	r5, #0
 80293b4:	d05a      	beq.n	802946c <awe_packetProcessMulti+0x230>
 80293b6:	f103 010c 	add.w	r1, r3, #12
 80293ba:	4620      	mov	r0, r4
 80293bc:	47a8      	blx	r5
 80293be:	f06f 0574 	mvn.w	r5, #116	@ 0x74
 80293c2:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 80293c4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 80293c6:	2b01      	cmp	r3, #1
 80293c8:	d914      	bls.n	80293f4 <awe_packetProcessMulti+0x1b8>
 80293ca:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80293cc:	2200      	movs	r2, #0
 80293ce:	2f1b      	cmp	r7, #27
 80293d0:	615a      	str	r2, [r3, #20]
 80293d2:	f000 8082 	beq.w	80294da <awe_packetProcessMulti+0x29e>
 80293d6:	2f1c      	cmp	r7, #28
 80293d8:	f000 8083 	beq.w	80294e2 <awe_packetProcessMulti+0x2a6>
 80293dc:	2f0c      	cmp	r7, #12
 80293de:	d051      	beq.n	8029484 <awe_packetProcessMulti+0x248>
 80293e0:	2e00      	cmp	r6, #0
 80293e2:	d0cd      	beq.n	8029380 <awe_packetProcessMulti+0x144>
 80293e4:	f103 0114 	add.w	r1, r3, #20
 80293e8:	2201      	movs	r2, #1
 80293ea:	4620      	mov	r0, r4
 80293ec:	47b0      	blx	r6
 80293ee:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 80293f0:	f06f 0574 	mvn.w	r5, #116	@ 0x74
 80293f4:	2e00      	cmp	r6, #0
 80293f6:	f43f af37 	beq.w	8029268 <awe_packetProcessMulti+0x2c>
 80293fa:	2202      	movs	r2, #2
 80293fc:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80293fe:	4620      	mov	r0, r4
 8029400:	47b0      	blx	r6
 8029402:	e731      	b.n	8029268 <awe_packetProcessMulti+0x2c>
 8029404:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8029406:	b11b      	cbz	r3, 8029410 <awe_packetProcessMulti+0x1d4>
 8029408:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 802940a:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 802940c:	4620      	mov	r0, r4
 802940e:	4798      	blx	r3
 8029410:	4620      	mov	r0, r4
 8029412:	f7ed f971 	bl	80166f8 <awe_packetProcess>
 8029416:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 8029418:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 802941a:	6088      	str	r0, [r1, #8]
 802941c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8029420:	60ca      	str	r2, [r1, #12]
 8029422:	2b00      	cmp	r3, #0
 8029424:	f43f af1f 	beq.w	8029266 <awe_packetProcessMulti+0x2a>
 8029428:	2207      	movs	r2, #7
 802942a:	4620      	mov	r0, r4
 802942c:	4798      	blx	r3
 802942e:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8029430:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8029432:	884a      	ldrh	r2, [r1, #2]
 8029434:	4620      	mov	r0, r4
 8029436:	4798      	blx	r3
 8029438:	e715      	b.n	8029266 <awe_packetProcessMulti+0x2a>
 802943a:	f8d4 2100 	ldr.w	r2, [r4, #256]	@ 0x100
 802943e:	2a02      	cmp	r2, #2
 8029440:	d010      	beq.n	8029464 <awe_packetProcessMulti+0x228>
 8029442:	2a04      	cmp	r2, #4
 8029444:	bf0c      	ite	eq
 8029446:	221c      	moveq	r2, #28
 8029448:	221b      	movne	r2, #27
 802944a:	6958      	ldr	r0, [r3, #20]
 802944c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 802944e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8029452:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8029456:	e9c1 2200 	strd	r2, r2, [r1]
 802945a:	695a      	ldr	r2, [r3, #20]
 802945c:	60da      	str	r2, [r3, #12]
 802945e:	f06f 0574 	mvn.w	r5, #116	@ 0x74
 8029462:	e735      	b.n	80292d0 <awe_packetProcessMulti+0x94>
 8029464:	220c      	movs	r2, #12
 8029466:	e7f0      	b.n	802944a <awe_packetProcessMulti+0x20e>
 8029468:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 802946a:	e79d      	b.n	80293a8 <awe_packetProcessMulti+0x16c>
 802946c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 802946e:	2a01      	cmp	r2, #1
 8029470:	d986      	bls.n	8029380 <awe_packetProcessMulti+0x144>
 8029472:	2600      	movs	r6, #0
 8029474:	2f1b      	cmp	r7, #27
 8029476:	615e      	str	r6, [r3, #20]
 8029478:	d02f      	beq.n	80294da <awe_packetProcessMulti+0x29e>
 802947a:	2f1c      	cmp	r7, #28
 802947c:	d031      	beq.n	80294e2 <awe_packetProcessMulti+0x2a6>
 802947e:	2f0c      	cmp	r7, #12
 8029480:	f47f af7e 	bne.w	8029380 <awe_packetProcessMulti+0x144>
 8029484:	2202      	movs	r2, #2
 8029486:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 802948a:	e7a9      	b.n	80293e0 <awe_packetProcessMulti+0x1a4>
 802948c:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 802948e:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8029490:	3103      	adds	r1, #3
 8029492:	0409      	lsls	r1, r1, #16
 8029494:	6029      	str	r1, [r5, #0]
 8029496:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8029498:	606b      	str	r3, [r5, #4]
 802949a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 802949c:	b3a3      	cbz	r3, 8029508 <awe_packetProcessMulti+0x2cc>
 802949e:	1d29      	adds	r1, r5, #4
 80294a0:	2300      	movs	r3, #0
 80294a2:	f841 3f04 	str.w	r3, [r1, #4]!
 80294a6:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 80294a8:	3301      	adds	r3, #1
 80294aa:	429a      	cmp	r2, r3
 80294ac:	d8f9      	bhi.n	80294a2 <awe_packetProcessMulti+0x266>
 80294ae:	3202      	adds	r2, #2
 80294b0:	6829      	ldr	r1, [r5, #0]
 80294b2:	0094      	lsls	r4, r2, #2
 80294b4:	2300      	movs	r3, #0
 80294b6:	e001      	b.n	80294bc <awe_packetProcessMulti+0x280>
 80294b8:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
 80294bc:	3301      	adds	r3, #1
 80294be:	b2db      	uxtb	r3, r3
 80294c0:	4293      	cmp	r3, r2
 80294c2:	ea80 0001 	eor.w	r0, r0, r1
 80294c6:	d3f7      	bcc.n	80294b8 <awe_packetProcessMulti+0x27c>
 80294c8:	5128      	str	r0, [r5, r4]
 80294ca:	2500      	movs	r5, #0
 80294cc:	e6cc      	b.n	8029268 <awe_packetProcessMulti+0x2c>
 80294ce:	68db      	ldr	r3, [r3, #12]
 80294d0:	6802      	ldr	r2, [r0, #0]
 80294d2:	429a      	cmp	r2, r3
 80294d4:	f47f aec7 	bne.w	8029266 <awe_packetProcessMulti+0x2a>
 80294d8:	e79a      	b.n	8029410 <awe_packetProcessMulti+0x1d4>
 80294da:	2203      	movs	r2, #3
 80294dc:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 80294e0:	e77e      	b.n	80293e0 <awe_packetProcessMulti+0x1a4>
 80294e2:	2204      	movs	r2, #4
 80294e4:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
 80294e8:	e77a      	b.n	80293e0 <awe_packetProcessMulti+0x1a4>
 80294ea:	f06f 0573 	mvn.w	r5, #115	@ 0x73
 80294ee:	e6bb      	b.n	8029268 <awe_packetProcessMulti+0x2c>
 80294f0:	68da      	ldr	r2, [r3, #12]
 80294f2:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80294f6:	f43f af13 	beq.w	8029320 <awe_packetProcessMulti+0xe4>
 80294fa:	e741      	b.n	8029380 <awe_packetProcessMulti+0x144>
 80294fc:	68da      	ldr	r2, [r3, #12]
 80294fe:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8029502:	f43f aed3 	beq.w	80292ac <awe_packetProcessMulti+0x70>
 8029506:	e73b      	b.n	8029380 <awe_packetProcessMulti+0x144>
 8029508:	2408      	movs	r4, #8
 802950a:	2202      	movs	r2, #2
 802950c:	e7d2      	b.n	80294b4 <awe_packetProcessMulti+0x278>
 802950e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8029510:	2b00      	cmp	r3, #0
 8029512:	f43f af26 	beq.w	8029362 <awe_packetProcessMulti+0x126>
 8029516:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8029518:	2b00      	cmp	r3, #0
 802951a:	f43f af22 	beq.w	8029362 <awe_packetProcessMulti+0x126>
 802951e:	4620      	mov	r0, r4
 8029520:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8029524:	f7ed b8e8 	b.w	80166f8 <awe_packetProcess>

08029528 <smr_biquad_reset>:
 8029528:	b570      	push	{r4, r5, r6, lr}
 802952a:	2101      	movs	r1, #1
 802952c:	2500      	movs	r5, #0
 802952e:	4604      	mov	r4, r0
 8029530:	1d06      	adds	r6, r0, #4
 8029532:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8029536:	6083      	str	r3, [r0, #8]
 8029538:	7001      	strb	r1, [r0, #0]
 802953a:	7041      	strb	r1, [r0, #1]
 802953c:	6045      	str	r5, [r0, #4]
 802953e:	60c5      	str	r5, [r0, #12]
 8029540:	6105      	str	r5, [r0, #16]
 8029542:	6145      	str	r5, [r0, #20]
 8029544:	6185      	str	r5, [r0, #24]
 8029546:	4632      	mov	r2, r6
 8029548:	f100 034c 	add.w	r3, r0, #76	@ 0x4c
 802954c:	30ac      	adds	r0, #172	@ 0xac
 802954e:	f000 f89d 	bl	802968c <smr_biquad_init>
 8029552:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 8029556:	4632      	mov	r2, r6
 8029558:	f104 037c 	add.w	r3, r4, #124	@ 0x7c
 802955c:	7861      	ldrb	r1, [r4, #1]
 802955e:	f000 f895 	bl	802968c <smr_biquad_init>
 8029562:	4628      	mov	r0, r5
 8029564:	bd70      	pop	{r4, r5, r6, pc}
 8029566:	bf00      	nop

08029568 <smr_biquad_setConfig>:
 8029568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802956a:	7807      	ldrb	r7, [r0, #0]
 802956c:	780b      	ldrb	r3, [r1, #0]
 802956e:	42bb      	cmp	r3, r7
 8029570:	d023      	beq.n	80295ba <smr_biquad_setConfig+0x52>
 8029572:	700f      	strb	r7, [r1, #0]
 8029574:	7845      	ldrb	r5, [r0, #1]
 8029576:	704d      	strb	r5, [r1, #1]
 8029578:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 802957c:	0063      	lsls	r3, r4, #1
 802957e:	d008      	beq.n	8029592 <smr_biquad_setConfig+0x2a>
 8029580:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
 8029584:	460b      	mov	r3, r1
 8029586:	f850 2f04 	ldr.w	r2, [r0, #4]!
 802958a:	f843 2f04 	str.w	r2, [r3, #4]!
 802958e:	42a0      	cmp	r0, r4
 8029590:	d1f9      	bne.n	8029586 <smr_biquad_setConfig+0x1e>
 8029592:	460c      	mov	r4, r1
 8029594:	1d0e      	adds	r6, r1, #4
 8029596:	4632      	mov	r2, r6
 8029598:	4629      	mov	r1, r5
 802959a:	f104 034c 	add.w	r3, r4, #76	@ 0x4c
 802959e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80295a2:	f000 f873 	bl	802968c <smr_biquad_init>
 80295a6:	4632      	mov	r2, r6
 80295a8:	f104 037c 	add.w	r3, r4, #124	@ 0x7c
 80295ac:	7861      	ldrb	r1, [r4, #1]
 80295ae:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 80295b2:	f000 f86b 	bl	802968c <smr_biquad_init>
 80295b6:	2000      	movs	r0, #0
 80295b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80295ba:	784b      	ldrb	r3, [r1, #1]
 80295bc:	f890 e001 	ldrb.w	lr, [r0, #1]
 80295c0:	459e      	cmp	lr, r3
 80295c2:	d1d6      	bne.n	8029572 <smr_biquad_setConfig+0xa>
 80295c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80295c8:	ea5f 034e 	movs.w	r3, lr, lsl #1
 80295cc:	d0f3      	beq.n	80295b6 <smr_biquad_setConfig+0x4e>
 80295ce:	eb01 0ece 	add.w	lr, r1, lr, lsl #3
 80295d2:	460b      	mov	r3, r1
 80295d4:	4604      	mov	r4, r0
 80295d6:	2200      	movs	r2, #0
 80295d8:	f853 6f04 	ldr.w	r6, [r3, #4]!
 80295dc:	f854 5f04 	ldr.w	r5, [r4, #4]!
 80295e0:	42ae      	cmp	r6, r5
 80295e2:	bf18      	it	ne
 80295e4:	2201      	movne	r2, #1
 80295e6:	4573      	cmp	r3, lr
 80295e8:	d1f6      	bne.n	80295d8 <smr_biquad_setConfig+0x70>
 80295ea:	2a00      	cmp	r2, #0
 80295ec:	d0e3      	beq.n	80295b6 <smr_biquad_setConfig+0x4e>
 80295ee:	e7c0      	b.n	8029572 <smr_biquad_setConfig+0xa>

080295f0 <smr_biquad_process>:
 80295f0:	6843      	ldr	r3, [r0, #4]
 80295f2:	2b04      	cmp	r3, #4
 80295f4:	d13c      	bne.n	8029670 <smr_biquad_process+0x80>
 80295f6:	684b      	ldr	r3, [r1, #4]
 80295f8:	2b04      	cmp	r3, #4
 80295fa:	d139      	bne.n	8029670 <smr_biquad_process+0x80>
 80295fc:	b570      	push	{r4, r5, r6, lr}
 80295fe:	7815      	ldrb	r5, [r2, #0]
 8029600:	688c      	ldr	r4, [r1, #8]
 8029602:	68c3      	ldr	r3, [r0, #12]
 8029604:	6881      	ldr	r1, [r0, #8]
 8029606:	2d01      	cmp	r5, #1
 8029608:	b082      	sub	sp, #8
 802960a:	d018      	beq.n	802963e <smr_biquad_process+0x4e>
 802960c:	b9a5      	cbnz	r5, 8029638 <smr_biquad_process+0x48>
 802960e:	6802      	ldr	r2, [r0, #0]
 8029610:	1e56      	subs	r6, r2, #1
 8029612:	2e01      	cmp	r6, #1
 8029614:	d829      	bhi.n	802966a <smr_biquad_process+0x7a>
 8029616:	fb02 f203 	mul.w	r2, r2, r3
 802961a:	2a00      	cmp	r2, #0
 802961c:	dd0c      	ble.n	8029638 <smr_biquad_process+0x48>
 802961e:	3904      	subs	r1, #4
 8029620:	1f22      	subs	r2, r4, #4
 8029622:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8029626:	f842 3f04 	str.w	r3, [r2, #4]!
 802962a:	6803      	ldr	r3, [r0, #0]
 802962c:	68c4      	ldr	r4, [r0, #12]
 802962e:	3501      	adds	r5, #1
 8029630:	fb04 f403 	mul.w	r4, r4, r3
 8029634:	42ac      	cmp	r4, r5
 8029636:	dcf4      	bgt.n	8029622 <smr_biquad_process+0x32>
 8029638:	2000      	movs	r0, #0
 802963a:	b002      	add	sp, #8
 802963c:	bd70      	pop	{r4, r5, r6, pc}
 802963e:	4615      	mov	r5, r2
 8029640:	6802      	ldr	r2, [r0, #0]
 8029642:	2a01      	cmp	r2, #1
 8029644:	d01a      	beq.n	802967c <smr_biquad_process+0x8c>
 8029646:	2a02      	cmp	r2, #2
 8029648:	d10f      	bne.n	802966a <smr_biquad_process+0x7a>
 802964a:	6902      	ldr	r2, [r0, #16]
 802964c:	2a01      	cmp	r2, #1
 802964e:	d112      	bne.n	8029676 <smr_biquad_process+0x86>
 8029650:	9201      	str	r2, [sp, #4]
 8029652:	9300      	str	r3, [sp, #0]
 8029654:	460a      	mov	r2, r1
 8029656:	f105 00ac 	add.w	r0, r5, #172	@ 0xac
 802965a:	4623      	mov	r3, r4
 802965c:	f105 01bc 	add.w	r1, r5, #188	@ 0xbc
 8029660:	f000 f970 	bl	8029944 <smr_biquad_stereo_compute>
 8029664:	2000      	movs	r0, #0
 8029666:	b002      	add	sp, #8
 8029668:	bd70      	pop	{r4, r5, r6, pc}
 802966a:	f06f 0001 	mvn.w	r0, #1
 802966e:	e7e4      	b.n	802963a <smr_biquad_process+0x4a>
 8029670:	f06f 0002 	mvn.w	r0, #2
 8029674:	4770      	bx	lr
 8029676:	f04f 30ff 	mov.w	r0, #4294967295
 802967a:	e7de      	b.n	802963a <smr_biquad_process+0x4a>
 802967c:	f105 00ac 	add.w	r0, r5, #172	@ 0xac
 8029680:	4622      	mov	r2, r4
 8029682:	f000 f80f 	bl	80296a4 <smr_biquad_mono_compute>
 8029686:	2000      	movs	r0, #0
 8029688:	e7d7      	b.n	802963a <smr_biquad_process+0x4a>
 802968a:	bf00      	nop

0802968c <smr_biquad_init>:
 802968c:	b538      	push	{r3, r4, r5, lr}
 802968e:	4604      	mov	r4, r0
 8029690:	6082      	str	r2, [r0, #8]
 8029692:	6001      	str	r1, [r0, #0]
 8029694:	461d      	mov	r5, r3
 8029696:	010a      	lsls	r2, r1, #4
 8029698:	4618      	mov	r0, r3
 802969a:	2100      	movs	r1, #0
 802969c:	f004 fa5a 	bl	802db54 <memset>
 80296a0:	6065      	str	r5, [r4, #4]
 80296a2:	bd38      	pop	{r3, r4, r5, pc}

080296a4 <smr_biquad_mono_compute>:
 80296a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296a8:	b08d      	sub	sp, #52	@ 0x34
 80296aa:	08dc      	lsrs	r4, r3, #3
 80296ac:	9407      	str	r4, [sp, #28]
 80296ae:	0124      	lsls	r4, r4, #4
 80296b0:	4626      	mov	r6, r4
 80296b2:	9408      	str	r4, [sp, #32]
 80296b4:	4617      	mov	r7, r2
 80296b6:	c831      	ldmia	r0, {r0, r4, r5}
 80296b8:	f003 0307 	and.w	r3, r3, #7
 80296bc:	9206      	str	r2, [sp, #24]
 80296be:	19ba      	adds	r2, r7, r6
 80296c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80296c2:	f102 0310 	add.w	r3, r2, #16
 80296c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80296c8:	1993      	adds	r3, r2, r6
 80296ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80296cc:	f105 0318 	add.w	r3, r5, #24
 80296d0:	9304      	str	r3, [sp, #16]
 80296d2:	f104 0310 	add.w	r3, r4, #16
 80296d6:	9005      	str	r0, [sp, #20]
 80296d8:	9102      	str	r1, [sp, #8]
 80296da:	9303      	str	r3, [sp, #12]
 80296dc:	9a04      	ldr	r2, [sp, #16]
 80296de:	f852 5c18 	ldr.w	r5, [r2, #-24]
 80296e2:	f852 bc14 	ldr.w	fp, [r2, #-20]
 80296e6:	f852 6c10 	ldr.w	r6, [r2, #-16]
 80296ea:	f852 7c0c 	ldr.w	r7, [r2, #-12]
 80296ee:	f852 ec08 	ldr.w	lr, [r2, #-8]
 80296f2:	f852 cc04 	ldr.w	ip, [r2, #-4]
 80296f6:	9a03      	ldr	r2, [sp, #12]
 80296f8:	f852 0c10 	ldr.w	r0, [r2, #-16]
 80296fc:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 8029700:	e912 0018 	ldmdb	r2, {r3, r4}
 8029704:	1c6a      	adds	r2, r5, #1
 8029706:	9201      	str	r2, [sp, #4]
 8029708:	9a07      	ldr	r2, [sp, #28]
 802970a:	2a00      	cmp	r2, #0
 802970c:	f000 8116 	beq.w	802993c <smr_biquad_mono_compute+0x298>
 8029710:	9d02      	ldr	r5, [sp, #8]
 8029712:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8029716:	9200      	str	r2, [sp, #0]
 8029718:	f105 0a10 	add.w	sl, r5, #16
 802971c:	9d06      	ldr	r5, [sp, #24]
 802971e:	f105 0910 	add.w	r9, r5, #16
 8029722:	f85a 5c10 	ldr.w	r5, [sl, #-16]
 8029726:	10ad      	asrs	r5, r5, #2
 8029728:	fb56 f210 	smmulr	r2, r6, r0
 802972c:	fb5b 2215 	smmlar	r2, fp, r5, r2
 8029730:	fb57 2111 	smmlar	r1, r7, r1, r2
 8029734:	fb5e 1113 	smmlar	r1, lr, r3, r1
 8029738:	fb5c 1414 	smmlar	r4, ip, r4, r1
 802973c:	f85a 2c0c 	ldr.w	r2, [sl, #-12]
 8029740:	fa04 f408 	lsl.w	r4, r4, r8
 8029744:	0061      	lsls	r1, r4, #1
 8029746:	f301 011e 	ssat	r1, #31, r1
 802974a:	0049      	lsls	r1, r1, #1
 802974c:	f849 1c10 	str.w	r1, [r9, #-16]
 8029750:	1092      	asrs	r2, r2, #2
 8029752:	fb5b f112 	smmulr	r1, fp, r2
 8029756:	fb56 1115 	smmlar	r1, r6, r5, r1
 802975a:	fb57 1010 	smmlar	r0, r7, r0, r1
 802975e:	fb5e 0014 	smmlar	r0, lr, r4, r0
 8029762:	fb5c 0313 	smmlar	r3, ip, r3, r0
 8029766:	f85a 1c08 	ldr.w	r1, [sl, #-8]
 802976a:	fa03 f308 	lsl.w	r3, r3, r8
 802976e:	0058      	lsls	r0, r3, #1
 8029770:	f300 001e 	ssat	r0, #31, r0
 8029774:	0040      	lsls	r0, r0, #1
 8029776:	f849 0c0c 	str.w	r0, [r9, #-12]
 802977a:	1089      	asrs	r1, r1, #2
 802977c:	fb5b f011 	smmulr	r0, fp, r1
 8029780:	fb56 0012 	smmlar	r0, r6, r2, r0
 8029784:	fb57 0515 	smmlar	r5, r7, r5, r0
 8029788:	fb5e 5513 	smmlar	r5, lr, r3, r5
 802978c:	fb5c 5414 	smmlar	r4, ip, r4, r5
 8029790:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8029794:	fa04 f408 	lsl.w	r4, r4, r8
 8029798:	0065      	lsls	r5, r4, #1
 802979a:	f305 051e 	ssat	r5, #31, r5
 802979e:	006d      	lsls	r5, r5, #1
 80297a0:	f849 5c08 	str.w	r5, [r9, #-8]
 80297a4:	1080      	asrs	r0, r0, #2
 80297a6:	fb5b f510 	smmulr	r5, fp, r0
 80297aa:	fb56 5511 	smmlar	r5, r6, r1, r5
 80297ae:	fb57 5212 	smmlar	r2, r7, r2, r5
 80297b2:	fb5e 2214 	smmlar	r2, lr, r4, r2
 80297b6:	fb5c 2313 	smmlar	r3, ip, r3, r2
 80297ba:	fa03 f308 	lsl.w	r3, r3, r8
 80297be:	005a      	lsls	r2, r3, #1
 80297c0:	f302 021e 	ssat	r2, #31, r2
 80297c4:	0052      	lsls	r2, r2, #1
 80297c6:	f849 2c04 	str.w	r2, [r9, #-4]
 80297ca:	9a00      	ldr	r2, [sp, #0]
 80297cc:	3a01      	subs	r2, #1
 80297ce:	f10a 0a10 	add.w	sl, sl, #16
 80297d2:	f109 0910 	add.w	r9, r9, #16
 80297d6:	9200      	str	r2, [sp, #0]
 80297d8:	d1a3      	bne.n	8029722 <smr_biquad_mono_compute+0x7e>
 80297da:	9a02      	ldr	r2, [sp, #8]
 80297dc:	9d08      	ldr	r5, [sp, #32]
 80297de:	442a      	add	r2, r5
 80297e0:	46c2      	mov	sl, r8
 80297e2:	9202      	str	r2, [sp, #8]
 80297e4:	f102 0910 	add.w	r9, r2, #16
 80297e8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80297ec:	9a07      	ldr	r2, [sp, #28]
 80297ee:	9200      	str	r2, [sp, #0]
 80297f0:	f859 5c10 	ldr.w	r5, [r9, #-16]
 80297f4:	10ad      	asrs	r5, r5, #2
 80297f6:	fb56 f210 	smmulr	r2, r6, r0
 80297fa:	fb5b 2215 	smmlar	r2, fp, r5, r2
 80297fe:	fb57 2111 	smmlar	r1, r7, r1, r2
 8029802:	fb5e 1113 	smmlar	r1, lr, r3, r1
 8029806:	fb5c 1414 	smmlar	r4, ip, r4, r1
 802980a:	f859 2c0c 	ldr.w	r2, [r9, #-12]
 802980e:	fa04 f40a 	lsl.w	r4, r4, sl
 8029812:	0061      	lsls	r1, r4, #1
 8029814:	f301 011e 	ssat	r1, #31, r1
 8029818:	0049      	lsls	r1, r1, #1
 802981a:	f848 1c10 	str.w	r1, [r8, #-16]
 802981e:	1092      	asrs	r2, r2, #2
 8029820:	fb5b f112 	smmulr	r1, fp, r2
 8029824:	fb56 1115 	smmlar	r1, r6, r5, r1
 8029828:	fb57 1010 	smmlar	r0, r7, r0, r1
 802982c:	fb5e 0014 	smmlar	r0, lr, r4, r0
 8029830:	fb5c 0313 	smmlar	r3, ip, r3, r0
 8029834:	f859 1c08 	ldr.w	r1, [r9, #-8]
 8029838:	fa03 f30a 	lsl.w	r3, r3, sl
 802983c:	0058      	lsls	r0, r3, #1
 802983e:	f300 001e 	ssat	r0, #31, r0
 8029842:	0040      	lsls	r0, r0, #1
 8029844:	f848 0c0c 	str.w	r0, [r8, #-12]
 8029848:	1089      	asrs	r1, r1, #2
 802984a:	fb5b f011 	smmulr	r0, fp, r1
 802984e:	fb56 0012 	smmlar	r0, r6, r2, r0
 8029852:	fb57 0515 	smmlar	r5, r7, r5, r0
 8029856:	fb5e 5513 	smmlar	r5, lr, r3, r5
 802985a:	fb5c 5414 	smmlar	r4, ip, r4, r5
 802985e:	f859 0c04 	ldr.w	r0, [r9, #-4]
 8029862:	fa04 f40a 	lsl.w	r4, r4, sl
 8029866:	0065      	lsls	r5, r4, #1
 8029868:	f305 051e 	ssat	r5, #31, r5
 802986c:	006d      	lsls	r5, r5, #1
 802986e:	f848 5c08 	str.w	r5, [r8, #-8]
 8029872:	1080      	asrs	r0, r0, #2
 8029874:	fb5b f510 	smmulr	r5, fp, r0
 8029878:	fb56 5511 	smmlar	r5, r6, r1, r5
 802987c:	fb57 5212 	smmlar	r2, r7, r2, r5
 8029880:	fb5e 2214 	smmlar	r2, lr, r4, r2
 8029884:	fb5c 2313 	smmlar	r3, ip, r3, r2
 8029888:	fa03 f30a 	lsl.w	r3, r3, sl
 802988c:	005a      	lsls	r2, r3, #1
 802988e:	f302 021e 	ssat	r2, #31, r2
 8029892:	0052      	lsls	r2, r2, #1
 8029894:	f848 2c04 	str.w	r2, [r8, #-4]
 8029898:	9a00      	ldr	r2, [sp, #0]
 802989a:	3a01      	subs	r2, #1
 802989c:	f109 0910 	add.w	r9, r9, #16
 80298a0:	f108 0810 	add.w	r8, r8, #16
 80298a4:	9200      	str	r2, [sp, #0]
 80298a6:	d1a3      	bne.n	80297f0 <smr_biquad_mono_compute+0x14c>
 80298a8:	9a02      	ldr	r2, [sp, #8]
 80298aa:	9d08      	ldr	r5, [sp, #32]
 80298ac:	f8cd a004 	str.w	sl, [sp, #4]
 80298b0:	442a      	add	r2, r5
 80298b2:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 80298b6:	9202      	str	r2, [sp, #8]
 80298b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80298ba:	2a00      	cmp	r2, #0
 80298bc:	d039      	beq.n	8029932 <smr_biquad_mono_compute+0x28e>
 80298be:	4691      	mov	r9, r2
 80298c0:	9d02      	ldr	r5, [sp, #8]
 80298c2:	e001      	b.n	80298c8 <smr_biquad_mono_compute+0x224>
 80298c4:	4613      	mov	r3, r2
 80298c6:	4640      	mov	r0, r8
 80298c8:	f855 2b04 	ldr.w	r2, [r5], #4
 80298cc:	ea4f 08a2 	mov.w	r8, r2, asr #2
 80298d0:	fb5b f218 	smmulr	r2, fp, r8
 80298d4:	fb56 2210 	smmlar	r2, r6, r0, r2
 80298d8:	fb57 2211 	smmlar	r2, r7, r1, r2
 80298dc:	fb5e 2213 	smmlar	r2, lr, r3, r2
 80298e0:	fb5c 2214 	smmlar	r2, ip, r4, r2
 80298e4:	9901      	ldr	r1, [sp, #4]
 80298e6:	408a      	lsls	r2, r1
 80298e8:	0051      	lsls	r1, r2, #1
 80298ea:	f1b9 0901 	subs.w	r9, r9, #1
 80298ee:	f301 011e 	ssat	r1, #31, r1
 80298f2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80298f6:	f84a 1b04 	str.w	r1, [sl], #4
 80298fa:	461c      	mov	r4, r3
 80298fc:	4601      	mov	r1, r0
 80298fe:	d1e1      	bne.n	80298c4 <smr_biquad_mono_compute+0x220>
 8029900:	9c03      	ldr	r4, [sp, #12]
 8029902:	f844 3c04 	str.w	r3, [r4, #-4]
 8029906:	9b04      	ldr	r3, [sp, #16]
 8029908:	f844 8c10 	str.w	r8, [r4, #-16]
 802990c:	3318      	adds	r3, #24
 802990e:	9304      	str	r3, [sp, #16]
 8029910:	f104 0310 	add.w	r3, r4, #16
 8029914:	9303      	str	r3, [sp, #12]
 8029916:	9b06      	ldr	r3, [sp, #24]
 8029918:	9302      	str	r3, [sp, #8]
 802991a:	9b05      	ldr	r3, [sp, #20]
 802991c:	f844 0c0c 	str.w	r0, [r4, #-12]
 8029920:	3b01      	subs	r3, #1
 8029922:	f844 2c08 	str.w	r2, [r4, #-8]
 8029926:	9305      	str	r3, [sp, #20]
 8029928:	f47f aed8 	bne.w	80296dc <smr_biquad_mono_compute+0x38>
 802992c:	b00d      	add	sp, #52	@ 0x34
 802992e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029932:	461a      	mov	r2, r3
 8029934:	4680      	mov	r8, r0
 8029936:	4623      	mov	r3, r4
 8029938:	4608      	mov	r0, r1
 802993a:	e7e1      	b.n	8029900 <smr_biquad_mono_compute+0x25c>
 802993c:	f8dd a018 	ldr.w	sl, [sp, #24]
 8029940:	e7ba      	b.n	80298b8 <smr_biquad_mono_compute+0x214>
 8029942:	bf00      	nop

08029944 <smr_biquad_stereo_compute>:
 8029944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029948:	684e      	ldr	r6, [r1, #4]
 802994a:	b091      	sub	sp, #68	@ 0x44
 802994c:	c823      	ldmia	r0, {r0, r1, r5}
 802994e:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 8029950:	900b      	str	r0, [sp, #44]	@ 0x2c
 8029952:	08a0      	lsrs	r0, r4, #2
 8029954:	9008      	str	r0, [sp, #32]
 8029956:	0140      	lsls	r0, r0, #5
 8029958:	930c      	str	r3, [sp, #48]	@ 0x30
 802995a:	4403      	add	r3, r0
 802995c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802995e:	f105 0318 	add.w	r3, r5, #24
 8029962:	f004 0703 	and.w	r7, r4, #3
 8029966:	9306      	str	r3, [sp, #24]
 8029968:	00e4      	lsls	r4, r4, #3
 802996a:	f101 0310 	add.w	r3, r1, #16
 802996e:	9305      	str	r3, [sp, #20]
 8029970:	f1c4 0304 	rsb	r3, r4, #4
 8029974:	3610      	adds	r6, #16
 8029976:	930e      	str	r3, [sp, #56]	@ 0x38
 8029978:	00fb      	lsls	r3, r7, #3
 802997a:	9009      	str	r0, [sp, #36]	@ 0x24
 802997c:	970a      	str	r7, [sp, #40]	@ 0x28
 802997e:	9607      	str	r6, [sp, #28]
 8029980:	9203      	str	r2, [sp, #12]
 8029982:	930d      	str	r3, [sp, #52]	@ 0x34
 8029984:	9a06      	ldr	r2, [sp, #24]
 8029986:	4613      	mov	r3, r2
 8029988:	f852 0c18 	ldr.w	r0, [r2, #-24]
 802998c:	f852 2c14 	ldr.w	r2, [r2, #-20]
 8029990:	9202      	str	r2, [sp, #8]
 8029992:	9a05      	ldr	r2, [sp, #20]
 8029994:	f853 4c10 	ldr.w	r4, [r3, #-16]
 8029998:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 802999c:	f853 6c08 	ldr.w	r6, [r3, #-8]
 80299a0:	f853 7c04 	ldr.w	r7, [r3, #-4]
 80299a4:	f852 ec10 	ldr.w	lr, [r2, #-16]
 80299a8:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 80299ac:	f852 3c08 	ldr.w	r3, [r2, #-8]
 80299b0:	f852 cc04 	ldr.w	ip, [r2, #-4]
 80299b4:	1c42      	adds	r2, r0, #1
 80299b6:	9201      	str	r2, [sp, #4]
 80299b8:	9a08      	ldr	r2, [sp, #32]
 80299ba:	2a00      	cmp	r2, #0
 80299bc:	f000 818e 	beq.w	8029cdc <smr_biquad_stereo_compute+0x398>
 80299c0:	9803      	ldr	r0, [sp, #12]
 80299c2:	f8dd b008 	ldr.w	fp, [sp, #8]
 80299c6:	f100 0920 	add.w	r9, r0, #32
 80299ca:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80299cc:	f100 0820 	add.w	r8, r0, #32
 80299d0:	9801      	ldr	r0, [sp, #4]
 80299d2:	9201      	str	r2, [sp, #4]
 80299d4:	f859 2c20 	ldr.w	r2, [r9, #-32]
 80299d8:	ea4f 0aa2 	mov.w	sl, r2, asr #2
 80299dc:	fb54 f21e 	smmulr	r2, r4, lr
 80299e0:	fb5b 221a 	smmlar	r2, fp, sl, r2
 80299e4:	fb55 2111 	smmlar	r1, r5, r1, r2
 80299e8:	fb56 1113 	smmlar	r1, r6, r3, r1
 80299ec:	fb57 1c1c 	smmlar	ip, r7, ip, r1
 80299f0:	f859 2c18 	ldr.w	r2, [r9, #-24]
 80299f4:	fa0c fc00 	lsl.w	ip, ip, r0
 80299f8:	ea4f 014c 	mov.w	r1, ip, lsl #1
 80299fc:	f301 011e 	ssat	r1, #31, r1
 8029a00:	0049      	lsls	r1, r1, #1
 8029a02:	f848 1c20 	str.w	r1, [r8, #-32]
 8029a06:	1092      	asrs	r2, r2, #2
 8029a08:	fb5b f112 	smmulr	r1, fp, r2
 8029a0c:	fb54 111a 	smmlar	r1, r4, sl, r1
 8029a10:	fb55 1e1e 	smmlar	lr, r5, lr, r1
 8029a14:	fb56 ee1c 	smmlar	lr, r6, ip, lr
 8029a18:	fb57 e313 	smmlar	r3, r7, r3, lr
 8029a1c:	f859 ec10 	ldr.w	lr, [r9, #-16]
 8029a20:	4083      	lsls	r3, r0
 8029a22:	0059      	lsls	r1, r3, #1
 8029a24:	f301 011e 	ssat	r1, #31, r1
 8029a28:	0049      	lsls	r1, r1, #1
 8029a2a:	f848 1c18 	str.w	r1, [r8, #-24]
 8029a2e:	ea4f 01ae 	mov.w	r1, lr, asr #2
 8029a32:	fb5b fe11 	smmulr	lr, fp, r1
 8029a36:	fb54 ee12 	smmlar	lr, r4, r2, lr
 8029a3a:	fb55 ea1a 	smmlar	sl, r5, sl, lr
 8029a3e:	fb56 aa13 	smmlar	sl, r6, r3, sl
 8029a42:	fb57 ac1c 	smmlar	ip, r7, ip, sl
 8029a46:	f859 ec08 	ldr.w	lr, [r9, #-8]
 8029a4a:	fa0c fc00 	lsl.w	ip, ip, r0
 8029a4e:	ea4f 0a4c 	mov.w	sl, ip, lsl #1
 8029a52:	f30a 0a1e 	ssat	sl, #31, sl
 8029a56:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8029a5a:	f848 ac10 	str.w	sl, [r8, #-16]
 8029a5e:	ea4f 0eae 	mov.w	lr, lr, asr #2
 8029a62:	fb5b fa1e 	smmulr	sl, fp, lr
 8029a66:	fb54 aa11 	smmlar	sl, r4, r1, sl
 8029a6a:	fb55 a212 	smmlar	r2, r5, r2, sl
 8029a6e:	fb56 221c 	smmlar	r2, r6, ip, r2
 8029a72:	fb57 2313 	smmlar	r3, r7, r3, r2
 8029a76:	4083      	lsls	r3, r0
 8029a78:	005a      	lsls	r2, r3, #1
 8029a7a:	f302 021e 	ssat	r2, #31, r2
 8029a7e:	0052      	lsls	r2, r2, #1
 8029a80:	f848 2c08 	str.w	r2, [r8, #-8]
 8029a84:	9a01      	ldr	r2, [sp, #4]
 8029a86:	3a01      	subs	r2, #1
 8029a88:	f109 0920 	add.w	r9, r9, #32
 8029a8c:	f108 0820 	add.w	r8, r8, #32
 8029a90:	9201      	str	r2, [sp, #4]
 8029a92:	d19f      	bne.n	80299d4 <smr_biquad_stereo_compute+0x90>
 8029a94:	9a03      	ldr	r2, [sp, #12]
 8029a96:	9001      	str	r0, [sp, #4]
 8029a98:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029a9a:	4402      	add	r2, r0
 8029a9c:	9203      	str	r2, [sp, #12]
 8029a9e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8029aa0:	9204      	str	r2, [sp, #16]
 8029aa2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8029aa4:	2a00      	cmp	r2, #0
 8029aa6:	f000 8114 	beq.w	8029cd2 <smr_biquad_stereo_compute+0x38e>
 8029aaa:	9803      	ldr	r0, [sp, #12]
 8029aac:	f100 0b08 	add.w	fp, r0, #8
 8029ab0:	9804      	ldr	r0, [sp, #16]
 8029ab2:	4691      	mov	r9, r2
 8029ab4:	f100 0a08 	add.w	sl, r0, #8
 8029ab8:	9802      	ldr	r0, [sp, #8]
 8029aba:	e001      	b.n	8029ac0 <smr_biquad_stereo_compute+0x17c>
 8029abc:	4643      	mov	r3, r8
 8029abe:	4696      	mov	lr, r2
 8029ac0:	f85b 2c08 	ldr.w	r2, [fp, #-8]
 8029ac4:	1092      	asrs	r2, r2, #2
 8029ac6:	fb50 f812 	smmulr	r8, r0, r2
 8029aca:	fb54 881e 	smmlar	r8, r4, lr, r8
 8029ace:	fb55 8811 	smmlar	r8, r5, r1, r8
 8029ad2:	fb56 8813 	smmlar	r8, r6, r3, r8
 8029ad6:	fb57 881c 	smmlar	r8, r7, ip, r8
 8029ada:	9901      	ldr	r1, [sp, #4]
 8029adc:	fa08 f801 	lsl.w	r8, r8, r1
 8029ae0:	ea4f 0148 	mov.w	r1, r8, lsl #1
 8029ae4:	f1b9 0901 	subs.w	r9, r9, #1
 8029ae8:	f301 011e 	ssat	r1, #31, r1
 8029aec:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8029af0:	f84a 1c08 	str.w	r1, [sl, #-8]
 8029af4:	f10b 0b08 	add.w	fp, fp, #8
 8029af8:	4671      	mov	r1, lr
 8029afa:	f10a 0a08 	add.w	sl, sl, #8
 8029afe:	469c      	mov	ip, r3
 8029b00:	d1dc      	bne.n	8029abc <smr_biquad_stereo_compute+0x178>
 8029b02:	9803      	ldr	r0, [sp, #12]
 8029b04:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8029b06:	4408      	add	r0, r1
 8029b08:	9003      	str	r0, [sp, #12]
 8029b0a:	9804      	ldr	r0, [sp, #16]
 8029b0c:	4408      	add	r0, r1
 8029b0e:	9004      	str	r0, [sp, #16]
 8029b10:	9805      	ldr	r0, [sp, #20]
 8029b12:	f840 3c04 	str.w	r3, [r0, #-4]
 8029b16:	9b03      	ldr	r3, [sp, #12]
 8029b18:	f840 2c10 	str.w	r2, [r0, #-16]
 8029b1c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8029b1e:	f840 ec0c 	str.w	lr, [r0, #-12]
 8029b22:	4619      	mov	r1, r3
 8029b24:	4411      	add	r1, r2
 8029b26:	9103      	str	r1, [sp, #12]
 8029b28:	9904      	ldr	r1, [sp, #16]
 8029b2a:	f840 8c08 	str.w	r8, [r0, #-8]
 8029b2e:	4411      	add	r1, r2
 8029b30:	9a07      	ldr	r2, [sp, #28]
 8029b32:	9104      	str	r1, [sp, #16]
 8029b34:	f852 ec10 	ldr.w	lr, [r2, #-16]
 8029b38:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 8029b3c:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8029b40:	f852 cc04 	ldr.w	ip, [r2, #-4]
 8029b44:	9a08      	ldr	r2, [sp, #32]
 8029b46:	2a00      	cmp	r2, #0
 8029b48:	d073      	beq.n	8029c32 <smr_biquad_stereo_compute+0x2ee>
 8029b4a:	4693      	mov	fp, r2
 8029b4c:	9a03      	ldr	r2, [sp, #12]
 8029b4e:	9801      	ldr	r0, [sp, #4]
 8029b50:	f8cd b004 	str.w	fp, [sp, #4]
 8029b54:	f102 0920 	add.w	r9, r2, #32
 8029b58:	9a04      	ldr	r2, [sp, #16]
 8029b5a:	f8dd b008 	ldr.w	fp, [sp, #8]
 8029b5e:	f102 0820 	add.w	r8, r2, #32
 8029b62:	f859 2c20 	ldr.w	r2, [r9, #-32]
 8029b66:	ea4f 0aa2 	mov.w	sl, r2, asr #2
 8029b6a:	fb54 f21e 	smmulr	r2, r4, lr
 8029b6e:	fb5b 221a 	smmlar	r2, fp, sl, r2
 8029b72:	fb55 2111 	smmlar	r1, r5, r1, r2
 8029b76:	fb56 1113 	smmlar	r1, r6, r3, r1
 8029b7a:	fb57 1c1c 	smmlar	ip, r7, ip, r1
 8029b7e:	f859 2c18 	ldr.w	r2, [r9, #-24]
 8029b82:	fa0c fc00 	lsl.w	ip, ip, r0
 8029b86:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8029b8a:	f301 011e 	ssat	r1, #31, r1
 8029b8e:	0049      	lsls	r1, r1, #1
 8029b90:	f848 1c20 	str.w	r1, [r8, #-32]
 8029b94:	1092      	asrs	r2, r2, #2
 8029b96:	fb5b f112 	smmulr	r1, fp, r2
 8029b9a:	fb54 111a 	smmlar	r1, r4, sl, r1
 8029b9e:	fb55 1e1e 	smmlar	lr, r5, lr, r1
 8029ba2:	fb56 ee1c 	smmlar	lr, r6, ip, lr
 8029ba6:	fb57 e313 	smmlar	r3, r7, r3, lr
 8029baa:	f859 ec10 	ldr.w	lr, [r9, #-16]
 8029bae:	4083      	lsls	r3, r0
 8029bb0:	0059      	lsls	r1, r3, #1
 8029bb2:	f301 011e 	ssat	r1, #31, r1
 8029bb6:	0049      	lsls	r1, r1, #1
 8029bb8:	f848 1c18 	str.w	r1, [r8, #-24]
 8029bbc:	ea4f 01ae 	mov.w	r1, lr, asr #2
 8029bc0:	fb5b fe11 	smmulr	lr, fp, r1
 8029bc4:	fb54 ee12 	smmlar	lr, r4, r2, lr
 8029bc8:	fb55 ea1a 	smmlar	sl, r5, sl, lr
 8029bcc:	fb56 aa13 	smmlar	sl, r6, r3, sl
 8029bd0:	fb57 ac1c 	smmlar	ip, r7, ip, sl
 8029bd4:	f859 ec08 	ldr.w	lr, [r9, #-8]
 8029bd8:	fa0c fc00 	lsl.w	ip, ip, r0
 8029bdc:	ea4f 0a4c 	mov.w	sl, ip, lsl #1
 8029be0:	f30a 0a1e 	ssat	sl, #31, sl
 8029be4:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8029be8:	f848 ac10 	str.w	sl, [r8, #-16]
 8029bec:	ea4f 0eae 	mov.w	lr, lr, asr #2
 8029bf0:	fb5b fa1e 	smmulr	sl, fp, lr
 8029bf4:	fb54 aa11 	smmlar	sl, r4, r1, sl
 8029bf8:	fb55 a212 	smmlar	r2, r5, r2, sl
 8029bfc:	fb56 221c 	smmlar	r2, r6, ip, r2
 8029c00:	fb57 2313 	smmlar	r3, r7, r3, r2
 8029c04:	4083      	lsls	r3, r0
 8029c06:	005a      	lsls	r2, r3, #1
 8029c08:	f302 021e 	ssat	r2, #31, r2
 8029c0c:	0052      	lsls	r2, r2, #1
 8029c0e:	f848 2c08 	str.w	r2, [r8, #-8]
 8029c12:	9a01      	ldr	r2, [sp, #4]
 8029c14:	3a01      	subs	r2, #1
 8029c16:	f109 0920 	add.w	r9, r9, #32
 8029c1a:	f108 0820 	add.w	r8, r8, #32
 8029c1e:	9201      	str	r2, [sp, #4]
 8029c20:	d19f      	bne.n	8029b62 <smr_biquad_stereo_compute+0x21e>
 8029c22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029c24:	9001      	str	r0, [sp, #4]
 8029c26:	9803      	ldr	r0, [sp, #12]
 8029c28:	4410      	add	r0, r2
 8029c2a:	9003      	str	r0, [sp, #12]
 8029c2c:	9804      	ldr	r0, [sp, #16]
 8029c2e:	4410      	add	r0, r2
 8029c30:	9004      	str	r0, [sp, #16]
 8029c32:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8029c34:	2a00      	cmp	r2, #0
 8029c36:	d047      	beq.n	8029cc8 <smr_biquad_stereo_compute+0x384>
 8029c38:	9803      	ldr	r0, [sp, #12]
 8029c3a:	f100 0b08 	add.w	fp, r0, #8
 8029c3e:	9804      	ldr	r0, [sp, #16]
 8029c40:	4691      	mov	r9, r2
 8029c42:	f100 0a08 	add.w	sl, r0, #8
 8029c46:	9802      	ldr	r0, [sp, #8]
 8029c48:	e001      	b.n	8029c4e <smr_biquad_stereo_compute+0x30a>
 8029c4a:	4643      	mov	r3, r8
 8029c4c:	4696      	mov	lr, r2
 8029c4e:	f85b 2c08 	ldr.w	r2, [fp, #-8]
 8029c52:	1092      	asrs	r2, r2, #2
 8029c54:	fb50 f812 	smmulr	r8, r0, r2
 8029c58:	fb54 881e 	smmlar	r8, r4, lr, r8
 8029c5c:	fb55 8811 	smmlar	r8, r5, r1, r8
 8029c60:	fb56 8813 	smmlar	r8, r6, r3, r8
 8029c64:	fb57 881c 	smmlar	r8, r7, ip, r8
 8029c68:	9901      	ldr	r1, [sp, #4]
 8029c6a:	fa08 f801 	lsl.w	r8, r8, r1
 8029c6e:	ea4f 0148 	mov.w	r1, r8, lsl #1
 8029c72:	f1b9 0901 	subs.w	r9, r9, #1
 8029c76:	f301 011e 	ssat	r1, #31, r1
 8029c7a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8029c7e:	f84a 1c08 	str.w	r1, [sl, #-8]
 8029c82:	f10b 0b08 	add.w	fp, fp, #8
 8029c86:	4671      	mov	r1, lr
 8029c88:	f10a 0a08 	add.w	sl, sl, #8
 8029c8c:	469c      	mov	ip, r3
 8029c8e:	d1dc      	bne.n	8029c4a <smr_biquad_stereo_compute+0x306>
 8029c90:	9807      	ldr	r0, [sp, #28]
 8029c92:	f840 3c04 	str.w	r3, [r0, #-4]
 8029c96:	9b06      	ldr	r3, [sp, #24]
 8029c98:	f840 2c10 	str.w	r2, [r0, #-16]
 8029c9c:	3318      	adds	r3, #24
 8029c9e:	9306      	str	r3, [sp, #24]
 8029ca0:	9b05      	ldr	r3, [sp, #20]
 8029ca2:	f840 ec0c 	str.w	lr, [r0, #-12]
 8029ca6:	3310      	adds	r3, #16
 8029ca8:	9305      	str	r3, [sp, #20]
 8029caa:	f100 0310 	add.w	r3, r0, #16
 8029cae:	9307      	str	r3, [sp, #28]
 8029cb0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029cb2:	9303      	str	r3, [sp, #12]
 8029cb4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029cb6:	f840 8c08 	str.w	r8, [r0, #-8]
 8029cba:	3b01      	subs	r3, #1
 8029cbc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029cbe:	f47f ae61 	bne.w	8029984 <smr_biquad_stereo_compute+0x40>
 8029cc2:	b011      	add	sp, #68	@ 0x44
 8029cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029cc8:	4698      	mov	r8, r3
 8029cca:	4672      	mov	r2, lr
 8029ccc:	4663      	mov	r3, ip
 8029cce:	468e      	mov	lr, r1
 8029cd0:	e7de      	b.n	8029c90 <smr_biquad_stereo_compute+0x34c>
 8029cd2:	4698      	mov	r8, r3
 8029cd4:	4672      	mov	r2, lr
 8029cd6:	4663      	mov	r3, ip
 8029cd8:	468e      	mov	lr, r1
 8029cda:	e719      	b.n	8029b10 <smr_biquad_stereo_compute+0x1cc>
 8029cdc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8029cde:	9204      	str	r2, [sp, #16]
 8029ce0:	e6df      	b.n	8029aa2 <smr_biquad_stereo_compute+0x15e>
 8029ce2:	bf00      	nop

08029ce4 <awe_vecBiquadNCascade_2ch>:
 8029ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ce8:	b085      	sub	sp, #20
 8029cea:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	@ 0x40
 8029cee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8029cf0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8029cf2:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
 8029cf6:	e9cd 7400 	strd	r7, r4, [sp]
 8029cfa:	e9cd 5602 	strd	r5, r6, [sp, #8]
 8029cfe:	4607      	mov	r7, r0
 8029d00:	4688      	mov	r8, r1
 8029d02:	4691      	mov	r9, r2
 8029d04:	469a      	mov	sl, r3
 8029d06:	f7f0 f999 	bl	801a03c <awe_vecBiquadCascade>
 8029d0a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8029d0e:	4653      	mov	r3, sl
 8029d10:	f109 0204 	add.w	r2, r9, #4
 8029d14:	4641      	mov	r1, r8
 8029d16:	1d38      	adds	r0, r7, #4
 8029d18:	940f      	str	r4, [sp, #60]	@ 0x3c
 8029d1a:	e9cd 5610 	strd	r5, r6, [sp, #64]	@ 0x40
 8029d1e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8029d22:	b005      	add	sp, #20
 8029d24:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d28:	f7f0 b988 	b.w	801a03c <awe_vecBiquadCascade>

08029d2c <awe_vecCircWriteRead>:
 8029d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d30:	b08f      	sub	sp, #60	@ 0x3c
 8029d32:	461c      	mov	r4, r3
 8029d34:	930d      	str	r3, [sp, #52]	@ 0x34
 8029d36:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8029d38:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8029d3c:	f8d4 e000 	ldr.w	lr, [r4]
 8029d40:	9005      	str	r0, [sp, #20]
 8029d42:	009f      	lsls	r7, r3, #2
 8029d44:	ea4f 1903 	mov.w	r9, r3, lsl #4
 8029d48:	eb0b 044b 	add.w	r4, fp, fp, lsl #1
 8029d4c:	eb07 08c3 	add.w	r8, r7, r3, lsl #3
 8029d50:	ea4f 1a0b 	mov.w	sl, fp, lsl #4
 8029d54:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8029d58:	464d      	mov	r5, r9
 8029d5a:	9103      	str	r1, [sp, #12]
 8029d5c:	9207      	str	r2, [sp, #28]
 8029d5e:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8029d62:	9308      	str	r3, [sp, #32]
 8029d64:	46d1      	mov	r9, sl
 8029d66:	9b07      	ldr	r3, [sp, #28]
 8029d68:	9903      	ldr	r1, [sp, #12]
 8029d6a:	f8d3 a000 	ldr.w	sl, [r3]
 8029d6e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029d70:	fb0b f203 	mul.w	r2, fp, r3
 8029d74:	eb02 030a 	add.w	r3, r2, sl
 8029d78:	428b      	cmp	r3, r1
 8029d7a:	4472      	add	r2, lr
 8029d7c:	f340 814e 	ble.w	802a01c <awe_vecCircWriteRead+0x2f0>
 8029d80:	4291      	cmp	r1, r2
 8029d82:	eba1 030a 	sub.w	r3, r1, sl
 8029d86:	fb93 f3fb 	sdiv	r3, r3, fp
 8029d8a:	f280 815d 	bge.w	802a048 <awe_vecCircWriteRead+0x31c>
 8029d8e:	460a      	mov	r2, r1
 8029d90:	eba2 020e 	sub.w	r2, r2, lr
 8029d94:	fb92 f2fb 	sdiv	r2, r2, fp
 8029d98:	9204      	str	r2, [sp, #16]
 8029d9a:	4293      	cmp	r3, r2
 8029d9c:	4611      	mov	r1, r2
 8029d9e:	f340 8147 	ble.w	802a030 <awe_vecCircWriteRead+0x304>
 8029da2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8029da4:	1a9a      	subs	r2, r3, r2
 8029da6:	1acb      	subs	r3, r1, r3
 8029da8:	931c      	str	r3, [sp, #112]	@ 0x70
 8029daa:	1093      	asrs	r3, r2, #2
 8029dac:	9306      	str	r3, [sp, #24]
 8029dae:	f002 0303 	and.w	r3, r2, #3
 8029db2:	9309      	str	r3, [sp, #36]	@ 0x24
 8029db4:	9b04      	ldr	r3, [sp, #16]
 8029db6:	109e      	asrs	r6, r3, #2
 8029db8:	2e00      	cmp	r6, #0
 8029dba:	960a      	str	r6, [sp, #40]	@ 0x28
 8029dbc:	dd4c      	ble.n	8029e58 <awe_vecCircWriteRead+0x12c>
 8029dbe:	9b05      	ldr	r3, [sp, #20]
 8029dc0:	9602      	str	r6, [sp, #8]
 8029dc2:	ebaa 040e 	sub.w	r4, sl, lr
 8029dc6:	eb03 008a 	add.w	r0, r3, sl, lsl #2
 8029dca:	eb03 018e 	add.w	r1, r3, lr, lsl #2
 8029dce:	e9dd 3219 	ldrd	r3, r2, [sp, #100]	@ 0x64
 8029dd2:	9401      	str	r4, [sp, #4]
 8029dd4:	ebae 040a 	sub.w	r4, lr, sl
 8029dd8:	e9cd ea0b 	strd	lr, sl, [sp, #44]	@ 0x2c
 8029ddc:	46a2      	mov	sl, r4
 8029dde:	9e01      	ldr	r6, [sp, #4]
 8029de0:	681c      	ldr	r4, [r3, #0]
 8029de2:	f841 4026 	str.w	r4, [r1, r6, lsl #2]
 8029de6:	59dc      	ldr	r4, [r3, r7]
 8029de8:	f850 602a 	ldr.w	r6, [r0, sl, lsl #2]
 8029dec:	f840 402b 	str.w	r4, [r0, fp, lsl #2]
 8029df0:	f853 4017 	ldr.w	r4, [r3, r7, lsl #1]
 8029df4:	f851 e02b 	ldr.w	lr, [r1, fp, lsl #2]
 8029df8:	f840 403b 	str.w	r4, [r0, fp, lsl #3]
 8029dfc:	6016      	str	r6, [r2, #0]
 8029dfe:	f853 6008 	ldr.w	r6, [r3, r8]
 8029e02:	f851 403b 	ldr.w	r4, [r1, fp, lsl #3]
 8029e06:	f840 600c 	str.w	r6, [r0, ip]
 8029e0a:	f842 e007 	str.w	lr, [r2, r7]
 8029e0e:	f842 4017 	str.w	r4, [r2, r7, lsl #1]
 8029e12:	f851 400c 	ldr.w	r4, [r1, ip]
 8029e16:	f842 4008 	str.w	r4, [r2, r8]
 8029e1a:	9c02      	ldr	r4, [sp, #8]
 8029e1c:	3c01      	subs	r4, #1
 8029e1e:	442b      	add	r3, r5
 8029e20:	4448      	add	r0, r9
 8029e22:	4449      	add	r1, r9
 8029e24:	442a      	add	r2, r5
 8029e26:	9402      	str	r4, [sp, #8]
 8029e28:	d1d9      	bne.n	8029dde <awe_vecCircWriteRead+0xb2>
 8029e2a:	e9dd ea0b 	ldrd	lr, sl, [sp, #44]	@ 0x2c
 8029e2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029e30:	9808      	ldr	r0, [sp, #32]
 8029e32:	1e5a      	subs	r2, r3, #1
 8029e34:	fb00 f202 	mul.w	r2, r0, r2
 8029e38:	eb0a 018b 	add.w	r1, sl, fp, lsl #2
 8029e3c:	eb0e 0e8b 	add.w	lr, lr, fp, lsl #2
 8029e40:	eb02 0a01 	add.w	sl, r2, r1
 8029e44:	4496      	add	lr, r2
 8029e46:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029e48:	fb05 f303 	mul.w	r3, r5, r3
 8029e4c:	441a      	add	r2, r3
 8029e4e:	9219      	str	r2, [sp, #100]	@ 0x64
 8029e50:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8029e52:	441a      	add	r2, r3
 8029e54:	9b04      	ldr	r3, [sp, #16]
 8029e56:	921a      	str	r2, [sp, #104]	@ 0x68
 8029e58:	f013 0303 	ands.w	r3, r3, #3
 8029e5c:	d034      	beq.n	8029ec8 <awe_vecCircWriteRead+0x19c>
 8029e5e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029e60:	9905      	ldr	r1, [sp, #20]
 8029e62:	6812      	ldr	r2, [r2, #0]
 8029e64:	f841 202a 	str.w	r2, [r1, sl, lsl #2]
 8029e68:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8029e6a:	f851 202e 	ldr.w	r2, [r1, lr, lsl #2]
 8029e6e:	6002      	str	r2, [r0, #0]
 8029e70:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029e72:	443a      	add	r2, r7
 8029e74:	9219      	str	r2, [sp, #100]	@ 0x64
 8029e76:	4602      	mov	r2, r0
 8029e78:	443a      	add	r2, r7
 8029e7a:	2b01      	cmp	r3, #1
 8029e7c:	44da      	add	sl, fp
 8029e7e:	921a      	str	r2, [sp, #104]	@ 0x68
 8029e80:	44de      	add	lr, fp
 8029e82:	d021      	beq.n	8029ec8 <awe_vecCircWriteRead+0x19c>
 8029e84:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029e86:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8029e88:	6812      	ldr	r2, [r2, #0]
 8029e8a:	f841 202a 	str.w	r2, [r1, sl, lsl #2]
 8029e8e:	f851 202e 	ldr.w	r2, [r1, lr, lsl #2]
 8029e92:	6002      	str	r2, [r0, #0]
 8029e94:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029e96:	443a      	add	r2, r7
 8029e98:	9219      	str	r2, [sp, #100]	@ 0x64
 8029e9a:	4602      	mov	r2, r0
 8029e9c:	443a      	add	r2, r7
 8029e9e:	2b03      	cmp	r3, #3
 8029ea0:	44da      	add	sl, fp
 8029ea2:	921a      	str	r2, [sp, #104]	@ 0x68
 8029ea4:	44de      	add	lr, fp
 8029ea6:	d10f      	bne.n	8029ec8 <awe_vecCircWriteRead+0x19c>
 8029ea8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029eaa:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8029eac:	681b      	ldr	r3, [r3, #0]
 8029eae:	f841 302a 	str.w	r3, [r1, sl, lsl #2]
 8029eb2:	f851 302e 	ldr.w	r3, [r1, lr, lsl #2]
 8029eb6:	6013      	str	r3, [r2, #0]
 8029eb8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029eba:	443b      	add	r3, r7
 8029ebc:	9319      	str	r3, [sp, #100]	@ 0x64
 8029ebe:	4613      	mov	r3, r2
 8029ec0:	443b      	add	r3, r7
 8029ec2:	44da      	add	sl, fp
 8029ec4:	931a      	str	r3, [sp, #104]	@ 0x68
 8029ec6:	44de      	add	lr, fp
 8029ec8:	9b03      	ldr	r3, [sp, #12]
 8029eca:	9e06      	ldr	r6, [sp, #24]
 8029ecc:	459a      	cmp	sl, r3
 8029ece:	bfa8      	it	ge
 8029ed0:	ebaa 0a03 	subge.w	sl, sl, r3
 8029ed4:	459e      	cmp	lr, r3
 8029ed6:	bfa8      	it	ge
 8029ed8:	ebae 0e03 	subge.w	lr, lr, r3
 8029edc:	2e00      	cmp	r6, #0
 8029ede:	dd4f      	ble.n	8029f80 <awe_vecCircWriteRead+0x254>
 8029ee0:	9b05      	ldr	r3, [sp, #20]
 8029ee2:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8029ee6:	ebaa 040e 	sub.w	r4, sl, lr
 8029eea:	eb03 008a 	add.w	r0, r3, sl, lsl #2
 8029eee:	eb03 018e 	add.w	r1, r3, lr, lsl #2
 8029ef2:	e9dd 3219 	ldrd	r3, r2, [sp, #100]	@ 0x64
 8029ef6:	9401      	str	r4, [sp, #4]
 8029ef8:	ebae 040a 	sub.w	r4, lr, sl
 8029efc:	f8cd e010 	str.w	lr, [sp, #16]
 8029f00:	9602      	str	r6, [sp, #8]
 8029f02:	46a2      	mov	sl, r4
 8029f04:	9e01      	ldr	r6, [sp, #4]
 8029f06:	681c      	ldr	r4, [r3, #0]
 8029f08:	f841 4026 	str.w	r4, [r1, r6, lsl #2]
 8029f0c:	59dc      	ldr	r4, [r3, r7]
 8029f0e:	f850 602a 	ldr.w	r6, [r0, sl, lsl #2]
 8029f12:	f840 402b 	str.w	r4, [r0, fp, lsl #2]
 8029f16:	f853 4017 	ldr.w	r4, [r3, r7, lsl #1]
 8029f1a:	f851 e02b 	ldr.w	lr, [r1, fp, lsl #2]
 8029f1e:	f840 403b 	str.w	r4, [r0, fp, lsl #3]
 8029f22:	6016      	str	r6, [r2, #0]
 8029f24:	f853 6008 	ldr.w	r6, [r3, r8]
 8029f28:	f851 403b 	ldr.w	r4, [r1, fp, lsl #3]
 8029f2c:	f840 600c 	str.w	r6, [r0, ip]
 8029f30:	f842 e007 	str.w	lr, [r2, r7]
 8029f34:	f842 4017 	str.w	r4, [r2, r7, lsl #1]
 8029f38:	f851 400c 	ldr.w	r4, [r1, ip]
 8029f3c:	f842 4008 	str.w	r4, [r2, r8]
 8029f40:	9c02      	ldr	r4, [sp, #8]
 8029f42:	3c01      	subs	r4, #1
 8029f44:	442b      	add	r3, r5
 8029f46:	4448      	add	r0, r9
 8029f48:	4449      	add	r1, r9
 8029f4a:	442a      	add	r2, r5
 8029f4c:	9402      	str	r4, [sp, #8]
 8029f4e:	d1d9      	bne.n	8029f04 <awe_vecCircWriteRead+0x1d8>
 8029f50:	9a06      	ldr	r2, [sp, #24]
 8029f52:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8029f56:	f8dd e010 	ldr.w	lr, [sp, #16]
 8029f5a:	9808      	ldr	r0, [sp, #32]
 8029f5c:	1e53      	subs	r3, r2, #1
 8029f5e:	fb00 f303 	mul.w	r3, r0, r3
 8029f62:	eb0a 018b 	add.w	r1, sl, fp, lsl #2
 8029f66:	eb0e 0e8b 	add.w	lr, lr, fp, lsl #2
 8029f6a:	eb03 0a01 	add.w	sl, r3, r1
 8029f6e:	449e      	add	lr, r3
 8029f70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029f72:	fb05 f202 	mul.w	r2, r5, r2
 8029f76:	4413      	add	r3, r2
 8029f78:	9319      	str	r3, [sp, #100]	@ 0x64
 8029f7a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8029f7c:	4413      	add	r3, r2
 8029f7e:	931a      	str	r3, [sp, #104]	@ 0x68
 8029f80:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029f82:	2800      	cmp	r0, #0
 8029f84:	d034      	beq.n	8029ff0 <awe_vecCircWriteRead+0x2c4>
 8029f86:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029f88:	9a05      	ldr	r2, [sp, #20]
 8029f8a:	681b      	ldr	r3, [r3, #0]
 8029f8c:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8029f90:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8029f92:	f852 302e 	ldr.w	r3, [r2, lr, lsl #2]
 8029f96:	600b      	str	r3, [r1, #0]
 8029f98:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029f9a:	443b      	add	r3, r7
 8029f9c:	9319      	str	r3, [sp, #100]	@ 0x64
 8029f9e:	460b      	mov	r3, r1
 8029fa0:	443b      	add	r3, r7
 8029fa2:	2801      	cmp	r0, #1
 8029fa4:	44da      	add	sl, fp
 8029fa6:	931a      	str	r3, [sp, #104]	@ 0x68
 8029fa8:	44de      	add	lr, fp
 8029faa:	d021      	beq.n	8029ff0 <awe_vecCircWriteRead+0x2c4>
 8029fac:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029fae:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8029fb0:	681b      	ldr	r3, [r3, #0]
 8029fb2:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8029fb6:	f852 302e 	ldr.w	r3, [r2, lr, lsl #2]
 8029fba:	600b      	str	r3, [r1, #0]
 8029fbc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029fbe:	443b      	add	r3, r7
 8029fc0:	9319      	str	r3, [sp, #100]	@ 0x64
 8029fc2:	460b      	mov	r3, r1
 8029fc4:	443b      	add	r3, r7
 8029fc6:	2803      	cmp	r0, #3
 8029fc8:	44da      	add	sl, fp
 8029fca:	931a      	str	r3, [sp, #104]	@ 0x68
 8029fcc:	44de      	add	lr, fp
 8029fce:	d10f      	bne.n	8029ff0 <awe_vecCircWriteRead+0x2c4>
 8029fd0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029fd2:	681b      	ldr	r3, [r3, #0]
 8029fd4:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8029fd8:	f852 302e 	ldr.w	r3, [r2, lr, lsl #2]
 8029fdc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8029fde:	6013      	str	r3, [r2, #0]
 8029fe0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029fe2:	443b      	add	r3, r7
 8029fe4:	9319      	str	r3, [sp, #100]	@ 0x64
 8029fe6:	4613      	mov	r3, r2
 8029fe8:	443b      	add	r3, r7
 8029fea:	44da      	add	sl, fp
 8029fec:	931a      	str	r3, [sp, #104]	@ 0x68
 8029fee:	44de      	add	lr, fp
 8029ff0:	9b03      	ldr	r3, [sp, #12]
 8029ff2:	459a      	cmp	sl, r3
 8029ff4:	bfa8      	it	ge
 8029ff6:	ebaa 0a03 	subge.w	sl, sl, r3
 8029ffa:	459e      	cmp	lr, r3
 8029ffc:	bfa8      	it	ge
 8029ffe:	ebae 0e03 	subge.w	lr, lr, r3
 802a002:	9b07      	ldr	r3, [sp, #28]
 802a004:	f8c3 a000 	str.w	sl, [r3]
 802a008:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a00a:	f8c3 e000 	str.w	lr, [r3]
 802a00e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a010:	2b00      	cmp	r3, #0
 802a012:	f73f aea8 	bgt.w	8029d66 <awe_vecCircWriteRead+0x3a>
 802a016:	b00f      	add	sp, #60	@ 0x3c
 802a018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a01c:	4291      	cmp	r1, r2
 802a01e:	db16      	blt.n	802a04e <awe_vecCircWriteRead+0x322>
 802a020:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802a022:	9204      	str	r2, [sp, #16]
 802a024:	2300      	movs	r3, #0
 802a026:	9309      	str	r3, [sp, #36]	@ 0x24
 802a028:	9306      	str	r3, [sp, #24]
 802a02a:	931c      	str	r3, [sp, #112]	@ 0x70
 802a02c:	4613      	mov	r3, r2
 802a02e:	e6c2      	b.n	8029db6 <awe_vecCircWriteRead+0x8a>
 802a030:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802a032:	9304      	str	r3, [sp, #16]
 802a034:	1ad2      	subs	r2, r2, r3
 802a036:	1a41      	subs	r1, r0, r1
 802a038:	f002 0303 	and.w	r3, r2, #3
 802a03c:	911c      	str	r1, [sp, #112]	@ 0x70
 802a03e:	1091      	asrs	r1, r2, #2
 802a040:	9309      	str	r3, [sp, #36]	@ 0x24
 802a042:	9106      	str	r1, [sp, #24]
 802a044:	9b04      	ldr	r3, [sp, #16]
 802a046:	e6b6      	b.n	8029db6 <awe_vecCircWriteRead+0x8a>
 802a048:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802a04a:	9204      	str	r2, [sp, #16]
 802a04c:	e6a5      	b.n	8029d9a <awe_vecCircWriteRead+0x6e>
 802a04e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a050:	9a03      	ldr	r2, [sp, #12]
 802a052:	e69d      	b.n	8029d90 <awe_vecCircWriteRead+0x64>

0802a054 <awe_vecFIR>:
 802a054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a058:	b08b      	sub	sp, #44	@ 0x2c
 802a05a:	4614      	mov	r4, r2
 802a05c:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802a05e:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802a060:	9308      	str	r3, [sp, #32]
 802a062:	f106 4580 	add.w	r5, r6, #1073741824	@ 0x40000000
 802a066:	3d01      	subs	r5, #1
 802a068:	eb07 0285 	add.w	r2, r7, r5, lsl #2
 802a06c:	4699      	mov	r9, r3
 802a06e:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802a070:	9600      	str	r6, [sp, #0]
 802a072:	f04f 33ff 	mov.w	r3, #4294967295
 802a076:	9605      	str	r6, [sp, #20]
 802a078:	9704      	str	r7, [sp, #16]
 802a07a:	f8dd 8050 	ldr.w	r8, [sp, #80]	@ 0x50
 802a07e:	9506      	str	r5, [sp, #24]
 802a080:	f7f0 fff0 	bl	801b064 <awe_vecCopy32>
 802a084:	1e72      	subs	r2, r6, #1
 802a086:	4648      	mov	r0, r9
 802a088:	fb00 f202 	mul.w	r2, r0, r2
 802a08c:	10b3      	asrs	r3, r6, #2
 802a08e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 802a092:	9307      	str	r3, [sp, #28]
 802a094:	f000 80e8 	beq.w	802a268 <awe_vecFIR+0x214>
 802a098:	ea4f 0ba5 	mov.w	fp, r5, asr #2
 802a09c:	ea4f 0c89 	mov.w	ip, r9, lsl #2
 802a0a0:	ea4f 110b 	mov.w	r1, fp, lsl #4
 802a0a4:	f005 0903 	and.w	r9, r5, #3
 802a0a8:	f1cc 0c00 	rsb	ip, ip, #0
 802a0ac:	eb08 0001 	add.w	r0, r8, r1
 802a0b0:	f107 040c 	add.w	r4, r7, #12
 802a0b4:	9f07      	ldr	r7, [sp, #28]
 802a0b6:	9209      	str	r2, [sp, #36]	@ 0x24
 802a0b8:	eb02 064c 	add.w	r6, r2, ip, lsl #1
 802a0bc:	4615      	mov	r5, r2
 802a0be:	9003      	str	r0, [sp, #12]
 802a0c0:	464a      	mov	r2, r9
 802a0c2:	ea4f 0a8c 	mov.w	sl, ip, lsl #2
 802a0c6:	4689      	mov	r9, r1
 802a0c8:	4623      	mov	r3, r4
 802a0ca:	ed54 4a03 	vldr	s9, [r4, #-12]
 802a0ce:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a0d2:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a0d6:	eddf 7a65 	vldr	s15, [pc, #404]	@ 802a26c <awe_vecFIR+0x218>
 802a0da:	f1bb 0f00 	cmp.w	fp, #0
 802a0de:	f000 80b9 	beq.w	802a254 <awe_vecFIR+0x200>
 802a0e2:	f104 0e10 	add.w	lr, r4, #16
 802a0e6:	eeb0 7a67 	vmov.f32	s14, s15
 802a0ea:	eef0 6a67 	vmov.f32	s13, s15
 802a0ee:	eeb0 6a67 	vmov.f32	s12, s15
 802a0f2:	4671      	mov	r1, lr
 802a0f4:	f108 0310 	add.w	r3, r8, #16
 802a0f8:	4658      	mov	r0, fp
 802a0fa:	ed13 2a04 	vldr	s4, [r3, #-16]
 802a0fe:	ed51 3a04 	vldr	s7, [r1, #-16]
 802a102:	ed53 2a03 	vldr	s5, [r3, #-12]
 802a106:	ed13 3a02 	vldr	s6, [r3, #-8]
 802a10a:	ed13 4a01 	vldr	s8, [r3, #-4]
 802a10e:	eea2 6a24 	vfma.f32	s12, s4, s9
 802a112:	3801      	subs	r0, #1
 802a114:	f103 0310 	add.w	r3, r3, #16
 802a118:	eee2 6a05 	vfma.f32	s13, s4, s10
 802a11c:	f101 0110 	add.w	r1, r1, #16
 802a120:	eea2 7a25 	vfma.f32	s14, s4, s11
 802a124:	eee2 7a23 	vfma.f32	s15, s4, s7
 802a128:	ed51 4a07 	vldr	s9, [r1, #-28]	@ 0xffffffe4
 802a12c:	eea2 6a85 	vfma.f32	s12, s5, s10
 802a130:	eee2 6aa5 	vfma.f32	s13, s5, s11
 802a134:	eea3 7aa2 	vfma.f32	s14, s7, s5
 802a138:	eee2 7aa4 	vfma.f32	s15, s5, s9
 802a13c:	ed11 5a06 	vldr	s10, [r1, #-24]	@ 0xffffffe8
 802a140:	eea3 6a25 	vfma.f32	s12, s6, s11
 802a144:	eee3 6a83 	vfma.f32	s13, s7, s6
 802a148:	eea4 7a83 	vfma.f32	s14, s9, s6
 802a14c:	eee3 7a05 	vfma.f32	s15, s6, s10
 802a150:	ed51 5a05 	vldr	s11, [r1, #-20]	@ 0xffffffec
 802a154:	eea3 6a84 	vfma.f32	s12, s7, s8
 802a158:	eee4 6a84 	vfma.f32	s13, s9, s8
 802a15c:	eea5 7a04 	vfma.f32	s14, s10, s8
 802a160:	eee4 7a25 	vfma.f32	s15, s8, s11
 802a164:	d1c9      	bne.n	802a0fa <awe_vecFIR+0xa6>
 802a166:	9903      	ldr	r1, [sp, #12]
 802a168:	eb04 0309 	add.w	r3, r4, r9
 802a16c:	b33a      	cbz	r2, 802a1be <awe_vecFIR+0x16a>
 802a16e:	ed91 4a00 	vldr	s8, [r1]
 802a172:	edd3 3a00 	vldr	s7, [r3]
 802a176:	2a01      	cmp	r2, #1
 802a178:	eea4 6a24 	vfma.f32	s12, s8, s9
 802a17c:	eee4 6a05 	vfma.f32	s13, s8, s10
 802a180:	eea4 7a25 	vfma.f32	s14, s8, s11
 802a184:	eee4 7a23 	vfma.f32	s15, s8, s7
 802a188:	d019      	beq.n	802a1be <awe_vecFIR+0x16a>
 802a18a:	edd1 4a01 	vldr	s9, [r1, #4]
 802a18e:	ed93 4a01 	vldr	s8, [r3, #4]
 802a192:	2a02      	cmp	r2, #2
 802a194:	eea5 6a24 	vfma.f32	s12, s10, s9
 802a198:	eee5 6aa4 	vfma.f32	s13, s11, s9
 802a19c:	eea3 7aa4 	vfma.f32	s14, s7, s9
 802a1a0:	eee4 7a84 	vfma.f32	s15, s9, s8
 802a1a4:	d00b      	beq.n	802a1be <awe_vecFIR+0x16a>
 802a1a6:	ed91 5a02 	vldr	s10, [r1, #8]
 802a1aa:	edd3 4a02 	vldr	s9, [r3, #8]
 802a1ae:	eea5 6a85 	vfma.f32	s12, s11, s10
 802a1b2:	eee3 6a85 	vfma.f32	s13, s7, s10
 802a1b6:	eea4 7a05 	vfma.f32	s14, s8, s10
 802a1ba:	eee5 7a24 	vfma.f32	s15, s10, s9
 802a1be:	eb05 010c 	add.w	r1, r5, ip
 802a1c2:	eb06 030c 	add.w	r3, r6, ip
 802a1c6:	3f01      	subs	r7, #1
 802a1c8:	ed85 6a00 	vstr	s12, [r5]
 802a1cc:	4674      	mov	r4, lr
 802a1ce:	edc1 6a00 	vstr	s13, [r1]
 802a1d2:	4455      	add	r5, sl
 802a1d4:	ed86 7a00 	vstr	s14, [r6]
 802a1d8:	edc3 7a00 	vstr	s15, [r3]
 802a1dc:	4456      	add	r6, sl
 802a1de:	f47f af73 	bne.w	802a0c8 <awe_vecFIR+0x74>
 802a1e2:	9b07      	ldr	r3, [sp, #28]
 802a1e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a1e6:	9904      	ldr	r1, [sp, #16]
 802a1e8:	fb03 220a 	mla	r2, r3, sl, r2
 802a1ec:	eb01 1403 	add.w	r4, r1, r3, lsl #4
 802a1f0:	9b05      	ldr	r3, [sp, #20]
 802a1f2:	f013 0603 	ands.w	r6, r3, #3
 802a1f6:	d018      	beq.n	802a22a <awe_vecFIR+0x1d6>
 802a1f8:	9b08      	ldr	r3, [sp, #32]
 802a1fa:	9f06      	ldr	r7, [sp, #24]
 802a1fc:	009d      	lsls	r5, r3, #2
 802a1fe:	426d      	negs	r5, r5
 802a200:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 802a204:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802a26c <awe_vecFIR+0x218>
 802a208:	463b      	mov	r3, r7
 802a20a:	4640      	mov	r0, r8
 802a20c:	4621      	mov	r1, r4
 802a20e:	ecf1 6a01 	vldmia	r1!, {s13}
 802a212:	ecb0 7a01 	vldmia	r0!, {s14}
 802a216:	3b01      	subs	r3, #1
 802a218:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a21c:	d1f7      	bne.n	802a20e <awe_vecFIR+0x1ba>
 802a21e:	3404      	adds	r4, #4
 802a220:	42b4      	cmp	r4, r6
 802a222:	edc2 7a00 	vstr	s15, [r2]
 802a226:	442a      	add	r2, r5
 802a228:	d1ec      	bne.n	802a204 <awe_vecFIR+0x1b0>
 802a22a:	9b06      	ldr	r3, [sp, #24]
 802a22c:	9a05      	ldr	r2, [sp, #20]
 802a22e:	9c04      	ldr	r4, [sp, #16]
 802a230:	f103 4080 	add.w	r0, r3, #1073741824	@ 0x40000000
 802a234:	3802      	subs	r0, #2
 802a236:	1e59      	subs	r1, r3, #1
 802a238:	4402      	add	r2, r0
 802a23a:	f04f 33ff 	mov.w	r3, #4294967295
 802a23e:	9114      	str	r1, [sp, #80]	@ 0x50
 802a240:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 802a244:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 802a248:	4619      	mov	r1, r3
 802a24a:	b00b      	add	sp, #44	@ 0x2c
 802a24c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a250:	f7f0 bf08 	b.w	801b064 <awe_vecCopy32>
 802a254:	eeb0 7a67 	vmov.f32	s14, s15
 802a258:	eef0 6a67 	vmov.f32	s13, s15
 802a25c:	eeb0 6a67 	vmov.f32	s12, s15
 802a260:	4641      	mov	r1, r8
 802a262:	f104 0e10 	add.w	lr, r4, #16
 802a266:	e781      	b.n	802a16c <awe_vecFIR+0x118>
 802a268:	9c04      	ldr	r4, [sp, #16]
 802a26a:	e7c1      	b.n	802a1f0 <awe_vecFIR+0x19c>
 802a26c:	00000000 	.word	0x00000000

0802a270 <bam_biquad_reset>:
 802a270:	b570      	push	{r4, r5, r6, lr}
 802a272:	2101      	movs	r1, #1
 802a274:	2500      	movs	r5, #0
 802a276:	4604      	mov	r4, r0
 802a278:	1d06      	adds	r6, r0, #4
 802a27a:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 802a27e:	6083      	str	r3, [r0, #8]
 802a280:	7001      	strb	r1, [r0, #0]
 802a282:	7041      	strb	r1, [r0, #1]
 802a284:	6045      	str	r5, [r0, #4]
 802a286:	60c5      	str	r5, [r0, #12]
 802a288:	6105      	str	r5, [r0, #16]
 802a28a:	6145      	str	r5, [r0, #20]
 802a28c:	6185      	str	r5, [r0, #24]
 802a28e:	4632      	mov	r2, r6
 802a290:	f100 034c 	add.w	r3, r0, #76	@ 0x4c
 802a294:	30ac      	adds	r0, #172	@ 0xac
 802a296:	f000 f8c1 	bl	802a41c <bam_biquad_init>
 802a29a:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 802a29e:	4632      	mov	r2, r6
 802a2a0:	f104 037c 	add.w	r3, r4, #124	@ 0x7c
 802a2a4:	7861      	ldrb	r1, [r4, #1]
 802a2a6:	f000 f8b9 	bl	802a41c <bam_biquad_init>
 802a2aa:	4628      	mov	r0, r5
 802a2ac:	bd70      	pop	{r4, r5, r6, pc}
 802a2ae:	bf00      	nop

0802a2b0 <bam_biquad_setConfig>:
 802a2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a2b2:	7807      	ldrb	r7, [r0, #0]
 802a2b4:	780b      	ldrb	r3, [r1, #0]
 802a2b6:	42bb      	cmp	r3, r7
 802a2b8:	d023      	beq.n	802a302 <bam_biquad_setConfig+0x52>
 802a2ba:	700f      	strb	r7, [r1, #0]
 802a2bc:	7845      	ldrb	r5, [r0, #1]
 802a2be:	704d      	strb	r5, [r1, #1]
 802a2c0:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 802a2c4:	0063      	lsls	r3, r4, #1
 802a2c6:	d008      	beq.n	802a2da <bam_biquad_setConfig+0x2a>
 802a2c8:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
 802a2cc:	460b      	mov	r3, r1
 802a2ce:	f850 2f04 	ldr.w	r2, [r0, #4]!
 802a2d2:	f843 2f04 	str.w	r2, [r3, #4]!
 802a2d6:	42a0      	cmp	r0, r4
 802a2d8:	d1f9      	bne.n	802a2ce <bam_biquad_setConfig+0x1e>
 802a2da:	460c      	mov	r4, r1
 802a2dc:	1d0e      	adds	r6, r1, #4
 802a2de:	4632      	mov	r2, r6
 802a2e0:	4629      	mov	r1, r5
 802a2e2:	f104 034c 	add.w	r3, r4, #76	@ 0x4c
 802a2e6:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 802a2ea:	f000 f897 	bl	802a41c <bam_biquad_init>
 802a2ee:	4632      	mov	r2, r6
 802a2f0:	f104 037c 	add.w	r3, r4, #124	@ 0x7c
 802a2f4:	7861      	ldrb	r1, [r4, #1]
 802a2f6:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 802a2fa:	f000 f88f 	bl	802a41c <bam_biquad_init>
 802a2fe:	2000      	movs	r0, #0
 802a300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a302:	784b      	ldrb	r3, [r1, #1]
 802a304:	f890 e001 	ldrb.w	lr, [r0, #1]
 802a308:	459e      	cmp	lr, r3
 802a30a:	d1d6      	bne.n	802a2ba <bam_biquad_setConfig+0xa>
 802a30c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802a310:	ea5f 034e 	movs.w	r3, lr, lsl #1
 802a314:	d0f3      	beq.n	802a2fe <bam_biquad_setConfig+0x4e>
 802a316:	eb01 0ece 	add.w	lr, r1, lr, lsl #3
 802a31a:	460b      	mov	r3, r1
 802a31c:	4604      	mov	r4, r0
 802a31e:	2200      	movs	r2, #0
 802a320:	f853 6f04 	ldr.w	r6, [r3, #4]!
 802a324:	f854 5f04 	ldr.w	r5, [r4, #4]!
 802a328:	42ae      	cmp	r6, r5
 802a32a:	bf18      	it	ne
 802a32c:	2201      	movne	r2, #1
 802a32e:	4573      	cmp	r3, lr
 802a330:	d1f6      	bne.n	802a320 <bam_biquad_setConfig+0x70>
 802a332:	2a00      	cmp	r2, #0
 802a334:	d0e3      	beq.n	802a2fe <bam_biquad_setConfig+0x4e>
 802a336:	e7c0      	b.n	802a2ba <bam_biquad_setConfig+0xa>

0802a338 <bam_biquad_setParam>:
 802a338:	b538      	push	{r3, r4, r5, lr}
 802a33a:	460d      	mov	r5, r1
 802a33c:	7801      	ldrb	r1, [r0, #0]
 802a33e:	7069      	strb	r1, [r5, #1]
 802a340:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 802a344:	0063      	lsls	r3, r4, #1
 802a346:	d008      	beq.n	802a35a <bam_biquad_setParam+0x22>
 802a348:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
 802a34c:	462b      	mov	r3, r5
 802a34e:	f850 2f04 	ldr.w	r2, [r0, #4]!
 802a352:	f843 2f04 	str.w	r2, [r3, #4]!
 802a356:	42a0      	cmp	r0, r4
 802a358:	d1f9      	bne.n	802a34e <bam_biquad_setParam+0x16>
 802a35a:	1d2c      	adds	r4, r5, #4
 802a35c:	4622      	mov	r2, r4
 802a35e:	f105 034c 	add.w	r3, r5, #76	@ 0x4c
 802a362:	f105 00ac 	add.w	r0, r5, #172	@ 0xac
 802a366:	f000 f859 	bl	802a41c <bam_biquad_init>
 802a36a:	f105 00bc 	add.w	r0, r5, #188	@ 0xbc
 802a36e:	4622      	mov	r2, r4
 802a370:	f105 037c 	add.w	r3, r5, #124	@ 0x7c
 802a374:	7869      	ldrb	r1, [r5, #1]
 802a376:	f000 f851 	bl	802a41c <bam_biquad_init>
 802a37a:	2000      	movs	r0, #0
 802a37c:	bd38      	pop	{r3, r4, r5, pc}
 802a37e:	bf00      	nop

0802a380 <bam_biquad_process>:
 802a380:	6843      	ldr	r3, [r0, #4]
 802a382:	2b04      	cmp	r3, #4
 802a384:	d13c      	bne.n	802a400 <bam_biquad_process+0x80>
 802a386:	684b      	ldr	r3, [r1, #4]
 802a388:	2b04      	cmp	r3, #4
 802a38a:	d139      	bne.n	802a400 <bam_biquad_process+0x80>
 802a38c:	b570      	push	{r4, r5, r6, lr}
 802a38e:	7815      	ldrb	r5, [r2, #0]
 802a390:	688c      	ldr	r4, [r1, #8]
 802a392:	68c3      	ldr	r3, [r0, #12]
 802a394:	6881      	ldr	r1, [r0, #8]
 802a396:	2d01      	cmp	r5, #1
 802a398:	b082      	sub	sp, #8
 802a39a:	d018      	beq.n	802a3ce <bam_biquad_process+0x4e>
 802a39c:	b9a5      	cbnz	r5, 802a3c8 <bam_biquad_process+0x48>
 802a39e:	6802      	ldr	r2, [r0, #0]
 802a3a0:	1e56      	subs	r6, r2, #1
 802a3a2:	2e01      	cmp	r6, #1
 802a3a4:	d829      	bhi.n	802a3fa <bam_biquad_process+0x7a>
 802a3a6:	fb02 f203 	mul.w	r2, r2, r3
 802a3aa:	2a00      	cmp	r2, #0
 802a3ac:	dd0c      	ble.n	802a3c8 <bam_biquad_process+0x48>
 802a3ae:	3904      	subs	r1, #4
 802a3b0:	1f22      	subs	r2, r4, #4
 802a3b2:	f851 3f04 	ldr.w	r3, [r1, #4]!
 802a3b6:	f842 3f04 	str.w	r3, [r2, #4]!
 802a3ba:	6803      	ldr	r3, [r0, #0]
 802a3bc:	68c4      	ldr	r4, [r0, #12]
 802a3be:	3501      	adds	r5, #1
 802a3c0:	fb04 f403 	mul.w	r4, r4, r3
 802a3c4:	42ac      	cmp	r4, r5
 802a3c6:	dcf4      	bgt.n	802a3b2 <bam_biquad_process+0x32>
 802a3c8:	2000      	movs	r0, #0
 802a3ca:	b002      	add	sp, #8
 802a3cc:	bd70      	pop	{r4, r5, r6, pc}
 802a3ce:	4615      	mov	r5, r2
 802a3d0:	6802      	ldr	r2, [r0, #0]
 802a3d2:	2a01      	cmp	r2, #1
 802a3d4:	d01a      	beq.n	802a40c <bam_biquad_process+0x8c>
 802a3d6:	2a02      	cmp	r2, #2
 802a3d8:	d10f      	bne.n	802a3fa <bam_biquad_process+0x7a>
 802a3da:	6902      	ldr	r2, [r0, #16]
 802a3dc:	2a01      	cmp	r2, #1
 802a3de:	d112      	bne.n	802a406 <bam_biquad_process+0x86>
 802a3e0:	9201      	str	r2, [sp, #4]
 802a3e2:	9300      	str	r3, [sp, #0]
 802a3e4:	460a      	mov	r2, r1
 802a3e6:	f105 00ac 	add.w	r0, r5, #172	@ 0xac
 802a3ea:	4623      	mov	r3, r4
 802a3ec:	f105 01bc 	add.w	r1, r5, #188	@ 0xbc
 802a3f0:	f000 f934 	bl	802a65c <bam_biquad_stereo_compute>
 802a3f4:	2000      	movs	r0, #0
 802a3f6:	b002      	add	sp, #8
 802a3f8:	bd70      	pop	{r4, r5, r6, pc}
 802a3fa:	f06f 0001 	mvn.w	r0, #1
 802a3fe:	e7e4      	b.n	802a3ca <bam_biquad_process+0x4a>
 802a400:	f06f 0002 	mvn.w	r0, #2
 802a404:	4770      	bx	lr
 802a406:	f04f 30ff 	mov.w	r0, #4294967295
 802a40a:	e7de      	b.n	802a3ca <bam_biquad_process+0x4a>
 802a40c:	f105 00ac 	add.w	r0, r5, #172	@ 0xac
 802a410:	4622      	mov	r2, r4
 802a412:	f000 f80f 	bl	802a434 <bam_biquad_mono_compute>
 802a416:	2000      	movs	r0, #0
 802a418:	e7d7      	b.n	802a3ca <bam_biquad_process+0x4a>
 802a41a:	bf00      	nop

0802a41c <bam_biquad_init>:
 802a41c:	b538      	push	{r3, r4, r5, lr}
 802a41e:	4604      	mov	r4, r0
 802a420:	6082      	str	r2, [r0, #8]
 802a422:	6001      	str	r1, [r0, #0]
 802a424:	461d      	mov	r5, r3
 802a426:	010a      	lsls	r2, r1, #4
 802a428:	4618      	mov	r0, r3
 802a42a:	2100      	movs	r1, #0
 802a42c:	f003 fb92 	bl	802db54 <memset>
 802a430:	6065      	str	r5, [r4, #4]
 802a432:	bd38      	pop	{r3, r4, r5, pc}

0802a434 <bam_biquad_mono_compute>:
 802a434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a438:	b08d      	sub	sp, #52	@ 0x34
 802a43a:	08dc      	lsrs	r4, r3, #3
 802a43c:	9407      	str	r4, [sp, #28]
 802a43e:	0124      	lsls	r4, r4, #4
 802a440:	4626      	mov	r6, r4
 802a442:	9408      	str	r4, [sp, #32]
 802a444:	4617      	mov	r7, r2
 802a446:	c831      	ldmia	r0, {r0, r4, r5}
 802a448:	f003 0307 	and.w	r3, r3, #7
 802a44c:	9206      	str	r2, [sp, #24]
 802a44e:	19ba      	adds	r2, r7, r6
 802a450:	9309      	str	r3, [sp, #36]	@ 0x24
 802a452:	f102 0310 	add.w	r3, r2, #16
 802a456:	930a      	str	r3, [sp, #40]	@ 0x28
 802a458:	1993      	adds	r3, r2, r6
 802a45a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a45c:	f105 0318 	add.w	r3, r5, #24
 802a460:	9304      	str	r3, [sp, #16]
 802a462:	f104 0310 	add.w	r3, r4, #16
 802a466:	9005      	str	r0, [sp, #20]
 802a468:	9102      	str	r1, [sp, #8]
 802a46a:	9303      	str	r3, [sp, #12]
 802a46c:	9a04      	ldr	r2, [sp, #16]
 802a46e:	f852 6c18 	ldr.w	r6, [r2, #-24]
 802a472:	f852 bc14 	ldr.w	fp, [r2, #-20]
 802a476:	f852 7c10 	ldr.w	r7, [r2, #-16]
 802a47a:	f852 ec0c 	ldr.w	lr, [r2, #-12]
 802a47e:	f852 cc08 	ldr.w	ip, [r2, #-8]
 802a482:	f852 8c04 	ldr.w	r8, [r2, #-4]
 802a486:	9a03      	ldr	r2, [sp, #12]
 802a488:	f852 4c10 	ldr.w	r4, [r2, #-16]
 802a48c:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 802a490:	e912 0028 	ldmdb	r2, {r3, r5}
 802a494:	9a07      	ldr	r2, [sp, #28]
 802a496:	3601      	adds	r6, #1
 802a498:	2a00      	cmp	r2, #0
 802a49a:	f000 80dc 	beq.w	802a656 <bam_biquad_mono_compute+0x222>
 802a49e:	9802      	ldr	r0, [sp, #8]
 802a4a0:	9201      	str	r2, [sp, #4]
 802a4a2:	f100 0a10 	add.w	sl, r0, #16
 802a4a6:	9806      	ldr	r0, [sp, #24]
 802a4a8:	f100 0910 	add.w	r9, r0, #16
 802a4ac:	f85a 0c10 	ldr.w	r0, [sl, #-16]
 802a4b0:	fb57 f214 	smmulr	r2, r7, r4
 802a4b4:	fb5b 2210 	smmlar	r2, fp, r0, r2
 802a4b8:	fb5e 2111 	smmlar	r1, lr, r1, r2
 802a4bc:	fb5c 1113 	smmlar	r1, ip, r3, r1
 802a4c0:	fb58 1515 	smmlar	r5, r8, r5, r1
 802a4c4:	40b5      	lsls	r5, r6
 802a4c6:	f85a 2c0c 	ldr.w	r2, [sl, #-12]
 802a4ca:	f849 5c10 	str.w	r5, [r9, #-16]
 802a4ce:	fb5b f112 	smmulr	r1, fp, r2
 802a4d2:	fb57 1110 	smmlar	r1, r7, r0, r1
 802a4d6:	fb5e 1414 	smmlar	r4, lr, r4, r1
 802a4da:	fb5c 4415 	smmlar	r4, ip, r5, r4
 802a4de:	fb58 4313 	smmlar	r3, r8, r3, r4
 802a4e2:	40b3      	lsls	r3, r6
 802a4e4:	f85a 1c08 	ldr.w	r1, [sl, #-8]
 802a4e8:	f849 3c0c 	str.w	r3, [r9, #-12]
 802a4ec:	fb5b f411 	smmulr	r4, fp, r1
 802a4f0:	fb57 4412 	smmlar	r4, r7, r2, r4
 802a4f4:	fb5e 4010 	smmlar	r0, lr, r0, r4
 802a4f8:	fb5c 0013 	smmlar	r0, ip, r3, r0
 802a4fc:	fb58 0515 	smmlar	r5, r8, r5, r0
 802a500:	40b5      	lsls	r5, r6
 802a502:	f85a 4c04 	ldr.w	r4, [sl, #-4]
 802a506:	f849 5c08 	str.w	r5, [r9, #-8]
 802a50a:	fb5b f014 	smmulr	r0, fp, r4
 802a50e:	fb57 0011 	smmlar	r0, r7, r1, r0
 802a512:	fb5e 0212 	smmlar	r2, lr, r2, r0
 802a516:	fb5c 2215 	smmlar	r2, ip, r5, r2
 802a51a:	fb58 2313 	smmlar	r3, r8, r3, r2
 802a51e:	9a01      	ldr	r2, [sp, #4]
 802a520:	40b3      	lsls	r3, r6
 802a522:	3a01      	subs	r2, #1
 802a524:	f849 3c04 	str.w	r3, [r9, #-4]
 802a528:	f10a 0a10 	add.w	sl, sl, #16
 802a52c:	f109 0910 	add.w	r9, r9, #16
 802a530:	9201      	str	r2, [sp, #4]
 802a532:	d1bb      	bne.n	802a4ac <bam_biquad_mono_compute+0x78>
 802a534:	9a02      	ldr	r2, [sp, #8]
 802a536:	9808      	ldr	r0, [sp, #32]
 802a538:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802a53c:	4402      	add	r2, r0
 802a53e:	9202      	str	r2, [sp, #8]
 802a540:	f102 0a10 	add.w	sl, r2, #16
 802a544:	9a07      	ldr	r2, [sp, #28]
 802a546:	9201      	str	r2, [sp, #4]
 802a548:	f85a 0c10 	ldr.w	r0, [sl, #-16]
 802a54c:	fb57 f214 	smmulr	r2, r7, r4
 802a550:	fb5b 2210 	smmlar	r2, fp, r0, r2
 802a554:	fb5e 2111 	smmlar	r1, lr, r1, r2
 802a558:	fb5c 1113 	smmlar	r1, ip, r3, r1
 802a55c:	fb58 1515 	smmlar	r5, r8, r5, r1
 802a560:	40b5      	lsls	r5, r6
 802a562:	f85a 2c0c 	ldr.w	r2, [sl, #-12]
 802a566:	f849 5c10 	str.w	r5, [r9, #-16]
 802a56a:	fb5b f112 	smmulr	r1, fp, r2
 802a56e:	fb57 1110 	smmlar	r1, r7, r0, r1
 802a572:	fb5e 1414 	smmlar	r4, lr, r4, r1
 802a576:	fb5c 4415 	smmlar	r4, ip, r5, r4
 802a57a:	fb58 4313 	smmlar	r3, r8, r3, r4
 802a57e:	40b3      	lsls	r3, r6
 802a580:	f85a 1c08 	ldr.w	r1, [sl, #-8]
 802a584:	f849 3c0c 	str.w	r3, [r9, #-12]
 802a588:	fb5b f411 	smmulr	r4, fp, r1
 802a58c:	fb57 4412 	smmlar	r4, r7, r2, r4
 802a590:	fb5e 4010 	smmlar	r0, lr, r0, r4
 802a594:	fb5c 0013 	smmlar	r0, ip, r3, r0
 802a598:	fb58 0515 	smmlar	r5, r8, r5, r0
 802a59c:	40b5      	lsls	r5, r6
 802a59e:	f85a 4c04 	ldr.w	r4, [sl, #-4]
 802a5a2:	f849 5c08 	str.w	r5, [r9, #-8]
 802a5a6:	fb5b f014 	smmulr	r0, fp, r4
 802a5aa:	fb57 0011 	smmlar	r0, r7, r1, r0
 802a5ae:	fb5e 0212 	smmlar	r2, lr, r2, r0
 802a5b2:	fb5c 2215 	smmlar	r2, ip, r5, r2
 802a5b6:	fb58 2313 	smmlar	r3, r8, r3, r2
 802a5ba:	9a01      	ldr	r2, [sp, #4]
 802a5bc:	40b3      	lsls	r3, r6
 802a5be:	3a01      	subs	r2, #1
 802a5c0:	f849 3c04 	str.w	r3, [r9, #-4]
 802a5c4:	f10a 0a10 	add.w	sl, sl, #16
 802a5c8:	f109 0910 	add.w	r9, r9, #16
 802a5cc:	9201      	str	r2, [sp, #4]
 802a5ce:	d1bb      	bne.n	802a548 <bam_biquad_mono_compute+0x114>
 802a5d0:	9a02      	ldr	r2, [sp, #8]
 802a5d2:	9808      	ldr	r0, [sp, #32]
 802a5d4:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 802a5d8:	4402      	add	r2, r0
 802a5da:	9202      	str	r2, [sp, #8]
 802a5dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a5de:	2a00      	cmp	r2, #0
 802a5e0:	d034      	beq.n	802a64c <bam_biquad_mono_compute+0x218>
 802a5e2:	9601      	str	r6, [sp, #4]
 802a5e4:	4691      	mov	r9, r2
 802a5e6:	9e02      	ldr	r6, [sp, #8]
 802a5e8:	e001      	b.n	802a5ee <bam_biquad_mono_compute+0x1ba>
 802a5ea:	4613      	mov	r3, r2
 802a5ec:	4604      	mov	r4, r0
 802a5ee:	f856 0b04 	ldr.w	r0, [r6], #4
 802a5f2:	fb5b f210 	smmulr	r2, fp, r0
 802a5f6:	fb57 2214 	smmlar	r2, r7, r4, r2
 802a5fa:	fb5e 2211 	smmlar	r2, lr, r1, r2
 802a5fe:	fb5c 2213 	smmlar	r2, ip, r3, r2
 802a602:	fb58 2215 	smmlar	r2, r8, r5, r2
 802a606:	9901      	ldr	r1, [sp, #4]
 802a608:	f1b9 0901 	subs.w	r9, r9, #1
 802a60c:	fa02 f201 	lsl.w	r2, r2, r1
 802a610:	f84a 2b04 	str.w	r2, [sl], #4
 802a614:	4621      	mov	r1, r4
 802a616:	461d      	mov	r5, r3
 802a618:	d1e7      	bne.n	802a5ea <bam_biquad_mono_compute+0x1b6>
 802a61a:	9d03      	ldr	r5, [sp, #12]
 802a61c:	f845 3c04 	str.w	r3, [r5, #-4]
 802a620:	9b04      	ldr	r3, [sp, #16]
 802a622:	f845 0c10 	str.w	r0, [r5, #-16]
 802a626:	3318      	adds	r3, #24
 802a628:	9304      	str	r3, [sp, #16]
 802a62a:	f105 0310 	add.w	r3, r5, #16
 802a62e:	9303      	str	r3, [sp, #12]
 802a630:	9b06      	ldr	r3, [sp, #24]
 802a632:	9302      	str	r3, [sp, #8]
 802a634:	9b05      	ldr	r3, [sp, #20]
 802a636:	f845 4c0c 	str.w	r4, [r5, #-12]
 802a63a:	3b01      	subs	r3, #1
 802a63c:	f845 2c08 	str.w	r2, [r5, #-8]
 802a640:	9305      	str	r3, [sp, #20]
 802a642:	f47f af13 	bne.w	802a46c <bam_biquad_mono_compute+0x38>
 802a646:	b00d      	add	sp, #52	@ 0x34
 802a648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a64c:	461a      	mov	r2, r3
 802a64e:	4620      	mov	r0, r4
 802a650:	462b      	mov	r3, r5
 802a652:	460c      	mov	r4, r1
 802a654:	e7e1      	b.n	802a61a <bam_biquad_mono_compute+0x1e6>
 802a656:	f8dd a018 	ldr.w	sl, [sp, #24]
 802a65a:	e7bf      	b.n	802a5dc <bam_biquad_mono_compute+0x1a8>

0802a65c <bam_biquad_stereo_compute>:
 802a65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a660:	684e      	ldr	r6, [r1, #4]
 802a662:	b091      	sub	sp, #68	@ 0x44
 802a664:	c823      	ldmia	r0, {r0, r1, r5}
 802a666:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 802a668:	900a      	str	r0, [sp, #40]	@ 0x28
 802a66a:	08a0      	lsrs	r0, r4, #2
 802a66c:	9008      	str	r0, [sp, #32]
 802a66e:	0140      	lsls	r0, r0, #5
 802a670:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a672:	4403      	add	r3, r0
 802a674:	930f      	str	r3, [sp, #60]	@ 0x3c
 802a676:	f105 0318 	add.w	r3, r5, #24
 802a67a:	f004 0703 	and.w	r7, r4, #3
 802a67e:	9306      	str	r3, [sp, #24]
 802a680:	00e4      	lsls	r4, r4, #3
 802a682:	f101 0310 	add.w	r3, r1, #16
 802a686:	9303      	str	r3, [sp, #12]
 802a688:	f1c4 0304 	rsb	r3, r4, #4
 802a68c:	3610      	adds	r6, #16
 802a68e:	930e      	str	r3, [sp, #56]	@ 0x38
 802a690:	00fb      	lsls	r3, r7, #3
 802a692:	900d      	str	r0, [sp, #52]	@ 0x34
 802a694:	9709      	str	r7, [sp, #36]	@ 0x24
 802a696:	9607      	str	r6, [sp, #28]
 802a698:	9202      	str	r2, [sp, #8]
 802a69a:	930c      	str	r3, [sp, #48]	@ 0x30
 802a69c:	9a06      	ldr	r2, [sp, #24]
 802a69e:	f852 4c18 	ldr.w	r4, [r2, #-24]
 802a6a2:	f852 bc14 	ldr.w	fp, [r2, #-20]
 802a6a6:	f852 5c10 	ldr.w	r5, [r2, #-16]
 802a6aa:	f852 6c0c 	ldr.w	r6, [r2, #-12]
 802a6ae:	e912 4080 	ldmdb	r2, {r7, lr}
 802a6b2:	9a03      	ldr	r2, [sp, #12]
 802a6b4:	f852 cc10 	ldr.w	ip, [r2, #-16]
 802a6b8:	f852 1c0c 	ldr.w	r1, [r2, #-12]
 802a6bc:	e912 0108 	ldmdb	r2, {r3, r8}
 802a6c0:	9a08      	ldr	r2, [sp, #32]
 802a6c2:	3401      	adds	r4, #1
 802a6c4:	2a00      	cmp	r2, #0
 802a6c6:	f000 8158 	beq.w	802a97a <bam_biquad_stereo_compute+0x31e>
 802a6ca:	9802      	ldr	r0, [sp, #8]
 802a6cc:	9201      	str	r2, [sp, #4]
 802a6ce:	f100 0a20 	add.w	sl, r0, #32
 802a6d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802a6d4:	4642      	mov	r2, r8
 802a6d6:	f100 0920 	add.w	r9, r0, #32
 802a6da:	46a0      	mov	r8, r4
 802a6dc:	f85a 4c20 	ldr.w	r4, [sl, #-32]
 802a6e0:	fb55 f01c 	smmulr	r0, r5, ip
 802a6e4:	fb5b 0014 	smmlar	r0, fp, r4, r0
 802a6e8:	fb56 0111 	smmlar	r1, r6, r1, r0
 802a6ec:	fb57 1113 	smmlar	r1, r7, r3, r1
 802a6f0:	fb5e 1212 	smmlar	r2, lr, r2, r1
 802a6f4:	fa02 f208 	lsl.w	r2, r2, r8
 802a6f8:	f85a 0c18 	ldr.w	r0, [sl, #-24]
 802a6fc:	f849 2c20 	str.w	r2, [r9, #-32]
 802a700:	fb5b f110 	smmulr	r1, fp, r0
 802a704:	fb55 1114 	smmlar	r1, r5, r4, r1
 802a708:	fb56 1c1c 	smmlar	ip, r6, ip, r1
 802a70c:	fb57 cc12 	smmlar	ip, r7, r2, ip
 802a710:	fb5e c313 	smmlar	r3, lr, r3, ip
 802a714:	fa03 f308 	lsl.w	r3, r3, r8
 802a718:	f85a 1c10 	ldr.w	r1, [sl, #-16]
 802a71c:	f849 3c18 	str.w	r3, [r9, #-24]
 802a720:	fb5b fc11 	smmulr	ip, fp, r1
 802a724:	fb55 cc10 	smmlar	ip, r5, r0, ip
 802a728:	fb56 c414 	smmlar	r4, r6, r4, ip
 802a72c:	fb57 4413 	smmlar	r4, r7, r3, r4
 802a730:	fb5e 4212 	smmlar	r2, lr, r2, r4
 802a734:	fa02 f208 	lsl.w	r2, r2, r8
 802a738:	f85a cc08 	ldr.w	ip, [sl, #-8]
 802a73c:	f849 2c10 	str.w	r2, [r9, #-16]
 802a740:	fb5b f41c 	smmulr	r4, fp, ip
 802a744:	fb55 4411 	smmlar	r4, r5, r1, r4
 802a748:	fb56 4010 	smmlar	r0, r6, r0, r4
 802a74c:	fb57 0012 	smmlar	r0, r7, r2, r0
 802a750:	fb5e 0313 	smmlar	r3, lr, r3, r0
 802a754:	9801      	ldr	r0, [sp, #4]
 802a756:	fa03 f308 	lsl.w	r3, r3, r8
 802a75a:	3801      	subs	r0, #1
 802a75c:	f849 3c08 	str.w	r3, [r9, #-8]
 802a760:	f10a 0a20 	add.w	sl, sl, #32
 802a764:	f109 0920 	add.w	r9, r9, #32
 802a768:	9001      	str	r0, [sp, #4]
 802a76a:	d1b7      	bne.n	802a6dc <bam_biquad_stereo_compute+0x80>
 802a76c:	4644      	mov	r4, r8
 802a76e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a770:	4690      	mov	r8, r2
 802a772:	9a02      	ldr	r2, [sp, #8]
 802a774:	4402      	add	r2, r0
 802a776:	9202      	str	r2, [sp, #8]
 802a778:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802a77a:	9204      	str	r2, [sp, #16]
 802a77c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a77e:	2a00      	cmp	r2, #0
 802a780:	f000 80f6 	beq.w	802a970 <bam_biquad_stereo_compute+0x314>
 802a784:	9802      	ldr	r0, [sp, #8]
 802a786:	9401      	str	r4, [sp, #4]
 802a788:	f100 0908 	add.w	r9, r0, #8
 802a78c:	9804      	ldr	r0, [sp, #16]
 802a78e:	4614      	mov	r4, r2
 802a790:	f100 0a08 	add.w	sl, r0, #8
 802a794:	e001      	b.n	802a79a <bam_biquad_stereo_compute+0x13e>
 802a796:	4613      	mov	r3, r2
 802a798:	4684      	mov	ip, r0
 802a79a:	f859 0c08 	ldr.w	r0, [r9, #-8]
 802a79e:	fb5b f210 	smmulr	r2, fp, r0
 802a7a2:	fb55 221c 	smmlar	r2, r5, ip, r2
 802a7a6:	fb56 2211 	smmlar	r2, r6, r1, r2
 802a7aa:	fb57 2213 	smmlar	r2, r7, r3, r2
 802a7ae:	fb5e 2218 	smmlar	r2, lr, r8, r2
 802a7b2:	9901      	ldr	r1, [sp, #4]
 802a7b4:	3c01      	subs	r4, #1
 802a7b6:	fa02 f201 	lsl.w	r2, r2, r1
 802a7ba:	f84a 2c08 	str.w	r2, [sl, #-8]
 802a7be:	f109 0908 	add.w	r9, r9, #8
 802a7c2:	f10a 0a08 	add.w	sl, sl, #8
 802a7c6:	4661      	mov	r1, ip
 802a7c8:	4698      	mov	r8, r3
 802a7ca:	d1e4      	bne.n	802a796 <bam_biquad_stereo_compute+0x13a>
 802a7cc:	9902      	ldr	r1, [sp, #8]
 802a7ce:	9c01      	ldr	r4, [sp, #4]
 802a7d0:	4688      	mov	r8, r1
 802a7d2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802a7d4:	4488      	add	r8, r1
 802a7d6:	9904      	ldr	r1, [sp, #16]
 802a7d8:	f8cd 8008 	str.w	r8, [sp, #8]
 802a7dc:	4688      	mov	r8, r1
 802a7de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802a7e0:	4488      	add	r8, r1
 802a7e2:	f8cd 8010 	str.w	r8, [sp, #16]
 802a7e6:	9903      	ldr	r1, [sp, #12]
 802a7e8:	e901 000c 	stmdb	r1, {r2, r3}
 802a7ec:	9b02      	ldr	r3, [sp, #8]
 802a7ee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802a7f0:	f841 0c10 	str.w	r0, [r1, #-16]
 802a7f4:	f841 cc0c 	str.w	ip, [r1, #-12]
 802a7f8:	4619      	mov	r1, r3
 802a7fa:	9b04      	ldr	r3, [sp, #16]
 802a7fc:	4411      	add	r1, r2
 802a7fe:	4608      	mov	r0, r1
 802a800:	9105      	str	r1, [sp, #20]
 802a802:	4619      	mov	r1, r3
 802a804:	4411      	add	r1, r2
 802a806:	9a07      	ldr	r2, [sp, #28]
 802a808:	9102      	str	r1, [sp, #8]
 802a80a:	f852 cc10 	ldr.w	ip, [r2, #-16]
 802a80e:	f852 8c0c 	ldr.w	r8, [r2, #-12]
 802a812:	f852 3c08 	ldr.w	r3, [r2, #-8]
 802a816:	f852 1c04 	ldr.w	r1, [r2, #-4]
 802a81a:	9a08      	ldr	r2, [sp, #32]
 802a81c:	2a00      	cmp	r2, #0
 802a81e:	d05f      	beq.n	802a8e0 <bam_biquad_stereo_compute+0x284>
 802a820:	9a02      	ldr	r2, [sp, #8]
 802a822:	f102 0920 	add.w	r9, r2, #32
 802a826:	9a08      	ldr	r2, [sp, #32]
 802a828:	9201      	str	r2, [sp, #4]
 802a82a:	4642      	mov	r2, r8
 802a82c:	f100 0a20 	add.w	sl, r0, #32
 802a830:	46a0      	mov	r8, r4
 802a832:	4614      	mov	r4, r2
 802a834:	f85a 0c20 	ldr.w	r0, [sl, #-32]
 802a838:	fb55 f21c 	smmulr	r2, r5, ip
 802a83c:	fb5b 2210 	smmlar	r2, fp, r0, r2
 802a840:	fb56 2414 	smmlar	r4, r6, r4, r2
 802a844:	fb57 4413 	smmlar	r4, r7, r3, r4
 802a848:	fb5e 4111 	smmlar	r1, lr, r1, r4
 802a84c:	fa01 f108 	lsl.w	r1, r1, r8
 802a850:	f85a 2c18 	ldr.w	r2, [sl, #-24]
 802a854:	f849 1c20 	str.w	r1, [r9, #-32]
 802a858:	fb5b f412 	smmulr	r4, fp, r2
 802a85c:	fb55 4410 	smmlar	r4, r5, r0, r4
 802a860:	fb56 4c1c 	smmlar	ip, r6, ip, r4
 802a864:	fb57 cc11 	smmlar	ip, r7, r1, ip
 802a868:	fb5e c313 	smmlar	r3, lr, r3, ip
 802a86c:	fa03 f308 	lsl.w	r3, r3, r8
 802a870:	f85a 4c10 	ldr.w	r4, [sl, #-16]
 802a874:	f849 3c18 	str.w	r3, [r9, #-24]
 802a878:	fb5b fc14 	smmulr	ip, fp, r4
 802a87c:	fb55 cc12 	smmlar	ip, r5, r2, ip
 802a880:	fb56 c010 	smmlar	r0, r6, r0, ip
 802a884:	fb57 0013 	smmlar	r0, r7, r3, r0
 802a888:	fb5e 0111 	smmlar	r1, lr, r1, r0
 802a88c:	fa01 f108 	lsl.w	r1, r1, r8
 802a890:	f85a cc08 	ldr.w	ip, [sl, #-8]
 802a894:	f849 1c10 	str.w	r1, [r9, #-16]
 802a898:	fb5b f01c 	smmulr	r0, fp, ip
 802a89c:	fb55 0014 	smmlar	r0, r5, r4, r0
 802a8a0:	fb56 0212 	smmlar	r2, r6, r2, r0
 802a8a4:	fb57 2211 	smmlar	r2, r7, r1, r2
 802a8a8:	fb5e 2313 	smmlar	r3, lr, r3, r2
 802a8ac:	9a01      	ldr	r2, [sp, #4]
 802a8ae:	fa03 f308 	lsl.w	r3, r3, r8
 802a8b2:	3a01      	subs	r2, #1
 802a8b4:	f849 3c08 	str.w	r3, [r9, #-8]
 802a8b8:	f10a 0a20 	add.w	sl, sl, #32
 802a8bc:	f109 0920 	add.w	r9, r9, #32
 802a8c0:	9201      	str	r2, [sp, #4]
 802a8c2:	d1b7      	bne.n	802a834 <bam_biquad_stereo_compute+0x1d8>
 802a8c4:	4622      	mov	r2, r4
 802a8c6:	4644      	mov	r4, r8
 802a8c8:	4690      	mov	r8, r2
 802a8ca:	9a05      	ldr	r2, [sp, #20]
 802a8cc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a8ce:	4691      	mov	r9, r2
 802a8d0:	9a02      	ldr	r2, [sp, #8]
 802a8d2:	4481      	add	r9, r0
 802a8d4:	f8cd 9014 	str.w	r9, [sp, #20]
 802a8d8:	4691      	mov	r9, r2
 802a8da:	4481      	add	r9, r0
 802a8dc:	f8cd 9008 	str.w	r9, [sp, #8]
 802a8e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a8e2:	2a00      	cmp	r2, #0
 802a8e4:	d03f      	beq.n	802a966 <bam_biquad_stereo_compute+0x30a>
 802a8e6:	9805      	ldr	r0, [sp, #20]
 802a8e8:	9401      	str	r4, [sp, #4]
 802a8ea:	f100 0a08 	add.w	sl, r0, #8
 802a8ee:	9802      	ldr	r0, [sp, #8]
 802a8f0:	f100 0908 	add.w	r9, r0, #8
 802a8f4:	4610      	mov	r0, r2
 802a8f6:	e001      	b.n	802a8fc <bam_biquad_stereo_compute+0x2a0>
 802a8f8:	4613      	mov	r3, r2
 802a8fa:	46a4      	mov	ip, r4
 802a8fc:	f85a 4c08 	ldr.w	r4, [sl, #-8]
 802a900:	fb5b f214 	smmulr	r2, fp, r4
 802a904:	fb55 221c 	smmlar	r2, r5, ip, r2
 802a908:	fb56 2218 	smmlar	r2, r6, r8, r2
 802a90c:	fb57 2213 	smmlar	r2, r7, r3, r2
 802a910:	fb5e 2211 	smmlar	r2, lr, r1, r2
 802a914:	9901      	ldr	r1, [sp, #4]
 802a916:	3801      	subs	r0, #1
 802a918:	fa02 f201 	lsl.w	r2, r2, r1
 802a91c:	f849 2c08 	str.w	r2, [r9, #-8]
 802a920:	f10a 0a08 	add.w	sl, sl, #8
 802a924:	f109 0908 	add.w	r9, r9, #8
 802a928:	46e0      	mov	r8, ip
 802a92a:	4619      	mov	r1, r3
 802a92c:	d1e4      	bne.n	802a8f8 <bam_biquad_stereo_compute+0x29c>
 802a92e:	9807      	ldr	r0, [sp, #28]
 802a930:	f840 3c04 	str.w	r3, [r0, #-4]
 802a934:	9b06      	ldr	r3, [sp, #24]
 802a936:	f840 4c10 	str.w	r4, [r0, #-16]
 802a93a:	3318      	adds	r3, #24
 802a93c:	9306      	str	r3, [sp, #24]
 802a93e:	9b03      	ldr	r3, [sp, #12]
 802a940:	f840 cc0c 	str.w	ip, [r0, #-12]
 802a944:	3310      	adds	r3, #16
 802a946:	9303      	str	r3, [sp, #12]
 802a948:	f100 0310 	add.w	r3, r0, #16
 802a94c:	9307      	str	r3, [sp, #28]
 802a94e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802a950:	9302      	str	r3, [sp, #8]
 802a952:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a954:	f840 2c08 	str.w	r2, [r0, #-8]
 802a958:	3b01      	subs	r3, #1
 802a95a:	930a      	str	r3, [sp, #40]	@ 0x28
 802a95c:	f47f ae9e 	bne.w	802a69c <bam_biquad_stereo_compute+0x40>
 802a960:	b011      	add	sp, #68	@ 0x44
 802a962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a966:	461a      	mov	r2, r3
 802a968:	4664      	mov	r4, ip
 802a96a:	460b      	mov	r3, r1
 802a96c:	46c4      	mov	ip, r8
 802a96e:	e7de      	b.n	802a92e <bam_biquad_stereo_compute+0x2d2>
 802a970:	461a      	mov	r2, r3
 802a972:	4660      	mov	r0, ip
 802a974:	4643      	mov	r3, r8
 802a976:	468c      	mov	ip, r1
 802a978:	e735      	b.n	802a7e6 <bam_biquad_stereo_compute+0x18a>
 802a97a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a97c:	9204      	str	r2, [sp, #16]
 802a97e:	e6fd      	b.n	802a77c <bam_biquad_stereo_compute+0x120>

0802a980 <bam_svc_reset>:
 802a980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a982:	4a1c      	ldr	r2, [pc, #112]	@ (802a9f4 <bam_svc_reset+0x74>)
 802a984:	4c1c      	ldr	r4, [pc, #112]	@ (802a9f8 <bam_svc_reset+0x78>)
 802a986:	4b1d      	ldr	r3, [pc, #116]	@ (802a9fc <bam_svc_reset+0x7c>)
 802a988:	f8d2 2120 	ldr.w	r2, [r2, #288]	@ 0x120
 802a98c:	6001      	str	r1, [r0, #0]
 802a98e:	60c4      	str	r4, [r0, #12]
 802a990:	6103      	str	r3, [r0, #16]
 802a992:	2400      	movs	r4, #0
 802a994:	2301      	movs	r3, #1
 802a996:	2764      	movs	r7, #100	@ 0x64
 802a998:	2606      	movs	r6, #6
 802a99a:	f06f 457e 	mvn.w	r5, #4261412864	@ 0xfe000000
 802a99e:	2110      	movs	r1, #16
 802a9a0:	8287      	strh	r7, [r0, #20]
 802a9a2:	82c6      	strh	r6, [r0, #22]
 802a9a4:	f8c0 52cc 	str.w	r5, [r0, #716]	@ 0x2cc
 802a9a8:	f8a0 12aa 	strh.w	r1, [r0, #682]	@ 0x2aa
 802a9ac:	f8c0 22ac 	str.w	r2, [r0, #684]	@ 0x2ac
 802a9b0:	f8c0 22b0 	str.w	r2, [r0, #688]	@ 0x2b0
 802a9b4:	f8a0 42b4 	strh.w	r4, [r0, #692]	@ 0x2b4
 802a9b8:	f8a0 42b6 	strh.w	r4, [r0, #694]	@ 0x2b6
 802a9bc:	6044      	str	r4, [r0, #4]
 802a9be:	61c4      	str	r4, [r0, #28]
 802a9c0:	6184      	str	r4, [r0, #24]
 802a9c2:	6204      	str	r4, [r0, #32]
 802a9c4:	6244      	str	r4, [r0, #36]	@ 0x24
 802a9c6:	f8c0 42c0 	str.w	r4, [r0, #704]	@ 0x2c0
 802a9ca:	f8c0 42bc 	str.w	r4, [r0, #700]	@ 0x2bc
 802a9ce:	f8c0 42c4 	str.w	r4, [r0, #708]	@ 0x2c4
 802a9d2:	f8c0 42c8 	str.w	r4, [r0, #712]	@ 0x2c8
 802a9d6:	f8a0 42ba 	strh.w	r4, [r0, #698]	@ 0x2ba
 802a9da:	f8a0 32b8 	strh.w	r3, [r0, #696]	@ 0x2b8
 802a9de:	f8a0 32a8 	strh.w	r3, [r0, #680]	@ 0x2a8
 802a9e2:	4621      	mov	r1, r4
 802a9e4:	f44f 7220 	mov.w	r2, #640	@ 0x280
 802a9e8:	3028      	adds	r0, #40	@ 0x28
 802a9ea:	f003 f8b3 	bl	802db54 <memset>
 802a9ee:	4620      	mov	r0, r4
 802a9f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a9f2:	bf00      	nop
 802a9f4:	0803856c 	.word	0x0803856c
 802a9f8:	7d5c6534 	.word	0x7d5c6534
 802a9fc:	7ff777c0 	.word	0x7ff777c0

0802aa00 <bam_svc_setConfig>:
 802aa00:	f9b0 2010 	ldrsh.w	r2, [r0, #16]
 802aa04:	b293      	uxth	r3, r2
 802aa06:	2b01      	cmp	r3, #1
 802aa08:	d86c      	bhi.n	802aae4 <bam_svc_setConfig+0xe4>
 802aa0a:	f9b0 3000 	ldrsh.w	r3, [r0]
 802aa0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 802aa10:	f103 04a0 	add.w	r4, r3, #160	@ 0xa0
 802aa14:	b2a4      	uxth	r4, r4
 802aa16:	2ce8      	cmp	r4, #232	@ 0xe8
 802aa18:	d867      	bhi.n	802aaea <bam_svc_setConfig+0xea>
 802aa1a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 802aa1e:	2c01      	cmp	r4, #1
 802aa20:	d03d      	beq.n	802aa9e <bam_svc_setConfig+0x9e>
 802aa22:	2c00      	cmp	r4, #0
 802aa24:	d164      	bne.n	802aaf0 <bam_svc_setConfig+0xf0>
 802aa26:	f9b1 52b4 	ldrsh.w	r5, [r1, #692]	@ 0x2b4
 802aa2a:	429d      	cmp	r5, r3
 802aa2c:	dd0e      	ble.n	802aa4c <bam_svc_setConfig+0x4c>
 802aa2e:	698e      	ldr	r6, [r1, #24]
 802aa30:	69cd      	ldr	r5, [r1, #28]
 802aa32:	6a0f      	ldr	r7, [r1, #32]
 802aa34:	f8c1 62bc 	str.w	r6, [r1, #700]	@ 0x2bc
 802aa38:	f8c1 52c0 	str.w	r5, [r1, #704]	@ 0x2c0
 802aa3c:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 802aa3e:	f8c1 72c4 	str.w	r7, [r1, #708]	@ 0x2c4
 802aa42:	2501      	movs	r5, #1
 802aa44:	f8c1 62c8 	str.w	r6, [r1, #712]	@ 0x2c8
 802aa48:	f8a1 52ba 	strh.w	r5, [r1, #698]	@ 0x2ba
 802aa4c:	2b00      	cmp	r3, #0
 802aa4e:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 802aa52:	dd01      	ble.n	802aa58 <bam_svc_setConfig+0x58>
 802aa54:	2e01      	cmp	r6, #1
 802aa56:	d02a      	beq.n	802aaae <bam_svc_setConfig+0xae>
 802aa58:	2500      	movs	r5, #0
 802aa5a:	f8a1 32b4 	strh.w	r3, [r1, #692]	@ 0x2b4
 802aa5e:	61cd      	str	r5, [r1, #28]
 802aa60:	f1c3 0348 	rsb	r3, r3, #72	@ 0x48
 802aa64:	618d      	str	r5, [r1, #24]
 802aa66:	620d      	str	r5, [r1, #32]
 802aa68:	624d      	str	r5, [r1, #36]	@ 0x24
 802aa6a:	4f23      	ldr	r7, [pc, #140]	@ (802aaf8 <bam_svc_setConfig+0xf8>)
 802aa6c:	6885      	ldr	r5, [r0, #8]
 802aa6e:	f857 7023 	ldr.w	r7, [r7, r3, lsl #2]
 802aa72:	68c3      	ldr	r3, [r0, #12]
 802aa74:	610b      	str	r3, [r1, #16]
 802aa76:	f8a1 42b6 	strh.w	r4, [r1, #694]	@ 0x2b6
 802aa7a:	f8a1 62b8 	strh.w	r6, [r1, #696]	@ 0x2b8
 802aa7e:	f8c1 72ac 	str.w	r7, [r1, #684]	@ 0x2ac
 802aa82:	60cd      	str	r5, [r1, #12]
 802aa84:	f8a1 22a8 	strh.w	r2, [r1, #680]	@ 0x2a8
 802aa88:	b122      	cbz	r2, 802aa94 <bam_svc_setConfig+0x94>
 802aa8a:	2301      	movs	r3, #1
 802aa8c:	f8a1 32aa 	strh.w	r3, [r1, #682]	@ 0x2aa
 802aa90:	2000      	movs	r0, #0
 802aa92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aa94:	2310      	movs	r3, #16
 802aa96:	4610      	mov	r0, r2
 802aa98:	f8a1 32aa 	strh.w	r3, [r1, #682]	@ 0x2aa
 802aa9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aa9e:	f64f 7360 	movw	r3, #65376	@ 0xff60
 802aaa2:	f8a1 32b4 	strh.w	r3, [r1, #692]	@ 0x2b4
 802aaa6:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 802aaaa:	23e8      	movs	r3, #232	@ 0xe8
 802aaac:	e7dd      	b.n	802aa6a <bam_svc_setConfig+0x6a>
 802aaae:	4d13      	ldr	r5, [pc, #76]	@ (802aafc <bam_svc_setConfig+0xfc>)
 802aab0:	4f13      	ldr	r7, [pc, #76]	@ (802ab00 <bam_svc_setConfig+0x100>)
 802aab2:	f855 5023 	ldr.w	r5, [r5, r3, lsl #2]
 802aab6:	f857 c023 	ldr.w	ip, [r7, r3, lsl #2]
 802aaba:	f8df e048 	ldr.w	lr, [pc, #72]	@ 802ab04 <bam_svc_setConfig+0x104>
 802aabe:	f8a1 32b4 	strh.w	r3, [r1, #692]	@ 0x2b4
 802aac2:	426d      	negs	r5, r5
 802aac4:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 802aac8:	ebcc 0707 	rsb	r7, ip, r7
 802aacc:	61cd      	str	r5, [r1, #28]
 802aace:	106d      	asrs	r5, r5, #1
 802aad0:	618d      	str	r5, [r1, #24]
 802aad2:	620f      	str	r7, [r1, #32]
 802aad4:	f85e 5023 	ldr.w	r5, [lr, r3, lsl #2]
 802aad8:	fb55 f717 	smmulr	r7, r5, r7
 802aadc:	624f      	str	r7, [r1, #36]	@ 0x24
 802aade:	f1c3 0348 	rsb	r3, r3, #72	@ 0x48
 802aae2:	e7c2      	b.n	802aa6a <bam_svc_setConfig+0x6a>
 802aae4:	f06f 0003 	mvn.w	r0, #3
 802aae8:	4770      	bx	lr
 802aaea:	f06f 0001 	mvn.w	r0, #1
 802aaee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aaf0:	f06f 0002 	mvn.w	r0, #2
 802aaf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aaf6:	bf00      	nop
 802aaf8:	0803856c 	.word	0x0803856c
 802aafc:	08038a34 	.word	0x08038a34
 802ab00:	08038b58 	.word	0x08038b58
 802ab04:	08038910 	.word	0x08038910

0802ab08 <bam_svc_setParam>:
 802ab08:	f9b0 3000 	ldrsh.w	r3, [r0]
 802ab0c:	b29a      	uxth	r2, r3
 802ab0e:	2aa0      	cmp	r2, #160	@ 0xa0
 802ab10:	bf9a      	itte	ls
 802ab12:	2000      	movls	r0, #0
 802ab14:	828b      	strhls	r3, [r1, #20]
 802ab16:	f04f 30ff 	movhi.w	r0, #4294967295
 802ab1a:	4770      	bx	lr

0802ab1c <bam_svc_process>:
 802ab1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab20:	6813      	ldr	r3, [r2, #0]
 802ab22:	68c5      	ldr	r5, [r0, #12]
 802ab24:	b08d      	sub	sp, #52	@ 0x34
 802ab26:	461c      	mov	r4, r3
 802ab28:	9304      	str	r3, [sp, #16]
 802ab2a:	6843      	ldr	r3, [r0, #4]
 802ab2c:	940a      	str	r4, [sp, #40]	@ 0x28
 802ab2e:	2b04      	cmp	r3, #4
 802ab30:	f504 64f0 	add.w	r4, r4, #1920	@ 0x780
 802ab34:	9509      	str	r5, [sp, #36]	@ 0x24
 802ab36:	9403      	str	r4, [sp, #12]
 802ab38:	f040 825a 	bne.w	802aff0 <bam_svc_process+0x4d4>
 802ab3c:	684b      	ldr	r3, [r1, #4]
 802ab3e:	2b04      	cmp	r3, #4
 802ab40:	f040 8256 	bne.w	802aff0 <bam_svc_process+0x4d4>
 802ab44:	6803      	ldr	r3, [r0, #0]
 802ab46:	910b      	str	r1, [sp, #44]	@ 0x2c
 802ab48:	2b00      	cmp	r3, #0
 802ab4a:	4691      	mov	r9, r2
 802ab4c:	f340 8147 	ble.w	802adde <bam_svc_process+0x2c2>
 802ab50:	2300      	movs	r3, #0
 802ab52:	9302      	str	r3, [sp, #8]
 802ab54:	f9b9 62b8 	ldrsh.w	r6, [r9, #696]	@ 0x2b8
 802ab58:	6883      	ldr	r3, [r0, #8]
 802ab5a:	9301      	str	r3, [sp, #4]
 802ab5c:	f9b9 32ba 	ldrsh.w	r3, [r9, #698]	@ 0x2ba
 802ab60:	9300      	str	r3, [sp, #0]
 802ab62:	2e01      	cmp	r6, #1
 802ab64:	f9b9 32a8 	ldrsh.w	r3, [r9, #680]	@ 0x2a8
 802ab68:	f9b9 a2b4 	ldrsh.w	sl, [r9, #692]	@ 0x2b4
 802ab6c:	9306      	str	r3, [sp, #24]
 802ab6e:	462c      	mov	r4, r5
 802ab70:	f109 0b28 	add.w	fp, r9, #40	@ 0x28
 802ab74:	4680      	mov	r8, r0
 802ab76:	f000 80aa 	beq.w	802acce <bam_svc_process+0x1b2>
 802ab7a:	f8d9 2020 	ldr.w	r2, [r9, #32]
 802ab7e:	f8d9 7018 	ldr.w	r7, [r9, #24]
 802ab82:	f8d9 301c 	ldr.w	r3, [r9, #28]
 802ab86:	4611      	mov	r1, r2
 802ab88:	f8d9 2024 	ldr.w	r2, [r9, #36]	@ 0x24
 802ab8c:	9205      	str	r2, [sp, #20]
 802ab8e:	9a00      	ldr	r2, [sp, #0]
 802ab90:	b14a      	cbz	r2, 802aba6 <bam_svc_process+0x8a>
 802ab92:	f8d9 22c4 	ldr.w	r2, [r9, #708]	@ 0x2c4
 802ab96:	f8d9 72bc 	ldr.w	r7, [r9, #700]	@ 0x2bc
 802ab9a:	f8d9 32c0 	ldr.w	r3, [r9, #704]	@ 0x2c0
 802ab9e:	4611      	mov	r1, r2
 802aba0:	f8d9 22c8 	ldr.w	r2, [r9, #712]	@ 0x2c8
 802aba4:	9205      	str	r2, [sp, #20]
 802aba6:	f1ba 0f00 	cmp.w	sl, #0
 802abaa:	f340 817f 	ble.w	802aeac <bam_svc_process+0x390>
 802abae:	2e01      	cmp	r6, #1
 802abb0:	f000 8183 	beq.w	802aeba <bam_svc_process+0x39e>
 802abb4:	2c00      	cmp	r4, #0
 802abb6:	dd0a      	ble.n	802abce <bam_svc_process+0xb2>
 802abb8:	9a03      	ldr	r2, [sp, #12]
 802abba:	2300      	movs	r3, #0
 802abbc:	f06f 417e 	mvn.w	r1, #4261412864	@ 0xfe000000
 802abc0:	3301      	adds	r3, #1
 802abc2:	42a3      	cmp	r3, r4
 802abc4:	f842 1b04 	str.w	r1, [r2], #4
 802abc8:	d1fa      	bne.n	802abc0 <bam_svc_process+0xa4>
 802abca:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802abce:	f8d9 32b0 	ldr.w	r3, [r9, #688]	@ 0x2b0
 802abd2:	f8d9 22ac 	ldr.w	r2, [r9, #684]	@ 0x2ac
 802abd6:	f9b9 a2b4 	ldrsh.w	sl, [r9, #692]	@ 0x2b4
 802abda:	ebb2 0e03 	subs.w	lr, r2, r3
 802abde:	bf18      	it	ne
 802abe0:	fb9e fef4 	sdivne	lr, lr, r4
 802abe4:	f1ba 0f00 	cmp.w	sl, #0
 802abe8:	f340 812c 	ble.w	802ae44 <bam_svc_process+0x328>
 802abec:	f9b9 5014 	ldrsh.w	r5, [r9, #20]
 802abf0:	2c00      	cmp	r4, #0
 802abf2:	ea4f 0c85 	mov.w	ip, r5, lsl #2
 802abf6:	f1cc 0c00 	rsb	ip, ip, #0
 802abfa:	dd25      	ble.n	802ac48 <bam_svc_process+0x12c>
 802abfc:	9a01      	ldr	r2, [sp, #4]
 802abfe:	9e03      	ldr	r6, [sp, #12]
 802ac00:	4494      	add	ip, r2
 802ac02:	9a04      	ldr	r2, [sp, #16]
 802ac04:	2000      	movs	r0, #0
 802ac06:	1f17      	subs	r7, r2, #4
 802ac08:	e001      	b.n	802ac0e <bam_svc_process+0xf2>
 802ac0a:	f8d9 32b0 	ldr.w	r3, [r9, #688]	@ 0x2b0
 802ac0e:	f856 1b04 	ldr.w	r1, [r6], #4
 802ac12:	42a8      	cmp	r0, r5
 802ac14:	bfb4      	ite	lt
 802ac16:	465a      	movlt	r2, fp
 802ac18:	4662      	movge	r2, ip
 802ac1a:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 802ac1e:	1092      	asrs	r2, r2, #2
 802ac20:	fb52 f211 	smmulr	r2, r2, r1
 802ac24:	4473      	add	r3, lr
 802ac26:	f8c9 32b0 	str.w	r3, [r9, #688]	@ 0x2b0
 802ac2a:	0052      	lsls	r2, r2, #1
 802ac2c:	fb52 f313 	smmulr	r3, r2, r3
 802ac30:	3001      	adds	r0, #1
 802ac32:	01db      	lsls	r3, r3, #7
 802ac34:	42a0      	cmp	r0, r4
 802ac36:	f303 0319 	ssat	r3, #26, r3
 802ac3a:	ea4f 1383 	mov.w	r3, r3, lsl #6
 802ac3e:	f847 3f04 	str.w	r3, [r7, #4]!
 802ac42:	d1e2      	bne.n	802ac0a <bam_svc_process+0xee>
 802ac44:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802ac48:	f9b9 32b6 	ldrsh.w	r3, [r9, #694]	@ 0x2b6
 802ac4c:	2b01      	cmp	r3, #1
 802ac4e:	bf0a      	itet	eq
 802ac50:	2300      	moveq	r3, #0
 802ac52:	f8d9 32ac 	ldrne.w	r3, [r9, #684]	@ 0x2ac
 802ac56:	f8c9 32ac 	streq.w	r3, [r9, #684]	@ 0x2ac
 802ac5a:	106f      	asrs	r7, r5, #1
 802ac5c:	f8c9 32b0 	str.w	r3, [r9, #688]	@ 0x2b0
 802ac60:	9b01      	ldr	r3, [sp, #4]
 802ac62:	1b64      	subs	r4, r4, r5
 802ac64:	2f00      	cmp	r7, #0
 802ac66:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 802ac6a:	4639      	mov	r1, r7
 802ac6c:	f340 81a7 	ble.w	802afbe <bam_svc_process+0x4a2>
 802ac70:	f109 0620 	add.w	r6, r9, #32
 802ac74:	4620      	mov	r0, r4
 802ac76:	e8f0 2302 	ldrd	r2, r3, [r0], #8
 802ac7a:	3901      	subs	r1, #1
 802ac7c:	e9e6 2302 	strd	r2, r3, [r6, #8]!
 802ac80:	d1f9      	bne.n	802ac76 <bam_svc_process+0x15a>
 802ac82:	00ff      	lsls	r7, r7, #3
 802ac84:	443c      	add	r4, r7
 802ac86:	445f      	add	r7, fp
 802ac88:	07eb      	lsls	r3, r5, #31
 802ac8a:	bf44      	itt	mi
 802ac8c:	6823      	ldrmi	r3, [r4, #0]
 802ac8e:	603b      	strmi	r3, [r7, #0]
 802ac90:	9b00      	ldr	r3, [sp, #0]
 802ac92:	2b00      	cmp	r3, #0
 802ac94:	f000 809b 	beq.w	802adce <bam_svc_process+0x2b2>
 802ac98:	f8d8 3000 	ldr.w	r3, [r8]
 802ac9c:	2b02      	cmp	r3, #2
 802ac9e:	f000 817b 	beq.w	802af98 <bam_svc_process+0x47c>
 802aca2:	f04f 0200 	mov.w	r2, #0
 802aca6:	f8a9 22ba 	strh.w	r2, [r9, #698]	@ 0x2ba
 802acaa:	2200      	movs	r2, #0
 802acac:	9200      	str	r2, [sp, #0]
 802acae:	9a02      	ldr	r2, [sp, #8]
 802acb0:	3201      	adds	r2, #1
 802acb2:	429a      	cmp	r2, r3
 802acb4:	9202      	str	r2, [sp, #8]
 802acb6:	f280 8092 	bge.w	802adde <bam_svc_process+0x2c2>
 802acba:	f9b9 62b8 	ldrsh.w	r6, [r9, #696]	@ 0x2b8
 802acbe:	f9b9 32a8 	ldrsh.w	r3, [r9, #680]	@ 0x2a8
 802acc2:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802acc6:	9306      	str	r3, [sp, #24]
 802acc8:	2e01      	cmp	r6, #1
 802acca:	f47f af56 	bne.w	802ab7a <bam_svc_process+0x5e>
 802acce:	f1ba 0f00 	cmp.w	sl, #0
 802acd2:	f340 816d 	ble.w	802afb0 <bam_svc_process+0x494>
 802acd6:	2c00      	cmp	r4, #0
 802acd8:	f9b9 12aa 	ldrsh.w	r1, [r9, #682]	@ 0x2aa
 802acdc:	f340 816a 	ble.w	802afb4 <bam_svc_process+0x498>
 802ace0:	2200      	movs	r2, #0
 802ace2:	4617      	mov	r7, r2
 802ace4:	4613      	mov	r3, r2
 802ace6:	f8dd e004 	ldr.w	lr, [sp, #4]
 802acea:	f8dd c010 	ldr.w	ip, [sp, #16]
 802acee:	e007      	b.n	802ad00 <bam_svc_process+0x1e4>
 802acf0:	3301      	adds	r3, #1
 802acf2:	3701      	adds	r7, #1
 802acf4:	42bc      	cmp	r4, r7
 802acf6:	f84c 2b04 	str.w	r2, [ip], #4
 802acfa:	f10e 0e04 	add.w	lr, lr, #4
 802acfe:	d01f      	beq.n	802ad40 <bam_svc_process+0x224>
 802ad00:	428b      	cmp	r3, r1
 802ad02:	d001      	beq.n	802ad08 <bam_svc_process+0x1ec>
 802ad04:	2b00      	cmp	r3, #0
 802ad06:	d1f3      	bne.n	802acf0 <bam_svc_process+0x1d4>
 802ad08:	2901      	cmp	r1, #1
 802ad0a:	f340 8089 	ble.w	802ae20 <bam_svc_process+0x304>
 802ad0e:	2900      	cmp	r1, #0
 802ad10:	4670      	mov	r0, lr
 802ad12:	f340 814b 	ble.w	802afac <bam_svc_process+0x490>
 802ad16:	2300      	movs	r3, #0
 802ad18:	461a      	mov	r2, r3
 802ad1a:	f850 5b04 	ldr.w	r5, [r0], #4
 802ad1e:	3301      	adds	r3, #1
 802ad20:	428b      	cmp	r3, r1
 802ad22:	eb02 1225 	add.w	r2, r2, r5, asr #4
 802ad26:	d1f8      	bne.n	802ad1a <bam_svc_process+0x1fe>
 802ad28:	2a00      	cmp	r2, #0
 802ad2a:	f340 80b8 	ble.w	802ae9e <bam_svc_process+0x382>
 802ad2e:	3701      	adds	r7, #1
 802ad30:	42bc      	cmp	r4, r7
 802ad32:	f04f 0301 	mov.w	r3, #1
 802ad36:	f84c 2b04 	str.w	r2, [ip], #4
 802ad3a:	f10e 0e04 	add.w	lr, lr, #4
 802ad3e:	d1df      	bne.n	802ad00 <bam_svc_process+0x1e4>
 802ad40:	f8d9 300c 	ldr.w	r3, [r9, #12]
 802ad44:	f8d9 c010 	ldr.w	ip, [r9, #16]
 802ad48:	9305      	str	r3, [sp, #20]
 802ad4a:	f06f 4e00 	mvn.w	lr, #2147483648	@ 0x80000000
 802ad4e:	4677      	mov	r7, lr
 802ad50:	f1ba 0f00 	cmp.w	sl, #0
 802ad54:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802ad58:	ebc3 0e0e 	rsb	lr, r3, lr
 802ad5c:	ebcc 0707 	rsb	r7, ip, r7
 802ad60:	f340 812f 	ble.w	802afc2 <bam_svc_process+0x4a6>
 802ad64:	2c00      	cmp	r4, #0
 802ad66:	f8d9 2004 	ldr.w	r2, [r9, #4]
 802ad6a:	f77f af06 	ble.w	802ab7a <bam_svc_process+0x5e>
 802ad6e:	2000      	movs	r0, #0
 802ad70:	9607      	str	r6, [sp, #28]
 802ad72:	f8cd 8020 	str.w	r8, [sp, #32]
 802ad76:	4603      	mov	r3, r0
 802ad78:	9d03      	ldr	r5, [sp, #12]
 802ad7a:	9e04      	ldr	r6, [sp, #16]
 802ad7c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 802ad80:	e006      	b.n	802ad90 <bam_svc_process+0x274>
 802ad82:	3001      	adds	r0, #1
 802ad84:	42a0      	cmp	r0, r4
 802ad86:	f103 0301 	add.w	r3, r3, #1
 802ad8a:	f845 2b04 	str.w	r2, [r5], #4
 802ad8e:	d018      	beq.n	802adc2 <bam_svc_process+0x2a6>
 802ad90:	428b      	cmp	r3, r1
 802ad92:	d001      	beq.n	802ad98 <bam_svc_process+0x27c>
 802ad94:	2b00      	cmp	r3, #0
 802ad96:	d1f4      	bne.n	802ad82 <bam_svc_process+0x266>
 802ad98:	f856 3020 	ldr.w	r3, [r6, r0, lsl #2]
 802ad9c:	4293      	cmp	r3, r2
 802ad9e:	f8d9 2004 	ldr.w	r2, [r9, #4]
 802ada2:	db48      	blt.n	802ae36 <bam_svc_process+0x31a>
 802ada4:	fb58 f212 	smmulr	r2, r8, r2
 802ada8:	fb5e f313 	smmulr	r3, lr, r3
 802adac:	441a      	add	r2, r3
 802adae:	0052      	lsls	r2, r2, #1
 802adb0:	3001      	adds	r0, #1
 802adb2:	42a0      	cmp	r0, r4
 802adb4:	f8c9 2004 	str.w	r2, [r9, #4]
 802adb8:	f04f 0301 	mov.w	r3, #1
 802adbc:	f845 2b04 	str.w	r2, [r5], #4
 802adc0:	d1e6      	bne.n	802ad90 <bam_svc_process+0x274>
 802adc2:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802adc6:	9e07      	ldr	r6, [sp, #28]
 802adc8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802adcc:	e6d5      	b.n	802ab7a <bam_svc_process+0x5e>
 802adce:	9a02      	ldr	r2, [sp, #8]
 802add0:	f8d8 3000 	ldr.w	r3, [r8]
 802add4:	3201      	adds	r2, #1
 802add6:	429a      	cmp	r2, r3
 802add8:	9202      	str	r2, [sp, #8]
 802adda:	f6ff af6e 	blt.w	802acba <bam_svc_process+0x19e>
 802adde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ade0:	1058      	asrs	r0, r3, #1
 802ade2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802ade4:	2800      	cmp	r0, #0
 802ade6:	689e      	ldr	r6, [r3, #8]
 802ade8:	dd0f      	ble.n	802ae0a <bam_svc_process+0x2ee>
 802adea:	9a04      	ldr	r2, [sp, #16]
 802adec:	f1a6 0108 	sub.w	r1, r6, #8
 802adf0:	2300      	movs	r3, #0
 802adf2:	e8f2 4502 	ldrd	r4, r5, [r2], #8
 802adf6:	3301      	adds	r3, #1
 802adf8:	4283      	cmp	r3, r0
 802adfa:	e9e1 4502 	strd	r4, r5, [r1, #8]!
 802adfe:	d1f8      	bne.n	802adf2 <bam_svc_process+0x2d6>
 802ae00:	9a04      	ldr	r2, [sp, #16]
 802ae02:	00db      	lsls	r3, r3, #3
 802ae04:	441a      	add	r2, r3
 802ae06:	441e      	add	r6, r3
 802ae08:	920a      	str	r2, [sp, #40]	@ 0x28
 802ae0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ae0c:	f013 0001 	ands.w	r0, r3, #1
 802ae10:	d003      	beq.n	802ae1a <bam_svc_process+0x2fe>
 802ae12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ae14:	681b      	ldr	r3, [r3, #0]
 802ae16:	6033      	str	r3, [r6, #0]
 802ae18:	2000      	movs	r0, #0
 802ae1a:	b00d      	add	sp, #52	@ 0x34
 802ae1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ae20:	f8de 2000 	ldr.w	r2, [lr]
 802ae24:	2a00      	cmp	r2, #0
 802ae26:	dc82      	bgt.n	802ad2e <bam_svc_process+0x212>
 802ae28:	1052      	asrs	r2, r2, #1
 802ae2a:	2301      	movs	r3, #1
 802ae2c:	4252      	negs	r2, r2
 802ae2e:	f302 021e 	ssat	r2, #31, r2
 802ae32:	409a      	lsls	r2, r3
 802ae34:	e75d      	b.n	802acf2 <bam_svc_process+0x1d6>
 802ae36:	fb5c f212 	smmulr	r2, ip, r2
 802ae3a:	fb57 f313 	smmulr	r3, r7, r3
 802ae3e:	441a      	add	r2, r3
 802ae40:	0052      	lsls	r2, r2, #1
 802ae42:	e7b5      	b.n	802adb0 <bam_svc_process+0x294>
 802ae44:	f9b9 22a8 	ldrsh.w	r2, [r9, #680]	@ 0x2a8
 802ae48:	2a01      	cmp	r2, #1
 802ae4a:	f43f aecf 	beq.w	802abec <bam_svc_process+0xd0>
 802ae4e:	f9b9 5014 	ldrsh.w	r5, [r9, #20]
 802ae52:	2c00      	cmp	r4, #0
 802ae54:	ea4f 0285 	mov.w	r2, r5, lsl #2
 802ae58:	f1c2 0200 	rsb	r2, r2, #0
 802ae5c:	f77f aef4 	ble.w	802ac48 <bam_svc_process+0x12c>
 802ae60:	9901      	ldr	r1, [sp, #4]
 802ae62:	188e      	adds	r6, r1, r2
 802ae64:	9a04      	ldr	r2, [sp, #16]
 802ae66:	1f11      	subs	r1, r2, #4
 802ae68:	2200      	movs	r2, #0
 802ae6a:	e001      	b.n	802ae70 <bam_svc_process+0x354>
 802ae6c:	f8d9 32b0 	ldr.w	r3, [r9, #688]	@ 0x2b0
 802ae70:	42aa      	cmp	r2, r5
 802ae72:	bfb4      	ite	lt
 802ae74:	465f      	movlt	r7, fp
 802ae76:	4637      	movge	r7, r6
 802ae78:	eb0e 0003 	add.w	r0, lr, r3
 802ae7c:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 802ae80:	f8c9 02b0 	str.w	r0, [r9, #688]	@ 0x2b0
 802ae84:	fb53 f310 	smmulr	r3, r3, r0
 802ae88:	3201      	adds	r2, #1
 802ae8a:	019b      	lsls	r3, r3, #6
 802ae8c:	42a2      	cmp	r2, r4
 802ae8e:	f303 031e 	ssat	r3, #31, r3
 802ae92:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802ae96:	f841 3f04 	str.w	r3, [r1, #4]!
 802ae9a:	d1e7      	bne.n	802ae6c <bam_svc_process+0x350>
 802ae9c:	e6d2      	b.n	802ac44 <bam_svc_process+0x128>
 802ae9e:	1052      	asrs	r2, r2, #1
 802aea0:	4252      	negs	r2, r2
 802aea2:	2301      	movs	r3, #1
 802aea4:	f302 021e 	ssat	r2, #31, r2
 802aea8:	409a      	lsls	r2, r3
 802aeaa:	e722      	b.n	802acf2 <bam_svc_process+0x1d6>
 802aeac:	9a06      	ldr	r2, [sp, #24]
 802aeae:	2a01      	cmp	r2, #1
 802aeb0:	f47f ae8d 	bne.w	802abce <bam_svc_process+0xb2>
 802aeb4:	2e01      	cmp	r6, #1
 802aeb6:	f47f ae7d 	bne.w	802abb4 <bam_svc_process+0x98>
 802aeba:	2c00      	cmp	r4, #0
 802aebc:	f77f ae87 	ble.w	802abce <bam_svc_process+0xb2>
 802aec0:	2200      	movs	r2, #0
 802aec2:	131b      	asrs	r3, r3, #12
 802aec4:	9306      	str	r3, [sp, #24]
 802aec6:	f8cd 801c 	str.w	r8, [sp, #28]
 802aeca:	f9b9 e2aa 	ldrsh.w	lr, [r9, #682]	@ 0x2aa
 802aece:	9e03      	ldr	r6, [sp, #12]
 802aed0:	9700      	str	r7, [sp, #0]
 802aed2:	4615      	mov	r5, r2
 802aed4:	4613      	mov	r3, r2
 802aed6:	ea4f 3a27 	mov.w	sl, r7, asr #12
 802aeda:	4688      	mov	r8, r1
 802aedc:	e006      	b.n	802aeec <bam_svc_process+0x3d0>
 802aede:	3501      	adds	r5, #1
 802aee0:	42a5      	cmp	r5, r4
 802aee2:	f103 0301 	add.w	r3, r3, #1
 802aee6:	f846 2b04 	str.w	r2, [r6], #4
 802aeea:	d03a      	beq.n	802af62 <bam_svc_process+0x446>
 802aeec:	459e      	cmp	lr, r3
 802aeee:	d001      	beq.n	802aef4 <bam_svc_process+0x3d8>
 802aef0:	2b00      	cmp	r3, #0
 802aef2:	d1f4      	bne.n	802aede <bam_svc_process+0x3c2>
 802aef4:	6833      	ldr	r3, [r6, #0]
 802aef6:	4841      	ldr	r0, [pc, #260]	@ (802affc <bam_svc_process+0x4e0>)
 802aef8:	4f40      	ldr	r7, [pc, #256]	@ (802affc <bam_svc_process+0x4e0>)
 802aefa:	fab3 f183 	clz	r1, r3
 802aefe:	408b      	lsls	r3, r1
 802af00:	171a      	asrs	r2, r3, #28
 802af02:	f002 0204 	and.w	r2, r2, #4
 802af06:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 802af0a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 802af0e:	6847      	ldr	r7, [r0, #4]
 802af10:	fb33 7c12 	smlawt	ip, r3, r2, r7
 802af14:	6882      	ldr	r2, [r0, #8]
 802af16:	fb33 221c 	smlawt	r2, r3, ip, r2
 802af1a:	68c0      	ldr	r0, [r0, #12]
 802af1c:	fb33 0212 	smlawt	r2, r3, r2, r0
 802af20:	1352      	asrs	r2, r2, #13
 802af22:	0409      	lsls	r1, r1, #16
 802af24:	fa81 f1a2 	qsub	r1, r2, r1
 802af28:	ebca 0101 	rsb	r1, sl, r1
 802af2c:	2900      	cmp	r1, #0
 802af2e:	dd27      	ble.n	802af80 <bam_svc_process+0x464>
 802af30:	9b00      	ldr	r3, [sp, #0]
 802af32:	ebc3 3001 	rsb	r0, r3, r1, lsl #12
 802af36:	fb50 f018 	smmulr	r0, r0, r8
 802af3a:	12c0      	asrs	r0, r0, #11
 802af3c:	b9c8      	cbnz	r0, 802af72 <bam_svc_process+0x456>
 802af3e:	f06f 407e 	mvn.w	r0, #4261412864	@ 0xfe000000
 802af42:	f1be 0f01 	cmp.w	lr, #1
 802af46:	f105 0501 	add.w	r5, r5, #1
 802af4a:	bfc6      	itte	gt
 802af4c:	f8d9 22cc 	ldrgt.w	r2, [r9, #716]	@ 0x2cc
 802af50:	f8c9 02cc 	strgt.w	r0, [r9, #716]	@ 0x2cc
 802af54:	4602      	movle	r2, r0
 802af56:	42a5      	cmp	r5, r4
 802af58:	f04f 0301 	mov.w	r3, #1
 802af5c:	f846 2b04 	str.w	r2, [r6], #4
 802af60:	d1c4      	bne.n	802aeec <bam_svc_process+0x3d0>
 802af62:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802af66:	f9b9 32ba 	ldrsh.w	r3, [r9, #698]	@ 0x2ba
 802af6a:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802af6e:	9300      	str	r3, [sp, #0]
 802af70:	e62d      	b.n	802abce <bam_svc_process+0xb2>
 802af72:	4240      	negs	r0, r0
 802af74:	f7f8 fdc6 	bl	8023b04 <fix32_ln22lin_q3_s2>
 802af78:	f9b9 e2aa 	ldrsh.w	lr, [r9, #682]	@ 0x2aa
 802af7c:	1180      	asrs	r0, r0, #6
 802af7e:	e7e0      	b.n	802af42 <bam_svc_process+0x426>
 802af80:	9b06      	ldr	r3, [sp, #24]
 802af82:	1ac9      	subs	r1, r1, r3
 802af84:	2900      	cmp	r1, #0
 802af86:	ddda      	ble.n	802af3e <bam_svc_process+0x422>
 802af88:	0309      	lsls	r1, r1, #12
 802af8a:	fb51 f111 	smmulr	r1, r1, r1
 802af8e:	9b05      	ldr	r3, [sp, #20]
 802af90:	fb51 f013 	smmulr	r0, r1, r3
 802af94:	1140      	asrs	r0, r0, #5
 802af96:	e7d1      	b.n	802af3c <bam_svc_process+0x420>
 802af98:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 802af9c:	2a00      	cmp	r2, #0
 802af9e:	f47f ae80 	bne.w	802aca2 <bam_svc_process+0x186>
 802afa2:	2201      	movs	r2, #1
 802afa4:	f8a9 22ba 	strh.w	r2, [r9, #698]	@ 0x2ba
 802afa8:	9200      	str	r2, [sp, #0]
 802afaa:	e680      	b.n	802acae <bam_svc_process+0x192>
 802afac:	2200      	movs	r2, #0
 802afae:	e778      	b.n	802aea2 <bam_svc_process+0x386>
 802afb0:	2b01      	cmp	r3, #1
 802afb2:	d00b      	beq.n	802afcc <bam_svc_process+0x4b0>
 802afb4:	9b00      	ldr	r3, [sp, #0]
 802afb6:	2b00      	cmp	r3, #0
 802afb8:	f47f adeb 	bne.w	802ab92 <bam_svc_process+0x76>
 802afbc:	e607      	b.n	802abce <bam_svc_process+0xb2>
 802afbe:	465f      	mov	r7, fp
 802afc0:	e662      	b.n	802ac88 <bam_svc_process+0x16c>
 802afc2:	9b06      	ldr	r3, [sp, #24]
 802afc4:	2b01      	cmp	r3, #1
 802afc6:	f43f aecd 	beq.w	802ad64 <bam_svc_process+0x248>
 802afca:	e5d6      	b.n	802ab7a <bam_svc_process+0x5e>
 802afcc:	2c00      	cmp	r4, #0
 802afce:	f9b9 12aa 	ldrsh.w	r1, [r9, #682]	@ 0x2aa
 802afd2:	f73f ae85 	bgt.w	802ace0 <bam_svc_process+0x1c4>
 802afd6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 802afda:	f8d9 c010 	ldr.w	ip, [r9, #16]
 802afde:	9305      	str	r3, [sp, #20]
 802afe0:	f06f 4e00 	mvn.w	lr, #2147483648	@ 0x80000000
 802afe4:	4677      	mov	r7, lr
 802afe6:	ebcc 0707 	rsb	r7, ip, r7
 802afea:	ebc3 0e0e 	rsb	lr, r3, lr
 802afee:	e6b9      	b.n	802ad64 <bam_svc_process+0x248>
 802aff0:	f06f 0004 	mvn.w	r0, #4
 802aff4:	b00d      	add	sp, #52	@ 0x34
 802aff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802affa:	bf00      	nop
 802affc:	080370a0 	.word	0x080370a0

0802b000 <biquad_cascade_df1_init_q31>:
 802b000:	6001      	str	r1, [r0, #0]
 802b002:	6082      	str	r2, [r0, #8]
 802b004:	6043      	str	r3, [r0, #4]
 802b006:	4770      	bx	lr

0802b008 <ER_Gen>:
 802b008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b00c:	468a      	mov	sl, r1
 802b00e:	6809      	ldr	r1, [r1, #0]
 802b010:	b083      	sub	sp, #12
 802b012:	eb01 0583 	add.w	r5, r1, r3, lsl #2
 802b016:	f502 6c28 	add.w	ip, r2, #2688	@ 0xa80
 802b01a:	45ac      	cmp	ip, r5
 802b01c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802b01e:	d346      	bcc.n	802b0ae <ER_Gen+0xa6>
 802b020:	2b00      	cmp	r3, #0
 802b022:	bfb8      	it	lt
 802b024:	3303      	addlt	r3, #3
 802b026:	109b      	asrs	r3, r3, #2
 802b028:	2b00      	cmp	r3, #0
 802b02a:	dd38      	ble.n	802b09e <ER_Gen+0x96>
 802b02c:	3010      	adds	r0, #16
 802b02e:	f101 0510 	add.w	r5, r1, #16
 802b032:	f04f 0e00 	mov.w	lr, #0
 802b036:	468b      	mov	fp, r1
 802b038:	f855 7c10 	ldr.w	r7, [r5, #-16]
 802b03c:	f850 6c10 	ldr.w	r6, [r0, #-16]
 802b040:	f850 9c0c 	ldr.w	r9, [r0, #-12]
 802b044:	f850 8c08 	ldr.w	r8, [r0, #-8]
 802b048:	f850 1c04 	ldr.w	r1, [r0, #-4]
 802b04c:	107f      	asrs	r7, r7, #1
 802b04e:	fb54 7616 	smmlar	r6, r4, r6, r7
 802b052:	f855 7c0c 	ldr.w	r7, [r5, #-12]
 802b056:	0076      	lsls	r6, r6, #1
 802b058:	f845 6c10 	str.w	r6, [r5, #-16]
 802b05c:	107f      	asrs	r7, r7, #1
 802b05e:	fb54 7719 	smmlar	r7, r4, r9, r7
 802b062:	f855 6c08 	ldr.w	r6, [r5, #-8]
 802b066:	007f      	lsls	r7, r7, #1
 802b068:	f845 7c0c 	str.w	r7, [r5, #-12]
 802b06c:	1076      	asrs	r6, r6, #1
 802b06e:	fb54 6818 	smmlar	r8, r4, r8, r6
 802b072:	f855 6c04 	ldr.w	r6, [r5, #-4]
 802b076:	ea4f 0748 	mov.w	r7, r8, lsl #1
 802b07a:	f845 7c08 	str.w	r7, [r5, #-8]
 802b07e:	1076      	asrs	r6, r6, #1
 802b080:	fb54 6111 	smmlar	r1, r4, r1, r6
 802b084:	f10e 0e01 	add.w	lr, lr, #1
 802b088:	0049      	lsls	r1, r1, #1
 802b08a:	459e      	cmp	lr, r3
 802b08c:	f845 1c04 	str.w	r1, [r5, #-4]
 802b090:	f100 0010 	add.w	r0, r0, #16
 802b094:	f105 0510 	add.w	r5, r5, #16
 802b098:	d1ce      	bne.n	802b038 <ER_Gen+0x30>
 802b09a:	eb0b 110e 	add.w	r1, fp, lr, lsl #4
 802b09e:	4561      	cmp	r1, ip
 802b0a0:	bf08      	it	eq
 802b0a2:	4611      	moveq	r1, r2
 802b0a4:	f8ca 1000 	str.w	r1, [sl]
 802b0a8:	b003      	add	sp, #12
 802b0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b0ae:	ebc1 050c 	rsb	r5, r1, ip
 802b0b2:	10ad      	asrs	r5, r5, #2
 802b0b4:	2d00      	cmp	r5, #0
 802b0b6:	9500      	str	r5, [sp, #0]
 802b0b8:	bfb8      	it	lt
 802b0ba:	3503      	addlt	r5, #3
 802b0bc:	10ad      	asrs	r5, r5, #2
 802b0be:	2d00      	cmp	r5, #0
 802b0c0:	dd39      	ble.n	802b136 <ER_Gen+0x12e>
 802b0c2:	3501      	adds	r5, #1
 802b0c4:	012d      	lsls	r5, r5, #4
 802b0c6:	9501      	str	r5, [sp, #4]
 802b0c8:	3110      	adds	r1, #16
 802b0ca:	eb00 0805 	add.w	r8, r0, r5
 802b0ce:	f100 0e10 	add.w	lr, r0, #16
 802b0d2:	46e3      	mov	fp, ip
 802b0d4:	f851 7c10 	ldr.w	r7, [r1, #-16]
 802b0d8:	f85e 5c04 	ldr.w	r5, [lr, #-4]
 802b0dc:	f1ae 0610 	sub.w	r6, lr, #16
 802b0e0:	e896 1240 	ldmia.w	r6, {r6, r9, ip}
 802b0e4:	107f      	asrs	r7, r7, #1
 802b0e6:	fb54 7616 	smmlar	r6, r4, r6, r7
 802b0ea:	f851 7c0c 	ldr.w	r7, [r1, #-12]
 802b0ee:	0076      	lsls	r6, r6, #1
 802b0f0:	f841 6c10 	str.w	r6, [r1, #-16]
 802b0f4:	107f      	asrs	r7, r7, #1
 802b0f6:	fb54 7719 	smmlar	r7, r4, r9, r7
 802b0fa:	f851 6c08 	ldr.w	r6, [r1, #-8]
 802b0fe:	007f      	lsls	r7, r7, #1
 802b100:	f841 7c0c 	str.w	r7, [r1, #-12]
 802b104:	1076      	asrs	r6, r6, #1
 802b106:	fb54 6c1c 	smmlar	ip, r4, ip, r6
 802b10a:	f851 6c04 	ldr.w	r6, [r1, #-4]
 802b10e:	ea4f 074c 	mov.w	r7, ip, lsl #1
 802b112:	f841 7c08 	str.w	r7, [r1, #-8]
 802b116:	1076      	asrs	r6, r6, #1
 802b118:	fb54 6515 	smmlar	r5, r4, r5, r6
 802b11c:	f10e 0e10 	add.w	lr, lr, #16
 802b120:	006d      	lsls	r5, r5, #1
 802b122:	45c6      	cmp	lr, r8
 802b124:	f841 5c04 	str.w	r5, [r1, #-4]
 802b128:	f101 0110 	add.w	r1, r1, #16
 802b12c:	d1d2      	bne.n	802b0d4 <ER_Gen+0xcc>
 802b12e:	9901      	ldr	r1, [sp, #4]
 802b130:	3910      	subs	r1, #16
 802b132:	46dc      	mov	ip, fp
 802b134:	4408      	add	r0, r1
 802b136:	9900      	ldr	r1, [sp, #0]
 802b138:	1a5b      	subs	r3, r3, r1
 802b13a:	bf48      	it	mi
 802b13c:	3303      	addmi	r3, #3
 802b13e:	109b      	asrs	r3, r3, #2
 802b140:	2b00      	cmp	r3, #0
 802b142:	dd37      	ble.n	802b1b4 <ER_Gen+0x1ac>
 802b144:	3010      	adds	r0, #16
 802b146:	f102 0510 	add.w	r5, r2, #16
 802b14a:	2100      	movs	r1, #0
 802b14c:	4693      	mov	fp, r2
 802b14e:	f855 2c10 	ldr.w	r2, [r5, #-16]
 802b152:	f850 6c04 	ldr.w	r6, [r0, #-4]
 802b156:	f1a0 0710 	sub.w	r7, r0, #16
 802b15a:	e897 4180 	ldmia.w	r7, {r7, r8, lr}
 802b15e:	ea4f 0962 	mov.w	r9, r2, asr #1
 802b162:	fb54 9717 	smmlar	r7, r4, r7, r9
 802b166:	f855 2c0c 	ldr.w	r2, [r5, #-12]
 802b16a:	007f      	lsls	r7, r7, #1
 802b16c:	f845 7c10 	str.w	r7, [r5, #-16]
 802b170:	1057      	asrs	r7, r2, #1
 802b172:	fb54 7718 	smmlar	r7, r4, r8, r7
 802b176:	f855 2c08 	ldr.w	r2, [r5, #-8]
 802b17a:	007f      	lsls	r7, r7, #1
 802b17c:	f845 7c0c 	str.w	r7, [r5, #-12]
 802b180:	1057      	asrs	r7, r2, #1
 802b182:	fb54 7e1e 	smmlar	lr, r4, lr, r7
 802b186:	f855 2c04 	ldr.w	r2, [r5, #-4]
 802b18a:	ea4f 074e 	mov.w	r7, lr, lsl #1
 802b18e:	f845 7c08 	str.w	r7, [r5, #-8]
 802b192:	1057      	asrs	r7, r2, #1
 802b194:	fb54 7616 	smmlar	r6, r4, r6, r7
 802b198:	3101      	adds	r1, #1
 802b19a:	0076      	lsls	r6, r6, #1
 802b19c:	4299      	cmp	r1, r3
 802b19e:	f845 6c04 	str.w	r6, [r5, #-4]
 802b1a2:	f100 0010 	add.w	r0, r0, #16
 802b1a6:	f105 0510 	add.w	r5, r5, #16
 802b1aa:	d1d0      	bne.n	802b14e <ER_Gen+0x146>
 802b1ac:	465a      	mov	r2, fp
 802b1ae:	eb0b 1101 	add.w	r1, fp, r1, lsl #4
 802b1b2:	e774      	b.n	802b09e <ER_Gen+0x96>
 802b1b4:	4611      	mov	r1, r2
 802b1b6:	e772      	b.n	802b09e <ER_Gen+0x96>

0802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>:
 802b1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b1bc:	b08d      	sub	sp, #52	@ 0x34
 802b1be:	3310      	adds	r3, #16
 802b1c0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802b1c2:	9304      	str	r3, [sp, #16]
 802b1c4:	10a5      	asrs	r5, r4, #2
 802b1c6:	4616      	mov	r6, r2
 802b1c8:	f004 0303 	and.w	r3, r4, #3
 802b1cc:	9508      	str	r5, [sp, #32]
 802b1ce:	9309      	str	r3, [sp, #36]	@ 0x24
 802b1d0:	012d      	lsls	r5, r5, #4
 802b1d2:	460b      	mov	r3, r1
 802b1d4:	f856 2b1c 	ldr.w	r2, [r6], #28
 802b1d8:	9107      	str	r1, [sp, #28]
 802b1da:	442b      	add	r3, r5
 802b1dc:	950a      	str	r5, [sp, #40]	@ 0x28
 802b1de:	9206      	str	r2, [sp, #24]
 802b1e0:	9605      	str	r6, [sp, #20]
 802b1e2:	9003      	str	r0, [sp, #12]
 802b1e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 802b1e6:	9905      	ldr	r1, [sp, #20]
 802b1e8:	9d04      	ldr	r5, [sp, #16]
 802b1ea:	f851 2c18 	ldr.w	r2, [r1, #-24]
 802b1ee:	f851 bc14 	ldr.w	fp, [r1, #-20]
 802b1f2:	f851 7c10 	ldr.w	r7, [r1, #-16]
 802b1f6:	f851 ec0c 	ldr.w	lr, [r1, #-12]
 802b1fa:	f851 cc08 	ldr.w	ip, [r1, #-8]
 802b1fe:	f851 8c04 	ldr.w	r8, [r1, #-4]
 802b202:	f855 0c10 	ldr.w	r0, [r5, #-16]
 802b206:	f855 1c0c 	ldr.w	r1, [r5, #-12]
 802b20a:	f102 0901 	add.w	r9, r2, #1
 802b20e:	9a08      	ldr	r2, [sp, #32]
 802b210:	e915 0018 	ldmdb	r5, {r3, r4}
 802b214:	2a00      	cmp	r2, #0
 802b216:	f000 80b0 	beq.w	802b37a <biquad_df1_cascade_mono_compute_hpv_q31+0x1c2>
 802b21a:	9d03      	ldr	r5, [sp, #12]
 802b21c:	9201      	str	r2, [sp, #4]
 802b21e:	f105 0610 	add.w	r6, r5, #16
 802b222:	9d07      	ldr	r5, [sp, #28]
 802b224:	46ca      	mov	sl, r9
 802b226:	3510      	adds	r5, #16
 802b228:	f856 2c10 	ldr.w	r2, [r6, #-16]
 802b22c:	ea4f 09a2 	mov.w	r9, r2, asr #2
 802b230:	fb57 f210 	smmulr	r2, r7, r0
 802b234:	fb5b 2219 	smmlar	r2, fp, r9, r2
 802b238:	fb5e 2111 	smmlar	r1, lr, r1, r2
 802b23c:	fb5c 1113 	smmlar	r1, ip, r3, r1
 802b240:	fb58 1414 	smmlar	r4, r8, r4, r1
 802b244:	f856 2c0c 	ldr.w	r2, [r6, #-12]
 802b248:	fa04 f40a 	lsl.w	r4, r4, sl
 802b24c:	0061      	lsls	r1, r4, #1
 802b24e:	f301 011e 	ssat	r1, #31, r1
 802b252:	0049      	lsls	r1, r1, #1
 802b254:	f845 1c10 	str.w	r1, [r5, #-16]
 802b258:	1092      	asrs	r2, r2, #2
 802b25a:	fb5b f112 	smmulr	r1, fp, r2
 802b25e:	fb57 1119 	smmlar	r1, r7, r9, r1
 802b262:	fb5e 1010 	smmlar	r0, lr, r0, r1
 802b266:	fb5c 0014 	smmlar	r0, ip, r4, r0
 802b26a:	fb58 0313 	smmlar	r3, r8, r3, r0
 802b26e:	f856 1c08 	ldr.w	r1, [r6, #-8]
 802b272:	fa03 f30a 	lsl.w	r3, r3, sl
 802b276:	0058      	lsls	r0, r3, #1
 802b278:	f300 001e 	ssat	r0, #31, r0
 802b27c:	0040      	lsls	r0, r0, #1
 802b27e:	f845 0c0c 	str.w	r0, [r5, #-12]
 802b282:	1089      	asrs	r1, r1, #2
 802b284:	fb5b f011 	smmulr	r0, fp, r1
 802b288:	fb57 0012 	smmlar	r0, r7, r2, r0
 802b28c:	fb5e 0919 	smmlar	r9, lr, r9, r0
 802b290:	fb5c 9913 	smmlar	r9, ip, r3, r9
 802b294:	fb58 9414 	smmlar	r4, r8, r4, r9
 802b298:	f856 9c04 	ldr.w	r9, [r6, #-4]
 802b29c:	fa04 f40a 	lsl.w	r4, r4, sl
 802b2a0:	0060      	lsls	r0, r4, #1
 802b2a2:	f300 001e 	ssat	r0, #31, r0
 802b2a6:	0040      	lsls	r0, r0, #1
 802b2a8:	f845 0c08 	str.w	r0, [r5, #-8]
 802b2ac:	ea4f 00a9 	mov.w	r0, r9, asr #2
 802b2b0:	fb5b f910 	smmulr	r9, fp, r0
 802b2b4:	fb57 9911 	smmlar	r9, r7, r1, r9
 802b2b8:	fb5e 9212 	smmlar	r2, lr, r2, r9
 802b2bc:	fb5c 2214 	smmlar	r2, ip, r4, r2
 802b2c0:	fb58 2313 	smmlar	r3, r8, r3, r2
 802b2c4:	fa03 f30a 	lsl.w	r3, r3, sl
 802b2c8:	005a      	lsls	r2, r3, #1
 802b2ca:	f302 021e 	ssat	r2, #31, r2
 802b2ce:	0052      	lsls	r2, r2, #1
 802b2d0:	f845 2c04 	str.w	r2, [r5, #-4]
 802b2d4:	9a01      	ldr	r2, [sp, #4]
 802b2d6:	3a01      	subs	r2, #1
 802b2d8:	f106 0610 	add.w	r6, r6, #16
 802b2dc:	f105 0510 	add.w	r5, r5, #16
 802b2e0:	9201      	str	r2, [sp, #4]
 802b2e2:	d1a1      	bne.n	802b228 <biquad_df1_cascade_mono_compute_hpv_q31+0x70>
 802b2e4:	9a03      	ldr	r2, [sp, #12]
 802b2e6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802b2e8:	46d1      	mov	r9, sl
 802b2ea:	442a      	add	r2, r5
 802b2ec:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 802b2f0:	9203      	str	r2, [sp, #12]
 802b2f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b2f4:	2a00      	cmp	r2, #0
 802b2f6:	d03b      	beq.n	802b370 <biquad_df1_cascade_mono_compute_hpv_q31+0x1b8>
 802b2f8:	9702      	str	r7, [sp, #8]
 802b2fa:	9201      	str	r2, [sp, #4]
 802b2fc:	9f03      	ldr	r7, [sp, #12]
 802b2fe:	e001      	b.n	802b304 <biquad_df1_cascade_mono_compute_hpv_q31+0x14c>
 802b300:	4613      	mov	r3, r2
 802b302:	4628      	mov	r0, r5
 802b304:	f857 5b04 	ldr.w	r5, [r7], #4
 802b308:	10ad      	asrs	r5, r5, #2
 802b30a:	fb5b f215 	smmulr	r2, fp, r5
 802b30e:	9e02      	ldr	r6, [sp, #8]
 802b310:	fb56 2210 	smmlar	r2, r6, r0, r2
 802b314:	fb5e 2211 	smmlar	r2, lr, r1, r2
 802b318:	fb5c 2213 	smmlar	r2, ip, r3, r2
 802b31c:	fb58 2214 	smmlar	r2, r8, r4, r2
 802b320:	9e01      	ldr	r6, [sp, #4]
 802b322:	fa02 f209 	lsl.w	r2, r2, r9
 802b326:	0051      	lsls	r1, r2, #1
 802b328:	3e01      	subs	r6, #1
 802b32a:	f301 011e 	ssat	r1, #31, r1
 802b32e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802b332:	f84a 1b04 	str.w	r1, [sl], #4
 802b336:	461c      	mov	r4, r3
 802b338:	4601      	mov	r1, r0
 802b33a:	9601      	str	r6, [sp, #4]
 802b33c:	d1e0      	bne.n	802b300 <biquad_df1_cascade_mono_compute_hpv_q31+0x148>
 802b33e:	9c04      	ldr	r4, [sp, #16]
 802b340:	f844 3c04 	str.w	r3, [r4, #-4]
 802b344:	9b05      	ldr	r3, [sp, #20]
 802b346:	f844 5c10 	str.w	r5, [r4, #-16]
 802b34a:	3318      	adds	r3, #24
 802b34c:	9305      	str	r3, [sp, #20]
 802b34e:	f104 0310 	add.w	r3, r4, #16
 802b352:	9304      	str	r3, [sp, #16]
 802b354:	9b07      	ldr	r3, [sp, #28]
 802b356:	9303      	str	r3, [sp, #12]
 802b358:	9b06      	ldr	r3, [sp, #24]
 802b35a:	f844 0c0c 	str.w	r0, [r4, #-12]
 802b35e:	3b01      	subs	r3, #1
 802b360:	f844 2c08 	str.w	r2, [r4, #-8]
 802b364:	9306      	str	r3, [sp, #24]
 802b366:	f47f af3e 	bne.w	802b1e6 <biquad_df1_cascade_mono_compute_hpv_q31+0x2e>
 802b36a:	b00d      	add	sp, #52	@ 0x34
 802b36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b370:	461a      	mov	r2, r3
 802b372:	4605      	mov	r5, r0
 802b374:	4623      	mov	r3, r4
 802b376:	4608      	mov	r0, r1
 802b378:	e7e1      	b.n	802b33e <biquad_df1_cascade_mono_compute_hpv_q31+0x186>
 802b37a:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802b37e:	e7b8      	b.n	802b2f2 <biquad_df1_cascade_mono_compute_hpv_q31+0x13a>

0802b380 <HRTF_HT_FilterProcess>:
 802b380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b384:	b087      	sub	sp, #28
 802b386:	ea4f 0b82 	mov.w	fp, r2, lsl #2
 802b38a:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
 802b38e:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 802b392:	f8da 4000 	ldr.w	r4, [sl]
 802b396:	9303      	str	r3, [sp, #12]
 802b398:	4615      	mov	r5, r2
 802b39a:	f501 6c28 	add.w	ip, r1, #2688	@ 0xa80
 802b39e:	eb00 020b 	add.w	r2, r0, fp
 802b3a2:	4594      	cmp	ip, r2
 802b3a4:	f504 6640 	add.w	r6, r4, #3072	@ 0xc00
 802b3a8:	f0c0 8108 	bcc.w	802b5bc <HRTF_HT_FilterProcess+0x23c>
 802b3ac:	2d00      	cmp	r5, #0
 802b3ae:	46ae      	mov	lr, r5
 802b3b0:	bfb8      	it	lt
 802b3b2:	f105 0e03 	addlt.w	lr, r5, #3
 802b3b6:	ea4f 0eae 	mov.w	lr, lr, asr #2
 802b3ba:	f1be 0f00 	cmp.w	lr, #0
 802b3be:	dd14      	ble.n	802b3ea <HRTF_HT_FilterProcess+0x6a>
 802b3c0:	3010      	adds	r0, #16
 802b3c2:	f504 6141 	add.w	r1, r4, #3088	@ 0xc10
 802b3c6:	2700      	movs	r7, #0
 802b3c8:	46cc      	mov	ip, r9
 802b3ca:	e950 2304 	ldrd	r2, r3, [r0, #-16]
 802b3ce:	e950 8902 	ldrd	r8, r9, [r0, #-8]
 802b3d2:	3701      	adds	r7, #1
 802b3d4:	4577      	cmp	r7, lr
 802b3d6:	e941 2304 	strd	r2, r3, [r1, #-16]
 802b3da:	e941 8902 	strd	r8, r9, [r1, #-8]
 802b3de:	f100 0010 	add.w	r0, r0, #16
 802b3e2:	f101 0110 	add.w	r1, r1, #16
 802b3e6:	d1f0      	bne.n	802b3ca <HRTF_HT_FilterProcess+0x4a>
 802b3e8:	46e1      	mov	r9, ip
 802b3ea:	9b03      	ldr	r3, [sp, #12]
 802b3ec:	2b00      	cmp	r3, #0
 802b3ee:	f040 809c 	bne.w	802b52a <HRTF_HT_FilterProcess+0x1aa>
 802b3f2:	4aa0      	ldr	r2, [pc, #640]	@ (802b674 <HRTF_HT_FilterProcess+0x2f4>)
 802b3f4:	f8d4 8f00 	ldr.w	r8, [r4, #3840]	@ 0xf00
 802b3f8:	499f      	ldr	r1, [pc, #636]	@ (802b678 <HRTF_HT_FilterProcess+0x2f8>)
 802b3fa:	fb82 3209 	smull	r3, r2, r2, r9
 802b3fe:	ea4f 73e9 	mov.w	r3, r9, asr #31
 802b402:	ebc3 0262 	rsb	r2, r3, r2, asr #1
 802b406:	b212      	sxth	r2, r2
 802b408:	f10a 0a04 	add.w	sl, sl, #4
 802b40c:	eb08 0388 	add.w	r3, r8, r8, lsl #2
 802b410:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 802b414:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b418:	f503 43a1 	add.w	r3, r3, #20608	@ 0x5080
 802b41c:	428d      	cmp	r5, r1
 802b41e:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 802b422:	f504 6758 	add.w	r7, r4, #3456	@ 0xd80
 802b426:	f2c0 8092 	blt.w	802b54e <HRTF_HT_FilterProcess+0x1ce>
 802b42a:	2900      	cmp	r1, #0
 802b42c:	f340 811f 	ble.w	802b66e <HRTF_HT_FilterProcess+0x2ee>
 802b430:	9a03      	ldr	r2, [sp, #12]
 802b432:	f604 5e7c 	addw	lr, r4, #3452	@ 0xd7c
 802b436:	4618      	mov	r0, r3
 802b438:	469c      	mov	ip, r3
 802b43a:	3201      	adds	r2, #1
 802b43c:	f850 3b04 	ldr.w	r3, [r0], #4
 802b440:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b444:	4291      	cmp	r1, r2
 802b446:	d1f8      	bne.n	802b43a <HRTF_HT_FilterProcess+0xba>
 802b448:	ebc1 0b05 	rsb	fp, r1, r5
 802b44c:	f1bb 0f00 	cmp.w	fp, #0
 802b450:	4663      	mov	r3, ip
 802b452:	eb07 0e81 	add.w	lr, r7, r1, lsl #2
 802b456:	bfd8      	it	le
 802b458:	4632      	movle	r2, r6
 802b45a:	dd0e      	ble.n	802b47a <HRTF_HT_FilterProcess+0xfa>
 802b45c:	f1ae 0e04 	sub.w	lr, lr, #4
 802b460:	4632      	mov	r2, r6
 802b462:	2000      	movs	r0, #0
 802b464:	469c      	mov	ip, r3
 802b466:	3001      	adds	r0, #1
 802b468:	f852 3b04 	ldr.w	r3, [r2], #4
 802b46c:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b470:	4558      	cmp	r0, fp
 802b472:	dbf8      	blt.n	802b466 <HRTF_HT_FilterProcess+0xe6>
 802b474:	2900      	cmp	r1, #0
 802b476:	4663      	mov	r3, ip
 802b478:	dd09      	ble.n	802b48e <HRTF_HT_FilterProcess+0x10e>
 802b47a:	3b04      	subs	r3, #4
 802b47c:	2000      	movs	r0, #0
 802b47e:	468e      	mov	lr, r1
 802b480:	3001      	adds	r0, #1
 802b482:	f852 1b04 	ldr.w	r1, [r2], #4
 802b486:	f843 1f04 	str.w	r1, [r3, #4]!
 802b48a:	4586      	cmp	lr, r0
 802b48c:	dcf8      	bgt.n	802b480 <HRTF_HT_FilterProcess+0x100>
 802b48e:	9b03      	ldr	r3, [sp, #12]
 802b490:	2b00      	cmp	r3, #0
 802b492:	f040 8087 	bne.w	802b5a4 <HRTF_HT_FilterProcess+0x224>
 802b496:	4b77      	ldr	r3, [pc, #476]	@ (802b674 <HRTF_HT_FilterProcess+0x2f4>)
 802b498:	4978      	ldr	r1, [pc, #480]	@ (802b67c <HRTF_HT_FilterProcess+0x2fc>)
 802b49a:	9500      	str	r5, [sp, #0]
 802b49c:	fb83 3b09 	smull	r3, fp, r3, r9
 802b4a0:	ea4f 73e9 	mov.w	r3, r9, asr #31
 802b4a4:	ebc3 0b6b 	rsb	fp, r3, fp, asr #1
 802b4a8:	fa0f f38b 	sxth.w	r3, fp
 802b4ac:	2234      	movs	r2, #52	@ 0x34
 802b4ae:	fb02 fb03 	mul.w	fp, r2, r3
 802b4b2:	f508 732c 	add.w	r3, r8, #688	@ 0x2b0
 802b4b6:	eb01 020b 	add.w	r2, r1, fp
 802b4ba:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b4be:	4631      	mov	r1, r6
 802b4c0:	4630      	mov	r0, r6
 802b4c2:	f7ff fe79 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b4c6:	4a6e      	ldr	r2, [pc, #440]	@ (802b680 <HRTF_HT_FilterProcess+0x300>)
 802b4c8:	445a      	add	r2, fp
 802b4ca:	f208 23a9 	addw	r3, r8, #681	@ 0x2a9
 802b4ce:	4638      	mov	r0, r7
 802b4d0:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b4d4:	9500      	str	r5, [sp, #0]
 802b4d6:	4639      	mov	r1, r7
 802b4d8:	f7ff fe6e 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b4dc:	f504 509c 	add.w	r0, r4, #4992	@ 0x1380
 802b4e0:	f1b9 0fb3 	cmp.w	r9, #179	@ 0xb3
 802b4e4:	f504 5490 	add.w	r4, r4, #4608	@ 0x1200
 802b4e8:	f100 0004 	add.w	r0, r0, #4
 802b4ec:	f104 0404 	add.w	r4, r4, #4
 802b4f0:	dc02      	bgt.n	802b4f8 <HRTF_HT_FilterProcess+0x178>
 802b4f2:	463b      	mov	r3, r7
 802b4f4:	4637      	mov	r7, r6
 802b4f6:	461e      	mov	r6, r3
 802b4f8:	2d00      	cmp	r5, #0
 802b4fa:	dd13      	ble.n	802b524 <HRTF_HT_FilterProcess+0x1a4>
 802b4fc:	f04f 0e00 	mov.w	lr, #0
 802b500:	6803      	ldr	r3, [r0, #0]
 802b502:	f857 2b04 	ldr.w	r2, [r7], #4
 802b506:	fa82 f283 	qadd	r2, r3, r2
 802b50a:	6823      	ldr	r3, [r4, #0]
 802b50c:	f856 1b04 	ldr.w	r1, [r6], #4
 802b510:	fa81 f383 	qadd	r3, r3, r1
 802b514:	f10e 0e01 	add.w	lr, lr, #1
 802b518:	4575      	cmp	r5, lr
 802b51a:	f840 2b04 	str.w	r2, [r0], #4
 802b51e:	f844 3b04 	str.w	r3, [r4], #4
 802b522:	d1ed      	bne.n	802b500 <HRTF_HT_FilterProcess+0x180>
 802b524:	b007      	add	sp, #28
 802b526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b52a:	f8d4 8f00 	ldr.w	r8, [r4, #3840]	@ 0xf00
 802b52e:	f10a 0a04 	add.w	sl, sl, #4
 802b532:	eb08 0388 	add.w	r3, r8, r8, lsl #2
 802b536:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b53a:	f503 43a1 	add.w	r3, r3, #20608	@ 0x5080
 802b53e:	2d00      	cmp	r5, #0
 802b540:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 802b544:	f504 6758 	add.w	r7, r4, #3456	@ 0xd80
 802b548:	f280 8088 	bge.w	802b65c <HRTF_HT_FilterProcess+0x2dc>
 802b54c:	2100      	movs	r1, #0
 802b54e:	2d00      	cmp	r5, #0
 802b550:	dd7e      	ble.n	802b650 <HRTF_HT_FilterProcess+0x2d0>
 802b552:	f1a7 0e04 	sub.w	lr, r7, #4
 802b556:	4618      	mov	r0, r3
 802b558:	2200      	movs	r2, #0
 802b55a:	469c      	mov	ip, r3
 802b55c:	3201      	adds	r2, #1
 802b55e:	f850 3b04 	ldr.w	r3, [r0], #4
 802b562:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b566:	4295      	cmp	r5, r2
 802b568:	d1f8      	bne.n	802b55c <HRTF_HT_FilterProcess+0x1dc>
 802b56a:	1b49      	subs	r1, r1, r5
 802b56c:	2900      	cmp	r1, #0
 802b56e:	4663      	mov	r3, ip
 802b570:	44e3      	add	fp, ip
 802b572:	dd09      	ble.n	802b588 <HRTF_HT_FilterProcess+0x208>
 802b574:	2200      	movs	r2, #0
 802b576:	3201      	adds	r2, #1
 802b578:	f85b 0b04 	ldr.w	r0, [fp], #4
 802b57c:	f843 0b04 	str.w	r0, [r3], #4
 802b580:	428a      	cmp	r2, r1
 802b582:	dbf8      	blt.n	802b576 <HRTF_HT_FilterProcess+0x1f6>
 802b584:	2d00      	cmp	r5, #0
 802b586:	dd82      	ble.n	802b48e <HRTF_HT_FilterProcess+0x10e>
 802b588:	3b04      	subs	r3, #4
 802b58a:	4631      	mov	r1, r6
 802b58c:	2200      	movs	r2, #0
 802b58e:	3201      	adds	r2, #1
 802b590:	f851 0b04 	ldr.w	r0, [r1], #4
 802b594:	f843 0f04 	str.w	r0, [r3, #4]!
 802b598:	4295      	cmp	r5, r2
 802b59a:	dcf8      	bgt.n	802b58e <HRTF_HT_FilterProcess+0x20e>
 802b59c:	9b03      	ldr	r3, [sp, #12]
 802b59e:	2b00      	cmp	r3, #0
 802b5a0:	f43f af79 	beq.w	802b496 <HRTF_HT_FilterProcess+0x116>
 802b5a4:	f508 732c 	add.w	r3, r8, #688	@ 0x2b0
 802b5a8:	2200      	movs	r2, #0
 802b5aa:	9500      	str	r5, [sp, #0]
 802b5ac:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b5b0:	4631      	mov	r1, r6
 802b5b2:	4630      	mov	r0, r6
 802b5b4:	f7ff fe00 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b5b8:	2200      	movs	r2, #0
 802b5ba:	e786      	b.n	802b4ca <HRTF_HT_FilterProcess+0x14a>
 802b5bc:	ebc0 0c0c 	rsb	ip, r0, ip
 802b5c0:	ea4f 0cac 	mov.w	ip, ip, asr #2
 802b5c4:	f1bc 0f00 	cmp.w	ip, #0
 802b5c8:	4667      	mov	r7, ip
 802b5ca:	bfb8      	it	lt
 802b5cc:	f10c 0703 	addlt.w	r7, ip, #3
 802b5d0:	10bf      	asrs	r7, r7, #2
 802b5d2:	2f00      	cmp	r7, #0
 802b5d4:	dd3a      	ble.n	802b64c <HRTF_HT_FilterProcess+0x2cc>
 802b5d6:	3701      	adds	r7, #1
 802b5d8:	013f      	lsls	r7, r7, #4
 802b5da:	eb00 0807 	add.w	r8, r0, r7
 802b5de:	f504 6e41 	add.w	lr, r4, #3088	@ 0xc10
 802b5e2:	3010      	adds	r0, #16
 802b5e4:	9404      	str	r4, [sp, #16]
 802b5e6:	9505      	str	r5, [sp, #20]
 802b5e8:	e950 2304 	ldrd	r2, r3, [r0, #-16]
 802b5ec:	e950 4502 	ldrd	r4, r5, [r0, #-8]
 802b5f0:	3010      	adds	r0, #16
 802b5f2:	4580      	cmp	r8, r0
 802b5f4:	e94e 4502 	strd	r4, r5, [lr, #-8]
 802b5f8:	e94e 2304 	strd	r2, r3, [lr, #-16]
 802b5fc:	f10e 0e10 	add.w	lr, lr, #16
 802b600:	d1f2      	bne.n	802b5e8 <HRTF_HT_FilterProcess+0x268>
 802b602:	f1a7 0010 	sub.w	r0, r7, #16
 802b606:	9c04      	ldr	r4, [sp, #16]
 802b608:	9d05      	ldr	r5, [sp, #20]
 802b60a:	4430      	add	r0, r6
 802b60c:	ebb5 0c0c 	subs.w	ip, r5, ip
 802b610:	bf48      	it	mi
 802b612:	f10c 0c03 	addmi.w	ip, ip, #3
 802b616:	ea4f 0cac 	mov.w	ip, ip, asr #2
 802b61a:	f1bc 0f00 	cmp.w	ip, #0
 802b61e:	f77f aee4 	ble.w	802b3ea <HRTF_HT_FilterProcess+0x6a>
 802b622:	3110      	adds	r1, #16
 802b624:	3010      	adds	r0, #16
 802b626:	2700      	movs	r7, #0
 802b628:	46ce      	mov	lr, r9
 802b62a:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 802b62e:	e951 8902 	ldrd	r8, r9, [r1, #-8]
 802b632:	3701      	adds	r7, #1
 802b634:	4567      	cmp	r7, ip
 802b636:	e940 2304 	strd	r2, r3, [r0, #-16]
 802b63a:	e940 8902 	strd	r8, r9, [r0, #-8]
 802b63e:	f101 0110 	add.w	r1, r1, #16
 802b642:	f100 0010 	add.w	r0, r0, #16
 802b646:	d1f0      	bne.n	802b62a <HRTF_HT_FilterProcess+0x2aa>
 802b648:	46f1      	mov	r9, lr
 802b64a:	e6ce      	b.n	802b3ea <HRTF_HT_FilterProcess+0x6a>
 802b64c:	4630      	mov	r0, r6
 802b64e:	e7dd      	b.n	802b60c <HRTF_HT_FilterProcess+0x28c>
 802b650:	1b49      	subs	r1, r1, r5
 802b652:	2900      	cmp	r1, #0
 802b654:	f77f af1b 	ble.w	802b48e <HRTF_HT_FilterProcess+0x10e>
 802b658:	469b      	mov	fp, r3
 802b65a:	e78b      	b.n	802b574 <HRTF_HT_FilterProcess+0x1f4>
 802b65c:	46be      	mov	lr, r7
 802b65e:	2100      	movs	r1, #0
 802b660:	ebc1 0b05 	rsb	fp, r1, r5
 802b664:	f1bb 0f00 	cmp.w	fp, #0
 802b668:	f73f aef8 	bgt.w	802b45c <HRTF_HT_FilterProcess+0xdc>
 802b66c:	e70f      	b.n	802b48e <HRTF_HT_FilterProcess+0x10e>
 802b66e:	46be      	mov	lr, r7
 802b670:	e7f6      	b.n	802b660 <HRTF_HT_FilterProcess+0x2e0>
 802b672:	bf00      	nop
 802b674:	66666667 	.word	0x66666667
 802b678:	0803aaa0 	.word	0x0803aaa0
 802b67c:	08039c00 	.word	0x08039c00
 802b680:	08038d60 	.word	0x08038d60

0802b684 <HRTF_FilterProcess>:
 802b684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b688:	b087      	sub	sp, #28
 802b68a:	ea4f 0b82 	mov.w	fp, r2, lsl #2
 802b68e:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
 802b692:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 802b696:	f8da 4000 	ldr.w	r4, [sl]
 802b69a:	9303      	str	r3, [sp, #12]
 802b69c:	4615      	mov	r5, r2
 802b69e:	f501 6c28 	add.w	ip, r1, #2688	@ 0xa80
 802b6a2:	eb00 020b 	add.w	r2, r0, fp
 802b6a6:	4594      	cmp	ip, r2
 802b6a8:	f504 6640 	add.w	r6, r4, #3072	@ 0xc00
 802b6ac:	f0c0 8106 	bcc.w	802b8bc <HRTF_FilterProcess+0x238>
 802b6b0:	2d00      	cmp	r5, #0
 802b6b2:	46ae      	mov	lr, r5
 802b6b4:	bfb8      	it	lt
 802b6b6:	f105 0e03 	addlt.w	lr, r5, #3
 802b6ba:	ea4f 0eae 	mov.w	lr, lr, asr #2
 802b6be:	f1be 0f00 	cmp.w	lr, #0
 802b6c2:	dd14      	ble.n	802b6ee <HRTF_FilterProcess+0x6a>
 802b6c4:	3010      	adds	r0, #16
 802b6c6:	f504 6141 	add.w	r1, r4, #3088	@ 0xc10
 802b6ca:	2700      	movs	r7, #0
 802b6cc:	46cc      	mov	ip, r9
 802b6ce:	e950 2304 	ldrd	r2, r3, [r0, #-16]
 802b6d2:	e950 8902 	ldrd	r8, r9, [r0, #-8]
 802b6d6:	3701      	adds	r7, #1
 802b6d8:	4577      	cmp	r7, lr
 802b6da:	e941 2304 	strd	r2, r3, [r1, #-16]
 802b6de:	e941 8902 	strd	r8, r9, [r1, #-8]
 802b6e2:	f100 0010 	add.w	r0, r0, #16
 802b6e6:	f101 0110 	add.w	r1, r1, #16
 802b6ea:	d1f0      	bne.n	802b6ce <HRTF_FilterProcess+0x4a>
 802b6ec:	46e1      	mov	r9, ip
 802b6ee:	9b03      	ldr	r3, [sp, #12]
 802b6f0:	2b00      	cmp	r3, #0
 802b6f2:	f040 809a 	bne.w	802b82a <HRTF_FilterProcess+0x1a6>
 802b6f6:	4a9f      	ldr	r2, [pc, #636]	@ (802b974 <HRTF_FilterProcess+0x2f0>)
 802b6f8:	f8d4 8f00 	ldr.w	r8, [r4, #3840]	@ 0xf00
 802b6fc:	499e      	ldr	r1, [pc, #632]	@ (802b978 <HRTF_FilterProcess+0x2f4>)
 802b6fe:	fb82 3209 	smull	r3, r2, r2, r9
 802b702:	ea4f 73e9 	mov.w	r3, r9, asr #31
 802b706:	ebc3 0262 	rsb	r2, r3, r2, asr #1
 802b70a:	b212      	sxth	r2, r2
 802b70c:	f10a 0a04 	add.w	sl, sl, #4
 802b710:	eb08 0388 	add.w	r3, r8, r8, lsl #2
 802b714:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 802b718:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b71c:	f503 4395 	add.w	r3, r3, #19072	@ 0x4a80
 802b720:	428d      	cmp	r5, r1
 802b722:	f103 0320 	add.w	r3, r3, #32
 802b726:	f504 6758 	add.w	r7, r4, #3456	@ 0xd80
 802b72a:	f2c0 8090 	blt.w	802b84e <HRTF_FilterProcess+0x1ca>
 802b72e:	2900      	cmp	r1, #0
 802b730:	f340 811d 	ble.w	802b96e <HRTF_FilterProcess+0x2ea>
 802b734:	9a03      	ldr	r2, [sp, #12]
 802b736:	f604 5e7c 	addw	lr, r4, #3452	@ 0xd7c
 802b73a:	4618      	mov	r0, r3
 802b73c:	469c      	mov	ip, r3
 802b73e:	3201      	adds	r2, #1
 802b740:	f850 3b04 	ldr.w	r3, [r0], #4
 802b744:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b748:	4291      	cmp	r1, r2
 802b74a:	d1f8      	bne.n	802b73e <HRTF_FilterProcess+0xba>
 802b74c:	ebc1 0b05 	rsb	fp, r1, r5
 802b750:	f1bb 0f00 	cmp.w	fp, #0
 802b754:	4663      	mov	r3, ip
 802b756:	eb07 0e81 	add.w	lr, r7, r1, lsl #2
 802b75a:	bfd8      	it	le
 802b75c:	4632      	movle	r2, r6
 802b75e:	dd0e      	ble.n	802b77e <HRTF_FilterProcess+0xfa>
 802b760:	f1ae 0e04 	sub.w	lr, lr, #4
 802b764:	4632      	mov	r2, r6
 802b766:	2000      	movs	r0, #0
 802b768:	469c      	mov	ip, r3
 802b76a:	3001      	adds	r0, #1
 802b76c:	f852 3b04 	ldr.w	r3, [r2], #4
 802b770:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b774:	4558      	cmp	r0, fp
 802b776:	dbf8      	blt.n	802b76a <HRTF_FilterProcess+0xe6>
 802b778:	2900      	cmp	r1, #0
 802b77a:	4663      	mov	r3, ip
 802b77c:	dd09      	ble.n	802b792 <HRTF_FilterProcess+0x10e>
 802b77e:	3b04      	subs	r3, #4
 802b780:	2000      	movs	r0, #0
 802b782:	468e      	mov	lr, r1
 802b784:	3001      	adds	r0, #1
 802b786:	f852 1b04 	ldr.w	r1, [r2], #4
 802b78a:	f843 1f04 	str.w	r1, [r3, #4]!
 802b78e:	4586      	cmp	lr, r0
 802b790:	dcf8      	bgt.n	802b784 <HRTF_FilterProcess+0x100>
 802b792:	9b03      	ldr	r3, [sp, #12]
 802b794:	2b00      	cmp	r3, #0
 802b796:	f040 8085 	bne.w	802b8a4 <HRTF_FilterProcess+0x220>
 802b79a:	4b76      	ldr	r3, [pc, #472]	@ (802b974 <HRTF_FilterProcess+0x2f0>)
 802b79c:	4977      	ldr	r1, [pc, #476]	@ (802b97c <HRTF_FilterProcess+0x2f8>)
 802b79e:	9500      	str	r5, [sp, #0]
 802b7a0:	fb83 3b09 	smull	r3, fp, r3, r9
 802b7a4:	ea4f 73e9 	mov.w	r3, r9, asr #31
 802b7a8:	ebc3 0b6b 	rsb	fp, r3, fp, asr #1
 802b7ac:	fa0f f38b 	sxth.w	r3, fp
 802b7b0:	2234      	movs	r2, #52	@ 0x34
 802b7b2:	fb02 fb03 	mul.w	fp, r2, r3
 802b7b6:	f208 237f 	addw	r3, r8, #639	@ 0x27f
 802b7ba:	eb01 020b 	add.w	r2, r1, fp
 802b7be:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b7c2:	4631      	mov	r1, r6
 802b7c4:	4630      	mov	r0, r6
 802b7c6:	f7ff fcf7 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b7ca:	4a6d      	ldr	r2, [pc, #436]	@ (802b980 <HRTF_FilterProcess+0x2fc>)
 802b7cc:	445a      	add	r2, fp
 802b7ce:	f508 731e 	add.w	r3, r8, #632	@ 0x278
 802b7d2:	4638      	mov	r0, r7
 802b7d4:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b7d8:	9500      	str	r5, [sp, #0]
 802b7da:	4639      	mov	r1, r7
 802b7dc:	f7ff fcec 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b7e0:	f504 5084 	add.w	r0, r4, #4224	@ 0x1080
 802b7e4:	f1b9 0fb3 	cmp.w	r9, #179	@ 0xb3
 802b7e8:	f100 0004 	add.w	r0, r0, #4
 802b7ec:	f604 7404 	addw	r4, r4, #3844	@ 0xf04
 802b7f0:	dc02      	bgt.n	802b7f8 <HRTF_FilterProcess+0x174>
 802b7f2:	463b      	mov	r3, r7
 802b7f4:	4637      	mov	r7, r6
 802b7f6:	461e      	mov	r6, r3
 802b7f8:	2d00      	cmp	r5, #0
 802b7fa:	dd13      	ble.n	802b824 <HRTF_FilterProcess+0x1a0>
 802b7fc:	f04f 0e00 	mov.w	lr, #0
 802b800:	6803      	ldr	r3, [r0, #0]
 802b802:	f857 2b04 	ldr.w	r2, [r7], #4
 802b806:	fa82 f283 	qadd	r2, r3, r2
 802b80a:	6823      	ldr	r3, [r4, #0]
 802b80c:	f856 1b04 	ldr.w	r1, [r6], #4
 802b810:	fa81 f383 	qadd	r3, r3, r1
 802b814:	f10e 0e01 	add.w	lr, lr, #1
 802b818:	4575      	cmp	r5, lr
 802b81a:	f840 2b04 	str.w	r2, [r0], #4
 802b81e:	f844 3b04 	str.w	r3, [r4], #4
 802b822:	d1ed      	bne.n	802b800 <HRTF_FilterProcess+0x17c>
 802b824:	b007      	add	sp, #28
 802b826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b82a:	f8d4 8f00 	ldr.w	r8, [r4, #3840]	@ 0xf00
 802b82e:	f10a 0a04 	add.w	sl, sl, #4
 802b832:	eb08 0388 	add.w	r3, r8, r8, lsl #2
 802b836:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b83a:	f503 4395 	add.w	r3, r3, #19072	@ 0x4a80
 802b83e:	2d00      	cmp	r5, #0
 802b840:	f103 0320 	add.w	r3, r3, #32
 802b844:	f504 6758 	add.w	r7, r4, #3456	@ 0xd80
 802b848:	f280 8088 	bge.w	802b95c <HRTF_FilterProcess+0x2d8>
 802b84c:	2100      	movs	r1, #0
 802b84e:	2d00      	cmp	r5, #0
 802b850:	dd7e      	ble.n	802b950 <HRTF_FilterProcess+0x2cc>
 802b852:	f1a7 0e04 	sub.w	lr, r7, #4
 802b856:	4618      	mov	r0, r3
 802b858:	2200      	movs	r2, #0
 802b85a:	469c      	mov	ip, r3
 802b85c:	3201      	adds	r2, #1
 802b85e:	f850 3b04 	ldr.w	r3, [r0], #4
 802b862:	f84e 3f04 	str.w	r3, [lr, #4]!
 802b866:	4295      	cmp	r5, r2
 802b868:	d1f8      	bne.n	802b85c <HRTF_FilterProcess+0x1d8>
 802b86a:	1b49      	subs	r1, r1, r5
 802b86c:	2900      	cmp	r1, #0
 802b86e:	4663      	mov	r3, ip
 802b870:	44e3      	add	fp, ip
 802b872:	dd09      	ble.n	802b888 <HRTF_FilterProcess+0x204>
 802b874:	2200      	movs	r2, #0
 802b876:	3201      	adds	r2, #1
 802b878:	f85b 0b04 	ldr.w	r0, [fp], #4
 802b87c:	f843 0b04 	str.w	r0, [r3], #4
 802b880:	428a      	cmp	r2, r1
 802b882:	dbf8      	blt.n	802b876 <HRTF_FilterProcess+0x1f2>
 802b884:	2d00      	cmp	r5, #0
 802b886:	dd84      	ble.n	802b792 <HRTF_FilterProcess+0x10e>
 802b888:	3b04      	subs	r3, #4
 802b88a:	4631      	mov	r1, r6
 802b88c:	2200      	movs	r2, #0
 802b88e:	3201      	adds	r2, #1
 802b890:	f851 0b04 	ldr.w	r0, [r1], #4
 802b894:	f843 0f04 	str.w	r0, [r3, #4]!
 802b898:	4295      	cmp	r5, r2
 802b89a:	dcf8      	bgt.n	802b88e <HRTF_FilterProcess+0x20a>
 802b89c:	9b03      	ldr	r3, [sp, #12]
 802b89e:	2b00      	cmp	r3, #0
 802b8a0:	f43f af7b 	beq.w	802b79a <HRTF_FilterProcess+0x116>
 802b8a4:	f208 237f 	addw	r3, r8, #639	@ 0x27f
 802b8a8:	2200      	movs	r2, #0
 802b8aa:	9500      	str	r5, [sp, #0]
 802b8ac:	eb0a 1343 	add.w	r3, sl, r3, lsl #5
 802b8b0:	4631      	mov	r1, r6
 802b8b2:	4630      	mov	r0, r6
 802b8b4:	f7ff fc80 	bl	802b1b8 <biquad_df1_cascade_mono_compute_hpv_q31>
 802b8b8:	2200      	movs	r2, #0
 802b8ba:	e788      	b.n	802b7ce <HRTF_FilterProcess+0x14a>
 802b8bc:	ebc0 0c0c 	rsb	ip, r0, ip
 802b8c0:	ea4f 0cac 	mov.w	ip, ip, asr #2
 802b8c4:	f1bc 0f00 	cmp.w	ip, #0
 802b8c8:	4667      	mov	r7, ip
 802b8ca:	bfb8      	it	lt
 802b8cc:	f10c 0703 	addlt.w	r7, ip, #3
 802b8d0:	10bf      	asrs	r7, r7, #2
 802b8d2:	2f00      	cmp	r7, #0
 802b8d4:	dd3a      	ble.n	802b94c <HRTF_FilterProcess+0x2c8>
 802b8d6:	3701      	adds	r7, #1
 802b8d8:	013f      	lsls	r7, r7, #4
 802b8da:	eb00 0807 	add.w	r8, r0, r7
 802b8de:	f504 6e41 	add.w	lr, r4, #3088	@ 0xc10
 802b8e2:	3010      	adds	r0, #16
 802b8e4:	9404      	str	r4, [sp, #16]
 802b8e6:	9505      	str	r5, [sp, #20]
 802b8e8:	e950 2304 	ldrd	r2, r3, [r0, #-16]
 802b8ec:	e950 4502 	ldrd	r4, r5, [r0, #-8]
 802b8f0:	3010      	adds	r0, #16
 802b8f2:	4580      	cmp	r8, r0
 802b8f4:	e94e 4502 	strd	r4, r5, [lr, #-8]
 802b8f8:	e94e 2304 	strd	r2, r3, [lr, #-16]
 802b8fc:	f10e 0e10 	add.w	lr, lr, #16
 802b900:	d1f2      	bne.n	802b8e8 <HRTF_FilterProcess+0x264>
 802b902:	f1a7 0010 	sub.w	r0, r7, #16
 802b906:	9c04      	ldr	r4, [sp, #16]
 802b908:	9d05      	ldr	r5, [sp, #20]
 802b90a:	4430      	add	r0, r6
 802b90c:	ebb5 0c0c 	subs.w	ip, r5, ip
 802b910:	bf48      	it	mi
 802b912:	f10c 0c03 	addmi.w	ip, ip, #3
 802b916:	ea4f 0cac 	mov.w	ip, ip, asr #2
 802b91a:	f1bc 0f00 	cmp.w	ip, #0
 802b91e:	f77f aee6 	ble.w	802b6ee <HRTF_FilterProcess+0x6a>
 802b922:	3110      	adds	r1, #16
 802b924:	3010      	adds	r0, #16
 802b926:	2700      	movs	r7, #0
 802b928:	46ce      	mov	lr, r9
 802b92a:	e951 2304 	ldrd	r2, r3, [r1, #-16]
 802b92e:	e951 8902 	ldrd	r8, r9, [r1, #-8]
 802b932:	3701      	adds	r7, #1
 802b934:	4567      	cmp	r7, ip
 802b936:	e940 2304 	strd	r2, r3, [r0, #-16]
 802b93a:	e940 8902 	strd	r8, r9, [r0, #-8]
 802b93e:	f101 0110 	add.w	r1, r1, #16
 802b942:	f100 0010 	add.w	r0, r0, #16
 802b946:	d1f0      	bne.n	802b92a <HRTF_FilterProcess+0x2a6>
 802b948:	46f1      	mov	r9, lr
 802b94a:	e6d0      	b.n	802b6ee <HRTF_FilterProcess+0x6a>
 802b94c:	4630      	mov	r0, r6
 802b94e:	e7dd      	b.n	802b90c <HRTF_FilterProcess+0x288>
 802b950:	1b49      	subs	r1, r1, r5
 802b952:	2900      	cmp	r1, #0
 802b954:	f77f af1d 	ble.w	802b792 <HRTF_FilterProcess+0x10e>
 802b958:	469b      	mov	fp, r3
 802b95a:	e78b      	b.n	802b874 <HRTF_FilterProcess+0x1f0>
 802b95c:	46be      	mov	lr, r7
 802b95e:	2100      	movs	r1, #0
 802b960:	ebc1 0b05 	rsb	fp, r1, r5
 802b964:	f1bb 0f00 	cmp.w	fp, #0
 802b968:	f73f aefa 	bgt.w	802b760 <HRTF_FilterProcess+0xdc>
 802b96c:	e711      	b.n	802b792 <HRTF_FilterProcess+0x10e>
 802b96e:	46be      	mov	lr, r7
 802b970:	e7f6      	b.n	802b960 <HRTF_FilterProcess+0x2dc>
 802b972:	bf00      	nop
 802b974:	66666667 	.word	0x66666667
 802b978:	0803aaa0 	.word	0x0803aaa0
 802b97c:	08039c00 	.word	0x08039c00
 802b980:	08038d60 	.word	0x08038d60

0802b984 <hpv_2>:
 802b984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b988:	6843      	ldr	r3, [r0, #4]
 802b98a:	4adf      	ldr	r2, [pc, #892]	@ (802bd08 <hpv_2+0x384>)
 802b98c:	4680      	mov	r8, r0
 802b98e:	b0ab      	sub	sp, #172	@ 0xac
 802b990:	4618      	mov	r0, r3
 802b992:	9328      	str	r3, [sp, #160]	@ 0xa0
 802b994:	f8d8 3000 	ldr.w	r3, [r8]
 802b998:	9323      	str	r3, [sp, #140]	@ 0x8c
 802b99a:	4619      	mov	r1, r3
 802b99c:	7803      	ldrb	r3, [r0, #0]
 802b99e:	f888 3008 	strb.w	r3, [r8, #8]
 802b9a2:	5cd3      	ldrb	r3, [r2, r3]
 802b9a4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 802b9a8:	f888 3009 	strb.w	r3, [r8, #9]
 802b9ac:	f003 02f7 	and.w	r2, r3, #247	@ 0xf7
 802b9b0:	2a04      	cmp	r2, #4
 802b9b2:	900a      	str	r0, [sp, #40]	@ 0x28
 802b9b4:	f001 81d5 	beq.w	802cd62 <hpv_2+0x13de>
 802b9b8:	460a      	mov	r2, r1
 802b9ba:	f501 7440 	add.w	r4, r1, #768	@ 0x300
 802b9be:	f501 71c0 	add.w	r1, r1, #384	@ 0x180
 802b9c2:	9229      	str	r2, [sp, #164]	@ 0xa4
 802b9c4:	9127      	str	r1, [sp, #156]	@ 0x9c
 802b9c6:	4602      	mov	r2, r0
 802b9c8:	0852      	lsrs	r2, r2, #1
 802b9ca:	9224      	str	r2, [sp, #144]	@ 0x90
 802b9cc:	f001 8250 	beq.w	802ce70 <hpv_2+0x14ec>
 802b9d0:	f8dd c08c 	ldr.w	ip, [sp, #140]	@ 0x8c
 802b9d4:	f8dd e09c 	ldr.w	lr, [sp, #156]	@ 0x9c
 802b9d8:	f04f 0900 	mov.w	r9, #0
 802b9dc:	4610      	mov	r0, r2
 802b9de:	e89c 0420 	ldmia.w	ip, {r5, sl}
 802b9e2:	e89e 0082 	ldmia.w	lr, {r1, r7}
 802b9e6:	fa85 f2a1 	qsub	r2, r1, r5
 802b9ea:	fa8a f3a7 	qsub	r3, r7, sl
 802b9ee:	106d      	asrs	r5, r5, #1
 802b9f0:	f8d8 6010 	ldr.w	r6, [r8, #16]
 802b9f4:	fb52 5516 	smmlar	r5, r2, r6, r5
 802b9f8:	ea4f 0a6a 	mov.w	sl, sl, asr #1
 802b9fc:	fb53 a616 	smmlar	r6, r3, r6, sl
 802ba00:	006d      	lsls	r5, r5, #1
 802ba02:	f84c 5b08 	str.w	r5, [ip], #8
 802ba06:	0076      	lsls	r6, r6, #1
 802ba08:	f84c 6c04 	str.w	r6, [ip, #-4]
 802ba0c:	4252      	negs	r2, r2
 802ba0e:	1049      	asrs	r1, r1, #1
 802ba10:	f8d8 5010 	ldr.w	r5, [r8, #16]
 802ba14:	fb52 1115 	smmlar	r1, r2, r5, r1
 802ba18:	425a      	negs	r2, r3
 802ba1a:	107f      	asrs	r7, r7, #1
 802ba1c:	fb52 7315 	smmlar	r3, r2, r5, r7
 802ba20:	004a      	lsls	r2, r1, #1
 802ba22:	f84e 2b08 	str.w	r2, [lr], #8
 802ba26:	f109 0901 	add.w	r9, r9, #1
 802ba2a:	005b      	lsls	r3, r3, #1
 802ba2c:	4581      	cmp	r9, r0
 802ba2e:	f84e 3c04 	str.w	r3, [lr, #-4]
 802ba32:	d1d4      	bne.n	802b9de <hpv_2+0x5a>
 802ba34:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802ba36:	f898 3009 	ldrb.w	r3, [r8, #9]
 802ba3a:	f500 6110 	add.w	r1, r0, #2304	@ 0x900
 802ba3e:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 802ba42:	9103      	str	r1, [sp, #12]
 802ba44:	2a30      	cmp	r2, #48	@ 0x30
 802ba46:	f500 6128 	add.w	r1, r0, #2688	@ 0xa80
 802ba4a:	f500 6ac0 	add.w	sl, r0, #1536	@ 0x600
 802ba4e:	f500 6bf0 	add.w	fp, r0, #1920	@ 0x780
 802ba52:	9104      	str	r1, [sp, #16]
 802ba54:	f000 8511 	beq.w	802c47a <hpv_2+0xaf6>
 802ba58:	2af0      	cmp	r2, #240	@ 0xf0
 802ba5a:	f000 8353 	beq.w	802c104 <hpv_2+0x780>
 802ba5e:	075a      	lsls	r2, r3, #29
 802ba60:	f100 83c0 	bmi.w	802c1e4 <hpv_2+0x860>
 802ba64:	f608 229c 	addw	r2, r8, #2716	@ 0xa9c
 802ba68:	9220      	str	r2, [sp, #128]	@ 0x80
 802ba6a:	f108 021c 	add.w	r2, r8, #28
 802ba6e:	9221      	str	r2, [sp, #132]	@ 0x84
 802ba70:	f003 0203 	and.w	r2, r3, #3
 802ba74:	2a03      	cmp	r2, #3
 802ba76:	f000 8425 	beq.w	802c2c4 <hpv_2+0x940>
 802ba7a:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 802ba7e:	2b30      	cmp	r3, #48	@ 0x30
 802ba80:	f000 8756 	beq.w	802c930 <hpv_2+0xfac>
 802ba84:	2bf0      	cmp	r3, #240	@ 0xf0
 802ba86:	f001 8016 	beq.w	802cab6 <hpv_2+0x1132>
 802ba8a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802ba8c:	f502 5384 	add.w	r3, r2, #4224	@ 0x1080
 802ba90:	3304      	adds	r3, #4
 802ba92:	9326      	str	r3, [sp, #152]	@ 0x98
 802ba94:	4613      	mov	r3, r2
 802ba96:	f602 7204 	addw	r2, r2, #3844	@ 0xf04
 802ba9a:	9225      	str	r2, [sp, #148]	@ 0x94
 802ba9c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802ba9e:	0895      	lsrs	r5, r2, #2
 802baa0:	f001 81f3 	beq.w	802ce8a <hpv_2+0x1506>
 802baa4:	461a      	mov	r2, r3
 802baa6:	f503 5384 	add.w	r3, r3, #4224	@ 0x1080
 802baaa:	3314      	adds	r3, #20
 802baac:	f602 7214 	addw	r2, r2, #3860	@ 0xf14
 802bab0:	2400      	movs	r4, #0
 802bab2:	2000      	movs	r0, #0
 802bab4:	2100      	movs	r1, #0
 802bab6:	3401      	adds	r4, #1
 802bab8:	42ac      	cmp	r4, r5
 802baba:	e942 0104 	strd	r0, r1, [r2, #-16]
 802babe:	e942 0102 	strd	r0, r1, [r2, #-8]
 802bac2:	f103 0310 	add.w	r3, r3, #16
 802bac6:	e943 0108 	strd	r0, r1, [r3, #-32]
 802baca:	e943 0106 	strd	r0, r1, [r3, #-24]
 802bace:	f102 0210 	add.w	r2, r2, #16
 802bad2:	d1f0      	bne.n	802bab6 <hpv_2+0x132>
 802bad4:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 802bad8:	f938 3003 	ldrsh.w	r3, [r8, r3]
 802badc:	2b01      	cmp	r3, #1
 802bade:	f000 866f 	beq.w	802c7c0 <hpv_2+0xe3c>
 802bae2:	f644 11a0 	movw	r1, #18848	@ 0x49a0
 802bae6:	f644 2292 	movw	r2, #19090	@ 0x4a92
 802baea:	f858 0001 	ldr.w	r0, [r8, r1]
 802baee:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 802baf0:	f938 1002 	ldrsh.w	r1, [r8, r2]
 802baf4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802baf8:	f644 249e 	movw	r4, #19102	@ 0x4a9e
 802bafc:	2200      	movs	r2, #0
 802bafe:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bb02:	f8c6 2f00 	str.w	r2, [r6, #3840]	@ 0xf00
 802bb06:	464a      	mov	r2, r9
 802bb08:	e88d 0102 	stmia.w	sp, {r1, r8}
 802bb0c:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802bb0e:	f7ff fdb9 	bl	802b684 <HRTF_FilterProcess>
 802bb12:	f644 11a4 	movw	r1, #18852	@ 0x49a4
 802bb16:	f644 2294 	movw	r2, #19092	@ 0x4a94
 802bb1a:	f858 0001 	ldr.w	r0, [r8, r1]
 802bb1e:	f938 1002 	ldrsh.w	r1, [r8, r2]
 802bb22:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bb26:	2201      	movs	r2, #1
 802bb28:	f8c6 2f00 	str.w	r2, [r6, #3840]	@ 0xf00
 802bb2c:	e88d 0102 	stmia.w	sp, {r1, r8}
 802bb30:	464a      	mov	r2, r9
 802bb32:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802bb34:	f7ff fda6 	bl	802b684 <HRTF_FilterProcess>
 802bb38:	f898 3009 	ldrb.w	r3, [r8, #9]
 802bb3c:	f003 03f7 	and.w	r3, r3, #247	@ 0xf7
 802bb40:	2b03      	cmp	r3, #3
 802bb42:	d06a      	beq.n	802bc1a <hpv_2+0x296>
 802bb44:	f644 2290 	movw	r2, #19088	@ 0x4a90
 802bb48:	f644 119c 	movw	r1, #18844	@ 0x499c
 802bb4c:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802bb50:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bb54:	f858 0001 	ldr.w	r0, [r8, r1]
 802bb58:	2402      	movs	r4, #2
 802bb5a:	f508 51a8 	add.w	r1, r8, #5376	@ 0x1500
 802bb5e:	f8c6 4f00 	str.w	r4, [r6, #3840]	@ 0xf00
 802bb62:	311c      	adds	r1, #28
 802bb64:	e88d 0104 	stmia.w	sp, {r2, r8}
 802bb68:	464a      	mov	r2, r9
 802bb6a:	f7ff fd8b 	bl	802b684 <HRTF_FilterProcess>
 802bb6e:	f644 2296 	movw	r2, #19094	@ 0x4a96
 802bb72:	f644 11b0 	movw	r1, #18864	@ 0x49b0
 802bb76:	f644 24a0 	movw	r4, #19104	@ 0x4aa0
 802bb7a:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802bb7e:	f858 0001 	ldr.w	r0, [r8, r1]
 802bb82:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bb86:	2503      	movs	r5, #3
 802bb88:	f508 51fc 	add.w	r1, r8, #8064	@ 0x1f80
 802bb8c:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802bb90:	311c      	adds	r1, #28
 802bb92:	e88d 0104 	stmia.w	sp, {r2, r8}
 802bb96:	464a      	mov	r2, r9
 802bb98:	f7ff fd74 	bl	802b684 <HRTF_FilterProcess>
 802bb9c:	f644 2298 	movw	r2, #19096	@ 0x4a98
 802bba0:	f644 11b4 	movw	r1, #18868	@ 0x49b4
 802bba4:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802bba8:	f858 0001 	ldr.w	r0, [r8, r1]
 802bbac:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bbb0:	2504      	movs	r5, #4
 802bbb2:	f508 5128 	add.w	r1, r8, #10752	@ 0x2a00
 802bbb6:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802bbba:	311c      	adds	r1, #28
 802bbbc:	e88d 0104 	stmia.w	sp, {r2, r8}
 802bbc0:	464a      	mov	r2, r9
 802bbc2:	f7ff fd5f 	bl	802b684 <HRTF_FilterProcess>
 802bbc6:	f644 229a 	movw	r2, #19098	@ 0x4a9a
 802bbca:	f644 11a8 	movw	r1, #18856	@ 0x49a8
 802bbce:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802bbd2:	f858 0001 	ldr.w	r0, [r8, r1]
 802bbd6:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bbda:	2505      	movs	r5, #5
 802bbdc:	f508 5152 	add.w	r1, r8, #13440	@ 0x3480
 802bbe0:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802bbe4:	311c      	adds	r1, #28
 802bbe6:	e88d 0104 	stmia.w	sp, {r2, r8}
 802bbea:	464a      	mov	r2, r9
 802bbec:	f7ff fd4a 	bl	802b684 <HRTF_FilterProcess>
 802bbf0:	f644 229c 	movw	r2, #19100	@ 0x4a9c
 802bbf4:	f644 11ac 	movw	r1, #18860	@ 0x49ac
 802bbf8:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802bbfc:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802bc00:	f858 0001 	ldr.w	r0, [r8, r1]
 802bc04:	2406      	movs	r4, #6
 802bc06:	f508 517c 	add.w	r1, r8, #16128	@ 0x3f00
 802bc0a:	f8c6 4f00 	str.w	r4, [r6, #3840]	@ 0xf00
 802bc0e:	311c      	adds	r1, #28
 802bc10:	e88d 0104 	stmia.w	sp, {r2, r8}
 802bc14:	464a      	mov	r2, r9
 802bc16:	f7ff fd35 	bl	802b684 <HRTF_FilterProcess>
 802bc1a:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 802bc1e:	f938 2003 	ldrsh.w	r2, [r8, r3]
 802bc22:	2a01      	cmp	r2, #1
 802bc24:	f000 8565 	beq.w	802c6f2 <hpv_2+0xd6e>
 802bc28:	f248 7a60 	movw	sl, #34656	@ 0x8760
 802bc2c:	f248 7964 	movw	r9, #34660	@ 0x8764
 802bc30:	f248 7c68 	movw	ip, #34664	@ 0x8768
 802bc34:	f858 200a 	ldr.w	r2, [r8, sl]
 802bc38:	f898 3009 	ldrb.w	r3, [r8, #9]
 802bc3c:	9213      	str	r2, [sp, #76]	@ 0x4c
 802bc3e:	f248 7e6c 	movw	lr, #34668	@ 0x876c
 802bc42:	f858 2009 	ldr.w	r2, [r8, r9]
 802bc46:	9204      	str	r2, [sp, #16]
 802bc48:	f644 10a4 	movw	r0, #18852	@ 0x49a4
 802bc4c:	f858 200c 	ldr.w	r2, [r8, ip]
 802bc50:	9205      	str	r2, [sp, #20]
 802bc52:	f644 14a0 	movw	r4, #18848	@ 0x49a0
 802bc56:	f858 200e 	ldr.w	r2, [r8, lr]
 802bc5a:	9209      	str	r2, [sp, #36]	@ 0x24
 802bc5c:	f644 159c 	movw	r5, #18844	@ 0x499c
 802bc60:	f644 17b0 	movw	r7, #18864	@ 0x49b0
 802bc64:	f644 16b4 	movw	r6, #18868	@ 0x49b4
 802bc68:	f644 11a8 	movw	r1, #18856	@ 0x49a8
 802bc6c:	f644 1bac 	movw	fp, #18860	@ 0x49ac
 802bc70:	f003 03f7 	and.w	r3, r3, #247	@ 0xf7
 802bc74:	f858 2000 	ldr.w	r2, [r8, r0]
 802bc78:	f858 4004 	ldr.w	r4, [r8, r4]
 802bc7c:	9206      	str	r2, [sp, #24]
 802bc7e:	2b03      	cmp	r3, #3
 802bc80:	f858 5005 	ldr.w	r5, [r8, r5]
 802bc84:	f858 e007 	ldr.w	lr, [r8, r7]
 802bc88:	f858 c006 	ldr.w	ip, [r8, r6]
 802bc8c:	f858 9001 	ldr.w	r9, [r8, r1]
 802bc90:	f858 b00b 	ldr.w	fp, [r8, fp]
 802bc94:	f000 8447 	beq.w	802c526 <hpv_2+0xba2>
 802bc98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bc9a:	2b00      	cmp	r3, #0
 802bc9c:	f000 81dc 	beq.w	802c058 <hpv_2+0x6d4>
 802bca0:	f508 4093 	add.w	r0, r8, #18816	@ 0x4980
 802bca4:	9019      	str	r0, [sp, #100]	@ 0x64
 802bca6:	f508 5128 	add.w	r1, r8, #10752	@ 0x2a00
 802bcaa:	f508 50fc 	add.w	r0, r8, #8064	@ 0x1f80
 802bcae:	9115      	str	r1, [sp, #84]	@ 0x54
 802bcb0:	901a      	str	r0, [sp, #104]	@ 0x68
 802bcb2:	f508 43de 	add.w	r3, r8, #28416	@ 0x6f00
 802bcb6:	f508 40ae 	add.w	r0, r8, #22272	@ 0x5700
 802bcba:	f508 4207 	add.w	r2, r8, #34560	@ 0x8700
 802bcbe:	900d      	str	r0, [sp, #52]	@ 0x34
 802bcc0:	f508 567c 	add.w	r6, r8, #16128	@ 0x3f00
 802bcc4:	f508 5152 	add.w	r1, r8, #13440	@ 0x3480
 802bcc8:	4618      	mov	r0, r3
 802bcca:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802bccc:	9616      	str	r6, [sp, #88]	@ 0x58
 802bcce:	9118      	str	r1, [sp, #96]	@ 0x60
 802bcd0:	920b      	str	r2, [sp, #44]	@ 0x2c
 802bcd2:	4611      	mov	r1, r2
 802bcd4:	325c      	adds	r2, #92	@ 0x5c
 802bcd6:	f508 57a8 	add.w	r7, r8, #5376	@ 0x1500
 802bcda:	9210      	str	r2, [sp, #64]	@ 0x40
 802bcdc:	461a      	mov	r2, r3
 802bcde:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802bce0:	9717      	str	r7, [sp, #92]	@ 0x5c
 802bce2:	3218      	adds	r2, #24
 802bce4:	9215      	str	r2, [sp, #84]	@ 0x54
 802bce6:	461a      	mov	r2, r3
 802bce8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802bcea:	4f08      	ldr	r7, [pc, #32]	@ (802bd0c <hpv_2+0x388>)
 802bcec:	4e08      	ldr	r6, [pc, #32]	@ (802bd10 <hpv_2+0x38c>)
 802bcee:	3218      	adds	r2, #24
 802bcf0:	9216      	str	r2, [sp, #88]	@ 0x58
 802bcf2:	461a      	mov	r2, r3
 802bcf4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802bcf6:	3218      	adds	r2, #24
 802bcf8:	9217      	str	r2, [sp, #92]	@ 0x5c
 802bcfa:	461a      	mov	r2, r3
 802bcfc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802bcfe:	3218      	adds	r2, #24
 802bd00:	9218      	str	r2, [sp, #96]	@ 0x60
 802bd02:	461a      	mov	r2, r3
 802bd04:	e006      	b.n	802bd14 <hpv_2+0x390>
 802bd06:	bf00      	nop
 802bd08:	0803abc0 	.word	0x0803abc0
 802bd0c:	13333333 	.word	0x13333333
 802bd10:	6ccccccc 	.word	0x6ccccccc
 802bd14:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802bd16:	3218      	adds	r2, #24
 802bd18:	9219      	str	r2, [sp, #100]	@ 0x64
 802bd1a:	461a      	mov	r2, r3
 802bd1c:	3218      	adds	r2, #24
 802bd1e:	921a      	str	r2, [sp, #104]	@ 0x68
 802bd20:	460a      	mov	r2, r1
 802bd22:	460b      	mov	r3, r1
 802bd24:	327c      	adds	r2, #124	@ 0x7c
 802bd26:	920e      	str	r2, [sp, #56]	@ 0x38
 802bd28:	461a      	mov	r2, r3
 802bd2a:	3284      	adds	r2, #132	@ 0x84
 802bd2c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802bd2e:	461a      	mov	r2, r3
 802bd30:	328c      	adds	r2, #140	@ 0x8c
 802bd32:	921d      	str	r2, [sp, #116]	@ 0x74
 802bd34:	461a      	mov	r2, r3
 802bd36:	3280      	adds	r2, #128	@ 0x80
 802bd38:	9212      	str	r2, [sp, #72]	@ 0x48
 802bd3a:	461a      	mov	r2, r3
 802bd3c:	3288      	adds	r2, #136	@ 0x88
 802bd3e:	921c      	str	r2, [sp, #112]	@ 0x70
 802bd40:	461a      	mov	r2, r3
 802bd42:	3290      	adds	r2, #144	@ 0x90
 802bd44:	921e      	str	r2, [sp, #120]	@ 0x78
 802bd46:	461a      	mov	r2, r3
 802bd48:	3294      	adds	r2, #148	@ 0x94
 802bd4a:	921f      	str	r2, [sp, #124]	@ 0x7c
 802bd4c:	461a      	mov	r2, r3
 802bd4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802bd50:	3270      	adds	r2, #112	@ 0x70
 802bd52:	9214      	str	r2, [sp, #80]	@ 0x50
 802bd54:	461a      	mov	r2, r3
 802bd56:	3258      	adds	r2, #88	@ 0x58
 802bd58:	920d      	str	r2, [sp, #52]	@ 0x34
 802bd5a:	305c      	adds	r0, #92	@ 0x5c
 802bd5c:	f103 025c 	add.w	r2, r3, #92	@ 0x5c
 802bd60:	9011      	str	r0, [sp, #68]	@ 0x44
 802bd62:	920c      	str	r2, [sp, #48]	@ 0x30
 802bd64:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802bd66:	f8cd 800c 	str.w	r8, [sp, #12]
 802bd6a:	3374      	adds	r3, #116	@ 0x74
 802bd6c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bd6e:	f608 2398 	addw	r3, r8, #2712	@ 0xa98
 802bd72:	9322      	str	r3, [sp, #136]	@ 0x88
 802bd74:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802bd76:	9307      	str	r3, [sp, #28]
 802bd78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bd7a:	9308      	str	r3, [sp, #32]
 802bd7c:	2300      	movs	r3, #0
 802bd7e:	3178      	adds	r1, #120	@ 0x78
 802bd80:	930f      	str	r3, [sp, #60]	@ 0x3c
 802bd82:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802bd86:	46a0      	mov	r8, r4
 802bd88:	e137      	b.n	802bffa <hpv_2+0x676>
 802bd8a:	9b03      	ldr	r3, [sp, #12]
 802bd8c:	f503 43ae 	add.w	r3, r3, #22272	@ 0x5700
 802bd90:	3360      	adds	r3, #96	@ 0x60
 802bd92:	9305      	str	r3, [sp, #20]
 802bd94:	9b06      	ldr	r3, [sp, #24]
 802bd96:	f8dc 2000 	ldr.w	r2, [ip]
 802bd9a:	681b      	ldr	r3, [r3, #0]
 802bd9c:	fa82 f383 	qadd	r3, r3, r2
 802bda0:	f8db 0000 	ldr.w	r0, [fp]
 802bda4:	fa83 f080 	qadd	r0, r0, r3
 802bda8:	682b      	ldr	r3, [r5, #0]
 802bdaa:	fa80 f083 	qadd	r0, r3, r0
 802bdae:	2800      	cmp	r0, #0
 802bdb0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802bdb2:	bfb8      	it	lt
 802bdb4:	3003      	addlt	r0, #3
 802bdb6:	1080      	asrs	r0, r0, #2
 802bdb8:	4613      	mov	r3, r2
 802bdba:	6010      	str	r0, [r2, #0]
 802bdbc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bdbe:	4293      	cmp	r3, r2
 802bdc0:	f0c0 8137 	bcc.w	802c032 <hpv_2+0x6ae>
 802bdc4:	9b03      	ldr	r3, [sp, #12]
 802bdc6:	f503 43de 	add.w	r3, r3, #28416	@ 0x6f00
 802bdca:	3360      	adds	r3, #96	@ 0x60
 802bdcc:	9309      	str	r3, [sp, #36]	@ 0x24
 802bdce:	f8d8 3000 	ldr.w	r3, [r8]
 802bdd2:	fb57 f313 	smmulr	r3, r7, r3
 802bdd6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802bdd8:	6802      	ldr	r2, [r0, #0]
 802bdda:	fb56 f212 	smmulr	r2, r6, r2
 802bdde:	fa82 f383 	qadd	r3, r3, r2
 802bde2:	f303 031e 	ssat	r3, #31, r3
 802bde6:	005b      	lsls	r3, r3, #1
 802bde8:	6003      	str	r3, [r0, #0]
 802bdea:	6808      	ldr	r0, [r1, #0]
 802bdec:	fb53 f010 	smmulr	r0, r3, r0
 802bdf0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802bdf2:	f8c8 0000 	str.w	r0, [r8]
 802bdf6:	4598      	cmp	r8, r3
 802bdf8:	bf34      	ite	cc
 802bdfa:	f108 0804 	addcc.w	r8, r8, #4
 802bdfe:	f8dd 8084 	ldrcs.w	r8, [sp, #132]	@ 0x84
 802be02:	f8de 3000 	ldr.w	r3, [lr]
 802be06:	fb57 f313 	smmulr	r3, r7, r3
 802be0a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802be0c:	6802      	ldr	r2, [r0, #0]
 802be0e:	fb56 f212 	smmulr	r2, r6, r2
 802be12:	fa82 f383 	qadd	r3, r3, r2
 802be16:	f303 031e 	ssat	r3, #31, r3
 802be1a:	005b      	lsls	r3, r3, #1
 802be1c:	6003      	str	r3, [r0, #0]
 802be1e:	6808      	ldr	r0, [r1, #0]
 802be20:	fb53 f010 	smmulr	r0, r3, r0
 802be24:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802be26:	f8ce 0000 	str.w	r0, [lr]
 802be2a:	459e      	cmp	lr, r3
 802be2c:	bf23      	ittte	cs
 802be2e:	9b03      	ldrcs	r3, [sp, #12]
 802be30:	f503 5efc 	addcs.w	lr, r3, #8064	@ 0x1f80
 802be34:	f10e 0e1c 	addcs.w	lr, lr, #28
 802be38:	f10e 0e04 	addcc.w	lr, lr, #4
 802be3c:	f8d9 3000 	ldr.w	r3, [r9]
 802be40:	fb57 f313 	smmulr	r3, r7, r3
 802be44:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802be46:	6802      	ldr	r2, [r0, #0]
 802be48:	fb56 f212 	smmulr	r2, r6, r2
 802be4c:	fa82 f383 	qadd	r3, r3, r2
 802be50:	f303 031e 	ssat	r3, #31, r3
 802be54:	005b      	lsls	r3, r3, #1
 802be56:	6003      	str	r3, [r0, #0]
 802be58:	6808      	ldr	r0, [r1, #0]
 802be5a:	fb53 f010 	smmulr	r0, r3, r0
 802be5e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802be60:	9c06      	ldr	r4, [sp, #24]
 802be62:	f8c9 0000 	str.w	r0, [r9]
 802be66:	4599      	cmp	r9, r3
 802be68:	bf23      	ittte	cs
 802be6a:	9b03      	ldrcs	r3, [sp, #12]
 802be6c:	f503 5952 	addcs.w	r9, r3, #13440	@ 0x3480
 802be70:	f109 091c 	addcs.w	r9, r9, #28
 802be74:	f109 0904 	addcc.w	r9, r9, #4
 802be78:	6823      	ldr	r3, [r4, #0]
 802be7a:	fb57 f313 	smmulr	r3, r7, r3
 802be7e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802be80:	6802      	ldr	r2, [r0, #0]
 802be82:	fb56 f212 	smmulr	r2, r6, r2
 802be86:	fa82 f383 	qadd	r3, r3, r2
 802be8a:	f303 031e 	ssat	r3, #31, r3
 802be8e:	005b      	lsls	r3, r3, #1
 802be90:	6003      	str	r3, [r0, #0]
 802be92:	6808      	ldr	r0, [r1, #0]
 802be94:	fb53 f010 	smmulr	r0, r3, r0
 802be98:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802be9a:	6020      	str	r0, [r4, #0]
 802be9c:	429c      	cmp	r4, r3
 802be9e:	bf3a      	itte	cc
 802bea0:	4623      	movcc	r3, r4
 802bea2:	3304      	addcc	r3, #4
 802bea4:	9b20      	ldrcs	r3, [sp, #128]	@ 0x80
 802bea6:	9306      	str	r3, [sp, #24]
 802bea8:	f8dc 3000 	ldr.w	r3, [ip]
 802beac:	fb57 f313 	smmulr	r3, r7, r3
 802beb0:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802beb2:	6802      	ldr	r2, [r0, #0]
 802beb4:	fb56 f212 	smmulr	r2, r6, r2
 802beb8:	fa82 f383 	qadd	r3, r3, r2
 802bebc:	f303 031e 	ssat	r3, #31, r3
 802bec0:	005b      	lsls	r3, r3, #1
 802bec2:	6003      	str	r3, [r0, #0]
 802bec4:	6808      	ldr	r0, [r1, #0]
 802bec6:	fb53 f010 	smmulr	r0, r3, r0
 802beca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802becc:	f8cc 0000 	str.w	r0, [ip]
 802bed0:	459c      	cmp	ip, r3
 802bed2:	bf23      	ittte	cs
 802bed4:	9b03      	ldrcs	r3, [sp, #12]
 802bed6:	f503 5c28 	addcs.w	ip, r3, #10752	@ 0x2a00
 802beda:	f10c 0c1c 	addcs.w	ip, ip, #28
 802bede:	f10c 0c04 	addcc.w	ip, ip, #4
 802bee2:	f8db 3000 	ldr.w	r3, [fp]
 802bee6:	fb57 f313 	smmulr	r3, r7, r3
 802beea:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802beec:	6802      	ldr	r2, [r0, #0]
 802beee:	fb56 f212 	smmulr	r2, r6, r2
 802bef2:	fa82 f383 	qadd	r3, r3, r2
 802bef6:	f303 031e 	ssat	r3, #31, r3
 802befa:	005b      	lsls	r3, r3, #1
 802befc:	6003      	str	r3, [r0, #0]
 802befe:	6808      	ldr	r0, [r1, #0]
 802bf00:	fb53 f010 	smmulr	r0, r3, r0
 802bf04:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802bf06:	f8cb 0000 	str.w	r0, [fp]
 802bf0a:	459b      	cmp	fp, r3
 802bf0c:	bf23      	ittte	cs
 802bf0e:	9b03      	ldrcs	r3, [sp, #12]
 802bf10:	f503 5b7c 	addcs.w	fp, r3, #16128	@ 0x3f00
 802bf14:	f10b 0b1c 	addcs.w	fp, fp, #28
 802bf18:	f10b 0b04 	addcc.w	fp, fp, #4
 802bf1c:	682b      	ldr	r3, [r5, #0]
 802bf1e:	fb57 f313 	smmulr	r3, r7, r3
 802bf22:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802bf24:	6802      	ldr	r2, [r0, #0]
 802bf26:	fb56 f212 	smmulr	r2, r6, r2
 802bf2a:	fa82 f383 	qadd	r3, r3, r2
 802bf2e:	f303 031e 	ssat	r3, #31, r3
 802bf32:	005b      	lsls	r3, r3, #1
 802bf34:	6003      	str	r3, [r0, #0]
 802bf36:	6808      	ldr	r0, [r1, #0]
 802bf38:	fb53 f010 	smmulr	r0, r3, r0
 802bf3c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802bf3e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802bf40:	9a07      	ldr	r2, [sp, #28]
 802bf42:	6028      	str	r0, [r5, #0]
 802bf44:	429d      	cmp	r5, r3
 802bf46:	bf28      	it	cs
 802bf48:	9b03      	ldrcs	r3, [sp, #12]
 802bf4a:	6820      	ldr	r0, [r4, #0]
 802bf4c:	bf26      	itte	cs
 802bf4e:	f503 55a8 	addcs.w	r5, r3, #5376	@ 0x1500
 802bf52:	351c      	addcs	r5, #28
 802bf54:	3504      	addcc	r5, #4
 802bf56:	6813      	ldr	r3, [r2, #0]
 802bf58:	fa83 f380 	qadd	r3, r0, r3
 802bf5c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802bf5e:	9313      	str	r3, [sp, #76]	@ 0x4c
 802bf60:	6812      	ldr	r2, [r2, #0]
 802bf62:	fb50 f012 	smmulr	r0, r0, r2
 802bf66:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802bf68:	f8da 3000 	ldr.w	r3, [sl]
 802bf6c:	6812      	ldr	r2, [r2, #0]
 802bf6e:	fb53 f212 	smmulr	r2, r3, r2
 802bf72:	fa82 f280 	qadd	r2, r0, r2
 802bf76:	0052      	lsls	r2, r2, #1
 802bf78:	6022      	str	r2, [r4, #0]
 802bf7a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802bf7c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802bf7e:	4552      	cmp	r2, sl
 802bf80:	bf9d      	ittte	ls
 802bf82:	9a03      	ldrls	r2, [sp, #12]
 802bf84:	f502 4aae 	addls.w	sl, r2, #22272	@ 0x5700
 802bf88:	f10a 0a60 	addls.w	sl, sl, #96	@ 0x60
 802bf8c:	f10a 0a04 	addhi.w	sl, sl, #4
 802bf90:	4a5b      	ldr	r2, [pc, #364]	@ (802c100 <hpv_2+0x77c>)
 802bf92:	fb53 f312 	smmulr	r3, r3, r2
 802bf96:	9a07      	ldr	r2, [sp, #28]
 802bf98:	005b      	lsls	r3, r3, #1
 802bf9a:	f842 3b04 	str.w	r3, [r2], #4
 802bf9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802bfa0:	9207      	str	r2, [sp, #28]
 802bfa2:	9a08      	ldr	r2, [sp, #32]
 802bfa4:	6818      	ldr	r0, [r3, #0]
 802bfa6:	6813      	ldr	r3, [r2, #0]
 802bfa8:	fa83 f380 	qadd	r3, r0, r3
 802bfac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802bfae:	6812      	ldr	r2, [r2, #0]
 802bfb0:	fb50 f012 	smmulr	r0, r0, r2
 802bfb4:	9a04      	ldr	r2, [sp, #16]
 802bfb6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bfb8:	6812      	ldr	r2, [r2, #0]
 802bfba:	6824      	ldr	r4, [r4, #0]
 802bfbc:	fb52 f214 	smmulr	r2, r2, r4
 802bfc0:	fa82 f280 	qadd	r2, r0, r2
 802bfc4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bfc6:	0052      	lsls	r2, r2, #1
 802bfc8:	6002      	str	r2, [r0, #0]
 802bfca:	9a04      	ldr	r2, [sp, #16]
 802bfcc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802bfce:	4290      	cmp	r0, r2
 802bfd0:	bf9d      	ittte	ls
 802bfd2:	9a03      	ldrls	r2, [sp, #12]
 802bfd4:	f502 42de 	addls.w	r2, r2, #28416	@ 0x6f00
 802bfd8:	3260      	addls	r2, #96	@ 0x60
 802bfda:	3204      	addhi	r2, #4
 802bfdc:	9204      	str	r2, [sp, #16]
 802bfde:	4a48      	ldr	r2, [pc, #288]	@ (802c100 <hpv_2+0x77c>)
 802bfe0:	fb53 f312 	smmulr	r3, r3, r2
 802bfe4:	9808      	ldr	r0, [sp, #32]
 802bfe6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802bfe8:	005b      	lsls	r3, r3, #1
 802bfea:	f840 3b04 	str.w	r3, [r0], #4
 802bfee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bff0:	9008      	str	r0, [sp, #32]
 802bff2:	3201      	adds	r2, #1
 802bff4:	4293      	cmp	r3, r2
 802bff6:	920f      	str	r2, [sp, #60]	@ 0x3c
 802bff8:	d07c      	beq.n	802c0f4 <hpv_2+0x770>
 802bffa:	f8d8 3000 	ldr.w	r3, [r8]
 802bffe:	f8de 2000 	ldr.w	r2, [lr]
 802c002:	fa82 f383 	qadd	r3, r3, r2
 802c006:	f8d9 0000 	ldr.w	r0, [r9]
 802c00a:	fa83 f080 	qadd	r0, r0, r3
 802c00e:	682b      	ldr	r3, [r5, #0]
 802c010:	fa80 f083 	qadd	r0, r3, r0
 802c014:	2800      	cmp	r0, #0
 802c016:	9a05      	ldr	r2, [sp, #20]
 802c018:	bfb8      	it	lt
 802c01a:	3003      	addlt	r0, #3
 802c01c:	1080      	asrs	r0, r0, #2
 802c01e:	4613      	mov	r3, r2
 802c020:	6010      	str	r0, [r2, #0]
 802c022:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c024:	4293      	cmp	r3, r2
 802c026:	f4bf aeb0 	bcs.w	802bd8a <hpv_2+0x406>
 802c02a:	9b05      	ldr	r3, [sp, #20]
 802c02c:	3304      	adds	r3, #4
 802c02e:	9305      	str	r3, [sp, #20]
 802c030:	e6b0      	b.n	802bd94 <hpv_2+0x410>
 802c032:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c034:	3304      	adds	r3, #4
 802c036:	9309      	str	r3, [sp, #36]	@ 0x24
 802c038:	e6c9      	b.n	802bdce <hpv_2+0x44a>
 802c03a:	9509      	str	r5, [sp, #36]	@ 0x24
 802c03c:	f8dd e044 	ldr.w	lr, [sp, #68]	@ 0x44
 802c040:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
 802c044:	f8dd c058 	ldr.w	ip, [sp, #88]	@ 0x58
 802c048:	f8dd b05c 	ldr.w	fp, [sp, #92]	@ 0x5c
 802c04c:	9d18      	ldr	r5, [sp, #96]	@ 0x60
 802c04e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802c052:	9006      	str	r0, [sp, #24]
 802c054:	9613      	str	r6, [sp, #76]	@ 0x4c
 802c056:	9704      	str	r7, [sp, #16]
 802c058:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802c05a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 802c05c:	78db      	ldrb	r3, [r3, #3]
 802c05e:	9303      	str	r3, [sp, #12]
 802c060:	f248 7360 	movw	r3, #34656	@ 0x8760
 802c064:	f248 7264 	movw	r2, #34660	@ 0x8764
 802c068:	f848 1003 	str.w	r1, [r8, r3]
 802c06c:	9e04      	ldr	r6, [sp, #16]
 802c06e:	f848 6002 	str.w	r6, [r8, r2]
 802c072:	f248 7168 	movw	r1, #34664	@ 0x8768
 802c076:	f248 736c 	movw	r3, #34668	@ 0x876c
 802c07a:	9f05      	ldr	r7, [sp, #20]
 802c07c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802c07e:	f848 7001 	str.w	r7, [r8, r1]
 802c082:	f644 16a0 	movw	r6, #18848	@ 0x49a0
 802c086:	f848 2003 	str.w	r2, [r8, r3]
 802c08a:	f644 10a4 	movw	r0, #18852	@ 0x49a4
 802c08e:	f644 13ac 	movw	r3, #18860	@ 0x49ac
 802c092:	f644 17b0 	movw	r7, #18864	@ 0x49b0
 802c096:	f644 11b4 	movw	r1, #18868	@ 0x49b4
 802c09a:	f644 1aa8 	movw	sl, #18856	@ 0x49a8
 802c09e:	9a06      	ldr	r2, [sp, #24]
 802c0a0:	f848 4006 	str.w	r4, [r8, r6]
 802c0a4:	f848 2000 	str.w	r2, [r8, r0]
 802c0a8:	f848 e007 	str.w	lr, [r8, r7]
 802c0ac:	f848 c001 	str.w	ip, [r8, r1]
 802c0b0:	f848 900a 	str.w	r9, [r8, sl]
 802c0b4:	f848 b003 	str.w	fp, [r8, r3]
 802c0b8:	9b03      	ldr	r3, [sp, #12]
 802c0ba:	f644 149c 	movw	r4, #18844	@ 0x499c
 802c0be:	2b01      	cmp	r3, #1
 802c0c0:	f848 5004 	str.w	r5, [r8, r4]
 802c0c4:	f000 8212 	beq.w	802c4ec <hpv_2+0xb68>
 802c0c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802c0ca:	b183      	cbz	r3, 802c0ee <hpv_2+0x76a>
 802c0cc:	9e25      	ldr	r6, [sp, #148]	@ 0x94
 802c0ce:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 802c0d0:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802c0d2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802c0d4:	461f      	mov	r7, r3
 802c0d6:	2300      	movs	r3, #0
 802c0d8:	e8f6 8902 	ldrd	r8, r9, [r6], #8
 802c0dc:	e8f2 4502 	ldrd	r4, r5, [r2], #8
 802c0e0:	3301      	adds	r3, #1
 802c0e2:	429f      	cmp	r7, r3
 802c0e4:	e8e0 8902 	strd	r8, r9, [r0], #8
 802c0e8:	e8e1 4502 	strd	r4, r5, [r1], #8
 802c0ec:	d1f4      	bne.n	802c0d8 <hpv_2+0x754>
 802c0ee:	b02b      	add	sp, #172	@ 0xac
 802c0f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c0f4:	4644      	mov	r4, r8
 802c0f6:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802c0fa:	f8dd 800c 	ldr.w	r8, [sp, #12]
 802c0fe:	e7ab      	b.n	802c058 <hpv_2+0x6d4>
 802c100:	5a7ef9db 	.word	0x5a7ef9db
 802c104:	f8cd a014 	str.w	sl, [sp, #20]
 802c108:	f8dd c00c 	ldr.w	ip, [sp, #12]
 802c10c:	f8dd a090 	ldr.w	sl, [sp, #144]	@ 0x90
 802c110:	468e      	mov	lr, r1
 802c112:	f04f 0900 	mov.w	r9, #0
 802c116:	e89c 0003 	ldmia.w	ip, {r0, r1}
 802c11a:	f8de 6000 	ldr.w	r6, [lr]
 802c11e:	f8de 5004 	ldr.w	r5, [lr, #4]
 802c122:	fa80 f2a6 	qsub	r2, r6, r0
 802c126:	fa81 f3a5 	qsub	r3, r5, r1
 802c12a:	1040      	asrs	r0, r0, #1
 802c12c:	f8d8 7018 	ldr.w	r7, [r8, #24]
 802c130:	fb52 0017 	smmlar	r0, r2, r7, r0
 802c134:	1049      	asrs	r1, r1, #1
 802c136:	fb53 1117 	smmlar	r1, r3, r7, r1
 802c13a:	0040      	lsls	r0, r0, #1
 802c13c:	f84c 0b08 	str.w	r0, [ip], #8
 802c140:	0049      	lsls	r1, r1, #1
 802c142:	f84c 1c04 	str.w	r1, [ip, #-4]
 802c146:	4252      	negs	r2, r2
 802c148:	1076      	asrs	r6, r6, #1
 802c14a:	f8d8 0018 	ldr.w	r0, [r8, #24]
 802c14e:	fb52 6210 	smmlar	r2, r2, r0, r6
 802c152:	4259      	negs	r1, r3
 802c154:	106d      	asrs	r5, r5, #1
 802c156:	fb51 5310 	smmlar	r3, r1, r0, r5
 802c15a:	0052      	lsls	r2, r2, #1
 802c15c:	f84e 2b08 	str.w	r2, [lr], #8
 802c160:	f109 0901 	add.w	r9, r9, #1
 802c164:	005b      	lsls	r3, r3, #1
 802c166:	45d1      	cmp	r9, sl
 802c168:	f84e 3c04 	str.w	r3, [lr, #-4]
 802c16c:	d1d3      	bne.n	802c116 <hpv_2+0x792>
 802c16e:	f8dd a014 	ldr.w	sl, [sp, #20]
 802c172:	46d4      	mov	ip, sl
 802c174:	f8dd a090 	ldr.w	sl, [sp, #144]	@ 0x90
 802c178:	46de      	mov	lr, fp
 802c17a:	f04f 0900 	mov.w	r9, #0
 802c17e:	e89c 0003 	ldmia.w	ip, {r0, r1}
 802c182:	f8de 6000 	ldr.w	r6, [lr]
 802c186:	f8de 5004 	ldr.w	r5, [lr, #4]
 802c18a:	fa86 f2a0 	qsub	r2, r0, r6
 802c18e:	fa85 f3a1 	qsub	r3, r1, r5
 802c192:	1040      	asrs	r0, r0, #1
 802c194:	f8d8 7014 	ldr.w	r7, [r8, #20]
 802c198:	fb52 0017 	smmlar	r0, r2, r7, r0
 802c19c:	1049      	asrs	r1, r1, #1
 802c19e:	fb53 1117 	smmlar	r1, r3, r7, r1
 802c1a2:	0040      	lsls	r0, r0, #1
 802c1a4:	f84c 0b08 	str.w	r0, [ip], #8
 802c1a8:	0049      	lsls	r1, r1, #1
 802c1aa:	f84c 1c04 	str.w	r1, [ip, #-4]
 802c1ae:	4252      	negs	r2, r2
 802c1b0:	1076      	asrs	r6, r6, #1
 802c1b2:	f8d8 0014 	ldr.w	r0, [r8, #20]
 802c1b6:	fb52 6210 	smmlar	r2, r2, r0, r6
 802c1ba:	4259      	negs	r1, r3
 802c1bc:	106d      	asrs	r5, r5, #1
 802c1be:	fb51 5310 	smmlar	r3, r1, r0, r5
 802c1c2:	0052      	lsls	r2, r2, #1
 802c1c4:	f84e 2b08 	str.w	r2, [lr], #8
 802c1c8:	f109 0901 	add.w	r9, r9, #1
 802c1cc:	005b      	lsls	r3, r3, #1
 802c1ce:	45d1      	cmp	r9, sl
 802c1d0:	f84e 3c04 	str.w	r3, [lr, #-4]
 802c1d4:	d1d3      	bne.n	802c17e <hpv_2+0x7fa>
 802c1d6:	f8dd a014 	ldr.w	sl, [sp, #20]
 802c1da:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c1de:	075a      	lsls	r2, r3, #29
 802c1e0:	f57f ac40 	bpl.w	802ba64 <hpv_2+0xe0>
 802c1e4:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802c1e8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802c1ea:	f858 3003 	ldr.w	r3, [r8, r3]
 802c1ee:	9300      	str	r3, [sp, #0]
 802c1f0:	f508 4695 	add.w	r6, r8, #19072	@ 0x4a80
 802c1f4:	f508 52a8 	add.w	r2, r8, #5376	@ 0x1500
 802c1f8:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c1fc:	463b      	mov	r3, r7
 802c1fe:	321c      	adds	r2, #28
 802c200:	3138      	adds	r1, #56	@ 0x38
 802c202:	4620      	mov	r0, r4
 802c204:	f7fe ff00 	bl	802b008 <ER_Gen>
 802c208:	f108 091c 	add.w	r9, r8, #28
 802c20c:	6833      	ldr	r3, [r6, #0]
 802c20e:	9300      	str	r3, [sp, #0]
 802c210:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c214:	463b      	mov	r3, r7
 802c216:	464a      	mov	r2, r9
 802c218:	3154      	adds	r1, #84	@ 0x54
 802c21a:	4620      	mov	r0, r4
 802c21c:	970a      	str	r7, [sp, #40]	@ 0x28
 802c21e:	f7fe fef3 	bl	802b008 <ER_Gen>
 802c222:	6833      	ldr	r3, [r6, #0]
 802c224:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802c226:	9300      	str	r3, [sp, #0]
 802c228:	f644 2784 	movw	r7, #19076	@ 0x4a84
 802c22c:	f608 259c 	addw	r5, r8, #2716	@ 0xa9c
 802c230:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c234:	4633      	mov	r3, r6
 802c236:	462a      	mov	r2, r5
 802c238:	3170      	adds	r1, #112	@ 0x70
 802c23a:	4620      	mov	r0, r4
 802c23c:	f7fe fee4 	bl	802b008 <ER_Gen>
 802c240:	f858 3007 	ldr.w	r3, [r8, r7]
 802c244:	9300      	str	r3, [sp, #0]
 802c246:	f508 52fc 	add.w	r2, r8, #8064	@ 0x1f80
 802c24a:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c24e:	4633      	mov	r3, r6
 802c250:	321c      	adds	r2, #28
 802c252:	3144      	adds	r1, #68	@ 0x44
 802c254:	4620      	mov	r0, r4
 802c256:	960a      	str	r6, [sp, #40]	@ 0x28
 802c258:	f7fe fed6 	bl	802b008 <ER_Gen>
 802c25c:	f858 3007 	ldr.w	r3, [r8, r7]
 802c260:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802c262:	9300      	str	r3, [sp, #0]
 802c264:	f644 2688 	movw	r6, #19080	@ 0x4a88
 802c268:	f508 5228 	add.w	r2, r8, #10752	@ 0x2a00
 802c26c:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c270:	321c      	adds	r2, #28
 802c272:	3160      	adds	r1, #96	@ 0x60
 802c274:	463b      	mov	r3, r7
 802c276:	4620      	mov	r0, r4
 802c278:	f7fe fec6 	bl	802b008 <ER_Gen>
 802c27c:	f858 3006 	ldr.w	r3, [r8, r6]
 802c280:	9300      	str	r3, [sp, #0]
 802c282:	f508 5252 	add.w	r2, r8, #13440	@ 0x3480
 802c286:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c28a:	321c      	adds	r2, #28
 802c28c:	310c      	adds	r1, #12
 802c28e:	463b      	mov	r3, r7
 802c290:	4620      	mov	r0, r4
 802c292:	f7fe feb9 	bl	802b008 <ER_Gen>
 802c296:	f858 3006 	ldr.w	r3, [r8, r6]
 802c29a:	9300      	str	r3, [sp, #0]
 802c29c:	f508 527c 	add.w	r2, r8, #16128	@ 0x3f00
 802c2a0:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c2a4:	321c      	adds	r2, #28
 802c2a6:	463b      	mov	r3, r7
 802c2a8:	4620      	mov	r0, r4
 802c2aa:	3128      	adds	r1, #40	@ 0x28
 802c2ac:	f7fe feac 	bl	802b008 <ER_Gen>
 802c2b0:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c2b4:	f8cd 9084 	str.w	r9, [sp, #132]	@ 0x84
 802c2b8:	f003 0203 	and.w	r2, r3, #3
 802c2bc:	2a03      	cmp	r2, #3
 802c2be:	9520      	str	r5, [sp, #128]	@ 0x80
 802c2c0:	f47f abdb 	bne.w	802ba7a <hpv_2+0xf6>
 802c2c4:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802c2c8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c2ca:	f8dd 908c 	ldr.w	r9, [sp, #140]	@ 0x8c
 802c2ce:	f858 3003 	ldr.w	r3, [r8, r3]
 802c2d2:	9300      	str	r3, [sp, #0]
 802c2d4:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c2d8:	4623      	mov	r3, r4
 802c2da:	3158      	adds	r1, #88	@ 0x58
 802c2dc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802c2de:	4648      	mov	r0, r9
 802c2e0:	f7fe fe92 	bl	802b008 <ER_Gen>
 802c2e4:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c2e8:	f003 03f7 	and.w	r3, r3, #247	@ 0xf7
 802c2ec:	2b03      	cmp	r3, #3
 802c2ee:	f108 0604 	add.w	r6, r8, #4
 802c2f2:	d053      	beq.n	802c39c <hpv_2+0xa18>
 802c2f4:	f644 2784 	movw	r7, #19076	@ 0x4a84
 802c2f8:	f508 4595 	add.w	r5, r8, #19072	@ 0x4a80
 802c2fc:	f858 3007 	ldr.w	r3, [r8, r7]
 802c300:	9300      	str	r3, [sp, #0]
 802c302:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c306:	4623      	mov	r3, r4
 802c308:	4648      	mov	r0, r9
 802c30a:	3174      	adds	r1, #116	@ 0x74
 802c30c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802c30e:	f7fe fe7b 	bl	802b008 <ER_Gen>
 802c312:	682b      	ldr	r3, [r5, #0]
 802c314:	9300      	str	r3, [sp, #0]
 802c316:	f508 52a8 	add.w	r2, r8, #5376	@ 0x1500
 802c31a:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c31e:	4623      	mov	r3, r4
 802c320:	4648      	mov	r0, r9
 802c322:	321c      	adds	r2, #28
 802c324:	313c      	adds	r1, #60	@ 0x3c
 802c326:	940a      	str	r4, [sp, #40]	@ 0x28
 802c328:	f7fe fe6e 	bl	802b008 <ER_Gen>
 802c32c:	682b      	ldr	r3, [r5, #0]
 802c32e:	9300      	str	r3, [sp, #0]
 802c330:	f508 52fc 	add.w	r2, r8, #8064	@ 0x1f80
 802c334:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c338:	4648      	mov	r0, r9
 802c33a:	f644 2488 	movw	r4, #19080	@ 0x4a88
 802c33e:	321c      	adds	r2, #28
 802c340:	3148      	adds	r1, #72	@ 0x48
 802c342:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c344:	f7fe fe60 	bl	802b008 <ER_Gen>
 802c348:	464d      	mov	r5, r9
 802c34a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802c34e:	f858 3004 	ldr.w	r3, [r8, r4]
 802c352:	9300      	str	r3, [sp, #0]
 802c354:	f508 5228 	add.w	r2, r8, #10752	@ 0x2a00
 802c358:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c35c:	321c      	adds	r2, #28
 802c35e:	3164      	adds	r1, #100	@ 0x64
 802c360:	464b      	mov	r3, r9
 802c362:	4628      	mov	r0, r5
 802c364:	f7fe fe50 	bl	802b008 <ER_Gen>
 802c368:	f858 3007 	ldr.w	r3, [r8, r7]
 802c36c:	9300      	str	r3, [sp, #0]
 802c36e:	f508 5252 	add.w	r2, r8, #13440	@ 0x3480
 802c372:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c376:	321c      	adds	r2, #28
 802c378:	3110      	adds	r1, #16
 802c37a:	464b      	mov	r3, r9
 802c37c:	4628      	mov	r0, r5
 802c37e:	f7fe fe43 	bl	802b008 <ER_Gen>
 802c382:	f858 3004 	ldr.w	r3, [r8, r4]
 802c386:	9300      	str	r3, [sp, #0]
 802c388:	f508 527c 	add.w	r2, r8, #16128	@ 0x3f00
 802c38c:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c390:	321c      	adds	r2, #28
 802c392:	312c      	adds	r1, #44	@ 0x2c
 802c394:	464b      	mov	r3, r9
 802c396:	4628      	mov	r0, r5
 802c398:	f7fe fe36 	bl	802b008 <ER_Gen>
 802c39c:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802c3a0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c3a2:	f8dd 909c 	ldr.w	r9, [sp, #156]	@ 0x9c
 802c3a6:	f858 3003 	ldr.w	r3, [r8, r3]
 802c3aa:	9300      	str	r3, [sp, #0]
 802c3ac:	f506 4193 	add.w	r1, r6, #18816	@ 0x4980
 802c3b0:	4623      	mov	r3, r4
 802c3b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802c3b4:	3174      	adds	r1, #116	@ 0x74
 802c3b6:	4648      	mov	r0, r9
 802c3b8:	f7fe fe26 	bl	802b008 <ER_Gen>
 802c3bc:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c3c0:	f003 02f7 	and.w	r2, r3, #247	@ 0xf7
 802c3c4:	2a03      	cmp	r2, #3
 802c3c6:	f000 8371 	beq.w	802caac <hpv_2+0x1128>
 802c3ca:	f644 2784 	movw	r7, #19076	@ 0x4a84
 802c3ce:	f508 4595 	add.w	r5, r8, #19072	@ 0x4a80
 802c3d2:	f858 3007 	ldr.w	r3, [r8, r7]
 802c3d6:	9300      	str	r3, [sp, #0]
 802c3d8:	f506 4193 	add.w	r1, r6, #18816	@ 0x4980
 802c3dc:	4623      	mov	r3, r4
 802c3de:	4648      	mov	r0, r9
 802c3e0:	3158      	adds	r1, #88	@ 0x58
 802c3e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802c3e4:	940a      	str	r4, [sp, #40]	@ 0x28
 802c3e6:	f7fe fe0f 	bl	802b008 <ER_Gen>
 802c3ea:	f644 2488 	movw	r4, #19080	@ 0x4a88
 802c3ee:	682b      	ldr	r3, [r5, #0]
 802c3f0:	9300      	str	r3, [sp, #0]
 802c3f2:	f506 52a8 	add.w	r2, r6, #5376	@ 0x1500
 802c3f6:	f506 4193 	add.w	r1, r6, #18816	@ 0x4980
 802c3fa:	4648      	mov	r0, r9
 802c3fc:	3218      	adds	r2, #24
 802c3fe:	313c      	adds	r1, #60	@ 0x3c
 802c400:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c402:	f7fe fe01 	bl	802b008 <ER_Gen>
 802c406:	f858 3004 	ldr.w	r3, [r8, r4]
 802c40a:	9300      	str	r3, [sp, #0]
 802c40c:	f506 52fc 	add.w	r2, r6, #8064	@ 0x1f80
 802c410:	f506 4194 	add.w	r1, r6, #18944	@ 0x4a00
 802c414:	4648      	mov	r0, r9
 802c416:	3218      	adds	r2, #24
 802c418:	3148      	adds	r1, #72	@ 0x48
 802c41a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c41c:	f7fe fdf4 	bl	802b008 <ER_Gen>
 802c420:	682b      	ldr	r3, [r5, #0]
 802c422:	9300      	str	r3, [sp, #0]
 802c424:	f506 5228 	add.w	r2, r6, #10752	@ 0x2a00
 802c428:	f506 4194 	add.w	r1, r6, #18944	@ 0x4a00
 802c42c:	4648      	mov	r0, r9
 802c42e:	3218      	adds	r2, #24
 802c430:	3164      	adds	r1, #100	@ 0x64
 802c432:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c434:	f7fe fde8 	bl	802b008 <ER_Gen>
 802c438:	464d      	mov	r5, r9
 802c43a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802c43e:	f858 3004 	ldr.w	r3, [r8, r4]
 802c442:	9300      	str	r3, [sp, #0]
 802c444:	f506 5252 	add.w	r2, r6, #13440	@ 0x3480
 802c448:	f506 4194 	add.w	r1, r6, #18944	@ 0x4a00
 802c44c:	3218      	adds	r2, #24
 802c44e:	3110      	adds	r1, #16
 802c450:	464b      	mov	r3, r9
 802c452:	4628      	mov	r0, r5
 802c454:	f7fe fdd8 	bl	802b008 <ER_Gen>
 802c458:	f858 3007 	ldr.w	r3, [r8, r7]
 802c45c:	9300      	str	r3, [sp, #0]
 802c45e:	f506 527c 	add.w	r2, r6, #16128	@ 0x3f00
 802c462:	f506 4194 	add.w	r1, r6, #18944	@ 0x4a00
 802c466:	464b      	mov	r3, r9
 802c468:	3218      	adds	r2, #24
 802c46a:	312c      	adds	r1, #44	@ 0x2c
 802c46c:	4628      	mov	r0, r5
 802c46e:	f7fe fdcb 	bl	802b008 <ER_Gen>
 802c472:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c476:	f7ff bb00 	b.w	802ba7a <hpv_2+0xf6>
 802c47a:	46d4      	mov	ip, sl
 802c47c:	f8cd a014 	str.w	sl, [sp, #20]
 802c480:	f8dd a090 	ldr.w	sl, [sp, #144]	@ 0x90
 802c484:	46de      	mov	lr, fp
 802c486:	f04f 0900 	mov.w	r9, #0
 802c48a:	e89c 0003 	ldmia.w	ip, {r0, r1}
 802c48e:	f8de 6000 	ldr.w	r6, [lr]
 802c492:	f8de 5004 	ldr.w	r5, [lr, #4]
 802c496:	fa80 f2a6 	qsub	r2, r6, r0
 802c49a:	fa81 f3a5 	qsub	r3, r5, r1
 802c49e:	1040      	asrs	r0, r0, #1
 802c4a0:	f8d8 7018 	ldr.w	r7, [r8, #24]
 802c4a4:	fb52 0017 	smmlar	r0, r2, r7, r0
 802c4a8:	1049      	asrs	r1, r1, #1
 802c4aa:	fb53 1117 	smmlar	r1, r3, r7, r1
 802c4ae:	0040      	lsls	r0, r0, #1
 802c4b0:	f84c 0b08 	str.w	r0, [ip], #8
 802c4b4:	0049      	lsls	r1, r1, #1
 802c4b6:	f84c 1c04 	str.w	r1, [ip, #-4]
 802c4ba:	4252      	negs	r2, r2
 802c4bc:	1076      	asrs	r6, r6, #1
 802c4be:	f8d8 0018 	ldr.w	r0, [r8, #24]
 802c4c2:	fb52 6210 	smmlar	r2, r2, r0, r6
 802c4c6:	4259      	negs	r1, r3
 802c4c8:	106d      	asrs	r5, r5, #1
 802c4ca:	fb51 5310 	smmlar	r3, r1, r0, r5
 802c4ce:	0052      	lsls	r2, r2, #1
 802c4d0:	f84e 2b08 	str.w	r2, [lr], #8
 802c4d4:	f109 0901 	add.w	r9, r9, #1
 802c4d8:	005b      	lsls	r3, r3, #1
 802c4da:	45d1      	cmp	r9, sl
 802c4dc:	f84e 3c04 	str.w	r3, [lr, #-4]
 802c4e0:	d1d3      	bne.n	802c48a <hpv_2+0xb06>
 802c4e2:	f8dd a014 	ldr.w	sl, [sp, #20]
 802c4e6:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c4ea:	e678      	b.n	802c1de <hpv_2+0x85a>
 802c4ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c4ee:	2b00      	cmp	r3, #0
 802c4f0:	f43f adea 	beq.w	802c0c8 <hpv_2+0x744>
 802c4f4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802c4f6:	9926      	ldr	r1, [sp, #152]	@ 0x98
 802c4f8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 802c4fa:	f202 447c 	addw	r4, r2, #1148	@ 0x47c
 802c4fe:	eb01 0583 	add.w	r5, r1, r3, lsl #2
 802c502:	f854 3f04 	ldr.w	r3, [r4, #4]!
 802c506:	6802      	ldr	r2, [r0, #0]
 802c508:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802c50c:	105b      	asrs	r3, r3, #1
 802c50e:	fa82 f283 	qadd	r2, r3, r2
 802c512:	680e      	ldr	r6, [r1, #0]
 802c514:	fa86 f383 	qadd	r3, r3, r6
 802c518:	f840 2b04 	str.w	r2, [r0], #4
 802c51c:	f841 3b04 	str.w	r3, [r1], #4
 802c520:	42a9      	cmp	r1, r5
 802c522:	d1ee      	bne.n	802c502 <hpv_2+0xb7e>
 802c524:	e5d0      	b.n	802c0c8 <hpv_2+0x744>
 802c526:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c528:	2b00      	cmp	r3, #0
 802c52a:	f43f ad95 	beq.w	802c058 <hpv_2+0x6d4>
 802c52e:	f508 51a8 	add.w	r1, r8, #5376	@ 0x1500
 802c532:	910f      	str	r1, [sp, #60]	@ 0x3c
 802c534:	f508 43de 	add.w	r3, r8, #28416	@ 0x6f00
 802c538:	f103 0a5c 	add.w	sl, r3, #92	@ 0x5c
 802c53c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802c53e:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802c542:	f508 4207 	add.w	r2, r8, #34560	@ 0x8700
 802c546:	3318      	adds	r3, #24
 802c548:	930f      	str	r3, [sp, #60]	@ 0x3c
 802c54a:	4613      	mov	r3, r2
 802c54c:	337c      	adds	r3, #124	@ 0x7c
 802c54e:	930e      	str	r3, [sp, #56]	@ 0x38
 802c550:	f102 0380 	add.w	r3, r2, #128	@ 0x80
 802c554:	f102 0a5c 	add.w	sl, r2, #92	@ 0x5c
 802c558:	4611      	mov	r1, r2
 802c55a:	f508 40ae 	add.w	r0, r8, #22272	@ 0x5700
 802c55e:	9312      	str	r3, [sp, #72]	@ 0x48
 802c560:	f102 0370 	add.w	r3, r2, #112	@ 0x70
 802c564:	3274      	adds	r2, #116	@ 0x74
 802c566:	9e25      	ldr	r6, [sp, #148]	@ 0x94
 802c568:	9314      	str	r3, [sp, #80]	@ 0x50
 802c56a:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c56c:	f100 0358 	add.w	r3, r0, #88	@ 0x58
 802c570:	f608 2298 	addw	r2, r8, #2712	@ 0xa98
 802c574:	305c      	adds	r0, #92	@ 0x5c
 802c576:	900c      	str	r0, [sp, #48]	@ 0x30
 802c578:	3178      	adds	r1, #120	@ 0x78
 802c57a:	9210      	str	r2, [sp, #64]	@ 0x40
 802c57c:	2200      	movs	r2, #0
 802c57e:	f8cd a00c 	str.w	sl, [sp, #12]
 802c582:	f8cd e044 	str.w	lr, [sp, #68]	@ 0x44
 802c586:	f8cd c058 	str.w	ip, [sp, #88]	@ 0x58
 802c58a:	f8cd b05c 	str.w	fp, [sp, #92]	@ 0x5c
 802c58e:	9518      	str	r5, [sp, #96]	@ 0x60
 802c590:	9f04      	ldr	r7, [sp, #16]
 802c592:	f8dd a098 	ldr.w	sl, [sp, #152]	@ 0x98
 802c596:	9208      	str	r2, [sp, #32]
 802c598:	46b3      	mov	fp, r6
 802c59a:	f8cd 9054 	str.w	r9, [sp, #84]	@ 0x54
 802c59e:	9806      	ldr	r0, [sp, #24]
 802c5a0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802c5a2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 802c5a4:	f8cd 801c 	str.w	r8, [sp, #28]
 802c5a8:	469c      	mov	ip, r3
 802c5aa:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 802c5ae:	9104      	str	r1, [sp, #16]
 802c5b0:	e094      	b.n	802c6dc <hpv_2+0xd58>
 802c5b2:	9b07      	ldr	r3, [sp, #28]
 802c5b4:	f503 43ae 	add.w	r3, r3, #22272	@ 0x5700
 802c5b8:	3360      	adds	r3, #96	@ 0x60
 802c5ba:	9305      	str	r3, [sp, #20]
 802c5bc:	6803      	ldr	r3, [r0, #0]
 802c5be:	602b      	str	r3, [r5, #0]
 802c5c0:	9b03      	ldr	r3, [sp, #12]
 802c5c2:	497c      	ldr	r1, [pc, #496]	@ (802c7b4 <hpv_2+0xe30>)
 802c5c4:	429d      	cmp	r5, r3
 802c5c6:	bf23      	ittte	cs
 802c5c8:	9b07      	ldrcs	r3, [sp, #28]
 802c5ca:	f503 45de 	addcs.w	r5, r3, #28416	@ 0x6f00
 802c5ce:	3560      	addcs	r5, #96	@ 0x60
 802c5d0:	3504      	addcc	r5, #4
 802c5d2:	6823      	ldr	r3, [r4, #0]
 802c5d4:	fb51 f313 	smmulr	r3, r1, r3
 802c5d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802c5da:	4a77      	ldr	r2, [pc, #476]	@ (802c7b8 <hpv_2+0xe34>)
 802c5dc:	6809      	ldr	r1, [r1, #0]
 802c5de:	fb52 f811 	smmulr	r8, r2, r1
 802c5e2:	fa88 f883 	qadd	r8, r3, r8
 802c5e6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802c5e8:	9a04      	ldr	r2, [sp, #16]
 802c5ea:	f308 081e 	ssat	r8, #31, r8
 802c5ee:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802c5f2:	600b      	str	r3, [r1, #0]
 802c5f4:	6812      	ldr	r2, [r2, #0]
 802c5f6:	fb53 f312 	smmulr	r3, r3, r2
 802c5fa:	6023      	str	r3, [r4, #0]
 802c5fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802c5fe:	4a6d      	ldr	r2, [pc, #436]	@ (802c7b4 <hpv_2+0xe30>)
 802c600:	429c      	cmp	r4, r3
 802c602:	bf34      	ite	cc
 802c604:	3404      	addcc	r4, #4
 802c606:	9c21      	ldrcs	r4, [sp, #132]	@ 0x84
 802c608:	6803      	ldr	r3, [r0, #0]
 802c60a:	fb52 f313 	smmulr	r3, r2, r3
 802c60e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802c610:	680a      	ldr	r2, [r1, #0]
 802c612:	4969      	ldr	r1, [pc, #420]	@ (802c7b8 <hpv_2+0xe34>)
 802c614:	fb51 f812 	smmulr	r8, r1, r2
 802c618:	fa88 f883 	qadd	r8, r3, r8
 802c61c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802c61e:	9a04      	ldr	r2, [sp, #16]
 802c620:	f308 081e 	ssat	r8, #31, r8
 802c624:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802c628:	600b      	str	r3, [r1, #0]
 802c62a:	6812      	ldr	r2, [r2, #0]
 802c62c:	fb53 f312 	smmulr	r3, r3, r2
 802c630:	141b      	asrs	r3, r3, #16
 802c632:	6003      	str	r3, [r0, #0]
 802c634:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802c636:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802c638:	f8db 2000 	ldr.w	r2, [fp]
 802c63c:	4298      	cmp	r0, r3
 802c63e:	bf34      	ite	cc
 802c640:	3004      	addcc	r0, #4
 802c642:	9820      	ldrcs	r0, [sp, #128]	@ 0x80
 802c644:	680b      	ldr	r3, [r1, #0]
 802c646:	fa82 f883 	qadd	r8, r3, r2
 802c64a:	f8dc 2000 	ldr.w	r2, [ip]
 802c64e:	fb53 f912 	smmulr	r9, r3, r2
 802c652:	6833      	ldr	r3, [r6, #0]
 802c654:	f8de 2000 	ldr.w	r2, [lr]
 802c658:	fb53 f312 	smmulr	r3, r3, r2
 802c65c:	fa83 f389 	qadd	r3, r9, r3
 802c660:	005b      	lsls	r3, r3, #1
 802c662:	600b      	str	r3, [r1, #0]
 802c664:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c666:	429e      	cmp	r6, r3
 802c668:	bf23      	ittte	cs
 802c66a:	9b07      	ldrcs	r3, [sp, #28]
 802c66c:	f503 46ae 	addcs.w	r6, r3, #22272	@ 0x5700
 802c670:	3660      	addcs	r6, #96	@ 0x60
 802c672:	3604      	addcc	r6, #4
 802c674:	4b51      	ldr	r3, [pc, #324]	@ (802c7bc <hpv_2+0xe38>)
 802c676:	fb58 f313 	smmulr	r3, r8, r3
 802c67a:	005b      	lsls	r3, r3, #1
 802c67c:	f84b 3b04 	str.w	r3, [fp], #4
 802c680:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c682:	f8da 3000 	ldr.w	r3, [sl]
 802c686:	f8d1 8000 	ldr.w	r8, [r1]
 802c68a:	fa83 f388 	qadd	r3, r8, r3
 802c68e:	f8dc 2000 	ldr.w	r2, [ip]
 802c692:	fb58 f812 	smmulr	r8, r8, r2
 802c696:	683a      	ldr	r2, [r7, #0]
 802c698:	4691      	mov	r9, r2
 802c69a:	f8de 2000 	ldr.w	r2, [lr]
 802c69e:	fb59 f912 	smmulr	r9, r9, r2
 802c6a2:	fa89 f888 	qadd	r8, r8, r9
 802c6a6:	9a03      	ldr	r2, [sp, #12]
 802c6a8:	4297      	cmp	r7, r2
 802c6aa:	bf28      	it	cs
 802c6ac:	9a07      	ldrcs	r2, [sp, #28]
 802c6ae:	ea4f 0848 	mov.w	r8, r8, lsl #1
 802c6b2:	bf28      	it	cs
 802c6b4:	f502 47de 	addcs.w	r7, r2, #28416	@ 0x6f00
 802c6b8:	f8c1 8000 	str.w	r8, [r1]
 802c6bc:	bf2c      	ite	cs
 802c6be:	3760      	addcs	r7, #96	@ 0x60
 802c6c0:	3704      	addcc	r7, #4
 802c6c2:	4a3e      	ldr	r2, [pc, #248]	@ (802c7bc <hpv_2+0xe38>)
 802c6c4:	fb53 f312 	smmulr	r3, r3, r2
 802c6c8:	005b      	lsls	r3, r3, #1
 802c6ca:	9908      	ldr	r1, [sp, #32]
 802c6cc:	f84a 3b04 	str.w	r3, [sl], #4
 802c6d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c6d2:	3101      	adds	r1, #1
 802c6d4:	428b      	cmp	r3, r1
 802c6d6:	9108      	str	r1, [sp, #32]
 802c6d8:	f43f acaf 	beq.w	802c03a <hpv_2+0x6b6>
 802c6dc:	9a05      	ldr	r2, [sp, #20]
 802c6de:	6823      	ldr	r3, [r4, #0]
 802c6e0:	6013      	str	r3, [r2, #0]
 802c6e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c6e4:	429a      	cmp	r2, r3
 802c6e6:	f4bf af64 	bcs.w	802c5b2 <hpv_2+0xc2e>
 802c6ea:	4613      	mov	r3, r2
 802c6ec:	3304      	adds	r3, #4
 802c6ee:	9305      	str	r3, [sp, #20]
 802c6f0:	e764      	b.n	802c5bc <hpv_2+0xc38>
 802c6f2:	2400      	movs	r4, #0
 802c6f4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802c6f6:	f828 4003 	strh.w	r4, [r8, r3]
 802c6fa:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 802c6fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c700:	fbb5 f0f3 	udiv	r0, r5, r3
 802c704:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802c706:	f502 5790 	add.w	r7, r2, #4608	@ 0x1200
 802c70a:	3704      	adds	r7, #4
 802c70c:	2b00      	cmp	r3, #0
 802c70e:	f43f aa8b 	beq.w	802bc28 <hpv_2+0x2a4>
 802c712:	9e25      	ldr	r6, [sp, #148]	@ 0x94
 802c714:	46a6      	mov	lr, r4
 802c716:	469c      	mov	ip, r3
 802c718:	f857 3b08 	ldr.w	r3, [r7], #8
 802c71c:	6871      	ldr	r1, [r6, #4]
 802c71e:	6832      	ldr	r2, [r6, #0]
 802c720:	fb52 f214 	smmulr	r2, r2, r4
 802c724:	fb53 2215 	smmlar	r2, r3, r5, r2
 802c728:	fa80 f484 	qadd	r4, r4, r0
 802c72c:	fa80 f5a5 	qsub	r5, r5, r0
 802c730:	fb51 f114 	smmulr	r1, r1, r4
 802c734:	f857 3c04 	ldr.w	r3, [r7, #-4]
 802c738:	fb53 1315 	smmlar	r3, r3, r5, r1
 802c73c:	fa80 f484 	qadd	r4, r4, r0
 802c740:	fa80 f5a5 	qsub	r5, r5, r0
 802c744:	0052      	lsls	r2, r2, #1
 802c746:	f846 2b08 	str.w	r2, [r6], #8
 802c74a:	f10e 0e01 	add.w	lr, lr, #1
 802c74e:	005b      	lsls	r3, r3, #1
 802c750:	45e6      	cmp	lr, ip
 802c752:	f846 3c04 	str.w	r3, [r6, #-4]
 802c756:	d1df      	bne.n	802c718 <hpv_2+0xd94>
 802c758:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c75a:	9e26      	ldr	r6, [sp, #152]	@ 0x98
 802c75c:	f8dd c090 	ldr.w	ip, [sp, #144]	@ 0x90
 802c760:	f503 579c 	add.w	r7, r3, #4992	@ 0x1380
 802c764:	2400      	movs	r4, #0
 802c766:	3704      	adds	r7, #4
 802c768:	46a6      	mov	lr, r4
 802c76a:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 802c76e:	f857 3b08 	ldr.w	r3, [r7], #8
 802c772:	6871      	ldr	r1, [r6, #4]
 802c774:	6832      	ldr	r2, [r6, #0]
 802c776:	fb52 f214 	smmulr	r2, r2, r4
 802c77a:	fb53 2215 	smmlar	r2, r3, r5, r2
 802c77e:	fa80 f484 	qadd	r4, r4, r0
 802c782:	fa80 f5a5 	qsub	r5, r5, r0
 802c786:	fb51 f114 	smmulr	r1, r1, r4
 802c78a:	f857 3c04 	ldr.w	r3, [r7, #-4]
 802c78e:	fb53 1315 	smmlar	r3, r3, r5, r1
 802c792:	fa80 f484 	qadd	r4, r4, r0
 802c796:	fa80 f5a5 	qsub	r5, r5, r0
 802c79a:	0052      	lsls	r2, r2, #1
 802c79c:	f846 2b08 	str.w	r2, [r6], #8
 802c7a0:	f10e 0e01 	add.w	lr, lr, #1
 802c7a4:	005b      	lsls	r3, r3, #1
 802c7a6:	45e6      	cmp	lr, ip
 802c7a8:	f846 3c04 	str.w	r3, [r6, #-4]
 802c7ac:	d1df      	bne.n	802c76e <hpv_2+0xdea>
 802c7ae:	f7ff ba3b 	b.w	802bc28 <hpv_2+0x2a4>
 802c7b2:	bf00      	nop
 802c7b4:	13333333 	.word	0x13333333
 802c7b8:	6ccccccc 	.word	0x6ccccccc
 802c7bc:	5a7ef9db 	.word	0x5a7ef9db
 802c7c0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802c7c2:	f502 5090 	add.w	r0, r2, #4608	@ 0x1200
 802c7c6:	f502 519c 	add.w	r1, r2, #4992	@ 0x1380
 802c7ca:	3014      	adds	r0, #20
 802c7cc:	3114      	adds	r1, #20
 802c7ce:	2400      	movs	r4, #0
 802c7d0:	2200      	movs	r2, #0
 802c7d2:	2300      	movs	r3, #0
 802c7d4:	3401      	adds	r4, #1
 802c7d6:	42ac      	cmp	r4, r5
 802c7d8:	e940 2304 	strd	r2, r3, [r0, #-16]
 802c7dc:	e940 2302 	strd	r2, r3, [r0, #-8]
 802c7e0:	f101 0110 	add.w	r1, r1, #16
 802c7e4:	e941 2308 	strd	r2, r3, [r1, #-32]
 802c7e8:	e941 2306 	strd	r2, r3, [r1, #-24]
 802c7ec:	f100 0010 	add.w	r0, r0, #16
 802c7f0:	d1f0      	bne.n	802c7d4 <hpv_2+0xe50>
 802c7f2:	f644 11a0 	movw	r1, #18848	@ 0x49a0
 802c7f6:	f245 62e8 	movw	r2, #22248	@ 0x56e8
 802c7fa:	f858 0001 	ldr.w	r0, [r8, r1]
 802c7fe:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 802c800:	f938 1002 	ldrsh.w	r1, [r8, r2]
 802c804:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802c808:	f245 64f4 	movw	r4, #22260	@ 0x56f4
 802c80c:	2200      	movs	r2, #0
 802c80e:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c812:	f8c6 2f00 	str.w	r2, [r6, #3840]	@ 0xf00
 802c816:	464a      	mov	r2, r9
 802c818:	e88d 0102 	stmia.w	sp, {r1, r8}
 802c81c:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802c81e:	f7fe fdaf 	bl	802b380 <HRTF_HT_FilterProcess>
 802c822:	f644 11a4 	movw	r1, #18852	@ 0x49a4
 802c826:	f245 62ea 	movw	r2, #22250	@ 0x56ea
 802c82a:	f858 0001 	ldr.w	r0, [r8, r1]
 802c82e:	f938 1002 	ldrsh.w	r1, [r8, r2]
 802c832:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c836:	2201      	movs	r2, #1
 802c838:	f8c6 2f00 	str.w	r2, [r6, #3840]	@ 0xf00
 802c83c:	e88d 0102 	stmia.w	sp, {r1, r8}
 802c840:	464a      	mov	r2, r9
 802c842:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802c844:	f7fe fd9c 	bl	802b380 <HRTF_HT_FilterProcess>
 802c848:	f898 3009 	ldrb.w	r3, [r8, #9]
 802c84c:	f003 03f7 	and.w	r3, r3, #247	@ 0xf7
 802c850:	2b03      	cmp	r3, #3
 802c852:	f43f a946 	beq.w	802bae2 <hpv_2+0x15e>
 802c856:	f245 62e6 	movw	r2, #22246	@ 0x56e6
 802c85a:	f644 119c 	movw	r1, #18844	@ 0x499c
 802c85e:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802c862:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c866:	f858 0001 	ldr.w	r0, [r8, r1]
 802c86a:	2402      	movs	r4, #2
 802c86c:	f508 51a8 	add.w	r1, r8, #5376	@ 0x1500
 802c870:	f8c6 4f00 	str.w	r4, [r6, #3840]	@ 0xf00
 802c874:	311c      	adds	r1, #28
 802c876:	e88d 0104 	stmia.w	sp, {r2, r8}
 802c87a:	464a      	mov	r2, r9
 802c87c:	f7fe fd80 	bl	802b380 <HRTF_HT_FilterProcess>
 802c880:	f245 62ec 	movw	r2, #22252	@ 0x56ec
 802c884:	f644 11b0 	movw	r1, #18864	@ 0x49b0
 802c888:	f245 64f6 	movw	r4, #22262	@ 0x56f6
 802c88c:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802c890:	f858 0001 	ldr.w	r0, [r8, r1]
 802c894:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c898:	2503      	movs	r5, #3
 802c89a:	f508 51fc 	add.w	r1, r8, #8064	@ 0x1f80
 802c89e:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802c8a2:	311c      	adds	r1, #28
 802c8a4:	e88d 0104 	stmia.w	sp, {r2, r8}
 802c8a8:	464a      	mov	r2, r9
 802c8aa:	f7fe fd69 	bl	802b380 <HRTF_HT_FilterProcess>
 802c8ae:	f245 62ee 	movw	r2, #22254	@ 0x56ee
 802c8b2:	f644 11b4 	movw	r1, #18868	@ 0x49b4
 802c8b6:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802c8ba:	f858 0001 	ldr.w	r0, [r8, r1]
 802c8be:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c8c2:	2504      	movs	r5, #4
 802c8c4:	f508 5128 	add.w	r1, r8, #10752	@ 0x2a00
 802c8c8:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802c8cc:	311c      	adds	r1, #28
 802c8ce:	e88d 0104 	stmia.w	sp, {r2, r8}
 802c8d2:	464a      	mov	r2, r9
 802c8d4:	f7fe fd54 	bl	802b380 <HRTF_HT_FilterProcess>
 802c8d8:	f245 62f0 	movw	r2, #22256	@ 0x56f0
 802c8dc:	f644 11a8 	movw	r1, #18856	@ 0x49a8
 802c8e0:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802c8e4:	f858 0001 	ldr.w	r0, [r8, r1]
 802c8e8:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c8ec:	2505      	movs	r5, #5
 802c8ee:	f508 5152 	add.w	r1, r8, #13440	@ 0x3480
 802c8f2:	f8c6 5f00 	str.w	r5, [r6, #3840]	@ 0xf00
 802c8f6:	311c      	adds	r1, #28
 802c8f8:	e88d 0104 	stmia.w	sp, {r2, r8}
 802c8fc:	464a      	mov	r2, r9
 802c8fe:	f7fe fd3f 	bl	802b380 <HRTF_HT_FilterProcess>
 802c902:	f245 62f2 	movw	r2, #22258	@ 0x56f2
 802c906:	f644 11ac 	movw	r1, #18860	@ 0x49ac
 802c90a:	f938 2002 	ldrsh.w	r2, [r8, r2]
 802c90e:	f938 3004 	ldrsh.w	r3, [r8, r4]
 802c912:	f858 0001 	ldr.w	r0, [r8, r1]
 802c916:	2406      	movs	r4, #6
 802c918:	f508 517c 	add.w	r1, r8, #16128	@ 0x3f00
 802c91c:	f8c6 4f00 	str.w	r4, [r6, #3840]	@ 0xf00
 802c920:	311c      	adds	r1, #28
 802c922:	e88d 0104 	stmia.w	sp, {r2, r8}
 802c926:	464a      	mov	r2, r9
 802c928:	f7fe fd2a 	bl	802b380 <HRTF_HT_FilterProcess>
 802c92c:	f7ff b8d9 	b.w	802bae2 <hpv_2+0x15e>
 802c930:	f644 2588 	movw	r5, #19080	@ 0x4a88
 802c934:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c936:	f858 3005 	ldr.w	r3, [r8, r5]
 802c93a:	9300      	str	r3, [sp, #0]
 802c93c:	f508 59a8 	add.w	r9, r8, #5376	@ 0x1500
 802c940:	f644 2684 	movw	r6, #19076	@ 0x4a84
 802c944:	f109 091c 	add.w	r9, r9, #28
 802c948:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c94c:	464a      	mov	r2, r9
 802c94e:	4623      	mov	r3, r4
 802c950:	3144      	adds	r1, #68	@ 0x44
 802c952:	4650      	mov	r0, sl
 802c954:	f7fe fb58 	bl	802b008 <ER_Gen>
 802c958:	f858 3006 	ldr.w	r3, [r8, r6]
 802c95c:	9300      	str	r3, [sp, #0]
 802c95e:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c962:	4623      	mov	r3, r4
 802c964:	3160      	adds	r1, #96	@ 0x60
 802c966:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802c968:	4650      	mov	r0, sl
 802c96a:	f7fe fb4d 	bl	802b008 <ER_Gen>
 802c96e:	f858 3005 	ldr.w	r3, [r8, r5]
 802c972:	9300      	str	r3, [sp, #0]
 802c974:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802c978:	f508 4795 	add.w	r7, r8, #19072	@ 0x4a80
 802c97c:	4623      	mov	r3, r4
 802c97e:	317c      	adds	r1, #124	@ 0x7c
 802c980:	940a      	str	r4, [sp, #40]	@ 0x28
 802c982:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802c984:	4650      	mov	r0, sl
 802c986:	f508 54fc 	add.w	r4, r8, #8064	@ 0x1f80
 802c98a:	f7fe fb3d 	bl	802b008 <ER_Gen>
 802c98e:	f104 031c 	add.w	r3, r4, #28
 802c992:	4618      	mov	r0, r3
 802c994:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c998:	683b      	ldr	r3, [r7, #0]
 802c99a:	9300      	str	r3, [sp, #0]
 802c99c:	4602      	mov	r2, r0
 802c99e:	9005      	str	r0, [sp, #20]
 802c9a0:	3150      	adds	r1, #80	@ 0x50
 802c9a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c9a4:	4650      	mov	r0, sl
 802c9a6:	f508 5428 	add.w	r4, r8, #10752	@ 0x2a00
 802c9aa:	f7fe fb2d 	bl	802b008 <ER_Gen>
 802c9ae:	f104 031c 	add.w	r3, r4, #28
 802c9b2:	461c      	mov	r4, r3
 802c9b4:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c9b8:	f858 3006 	ldr.w	r3, [r8, r6]
 802c9bc:	9300      	str	r3, [sp, #0]
 802c9be:	4622      	mov	r2, r4
 802c9c0:	9406      	str	r4, [sp, #24]
 802c9c2:	316c      	adds	r1, #108	@ 0x6c
 802c9c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c9c6:	4650      	mov	r0, sl
 802c9c8:	f508 5452 	add.w	r4, r8, #13440	@ 0x3480
 802c9cc:	f7fe fb1c 	bl	802b008 <ER_Gen>
 802c9d0:	4623      	mov	r3, r4
 802c9d2:	331c      	adds	r3, #28
 802c9d4:	4618      	mov	r0, r3
 802c9d6:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802c9da:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802c9de:	f858 3003 	ldr.w	r3, [r8, r3]
 802c9e2:	9300      	str	r3, [sp, #0]
 802c9e4:	4602      	mov	r2, r0
 802c9e6:	9007      	str	r0, [sp, #28]
 802c9e8:	3118      	adds	r1, #24
 802c9ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802c9ec:	4650      	mov	r0, sl
 802c9ee:	f508 547c 	add.w	r4, r8, #16128	@ 0x3f00
 802c9f2:	f7fe fb09 	bl	802b008 <ER_Gen>
 802c9f6:	341c      	adds	r4, #28
 802c9f8:	683b      	ldr	r3, [r7, #0]
 802c9fa:	9300      	str	r3, [sp, #0]
 802c9fc:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca00:	4622      	mov	r2, r4
 802ca02:	3134      	adds	r1, #52	@ 0x34
 802ca04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ca06:	4650      	mov	r0, sl
 802ca08:	f7fe fafe 	bl	802b008 <ER_Gen>
 802ca0c:	464a      	mov	r2, r9
 802ca0e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802ca12:	f858 3005 	ldr.w	r3, [r8, r5]
 802ca16:	9300      	str	r3, [sp, #0]
 802ca18:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802ca1c:	3148      	adds	r1, #72	@ 0x48
 802ca1e:	464b      	mov	r3, r9
 802ca20:	4658      	mov	r0, fp
 802ca22:	f7fe faf1 	bl	802b008 <ER_Gen>
 802ca26:	f858 3005 	ldr.w	r3, [r8, r5]
 802ca2a:	9300      	str	r3, [sp, #0]
 802ca2c:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802ca30:	3164      	adds	r1, #100	@ 0x64
 802ca32:	464b      	mov	r3, r9
 802ca34:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ca36:	4658      	mov	r0, fp
 802ca38:	f7fe fae6 	bl	802b008 <ER_Gen>
 802ca3c:	f858 3006 	ldr.w	r3, [r8, r6]
 802ca40:	9300      	str	r3, [sp, #0]
 802ca42:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802ca44:	464b      	mov	r3, r9
 802ca46:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca4a:	4658      	mov	r0, fp
 802ca4c:	f7fe fadc 	bl	802b008 <ER_Gen>
 802ca50:	f858 3006 	ldr.w	r3, [r8, r6]
 802ca54:	9300      	str	r3, [sp, #0]
 802ca56:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca5a:	9a05      	ldr	r2, [sp, #20]
 802ca5c:	3154      	adds	r1, #84	@ 0x54
 802ca5e:	464b      	mov	r3, r9
 802ca60:	4658      	mov	r0, fp
 802ca62:	f7fe fad1 	bl	802b008 <ER_Gen>
 802ca66:	683b      	ldr	r3, [r7, #0]
 802ca68:	9300      	str	r3, [sp, #0]
 802ca6a:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca6e:	9a06      	ldr	r2, [sp, #24]
 802ca70:	3170      	adds	r1, #112	@ 0x70
 802ca72:	464b      	mov	r3, r9
 802ca74:	4658      	mov	r0, fp
 802ca76:	f7fe fac7 	bl	802b008 <ER_Gen>
 802ca7a:	683b      	ldr	r3, [r7, #0]
 802ca7c:	9300      	str	r3, [sp, #0]
 802ca7e:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca82:	9a07      	ldr	r2, [sp, #28]
 802ca84:	311c      	adds	r1, #28
 802ca86:	464b      	mov	r3, r9
 802ca88:	4658      	mov	r0, fp
 802ca8a:	f7fe fabd 	bl	802b008 <ER_Gen>
 802ca8e:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802ca92:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ca96:	f858 3003 	ldr.w	r3, [r8, r3]
 802ca9a:	9300      	str	r3, [sp, #0]
 802ca9c:	4622      	mov	r2, r4
 802ca9e:	464b      	mov	r3, r9
 802caa0:	3138      	adds	r1, #56	@ 0x38
 802caa2:	4658      	mov	r0, fp
 802caa4:	f7fe fab0 	bl	802b008 <ER_Gen>
 802caa8:	f898 3009 	ldrb.w	r3, [r8, #9]
 802caac:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 802cab0:	2bf0      	cmp	r3, #240	@ 0xf0
 802cab2:	f47e afea 	bne.w	802ba8a <hpv_2+0x106>
 802cab6:	f644 2684 	movw	r6, #19076	@ 0x4a84
 802caba:	f508 53a8 	add.w	r3, r8, #5376	@ 0x1500
 802cabe:	461a      	mov	r2, r3
 802cac0:	f858 3006 	ldr.w	r3, [r8, r6]
 802cac4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802cac6:	9300      	str	r3, [sp, #0]
 802cac8:	4613      	mov	r3, r2
 802caca:	f508 4795 	add.w	r7, r8, #19072	@ 0x4a80
 802cace:	331c      	adds	r3, #28
 802cad0:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cad4:	9305      	str	r3, [sp, #20]
 802cad6:	461a      	mov	r2, r3
 802cad8:	4650      	mov	r0, sl
 802cada:	462b      	mov	r3, r5
 802cadc:	314c      	adds	r1, #76	@ 0x4c
 802cade:	f644 2488 	movw	r4, #19080	@ 0x4a88
 802cae2:	f7fe fa91 	bl	802b008 <ER_Gen>
 802cae6:	683b      	ldr	r3, [r7, #0]
 802cae8:	9300      	str	r3, [sp, #0]
 802caea:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802caee:	462b      	mov	r3, r5
 802caf0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802caf2:	4650      	mov	r0, sl
 802caf4:	3168      	adds	r1, #104	@ 0x68
 802caf6:	f7fe fa87 	bl	802b008 <ER_Gen>
 802cafa:	f644 297c 	movw	r9, #19068	@ 0x4a7c
 802cafe:	f858 3004 	ldr.w	r3, [r8, r4]
 802cb02:	9300      	str	r3, [sp, #0]
 802cb04:	f108 0104 	add.w	r1, r8, #4
 802cb08:	462b      	mov	r3, r5
 802cb0a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802cb0c:	950a      	str	r5, [sp, #40]	@ 0x28
 802cb0e:	4650      	mov	r0, sl
 802cb10:	f501 4194 	add.w	r1, r1, #18944	@ 0x4a00
 802cb14:	f7fe fa78 	bl	802b008 <ER_Gen>
 802cb18:	f508 55fc 	add.w	r5, r8, #8064	@ 0x1f80
 802cb1c:	f858 3009 	ldr.w	r3, [r8, r9]
 802cb20:	9300      	str	r3, [sp, #0]
 802cb22:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cb26:	f105 021c 	add.w	r2, r5, #28
 802cb2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802cb2c:	9206      	str	r2, [sp, #24]
 802cb2e:	4650      	mov	r0, sl
 802cb30:	f508 5528 	add.w	r5, r8, #10752	@ 0x2a00
 802cb34:	3158      	adds	r1, #88	@ 0x58
 802cb36:	f7fe fa67 	bl	802b008 <ER_Gen>
 802cb3a:	f105 011c 	add.w	r1, r5, #28
 802cb3e:	f858 3004 	ldr.w	r3, [r8, r4]
 802cb42:	9300      	str	r3, [sp, #0]
 802cb44:	4608      	mov	r0, r1
 802cb46:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cb4a:	9007      	str	r0, [sp, #28]
 802cb4c:	4602      	mov	r2, r0
 802cb4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802cb50:	4650      	mov	r0, sl
 802cb52:	3174      	adds	r1, #116	@ 0x74
 802cb54:	f508 5552 	add.w	r5, r8, #13440	@ 0x3480
 802cb58:	f7fe fa56 	bl	802b008 <ER_Gen>
 802cb5c:	351c      	adds	r5, #28
 802cb5e:	683b      	ldr	r3, [r7, #0]
 802cb60:	9300      	str	r3, [sp, #0]
 802cb62:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cb66:	462a      	mov	r2, r5
 802cb68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802cb6a:	9508      	str	r5, [sp, #32]
 802cb6c:	4650      	mov	r0, sl
 802cb6e:	3120      	adds	r1, #32
 802cb70:	f7fe fa4a 	bl	802b008 <ER_Gen>
 802cb74:	f508 557c 	add.w	r5, r8, #16128	@ 0x3f00
 802cb78:	4650      	mov	r0, sl
 802cb7a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 802cb7e:	f858 3006 	ldr.w	r3, [r8, r6]
 802cb82:	9300      	str	r3, [sp, #0]
 802cb84:	351c      	adds	r5, #28
 802cb86:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cb8a:	462a      	mov	r2, r5
 802cb8c:	4653      	mov	r3, sl
 802cb8e:	313c      	adds	r1, #60	@ 0x3c
 802cb90:	f7fe fa3a 	bl	802b008 <ER_Gen>
 802cb94:	f858 3006 	ldr.w	r3, [r8, r6]
 802cb98:	9300      	str	r3, [sp, #0]
 802cb9a:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cb9e:	9a05      	ldr	r2, [sp, #20]
 802cba0:	4653      	mov	r3, sl
 802cba2:	4658      	mov	r0, fp
 802cba4:	3150      	adds	r1, #80	@ 0x50
 802cba6:	f7fe fa2f 	bl	802b008 <ER_Gen>
 802cbaa:	f858 3004 	ldr.w	r3, [r8, r4]
 802cbae:	9300      	str	r3, [sp, #0]
 802cbb0:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cbb4:	4653      	mov	r3, sl
 802cbb6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802cbb8:	4658      	mov	r0, fp
 802cbba:	316c      	adds	r1, #108	@ 0x6c
 802cbbc:	f7fe fa24 	bl	802b008 <ER_Gen>
 802cbc0:	683b      	ldr	r3, [r7, #0]
 802cbc2:	9300      	str	r3, [sp, #0]
 802cbc4:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cbc8:	4653      	mov	r3, sl
 802cbca:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802cbcc:	4658      	mov	r0, fp
 802cbce:	3108      	adds	r1, #8
 802cbd0:	f7fe fa1a 	bl	802b008 <ER_Gen>
 802cbd4:	f858 3004 	ldr.w	r3, [r8, r4]
 802cbd8:	9300      	str	r3, [sp, #0]
 802cbda:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cbde:	9a06      	ldr	r2, [sp, #24]
 802cbe0:	4653      	mov	r3, sl
 802cbe2:	4658      	mov	r0, fp
 802cbe4:	315c      	adds	r1, #92	@ 0x5c
 802cbe6:	f7fe fa0f 	bl	802b008 <ER_Gen>
 802cbea:	f858 3009 	ldr.w	r3, [r8, r9]
 802cbee:	9300      	str	r3, [sp, #0]
 802cbf0:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cbf4:	9a07      	ldr	r2, [sp, #28]
 802cbf6:	4653      	mov	r3, sl
 802cbf8:	4658      	mov	r0, fp
 802cbfa:	3178      	adds	r1, #120	@ 0x78
 802cbfc:	f7fe fa04 	bl	802b008 <ER_Gen>
 802cc00:	f858 3006 	ldr.w	r3, [r8, r6]
 802cc04:	9300      	str	r3, [sp, #0]
 802cc06:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cc0a:	9a08      	ldr	r2, [sp, #32]
 802cc0c:	4653      	mov	r3, sl
 802cc0e:	4658      	mov	r0, fp
 802cc10:	3124      	adds	r1, #36	@ 0x24
 802cc12:	f7fe f9f9 	bl	802b008 <ER_Gen>
 802cc16:	683b      	ldr	r3, [r7, #0]
 802cc18:	9300      	str	r3, [sp, #0]
 802cc1a:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cc1e:	4658      	mov	r0, fp
 802cc20:	462a      	mov	r2, r5
 802cc22:	4653      	mov	r3, sl
 802cc24:	3140      	adds	r1, #64	@ 0x40
 802cc26:	f7fe f9ef 	bl	802b008 <ER_Gen>
 802cc2a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802cc2e:	f858 3004 	ldr.w	r3, [r8, r4]
 802cc32:	9300      	str	r3, [sp, #0]
 802cc34:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cc38:	9a05      	ldr	r2, [sp, #20]
 802cc3a:	4653      	mov	r3, sl
 802cc3c:	4658      	mov	r0, fp
 802cc3e:	3144      	adds	r1, #68	@ 0x44
 802cc40:	f7fe f9e2 	bl	802b008 <ER_Gen>
 802cc44:	f858 3006 	ldr.w	r3, [r8, r6]
 802cc48:	9300      	str	r3, [sp, #0]
 802cc4a:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cc4e:	4653      	mov	r3, sl
 802cc50:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802cc52:	4658      	mov	r0, fp
 802cc54:	3160      	adds	r1, #96	@ 0x60
 802cc56:	f7fe f9d7 	bl	802b008 <ER_Gen>
 802cc5a:	f858 3004 	ldr.w	r3, [r8, r4]
 802cc5e:	9300      	str	r3, [sp, #0]
 802cc60:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cc64:	4653      	mov	r3, sl
 802cc66:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802cc68:	4658      	mov	r0, fp
 802cc6a:	317c      	adds	r1, #124	@ 0x7c
 802cc6c:	f7fe f9cc 	bl	802b008 <ER_Gen>
 802cc70:	683b      	ldr	r3, [r7, #0]
 802cc72:	9300      	str	r3, [sp, #0]
 802cc74:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cc78:	9a06      	ldr	r2, [sp, #24]
 802cc7a:	4653      	mov	r3, sl
 802cc7c:	4658      	mov	r0, fp
 802cc7e:	3150      	adds	r1, #80	@ 0x50
 802cc80:	f7fe f9c2 	bl	802b008 <ER_Gen>
 802cc84:	f858 3006 	ldr.w	r3, [r8, r6]
 802cc88:	9300      	str	r3, [sp, #0]
 802cc8a:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cc8e:	9a07      	ldr	r2, [sp, #28]
 802cc90:	4653      	mov	r3, sl
 802cc92:	4658      	mov	r0, fp
 802cc94:	316c      	adds	r1, #108	@ 0x6c
 802cc96:	f7fe f9b7 	bl	802b008 <ER_Gen>
 802cc9a:	f858 3009 	ldr.w	r3, [r8, r9]
 802cc9e:	9300      	str	r3, [sp, #0]
 802cca0:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cca4:	9a08      	ldr	r2, [sp, #32]
 802cca6:	4653      	mov	r3, sl
 802cca8:	4658      	mov	r0, fp
 802ccaa:	3118      	adds	r1, #24
 802ccac:	f7fe f9ac 	bl	802b008 <ER_Gen>
 802ccb0:	683b      	ldr	r3, [r7, #0]
 802ccb2:	9300      	str	r3, [sp, #0]
 802ccb4:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802ccb8:	4658      	mov	r0, fp
 802ccba:	462a      	mov	r2, r5
 802ccbc:	4653      	mov	r3, sl
 802ccbe:	3134      	adds	r1, #52	@ 0x34
 802ccc0:	f7fe f9a2 	bl	802b008 <ER_Gen>
 802ccc4:	f8dd b010 	ldr.w	fp, [sp, #16]
 802ccc8:	f858 3004 	ldr.w	r3, [r8, r4]
 802cccc:	9300      	str	r3, [sp, #0]
 802ccce:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802ccd2:	9a05      	ldr	r2, [sp, #20]
 802ccd4:	4653      	mov	r3, sl
 802ccd6:	4658      	mov	r0, fp
 802ccd8:	3148      	adds	r1, #72	@ 0x48
 802ccda:	f7fe f995 	bl	802b008 <ER_Gen>
 802ccde:	f858 3004 	ldr.w	r3, [r8, r4]
 802cce2:	9300      	str	r3, [sp, #0]
 802cce4:	f508 4193 	add.w	r1, r8, #18816	@ 0x4980
 802cce8:	4653      	mov	r3, sl
 802ccea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ccec:	4658      	mov	r0, fp
 802ccee:	3164      	adds	r1, #100	@ 0x64
 802ccf0:	f7fe f98a 	bl	802b008 <ER_Gen>
 802ccf4:	f858 3006 	ldr.w	r3, [r8, r6]
 802ccf8:	9300      	str	r3, [sp, #0]
 802ccfa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802ccfc:	4653      	mov	r3, sl
 802ccfe:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cd02:	4658      	mov	r0, fp
 802cd04:	f7fe f980 	bl	802b008 <ER_Gen>
 802cd08:	f858 3006 	ldr.w	r3, [r8, r6]
 802cd0c:	9300      	str	r3, [sp, #0]
 802cd0e:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cd12:	9a06      	ldr	r2, [sp, #24]
 802cd14:	4653      	mov	r3, sl
 802cd16:	4658      	mov	r0, fp
 802cd18:	3154      	adds	r1, #84	@ 0x54
 802cd1a:	f7fe f975 	bl	802b008 <ER_Gen>
 802cd1e:	4654      	mov	r4, sl
 802cd20:	683b      	ldr	r3, [r7, #0]
 802cd22:	9300      	str	r3, [sp, #0]
 802cd24:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cd28:	9a07      	ldr	r2, [sp, #28]
 802cd2a:	4623      	mov	r3, r4
 802cd2c:	4658      	mov	r0, fp
 802cd2e:	3170      	adds	r1, #112	@ 0x70
 802cd30:	f7fe f96a 	bl	802b008 <ER_Gen>
 802cd34:	683b      	ldr	r3, [r7, #0]
 802cd36:	9300      	str	r3, [sp, #0]
 802cd38:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cd3c:	9a08      	ldr	r2, [sp, #32]
 802cd3e:	4623      	mov	r3, r4
 802cd40:	4658      	mov	r0, fp
 802cd42:	311c      	adds	r1, #28
 802cd44:	f7fe f960 	bl	802b008 <ER_Gen>
 802cd48:	f858 3009 	ldr.w	r3, [r8, r9]
 802cd4c:	9300      	str	r3, [sp, #0]
 802cd4e:	f508 4194 	add.w	r1, r8, #18944	@ 0x4a00
 802cd52:	462a      	mov	r2, r5
 802cd54:	4658      	mov	r0, fp
 802cd56:	3138      	adds	r1, #56	@ 0x38
 802cd58:	4623      	mov	r3, r4
 802cd5a:	f7fe f955 	bl	802b008 <ER_Gen>
 802cd5e:	f7fe be94 	b.w	802ba8a <hpv_2+0x106>
 802cd62:	2800      	cmp	r0, #0
 802cd64:	4606      	mov	r6, r0
 802cd66:	460a      	mov	r2, r1
 802cd68:	f501 7440 	add.w	r4, r1, #768	@ 0x300
 802cd6c:	f501 7ac0 	add.w	sl, r1, #384	@ 0x180
 802cd70:	f340 8093 	ble.w	802ce9a <hpv_2+0x1516>
 802cd74:	4611      	mov	r1, r2
 802cd76:	4d4c      	ldr	r5, [pc, #304]	@ (802cea8 <hpv_2+0x1524>)
 802cd78:	1f10      	subs	r0, r2, #4
 802cd7a:	f501 71be 	add.w	r1, r1, #380	@ 0x17c
 802cd7e:	4622      	mov	r2, r4
 802cd80:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 802cd84:	4617      	mov	r7, r2
 802cd86:	f852 3b04 	ldr.w	r3, [r2], #4
 802cd8a:	fb53 f315 	smmulr	r3, r3, r5
 802cd8e:	f303 031e 	ssat	r3, #31, r3
 802cd92:	005b      	lsls	r3, r3, #1
 802cd94:	f840 3f04 	str.w	r3, [r0, #4]!
 802cd98:	683b      	ldr	r3, [r7, #0]
 802cd9a:	fb53 f315 	smmulr	r3, r3, r5
 802cd9e:	f303 031e 	ssat	r3, #31, r3
 802cda2:	4296      	cmp	r6, r2
 802cda4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802cda8:	f841 3f04 	str.w	r3, [r1, #4]!
 802cdac:	d1ea      	bne.n	802cd84 <hpv_2+0x1400>
 802cdae:	f508 4907 	add.w	r9, r8, #34560	@ 0x8700
 802cdb2:	f109 0998 	add.w	r9, r9, #152	@ 0x98
 802cdb6:	f109 0004 	add.w	r0, r9, #4
 802cdba:	f248 7398 	movw	r3, #34712	@ 0x8798
 802cdbe:	e890 5001 	ldmia.w	r0, {r0, ip, lr}
 802cdc2:	f858 7003 	ldr.w	r7, [r8, r3]
 802cdc6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802cdc8:	9d23      	ldr	r5, [sp, #140]	@ 0x8c
 802cdca:	6801      	ldr	r1, [r0, #0]
 802cdcc:	fb57 f311 	smmulr	r3, r7, r1
 802cdd0:	f303 031e 	ssat	r3, #31, r3
 802cdd4:	682a      	ldr	r2, [r5, #0]
 802cdd6:	005b      	lsls	r3, r3, #1
 802cdd8:	fa83 f3a2 	qsub	r3, r2, r3
 802cddc:	fb57 f213 	smmulr	r2, r7, r3
 802cde0:	f302 021e 	ssat	r2, #31, r2
 802cde4:	0052      	lsls	r2, r2, #1
 802cde6:	fa81 f282 	qadd	r2, r2, r1
 802cdea:	4586      	cmp	lr, r0
 802cdec:	f845 2b04 	str.w	r2, [r5], #4
 802cdf0:	6003      	str	r3, [r0, #0]
 802cdf2:	bf8c      	ite	hi
 802cdf4:	3004      	addhi	r0, #4
 802cdf6:	4660      	movls	r0, ip
 802cdf8:	3e01      	subs	r6, #1
 802cdfa:	d1e6      	bne.n	802cdca <hpv_2+0x1446>
 802cdfc:	f508 4c07 	add.w	ip, r8, #34560	@ 0x8700
 802ce00:	f10c 0ca8 	add.w	ip, ip, #168	@ 0xa8
 802ce04:	f8c9 0004 	str.w	r0, [r9, #4]
 802ce08:	f10c 0004 	add.w	r0, ip, #4
 802ce0c:	f248 73a8 	movw	r3, #34728	@ 0x87a8
 802ce10:	e890 4201 	ldmia.w	r0, {r0, r9, lr}
 802ce14:	f858 7003 	ldr.w	r7, [r8, r3]
 802ce18:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802ce1a:	4655      	mov	r5, sl
 802ce1c:	6801      	ldr	r1, [r0, #0]
 802ce1e:	fb57 f311 	smmulr	r3, r7, r1
 802ce22:	f303 031e 	ssat	r3, #31, r3
 802ce26:	682a      	ldr	r2, [r5, #0]
 802ce28:	005b      	lsls	r3, r3, #1
 802ce2a:	fa83 f3a2 	qsub	r3, r2, r3
 802ce2e:	fb57 f213 	smmulr	r2, r7, r3
 802ce32:	f302 021e 	ssat	r2, #31, r2
 802ce36:	0052      	lsls	r2, r2, #1
 802ce38:	fa81 f282 	qadd	r2, r2, r1
 802ce3c:	4586      	cmp	lr, r0
 802ce3e:	f845 2b04 	str.w	r2, [r5], #4
 802ce42:	6003      	str	r3, [r0, #0]
 802ce44:	bf8c      	ite	hi
 802ce46:	3004      	addhi	r0, #4
 802ce48:	4648      	movls	r0, r9
 802ce4a:	3e01      	subs	r6, #1
 802ce4c:	d1e6      	bne.n	802ce1c <hpv_2+0x1498>
 802ce4e:	f898 3009 	ldrb.w	r3, [r8, #9]
 802ce52:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802ce54:	f8cc 0004 	str.w	r0, [ip, #4]
 802ce58:	f023 0307 	bic.w	r3, r3, #7
 802ce5c:	f043 0303 	orr.w	r3, r3, #3
 802ce60:	9229      	str	r2, [sp, #164]	@ 0xa4
 802ce62:	f888 3009 	strb.w	r3, [r8, #9]
 802ce66:	f8cd a09c 	str.w	sl, [sp, #156]	@ 0x9c
 802ce6a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802ce6c:	f7fe bdac 	b.w	802b9c8 <hpv_2+0x44>
 802ce70:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 802ce72:	f501 6210 	add.w	r2, r1, #2304	@ 0x900
 802ce76:	9203      	str	r2, [sp, #12]
 802ce78:	f501 6228 	add.w	r2, r1, #2688	@ 0xa80
 802ce7c:	f501 6ac0 	add.w	sl, r1, #1536	@ 0x600
 802ce80:	f501 6bf0 	add.w	fp, r1, #1920	@ 0x780
 802ce84:	9204      	str	r2, [sp, #16]
 802ce86:	f7fe bdea 	b.w	802ba5e <hpv_2+0xda>
 802ce8a:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 802ce8e:	f938 3003 	ldrsh.w	r3, [r8, r3]
 802ce92:	2b01      	cmp	r3, #1
 802ce94:	f47e ae25 	bne.w	802bae2 <hpv_2+0x15e>
 802ce98:	e4ab      	b.n	802c7f2 <hpv_2+0xe6e>
 802ce9a:	f508 4c07 	add.w	ip, r8, #34560	@ 0x8700
 802ce9e:	f10c 0ca8 	add.w	ip, ip, #168	@ 0xa8
 802cea2:	f8dc 0004 	ldr.w	r0, [ip, #4]
 802cea6:	e7d4      	b.n	802ce52 <hpv_2+0x14ce>
 802cea8:	5a7ef9db 	.word	0x5a7ef9db

0802ceac <initialize>:
 802ceac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ceb0:	6842      	ldr	r2, [r0, #4]
 802ceb2:	2360      	movs	r3, #96	@ 0x60
 802ceb4:	60c3      	str	r3, [r0, #12]
 802ceb6:	7813      	ldrb	r3, [r2, #0]
 802ceb8:	b085      	sub	sp, #20
 802ceba:	2b01      	cmp	r3, #1
 802cebc:	4604      	mov	r4, r0
 802cebe:	9200      	str	r2, [sp, #0]
 802cec0:	f000 832f 	beq.w	802d522 <initialize+0x676>
 802cec4:	f648 23e8 	movw	r3, #35560	@ 0x8ae8
 802cec8:	f648 22f4 	movw	r2, #35572	@ 0x8af4
 802cecc:	58c3      	ldr	r3, [r0, r3]
 802cece:	f648 21f8 	movw	r1, #35576	@ 0x8af8
 802ced2:	2601      	movs	r6, #1
 802ced4:	50a6      	str	r6, [r4, r2]
 802ced6:	2664      	movs	r6, #100	@ 0x64
 802ced8:	5066      	str	r6, [r4, r1]
 802ceda:	f103 4580 	add.w	r5, r3, #1073741824	@ 0x40000000
 802cede:	2100      	movs	r1, #0
 802cee0:	f648 20fc 	movw	r0, #35580	@ 0x8afc
 802cee4:	f504 420b 	add.w	r2, r4, #35584	@ 0x8b00
 802cee8:	3d01      	subs	r5, #1
 802ceea:	428b      	cmp	r3, r1
 802ceec:	5021      	str	r1, [r4, r0]
 802ceee:	ea4f 0585 	mov.w	r5, r5, lsl #2
 802cef2:	6011      	str	r1, [r2, #0]
 802cef4:	dd0e      	ble.n	802cf14 <initialize+0x68>
 802cef6:	009e      	lsls	r6, r3, #2
 802cef8:	f504 4007 	add.w	r0, r4, #34560	@ 0x8700
 802cefc:	4632      	mov	r2, r6
 802cefe:	2100      	movs	r1, #0
 802cf00:	30b8      	adds	r0, #184	@ 0xb8
 802cf02:	f000 fe27 	bl	802db54 <memset>
 802cf06:	f504 4009 	add.w	r0, r4, #35072	@ 0x8900
 802cf0a:	4632      	mov	r2, r6
 802cf0c:	3050      	adds	r0, #80	@ 0x50
 802cf0e:	2100      	movs	r1, #0
 802cf10:	f000 fe20 	bl	802db54 <memset>
 802cf14:	4ee9      	ldr	r6, [pc, #932]	@ (802d2bc <initialize+0x410>)
 802cf16:	f504 4007 	add.w	r0, r4, #34560	@ 0x8700
 802cf1a:	f504 4209 	add.w	r2, r4, #35072	@ 0x8900
 802cf1e:	4601      	mov	r1, r0
 802cf20:	4603      	mov	r3, r0
 802cf22:	3250      	adds	r2, #80	@ 0x50
 802cf24:	30b8      	adds	r0, #184	@ 0xb8
 802cf26:	6836      	ldr	r6, [r6, #0]
 802cf28:	9601      	str	r6, [sp, #4]
 802cf2a:	eb00 0b05 	add.w	fp, r0, r5
 802cf2e:	4415      	add	r5, r2
 802cf30:	f8c1 009c 	str.w	r0, [r1, #156]	@ 0x9c
 802cf34:	f8c1 20ac 	str.w	r2, [r1, #172]	@ 0xac
 802cf38:	f8c1 b0a4 	str.w	fp, [r1, #164]	@ 0xa4
 802cf3c:	f8c1 00a0 	str.w	r0, [r1, #160]	@ 0xa0
 802cf40:	f8c3 50b4 	str.w	r5, [r3, #180]	@ 0xb4
 802cf44:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 802cf48:	9b01      	ldr	r3, [sp, #4]
 802cf4a:	f248 7a98 	movw	sl, #34712	@ 0x8798
 802cf4e:	f248 79a8 	movw	r9, #34728	@ 0x87a8
 802cf52:	f644 2890 	movw	r8, #19088	@ 0x4a90
 802cf56:	f644 2c9e 	movw	ip, #19102	@ 0x4a9e
 802cf5a:	2500      	movs	r5, #0
 802cf5c:	425a      	negs	r2, r3
 802cf5e:	f644 2ea0 	movw	lr, #19104	@ 0x4aa0
 802cf62:	f644 2792 	movw	r7, #19090	@ 0x4a92
 802cf66:	f644 2694 	movw	r6, #19092	@ 0x4a94
 802cf6a:	f844 300a 	str.w	r3, [r4, sl]
 802cf6e:	f844 2009 	str.w	r2, [r4, r9]
 802cf72:	231e      	movs	r3, #30
 802cf74:	f824 5008 	strh.w	r5, [r4, r8]
 802cf78:	f824 500c 	strh.w	r5, [r4, ip]
 802cf7c:	f44f 7ca5 	mov.w	ip, #330	@ 0x14a
 802cf80:	f824 500e 	strh.w	r5, [r4, lr]
 802cf84:	f824 c007 	strh.w	ip, [r4, r7]
 802cf88:	53a3      	strh	r3, [r4, r6]
 802cf8a:	f644 2396 	movw	r3, #19094	@ 0x4a96
 802cf8e:	f644 2198 	movw	r1, #19096	@ 0x4a98
 802cf92:	f644 209a 	movw	r0, #19098	@ 0x4a9a
 802cf96:	f644 2b9c 	movw	fp, #19100	@ 0x4a9c
 802cf9a:	f04f 09fa 	mov.w	r9, #250	@ 0xfa
 802cf9e:	f824 9003 	strh.w	r9, [r4, r3]
 802cfa2:	f04f 086e 	mov.w	r8, #110	@ 0x6e
 802cfa6:	1d23      	adds	r3, r4, #4
 802cfa8:	f04f 0e96 	mov.w	lr, #150	@ 0x96
 802cfac:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 802cfb0:	f302 0218 	ssat	r2, #25, r2
 802cfb4:	ea4f 1ac2 	mov.w	sl, r2, lsl #7
 802cfb8:	22d2      	movs	r2, #210	@ 0xd2
 802cfba:	f824 8001 	strh.w	r8, [r4, r1]
 802cfbe:	9302      	str	r3, [sp, #8]
 802cfc0:	5222      	strh	r2, [r4, r0]
 802cfc2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 802cfc6:	f824 e00b 	strh.w	lr, [r4, fp]
 802cfca:	fb3a f303 	smulwb	r3, sl, r3
 802cfce:	005b      	lsls	r3, r3, #1
 802cfd0:	6123      	str	r3, [r4, #16]
 802cfd2:	f640 43cd 	movw	r3, #3277	@ 0xccd
 802cfd6:	fb3a f303 	smulwb	r3, sl, r3
 802cfda:	005b      	lsls	r3, r3, #1
 802cfdc:	6163      	str	r3, [r4, #20]
 802cfde:	f241 3333 	movw	r3, #4915	@ 0x1333
 802cfe2:	fb3a f303 	smulwb	r3, sl, r3
 802cfe6:	005b      	lsls	r3, r3, #1
 802cfe8:	f104 0b1c 	add.w	fp, r4, #28
 802cfec:	61a3      	str	r3, [r4, #24]
 802cfee:	f604 269c 	addw	r6, r4, #2716	@ 0xa9c
 802cff2:	f8cd b00c 	str.w	fp, [sp, #12]
 802cff6:	4629      	mov	r1, r5
 802cff8:	4658      	mov	r0, fp
 802cffa:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802cffe:	f504 5ba8 	add.w	fp, r4, #5376	@ 0x1500
 802d002:	f000 fda7 	bl	802db54 <memset>
 802d006:	f10b 0b1c 	add.w	fp, fp, #28
 802d00a:	4629      	mov	r1, r5
 802d00c:	4630      	mov	r0, r6
 802d00e:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d012:	f504 59fc 	add.w	r9, r4, #8064	@ 0x1f80
 802d016:	f109 091c 	add.w	r9, r9, #28
 802d01a:	9601      	str	r6, [sp, #4]
 802d01c:	f504 5828 	add.w	r8, r4, #10752	@ 0x2a00
 802d020:	f000 fd98 	bl	802db54 <memset>
 802d024:	4629      	mov	r1, r5
 802d026:	4658      	mov	r0, fp
 802d028:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d02c:	f000 fd92 	bl	802db54 <memset>
 802d030:	f108 081c 	add.w	r8, r8, #28
 802d034:	4629      	mov	r1, r5
 802d036:	4648      	mov	r0, r9
 802d038:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d03c:	f504 5752 	add.w	r7, r4, #13440	@ 0x3480
 802d040:	f000 fd88 	bl	802db54 <memset>
 802d044:	371c      	adds	r7, #28
 802d046:	4629      	mov	r1, r5
 802d048:	4640      	mov	r0, r8
 802d04a:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d04e:	f504 567c 	add.w	r6, r4, #16128	@ 0x3f00
 802d052:	f000 fd7f 	bl	802db54 <memset>
 802d056:	361c      	adds	r6, #28
 802d058:	4629      	mov	r1, r5
 802d05a:	4638      	mov	r0, r7
 802d05c:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d060:	f000 fd78 	bl	802db54 <memset>
 802d064:	4629      	mov	r1, r5
 802d066:	4630      	mov	r0, r6
 802d068:	f44f 6228 	mov.w	r2, #2688	@ 0xa80
 802d06c:	f000 fd72 	bl	802db54 <memset>
 802d070:	f644 159c 	movw	r5, #18844	@ 0x499c
 802d074:	f644 12b0 	movw	r2, #18864	@ 0x49b0
 802d078:	f644 10b4 	movw	r0, #18868	@ 0x49b4
 802d07c:	f644 11a8 	movw	r1, #18856	@ 0x49a8
 802d080:	f844 b005 	str.w	fp, [r4, r5]
 802d084:	f844 9002 	str.w	r9, [r4, r2]
 802d088:	f644 15ac 	movw	r5, #18860	@ 0x49ac
 802d08c:	f844 8000 	str.w	r8, [r4, r0]
 802d090:	f644 12b8 	movw	r2, #18872	@ 0x49b8
 802d094:	f644 10a0 	movw	r0, #18848	@ 0x49a0
 802d098:	5067      	str	r7, [r4, r1]
 802d09a:	9b03      	ldr	r3, [sp, #12]
 802d09c:	5166      	str	r6, [r4, r5]
 802d09e:	f644 11a4 	movw	r1, #18852	@ 0x49a4
 802d0a2:	f844 b002 	str.w	fp, [r4, r2]
 802d0a6:	f644 1ed8 	movw	lr, #18904	@ 0x49d8
 802d0aa:	5023      	str	r3, [r4, r0]
 802d0ac:	9801      	ldr	r0, [sp, #4]
 802d0ae:	5060      	str	r0, [r4, r1]
 802d0b0:	f644 15f8 	movw	r5, #18936	@ 0x49f8
 802d0b4:	f504 52b4 	add.w	r2, r4, #5760	@ 0x1680
 802d0b8:	f644 1bbc 	movw	fp, #18876	@ 0x49bc
 802d0bc:	f644 11c0 	movw	r1, #18880	@ 0x49c0
 802d0c0:	f844 300e 	str.w	r3, [r4, lr]
 802d0c4:	321c      	adds	r2, #28
 802d0c6:	f504 53cc 	add.w	r3, r4, #6528	@ 0x1980
 802d0ca:	f644 1ecc 	movw	lr, #18892	@ 0x49cc
 802d0ce:	5160      	str	r0, [r4, r5]
 802d0d0:	331c      	adds	r3, #28
 802d0d2:	f844 200b 	str.w	r2, [r4, fp]
 802d0d6:	f644 1cd0 	movw	ip, #18896	@ 0x49d0
 802d0da:	5062      	str	r2, [r4, r1]
 802d0dc:	f504 55f0 	add.w	r5, r4, #7680	@ 0x1e00
 802d0e0:	f644 10c4 	movw	r0, #18884	@ 0x49c4
 802d0e4:	f644 11c8 	movw	r1, #18888	@ 0x49c8
 802d0e8:	f844 300e 	str.w	r3, [r4, lr]
 802d0ec:	351c      	adds	r5, #28
 802d0ee:	f644 12d4 	movw	r2, #18900	@ 0x49d4
 802d0f2:	f644 1ee8 	movw	lr, #18920	@ 0x49e8
 802d0f6:	f844 300c 	str.w	r3, [r4, ip]
 802d0fa:	5025      	str	r5, [r4, r0]
 802d0fc:	f644 1ce0 	movw	ip, #18912	@ 0x49e0
 802d100:	5065      	str	r5, [r4, r1]
 802d102:	f644 13dc 	movw	r3, #18908	@ 0x49dc
 802d106:	f504 71ce 	add.w	r1, r4, #412	@ 0x19c
 802d10a:	50a1      	str	r1, [r4, r2]
 802d10c:	f644 10e4 	movw	r0, #18916	@ 0x49e4
 802d110:	f844 100e 	str.w	r1, [r4, lr]
 802d114:	f644 15ec 	movw	r5, #18924	@ 0x49ec
 802d118:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 802d11c:	f844 100c 	str.w	r1, [r4, ip]
 802d120:	f644 12f0 	movw	r2, #18928	@ 0x49f0
 802d124:	50e1      	str	r1, [r4, r3]
 802d126:	f644 2e08 	movw	lr, #18952	@ 0x4a08
 802d12a:	f604 131c 	addw	r3, r4, #2332	@ 0x91c
 802d12e:	5023      	str	r3, [r4, r0]
 802d130:	f504 4c94 	add.w	ip, r4, #18944	@ 0x4a00
 802d134:	5163      	str	r3, [r4, r5]
 802d136:	f644 2158 	movw	r1, #19032	@ 0x4a58
 802d13a:	f604 451c 	addw	r5, r4, #3100	@ 0xc1c
 802d13e:	50a5      	str	r5, [r4, r2]
 802d140:	f844 500e 	str.w	r5, [r4, lr]
 802d144:	f604 751c 	addw	r5, r4, #3868	@ 0xf1c
 802d148:	f8cc 5000 	str.w	r5, [ip]
 802d14c:	f644 10f4 	movw	r0, #18932	@ 0x49f4
 802d150:	f844 9001 	str.w	r9, [r4, r1]
 802d154:	f504 539c 	add.w	r3, r4, #4992	@ 0x1380
 802d158:	f644 2204 	movw	r2, #18948	@ 0x4a04
 802d15c:	f644 1efc 	movw	lr, #18940	@ 0x49fc
 802d160:	f504 5c04 	add.w	ip, r4, #8448	@ 0x2100
 802d164:	f644 2948 	movw	r9, #19016	@ 0x4a48
 802d168:	331c      	adds	r3, #28
 802d16a:	f10c 0c1c 	add.w	ip, ip, #28
 802d16e:	5025      	str	r5, [r4, r0]
 802d170:	f644 2150 	movw	r1, #19024	@ 0x4a50
 802d174:	50a3      	str	r3, [r4, r2]
 802d176:	f504 5010 	add.w	r0, r4, #9216	@ 0x2400
 802d17a:	f844 300e 	str.w	r3, [r4, lr]
 802d17e:	f644 2544 	movw	r5, #19012	@ 0x4a44
 802d182:	f844 c009 	str.w	ip, [r4, r9]
 802d186:	f644 2254 	movw	r2, #19028	@ 0x4a54
 802d18a:	f644 2e78 	movw	lr, #19064	@ 0x4a78
 802d18e:	f644 2318 	movw	r3, #18968	@ 0x4a18
 802d192:	f644 2938 	movw	r9, #19000	@ 0x4a38
 802d196:	301c      	adds	r0, #28
 802d198:	f844 c001 	str.w	ip, [r4, r1]
 802d19c:	5160      	str	r0, [r4, r5]
 802d19e:	f504 5122 	add.w	r1, r4, #10368	@ 0x2880
 802d1a2:	50a0      	str	r0, [r4, r2]
 802d1a4:	f644 2c4c 	movw	ip, #19020	@ 0x4a4c
 802d1a8:	f844 800e 	str.w	r8, [r4, lr]
 802d1ac:	f644 255c 	movw	r5, #19036	@ 0x4a5c
 802d1b0:	50e7      	str	r7, [r4, r3]
 802d1b2:	f504 522e 	add.w	r2, r4, #11136	@ 0x2b80
 802d1b6:	f844 6009 	str.w	r6, [r4, r9]
 802d1ba:	f644 2070 	movw	r0, #19056	@ 0x4a70
 802d1be:	f644 2868 	movw	r8, #19048	@ 0x4a68
 802d1c2:	f504 5e3a 	add.w	lr, r4, #11904	@ 0x2e80
 802d1c6:	f644 276c 	movw	r7, #19052	@ 0x4a6c
 802d1ca:	f644 2360 	movw	r3, #19040	@ 0x4a60
 802d1ce:	f504 564c 	add.w	r6, r4, #13056	@ 0x3300
 802d1d2:	f644 2974 	movw	r9, #19060	@ 0x4a74
 802d1d6:	311c      	adds	r1, #28
 802d1d8:	321c      	adds	r2, #28
 802d1da:	f10e 0e1c 	add.w	lr, lr, #28
 802d1de:	361c      	adds	r6, #28
 802d1e0:	f844 100c 	str.w	r1, [r4, ip]
 802d1e4:	5161      	str	r1, [r4, r5]
 802d1e6:	f644 2c64 	movw	ip, #19044	@ 0x4a64
 802d1ea:	5022      	str	r2, [r4, r0]
 802d1ec:	f504 5158 	add.w	r1, r4, #13824	@ 0x3600
 802d1f0:	f844 2008 	str.w	r2, [r4, r8]
 802d1f4:	f644 2520 	movw	r5, #18976	@ 0x4a20
 802d1f8:	f844 e007 	str.w	lr, [r4, r7]
 802d1fc:	f644 201c 	movw	r0, #18972	@ 0x4a1c
 802d200:	f844 e003 	str.w	lr, [r4, r3]
 802d204:	f504 5264 	add.w	r2, r4, #14592	@ 0x3900
 802d208:	f844 6009 	str.w	r6, [r4, r9]
 802d20c:	f644 2810 	movw	r8, #18960	@ 0x4a10
 802d210:	f644 2724 	movw	r7, #18980	@ 0x4a24
 802d214:	f504 5376 	add.w	r3, r4, #15744	@ 0x3d80
 802d218:	f644 2e0c 	movw	lr, #18956	@ 0x4a0c
 802d21c:	f644 2914 	movw	r9, #18964	@ 0x4a14
 802d220:	311c      	adds	r1, #28
 802d222:	321c      	adds	r2, #28
 802d224:	331c      	adds	r3, #28
 802d226:	f844 600c 	str.w	r6, [r4, ip]
 802d22a:	5161      	str	r1, [r4, r5]
 802d22c:	f504 4681 	add.w	r6, r4, #16512	@ 0x4080
 802d230:	5021      	str	r1, [r4, r0]
 802d232:	f644 2c34 	movw	ip, #18996	@ 0x4a34
 802d236:	f844 2008 	str.w	r2, [r4, r8]
 802d23a:	f644 2540 	movw	r5, #19008	@ 0x4a40
 802d23e:	51e2      	str	r2, [r4, r7]
 802d240:	f504 4187 	add.w	r1, r4, #17280	@ 0x4380
 802d244:	f844 300e 	str.w	r3, [r4, lr]
 802d248:	f644 2030 	movw	r0, #18992	@ 0x4a30
 802d24c:	f844 3009 	str.w	r3, [r4, r9]
 802d250:	f644 283c 	movw	r8, #19004	@ 0x4a3c
 802d254:	f504 4290 	add.w	r2, r4, #18432	@ 0x4800
 802d258:	f644 272c 	movw	r7, #18988	@ 0x4a2c
 802d25c:	f644 2e28 	movw	lr, #18984	@ 0x4a28
 802d260:	f644 237c 	movw	r3, #19068	@ 0x4a7c
 802d264:	361c      	adds	r6, #28
 802d266:	311c      	adds	r1, #28
 802d268:	321c      	adds	r2, #28
 802d26a:	f8df 9054 	ldr.w	r9, [pc, #84]	@ 802d2c0 <initialize+0x414>
 802d26e:	f844 600c 	str.w	r6, [r4, ip]
 802d272:	5166      	str	r6, [r4, r5]
 802d274:	5021      	str	r1, [r4, r0]
 802d276:	f844 1008 	str.w	r1, [r4, r8]
 802d27a:	51e2      	str	r2, [r4, r7]
 802d27c:	f844 200e 	str.w	r2, [r4, lr]
 802d280:	f844 9003 	str.w	r9, [r4, r3]
 802d284:	f243 3332 	movw	r3, #13106	@ 0x3332
 802d288:	fb3a f303 	smulwb	r3, sl, r3
 802d28c:	f504 4095 	add.w	r0, r4, #19072	@ 0x4a80
 802d290:	005d      	lsls	r5, r3, #1
 802d292:	6005      	str	r5, [r0, #0]
 802d294:	f640 43cd 	movw	r3, #3277	@ 0xccd
 802d298:	fb3a f103 	smulwb	r1, sl, r3
 802d29c:	f644 2384 	movw	r3, #19076	@ 0x4a84
 802d2a0:	0049      	lsls	r1, r1, #1
 802d2a2:	50e1      	str	r1, [r4, r3]
 802d2a4:	f640 43cd 	movw	r3, #3277	@ 0xccd
 802d2a8:	fb3a f303 	smulwb	r3, sl, r3
 802d2ac:	f644 2688 	movw	r6, #19080	@ 0x4a88
 802d2b0:	005a      	lsls	r2, r3, #1
 802d2b2:	51a2      	str	r2, [r4, r6]
 802d2b4:	f643 73ff 	movw	r3, #16383	@ 0x3fff
 802d2b8:	e004      	b.n	802d2c4 <initialize+0x418>
 802d2ba:	bf00      	nop
 802d2bc:	0803abcc 	.word	0x0803abcc
 802d2c0:	3fff8000 	.word	0x3fff8000
 802d2c4:	fb3a f303 	smulwb	r3, sl, r3
 802d2c8:	9e00      	ldr	r6, [sp, #0]
 802d2ca:	7836      	ldrb	r6, [r6, #0]
 802d2cc:	f248 7e78 	movw	lr, #34680	@ 0x8778
 802d2d0:	1e77      	subs	r7, r6, #1
 802d2d2:	005b      	lsls	r3, r3, #1
 802d2d4:	2f01      	cmp	r7, #1
 802d2d6:	f844 300e 	str.w	r3, [r4, lr]
 802d2da:	f240 813d 	bls.w	802d558 <initialize+0x6ac>
 802d2de:	2e07      	cmp	r6, #7
 802d2e0:	f000 8144 	beq.w	802d56c <initialize+0x6c0>
 802d2e4:	2e0b      	cmp	r6, #11
 802d2e6:	f000 814d 	beq.w	802d584 <initialize+0x6d8>
 802d2ea:	f644 238c 	movw	r3, #19084	@ 0x4a8c
 802d2ee:	58e3      	ldr	r3, [r4, r3]
 802d2f0:	fb91 f1f3 	sdiv	r1, r1, r3
 802d2f4:	f644 267c 	movw	r6, #19068	@ 0x4a7c
 802d2f8:	020f      	lsls	r7, r1, #8
 802d2fa:	fb95 f5f3 	sdiv	r5, r5, r3
 802d2fe:	fb92 f2f3 	sdiv	r2, r2, r3
 802d302:	49ae      	ldr	r1, [pc, #696]	@ (802d5bc <initialize+0x710>)
 802d304:	fb91 f3f3 	sdiv	r3, r1, r3
 802d308:	021b      	lsls	r3, r3, #8
 802d30a:	51a3      	str	r3, [r4, r6]
 802d30c:	f644 2184 	movw	r1, #19076	@ 0x4a84
 802d310:	f644 2388 	movw	r3, #19080	@ 0x4a88
 802d314:	022d      	lsls	r5, r5, #8
 802d316:	0212      	lsls	r2, r2, #8
 802d318:	6005      	str	r5, [r0, #0]
 802d31a:	f504 4895 	add.w	r8, r4, #19072	@ 0x4a80
 802d31e:	5067      	str	r7, [r4, r1]
 802d320:	f504 459e 	add.w	r5, r4, #20224	@ 0x4f00
 802d324:	f504 499f 	add.w	r9, r4, #20352	@ 0x4f80
 802d328:	50e2      	str	r2, [r4, r3]
 802d32a:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 802d32e:	3504      	adds	r5, #4
 802d330:	f109 0964 	add.w	r9, r9, #100	@ 0x64
 802d334:	2700      	movs	r7, #0
 802d336:	4640      	mov	r0, r8
 802d338:	22a0      	movs	r2, #160	@ 0xa0
 802d33a:	2100      	movs	r1, #0
 802d33c:	f000 fc0a 	bl	802db54 <memset>
 802d340:	3520      	adds	r5, #32
 802d342:	f845 7c20 	str.w	r7, [r5, #-32]
 802d346:	f8c5 70c0 	str.w	r7, [r5, #192]	@ 0xc0
 802d34a:	f845 7c1c 	str.w	r7, [r5, #-28]
 802d34e:	f8c5 70c4 	str.w	r7, [r5, #196]	@ 0xc4
 802d352:	f845 7c18 	str.w	r7, [r5, #-24]
 802d356:	f8c5 70c8 	str.w	r7, [r5, #200]	@ 0xc8
 802d35a:	f845 7c14 	str.w	r7, [r5, #-20]
 802d35e:	f8c5 70cc 	str.w	r7, [r5, #204]	@ 0xcc
 802d362:	f845 7c10 	str.w	r7, [r5, #-16]
 802d366:	f8c5 70d0 	str.w	r7, [r5, #208]	@ 0xd0
 802d36a:	f845 7c0c 	str.w	r7, [r5, #-12]
 802d36e:	f8c5 70d4 	str.w	r7, [r5, #212]	@ 0xd4
 802d372:	f845 7c08 	str.w	r7, [r5, #-8]
 802d376:	f8c5 70d8 	str.w	r7, [r5, #216]	@ 0xd8
 802d37a:	f845 7c04 	str.w	r7, [r5, #-4]
 802d37e:	f8c5 70dc 	str.w	r7, [r5, #220]	@ 0xdc
 802d382:	454d      	cmp	r5, r9
 802d384:	f108 08a0 	add.w	r8, r8, #160	@ 0xa0
 802d388:	f04f 0600 	mov.w	r6, #0
 802d38c:	d1d3      	bne.n	802d336 <initialize+0x48a>
 802d38e:	f245 63e4 	movw	r3, #22244	@ 0x56e4
 802d392:	f504 47a1 	add.w	r7, r4, #20608	@ 0x5080
 802d396:	f504 45aa 	add.w	r5, r4, #21760	@ 0x5500
 802d39a:	f504 49ac 	add.w	r9, r4, #22016	@ 0x5600
 802d39e:	52e6      	strh	r6, [r4, r3]
 802d3a0:	3744      	adds	r7, #68	@ 0x44
 802d3a2:	3524      	adds	r5, #36	@ 0x24
 802d3a4:	f109 0904 	add.w	r9, r9, #4
 802d3a8:	4638      	mov	r0, r7
 802d3aa:	22a0      	movs	r2, #160	@ 0xa0
 802d3ac:	2100      	movs	r1, #0
 802d3ae:	f000 fbd1 	bl	802db54 <memset>
 802d3b2:	3520      	adds	r5, #32
 802d3b4:	f845 6c20 	str.w	r6, [r5, #-32]
 802d3b8:	f8c5 60c0 	str.w	r6, [r5, #192]	@ 0xc0
 802d3bc:	f845 6c1c 	str.w	r6, [r5, #-28]
 802d3c0:	f8c5 60c4 	str.w	r6, [r5, #196]	@ 0xc4
 802d3c4:	f845 6c18 	str.w	r6, [r5, #-24]
 802d3c8:	f8c5 60c8 	str.w	r6, [r5, #200]	@ 0xc8
 802d3cc:	f845 6c14 	str.w	r6, [r5, #-20]
 802d3d0:	f8c5 60cc 	str.w	r6, [r5, #204]	@ 0xcc
 802d3d4:	f845 6c10 	str.w	r6, [r5, #-16]
 802d3d8:	f8c5 60d0 	str.w	r6, [r5, #208]	@ 0xd0
 802d3dc:	f845 6c0c 	str.w	r6, [r5, #-12]
 802d3e0:	f8c5 60d4 	str.w	r6, [r5, #212]	@ 0xd4
 802d3e4:	f845 6c08 	str.w	r6, [r5, #-8]
 802d3e8:	f8c5 60d8 	str.w	r6, [r5, #216]	@ 0xd8
 802d3ec:	f845 6c04 	str.w	r6, [r5, #-4]
 802d3f0:	f8c5 60dc 	str.w	r6, [r5, #220]	@ 0xdc
 802d3f4:	454d      	cmp	r5, r9
 802d3f6:	f107 07a0 	add.w	r7, r7, #160	@ 0xa0
 802d3fa:	f04f 0800 	mov.w	r8, #0
 802d3fe:	d1d3      	bne.n	802d3a8 <initialize+0x4fc>
 802d400:	f245 65e6 	movw	r5, #22246	@ 0x56e6
 802d404:	f245 60e8 	movw	r0, #22248	@ 0x56e8
 802d408:	f824 8005 	strh.w	r8, [r4, r5]
 802d40c:	f245 61ea 	movw	r1, #22250	@ 0x56ea
 802d410:	f44f 75a5 	mov.w	r5, #330	@ 0x14a
 802d414:	5225      	strh	r5, [r4, r0]
 802d416:	f245 62ec 	movw	r2, #22252	@ 0x56ec
 802d41a:	251e      	movs	r5, #30
 802d41c:	5265      	strh	r5, [r4, r1]
 802d41e:	f245 63ee 	movw	r3, #22254	@ 0x56ee
 802d422:	25fa      	movs	r5, #250	@ 0xfa
 802d424:	52a5      	strh	r5, [r4, r2]
 802d426:	f245 60f0 	movw	r0, #22256	@ 0x56f0
 802d42a:	256e      	movs	r5, #110	@ 0x6e
 802d42c:	52e5      	strh	r5, [r4, r3]
 802d42e:	f245 61f2 	movw	r1, #22258	@ 0x56f2
 802d432:	f245 63f6 	movw	r3, #22262	@ 0x56f6
 802d436:	f245 62f4 	movw	r2, #22260	@ 0x56f4
 802d43a:	25d2      	movs	r5, #210	@ 0xd2
 802d43c:	5225      	strh	r5, [r4, r0]
 802d43e:	2596      	movs	r5, #150	@ 0x96
 802d440:	f504 40ad 	add.w	r0, r4, #22144	@ 0x5680
 802d444:	5265      	strh	r5, [r4, r1]
 802d446:	3078      	adds	r0, #120	@ 0x78
 802d448:	f824 8002 	strh.w	r8, [r4, r2]
 802d44c:	4641      	mov	r1, r8
 802d44e:	f824 8003 	strh.w	r8, [r4, r3]
 802d452:	2230      	movs	r2, #48	@ 0x30
 802d454:	f000 fb7e 	bl	802db54 <memset>
 802d458:	f504 40ae 	add.w	r0, r4, #22272	@ 0x5700
 802d45c:	4641      	mov	r1, r8
 802d45e:	2230      	movs	r2, #48	@ 0x30
 802d460:	3028      	adds	r0, #40	@ 0x28
 802d462:	f000 fb77 	bl	802db54 <memset>
 802d466:	9f02      	ldr	r7, [sp, #8]
 802d468:	f245 715c 	movw	r1, #22364	@ 0x575c
 802d46c:	f245 7658 	movw	r6, #22360	@ 0x5758
 802d470:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 802d474:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 802d478:	f303 0318 	ssat	r3, #25, r3
 802d47c:	01db      	lsls	r3, r3, #7
 802d47e:	1ad2      	subs	r2, r2, r3
 802d480:	f507 40ae 	add.w	r0, r7, #22272	@ 0x5700
 802d484:	f248 7560 	movw	r5, #34656	@ 0x8760
 802d488:	5063      	str	r3, [r4, r1]
 802d48a:	305c      	adds	r0, #92	@ 0x5c
 802d48c:	51a2      	str	r2, [r4, r6]
 802d48e:	f507 41de 	add.w	r1, r7, #28416	@ 0x6f00
 802d492:	f248 7664 	movw	r6, #34660	@ 0x8764
 802d496:	5160      	str	r0, [r4, r5]
 802d498:	315c      	adds	r1, #92	@ 0x5c
 802d49a:	f507 42db 	add.w	r2, r7, #28032	@ 0x6d80
 802d49e:	f248 7068 	movw	r0, #34664	@ 0x8768
 802d4a2:	51a1      	str	r1, [r4, r6]
 802d4a4:	f507 4305 	add.w	r3, r7, #34048	@ 0x8500
 802d4a8:	325c      	adds	r2, #92	@ 0x5c
 802d4aa:	f248 756c 	movw	r5, #34668	@ 0x876c
 802d4ae:	f248 717c 	movw	r1, #34684	@ 0x877c
 802d4b2:	5022      	str	r2, [r4, r0]
 802d4b4:	f248 7e80 	movw	lr, #34688	@ 0x8780
 802d4b8:	33dc      	adds	r3, #220	@ 0xdc
 802d4ba:	f248 7784 	movw	r7, #34692	@ 0x8784
 802d4be:	f248 7088 	movw	r0, #34696	@ 0x8788
 802d4c2:	5163      	str	r3, [r4, r5]
 802d4c4:	f248 768c 	movw	r6, #34700	@ 0x878c
 802d4c8:	f844 8001 	str.w	r8, [r4, r1]
 802d4cc:	f248 7374 	movw	r3, #34676	@ 0x8774
 802d4d0:	f248 7590 	movw	r5, #34704	@ 0x8790
 802d4d4:	f248 7194 	movw	r1, #34708	@ 0x8794
 802d4d8:	f248 7270 	movw	r2, #34672	@ 0x8770
 802d4dc:	f844 800e 	str.w	r8, [r4, lr]
 802d4e0:	f844 8007 	str.w	r8, [r4, r7]
 802d4e4:	f844 8000 	str.w	r8, [r4, r0]
 802d4e8:	f504 40ae 	add.w	r0, r4, #22272	@ 0x5700
 802d4ec:	f844 8006 	str.w	r8, [r4, r6]
 802d4f0:	3060      	adds	r0, #96	@ 0x60
 802d4f2:	f844 8005 	str.w	r8, [r4, r5]
 802d4f6:	f844 8001 	str.w	r8, [r4, r1]
 802d4fa:	f844 8002 	str.w	r8, [r4, r2]
 802d4fe:	4641      	mov	r1, r8
 802d500:	f844 8003 	str.w	r8, [r4, r3]
 802d504:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 802d508:	f000 fb24 	bl	802db54 <memset>
 802d50c:	f504 40de 	add.w	r0, r4, #28416	@ 0x6f00
 802d510:	3060      	adds	r0, #96	@ 0x60
 802d512:	4641      	mov	r1, r8
 802d514:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 802d518:	b005      	add	sp, #20
 802d51a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d51e:	f000 bb19 	b.w	802db54 <memset>
 802d522:	7893      	ldrb	r3, [r2, #2]
 802d524:	2b00      	cmp	r3, #0
 802d526:	d042      	beq.n	802d5ae <initialize+0x702>
 802d528:	2b01      	cmp	r3, #1
 802d52a:	d039      	beq.n	802d5a0 <initialize+0x6f4>
 802d52c:	f648 22e8 	movw	r2, #35560	@ 0x8ae8
 802d530:	2366      	movs	r3, #102	@ 0x66
 802d532:	5083      	str	r3, [r0, r2]
 802d534:	f44f 75ca 	mov.w	r5, #404	@ 0x194
 802d538:	f648 22f4 	movw	r2, #35572	@ 0x8af4
 802d53c:	f648 21f8 	movw	r1, #35576	@ 0x8af8
 802d540:	2601      	movs	r6, #1
 802d542:	50a6      	str	r6, [r4, r2]
 802d544:	f648 20fc 	movw	r0, #35580	@ 0x8afc
 802d548:	f504 420b 	add.w	r2, r4, #35584	@ 0x8b00
 802d54c:	2664      	movs	r6, #100	@ 0x64
 802d54e:	5066      	str	r6, [r4, r1]
 802d550:	2100      	movs	r1, #0
 802d552:	5021      	str	r1, [r4, r0]
 802d554:	6011      	str	r1, [r2, #0]
 802d556:	e4ce      	b.n	802cef6 <initialize+0x4a>
 802d558:	104b      	asrs	r3, r1, #1
 802d55a:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 802d55e:	f503 137e 	add.w	r3, r3, #4161536	@ 0x3f8000
 802d562:	f644 268c 	movw	r6, #19084	@ 0x4a8c
 802d566:	159b      	asrs	r3, r3, #22
 802d568:	51a3      	str	r3, [r4, r6]
 802d56a:	e6c1      	b.n	802d2f0 <initialize+0x444>
 802d56c:	10ab      	asrs	r3, r5, #2
 802d56e:	f103 637f 	add.w	r3, r3, #267386880	@ 0xff00000
 802d572:	f503 237e 	add.w	r3, r3, #1040384	@ 0xfe000
 802d576:	eb03 03a2 	add.w	r3, r3, r2, asr #2
 802d57a:	f644 268c 	movw	r6, #19084	@ 0x4a8c
 802d57e:	151b      	asrs	r3, r3, #20
 802d580:	51a3      	str	r3, [r4, r6]
 802d582:	e6b5      	b.n	802d2f0 <initialize+0x444>
 802d584:	10ae      	asrs	r6, r5, #2
 802d586:	f106 667f 	add.w	r6, r6, #267386880	@ 0xff00000
 802d58a:	f506 267e 	add.w	r6, r6, #1040384	@ 0xfe000
 802d58e:	eb06 03a1 	add.w	r3, r6, r1, asr #2
 802d592:	eb03 03a2 	add.w	r3, r3, r2, asr #2
 802d596:	f644 268c 	movw	r6, #19084	@ 0x4a8c
 802d59a:	151b      	asrs	r3, r3, #20
 802d59c:	51a3      	str	r3, [r4, r6]
 802d59e:	e6a7      	b.n	802d2f0 <initialize+0x444>
 802d5a0:	f648 22e8 	movw	r2, #35560	@ 0x8ae8
 802d5a4:	235e      	movs	r3, #94	@ 0x5e
 802d5a6:	5083      	str	r3, [r0, r2]
 802d5a8:	f44f 75ba 	mov.w	r5, #372	@ 0x174
 802d5ac:	e7c4      	b.n	802d538 <initialize+0x68c>
 802d5ae:	f648 22e8 	movw	r2, #35560	@ 0x8ae8
 802d5b2:	2344      	movs	r3, #68	@ 0x44
 802d5b4:	5083      	str	r3, [r0, r2]
 802d5b6:	f44f 7586 	mov.w	r5, #268	@ 0x10c
 802d5ba:	e7bd      	b.n	802d538 <initialize+0x68c>
 802d5bc:	7fff0000 	.word	0x7fff0000

0802d5c0 <downmix>:
 802d5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d5c4:	e890 000a 	ldmia.w	r0, {r1, r3}
 802d5c8:	785b      	ldrb	r3, [r3, #1]
 802d5ca:	68c6      	ldr	r6, [r0, #12]
 802d5cc:	f003 00f0 	and.w	r0, r3, #240	@ 0xf0
 802d5d0:	2810      	cmp	r0, #16
 802d5d2:	b083      	sub	sp, #12
 802d5d4:	f501 73c0 	add.w	r3, r1, #384	@ 0x180
 802d5d8:	f501 6290 	add.w	r2, r1, #1152	@ 0x480
 802d5dc:	d07c      	beq.n	802d6d8 <downmix+0x118>
 802d5de:	2870      	cmp	r0, #112	@ 0x70
 802d5e0:	f501 7440 	add.w	r4, r1, #768	@ 0x300
 802d5e4:	d13b      	bne.n	802d65e <downmix+0x9e>
 802d5e6:	2e00      	cmp	r6, #0
 802d5e8:	dd36      	ble.n	802d658 <downmix+0x98>
 802d5ea:	f601 0cfc 	addw	ip, r1, #2300	@ 0x8fc
 802d5ee:	460f      	mov	r7, r1
 802d5f0:	f8df a148 	ldr.w	sl, [pc, #328]	@ 802d73c <downmix+0x17c>
 802d5f4:	46e1      	mov	r9, ip
 802d5f6:	f201 51fc 	addw	r1, r1, #1532	@ 0x5fc
 802d5fa:	f207 787c 	addw	r8, r7, #1916	@ 0x77c
 802d5fe:	f04f 0e00 	mov.w	lr, #0
 802d602:	f851 5f04 	ldr.w	r5, [r1, #4]!
 802d606:	f85c 0f04 	ldr.w	r0, [ip, #4]!
 802d60a:	eb05 0b00 	add.w	fp, r5, r0
 802d60e:	6825      	ldr	r5, [r4, #0]
 802d610:	6810      	ldr	r0, [r2, #0]
 802d612:	445d      	add	r5, fp
 802d614:	4428      	add	r0, r5
 802d616:	fb5a f010 	smmulr	r0, sl, r0
 802d61a:	683d      	ldr	r5, [r7, #0]
 802d61c:	f300 001e 	ssat	r0, #31, r0
 802d620:	eb05 0540 	add.w	r5, r5, r0, lsl #1
 802d624:	f847 5b04 	str.w	r5, [r7], #4
 802d628:	f859 0f04 	ldr.w	r0, [r9, #4]!
 802d62c:	f858 bf04 	ldr.w	fp, [r8, #4]!
 802d630:	f854 5b04 	ldr.w	r5, [r4], #4
 802d634:	4483      	add	fp, r0
 802d636:	f852 0b04 	ldr.w	r0, [r2], #4
 802d63a:	445d      	add	r5, fp
 802d63c:	4405      	add	r5, r0
 802d63e:	fb5a f515 	smmulr	r5, sl, r5
 802d642:	6818      	ldr	r0, [r3, #0]
 802d644:	f305 051e 	ssat	r5, #31, r5
 802d648:	f10e 0e01 	add.w	lr, lr, #1
 802d64c:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 802d650:	4576      	cmp	r6, lr
 802d652:	f843 0b04 	str.w	r0, [r3], #4
 802d656:	d1d4      	bne.n	802d602 <downmix+0x42>
 802d658:	b003      	add	sp, #12
 802d65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d65e:	2e00      	cmp	r6, #0
 802d660:	ddfa      	ble.n	802d658 <downmix+0x98>
 802d662:	f8df 90d8 	ldr.w	r9, [pc, #216]	@ 802d73c <downmix+0x17c>
 802d666:	460f      	mov	r7, r1
 802d668:	f201 787c 	addw	r8, r1, #1916	@ 0x77c
 802d66c:	f601 2c7c 	addw	ip, r1, #2684	@ 0xa7c
 802d670:	f201 5efc 	addw	lr, r1, #1532	@ 0x5fc
 802d674:	f04f 0a00 	mov.w	sl, #0
 802d678:	f601 01fc 	addw	r1, r1, #2300	@ 0x8fc
 802d67c:	f85e 5f04 	ldr.w	r5, [lr, #4]!
 802d680:	f851 0f04 	ldr.w	r0, [r1, #4]!
 802d684:	eb05 0b00 	add.w	fp, r5, r0
 802d688:	6825      	ldr	r5, [r4, #0]
 802d68a:	6810      	ldr	r0, [r2, #0]
 802d68c:	445d      	add	r5, fp
 802d68e:	4428      	add	r0, r5
 802d690:	fb59 f010 	smmulr	r0, r9, r0
 802d694:	683d      	ldr	r5, [r7, #0]
 802d696:	f300 001e 	ssat	r0, #31, r0
 802d69a:	eb05 0540 	add.w	r5, r5, r0, lsl #1
 802d69e:	f847 5b04 	str.w	r5, [r7], #4
 802d6a2:	f85c 0f04 	ldr.w	r0, [ip, #4]!
 802d6a6:	f858 bf04 	ldr.w	fp, [r8, #4]!
 802d6aa:	f854 5b04 	ldr.w	r5, [r4], #4
 802d6ae:	4483      	add	fp, r0
 802d6b0:	f852 0b04 	ldr.w	r0, [r2], #4
 802d6b4:	445d      	add	r5, fp
 802d6b6:	4405      	add	r5, r0
 802d6b8:	fb59 f515 	smmulr	r5, r9, r5
 802d6bc:	6818      	ldr	r0, [r3, #0]
 802d6be:	f305 051e 	ssat	r5, #31, r5
 802d6c2:	f10a 0a01 	add.w	sl, sl, #1
 802d6c6:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 802d6ca:	4556      	cmp	r6, sl
 802d6cc:	f843 0b04 	str.w	r0, [r3], #4
 802d6d0:	d1d4      	bne.n	802d67c <downmix+0xbc>
 802d6d2:	b003      	add	sp, #12
 802d6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d6d8:	2e00      	cmp	r6, #0
 802d6da:	ddbd      	ble.n	802d658 <downmix+0x98>
 802d6dc:	f501 7e3f 	add.w	lr, r1, #764	@ 0x2fc
 802d6e0:	f8df c058 	ldr.w	ip, [pc, #88]	@ 802d73c <downmix+0x17c>
 802d6e4:	f501 65c0 	add.w	r5, r1, #1536	@ 0x600
 802d6e8:	46f0      	mov	r8, lr
 802d6ea:	2700      	movs	r7, #0
 802d6ec:	682c      	ldr	r4, [r5, #0]
 802d6ee:	9401      	str	r4, [sp, #4]
 802d6f0:	f85e 0f04 	ldr.w	r0, [lr, #4]!
 802d6f4:	6814      	ldr	r4, [r2, #0]
 802d6f6:	4420      	add	r0, r4
 802d6f8:	9c01      	ldr	r4, [sp, #4]
 802d6fa:	1b00      	subs	r0, r0, r4
 802d6fc:	fb5c f010 	smmulr	r0, ip, r0
 802d700:	680c      	ldr	r4, [r1, #0]
 802d702:	f300 001e 	ssat	r0, #31, r0
 802d706:	eb04 0040 	add.w	r0, r4, r0, lsl #1
 802d70a:	f841 0b04 	str.w	r0, [r1], #4
 802d70e:	f858 9f04 	ldr.w	r9, [r8, #4]!
 802d712:	f852 4b04 	ldr.w	r4, [r2], #4
 802d716:	f855 0b04 	ldr.w	r0, [r5], #4
 802d71a:	444c      	add	r4, r9
 802d71c:	4404      	add	r4, r0
 802d71e:	fb5c f414 	smmulr	r4, ip, r4
 802d722:	6818      	ldr	r0, [r3, #0]
 802d724:	f304 041e 	ssat	r4, #31, r4
 802d728:	3701      	adds	r7, #1
 802d72a:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 802d72e:	42be      	cmp	r6, r7
 802d730:	f843 0b04 	str.w	r0, [r3], #4
 802d734:	d1da      	bne.n	802d6ec <downmix+0x12c>
 802d736:	b003      	add	sp, #12
 802d738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d73c:	5a7ef9db 	.word	0x5a7ef9db

0802d740 <exit>:
 802d740:	b508      	push	{r3, lr}
 802d742:	4b06      	ldr	r3, [pc, #24]	@ (802d75c <exit+0x1c>)
 802d744:	4604      	mov	r4, r0
 802d746:	b113      	cbz	r3, 802d74e <exit+0xe>
 802d748:	2100      	movs	r1, #0
 802d74a:	f3af 8000 	nop.w
 802d74e:	4b04      	ldr	r3, [pc, #16]	@ (802d760 <exit+0x20>)
 802d750:	681b      	ldr	r3, [r3, #0]
 802d752:	b103      	cbz	r3, 802d756 <exit+0x16>
 802d754:	4798      	blx	r3
 802d756:	4620      	mov	r0, r4
 802d758:	f7d5 f890 	bl	800287c <_exit>
 802d75c:	00000000 	.word	0x00000000
 802d760:	2001d9e0 	.word	0x2001d9e0

0802d764 <std>:
 802d764:	2300      	movs	r3, #0
 802d766:	b510      	push	{r4, lr}
 802d768:	4604      	mov	r4, r0
 802d76a:	e9c0 3300 	strd	r3, r3, [r0]
 802d76e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802d772:	6083      	str	r3, [r0, #8]
 802d774:	8181      	strh	r1, [r0, #12]
 802d776:	6643      	str	r3, [r0, #100]	@ 0x64
 802d778:	81c2      	strh	r2, [r0, #14]
 802d77a:	6183      	str	r3, [r0, #24]
 802d77c:	4619      	mov	r1, r3
 802d77e:	2208      	movs	r2, #8
 802d780:	305c      	adds	r0, #92	@ 0x5c
 802d782:	f000 f9e7 	bl	802db54 <memset>
 802d786:	4b0d      	ldr	r3, [pc, #52]	@ (802d7bc <std+0x58>)
 802d788:	6263      	str	r3, [r4, #36]	@ 0x24
 802d78a:	4b0d      	ldr	r3, [pc, #52]	@ (802d7c0 <std+0x5c>)
 802d78c:	62a3      	str	r3, [r4, #40]	@ 0x28
 802d78e:	4b0d      	ldr	r3, [pc, #52]	@ (802d7c4 <std+0x60>)
 802d790:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802d792:	4b0d      	ldr	r3, [pc, #52]	@ (802d7c8 <std+0x64>)
 802d794:	6323      	str	r3, [r4, #48]	@ 0x30
 802d796:	4b0d      	ldr	r3, [pc, #52]	@ (802d7cc <std+0x68>)
 802d798:	6224      	str	r4, [r4, #32]
 802d79a:	429c      	cmp	r4, r3
 802d79c:	d006      	beq.n	802d7ac <std+0x48>
 802d79e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802d7a2:	4294      	cmp	r4, r2
 802d7a4:	d002      	beq.n	802d7ac <std+0x48>
 802d7a6:	33d0      	adds	r3, #208	@ 0xd0
 802d7a8:	429c      	cmp	r4, r3
 802d7aa:	d105      	bne.n	802d7b8 <std+0x54>
 802d7ac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802d7b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d7b4:	f000 ba46 	b.w	802dc44 <__retarget_lock_init_recursive>
 802d7b8:	bd10      	pop	{r4, pc}
 802d7ba:	bf00      	nop
 802d7bc:	0802d9a5 	.word	0x0802d9a5
 802d7c0:	0802d9c7 	.word	0x0802d9c7
 802d7c4:	0802d9ff 	.word	0x0802d9ff
 802d7c8:	0802da23 	.word	0x0802da23
 802d7cc:	2001d8a8 	.word	0x2001d8a8

0802d7d0 <stdio_exit_handler>:
 802d7d0:	4a02      	ldr	r2, [pc, #8]	@ (802d7dc <stdio_exit_handler+0xc>)
 802d7d2:	4903      	ldr	r1, [pc, #12]	@ (802d7e0 <stdio_exit_handler+0x10>)
 802d7d4:	4803      	ldr	r0, [pc, #12]	@ (802d7e4 <stdio_exit_handler+0x14>)
 802d7d6:	f000 b869 	b.w	802d8ac <_fwalk_sglue>
 802d7da:	bf00      	nop
 802d7dc:	20000a24 	.word	0x20000a24
 802d7e0:	0802e151 	.word	0x0802e151
 802d7e4:	20000a34 	.word	0x20000a34

0802d7e8 <cleanup_stdio>:
 802d7e8:	6841      	ldr	r1, [r0, #4]
 802d7ea:	4b0c      	ldr	r3, [pc, #48]	@ (802d81c <cleanup_stdio+0x34>)
 802d7ec:	4299      	cmp	r1, r3
 802d7ee:	b510      	push	{r4, lr}
 802d7f0:	4604      	mov	r4, r0
 802d7f2:	d001      	beq.n	802d7f8 <cleanup_stdio+0x10>
 802d7f4:	f000 fcac 	bl	802e150 <_fflush_r>
 802d7f8:	68a1      	ldr	r1, [r4, #8]
 802d7fa:	4b09      	ldr	r3, [pc, #36]	@ (802d820 <cleanup_stdio+0x38>)
 802d7fc:	4299      	cmp	r1, r3
 802d7fe:	d002      	beq.n	802d806 <cleanup_stdio+0x1e>
 802d800:	4620      	mov	r0, r4
 802d802:	f000 fca5 	bl	802e150 <_fflush_r>
 802d806:	68e1      	ldr	r1, [r4, #12]
 802d808:	4b06      	ldr	r3, [pc, #24]	@ (802d824 <cleanup_stdio+0x3c>)
 802d80a:	4299      	cmp	r1, r3
 802d80c:	d004      	beq.n	802d818 <cleanup_stdio+0x30>
 802d80e:	4620      	mov	r0, r4
 802d810:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d814:	f000 bc9c 	b.w	802e150 <_fflush_r>
 802d818:	bd10      	pop	{r4, pc}
 802d81a:	bf00      	nop
 802d81c:	2001d8a8 	.word	0x2001d8a8
 802d820:	2001d910 	.word	0x2001d910
 802d824:	2001d978 	.word	0x2001d978

0802d828 <global_stdio_init.part.0>:
 802d828:	b510      	push	{r4, lr}
 802d82a:	4b0b      	ldr	r3, [pc, #44]	@ (802d858 <global_stdio_init.part.0+0x30>)
 802d82c:	4c0b      	ldr	r4, [pc, #44]	@ (802d85c <global_stdio_init.part.0+0x34>)
 802d82e:	4a0c      	ldr	r2, [pc, #48]	@ (802d860 <global_stdio_init.part.0+0x38>)
 802d830:	601a      	str	r2, [r3, #0]
 802d832:	4620      	mov	r0, r4
 802d834:	2200      	movs	r2, #0
 802d836:	2104      	movs	r1, #4
 802d838:	f7ff ff94 	bl	802d764 <std>
 802d83c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802d840:	2201      	movs	r2, #1
 802d842:	2109      	movs	r1, #9
 802d844:	f7ff ff8e 	bl	802d764 <std>
 802d848:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802d84c:	2202      	movs	r2, #2
 802d84e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d852:	2112      	movs	r1, #18
 802d854:	f7ff bf86 	b.w	802d764 <std>
 802d858:	2001d9e0 	.word	0x2001d9e0
 802d85c:	2001d8a8 	.word	0x2001d8a8
 802d860:	0802d7d1 	.word	0x0802d7d1

0802d864 <__sfp_lock_acquire>:
 802d864:	4801      	ldr	r0, [pc, #4]	@ (802d86c <__sfp_lock_acquire+0x8>)
 802d866:	f000 b9ee 	b.w	802dc46 <__retarget_lock_acquire_recursive>
 802d86a:	bf00      	nop
 802d86c:	2001d9e9 	.word	0x2001d9e9

0802d870 <__sfp_lock_release>:
 802d870:	4801      	ldr	r0, [pc, #4]	@ (802d878 <__sfp_lock_release+0x8>)
 802d872:	f000 b9e9 	b.w	802dc48 <__retarget_lock_release_recursive>
 802d876:	bf00      	nop
 802d878:	2001d9e9 	.word	0x2001d9e9

0802d87c <__sinit>:
 802d87c:	b510      	push	{r4, lr}
 802d87e:	4604      	mov	r4, r0
 802d880:	f7ff fff0 	bl	802d864 <__sfp_lock_acquire>
 802d884:	6a23      	ldr	r3, [r4, #32]
 802d886:	b11b      	cbz	r3, 802d890 <__sinit+0x14>
 802d888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d88c:	f7ff bff0 	b.w	802d870 <__sfp_lock_release>
 802d890:	4b04      	ldr	r3, [pc, #16]	@ (802d8a4 <__sinit+0x28>)
 802d892:	6223      	str	r3, [r4, #32]
 802d894:	4b04      	ldr	r3, [pc, #16]	@ (802d8a8 <__sinit+0x2c>)
 802d896:	681b      	ldr	r3, [r3, #0]
 802d898:	2b00      	cmp	r3, #0
 802d89a:	d1f5      	bne.n	802d888 <__sinit+0xc>
 802d89c:	f7ff ffc4 	bl	802d828 <global_stdio_init.part.0>
 802d8a0:	e7f2      	b.n	802d888 <__sinit+0xc>
 802d8a2:	bf00      	nop
 802d8a4:	0802d7e9 	.word	0x0802d7e9
 802d8a8:	2001d9e0 	.word	0x2001d9e0

0802d8ac <_fwalk_sglue>:
 802d8ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d8b0:	4607      	mov	r7, r0
 802d8b2:	4688      	mov	r8, r1
 802d8b4:	4614      	mov	r4, r2
 802d8b6:	2600      	movs	r6, #0
 802d8b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802d8bc:	f1b9 0901 	subs.w	r9, r9, #1
 802d8c0:	d505      	bpl.n	802d8ce <_fwalk_sglue+0x22>
 802d8c2:	6824      	ldr	r4, [r4, #0]
 802d8c4:	2c00      	cmp	r4, #0
 802d8c6:	d1f7      	bne.n	802d8b8 <_fwalk_sglue+0xc>
 802d8c8:	4630      	mov	r0, r6
 802d8ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d8ce:	89ab      	ldrh	r3, [r5, #12]
 802d8d0:	2b01      	cmp	r3, #1
 802d8d2:	d907      	bls.n	802d8e4 <_fwalk_sglue+0x38>
 802d8d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802d8d8:	3301      	adds	r3, #1
 802d8da:	d003      	beq.n	802d8e4 <_fwalk_sglue+0x38>
 802d8dc:	4629      	mov	r1, r5
 802d8de:	4638      	mov	r0, r7
 802d8e0:	47c0      	blx	r8
 802d8e2:	4306      	orrs	r6, r0
 802d8e4:	3568      	adds	r5, #104	@ 0x68
 802d8e6:	e7e9      	b.n	802d8bc <_fwalk_sglue+0x10>

0802d8e8 <_puts_r>:
 802d8e8:	6a03      	ldr	r3, [r0, #32]
 802d8ea:	b570      	push	{r4, r5, r6, lr}
 802d8ec:	6884      	ldr	r4, [r0, #8]
 802d8ee:	4605      	mov	r5, r0
 802d8f0:	460e      	mov	r6, r1
 802d8f2:	b90b      	cbnz	r3, 802d8f8 <_puts_r+0x10>
 802d8f4:	f7ff ffc2 	bl	802d87c <__sinit>
 802d8f8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802d8fa:	07db      	lsls	r3, r3, #31
 802d8fc:	d405      	bmi.n	802d90a <_puts_r+0x22>
 802d8fe:	89a3      	ldrh	r3, [r4, #12]
 802d900:	0598      	lsls	r0, r3, #22
 802d902:	d402      	bmi.n	802d90a <_puts_r+0x22>
 802d904:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802d906:	f000 f99e 	bl	802dc46 <__retarget_lock_acquire_recursive>
 802d90a:	89a3      	ldrh	r3, [r4, #12]
 802d90c:	0719      	lsls	r1, r3, #28
 802d90e:	d502      	bpl.n	802d916 <_puts_r+0x2e>
 802d910:	6923      	ldr	r3, [r4, #16]
 802d912:	2b00      	cmp	r3, #0
 802d914:	d135      	bne.n	802d982 <_puts_r+0x9a>
 802d916:	4621      	mov	r1, r4
 802d918:	4628      	mov	r0, r5
 802d91a:	f000 f8c5 	bl	802daa8 <__swsetup_r>
 802d91e:	b380      	cbz	r0, 802d982 <_puts_r+0x9a>
 802d920:	f04f 35ff 	mov.w	r5, #4294967295
 802d924:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802d926:	07da      	lsls	r2, r3, #31
 802d928:	d405      	bmi.n	802d936 <_puts_r+0x4e>
 802d92a:	89a3      	ldrh	r3, [r4, #12]
 802d92c:	059b      	lsls	r3, r3, #22
 802d92e:	d402      	bmi.n	802d936 <_puts_r+0x4e>
 802d930:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802d932:	f000 f989 	bl	802dc48 <__retarget_lock_release_recursive>
 802d936:	4628      	mov	r0, r5
 802d938:	bd70      	pop	{r4, r5, r6, pc}
 802d93a:	2b00      	cmp	r3, #0
 802d93c:	da04      	bge.n	802d948 <_puts_r+0x60>
 802d93e:	69a2      	ldr	r2, [r4, #24]
 802d940:	429a      	cmp	r2, r3
 802d942:	dc17      	bgt.n	802d974 <_puts_r+0x8c>
 802d944:	290a      	cmp	r1, #10
 802d946:	d015      	beq.n	802d974 <_puts_r+0x8c>
 802d948:	6823      	ldr	r3, [r4, #0]
 802d94a:	1c5a      	adds	r2, r3, #1
 802d94c:	6022      	str	r2, [r4, #0]
 802d94e:	7019      	strb	r1, [r3, #0]
 802d950:	68a3      	ldr	r3, [r4, #8]
 802d952:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802d956:	3b01      	subs	r3, #1
 802d958:	60a3      	str	r3, [r4, #8]
 802d95a:	2900      	cmp	r1, #0
 802d95c:	d1ed      	bne.n	802d93a <_puts_r+0x52>
 802d95e:	2b00      	cmp	r3, #0
 802d960:	da11      	bge.n	802d986 <_puts_r+0x9e>
 802d962:	4622      	mov	r2, r4
 802d964:	210a      	movs	r1, #10
 802d966:	4628      	mov	r0, r5
 802d968:	f000 f85f 	bl	802da2a <__swbuf_r>
 802d96c:	3001      	adds	r0, #1
 802d96e:	d0d7      	beq.n	802d920 <_puts_r+0x38>
 802d970:	250a      	movs	r5, #10
 802d972:	e7d7      	b.n	802d924 <_puts_r+0x3c>
 802d974:	4622      	mov	r2, r4
 802d976:	4628      	mov	r0, r5
 802d978:	f000 f857 	bl	802da2a <__swbuf_r>
 802d97c:	3001      	adds	r0, #1
 802d97e:	d1e7      	bne.n	802d950 <_puts_r+0x68>
 802d980:	e7ce      	b.n	802d920 <_puts_r+0x38>
 802d982:	3e01      	subs	r6, #1
 802d984:	e7e4      	b.n	802d950 <_puts_r+0x68>
 802d986:	6823      	ldr	r3, [r4, #0]
 802d988:	1c5a      	adds	r2, r3, #1
 802d98a:	6022      	str	r2, [r4, #0]
 802d98c:	220a      	movs	r2, #10
 802d98e:	701a      	strb	r2, [r3, #0]
 802d990:	e7ee      	b.n	802d970 <_puts_r+0x88>
	...

0802d994 <puts>:
 802d994:	4b02      	ldr	r3, [pc, #8]	@ (802d9a0 <puts+0xc>)
 802d996:	4601      	mov	r1, r0
 802d998:	6818      	ldr	r0, [r3, #0]
 802d99a:	f7ff bfa5 	b.w	802d8e8 <_puts_r>
 802d99e:	bf00      	nop
 802d9a0:	20000a30 	.word	0x20000a30

0802d9a4 <__sread>:
 802d9a4:	b510      	push	{r4, lr}
 802d9a6:	460c      	mov	r4, r1
 802d9a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d9ac:	f000 f8fc 	bl	802dba8 <_read_r>
 802d9b0:	2800      	cmp	r0, #0
 802d9b2:	bfab      	itete	ge
 802d9b4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802d9b6:	89a3      	ldrhlt	r3, [r4, #12]
 802d9b8:	181b      	addge	r3, r3, r0
 802d9ba:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802d9be:	bfac      	ite	ge
 802d9c0:	6563      	strge	r3, [r4, #84]	@ 0x54
 802d9c2:	81a3      	strhlt	r3, [r4, #12]
 802d9c4:	bd10      	pop	{r4, pc}

0802d9c6 <__swrite>:
 802d9c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d9ca:	461f      	mov	r7, r3
 802d9cc:	898b      	ldrh	r3, [r1, #12]
 802d9ce:	05db      	lsls	r3, r3, #23
 802d9d0:	4605      	mov	r5, r0
 802d9d2:	460c      	mov	r4, r1
 802d9d4:	4616      	mov	r6, r2
 802d9d6:	d505      	bpl.n	802d9e4 <__swrite+0x1e>
 802d9d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d9dc:	2302      	movs	r3, #2
 802d9de:	2200      	movs	r2, #0
 802d9e0:	f000 f8d0 	bl	802db84 <_lseek_r>
 802d9e4:	89a3      	ldrh	r3, [r4, #12]
 802d9e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d9ea:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802d9ee:	81a3      	strh	r3, [r4, #12]
 802d9f0:	4632      	mov	r2, r6
 802d9f2:	463b      	mov	r3, r7
 802d9f4:	4628      	mov	r0, r5
 802d9f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802d9fa:	f000 b8e7 	b.w	802dbcc <_write_r>

0802d9fe <__sseek>:
 802d9fe:	b510      	push	{r4, lr}
 802da00:	460c      	mov	r4, r1
 802da02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802da06:	f000 f8bd 	bl	802db84 <_lseek_r>
 802da0a:	1c43      	adds	r3, r0, #1
 802da0c:	89a3      	ldrh	r3, [r4, #12]
 802da0e:	bf15      	itete	ne
 802da10:	6560      	strne	r0, [r4, #84]	@ 0x54
 802da12:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802da16:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802da1a:	81a3      	strheq	r3, [r4, #12]
 802da1c:	bf18      	it	ne
 802da1e:	81a3      	strhne	r3, [r4, #12]
 802da20:	bd10      	pop	{r4, pc}

0802da22 <__sclose>:
 802da22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802da26:	f000 b89d 	b.w	802db64 <_close_r>

0802da2a <__swbuf_r>:
 802da2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802da2c:	460e      	mov	r6, r1
 802da2e:	4614      	mov	r4, r2
 802da30:	4605      	mov	r5, r0
 802da32:	b118      	cbz	r0, 802da3c <__swbuf_r+0x12>
 802da34:	6a03      	ldr	r3, [r0, #32]
 802da36:	b90b      	cbnz	r3, 802da3c <__swbuf_r+0x12>
 802da38:	f7ff ff20 	bl	802d87c <__sinit>
 802da3c:	69a3      	ldr	r3, [r4, #24]
 802da3e:	60a3      	str	r3, [r4, #8]
 802da40:	89a3      	ldrh	r3, [r4, #12]
 802da42:	071a      	lsls	r2, r3, #28
 802da44:	d501      	bpl.n	802da4a <__swbuf_r+0x20>
 802da46:	6923      	ldr	r3, [r4, #16]
 802da48:	b943      	cbnz	r3, 802da5c <__swbuf_r+0x32>
 802da4a:	4621      	mov	r1, r4
 802da4c:	4628      	mov	r0, r5
 802da4e:	f000 f82b 	bl	802daa8 <__swsetup_r>
 802da52:	b118      	cbz	r0, 802da5c <__swbuf_r+0x32>
 802da54:	f04f 37ff 	mov.w	r7, #4294967295
 802da58:	4638      	mov	r0, r7
 802da5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802da5c:	6823      	ldr	r3, [r4, #0]
 802da5e:	6922      	ldr	r2, [r4, #16]
 802da60:	1a98      	subs	r0, r3, r2
 802da62:	6963      	ldr	r3, [r4, #20]
 802da64:	b2f6      	uxtb	r6, r6
 802da66:	4283      	cmp	r3, r0
 802da68:	4637      	mov	r7, r6
 802da6a:	dc05      	bgt.n	802da78 <__swbuf_r+0x4e>
 802da6c:	4621      	mov	r1, r4
 802da6e:	4628      	mov	r0, r5
 802da70:	f000 fb6e 	bl	802e150 <_fflush_r>
 802da74:	2800      	cmp	r0, #0
 802da76:	d1ed      	bne.n	802da54 <__swbuf_r+0x2a>
 802da78:	68a3      	ldr	r3, [r4, #8]
 802da7a:	3b01      	subs	r3, #1
 802da7c:	60a3      	str	r3, [r4, #8]
 802da7e:	6823      	ldr	r3, [r4, #0]
 802da80:	1c5a      	adds	r2, r3, #1
 802da82:	6022      	str	r2, [r4, #0]
 802da84:	701e      	strb	r6, [r3, #0]
 802da86:	6962      	ldr	r2, [r4, #20]
 802da88:	1c43      	adds	r3, r0, #1
 802da8a:	429a      	cmp	r2, r3
 802da8c:	d004      	beq.n	802da98 <__swbuf_r+0x6e>
 802da8e:	89a3      	ldrh	r3, [r4, #12]
 802da90:	07db      	lsls	r3, r3, #31
 802da92:	d5e1      	bpl.n	802da58 <__swbuf_r+0x2e>
 802da94:	2e0a      	cmp	r6, #10
 802da96:	d1df      	bne.n	802da58 <__swbuf_r+0x2e>
 802da98:	4621      	mov	r1, r4
 802da9a:	4628      	mov	r0, r5
 802da9c:	f000 fb58 	bl	802e150 <_fflush_r>
 802daa0:	2800      	cmp	r0, #0
 802daa2:	d0d9      	beq.n	802da58 <__swbuf_r+0x2e>
 802daa4:	e7d6      	b.n	802da54 <__swbuf_r+0x2a>
	...

0802daa8 <__swsetup_r>:
 802daa8:	b538      	push	{r3, r4, r5, lr}
 802daaa:	4b29      	ldr	r3, [pc, #164]	@ (802db50 <__swsetup_r+0xa8>)
 802daac:	4605      	mov	r5, r0
 802daae:	6818      	ldr	r0, [r3, #0]
 802dab0:	460c      	mov	r4, r1
 802dab2:	b118      	cbz	r0, 802dabc <__swsetup_r+0x14>
 802dab4:	6a03      	ldr	r3, [r0, #32]
 802dab6:	b90b      	cbnz	r3, 802dabc <__swsetup_r+0x14>
 802dab8:	f7ff fee0 	bl	802d87c <__sinit>
 802dabc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802dac0:	0719      	lsls	r1, r3, #28
 802dac2:	d422      	bmi.n	802db0a <__swsetup_r+0x62>
 802dac4:	06da      	lsls	r2, r3, #27
 802dac6:	d407      	bmi.n	802dad8 <__swsetup_r+0x30>
 802dac8:	2209      	movs	r2, #9
 802daca:	602a      	str	r2, [r5, #0]
 802dacc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802dad0:	81a3      	strh	r3, [r4, #12]
 802dad2:	f04f 30ff 	mov.w	r0, #4294967295
 802dad6:	e033      	b.n	802db40 <__swsetup_r+0x98>
 802dad8:	0758      	lsls	r0, r3, #29
 802dada:	d512      	bpl.n	802db02 <__swsetup_r+0x5a>
 802dadc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802dade:	b141      	cbz	r1, 802daf2 <__swsetup_r+0x4a>
 802dae0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802dae4:	4299      	cmp	r1, r3
 802dae6:	d002      	beq.n	802daee <__swsetup_r+0x46>
 802dae8:	4628      	mov	r0, r5
 802daea:	f000 f9b5 	bl	802de58 <_free_r>
 802daee:	2300      	movs	r3, #0
 802daf0:	6363      	str	r3, [r4, #52]	@ 0x34
 802daf2:	89a3      	ldrh	r3, [r4, #12]
 802daf4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802daf8:	81a3      	strh	r3, [r4, #12]
 802dafa:	2300      	movs	r3, #0
 802dafc:	6063      	str	r3, [r4, #4]
 802dafe:	6923      	ldr	r3, [r4, #16]
 802db00:	6023      	str	r3, [r4, #0]
 802db02:	89a3      	ldrh	r3, [r4, #12]
 802db04:	f043 0308 	orr.w	r3, r3, #8
 802db08:	81a3      	strh	r3, [r4, #12]
 802db0a:	6923      	ldr	r3, [r4, #16]
 802db0c:	b94b      	cbnz	r3, 802db22 <__swsetup_r+0x7a>
 802db0e:	89a3      	ldrh	r3, [r4, #12]
 802db10:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802db14:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802db18:	d003      	beq.n	802db22 <__swsetup_r+0x7a>
 802db1a:	4621      	mov	r1, r4
 802db1c:	4628      	mov	r0, r5
 802db1e:	f000 fb65 	bl	802e1ec <__smakebuf_r>
 802db22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802db26:	f013 0201 	ands.w	r2, r3, #1
 802db2a:	d00a      	beq.n	802db42 <__swsetup_r+0x9a>
 802db2c:	2200      	movs	r2, #0
 802db2e:	60a2      	str	r2, [r4, #8]
 802db30:	6962      	ldr	r2, [r4, #20]
 802db32:	4252      	negs	r2, r2
 802db34:	61a2      	str	r2, [r4, #24]
 802db36:	6922      	ldr	r2, [r4, #16]
 802db38:	b942      	cbnz	r2, 802db4c <__swsetup_r+0xa4>
 802db3a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802db3e:	d1c5      	bne.n	802dacc <__swsetup_r+0x24>
 802db40:	bd38      	pop	{r3, r4, r5, pc}
 802db42:	0799      	lsls	r1, r3, #30
 802db44:	bf58      	it	pl
 802db46:	6962      	ldrpl	r2, [r4, #20]
 802db48:	60a2      	str	r2, [r4, #8]
 802db4a:	e7f4      	b.n	802db36 <__swsetup_r+0x8e>
 802db4c:	2000      	movs	r0, #0
 802db4e:	e7f7      	b.n	802db40 <__swsetup_r+0x98>
 802db50:	20000a30 	.word	0x20000a30

0802db54 <memset>:
 802db54:	4402      	add	r2, r0
 802db56:	4603      	mov	r3, r0
 802db58:	4293      	cmp	r3, r2
 802db5a:	d100      	bne.n	802db5e <memset+0xa>
 802db5c:	4770      	bx	lr
 802db5e:	f803 1b01 	strb.w	r1, [r3], #1
 802db62:	e7f9      	b.n	802db58 <memset+0x4>

0802db64 <_close_r>:
 802db64:	b538      	push	{r3, r4, r5, lr}
 802db66:	4d06      	ldr	r5, [pc, #24]	@ (802db80 <_close_r+0x1c>)
 802db68:	2300      	movs	r3, #0
 802db6a:	4604      	mov	r4, r0
 802db6c:	4608      	mov	r0, r1
 802db6e:	602b      	str	r3, [r5, #0]
 802db70:	f7d4 fec8 	bl	8002904 <_close>
 802db74:	1c43      	adds	r3, r0, #1
 802db76:	d102      	bne.n	802db7e <_close_r+0x1a>
 802db78:	682b      	ldr	r3, [r5, #0]
 802db7a:	b103      	cbz	r3, 802db7e <_close_r+0x1a>
 802db7c:	6023      	str	r3, [r4, #0]
 802db7e:	bd38      	pop	{r3, r4, r5, pc}
 802db80:	2001d9e4 	.word	0x2001d9e4

0802db84 <_lseek_r>:
 802db84:	b538      	push	{r3, r4, r5, lr}
 802db86:	4d07      	ldr	r5, [pc, #28]	@ (802dba4 <_lseek_r+0x20>)
 802db88:	4604      	mov	r4, r0
 802db8a:	4608      	mov	r0, r1
 802db8c:	4611      	mov	r1, r2
 802db8e:	2200      	movs	r2, #0
 802db90:	602a      	str	r2, [r5, #0]
 802db92:	461a      	mov	r2, r3
 802db94:	f7d4 fedd 	bl	8002952 <_lseek>
 802db98:	1c43      	adds	r3, r0, #1
 802db9a:	d102      	bne.n	802dba2 <_lseek_r+0x1e>
 802db9c:	682b      	ldr	r3, [r5, #0]
 802db9e:	b103      	cbz	r3, 802dba2 <_lseek_r+0x1e>
 802dba0:	6023      	str	r3, [r4, #0]
 802dba2:	bd38      	pop	{r3, r4, r5, pc}
 802dba4:	2001d9e4 	.word	0x2001d9e4

0802dba8 <_read_r>:
 802dba8:	b538      	push	{r3, r4, r5, lr}
 802dbaa:	4d07      	ldr	r5, [pc, #28]	@ (802dbc8 <_read_r+0x20>)
 802dbac:	4604      	mov	r4, r0
 802dbae:	4608      	mov	r0, r1
 802dbb0:	4611      	mov	r1, r2
 802dbb2:	2200      	movs	r2, #0
 802dbb4:	602a      	str	r2, [r5, #0]
 802dbb6:	461a      	mov	r2, r3
 802dbb8:	f7d4 fe6b 	bl	8002892 <_read>
 802dbbc:	1c43      	adds	r3, r0, #1
 802dbbe:	d102      	bne.n	802dbc6 <_read_r+0x1e>
 802dbc0:	682b      	ldr	r3, [r5, #0]
 802dbc2:	b103      	cbz	r3, 802dbc6 <_read_r+0x1e>
 802dbc4:	6023      	str	r3, [r4, #0]
 802dbc6:	bd38      	pop	{r3, r4, r5, pc}
 802dbc8:	2001d9e4 	.word	0x2001d9e4

0802dbcc <_write_r>:
 802dbcc:	b538      	push	{r3, r4, r5, lr}
 802dbce:	4d07      	ldr	r5, [pc, #28]	@ (802dbec <_write_r+0x20>)
 802dbd0:	4604      	mov	r4, r0
 802dbd2:	4608      	mov	r0, r1
 802dbd4:	4611      	mov	r1, r2
 802dbd6:	2200      	movs	r2, #0
 802dbd8:	602a      	str	r2, [r5, #0]
 802dbda:	461a      	mov	r2, r3
 802dbdc:	f7d4 fe76 	bl	80028cc <_write>
 802dbe0:	1c43      	adds	r3, r0, #1
 802dbe2:	d102      	bne.n	802dbea <_write_r+0x1e>
 802dbe4:	682b      	ldr	r3, [r5, #0]
 802dbe6:	b103      	cbz	r3, 802dbea <_write_r+0x1e>
 802dbe8:	6023      	str	r3, [r4, #0]
 802dbea:	bd38      	pop	{r3, r4, r5, pc}
 802dbec:	2001d9e4 	.word	0x2001d9e4

0802dbf0 <__errno>:
 802dbf0:	4b01      	ldr	r3, [pc, #4]	@ (802dbf8 <__errno+0x8>)
 802dbf2:	6818      	ldr	r0, [r3, #0]
 802dbf4:	4770      	bx	lr
 802dbf6:	bf00      	nop
 802dbf8:	20000a30 	.word	0x20000a30

0802dbfc <__libc_init_array>:
 802dbfc:	b570      	push	{r4, r5, r6, lr}
 802dbfe:	4d0d      	ldr	r5, [pc, #52]	@ (802dc34 <__libc_init_array+0x38>)
 802dc00:	4c0d      	ldr	r4, [pc, #52]	@ (802dc38 <__libc_init_array+0x3c>)
 802dc02:	1b64      	subs	r4, r4, r5
 802dc04:	10a4      	asrs	r4, r4, #2
 802dc06:	2600      	movs	r6, #0
 802dc08:	42a6      	cmp	r6, r4
 802dc0a:	d109      	bne.n	802dc20 <__libc_init_array+0x24>
 802dc0c:	4d0b      	ldr	r5, [pc, #44]	@ (802dc3c <__libc_init_array+0x40>)
 802dc0e:	4c0c      	ldr	r4, [pc, #48]	@ (802dc40 <__libc_init_array+0x44>)
 802dc10:	f005 ff82 	bl	8033b18 <_init>
 802dc14:	1b64      	subs	r4, r4, r5
 802dc16:	10a4      	asrs	r4, r4, #2
 802dc18:	2600      	movs	r6, #0
 802dc1a:	42a6      	cmp	r6, r4
 802dc1c:	d105      	bne.n	802dc2a <__libc_init_array+0x2e>
 802dc1e:	bd70      	pop	{r4, r5, r6, pc}
 802dc20:	f855 3b04 	ldr.w	r3, [r5], #4
 802dc24:	4798      	blx	r3
 802dc26:	3601      	adds	r6, #1
 802dc28:	e7ee      	b.n	802dc08 <__libc_init_array+0xc>
 802dc2a:	f855 3b04 	ldr.w	r3, [r5], #4
 802dc2e:	4798      	blx	r3
 802dc30:	3601      	adds	r6, #1
 802dc32:	e7f2      	b.n	802dc1a <__libc_init_array+0x1e>
 802dc34:	0803b590 	.word	0x0803b590
 802dc38:	0803b590 	.word	0x0803b590
 802dc3c:	0803b590 	.word	0x0803b590
 802dc40:	0803b594 	.word	0x0803b594

0802dc44 <__retarget_lock_init_recursive>:
 802dc44:	4770      	bx	lr

0802dc46 <__retarget_lock_acquire_recursive>:
 802dc46:	4770      	bx	lr

0802dc48 <__retarget_lock_release_recursive>:
 802dc48:	4770      	bx	lr

0802dc4a <memcpy>:
 802dc4a:	440a      	add	r2, r1
 802dc4c:	4291      	cmp	r1, r2
 802dc4e:	f100 33ff 	add.w	r3, r0, #4294967295
 802dc52:	d100      	bne.n	802dc56 <memcpy+0xc>
 802dc54:	4770      	bx	lr
 802dc56:	b510      	push	{r4, lr}
 802dc58:	f811 4b01 	ldrb.w	r4, [r1], #1
 802dc5c:	f803 4f01 	strb.w	r4, [r3, #1]!
 802dc60:	4291      	cmp	r1, r2
 802dc62:	d1f9      	bne.n	802dc58 <memcpy+0xe>
 802dc64:	bd10      	pop	{r4, pc}

0802dc66 <ldexpf>:
 802dc66:	b510      	push	{r4, lr}
 802dc68:	ed2d 8b02 	vpush	{d8}
 802dc6c:	4604      	mov	r4, r0
 802dc6e:	eeb0 8a40 	vmov.f32	s16, s0
 802dc72:	f000 f8e7 	bl	802de44 <finitef>
 802dc76:	b1b8      	cbz	r0, 802dca8 <ldexpf+0x42>
 802dc78:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802dc7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dc80:	d012      	beq.n	802dca8 <ldexpf+0x42>
 802dc82:	eeb0 0a48 	vmov.f32	s0, s16
 802dc86:	4620      	mov	r0, r4
 802dc88:	f000 f876 	bl	802dd78 <scalbnf>
 802dc8c:	eeb0 8a40 	vmov.f32	s16, s0
 802dc90:	f000 f8d8 	bl	802de44 <finitef>
 802dc94:	b120      	cbz	r0, 802dca0 <ldexpf+0x3a>
 802dc96:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802dc9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dc9e:	d103      	bne.n	802dca8 <ldexpf+0x42>
 802dca0:	f7ff ffa6 	bl	802dbf0 <__errno>
 802dca4:	2322      	movs	r3, #34	@ 0x22
 802dca6:	6003      	str	r3, [r0, #0]
 802dca8:	eeb0 0a48 	vmov.f32	s0, s16
 802dcac:	ecbd 8b02 	vpop	{d8}
 802dcb0:	bd10      	pop	{r4, pc}
	...

0802dcb4 <frexpf>:
 802dcb4:	ee10 3a10 	vmov	r3, s0
 802dcb8:	2100      	movs	r1, #0
 802dcba:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 802dcbe:	6001      	str	r1, [r0, #0]
 802dcc0:	490f      	ldr	r1, [pc, #60]	@ (802dd00 <frexpf+0x4c>)
 802dcc2:	b510      	push	{r4, lr}
 802dcc4:	1e54      	subs	r4, r2, #1
 802dcc6:	428c      	cmp	r4, r1
 802dcc8:	d218      	bcs.n	802dcfc <frexpf+0x48>
 802dcca:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802dcce:	d10a      	bne.n	802dce6 <frexpf+0x32>
 802dcd0:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802dd04 <frexpf+0x50>
 802dcd4:	ee60 7a27 	vmul.f32	s15, s0, s15
 802dcd8:	f06f 0118 	mvn.w	r1, #24
 802dcdc:	ee17 3a90 	vmov	r3, s15
 802dce0:	6001      	str	r1, [r0, #0]
 802dce2:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 802dce6:	6801      	ldr	r1, [r0, #0]
 802dce8:	15d2      	asrs	r2, r2, #23
 802dcea:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802dcee:	3a7e      	subs	r2, #126	@ 0x7e
 802dcf0:	f043 537c 	orr.w	r3, r3, #1056964608	@ 0x3f000000
 802dcf4:	4411      	add	r1, r2
 802dcf6:	ee00 3a10 	vmov	s0, r3
 802dcfa:	6001      	str	r1, [r0, #0]
 802dcfc:	bd10      	pop	{r4, pc}
 802dcfe:	bf00      	nop
 802dd00:	7f7fffff 	.word	0x7f7fffff
 802dd04:	4c000000 	.word	0x4c000000

0802dd08 <modff>:
 802dd08:	b538      	push	{r3, r4, r5, lr}
 802dd0a:	ee10 4a10 	vmov	r4, s0
 802dd0e:	f3c4 53c7 	ubfx	r3, r4, #23, #8
 802dd12:	3b7f      	subs	r3, #127	@ 0x7f
 802dd14:	2b16      	cmp	r3, #22
 802dd16:	ed2d 8b02 	vpush	{d8}
 802dd1a:	4605      	mov	r5, r0
 802dd1c:	eeb0 8a40 	vmov.f32	s16, s0
 802dd20:	dc1d      	bgt.n	802dd5e <modff+0x56>
 802dd22:	2b00      	cmp	r3, #0
 802dd24:	da07      	bge.n	802dd36 <modff+0x2e>
 802dd26:	f004 4400 	and.w	r4, r4, #2147483648	@ 0x80000000
 802dd2a:	6004      	str	r4, [r0, #0]
 802dd2c:	eeb0 0a48 	vmov.f32	s0, s16
 802dd30:	ecbd 8b02 	vpop	{d8}
 802dd34:	bd38      	pop	{r3, r4, r5, pc}
 802dd36:	4a0f      	ldr	r2, [pc, #60]	@ (802dd74 <modff+0x6c>)
 802dd38:	fa42 f303 	asr.w	r3, r2, r3
 802dd3c:	421c      	tst	r4, r3
 802dd3e:	d106      	bne.n	802dd4e <modff+0x46>
 802dd40:	ed85 0a00 	vstr	s0, [r5]
 802dd44:	f004 4300 	and.w	r3, r4, #2147483648	@ 0x80000000
 802dd48:	ee08 3a10 	vmov	s16, r3
 802dd4c:	e7ee      	b.n	802dd2c <modff+0x24>
 802dd4e:	ea24 0403 	bic.w	r4, r4, r3
 802dd52:	ee07 4a90 	vmov	s15, r4
 802dd56:	6004      	str	r4, [r0, #0]
 802dd58:	ee30 8a67 	vsub.f32	s16, s0, s15
 802dd5c:	e7e6      	b.n	802dd2c <modff+0x24>
 802dd5e:	ed80 0a00 	vstr	s0, [r0]
 802dd62:	f000 fab1 	bl	802e2c8 <__fpclassifyf>
 802dd66:	2800      	cmp	r0, #0
 802dd68:	d1ec      	bne.n	802dd44 <modff+0x3c>
 802dd6a:	ee38 8a08 	vadd.f32	s16, s16, s16
 802dd6e:	ed85 8a00 	vstr	s16, [r5]
 802dd72:	e7db      	b.n	802dd2c <modff+0x24>
 802dd74:	007fffff 	.word	0x007fffff

0802dd78 <scalbnf>:
 802dd78:	ee10 3a10 	vmov	r3, s0
 802dd7c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 802dd80:	d02b      	beq.n	802ddda <scalbnf+0x62>
 802dd82:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802dd86:	d302      	bcc.n	802dd8e <scalbnf+0x16>
 802dd88:	ee30 0a00 	vadd.f32	s0, s0, s0
 802dd8c:	4770      	bx	lr
 802dd8e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802dd92:	d123      	bne.n	802dddc <scalbnf+0x64>
 802dd94:	4b24      	ldr	r3, [pc, #144]	@ (802de28 <scalbnf+0xb0>)
 802dd96:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802de2c <scalbnf+0xb4>
 802dd9a:	4298      	cmp	r0, r3
 802dd9c:	ee20 0a27 	vmul.f32	s0, s0, s15
 802dda0:	db17      	blt.n	802ddd2 <scalbnf+0x5a>
 802dda2:	ee10 3a10 	vmov	r3, s0
 802dda6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ddaa:	3a19      	subs	r2, #25
 802ddac:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802ddb0:	4288      	cmp	r0, r1
 802ddb2:	dd15      	ble.n	802dde0 <scalbnf+0x68>
 802ddb4:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802de30 <scalbnf+0xb8>
 802ddb8:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802de34 <scalbnf+0xbc>
 802ddbc:	ee10 3a10 	vmov	r3, s0
 802ddc0:	eeb0 7a67 	vmov.f32	s14, s15
 802ddc4:	2b00      	cmp	r3, #0
 802ddc6:	bfb8      	it	lt
 802ddc8:	eef0 7a66 	vmovlt.f32	s15, s13
 802ddcc:	ee27 0a87 	vmul.f32	s0, s15, s14
 802ddd0:	4770      	bx	lr
 802ddd2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802de38 <scalbnf+0xc0>
 802ddd6:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ddda:	4770      	bx	lr
 802dddc:	0dd2      	lsrs	r2, r2, #23
 802ddde:	e7e5      	b.n	802ddac <scalbnf+0x34>
 802dde0:	4410      	add	r0, r2
 802dde2:	28fe      	cmp	r0, #254	@ 0xfe
 802dde4:	dce6      	bgt.n	802ddb4 <scalbnf+0x3c>
 802dde6:	2800      	cmp	r0, #0
 802dde8:	dd06      	ble.n	802ddf8 <scalbnf+0x80>
 802ddea:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802ddee:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802ddf2:	ee00 3a10 	vmov	s0, r3
 802ddf6:	4770      	bx	lr
 802ddf8:	f110 0f16 	cmn.w	r0, #22
 802ddfc:	da09      	bge.n	802de12 <scalbnf+0x9a>
 802ddfe:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802de38 <scalbnf+0xc0>
 802de02:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802de3c <scalbnf+0xc4>
 802de06:	ee10 3a10 	vmov	r3, s0
 802de0a:	eeb0 7a67 	vmov.f32	s14, s15
 802de0e:	2b00      	cmp	r3, #0
 802de10:	e7d9      	b.n	802ddc6 <scalbnf+0x4e>
 802de12:	3019      	adds	r0, #25
 802de14:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802de18:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802de1c:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802de40 <scalbnf+0xc8>
 802de20:	ee07 3a90 	vmov	s15, r3
 802de24:	e7d7      	b.n	802ddd6 <scalbnf+0x5e>
 802de26:	bf00      	nop
 802de28:	ffff3cb0 	.word	0xffff3cb0
 802de2c:	4c000000 	.word	0x4c000000
 802de30:	7149f2ca 	.word	0x7149f2ca
 802de34:	f149f2ca 	.word	0xf149f2ca
 802de38:	0da24260 	.word	0x0da24260
 802de3c:	8da24260 	.word	0x8da24260
 802de40:	33000000 	.word	0x33000000

0802de44 <finitef>:
 802de44:	ee10 3a10 	vmov	r3, s0
 802de48:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 802de4c:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 802de50:	bfac      	ite	ge
 802de52:	2000      	movge	r0, #0
 802de54:	2001      	movlt	r0, #1
 802de56:	4770      	bx	lr

0802de58 <_free_r>:
 802de58:	b538      	push	{r3, r4, r5, lr}
 802de5a:	4605      	mov	r5, r0
 802de5c:	2900      	cmp	r1, #0
 802de5e:	d041      	beq.n	802dee4 <_free_r+0x8c>
 802de60:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802de64:	1f0c      	subs	r4, r1, #4
 802de66:	2b00      	cmp	r3, #0
 802de68:	bfb8      	it	lt
 802de6a:	18e4      	addlt	r4, r4, r3
 802de6c:	f000 f8e0 	bl	802e030 <__malloc_lock>
 802de70:	4a1d      	ldr	r2, [pc, #116]	@ (802dee8 <_free_r+0x90>)
 802de72:	6813      	ldr	r3, [r2, #0]
 802de74:	b933      	cbnz	r3, 802de84 <_free_r+0x2c>
 802de76:	6063      	str	r3, [r4, #4]
 802de78:	6014      	str	r4, [r2, #0]
 802de7a:	4628      	mov	r0, r5
 802de7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802de80:	f000 b8dc 	b.w	802e03c <__malloc_unlock>
 802de84:	42a3      	cmp	r3, r4
 802de86:	d908      	bls.n	802de9a <_free_r+0x42>
 802de88:	6820      	ldr	r0, [r4, #0]
 802de8a:	1821      	adds	r1, r4, r0
 802de8c:	428b      	cmp	r3, r1
 802de8e:	bf01      	itttt	eq
 802de90:	6819      	ldreq	r1, [r3, #0]
 802de92:	685b      	ldreq	r3, [r3, #4]
 802de94:	1809      	addeq	r1, r1, r0
 802de96:	6021      	streq	r1, [r4, #0]
 802de98:	e7ed      	b.n	802de76 <_free_r+0x1e>
 802de9a:	461a      	mov	r2, r3
 802de9c:	685b      	ldr	r3, [r3, #4]
 802de9e:	b10b      	cbz	r3, 802dea4 <_free_r+0x4c>
 802dea0:	42a3      	cmp	r3, r4
 802dea2:	d9fa      	bls.n	802de9a <_free_r+0x42>
 802dea4:	6811      	ldr	r1, [r2, #0]
 802dea6:	1850      	adds	r0, r2, r1
 802dea8:	42a0      	cmp	r0, r4
 802deaa:	d10b      	bne.n	802dec4 <_free_r+0x6c>
 802deac:	6820      	ldr	r0, [r4, #0]
 802deae:	4401      	add	r1, r0
 802deb0:	1850      	adds	r0, r2, r1
 802deb2:	4283      	cmp	r3, r0
 802deb4:	6011      	str	r1, [r2, #0]
 802deb6:	d1e0      	bne.n	802de7a <_free_r+0x22>
 802deb8:	6818      	ldr	r0, [r3, #0]
 802deba:	685b      	ldr	r3, [r3, #4]
 802debc:	6053      	str	r3, [r2, #4]
 802debe:	4408      	add	r0, r1
 802dec0:	6010      	str	r0, [r2, #0]
 802dec2:	e7da      	b.n	802de7a <_free_r+0x22>
 802dec4:	d902      	bls.n	802decc <_free_r+0x74>
 802dec6:	230c      	movs	r3, #12
 802dec8:	602b      	str	r3, [r5, #0]
 802deca:	e7d6      	b.n	802de7a <_free_r+0x22>
 802decc:	6820      	ldr	r0, [r4, #0]
 802dece:	1821      	adds	r1, r4, r0
 802ded0:	428b      	cmp	r3, r1
 802ded2:	bf04      	itt	eq
 802ded4:	6819      	ldreq	r1, [r3, #0]
 802ded6:	685b      	ldreq	r3, [r3, #4]
 802ded8:	6063      	str	r3, [r4, #4]
 802deda:	bf04      	itt	eq
 802dedc:	1809      	addeq	r1, r1, r0
 802dede:	6021      	streq	r1, [r4, #0]
 802dee0:	6054      	str	r4, [r2, #4]
 802dee2:	e7ca      	b.n	802de7a <_free_r+0x22>
 802dee4:	bd38      	pop	{r3, r4, r5, pc}
 802dee6:	bf00      	nop
 802dee8:	2001d9f0 	.word	0x2001d9f0

0802deec <sbrk_aligned>:
 802deec:	b570      	push	{r4, r5, r6, lr}
 802deee:	4e0f      	ldr	r6, [pc, #60]	@ (802df2c <sbrk_aligned+0x40>)
 802def0:	460c      	mov	r4, r1
 802def2:	6831      	ldr	r1, [r6, #0]
 802def4:	4605      	mov	r5, r0
 802def6:	b911      	cbnz	r1, 802defe <sbrk_aligned+0x12>
 802def8:	f000 f9d6 	bl	802e2a8 <_sbrk_r>
 802defc:	6030      	str	r0, [r6, #0]
 802defe:	4621      	mov	r1, r4
 802df00:	4628      	mov	r0, r5
 802df02:	f000 f9d1 	bl	802e2a8 <_sbrk_r>
 802df06:	1c43      	adds	r3, r0, #1
 802df08:	d103      	bne.n	802df12 <sbrk_aligned+0x26>
 802df0a:	f04f 34ff 	mov.w	r4, #4294967295
 802df0e:	4620      	mov	r0, r4
 802df10:	bd70      	pop	{r4, r5, r6, pc}
 802df12:	1cc4      	adds	r4, r0, #3
 802df14:	f024 0403 	bic.w	r4, r4, #3
 802df18:	42a0      	cmp	r0, r4
 802df1a:	d0f8      	beq.n	802df0e <sbrk_aligned+0x22>
 802df1c:	1a21      	subs	r1, r4, r0
 802df1e:	4628      	mov	r0, r5
 802df20:	f000 f9c2 	bl	802e2a8 <_sbrk_r>
 802df24:	3001      	adds	r0, #1
 802df26:	d1f2      	bne.n	802df0e <sbrk_aligned+0x22>
 802df28:	e7ef      	b.n	802df0a <sbrk_aligned+0x1e>
 802df2a:	bf00      	nop
 802df2c:	2001d9ec 	.word	0x2001d9ec

0802df30 <_malloc_r>:
 802df30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802df34:	1ccd      	adds	r5, r1, #3
 802df36:	f025 0503 	bic.w	r5, r5, #3
 802df3a:	3508      	adds	r5, #8
 802df3c:	2d0c      	cmp	r5, #12
 802df3e:	bf38      	it	cc
 802df40:	250c      	movcc	r5, #12
 802df42:	2d00      	cmp	r5, #0
 802df44:	4606      	mov	r6, r0
 802df46:	db01      	blt.n	802df4c <_malloc_r+0x1c>
 802df48:	42a9      	cmp	r1, r5
 802df4a:	d904      	bls.n	802df56 <_malloc_r+0x26>
 802df4c:	230c      	movs	r3, #12
 802df4e:	6033      	str	r3, [r6, #0]
 802df50:	2000      	movs	r0, #0
 802df52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802df56:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802e02c <_malloc_r+0xfc>
 802df5a:	f000 f869 	bl	802e030 <__malloc_lock>
 802df5e:	f8d8 3000 	ldr.w	r3, [r8]
 802df62:	461c      	mov	r4, r3
 802df64:	bb44      	cbnz	r4, 802dfb8 <_malloc_r+0x88>
 802df66:	4629      	mov	r1, r5
 802df68:	4630      	mov	r0, r6
 802df6a:	f7ff ffbf 	bl	802deec <sbrk_aligned>
 802df6e:	1c43      	adds	r3, r0, #1
 802df70:	4604      	mov	r4, r0
 802df72:	d158      	bne.n	802e026 <_malloc_r+0xf6>
 802df74:	f8d8 4000 	ldr.w	r4, [r8]
 802df78:	4627      	mov	r7, r4
 802df7a:	2f00      	cmp	r7, #0
 802df7c:	d143      	bne.n	802e006 <_malloc_r+0xd6>
 802df7e:	2c00      	cmp	r4, #0
 802df80:	d04b      	beq.n	802e01a <_malloc_r+0xea>
 802df82:	6823      	ldr	r3, [r4, #0]
 802df84:	4639      	mov	r1, r7
 802df86:	4630      	mov	r0, r6
 802df88:	eb04 0903 	add.w	r9, r4, r3
 802df8c:	f000 f98c 	bl	802e2a8 <_sbrk_r>
 802df90:	4581      	cmp	r9, r0
 802df92:	d142      	bne.n	802e01a <_malloc_r+0xea>
 802df94:	6821      	ldr	r1, [r4, #0]
 802df96:	1a6d      	subs	r5, r5, r1
 802df98:	4629      	mov	r1, r5
 802df9a:	4630      	mov	r0, r6
 802df9c:	f7ff ffa6 	bl	802deec <sbrk_aligned>
 802dfa0:	3001      	adds	r0, #1
 802dfa2:	d03a      	beq.n	802e01a <_malloc_r+0xea>
 802dfa4:	6823      	ldr	r3, [r4, #0]
 802dfa6:	442b      	add	r3, r5
 802dfa8:	6023      	str	r3, [r4, #0]
 802dfaa:	f8d8 3000 	ldr.w	r3, [r8]
 802dfae:	685a      	ldr	r2, [r3, #4]
 802dfb0:	bb62      	cbnz	r2, 802e00c <_malloc_r+0xdc>
 802dfb2:	f8c8 7000 	str.w	r7, [r8]
 802dfb6:	e00f      	b.n	802dfd8 <_malloc_r+0xa8>
 802dfb8:	6822      	ldr	r2, [r4, #0]
 802dfba:	1b52      	subs	r2, r2, r5
 802dfbc:	d420      	bmi.n	802e000 <_malloc_r+0xd0>
 802dfbe:	2a0b      	cmp	r2, #11
 802dfc0:	d917      	bls.n	802dff2 <_malloc_r+0xc2>
 802dfc2:	1961      	adds	r1, r4, r5
 802dfc4:	42a3      	cmp	r3, r4
 802dfc6:	6025      	str	r5, [r4, #0]
 802dfc8:	bf18      	it	ne
 802dfca:	6059      	strne	r1, [r3, #4]
 802dfcc:	6863      	ldr	r3, [r4, #4]
 802dfce:	bf08      	it	eq
 802dfd0:	f8c8 1000 	streq.w	r1, [r8]
 802dfd4:	5162      	str	r2, [r4, r5]
 802dfd6:	604b      	str	r3, [r1, #4]
 802dfd8:	4630      	mov	r0, r6
 802dfda:	f000 f82f 	bl	802e03c <__malloc_unlock>
 802dfde:	f104 000b 	add.w	r0, r4, #11
 802dfe2:	1d23      	adds	r3, r4, #4
 802dfe4:	f020 0007 	bic.w	r0, r0, #7
 802dfe8:	1ac2      	subs	r2, r0, r3
 802dfea:	bf1c      	itt	ne
 802dfec:	1a1b      	subne	r3, r3, r0
 802dfee:	50a3      	strne	r3, [r4, r2]
 802dff0:	e7af      	b.n	802df52 <_malloc_r+0x22>
 802dff2:	6862      	ldr	r2, [r4, #4]
 802dff4:	42a3      	cmp	r3, r4
 802dff6:	bf0c      	ite	eq
 802dff8:	f8c8 2000 	streq.w	r2, [r8]
 802dffc:	605a      	strne	r2, [r3, #4]
 802dffe:	e7eb      	b.n	802dfd8 <_malloc_r+0xa8>
 802e000:	4623      	mov	r3, r4
 802e002:	6864      	ldr	r4, [r4, #4]
 802e004:	e7ae      	b.n	802df64 <_malloc_r+0x34>
 802e006:	463c      	mov	r4, r7
 802e008:	687f      	ldr	r7, [r7, #4]
 802e00a:	e7b6      	b.n	802df7a <_malloc_r+0x4a>
 802e00c:	461a      	mov	r2, r3
 802e00e:	685b      	ldr	r3, [r3, #4]
 802e010:	42a3      	cmp	r3, r4
 802e012:	d1fb      	bne.n	802e00c <_malloc_r+0xdc>
 802e014:	2300      	movs	r3, #0
 802e016:	6053      	str	r3, [r2, #4]
 802e018:	e7de      	b.n	802dfd8 <_malloc_r+0xa8>
 802e01a:	230c      	movs	r3, #12
 802e01c:	6033      	str	r3, [r6, #0]
 802e01e:	4630      	mov	r0, r6
 802e020:	f000 f80c 	bl	802e03c <__malloc_unlock>
 802e024:	e794      	b.n	802df50 <_malloc_r+0x20>
 802e026:	6005      	str	r5, [r0, #0]
 802e028:	e7d6      	b.n	802dfd8 <_malloc_r+0xa8>
 802e02a:	bf00      	nop
 802e02c:	2001d9f0 	.word	0x2001d9f0

0802e030 <__malloc_lock>:
 802e030:	4801      	ldr	r0, [pc, #4]	@ (802e038 <__malloc_lock+0x8>)
 802e032:	f7ff be08 	b.w	802dc46 <__retarget_lock_acquire_recursive>
 802e036:	bf00      	nop
 802e038:	2001d9e8 	.word	0x2001d9e8

0802e03c <__malloc_unlock>:
 802e03c:	4801      	ldr	r0, [pc, #4]	@ (802e044 <__malloc_unlock+0x8>)
 802e03e:	f7ff be03 	b.w	802dc48 <__retarget_lock_release_recursive>
 802e042:	bf00      	nop
 802e044:	2001d9e8 	.word	0x2001d9e8

0802e048 <__sflush_r>:
 802e048:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802e04c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e050:	0716      	lsls	r6, r2, #28
 802e052:	4605      	mov	r5, r0
 802e054:	460c      	mov	r4, r1
 802e056:	d454      	bmi.n	802e102 <__sflush_r+0xba>
 802e058:	684b      	ldr	r3, [r1, #4]
 802e05a:	2b00      	cmp	r3, #0
 802e05c:	dc02      	bgt.n	802e064 <__sflush_r+0x1c>
 802e05e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802e060:	2b00      	cmp	r3, #0
 802e062:	dd48      	ble.n	802e0f6 <__sflush_r+0xae>
 802e064:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802e066:	2e00      	cmp	r6, #0
 802e068:	d045      	beq.n	802e0f6 <__sflush_r+0xae>
 802e06a:	2300      	movs	r3, #0
 802e06c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802e070:	682f      	ldr	r7, [r5, #0]
 802e072:	6a21      	ldr	r1, [r4, #32]
 802e074:	602b      	str	r3, [r5, #0]
 802e076:	d030      	beq.n	802e0da <__sflush_r+0x92>
 802e078:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802e07a:	89a3      	ldrh	r3, [r4, #12]
 802e07c:	0759      	lsls	r1, r3, #29
 802e07e:	d505      	bpl.n	802e08c <__sflush_r+0x44>
 802e080:	6863      	ldr	r3, [r4, #4]
 802e082:	1ad2      	subs	r2, r2, r3
 802e084:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802e086:	b10b      	cbz	r3, 802e08c <__sflush_r+0x44>
 802e088:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802e08a:	1ad2      	subs	r2, r2, r3
 802e08c:	2300      	movs	r3, #0
 802e08e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802e090:	6a21      	ldr	r1, [r4, #32]
 802e092:	4628      	mov	r0, r5
 802e094:	47b0      	blx	r6
 802e096:	1c43      	adds	r3, r0, #1
 802e098:	89a3      	ldrh	r3, [r4, #12]
 802e09a:	d106      	bne.n	802e0aa <__sflush_r+0x62>
 802e09c:	6829      	ldr	r1, [r5, #0]
 802e09e:	291d      	cmp	r1, #29
 802e0a0:	d82b      	bhi.n	802e0fa <__sflush_r+0xb2>
 802e0a2:	4a2a      	ldr	r2, [pc, #168]	@ (802e14c <__sflush_r+0x104>)
 802e0a4:	410a      	asrs	r2, r1
 802e0a6:	07d6      	lsls	r6, r2, #31
 802e0a8:	d427      	bmi.n	802e0fa <__sflush_r+0xb2>
 802e0aa:	2200      	movs	r2, #0
 802e0ac:	6062      	str	r2, [r4, #4]
 802e0ae:	04d9      	lsls	r1, r3, #19
 802e0b0:	6922      	ldr	r2, [r4, #16]
 802e0b2:	6022      	str	r2, [r4, #0]
 802e0b4:	d504      	bpl.n	802e0c0 <__sflush_r+0x78>
 802e0b6:	1c42      	adds	r2, r0, #1
 802e0b8:	d101      	bne.n	802e0be <__sflush_r+0x76>
 802e0ba:	682b      	ldr	r3, [r5, #0]
 802e0bc:	b903      	cbnz	r3, 802e0c0 <__sflush_r+0x78>
 802e0be:	6560      	str	r0, [r4, #84]	@ 0x54
 802e0c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802e0c2:	602f      	str	r7, [r5, #0]
 802e0c4:	b1b9      	cbz	r1, 802e0f6 <__sflush_r+0xae>
 802e0c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802e0ca:	4299      	cmp	r1, r3
 802e0cc:	d002      	beq.n	802e0d4 <__sflush_r+0x8c>
 802e0ce:	4628      	mov	r0, r5
 802e0d0:	f7ff fec2 	bl	802de58 <_free_r>
 802e0d4:	2300      	movs	r3, #0
 802e0d6:	6363      	str	r3, [r4, #52]	@ 0x34
 802e0d8:	e00d      	b.n	802e0f6 <__sflush_r+0xae>
 802e0da:	2301      	movs	r3, #1
 802e0dc:	4628      	mov	r0, r5
 802e0de:	47b0      	blx	r6
 802e0e0:	4602      	mov	r2, r0
 802e0e2:	1c50      	adds	r0, r2, #1
 802e0e4:	d1c9      	bne.n	802e07a <__sflush_r+0x32>
 802e0e6:	682b      	ldr	r3, [r5, #0]
 802e0e8:	2b00      	cmp	r3, #0
 802e0ea:	d0c6      	beq.n	802e07a <__sflush_r+0x32>
 802e0ec:	2b1d      	cmp	r3, #29
 802e0ee:	d001      	beq.n	802e0f4 <__sflush_r+0xac>
 802e0f0:	2b16      	cmp	r3, #22
 802e0f2:	d11e      	bne.n	802e132 <__sflush_r+0xea>
 802e0f4:	602f      	str	r7, [r5, #0]
 802e0f6:	2000      	movs	r0, #0
 802e0f8:	e022      	b.n	802e140 <__sflush_r+0xf8>
 802e0fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802e0fe:	b21b      	sxth	r3, r3
 802e100:	e01b      	b.n	802e13a <__sflush_r+0xf2>
 802e102:	690f      	ldr	r7, [r1, #16]
 802e104:	2f00      	cmp	r7, #0
 802e106:	d0f6      	beq.n	802e0f6 <__sflush_r+0xae>
 802e108:	0793      	lsls	r3, r2, #30
 802e10a:	680e      	ldr	r6, [r1, #0]
 802e10c:	bf08      	it	eq
 802e10e:	694b      	ldreq	r3, [r1, #20]
 802e110:	600f      	str	r7, [r1, #0]
 802e112:	bf18      	it	ne
 802e114:	2300      	movne	r3, #0
 802e116:	eba6 0807 	sub.w	r8, r6, r7
 802e11a:	608b      	str	r3, [r1, #8]
 802e11c:	f1b8 0f00 	cmp.w	r8, #0
 802e120:	dde9      	ble.n	802e0f6 <__sflush_r+0xae>
 802e122:	6a21      	ldr	r1, [r4, #32]
 802e124:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802e126:	4643      	mov	r3, r8
 802e128:	463a      	mov	r2, r7
 802e12a:	4628      	mov	r0, r5
 802e12c:	47b0      	blx	r6
 802e12e:	2800      	cmp	r0, #0
 802e130:	dc08      	bgt.n	802e144 <__sflush_r+0xfc>
 802e132:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e136:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802e13a:	81a3      	strh	r3, [r4, #12]
 802e13c:	f04f 30ff 	mov.w	r0, #4294967295
 802e140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e144:	4407      	add	r7, r0
 802e146:	eba8 0800 	sub.w	r8, r8, r0
 802e14a:	e7e7      	b.n	802e11c <__sflush_r+0xd4>
 802e14c:	dfbffffe 	.word	0xdfbffffe

0802e150 <_fflush_r>:
 802e150:	b538      	push	{r3, r4, r5, lr}
 802e152:	690b      	ldr	r3, [r1, #16]
 802e154:	4605      	mov	r5, r0
 802e156:	460c      	mov	r4, r1
 802e158:	b913      	cbnz	r3, 802e160 <_fflush_r+0x10>
 802e15a:	2500      	movs	r5, #0
 802e15c:	4628      	mov	r0, r5
 802e15e:	bd38      	pop	{r3, r4, r5, pc}
 802e160:	b118      	cbz	r0, 802e16a <_fflush_r+0x1a>
 802e162:	6a03      	ldr	r3, [r0, #32]
 802e164:	b90b      	cbnz	r3, 802e16a <_fflush_r+0x1a>
 802e166:	f7ff fb89 	bl	802d87c <__sinit>
 802e16a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e16e:	2b00      	cmp	r3, #0
 802e170:	d0f3      	beq.n	802e15a <_fflush_r+0xa>
 802e172:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802e174:	07d0      	lsls	r0, r2, #31
 802e176:	d404      	bmi.n	802e182 <_fflush_r+0x32>
 802e178:	0599      	lsls	r1, r3, #22
 802e17a:	d402      	bmi.n	802e182 <_fflush_r+0x32>
 802e17c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802e17e:	f7ff fd62 	bl	802dc46 <__retarget_lock_acquire_recursive>
 802e182:	4628      	mov	r0, r5
 802e184:	4621      	mov	r1, r4
 802e186:	f7ff ff5f 	bl	802e048 <__sflush_r>
 802e18a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802e18c:	07da      	lsls	r2, r3, #31
 802e18e:	4605      	mov	r5, r0
 802e190:	d4e4      	bmi.n	802e15c <_fflush_r+0xc>
 802e192:	89a3      	ldrh	r3, [r4, #12]
 802e194:	059b      	lsls	r3, r3, #22
 802e196:	d4e1      	bmi.n	802e15c <_fflush_r+0xc>
 802e198:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802e19a:	f7ff fd55 	bl	802dc48 <__retarget_lock_release_recursive>
 802e19e:	e7dd      	b.n	802e15c <_fflush_r+0xc>

0802e1a0 <__swhatbuf_r>:
 802e1a0:	b570      	push	{r4, r5, r6, lr}
 802e1a2:	460c      	mov	r4, r1
 802e1a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e1a8:	2900      	cmp	r1, #0
 802e1aa:	b096      	sub	sp, #88	@ 0x58
 802e1ac:	4615      	mov	r5, r2
 802e1ae:	461e      	mov	r6, r3
 802e1b0:	da0d      	bge.n	802e1ce <__swhatbuf_r+0x2e>
 802e1b2:	89a3      	ldrh	r3, [r4, #12]
 802e1b4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802e1b8:	f04f 0100 	mov.w	r1, #0
 802e1bc:	bf14      	ite	ne
 802e1be:	2340      	movne	r3, #64	@ 0x40
 802e1c0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802e1c4:	2000      	movs	r0, #0
 802e1c6:	6031      	str	r1, [r6, #0]
 802e1c8:	602b      	str	r3, [r5, #0]
 802e1ca:	b016      	add	sp, #88	@ 0x58
 802e1cc:	bd70      	pop	{r4, r5, r6, pc}
 802e1ce:	466a      	mov	r2, sp
 802e1d0:	f000 f848 	bl	802e264 <_fstat_r>
 802e1d4:	2800      	cmp	r0, #0
 802e1d6:	dbec      	blt.n	802e1b2 <__swhatbuf_r+0x12>
 802e1d8:	9901      	ldr	r1, [sp, #4]
 802e1da:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802e1de:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802e1e2:	4259      	negs	r1, r3
 802e1e4:	4159      	adcs	r1, r3
 802e1e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802e1ea:	e7eb      	b.n	802e1c4 <__swhatbuf_r+0x24>

0802e1ec <__smakebuf_r>:
 802e1ec:	898b      	ldrh	r3, [r1, #12]
 802e1ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802e1f0:	079d      	lsls	r5, r3, #30
 802e1f2:	4606      	mov	r6, r0
 802e1f4:	460c      	mov	r4, r1
 802e1f6:	d507      	bpl.n	802e208 <__smakebuf_r+0x1c>
 802e1f8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802e1fc:	6023      	str	r3, [r4, #0]
 802e1fe:	6123      	str	r3, [r4, #16]
 802e200:	2301      	movs	r3, #1
 802e202:	6163      	str	r3, [r4, #20]
 802e204:	b003      	add	sp, #12
 802e206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802e208:	ab01      	add	r3, sp, #4
 802e20a:	466a      	mov	r2, sp
 802e20c:	f7ff ffc8 	bl	802e1a0 <__swhatbuf_r>
 802e210:	9f00      	ldr	r7, [sp, #0]
 802e212:	4605      	mov	r5, r0
 802e214:	4639      	mov	r1, r7
 802e216:	4630      	mov	r0, r6
 802e218:	f7ff fe8a 	bl	802df30 <_malloc_r>
 802e21c:	b948      	cbnz	r0, 802e232 <__smakebuf_r+0x46>
 802e21e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e222:	059a      	lsls	r2, r3, #22
 802e224:	d4ee      	bmi.n	802e204 <__smakebuf_r+0x18>
 802e226:	f023 0303 	bic.w	r3, r3, #3
 802e22a:	f043 0302 	orr.w	r3, r3, #2
 802e22e:	81a3      	strh	r3, [r4, #12]
 802e230:	e7e2      	b.n	802e1f8 <__smakebuf_r+0xc>
 802e232:	89a3      	ldrh	r3, [r4, #12]
 802e234:	6020      	str	r0, [r4, #0]
 802e236:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802e23a:	81a3      	strh	r3, [r4, #12]
 802e23c:	9b01      	ldr	r3, [sp, #4]
 802e23e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802e242:	b15b      	cbz	r3, 802e25c <__smakebuf_r+0x70>
 802e244:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e248:	4630      	mov	r0, r6
 802e24a:	f000 f81d 	bl	802e288 <_isatty_r>
 802e24e:	b128      	cbz	r0, 802e25c <__smakebuf_r+0x70>
 802e250:	89a3      	ldrh	r3, [r4, #12]
 802e252:	f023 0303 	bic.w	r3, r3, #3
 802e256:	f043 0301 	orr.w	r3, r3, #1
 802e25a:	81a3      	strh	r3, [r4, #12]
 802e25c:	89a3      	ldrh	r3, [r4, #12]
 802e25e:	431d      	orrs	r5, r3
 802e260:	81a5      	strh	r5, [r4, #12]
 802e262:	e7cf      	b.n	802e204 <__smakebuf_r+0x18>

0802e264 <_fstat_r>:
 802e264:	b538      	push	{r3, r4, r5, lr}
 802e266:	4d07      	ldr	r5, [pc, #28]	@ (802e284 <_fstat_r+0x20>)
 802e268:	2300      	movs	r3, #0
 802e26a:	4604      	mov	r4, r0
 802e26c:	4608      	mov	r0, r1
 802e26e:	4611      	mov	r1, r2
 802e270:	602b      	str	r3, [r5, #0]
 802e272:	f7d4 fb53 	bl	800291c <_fstat>
 802e276:	1c43      	adds	r3, r0, #1
 802e278:	d102      	bne.n	802e280 <_fstat_r+0x1c>
 802e27a:	682b      	ldr	r3, [r5, #0]
 802e27c:	b103      	cbz	r3, 802e280 <_fstat_r+0x1c>
 802e27e:	6023      	str	r3, [r4, #0]
 802e280:	bd38      	pop	{r3, r4, r5, pc}
 802e282:	bf00      	nop
 802e284:	2001d9e4 	.word	0x2001d9e4

0802e288 <_isatty_r>:
 802e288:	b538      	push	{r3, r4, r5, lr}
 802e28a:	4d06      	ldr	r5, [pc, #24]	@ (802e2a4 <_isatty_r+0x1c>)
 802e28c:	2300      	movs	r3, #0
 802e28e:	4604      	mov	r4, r0
 802e290:	4608      	mov	r0, r1
 802e292:	602b      	str	r3, [r5, #0]
 802e294:	f7d4 fb52 	bl	800293c <_isatty>
 802e298:	1c43      	adds	r3, r0, #1
 802e29a:	d102      	bne.n	802e2a2 <_isatty_r+0x1a>
 802e29c:	682b      	ldr	r3, [r5, #0]
 802e29e:	b103      	cbz	r3, 802e2a2 <_isatty_r+0x1a>
 802e2a0:	6023      	str	r3, [r4, #0]
 802e2a2:	bd38      	pop	{r3, r4, r5, pc}
 802e2a4:	2001d9e4 	.word	0x2001d9e4

0802e2a8 <_sbrk_r>:
 802e2a8:	b538      	push	{r3, r4, r5, lr}
 802e2aa:	4d06      	ldr	r5, [pc, #24]	@ (802e2c4 <_sbrk_r+0x1c>)
 802e2ac:	2300      	movs	r3, #0
 802e2ae:	4604      	mov	r4, r0
 802e2b0:	4608      	mov	r0, r1
 802e2b2:	602b      	str	r3, [r5, #0]
 802e2b4:	f7d4 fb5a 	bl	800296c <_sbrk>
 802e2b8:	1c43      	adds	r3, r0, #1
 802e2ba:	d102      	bne.n	802e2c2 <_sbrk_r+0x1a>
 802e2bc:	682b      	ldr	r3, [r5, #0]
 802e2be:	b103      	cbz	r3, 802e2c2 <_sbrk_r+0x1a>
 802e2c0:	6023      	str	r3, [r4, #0]
 802e2c2:	bd38      	pop	{r3, r4, r5, pc}
 802e2c4:	2001d9e4 	.word	0x2001d9e4

0802e2c8 <__fpclassifyf>:
 802e2c8:	ee10 3a10 	vmov	r3, s0
 802e2cc:	f033 4000 	bics.w	r0, r3, #2147483648	@ 0x80000000
 802e2d0:	d00d      	beq.n	802e2ee <__fpclassifyf+0x26>
 802e2d2:	f5a0 0300 	sub.w	r3, r0, #8388608	@ 0x800000
 802e2d6:	f1b3 4ffe 	cmp.w	r3, #2130706432	@ 0x7f000000
 802e2da:	d30a      	bcc.n	802e2f2 <__fpclassifyf+0x2a>
 802e2dc:	4b07      	ldr	r3, [pc, #28]	@ (802e2fc <__fpclassifyf+0x34>)
 802e2de:	1e42      	subs	r2, r0, #1
 802e2e0:	429a      	cmp	r2, r3
 802e2e2:	d908      	bls.n	802e2f6 <__fpclassifyf+0x2e>
 802e2e4:	f1a0 43ff 	sub.w	r3, r0, #2139095040	@ 0x7f800000
 802e2e8:	4258      	negs	r0, r3
 802e2ea:	4158      	adcs	r0, r3
 802e2ec:	4770      	bx	lr
 802e2ee:	2002      	movs	r0, #2
 802e2f0:	4770      	bx	lr
 802e2f2:	2004      	movs	r0, #4
 802e2f4:	4770      	bx	lr
 802e2f6:	2003      	movs	r0, #3
 802e2f8:	4770      	bx	lr
 802e2fa:	bf00      	nop
 802e2fc:	007ffffe 	.word	0x007ffffe

0802e300 <atan2>:
 802e300:	f001 bbea 	b.w	802fad8 <__ieee754_atan2>
 802e304:	0000      	movs	r0, r0
	...

0802e308 <exp>:
 802e308:	b538      	push	{r3, r4, r5, lr}
 802e30a:	ed2d 8b02 	vpush	{d8}
 802e30e:	ec55 4b10 	vmov	r4, r5, d0
 802e312:	f001 fca9 	bl	802fc68 <__ieee754_exp>
 802e316:	eeb0 8a40 	vmov.f32	s16, s0
 802e31a:	eef0 8a60 	vmov.f32	s17, s1
 802e31e:	ec45 4b10 	vmov	d0, r4, r5
 802e322:	f000 fd8b 	bl	802ee3c <finite>
 802e326:	b168      	cbz	r0, 802e344 <exp+0x3c>
 802e328:	a317      	add	r3, pc, #92	@ (adr r3, 802e388 <exp+0x80>)
 802e32a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802e32e:	4620      	mov	r0, r4
 802e330:	4629      	mov	r1, r5
 802e332:	f7d2 fb9d 	bl	8000a70 <__aeabi_dcmpgt>
 802e336:	b160      	cbz	r0, 802e352 <exp+0x4a>
 802e338:	f7ff fc5a 	bl	802dbf0 <__errno>
 802e33c:	ed9f 8b0e 	vldr	d8, [pc, #56]	@ 802e378 <exp+0x70>
 802e340:	2322      	movs	r3, #34	@ 0x22
 802e342:	6003      	str	r3, [r0, #0]
 802e344:	eeb0 0a48 	vmov.f32	s0, s16
 802e348:	eef0 0a68 	vmov.f32	s1, s17
 802e34c:	ecbd 8b02 	vpop	{d8}
 802e350:	bd38      	pop	{r3, r4, r5, pc}
 802e352:	a30f      	add	r3, pc, #60	@ (adr r3, 802e390 <exp+0x88>)
 802e354:	e9d3 2300 	ldrd	r2, r3, [r3]
 802e358:	4620      	mov	r0, r4
 802e35a:	4629      	mov	r1, r5
 802e35c:	f7d2 fb6a 	bl	8000a34 <__aeabi_dcmplt>
 802e360:	2800      	cmp	r0, #0
 802e362:	d0ef      	beq.n	802e344 <exp+0x3c>
 802e364:	f7ff fc44 	bl	802dbf0 <__errno>
 802e368:	2322      	movs	r3, #34	@ 0x22
 802e36a:	ed9f 8b05 	vldr	d8, [pc, #20]	@ 802e380 <exp+0x78>
 802e36e:	6003      	str	r3, [r0, #0]
 802e370:	e7e8      	b.n	802e344 <exp+0x3c>
 802e372:	bf00      	nop
 802e374:	f3af 8000 	nop.w
 802e378:	00000000 	.word	0x00000000
 802e37c:	7ff00000 	.word	0x7ff00000
	...
 802e388:	fefa39ef 	.word	0xfefa39ef
 802e38c:	40862e42 	.word	0x40862e42
 802e390:	d52d3051 	.word	0xd52d3051
 802e394:	c0874910 	.word	0xc0874910

0802e398 <pow>:
 802e398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e39a:	ed2d 8b02 	vpush	{d8}
 802e39e:	eeb0 8a40 	vmov.f32	s16, s0
 802e3a2:	eef0 8a60 	vmov.f32	s17, s1
 802e3a6:	ec55 4b11 	vmov	r4, r5, d1
 802e3aa:	f001 fdd9 	bl	802ff60 <__ieee754_pow>
 802e3ae:	4622      	mov	r2, r4
 802e3b0:	462b      	mov	r3, r5
 802e3b2:	4620      	mov	r0, r4
 802e3b4:	4629      	mov	r1, r5
 802e3b6:	ec57 6b10 	vmov	r6, r7, d0
 802e3ba:	f7d2 fb63 	bl	8000a84 <__aeabi_dcmpun>
 802e3be:	2800      	cmp	r0, #0
 802e3c0:	d13b      	bne.n	802e43a <pow+0xa2>
 802e3c2:	ec51 0b18 	vmov	r0, r1, d8
 802e3c6:	2200      	movs	r2, #0
 802e3c8:	2300      	movs	r3, #0
 802e3ca:	f7d2 fb29 	bl	8000a20 <__aeabi_dcmpeq>
 802e3ce:	b1b8      	cbz	r0, 802e400 <pow+0x68>
 802e3d0:	2200      	movs	r2, #0
 802e3d2:	2300      	movs	r3, #0
 802e3d4:	4620      	mov	r0, r4
 802e3d6:	4629      	mov	r1, r5
 802e3d8:	f7d2 fb22 	bl	8000a20 <__aeabi_dcmpeq>
 802e3dc:	2800      	cmp	r0, #0
 802e3de:	d146      	bne.n	802e46e <pow+0xd6>
 802e3e0:	ec45 4b10 	vmov	d0, r4, r5
 802e3e4:	f000 fd2a 	bl	802ee3c <finite>
 802e3e8:	b338      	cbz	r0, 802e43a <pow+0xa2>
 802e3ea:	2200      	movs	r2, #0
 802e3ec:	2300      	movs	r3, #0
 802e3ee:	4620      	mov	r0, r4
 802e3f0:	4629      	mov	r1, r5
 802e3f2:	f7d2 fb1f 	bl	8000a34 <__aeabi_dcmplt>
 802e3f6:	b300      	cbz	r0, 802e43a <pow+0xa2>
 802e3f8:	f7ff fbfa 	bl	802dbf0 <__errno>
 802e3fc:	2322      	movs	r3, #34	@ 0x22
 802e3fe:	e01b      	b.n	802e438 <pow+0xa0>
 802e400:	ec47 6b10 	vmov	d0, r6, r7
 802e404:	f000 fd1a 	bl	802ee3c <finite>
 802e408:	b9e0      	cbnz	r0, 802e444 <pow+0xac>
 802e40a:	eeb0 0a48 	vmov.f32	s0, s16
 802e40e:	eef0 0a68 	vmov.f32	s1, s17
 802e412:	f000 fd13 	bl	802ee3c <finite>
 802e416:	b1a8      	cbz	r0, 802e444 <pow+0xac>
 802e418:	ec45 4b10 	vmov	d0, r4, r5
 802e41c:	f000 fd0e 	bl	802ee3c <finite>
 802e420:	b180      	cbz	r0, 802e444 <pow+0xac>
 802e422:	4632      	mov	r2, r6
 802e424:	463b      	mov	r3, r7
 802e426:	4630      	mov	r0, r6
 802e428:	4639      	mov	r1, r7
 802e42a:	f7d2 fb2b 	bl	8000a84 <__aeabi_dcmpun>
 802e42e:	2800      	cmp	r0, #0
 802e430:	d0e2      	beq.n	802e3f8 <pow+0x60>
 802e432:	f7ff fbdd 	bl	802dbf0 <__errno>
 802e436:	2321      	movs	r3, #33	@ 0x21
 802e438:	6003      	str	r3, [r0, #0]
 802e43a:	ecbd 8b02 	vpop	{d8}
 802e43e:	ec47 6b10 	vmov	d0, r6, r7
 802e442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e444:	2200      	movs	r2, #0
 802e446:	2300      	movs	r3, #0
 802e448:	4630      	mov	r0, r6
 802e44a:	4639      	mov	r1, r7
 802e44c:	f7d2 fae8 	bl	8000a20 <__aeabi_dcmpeq>
 802e450:	2800      	cmp	r0, #0
 802e452:	d0f2      	beq.n	802e43a <pow+0xa2>
 802e454:	eeb0 0a48 	vmov.f32	s0, s16
 802e458:	eef0 0a68 	vmov.f32	s1, s17
 802e45c:	f000 fcee 	bl	802ee3c <finite>
 802e460:	2800      	cmp	r0, #0
 802e462:	d0ea      	beq.n	802e43a <pow+0xa2>
 802e464:	ec45 4b10 	vmov	d0, r4, r5
 802e468:	f000 fce8 	bl	802ee3c <finite>
 802e46c:	e7c3      	b.n	802e3f6 <pow+0x5e>
 802e46e:	4f01      	ldr	r7, [pc, #4]	@ (802e474 <pow+0xdc>)
 802e470:	2600      	movs	r6, #0
 802e472:	e7e2      	b.n	802e43a <pow+0xa2>
 802e474:	3ff00000 	.word	0x3ff00000

0802e478 <sinh>:
 802e478:	b508      	push	{r3, lr}
 802e47a:	ed2d 8b04 	vpush	{d8-d9}
 802e47e:	eeb0 9a40 	vmov.f32	s18, s0
 802e482:	eef0 9a60 	vmov.f32	s19, s1
 802e486:	f002 fcab 	bl	8030de0 <__ieee754_sinh>
 802e48a:	eeb0 8a40 	vmov.f32	s16, s0
 802e48e:	eef0 8a60 	vmov.f32	s17, s1
 802e492:	f000 fcd3 	bl	802ee3c <finite>
 802e496:	b998      	cbnz	r0, 802e4c0 <sinh+0x48>
 802e498:	eeb0 0a49 	vmov.f32	s0, s18
 802e49c:	eef0 0a69 	vmov.f32	s1, s19
 802e4a0:	f000 fccc 	bl	802ee3c <finite>
 802e4a4:	b160      	cbz	r0, 802e4c0 <sinh+0x48>
 802e4a6:	f7ff fba3 	bl	802dbf0 <__errno>
 802e4aa:	2322      	movs	r3, #34	@ 0x22
 802e4ac:	6003      	str	r3, [r0, #0]
 802e4ae:	2200      	movs	r2, #0
 802e4b0:	ec51 0b19 	vmov	r0, r1, d9
 802e4b4:	2300      	movs	r3, #0
 802e4b6:	f7d2 fadb 	bl	8000a70 <__aeabi_dcmpgt>
 802e4ba:	b140      	cbz	r0, 802e4ce <sinh+0x56>
 802e4bc:	ed9f 8b06 	vldr	d8, [pc, #24]	@ 802e4d8 <sinh+0x60>
 802e4c0:	eeb0 0a48 	vmov.f32	s0, s16
 802e4c4:	eef0 0a68 	vmov.f32	s1, s17
 802e4c8:	ecbd 8b04 	vpop	{d8-d9}
 802e4cc:	bd08      	pop	{r3, pc}
 802e4ce:	ed9f 8b04 	vldr	d8, [pc, #16]	@ 802e4e0 <sinh+0x68>
 802e4d2:	e7f5      	b.n	802e4c0 <sinh+0x48>
 802e4d4:	f3af 8000 	nop.w
 802e4d8:	00000000 	.word	0x00000000
 802e4dc:	7ff00000 	.word	0x7ff00000
 802e4e0:	00000000 	.word	0x00000000
 802e4e4:	fff00000 	.word	0xfff00000

0802e4e8 <sqrt>:
 802e4e8:	b538      	push	{r3, r4, r5, lr}
 802e4ea:	ed2d 8b02 	vpush	{d8}
 802e4ee:	ec55 4b10 	vmov	r4, r5, d0
 802e4f2:	f000 fe03 	bl	802f0fc <__ieee754_sqrt>
 802e4f6:	4622      	mov	r2, r4
 802e4f8:	462b      	mov	r3, r5
 802e4fa:	4620      	mov	r0, r4
 802e4fc:	4629      	mov	r1, r5
 802e4fe:	eeb0 8a40 	vmov.f32	s16, s0
 802e502:	eef0 8a60 	vmov.f32	s17, s1
 802e506:	f7d2 fabd 	bl	8000a84 <__aeabi_dcmpun>
 802e50a:	b990      	cbnz	r0, 802e532 <sqrt+0x4a>
 802e50c:	2200      	movs	r2, #0
 802e50e:	2300      	movs	r3, #0
 802e510:	4620      	mov	r0, r4
 802e512:	4629      	mov	r1, r5
 802e514:	f7d2 fa8e 	bl	8000a34 <__aeabi_dcmplt>
 802e518:	b158      	cbz	r0, 802e532 <sqrt+0x4a>
 802e51a:	f7ff fb69 	bl	802dbf0 <__errno>
 802e51e:	2321      	movs	r3, #33	@ 0x21
 802e520:	6003      	str	r3, [r0, #0]
 802e522:	2200      	movs	r2, #0
 802e524:	2300      	movs	r3, #0
 802e526:	4610      	mov	r0, r2
 802e528:	4619      	mov	r1, r3
 802e52a:	f7d2 f93b 	bl	80007a4 <__aeabi_ddiv>
 802e52e:	ec41 0b18 	vmov	d8, r0, r1
 802e532:	eeb0 0a48 	vmov.f32	s0, s16
 802e536:	eef0 0a68 	vmov.f32	s1, s17
 802e53a:	ecbd 8b02 	vpop	{d8}
 802e53e:	bd38      	pop	{r3, r4, r5, pc}

0802e540 <cos>:
 802e540:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e542:	ec53 2b10 	vmov	r2, r3, d0
 802e546:	4826      	ldr	r0, [pc, #152]	@ (802e5e0 <cos+0xa0>)
 802e548:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802e54c:	4281      	cmp	r1, r0
 802e54e:	d806      	bhi.n	802e55e <cos+0x1e>
 802e550:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 802e5d8 <cos+0x98>
 802e554:	b005      	add	sp, #20
 802e556:	f85d eb04 	ldr.w	lr, [sp], #4
 802e55a:	f000 bf35 	b.w	802f3c8 <__kernel_cos>
 802e55e:	4821      	ldr	r0, [pc, #132]	@ (802e5e4 <cos+0xa4>)
 802e560:	4281      	cmp	r1, r0
 802e562:	d908      	bls.n	802e576 <cos+0x36>
 802e564:	4610      	mov	r0, r2
 802e566:	4619      	mov	r1, r3
 802e568:	f7d1 fe3a 	bl	80001e0 <__aeabi_dsub>
 802e56c:	ec41 0b10 	vmov	d0, r0, r1
 802e570:	b005      	add	sp, #20
 802e572:	f85d fb04 	ldr.w	pc, [sp], #4
 802e576:	4668      	mov	r0, sp
 802e578:	f002 fa36 	bl	80309e8 <__ieee754_rem_pio2>
 802e57c:	f000 0003 	and.w	r0, r0, #3
 802e580:	2801      	cmp	r0, #1
 802e582:	d00b      	beq.n	802e59c <cos+0x5c>
 802e584:	2802      	cmp	r0, #2
 802e586:	d015      	beq.n	802e5b4 <cos+0x74>
 802e588:	b9d8      	cbnz	r0, 802e5c2 <cos+0x82>
 802e58a:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e58e:	ed9d 0b00 	vldr	d0, [sp]
 802e592:	f000 ff19 	bl	802f3c8 <__kernel_cos>
 802e596:	ec51 0b10 	vmov	r0, r1, d0
 802e59a:	e7e7      	b.n	802e56c <cos+0x2c>
 802e59c:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e5a0:	ed9d 0b00 	vldr	d0, [sp]
 802e5a4:	f000 ffd8 	bl	802f558 <__kernel_sin>
 802e5a8:	ec53 2b10 	vmov	r2, r3, d0
 802e5ac:	4610      	mov	r0, r2
 802e5ae:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 802e5b2:	e7db      	b.n	802e56c <cos+0x2c>
 802e5b4:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e5b8:	ed9d 0b00 	vldr	d0, [sp]
 802e5bc:	f000 ff04 	bl	802f3c8 <__kernel_cos>
 802e5c0:	e7f2      	b.n	802e5a8 <cos+0x68>
 802e5c2:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e5c6:	ed9d 0b00 	vldr	d0, [sp]
 802e5ca:	2001      	movs	r0, #1
 802e5cc:	f000 ffc4 	bl	802f558 <__kernel_sin>
 802e5d0:	e7e1      	b.n	802e596 <cos+0x56>
 802e5d2:	bf00      	nop
 802e5d4:	f3af 8000 	nop.w
	...
 802e5e0:	3fe921fb 	.word	0x3fe921fb
 802e5e4:	7fefffff 	.word	0x7fefffff

0802e5e8 <sin>:
 802e5e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e5ea:	ec53 2b10 	vmov	r2, r3, d0
 802e5ee:	4826      	ldr	r0, [pc, #152]	@ (802e688 <sin+0xa0>)
 802e5f0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802e5f4:	4281      	cmp	r1, r0
 802e5f6:	d807      	bhi.n	802e608 <sin+0x20>
 802e5f8:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 802e680 <sin+0x98>
 802e5fc:	2000      	movs	r0, #0
 802e5fe:	b005      	add	sp, #20
 802e600:	f85d eb04 	ldr.w	lr, [sp], #4
 802e604:	f000 bfa8 	b.w	802f558 <__kernel_sin>
 802e608:	4820      	ldr	r0, [pc, #128]	@ (802e68c <sin+0xa4>)
 802e60a:	4281      	cmp	r1, r0
 802e60c:	d908      	bls.n	802e620 <sin+0x38>
 802e60e:	4610      	mov	r0, r2
 802e610:	4619      	mov	r1, r3
 802e612:	f7d1 fde5 	bl	80001e0 <__aeabi_dsub>
 802e616:	ec41 0b10 	vmov	d0, r0, r1
 802e61a:	b005      	add	sp, #20
 802e61c:	f85d fb04 	ldr.w	pc, [sp], #4
 802e620:	4668      	mov	r0, sp
 802e622:	f002 f9e1 	bl	80309e8 <__ieee754_rem_pio2>
 802e626:	f000 0003 	and.w	r0, r0, #3
 802e62a:	2801      	cmp	r0, #1
 802e62c:	d00c      	beq.n	802e648 <sin+0x60>
 802e62e:	2802      	cmp	r0, #2
 802e630:	d011      	beq.n	802e656 <sin+0x6e>
 802e632:	b9e8      	cbnz	r0, 802e670 <sin+0x88>
 802e634:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e638:	ed9d 0b00 	vldr	d0, [sp]
 802e63c:	2001      	movs	r0, #1
 802e63e:	f000 ff8b 	bl	802f558 <__kernel_sin>
 802e642:	ec51 0b10 	vmov	r0, r1, d0
 802e646:	e7e6      	b.n	802e616 <sin+0x2e>
 802e648:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e64c:	ed9d 0b00 	vldr	d0, [sp]
 802e650:	f000 feba 	bl	802f3c8 <__kernel_cos>
 802e654:	e7f5      	b.n	802e642 <sin+0x5a>
 802e656:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e65a:	ed9d 0b00 	vldr	d0, [sp]
 802e65e:	2001      	movs	r0, #1
 802e660:	f000 ff7a 	bl	802f558 <__kernel_sin>
 802e664:	ec53 2b10 	vmov	r2, r3, d0
 802e668:	4610      	mov	r0, r2
 802e66a:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 802e66e:	e7d2      	b.n	802e616 <sin+0x2e>
 802e670:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e674:	ed9d 0b00 	vldr	d0, [sp]
 802e678:	f000 fea6 	bl	802f3c8 <__kernel_cos>
 802e67c:	e7f2      	b.n	802e664 <sin+0x7c>
 802e67e:	bf00      	nop
	...
 802e688:	3fe921fb 	.word	0x3fe921fb
 802e68c:	7fefffff 	.word	0x7fefffff

0802e690 <tan>:
 802e690:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e692:	ec53 2b10 	vmov	r2, r3, d0
 802e696:	4816      	ldr	r0, [pc, #88]	@ (802e6f0 <tan+0x60>)
 802e698:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802e69c:	4281      	cmp	r1, r0
 802e69e:	d807      	bhi.n	802e6b0 <tan+0x20>
 802e6a0:	ed9f 1b11 	vldr	d1, [pc, #68]	@ 802e6e8 <tan+0x58>
 802e6a4:	2001      	movs	r0, #1
 802e6a6:	b005      	add	sp, #20
 802e6a8:	f85d eb04 	ldr.w	lr, [sp], #4
 802e6ac:	f001 b810 	b.w	802f6d0 <__kernel_tan>
 802e6b0:	4810      	ldr	r0, [pc, #64]	@ (802e6f4 <tan+0x64>)
 802e6b2:	4281      	cmp	r1, r0
 802e6b4:	d908      	bls.n	802e6c8 <tan+0x38>
 802e6b6:	4610      	mov	r0, r2
 802e6b8:	4619      	mov	r1, r3
 802e6ba:	f7d1 fd91 	bl	80001e0 <__aeabi_dsub>
 802e6be:	ec41 0b10 	vmov	d0, r0, r1
 802e6c2:	b005      	add	sp, #20
 802e6c4:	f85d fb04 	ldr.w	pc, [sp], #4
 802e6c8:	4668      	mov	r0, sp
 802e6ca:	f002 f98d 	bl	80309e8 <__ieee754_rem_pio2>
 802e6ce:	0040      	lsls	r0, r0, #1
 802e6d0:	f000 0002 	and.w	r0, r0, #2
 802e6d4:	ed9d 1b02 	vldr	d1, [sp, #8]
 802e6d8:	ed9d 0b00 	vldr	d0, [sp]
 802e6dc:	f1c0 0001 	rsb	r0, r0, #1
 802e6e0:	f000 fff6 	bl	802f6d0 <__kernel_tan>
 802e6e4:	e7ed      	b.n	802e6c2 <tan+0x32>
 802e6e6:	bf00      	nop
	...
 802e6f0:	3fe921fb 	.word	0x3fe921fb
 802e6f4:	7fefffff 	.word	0x7fefffff

0802e6f8 <acosf>:
 802e6f8:	b508      	push	{r3, lr}
 802e6fa:	ed2d 8b02 	vpush	{d8}
 802e6fe:	eeb0 8a40 	vmov.f32	s16, s0
 802e702:	f002 ff49 	bl	8031598 <__ieee754_acosf>
 802e706:	eeb4 8a48 	vcmp.f32	s16, s16
 802e70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e70e:	eef0 8a40 	vmov.f32	s17, s0
 802e712:	d615      	bvs.n	802e740 <acosf+0x48>
 802e714:	eeb0 0a48 	vmov.f32	s0, s16
 802e718:	f000 faac 	bl	802ec74 <fabsf>
 802e71c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802e720:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802e724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e728:	dd0a      	ble.n	802e740 <acosf+0x48>
 802e72a:	f7ff fa61 	bl	802dbf0 <__errno>
 802e72e:	ecbd 8b02 	vpop	{d8}
 802e732:	2321      	movs	r3, #33	@ 0x21
 802e734:	6003      	str	r3, [r0, #0]
 802e736:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802e73a:	4804      	ldr	r0, [pc, #16]	@ (802e74c <acosf+0x54>)
 802e73c:	f000 bcb2 	b.w	802f0a4 <nanf>
 802e740:	eeb0 0a68 	vmov.f32	s0, s17
 802e744:	ecbd 8b02 	vpop	{d8}
 802e748:	bd08      	pop	{r3, pc}
 802e74a:	bf00      	nop
 802e74c:	0803ae9d 	.word	0x0803ae9d

0802e750 <asinf>:
 802e750:	b508      	push	{r3, lr}
 802e752:	ed2d 8b02 	vpush	{d8}
 802e756:	eeb0 8a40 	vmov.f32	s16, s0
 802e75a:	f003 f815 	bl	8031788 <__ieee754_asinf>
 802e75e:	eeb4 8a48 	vcmp.f32	s16, s16
 802e762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e766:	eef0 8a40 	vmov.f32	s17, s0
 802e76a:	d615      	bvs.n	802e798 <asinf+0x48>
 802e76c:	eeb0 0a48 	vmov.f32	s0, s16
 802e770:	f000 fa80 	bl	802ec74 <fabsf>
 802e774:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802e778:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802e77c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e780:	dd0a      	ble.n	802e798 <asinf+0x48>
 802e782:	f7ff fa35 	bl	802dbf0 <__errno>
 802e786:	ecbd 8b02 	vpop	{d8}
 802e78a:	2321      	movs	r3, #33	@ 0x21
 802e78c:	6003      	str	r3, [r0, #0]
 802e78e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802e792:	4804      	ldr	r0, [pc, #16]	@ (802e7a4 <asinf+0x54>)
 802e794:	f000 bc86 	b.w	802f0a4 <nanf>
 802e798:	eeb0 0a68 	vmov.f32	s0, s17
 802e79c:	ecbd 8b02 	vpop	{d8}
 802e7a0:	bd08      	pop	{r3, pc}
 802e7a2:	bf00      	nop
 802e7a4:	0803ae9d 	.word	0x0803ae9d

0802e7a8 <atan2f>:
 802e7a8:	f003 b8d4 	b.w	8031954 <__ieee754_atan2f>

0802e7ac <coshf>:
 802e7ac:	b508      	push	{r3, lr}
 802e7ae:	ed2d 8b02 	vpush	{d8}
 802e7b2:	eeb0 8a40 	vmov.f32	s16, s0
 802e7b6:	f003 f96d 	bl	8031a94 <__ieee754_coshf>
 802e7ba:	eeb4 8a48 	vcmp.f32	s16, s16
 802e7be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e7c2:	eef0 8a40 	vmov.f32	s17, s0
 802e7c6:	d610      	bvs.n	802e7ea <coshf+0x3e>
 802e7c8:	eeb0 0a48 	vmov.f32	s0, s16
 802e7cc:	f000 fa52 	bl	802ec74 <fabsf>
 802e7d0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802e7f4 <coshf+0x48>
 802e7d4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802e7d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e7dc:	dd05      	ble.n	802e7ea <coshf+0x3e>
 802e7de:	f7ff fa07 	bl	802dbf0 <__errno>
 802e7e2:	eddf 8a05 	vldr	s17, [pc, #20]	@ 802e7f8 <coshf+0x4c>
 802e7e6:	2322      	movs	r3, #34	@ 0x22
 802e7e8:	6003      	str	r3, [r0, #0]
 802e7ea:	eeb0 0a68 	vmov.f32	s0, s17
 802e7ee:	ecbd 8b02 	vpop	{d8}
 802e7f2:	bd08      	pop	{r3, pc}
 802e7f4:	42b2d4fc 	.word	0x42b2d4fc
 802e7f8:	7f800000 	.word	0x7f800000

0802e7fc <expf>:
 802e7fc:	b508      	push	{r3, lr}
 802e7fe:	ed2d 8b02 	vpush	{d8}
 802e802:	eef0 8a40 	vmov.f32	s17, s0
 802e806:	f003 f9a5 	bl	8031b54 <__ieee754_expf>
 802e80a:	eeb0 8a40 	vmov.f32	s16, s0
 802e80e:	eeb0 0a68 	vmov.f32	s0, s17
 802e812:	f7ff fb17 	bl	802de44 <finitef>
 802e816:	b160      	cbz	r0, 802e832 <expf+0x36>
 802e818:	eddf 7a0f 	vldr	s15, [pc, #60]	@ 802e858 <expf+0x5c>
 802e81c:	eef4 8ae7 	vcmpe.f32	s17, s15
 802e820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e824:	dd0a      	ble.n	802e83c <expf+0x40>
 802e826:	f7ff f9e3 	bl	802dbf0 <__errno>
 802e82a:	ed9f 8a0c 	vldr	s16, [pc, #48]	@ 802e85c <expf+0x60>
 802e82e:	2322      	movs	r3, #34	@ 0x22
 802e830:	6003      	str	r3, [r0, #0]
 802e832:	eeb0 0a48 	vmov.f32	s0, s16
 802e836:	ecbd 8b02 	vpop	{d8}
 802e83a:	bd08      	pop	{r3, pc}
 802e83c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802e860 <expf+0x64>
 802e840:	eef4 8ae7 	vcmpe.f32	s17, s15
 802e844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e848:	d5f3      	bpl.n	802e832 <expf+0x36>
 802e84a:	f7ff f9d1 	bl	802dbf0 <__errno>
 802e84e:	2322      	movs	r3, #34	@ 0x22
 802e850:	ed9f 8a04 	vldr	s16, [pc, #16]	@ 802e864 <expf+0x68>
 802e854:	6003      	str	r3, [r0, #0]
 802e856:	e7ec      	b.n	802e832 <expf+0x36>
 802e858:	42b17217 	.word	0x42b17217
 802e85c:	7f800000 	.word	0x7f800000
 802e860:	c2cff1b5 	.word	0xc2cff1b5
 802e864:	00000000 	.word	0x00000000

0802e868 <fmodf>:
 802e868:	b508      	push	{r3, lr}
 802e86a:	ed2d 8b02 	vpush	{d8}
 802e86e:	eef0 8a40 	vmov.f32	s17, s0
 802e872:	eeb0 8a60 	vmov.f32	s16, s1
 802e876:	f003 fa3b 	bl	8031cf0 <__ieee754_fmodf>
 802e87a:	eef4 8a48 	vcmp.f32	s17, s16
 802e87e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e882:	d60c      	bvs.n	802e89e <fmodf+0x36>
 802e884:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802e8a4 <fmodf+0x3c>
 802e888:	eeb4 8a68 	vcmp.f32	s16, s17
 802e88c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e890:	d105      	bne.n	802e89e <fmodf+0x36>
 802e892:	f7ff f9ad 	bl	802dbf0 <__errno>
 802e896:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802e89a:	2321      	movs	r3, #33	@ 0x21
 802e89c:	6003      	str	r3, [r0, #0]
 802e89e:	ecbd 8b02 	vpop	{d8}
 802e8a2:	bd08      	pop	{r3, pc}
 802e8a4:	00000000 	.word	0x00000000

0802e8a8 <logf>:
 802e8a8:	b508      	push	{r3, lr}
 802e8aa:	ed2d 8b02 	vpush	{d8}
 802e8ae:	eeb0 8a40 	vmov.f32	s16, s0
 802e8b2:	f003 fa9f 	bl	8031df4 <__ieee754_logf>
 802e8b6:	eeb4 8a48 	vcmp.f32	s16, s16
 802e8ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e8be:	d60f      	bvs.n	802e8e0 <logf+0x38>
 802e8c0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 802e8c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e8c8:	dc0a      	bgt.n	802e8e0 <logf+0x38>
 802e8ca:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802e8ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e8d2:	d108      	bne.n	802e8e6 <logf+0x3e>
 802e8d4:	f7ff f98c 	bl	802dbf0 <__errno>
 802e8d8:	2322      	movs	r3, #34	@ 0x22
 802e8da:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802e8fc <logf+0x54>
 802e8de:	6003      	str	r3, [r0, #0]
 802e8e0:	ecbd 8b02 	vpop	{d8}
 802e8e4:	bd08      	pop	{r3, pc}
 802e8e6:	f7ff f983 	bl	802dbf0 <__errno>
 802e8ea:	ecbd 8b02 	vpop	{d8}
 802e8ee:	2321      	movs	r3, #33	@ 0x21
 802e8f0:	6003      	str	r3, [r0, #0]
 802e8f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802e8f6:	4802      	ldr	r0, [pc, #8]	@ (802e900 <logf+0x58>)
 802e8f8:	f000 bbd4 	b.w	802f0a4 <nanf>
 802e8fc:	ff800000 	.word	0xff800000
 802e900:	0803ae9d 	.word	0x0803ae9d

0802e904 <powf>:
 802e904:	b508      	push	{r3, lr}
 802e906:	ed2d 8b04 	vpush	{d8-d9}
 802e90a:	eeb0 8a60 	vmov.f32	s16, s1
 802e90e:	eeb0 9a40 	vmov.f32	s18, s0
 802e912:	f003 fb61 	bl	8031fd8 <__ieee754_powf>
 802e916:	eeb4 8a48 	vcmp.f32	s16, s16
 802e91a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e91e:	eef0 8a40 	vmov.f32	s17, s0
 802e922:	d63e      	bvs.n	802e9a2 <powf+0x9e>
 802e924:	eeb5 9a40 	vcmp.f32	s18, #0.0
 802e928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e92c:	d112      	bne.n	802e954 <powf+0x50>
 802e92e:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802e932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e936:	d039      	beq.n	802e9ac <powf+0xa8>
 802e938:	eeb0 0a48 	vmov.f32	s0, s16
 802e93c:	f7ff fa82 	bl	802de44 <finitef>
 802e940:	b378      	cbz	r0, 802e9a2 <powf+0x9e>
 802e942:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 802e946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e94a:	d52a      	bpl.n	802e9a2 <powf+0x9e>
 802e94c:	f7ff f950 	bl	802dbf0 <__errno>
 802e950:	2322      	movs	r3, #34	@ 0x22
 802e952:	e014      	b.n	802e97e <powf+0x7a>
 802e954:	f7ff fa76 	bl	802de44 <finitef>
 802e958:	b998      	cbnz	r0, 802e982 <powf+0x7e>
 802e95a:	eeb0 0a49 	vmov.f32	s0, s18
 802e95e:	f7ff fa71 	bl	802de44 <finitef>
 802e962:	b170      	cbz	r0, 802e982 <powf+0x7e>
 802e964:	eeb0 0a48 	vmov.f32	s0, s16
 802e968:	f7ff fa6c 	bl	802de44 <finitef>
 802e96c:	b148      	cbz	r0, 802e982 <powf+0x7e>
 802e96e:	eef4 8a68 	vcmp.f32	s17, s17
 802e972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e976:	d7e9      	bvc.n	802e94c <powf+0x48>
 802e978:	f7ff f93a 	bl	802dbf0 <__errno>
 802e97c:	2321      	movs	r3, #33	@ 0x21
 802e97e:	6003      	str	r3, [r0, #0]
 802e980:	e00f      	b.n	802e9a2 <powf+0x9e>
 802e982:	eef5 8a40 	vcmp.f32	s17, #0.0
 802e986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e98a:	d10a      	bne.n	802e9a2 <powf+0x9e>
 802e98c:	eeb0 0a49 	vmov.f32	s0, s18
 802e990:	f7ff fa58 	bl	802de44 <finitef>
 802e994:	b128      	cbz	r0, 802e9a2 <powf+0x9e>
 802e996:	eeb0 0a48 	vmov.f32	s0, s16
 802e99a:	f7ff fa53 	bl	802de44 <finitef>
 802e99e:	2800      	cmp	r0, #0
 802e9a0:	d1d4      	bne.n	802e94c <powf+0x48>
 802e9a2:	eeb0 0a68 	vmov.f32	s0, s17
 802e9a6:	ecbd 8b04 	vpop	{d8-d9}
 802e9aa:	bd08      	pop	{r3, pc}
 802e9ac:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 802e9b0:	e7f7      	b.n	802e9a2 <powf+0x9e>
	...

0802e9b4 <sinhf>:
 802e9b4:	b508      	push	{r3, lr}
 802e9b6:	ed2d 8b02 	vpush	{d8}
 802e9ba:	eef0 8a40 	vmov.f32	s17, s0
 802e9be:	f003 ff0b 	bl	80327d8 <__ieee754_sinhf>
 802e9c2:	eeb0 8a40 	vmov.f32	s16, s0
 802e9c6:	f7ff fa3d 	bl	802de44 <finitef>
 802e9ca:	b998      	cbnz	r0, 802e9f4 <sinhf+0x40>
 802e9cc:	eeb0 0a68 	vmov.f32	s0, s17
 802e9d0:	f7ff fa38 	bl	802de44 <finitef>
 802e9d4:	b170      	cbz	r0, 802e9f4 <sinhf+0x40>
 802e9d6:	f7ff f90b 	bl	802dbf0 <__errno>
 802e9da:	ed9f 8a09 	vldr	s16, [pc, #36]	@ 802ea00 <sinhf+0x4c>
 802e9de:	eddf 7a09 	vldr	s15, [pc, #36]	@ 802ea04 <sinhf+0x50>
 802e9e2:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 802e9e6:	2322      	movs	r3, #34	@ 0x22
 802e9e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e9ec:	6003      	str	r3, [r0, #0]
 802e9ee:	bfd8      	it	le
 802e9f0:	eeb0 8a67 	vmovle.f32	s16, s15
 802e9f4:	eeb0 0a48 	vmov.f32	s0, s16
 802e9f8:	ecbd 8b02 	vpop	{d8}
 802e9fc:	bd08      	pop	{r3, pc}
 802e9fe:	bf00      	nop
 802ea00:	7f800000 	.word	0x7f800000
 802ea04:	ff800000 	.word	0xff800000

0802ea08 <sqrtf>:
 802ea08:	b508      	push	{r3, lr}
 802ea0a:	ed2d 8b02 	vpush	{d8}
 802ea0e:	eeb0 8a40 	vmov.f32	s16, s0
 802ea12:	f000 fc4d 	bl	802f2b0 <__ieee754_sqrtf>
 802ea16:	eeb4 8a48 	vcmp.f32	s16, s16
 802ea1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ea1e:	d60c      	bvs.n	802ea3a <sqrtf+0x32>
 802ea20:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802ea40 <sqrtf+0x38>
 802ea24:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802ea28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ea2c:	d505      	bpl.n	802ea3a <sqrtf+0x32>
 802ea2e:	f7ff f8df 	bl	802dbf0 <__errno>
 802ea32:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802ea36:	2321      	movs	r3, #33	@ 0x21
 802ea38:	6003      	str	r3, [r0, #0]
 802ea3a:	ecbd 8b02 	vpop	{d8}
 802ea3e:	bd08      	pop	{r3, pc}
 802ea40:	00000000 	.word	0x00000000

0802ea44 <atanf>:
 802ea44:	b538      	push	{r3, r4, r5, lr}
 802ea46:	ee10 5a10 	vmov	r5, s0
 802ea4a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802ea4e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802ea52:	eef0 7a40 	vmov.f32	s15, s0
 802ea56:	d310      	bcc.n	802ea7a <atanf+0x36>
 802ea58:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 802ea5c:	d904      	bls.n	802ea68 <atanf+0x24>
 802ea5e:	ee70 7a00 	vadd.f32	s15, s0, s0
 802ea62:	eeb0 0a67 	vmov.f32	s0, s15
 802ea66:	bd38      	pop	{r3, r4, r5, pc}
 802ea68:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802eba0 <atanf+0x15c>
 802ea6c:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 802eba4 <atanf+0x160>
 802ea70:	2d00      	cmp	r5, #0
 802ea72:	bfc8      	it	gt
 802ea74:	eef0 7a47 	vmovgt.f32	s15, s14
 802ea78:	e7f3      	b.n	802ea62 <atanf+0x1e>
 802ea7a:	4b4b      	ldr	r3, [pc, #300]	@ (802eba8 <atanf+0x164>)
 802ea7c:	429c      	cmp	r4, r3
 802ea7e:	d810      	bhi.n	802eaa2 <atanf+0x5e>
 802ea80:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 802ea84:	d20a      	bcs.n	802ea9c <atanf+0x58>
 802ea86:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802ebac <atanf+0x168>
 802ea8a:	ee30 7a07 	vadd.f32	s14, s0, s14
 802ea8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802ea92:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802ea96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ea9a:	dce2      	bgt.n	802ea62 <atanf+0x1e>
 802ea9c:	f04f 33ff 	mov.w	r3, #4294967295
 802eaa0:	e013      	b.n	802eaca <atanf+0x86>
 802eaa2:	f000 f8e7 	bl	802ec74 <fabsf>
 802eaa6:	4b42      	ldr	r3, [pc, #264]	@ (802ebb0 <atanf+0x16c>)
 802eaa8:	429c      	cmp	r4, r3
 802eaaa:	d84f      	bhi.n	802eb4c <atanf+0x108>
 802eaac:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802eab0:	429c      	cmp	r4, r3
 802eab2:	d841      	bhi.n	802eb38 <atanf+0xf4>
 802eab4:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802eab8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802eabc:	eea0 7a27 	vfma.f32	s14, s0, s15
 802eac0:	2300      	movs	r3, #0
 802eac2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802eac6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802eaca:	1c5a      	adds	r2, r3, #1
 802eacc:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802ead0:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 802ebb4 <atanf+0x170>
 802ead4:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802ebb8 <atanf+0x174>
 802ead8:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802ebbc <atanf+0x178>
 802eadc:	ee66 6a06 	vmul.f32	s13, s12, s12
 802eae0:	eee6 5a87 	vfma.f32	s11, s13, s14
 802eae4:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802ebc0 <atanf+0x17c>
 802eae8:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802eaec:	eddf 5a35 	vldr	s11, [pc, #212]	@ 802ebc4 <atanf+0x180>
 802eaf0:	eee7 5a26 	vfma.f32	s11, s14, s13
 802eaf4:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802ebc8 <atanf+0x184>
 802eaf8:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802eafc:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802ebcc <atanf+0x188>
 802eb00:	eee7 5a26 	vfma.f32	s11, s14, s13
 802eb04:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802ebd0 <atanf+0x18c>
 802eb08:	eea6 5a87 	vfma.f32	s10, s13, s14
 802eb0c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802ebd4 <atanf+0x190>
 802eb10:	eea5 7a26 	vfma.f32	s14, s10, s13
 802eb14:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802ebd8 <atanf+0x194>
 802eb18:	eea7 5a26 	vfma.f32	s10, s14, s13
 802eb1c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802ebdc <atanf+0x198>
 802eb20:	eea5 7a26 	vfma.f32	s14, s10, s13
 802eb24:	ee27 7a26 	vmul.f32	s14, s14, s13
 802eb28:	eea5 7a86 	vfma.f32	s14, s11, s12
 802eb2c:	ee27 7a87 	vmul.f32	s14, s15, s14
 802eb30:	d121      	bne.n	802eb76 <atanf+0x132>
 802eb32:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802eb36:	e794      	b.n	802ea62 <atanf+0x1e>
 802eb38:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802eb3c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802eb40:	ee30 0a27 	vadd.f32	s0, s0, s15
 802eb44:	2301      	movs	r3, #1
 802eb46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802eb4a:	e7be      	b.n	802eaca <atanf+0x86>
 802eb4c:	4b24      	ldr	r3, [pc, #144]	@ (802ebe0 <atanf+0x19c>)
 802eb4e:	429c      	cmp	r4, r3
 802eb50:	d80b      	bhi.n	802eb6a <atanf+0x126>
 802eb52:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802eb56:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802eb5a:	eea0 7a27 	vfma.f32	s14, s0, s15
 802eb5e:	2302      	movs	r3, #2
 802eb60:	ee70 6a67 	vsub.f32	s13, s0, s15
 802eb64:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802eb68:	e7af      	b.n	802eaca <atanf+0x86>
 802eb6a:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802eb6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802eb72:	2303      	movs	r3, #3
 802eb74:	e7a9      	b.n	802eaca <atanf+0x86>
 802eb76:	4a1b      	ldr	r2, [pc, #108]	@ (802ebe4 <atanf+0x1a0>)
 802eb78:	491b      	ldr	r1, [pc, #108]	@ (802ebe8 <atanf+0x1a4>)
 802eb7a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802eb7e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802eb82:	edd3 6a00 	vldr	s13, [r3]
 802eb86:	ee37 7a66 	vsub.f32	s14, s14, s13
 802eb8a:	2d00      	cmp	r5, #0
 802eb8c:	ee37 7a67 	vsub.f32	s14, s14, s15
 802eb90:	edd2 7a00 	vldr	s15, [r2]
 802eb94:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802eb98:	bfb8      	it	lt
 802eb9a:	eef1 7a67 	vneglt.f32	s15, s15
 802eb9e:	e760      	b.n	802ea62 <atanf+0x1e>
 802eba0:	bfc90fdb 	.word	0xbfc90fdb
 802eba4:	3fc90fdb 	.word	0x3fc90fdb
 802eba8:	3edfffff 	.word	0x3edfffff
 802ebac:	7149f2ca 	.word	0x7149f2ca
 802ebb0:	3f97ffff 	.word	0x3f97ffff
 802ebb4:	3c8569d7 	.word	0x3c8569d7
 802ebb8:	3d4bda59 	.word	0x3d4bda59
 802ebbc:	bd6ef16b 	.word	0xbd6ef16b
 802ebc0:	3d886b35 	.word	0x3d886b35
 802ebc4:	3dba2e6e 	.word	0x3dba2e6e
 802ebc8:	3e124925 	.word	0x3e124925
 802ebcc:	3eaaaaab 	.word	0x3eaaaaab
 802ebd0:	bd15a221 	.word	0xbd15a221
 802ebd4:	bd9d8795 	.word	0xbd9d8795
 802ebd8:	bde38e38 	.word	0xbde38e38
 802ebdc:	be4ccccd 	.word	0xbe4ccccd
 802ebe0:	401bffff 	.word	0x401bffff
 802ebe4:	0803aeb0 	.word	0x0803aeb0
 802ebe8:	0803aea0 	.word	0x0803aea0

0802ebec <cosf>:
 802ebec:	ee10 3a10 	vmov	r3, s0
 802ebf0:	b507      	push	{r0, r1, r2, lr}
 802ebf2:	4a1e      	ldr	r2, [pc, #120]	@ (802ec6c <cosf+0x80>)
 802ebf4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802ebf8:	4293      	cmp	r3, r2
 802ebfa:	d806      	bhi.n	802ec0a <cosf+0x1e>
 802ebfc:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 802ec70 <cosf+0x84>
 802ec00:	b003      	add	sp, #12
 802ec02:	f85d eb04 	ldr.w	lr, [sp], #4
 802ec06:	f002 bb47 	b.w	8031298 <__kernel_cosf>
 802ec0a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802ec0e:	d304      	bcc.n	802ec1a <cosf+0x2e>
 802ec10:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ec14:	b003      	add	sp, #12
 802ec16:	f85d fb04 	ldr.w	pc, [sp], #4
 802ec1a:	4668      	mov	r0, sp
 802ec1c:	f003 fcac 	bl	8032578 <__ieee754_rem_pio2f>
 802ec20:	f000 0003 	and.w	r0, r0, #3
 802ec24:	2801      	cmp	r0, #1
 802ec26:	d009      	beq.n	802ec3c <cosf+0x50>
 802ec28:	2802      	cmp	r0, #2
 802ec2a:	d010      	beq.n	802ec4e <cosf+0x62>
 802ec2c:	b9b0      	cbnz	r0, 802ec5c <cosf+0x70>
 802ec2e:	eddd 0a01 	vldr	s1, [sp, #4]
 802ec32:	ed9d 0a00 	vldr	s0, [sp]
 802ec36:	f002 fb2f 	bl	8031298 <__kernel_cosf>
 802ec3a:	e7eb      	b.n	802ec14 <cosf+0x28>
 802ec3c:	eddd 0a01 	vldr	s1, [sp, #4]
 802ec40:	ed9d 0a00 	vldr	s0, [sp]
 802ec44:	f002 fb80 	bl	8031348 <__kernel_sinf>
 802ec48:	eeb1 0a40 	vneg.f32	s0, s0
 802ec4c:	e7e2      	b.n	802ec14 <cosf+0x28>
 802ec4e:	eddd 0a01 	vldr	s1, [sp, #4]
 802ec52:	ed9d 0a00 	vldr	s0, [sp]
 802ec56:	f002 fb1f 	bl	8031298 <__kernel_cosf>
 802ec5a:	e7f5      	b.n	802ec48 <cosf+0x5c>
 802ec5c:	eddd 0a01 	vldr	s1, [sp, #4]
 802ec60:	ed9d 0a00 	vldr	s0, [sp]
 802ec64:	2001      	movs	r0, #1
 802ec66:	f002 fb6f 	bl	8031348 <__kernel_sinf>
 802ec6a:	e7d3      	b.n	802ec14 <cosf+0x28>
 802ec6c:	3f490fd8 	.word	0x3f490fd8
 802ec70:	00000000 	.word	0x00000000

0802ec74 <fabsf>:
 802ec74:	ee10 3a10 	vmov	r3, s0
 802ec78:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802ec7c:	ee00 3a10 	vmov	s0, r3
 802ec80:	4770      	bx	lr
	...

0802ec84 <sinf>:
 802ec84:	ee10 3a10 	vmov	r3, s0
 802ec88:	b507      	push	{r0, r1, r2, lr}
 802ec8a:	4a1f      	ldr	r2, [pc, #124]	@ (802ed08 <sinf+0x84>)
 802ec8c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802ec90:	4293      	cmp	r3, r2
 802ec92:	d807      	bhi.n	802eca4 <sinf+0x20>
 802ec94:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802ed0c <sinf+0x88>
 802ec98:	2000      	movs	r0, #0
 802ec9a:	b003      	add	sp, #12
 802ec9c:	f85d eb04 	ldr.w	lr, [sp], #4
 802eca0:	f002 bb52 	b.w	8031348 <__kernel_sinf>
 802eca4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802eca8:	d304      	bcc.n	802ecb4 <sinf+0x30>
 802ecaa:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ecae:	b003      	add	sp, #12
 802ecb0:	f85d fb04 	ldr.w	pc, [sp], #4
 802ecb4:	4668      	mov	r0, sp
 802ecb6:	f003 fc5f 	bl	8032578 <__ieee754_rem_pio2f>
 802ecba:	f000 0003 	and.w	r0, r0, #3
 802ecbe:	2801      	cmp	r0, #1
 802ecc0:	d00a      	beq.n	802ecd8 <sinf+0x54>
 802ecc2:	2802      	cmp	r0, #2
 802ecc4:	d00f      	beq.n	802ece6 <sinf+0x62>
 802ecc6:	b9c0      	cbnz	r0, 802ecfa <sinf+0x76>
 802ecc8:	eddd 0a01 	vldr	s1, [sp, #4]
 802eccc:	ed9d 0a00 	vldr	s0, [sp]
 802ecd0:	2001      	movs	r0, #1
 802ecd2:	f002 fb39 	bl	8031348 <__kernel_sinf>
 802ecd6:	e7ea      	b.n	802ecae <sinf+0x2a>
 802ecd8:	eddd 0a01 	vldr	s1, [sp, #4]
 802ecdc:	ed9d 0a00 	vldr	s0, [sp]
 802ece0:	f002 fada 	bl	8031298 <__kernel_cosf>
 802ece4:	e7e3      	b.n	802ecae <sinf+0x2a>
 802ece6:	eddd 0a01 	vldr	s1, [sp, #4]
 802ecea:	ed9d 0a00 	vldr	s0, [sp]
 802ecee:	2001      	movs	r0, #1
 802ecf0:	f002 fb2a 	bl	8031348 <__kernel_sinf>
 802ecf4:	eeb1 0a40 	vneg.f32	s0, s0
 802ecf8:	e7d9      	b.n	802ecae <sinf+0x2a>
 802ecfa:	eddd 0a01 	vldr	s1, [sp, #4]
 802ecfe:	ed9d 0a00 	vldr	s0, [sp]
 802ed02:	f002 fac9 	bl	8031298 <__kernel_cosf>
 802ed06:	e7f5      	b.n	802ecf4 <sinf+0x70>
 802ed08:	3f490fd8 	.word	0x3f490fd8
 802ed0c:	00000000 	.word	0x00000000

0802ed10 <tanf>:
 802ed10:	ee10 3a10 	vmov	r3, s0
 802ed14:	b507      	push	{r0, r1, r2, lr}
 802ed16:	4a12      	ldr	r2, [pc, #72]	@ (802ed60 <tanf+0x50>)
 802ed18:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802ed1c:	4293      	cmp	r3, r2
 802ed1e:	d807      	bhi.n	802ed30 <tanf+0x20>
 802ed20:	eddf 0a10 	vldr	s1, [pc, #64]	@ 802ed64 <tanf+0x54>
 802ed24:	2001      	movs	r0, #1
 802ed26:	b003      	add	sp, #12
 802ed28:	f85d eb04 	ldr.w	lr, [sp], #4
 802ed2c:	f002 bb54 	b.w	80313d8 <__kernel_tanf>
 802ed30:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802ed34:	d304      	bcc.n	802ed40 <tanf+0x30>
 802ed36:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ed3a:	b003      	add	sp, #12
 802ed3c:	f85d fb04 	ldr.w	pc, [sp], #4
 802ed40:	4668      	mov	r0, sp
 802ed42:	f003 fc19 	bl	8032578 <__ieee754_rem_pio2f>
 802ed46:	0040      	lsls	r0, r0, #1
 802ed48:	f000 0002 	and.w	r0, r0, #2
 802ed4c:	eddd 0a01 	vldr	s1, [sp, #4]
 802ed50:	ed9d 0a00 	vldr	s0, [sp]
 802ed54:	f1c0 0001 	rsb	r0, r0, #1
 802ed58:	f002 fb3e 	bl	80313d8 <__kernel_tanf>
 802ed5c:	e7ed      	b.n	802ed3a <tanf+0x2a>
 802ed5e:	bf00      	nop
 802ed60:	3f490fda 	.word	0x3f490fda
 802ed64:	00000000 	.word	0x00000000

0802ed68 <tanhf>:
 802ed68:	b538      	push	{r3, r4, r5, lr}
 802ed6a:	ee10 5a10 	vmov	r5, s0
 802ed6e:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 802ed72:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802ed76:	ed2d 8b02 	vpush	{d8}
 802ed7a:	eef0 7a40 	vmov.f32	s15, s0
 802ed7e:	d30f      	bcc.n	802eda0 <tanhf+0x38>
 802ed80:	4b2a      	ldr	r3, [pc, #168]	@ (802ee2c <tanhf+0xc4>)
 802ed82:	edd3 6a00 	vldr	s13, [r3]
 802ed86:	ed93 7a00 	vldr	s14, [r3]
 802ed8a:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 802ed8e:	2d00      	cmp	r5, #0
 802ed90:	bfac      	ite	ge
 802ed92:	ee30 0a07 	vaddge.f32	s0, s0, s14
 802ed96:	ee30 0a47 	vsublt.f32	s0, s0, s14
 802ed9a:	ecbd 8b02 	vpop	{d8}
 802ed9e:	bd38      	pop	{r3, r4, r5, pc}
 802eda0:	4a23      	ldr	r2, [pc, #140]	@ (802ee30 <tanhf+0xc8>)
 802eda2:	4293      	cmp	r3, r2
 802eda4:	d839      	bhi.n	802ee1a <tanhf+0xb2>
 802eda6:	f1b3 5f10 	cmp.w	r3, #603979776	@ 0x24000000
 802edaa:	d207      	bcs.n	802edbc <tanhf+0x54>
 802edac:	4b1f      	ldr	r3, [pc, #124]	@ (802ee2c <tanhf+0xc4>)
 802edae:	ed93 0a00 	vldr	s0, [r3]
 802edb2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802edb6:	ee20 0a27 	vmul.f32	s0, s0, s15
 802edba:	e7ee      	b.n	802ed9a <tanhf+0x32>
 802edbc:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 802edc0:	4c1c      	ldr	r4, [pc, #112]	@ (802ee34 <tanhf+0xcc>)
 802edc2:	d319      	bcc.n	802edf8 <tanhf+0x90>
 802edc4:	f7ff ff56 	bl	802ec74 <fabsf>
 802edc8:	edd4 7a00 	vldr	s15, [r4]
 802edcc:	ee20 0a27 	vmul.f32	s0, s0, s15
 802edd0:	f000 f840 	bl	802ee54 <expm1f>
 802edd4:	4b15      	ldr	r3, [pc, #84]	@ (802ee2c <tanhf+0xc4>)
 802edd6:	edd3 7a00 	vldr	s15, [r3]
 802edda:	ed94 6a00 	vldr	s12, [r4]
 802edde:	ed94 7a00 	vldr	s14, [r4]
 802ede2:	ee37 7a00 	vadd.f32	s14, s14, s0
 802ede6:	eec6 6a07 	vdiv.f32	s13, s12, s14
 802edea:	ee37 0ae6 	vsub.f32	s0, s15, s13
 802edee:	2d00      	cmp	r5, #0
 802edf0:	bfb8      	it	lt
 802edf2:	eeb1 0a40 	vneglt.f32	s0, s0
 802edf6:	e7d0      	b.n	802ed9a <tanhf+0x32>
 802edf8:	ed94 8a00 	vldr	s16, [r4]
 802edfc:	f7ff ff3a 	bl	802ec74 <fabsf>
 802ee00:	ee28 0a40 	vnmul.f32	s0, s16, s0
 802ee04:	f000 f826 	bl	802ee54 <expm1f>
 802ee08:	edd4 7a00 	vldr	s15, [r4]
 802ee0c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802ee10:	eeb1 7a40 	vneg.f32	s14, s0
 802ee14:	ee87 0a27 	vdiv.f32	s0, s14, s15
 802ee18:	e7e9      	b.n	802edee <tanhf+0x86>
 802ee1a:	4b04      	ldr	r3, [pc, #16]	@ (802ee2c <tanhf+0xc4>)
 802ee1c:	ed93 0a00 	vldr	s0, [r3]
 802ee20:	4b05      	ldr	r3, [pc, #20]	@ (802ee38 <tanhf+0xd0>)
 802ee22:	edd3 7a00 	vldr	s15, [r3]
 802ee26:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ee2a:	e7e0      	b.n	802edee <tanhf+0x86>
 802ee2c:	20000a88 	.word	0x20000a88
 802ee30:	41afffff 	.word	0x41afffff
 802ee34:	20000a84 	.word	0x20000a84
 802ee38:	20000a80 	.word	0x20000a80

0802ee3c <finite>:
 802ee3c:	b082      	sub	sp, #8
 802ee3e:	ed8d 0b00 	vstr	d0, [sp]
 802ee42:	9801      	ldr	r0, [sp, #4]
 802ee44:	f040 4000 	orr.w	r0, r0, #2147483648	@ 0x80000000
 802ee48:	f500 1080 	add.w	r0, r0, #1048576	@ 0x100000
 802ee4c:	0fc0      	lsrs	r0, r0, #31
 802ee4e:	b002      	add	sp, #8
 802ee50:	4770      	bx	lr
	...

0802ee54 <expm1f>:
 802ee54:	ee10 3a10 	vmov	r3, s0
 802ee58:	4a83      	ldr	r2, [pc, #524]	@ (802f068 <expm1f+0x214>)
 802ee5a:	f003 4000 	and.w	r0, r3, #2147483648	@ 0x80000000
 802ee5e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802ee62:	4293      	cmp	r3, r2
 802ee64:	d91f      	bls.n	802eea6 <expm1f+0x52>
 802ee66:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802ee6a:	d902      	bls.n	802ee72 <expm1f+0x1e>
 802ee6c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ee70:	4770      	bx	lr
 802ee72:	d106      	bne.n	802ee82 <expm1f+0x2e>
 802ee74:	2800      	cmp	r0, #0
 802ee76:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 802ee7a:	bf18      	it	ne
 802ee7c:	eeb0 0a67 	vmovne.f32	s0, s15
 802ee80:	4770      	bx	lr
 802ee82:	b920      	cbnz	r0, 802ee8e <expm1f+0x3a>
 802ee84:	4a79      	ldr	r2, [pc, #484]	@ (802f06c <expm1f+0x218>)
 802ee86:	4293      	cmp	r3, r2
 802ee88:	d963      	bls.n	802ef52 <expm1f+0xfe>
 802ee8a:	f000 b931 	b.w	802f0f0 <__math_oflowf>
 802ee8e:	eddf 7a78 	vldr	s15, [pc, #480]	@ 802f070 <expm1f+0x21c>
 802ee92:	ee70 7a27 	vadd.f32	s15, s0, s15
 802ee96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802ee9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ee9e:	d551      	bpl.n	802ef44 <expm1f+0xf0>
 802eea0:	eebf 0a00 	vmov.f32	s0, #240	@ 0xbf800000 -1.0
 802eea4:	4770      	bx	lr
 802eea6:	4a73      	ldr	r2, [pc, #460]	@ (802f074 <expm1f+0x220>)
 802eea8:	4293      	cmp	r3, r2
 802eeaa:	d972      	bls.n	802ef92 <expm1f+0x13e>
 802eeac:	4a72      	ldr	r2, [pc, #456]	@ (802f078 <expm1f+0x224>)
 802eeae:	4293      	cmp	r3, r2
 802eeb0:	d868      	bhi.n	802ef84 <expm1f+0x130>
 802eeb2:	ed9f 7a72 	vldr	s14, [pc, #456]	@ 802f07c <expm1f+0x228>
 802eeb6:	2800      	cmp	r0, #0
 802eeb8:	d13d      	bne.n	802ef36 <expm1f+0xe2>
 802eeba:	ee30 7a47 	vsub.f32	s14, s0, s14
 802eebe:	eddf 6a70 	vldr	s13, [pc, #448]	@ 802f080 <expm1f+0x22c>
 802eec2:	2301      	movs	r3, #1
 802eec4:	ee37 0a66 	vsub.f32	s0, s14, s13
 802eec8:	ee77 7a40 	vsub.f32	s15, s14, s0
 802eecc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802eed0:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 802eed4:	ee20 4a25 	vmul.f32	s8, s0, s11
 802eed8:	ed9f 6a6a 	vldr	s12, [pc, #424]	@ 802f084 <expm1f+0x230>
 802eedc:	eddf 6a6a 	vldr	s13, [pc, #424]	@ 802f088 <expm1f+0x234>
 802eee0:	ed9f 5a6a 	vldr	s10, [pc, #424]	@ 802f08c <expm1f+0x238>
 802eee4:	ee20 7a04 	vmul.f32	s14, s0, s8
 802eee8:	eef0 4a08 	vmov.f32	s9, #8	@ 0x40400000  3.0
 802eeec:	eee7 6a06 	vfma.f32	s13, s14, s12
 802eef0:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 802f090 <expm1f+0x23c>
 802eef4:	eea6 6a87 	vfma.f32	s12, s13, s14
 802eef8:	eddf 6a66 	vldr	s13, [pc, #408]	@ 802f094 <expm1f+0x240>
 802eefc:	eee6 6a07 	vfma.f32	s13, s12, s14
 802ef00:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 802ef04:	eea6 5a87 	vfma.f32	s10, s13, s14
 802ef08:	eef0 6a46 	vmov.f32	s13, s12
 802ef0c:	eee5 6a07 	vfma.f32	s13, s10, s14
 802ef10:	eee4 4a66 	vfms.f32	s9, s8, s13
 802ef14:	eeb1 4a08 	vmov.f32	s8, #24	@ 0x40c00000  6.0
 802ef18:	eea0 4a64 	vfms.f32	s8, s0, s9
 802ef1c:	ee36 5ae4 	vsub.f32	s10, s13, s9
 802ef20:	eec5 6a04 	vdiv.f32	s13, s10, s8
 802ef24:	ee66 6a87 	vmul.f32	s13, s13, s14
 802ef28:	2b00      	cmp	r3, #0
 802ef2a:	d140      	bne.n	802efae <expm1f+0x15a>
 802ef2c:	ee90 7a26 	vfnms.f32	s14, s0, s13
 802ef30:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ef34:	4770      	bx	lr
 802ef36:	ee30 7a07 	vadd.f32	s14, s0, s14
 802ef3a:	eddf 6a57 	vldr	s13, [pc, #348]	@ 802f098 <expm1f+0x244>
 802ef3e:	f04f 33ff 	mov.w	r3, #4294967295
 802ef42:	e7bf      	b.n	802eec4 <expm1f+0x70>
 802ef44:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 802f09c <expm1f+0x248>
 802ef48:	ee20 7a07 	vmul.f32	s14, s0, s14
 802ef4c:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 802ef50:	e005      	b.n	802ef5e <expm1f+0x10a>
 802ef52:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 802f09c <expm1f+0x248>
 802ef56:	ee20 7a07 	vmul.f32	s14, s0, s14
 802ef5a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802ef5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ef62:	eeb0 7a40 	vmov.f32	s14, s0
 802ef66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ef6a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 802ef6e:	ee17 3a90 	vmov	r3, s15
 802ef72:	eddf 7a42 	vldr	s15, [pc, #264]	@ 802f07c <expm1f+0x228>
 802ef76:	eea6 7ae7 	vfms.f32	s14, s13, s15
 802ef7a:	eddf 7a41 	vldr	s15, [pc, #260]	@ 802f080 <expm1f+0x22c>
 802ef7e:	ee66 6aa7 	vmul.f32	s13, s13, s15
 802ef82:	e79f      	b.n	802eec4 <expm1f+0x70>
 802ef84:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 802f09c <expm1f+0x248>
 802ef88:	ee20 7a07 	vmul.f32	s14, s0, s14
 802ef8c:	2800      	cmp	r0, #0
 802ef8e:	d0e4      	beq.n	802ef5a <expm1f+0x106>
 802ef90:	e7dc      	b.n	802ef4c <expm1f+0xf8>
 802ef92:	f1b3 5f4c 	cmp.w	r3, #855638016	@ 0x33000000
 802ef96:	d208      	bcs.n	802efaa <expm1f+0x156>
 802ef98:	eddf 7a41 	vldr	s15, [pc, #260]	@ 802f0a0 <expm1f+0x24c>
 802ef9c:	ee70 7a27 	vadd.f32	s15, s0, s15
 802efa0:	ee77 7ae7 	vsub.f32	s15, s15, s15
 802efa4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802efa8:	4770      	bx	lr
 802efaa:	2300      	movs	r3, #0
 802efac:	e790      	b.n	802eed0 <expm1f+0x7c>
 802efae:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802efb2:	1c5a      	adds	r2, r3, #1
 802efb4:	eed6 7a80 	vfnms.f32	s15, s13, s0
 802efb8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802efbc:	d106      	bne.n	802efcc <expm1f+0x178>
 802efbe:	ee70 7a67 	vsub.f32	s15, s0, s15
 802efc2:	eebe 0a00 	vmov.f32	s0, #224	@ 0xbf000000 -0.5
 802efc6:	eea7 0aa5 	vfma.f32	s0, s15, s11
 802efca:	4770      	bx	lr
 802efcc:	2b01      	cmp	r3, #1
 802efce:	d118      	bne.n	802f002 <expm1f+0x1ae>
 802efd0:	eebd 7a00 	vmov.f32	s14, #208	@ 0xbe800000 -0.250
 802efd4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802efd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802efdc:	bf5b      	ittet	pl
 802efde:	ee70 7a67 	vsubpl.f32	s15, s0, s15
 802efe2:	eeb0 7a00 	vmovpl.f32	s14, #0	@ 0x40000000  2.0
 802efe6:	ee70 5a25 	vaddmi.f32	s11, s0, s11
 802efea:	eea7 6a87 	vfmapl.f32	s12, s15, s14
 802efee:	bf43      	ittte	mi
 802eff0:	ee77 7ae5 	vsubmi.f32	s15, s15, s11
 802eff4:	eeb8 0a00 	vmovmi.f32	s0, #128	@ 0xc0000000 -2.0
 802eff8:	ee27 0a80 	vmulmi.f32	s0, s15, s0
 802effc:	eeb0 0a46 	vmovpl.f32	s0, s12
 802f000:	4770      	bx	lr
 802f002:	1c5a      	adds	r2, r3, #1
 802f004:	2a39      	cmp	r2, #57	@ 0x39
 802f006:	ea4f 51c3 	mov.w	r1, r3, lsl #23
 802f00a:	d90b      	bls.n	802f024 <expm1f+0x1d0>
 802f00c:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802f010:	ee76 7a67 	vsub.f32	s15, s12, s15
 802f014:	ee17 3a90 	vmov	r3, s15
 802f018:	4419      	add	r1, r3
 802f01a:	ee07 1a90 	vmov	s15, r1
 802f01e:	ee37 0ac6 	vsub.f32	s0, s15, s12
 802f022:	4770      	bx	lr
 802f024:	2b16      	cmp	r3, #22
 802f026:	dc11      	bgt.n	802f04c <expm1f+0x1f8>
 802f028:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 802f02c:	fa42 f303 	asr.w	r3, r2, r3
 802f030:	f1c3 537e 	rsb	r3, r3, #1065353216	@ 0x3f800000
 802f034:	ee07 3a10 	vmov	s14, r3
 802f038:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802f03c:	ee77 7a67 	vsub.f32	s15, s14, s15
 802f040:	ee17 3a90 	vmov	r3, s15
 802f044:	440b      	add	r3, r1
 802f046:	ee00 3a10 	vmov	s0, r3
 802f04a:	4770      	bx	lr
 802f04c:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 802f050:	05db      	lsls	r3, r3, #23
 802f052:	ee07 3a10 	vmov	s14, r3
 802f056:	ee77 7a87 	vadd.f32	s15, s15, s14
 802f05a:	ee70 7a67 	vsub.f32	s15, s0, s15
 802f05e:	ee77 7a86 	vadd.f32	s15, s15, s12
 802f062:	ee17 3a90 	vmov	r3, s15
 802f066:	e7ed      	b.n	802f044 <expm1f+0x1f0>
 802f068:	4195b843 	.word	0x4195b843
 802f06c:	42b17217 	.word	0x42b17217
 802f070:	0da24260 	.word	0x0da24260
 802f074:	3eb17218 	.word	0x3eb17218
 802f078:	3f851591 	.word	0x3f851591
 802f07c:	3f317180 	.word	0x3f317180
 802f080:	3717f7d1 	.word	0x3717f7d1
 802f084:	b457edbb 	.word	0xb457edbb
 802f088:	36867e54 	.word	0x36867e54
 802f08c:	bd088889 	.word	0xbd088889
 802f090:	b8a670cd 	.word	0xb8a670cd
 802f094:	3ad00d01 	.word	0x3ad00d01
 802f098:	b717f7d1 	.word	0xb717f7d1
 802f09c:	3fb8aa3b 	.word	0x3fb8aa3b
 802f0a0:	7149f2ca 	.word	0x7149f2ca

0802f0a4 <nanf>:
 802f0a4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 802f0ac <nanf+0x8>
 802f0a8:	4770      	bx	lr
 802f0aa:	bf00      	nop
 802f0ac:	7fc00000 	.word	0x7fc00000

0802f0b0 <with_errnof>:
 802f0b0:	b510      	push	{r4, lr}
 802f0b2:	ed2d 8b02 	vpush	{d8}
 802f0b6:	eeb0 8a40 	vmov.f32	s16, s0
 802f0ba:	4604      	mov	r4, r0
 802f0bc:	f7fe fd98 	bl	802dbf0 <__errno>
 802f0c0:	eeb0 0a48 	vmov.f32	s0, s16
 802f0c4:	ecbd 8b02 	vpop	{d8}
 802f0c8:	6004      	str	r4, [r0, #0]
 802f0ca:	bd10      	pop	{r4, pc}

0802f0cc <xflowf>:
 802f0cc:	b130      	cbz	r0, 802f0dc <xflowf+0x10>
 802f0ce:	eef1 7a40 	vneg.f32	s15, s0
 802f0d2:	ee27 0a80 	vmul.f32	s0, s15, s0
 802f0d6:	2022      	movs	r0, #34	@ 0x22
 802f0d8:	f7ff bfea 	b.w	802f0b0 <with_errnof>
 802f0dc:	eef0 7a40 	vmov.f32	s15, s0
 802f0e0:	e7f7      	b.n	802f0d2 <xflowf+0x6>
	...

0802f0e4 <__math_uflowf>:
 802f0e4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 802f0ec <__math_uflowf+0x8>
 802f0e8:	f7ff bff0 	b.w	802f0cc <xflowf>
 802f0ec:	10000000 	.word	0x10000000

0802f0f0 <__math_oflowf>:
 802f0f0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 802f0f8 <__math_oflowf+0x8>
 802f0f4:	f7ff bfea 	b.w	802f0cc <xflowf>
 802f0f8:	70000000 	.word	0x70000000

0802f0fc <__ieee754_sqrt>:
 802f0fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f100:	4a68      	ldr	r2, [pc, #416]	@ (802f2a4 <__ieee754_sqrt+0x1a8>)
 802f102:	ec55 4b10 	vmov	r4, r5, d0
 802f106:	43aa      	bics	r2, r5
 802f108:	462b      	mov	r3, r5
 802f10a:	4621      	mov	r1, r4
 802f10c:	d110      	bne.n	802f130 <__ieee754_sqrt+0x34>
 802f10e:	4622      	mov	r2, r4
 802f110:	4620      	mov	r0, r4
 802f112:	4629      	mov	r1, r5
 802f114:	f7d1 fa1c 	bl	8000550 <__aeabi_dmul>
 802f118:	4602      	mov	r2, r0
 802f11a:	460b      	mov	r3, r1
 802f11c:	4620      	mov	r0, r4
 802f11e:	4629      	mov	r1, r5
 802f120:	f7d1 f860 	bl	80001e4 <__adddf3>
 802f124:	4604      	mov	r4, r0
 802f126:	460d      	mov	r5, r1
 802f128:	ec45 4b10 	vmov	d0, r4, r5
 802f12c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f130:	2d00      	cmp	r5, #0
 802f132:	dc0e      	bgt.n	802f152 <__ieee754_sqrt+0x56>
 802f134:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 802f138:	4322      	orrs	r2, r4
 802f13a:	d0f5      	beq.n	802f128 <__ieee754_sqrt+0x2c>
 802f13c:	b19d      	cbz	r5, 802f166 <__ieee754_sqrt+0x6a>
 802f13e:	4622      	mov	r2, r4
 802f140:	4620      	mov	r0, r4
 802f142:	4629      	mov	r1, r5
 802f144:	f7d1 f84c 	bl	80001e0 <__aeabi_dsub>
 802f148:	4602      	mov	r2, r0
 802f14a:	460b      	mov	r3, r1
 802f14c:	f7d1 fb2a 	bl	80007a4 <__aeabi_ddiv>
 802f150:	e7e8      	b.n	802f124 <__ieee754_sqrt+0x28>
 802f152:	152a      	asrs	r2, r5, #20
 802f154:	d115      	bne.n	802f182 <__ieee754_sqrt+0x86>
 802f156:	2000      	movs	r0, #0
 802f158:	e009      	b.n	802f16e <__ieee754_sqrt+0x72>
 802f15a:	0acb      	lsrs	r3, r1, #11
 802f15c:	3a15      	subs	r2, #21
 802f15e:	0549      	lsls	r1, r1, #21
 802f160:	2b00      	cmp	r3, #0
 802f162:	d0fa      	beq.n	802f15a <__ieee754_sqrt+0x5e>
 802f164:	e7f7      	b.n	802f156 <__ieee754_sqrt+0x5a>
 802f166:	462a      	mov	r2, r5
 802f168:	e7fa      	b.n	802f160 <__ieee754_sqrt+0x64>
 802f16a:	005b      	lsls	r3, r3, #1
 802f16c:	3001      	adds	r0, #1
 802f16e:	02dc      	lsls	r4, r3, #11
 802f170:	d5fb      	bpl.n	802f16a <__ieee754_sqrt+0x6e>
 802f172:	1e44      	subs	r4, r0, #1
 802f174:	1b12      	subs	r2, r2, r4
 802f176:	f1c0 0420 	rsb	r4, r0, #32
 802f17a:	fa21 f404 	lsr.w	r4, r1, r4
 802f17e:	4323      	orrs	r3, r4
 802f180:	4081      	lsls	r1, r0
 802f182:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802f186:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 802f18a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 802f18e:	07d2      	lsls	r2, r2, #31
 802f190:	bf5c      	itt	pl
 802f192:	005b      	lslpl	r3, r3, #1
 802f194:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 802f198:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802f19c:	bf58      	it	pl
 802f19e:	0049      	lslpl	r1, r1, #1
 802f1a0:	2600      	movs	r6, #0
 802f1a2:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 802f1a6:	106d      	asrs	r5, r5, #1
 802f1a8:	0049      	lsls	r1, r1, #1
 802f1aa:	2016      	movs	r0, #22
 802f1ac:	4632      	mov	r2, r6
 802f1ae:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 802f1b2:	1917      	adds	r7, r2, r4
 802f1b4:	429f      	cmp	r7, r3
 802f1b6:	bfde      	ittt	le
 802f1b8:	193a      	addle	r2, r7, r4
 802f1ba:	1bdb      	suble	r3, r3, r7
 802f1bc:	1936      	addle	r6, r6, r4
 802f1be:	0fcf      	lsrs	r7, r1, #31
 802f1c0:	3801      	subs	r0, #1
 802f1c2:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 802f1c6:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802f1ca:	ea4f 0454 	mov.w	r4, r4, lsr #1
 802f1ce:	d1f0      	bne.n	802f1b2 <__ieee754_sqrt+0xb6>
 802f1d0:	4604      	mov	r4, r0
 802f1d2:	2720      	movs	r7, #32
 802f1d4:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 802f1d8:	429a      	cmp	r2, r3
 802f1da:	eb00 0e0c 	add.w	lr, r0, ip
 802f1de:	db02      	blt.n	802f1e6 <__ieee754_sqrt+0xea>
 802f1e0:	d113      	bne.n	802f20a <__ieee754_sqrt+0x10e>
 802f1e2:	458e      	cmp	lr, r1
 802f1e4:	d811      	bhi.n	802f20a <__ieee754_sqrt+0x10e>
 802f1e6:	f1be 0f00 	cmp.w	lr, #0
 802f1ea:	eb0e 000c 	add.w	r0, lr, ip
 802f1ee:	da42      	bge.n	802f276 <__ieee754_sqrt+0x17a>
 802f1f0:	2800      	cmp	r0, #0
 802f1f2:	db40      	blt.n	802f276 <__ieee754_sqrt+0x17a>
 802f1f4:	f102 0801 	add.w	r8, r2, #1
 802f1f8:	1a9b      	subs	r3, r3, r2
 802f1fa:	458e      	cmp	lr, r1
 802f1fc:	bf88      	it	hi
 802f1fe:	f103 33ff 	addhi.w	r3, r3, #4294967295
 802f202:	eba1 010e 	sub.w	r1, r1, lr
 802f206:	4464      	add	r4, ip
 802f208:	4642      	mov	r2, r8
 802f20a:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 802f20e:	3f01      	subs	r7, #1
 802f210:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 802f214:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802f218:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 802f21c:	d1dc      	bne.n	802f1d8 <__ieee754_sqrt+0xdc>
 802f21e:	4319      	orrs	r1, r3
 802f220:	d01b      	beq.n	802f25a <__ieee754_sqrt+0x15e>
 802f222:	f8df a084 	ldr.w	sl, [pc, #132]	@ 802f2a8 <__ieee754_sqrt+0x1ac>
 802f226:	f8df b084 	ldr.w	fp, [pc, #132]	@ 802f2ac <__ieee754_sqrt+0x1b0>
 802f22a:	e9da 0100 	ldrd	r0, r1, [sl]
 802f22e:	e9db 2300 	ldrd	r2, r3, [fp]
 802f232:	f7d0 ffd5 	bl	80001e0 <__aeabi_dsub>
 802f236:	e9da 8900 	ldrd	r8, r9, [sl]
 802f23a:	4602      	mov	r2, r0
 802f23c:	460b      	mov	r3, r1
 802f23e:	4640      	mov	r0, r8
 802f240:	4649      	mov	r1, r9
 802f242:	f7d1 fc01 	bl	8000a48 <__aeabi_dcmple>
 802f246:	b140      	cbz	r0, 802f25a <__ieee754_sqrt+0x15e>
 802f248:	f1b4 3fff 	cmp.w	r4, #4294967295
 802f24c:	e9da 0100 	ldrd	r0, r1, [sl]
 802f250:	e9db 2300 	ldrd	r2, r3, [fp]
 802f254:	d111      	bne.n	802f27a <__ieee754_sqrt+0x17e>
 802f256:	3601      	adds	r6, #1
 802f258:	463c      	mov	r4, r7
 802f25a:	1072      	asrs	r2, r6, #1
 802f25c:	0863      	lsrs	r3, r4, #1
 802f25e:	07f1      	lsls	r1, r6, #31
 802f260:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 802f264:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 802f268:	bf48      	it	mi
 802f26a:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 802f26e:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 802f272:	4618      	mov	r0, r3
 802f274:	e756      	b.n	802f124 <__ieee754_sqrt+0x28>
 802f276:	4690      	mov	r8, r2
 802f278:	e7be      	b.n	802f1f8 <__ieee754_sqrt+0xfc>
 802f27a:	f7d0 ffb3 	bl	80001e4 <__adddf3>
 802f27e:	e9da 8900 	ldrd	r8, r9, [sl]
 802f282:	4602      	mov	r2, r0
 802f284:	460b      	mov	r3, r1
 802f286:	4640      	mov	r0, r8
 802f288:	4649      	mov	r1, r9
 802f28a:	f7d1 fbd3 	bl	8000a34 <__aeabi_dcmplt>
 802f28e:	b120      	cbz	r0, 802f29a <__ieee754_sqrt+0x19e>
 802f290:	1ca0      	adds	r0, r4, #2
 802f292:	bf08      	it	eq
 802f294:	3601      	addeq	r6, #1
 802f296:	3402      	adds	r4, #2
 802f298:	e7df      	b.n	802f25a <__ieee754_sqrt+0x15e>
 802f29a:	1c63      	adds	r3, r4, #1
 802f29c:	f023 0401 	bic.w	r4, r3, #1
 802f2a0:	e7db      	b.n	802f25a <__ieee754_sqrt+0x15e>
 802f2a2:	bf00      	nop
 802f2a4:	7ff00000 	.word	0x7ff00000
 802f2a8:	20000a98 	.word	0x20000a98
 802f2ac:	20000a90 	.word	0x20000a90

0802f2b0 <__ieee754_sqrtf>:
 802f2b0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802f2b4:	4770      	bx	lr
	...

0802f2b8 <ceilf>:
 802f2b8:	ee10 3a10 	vmov	r3, s0
 802f2bc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802f2c0:	3a7f      	subs	r2, #127	@ 0x7f
 802f2c2:	2a16      	cmp	r2, #22
 802f2c4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802f2c8:	dc2a      	bgt.n	802f320 <ceilf+0x68>
 802f2ca:	2a00      	cmp	r2, #0
 802f2cc:	da11      	bge.n	802f2f2 <ceilf+0x3a>
 802f2ce:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802f334 <ceilf+0x7c>
 802f2d2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802f2d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802f2da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802f2de:	dd05      	ble.n	802f2ec <ceilf+0x34>
 802f2e0:	2b00      	cmp	r3, #0
 802f2e2:	db23      	blt.n	802f32c <ceilf+0x74>
 802f2e4:	2900      	cmp	r1, #0
 802f2e6:	bf18      	it	ne
 802f2e8:	f04f 537e 	movne.w	r3, #1065353216	@ 0x3f800000
 802f2ec:	ee00 3a10 	vmov	s0, r3
 802f2f0:	4770      	bx	lr
 802f2f2:	4911      	ldr	r1, [pc, #68]	@ (802f338 <ceilf+0x80>)
 802f2f4:	4111      	asrs	r1, r2
 802f2f6:	420b      	tst	r3, r1
 802f2f8:	d0fa      	beq.n	802f2f0 <ceilf+0x38>
 802f2fa:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802f334 <ceilf+0x7c>
 802f2fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802f302:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802f306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802f30a:	ddef      	ble.n	802f2ec <ceilf+0x34>
 802f30c:	2b00      	cmp	r3, #0
 802f30e:	bfc2      	ittt	gt
 802f310:	f44f 0000 	movgt.w	r0, #8388608	@ 0x800000
 802f314:	fa40 f202 	asrgt.w	r2, r0, r2
 802f318:	189b      	addgt	r3, r3, r2
 802f31a:	ea23 0301 	bic.w	r3, r3, r1
 802f31e:	e7e5      	b.n	802f2ec <ceilf+0x34>
 802f320:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802f324:	d3e4      	bcc.n	802f2f0 <ceilf+0x38>
 802f326:	ee30 0a00 	vadd.f32	s0, s0, s0
 802f32a:	4770      	bx	lr
 802f32c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 802f330:	e7dc      	b.n	802f2ec <ceilf+0x34>
 802f332:	bf00      	nop
 802f334:	7149f2ca 	.word	0x7149f2ca
 802f338:	007fffff 	.word	0x007fffff

0802f33c <floorf>:
 802f33c:	ee10 3a10 	vmov	r3, s0
 802f340:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802f344:	3a7f      	subs	r2, #127	@ 0x7f
 802f346:	2a16      	cmp	r2, #22
 802f348:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802f34c:	dc2b      	bgt.n	802f3a6 <floorf+0x6a>
 802f34e:	2a00      	cmp	r2, #0
 802f350:	da12      	bge.n	802f378 <floorf+0x3c>
 802f352:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802f3b8 <floorf+0x7c>
 802f356:	ee30 0a27 	vadd.f32	s0, s0, s15
 802f35a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802f35e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802f362:	dd06      	ble.n	802f372 <floorf+0x36>
 802f364:	2b00      	cmp	r3, #0
 802f366:	da24      	bge.n	802f3b2 <floorf+0x76>
 802f368:	2900      	cmp	r1, #0
 802f36a:	4b14      	ldr	r3, [pc, #80]	@ (802f3bc <floorf+0x80>)
 802f36c:	bf08      	it	eq
 802f36e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802f372:	ee00 3a10 	vmov	s0, r3
 802f376:	4770      	bx	lr
 802f378:	4911      	ldr	r1, [pc, #68]	@ (802f3c0 <floorf+0x84>)
 802f37a:	4111      	asrs	r1, r2
 802f37c:	420b      	tst	r3, r1
 802f37e:	d0fa      	beq.n	802f376 <floorf+0x3a>
 802f380:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802f3b8 <floorf+0x7c>
 802f384:	ee30 0a27 	vadd.f32	s0, s0, s15
 802f388:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802f38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802f390:	ddef      	ble.n	802f372 <floorf+0x36>
 802f392:	2b00      	cmp	r3, #0
 802f394:	bfbe      	ittt	lt
 802f396:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802f39a:	fa40 f202 	asrlt.w	r2, r0, r2
 802f39e:	189b      	addlt	r3, r3, r2
 802f3a0:	ea23 0301 	bic.w	r3, r3, r1
 802f3a4:	e7e5      	b.n	802f372 <floorf+0x36>
 802f3a6:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802f3aa:	d3e4      	bcc.n	802f376 <floorf+0x3a>
 802f3ac:	ee30 0a00 	vadd.f32	s0, s0, s0
 802f3b0:	4770      	bx	lr
 802f3b2:	2300      	movs	r3, #0
 802f3b4:	e7dd      	b.n	802f372 <floorf+0x36>
 802f3b6:	bf00      	nop
 802f3b8:	7149f2ca 	.word	0x7149f2ca
 802f3bc:	bf800000 	.word	0xbf800000
 802f3c0:	007fffff 	.word	0x007fffff
 802f3c4:	00000000 	.word	0x00000000

0802f3c8 <__kernel_cos>:
 802f3c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f3cc:	ec57 6b10 	vmov	r6, r7, d0
 802f3d0:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 802f3d4:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 802f3d8:	ed8d 1b00 	vstr	d1, [sp]
 802f3dc:	d206      	bcs.n	802f3ec <__kernel_cos+0x24>
 802f3de:	4630      	mov	r0, r6
 802f3e0:	4639      	mov	r1, r7
 802f3e2:	f7d1 fb65 	bl	8000ab0 <__aeabi_d2iz>
 802f3e6:	2800      	cmp	r0, #0
 802f3e8:	f000 8088 	beq.w	802f4fc <__kernel_cos+0x134>
 802f3ec:	4632      	mov	r2, r6
 802f3ee:	463b      	mov	r3, r7
 802f3f0:	4630      	mov	r0, r6
 802f3f2:	4639      	mov	r1, r7
 802f3f4:	f7d1 f8ac 	bl	8000550 <__aeabi_dmul>
 802f3f8:	4b51      	ldr	r3, [pc, #324]	@ (802f540 <__kernel_cos+0x178>)
 802f3fa:	2200      	movs	r2, #0
 802f3fc:	4604      	mov	r4, r0
 802f3fe:	460d      	mov	r5, r1
 802f400:	f7d1 f8a6 	bl	8000550 <__aeabi_dmul>
 802f404:	a340      	add	r3, pc, #256	@ (adr r3, 802f508 <__kernel_cos+0x140>)
 802f406:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f40a:	4682      	mov	sl, r0
 802f40c:	468b      	mov	fp, r1
 802f40e:	4620      	mov	r0, r4
 802f410:	4629      	mov	r1, r5
 802f412:	f7d1 f89d 	bl	8000550 <__aeabi_dmul>
 802f416:	a33e      	add	r3, pc, #248	@ (adr r3, 802f510 <__kernel_cos+0x148>)
 802f418:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f41c:	f7d0 fee2 	bl	80001e4 <__adddf3>
 802f420:	4622      	mov	r2, r4
 802f422:	462b      	mov	r3, r5
 802f424:	f7d1 f894 	bl	8000550 <__aeabi_dmul>
 802f428:	a33b      	add	r3, pc, #236	@ (adr r3, 802f518 <__kernel_cos+0x150>)
 802f42a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f42e:	f7d0 fed7 	bl	80001e0 <__aeabi_dsub>
 802f432:	4622      	mov	r2, r4
 802f434:	462b      	mov	r3, r5
 802f436:	f7d1 f88b 	bl	8000550 <__aeabi_dmul>
 802f43a:	a339      	add	r3, pc, #228	@ (adr r3, 802f520 <__kernel_cos+0x158>)
 802f43c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f440:	f7d0 fed0 	bl	80001e4 <__adddf3>
 802f444:	4622      	mov	r2, r4
 802f446:	462b      	mov	r3, r5
 802f448:	f7d1 f882 	bl	8000550 <__aeabi_dmul>
 802f44c:	a336      	add	r3, pc, #216	@ (adr r3, 802f528 <__kernel_cos+0x160>)
 802f44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f452:	f7d0 fec5 	bl	80001e0 <__aeabi_dsub>
 802f456:	4622      	mov	r2, r4
 802f458:	462b      	mov	r3, r5
 802f45a:	f7d1 f879 	bl	8000550 <__aeabi_dmul>
 802f45e:	a334      	add	r3, pc, #208	@ (adr r3, 802f530 <__kernel_cos+0x168>)
 802f460:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f464:	f7d0 febe 	bl	80001e4 <__adddf3>
 802f468:	4622      	mov	r2, r4
 802f46a:	462b      	mov	r3, r5
 802f46c:	f7d1 f870 	bl	8000550 <__aeabi_dmul>
 802f470:	4622      	mov	r2, r4
 802f472:	462b      	mov	r3, r5
 802f474:	f7d1 f86c 	bl	8000550 <__aeabi_dmul>
 802f478:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f47c:	4604      	mov	r4, r0
 802f47e:	460d      	mov	r5, r1
 802f480:	4630      	mov	r0, r6
 802f482:	4639      	mov	r1, r7
 802f484:	f7d1 f864 	bl	8000550 <__aeabi_dmul>
 802f488:	460b      	mov	r3, r1
 802f48a:	4602      	mov	r2, r0
 802f48c:	4629      	mov	r1, r5
 802f48e:	4620      	mov	r0, r4
 802f490:	f7d0 fea6 	bl	80001e0 <__aeabi_dsub>
 802f494:	4b2b      	ldr	r3, [pc, #172]	@ (802f544 <__kernel_cos+0x17c>)
 802f496:	4598      	cmp	r8, r3
 802f498:	4606      	mov	r6, r0
 802f49a:	460f      	mov	r7, r1
 802f49c:	d810      	bhi.n	802f4c0 <__kernel_cos+0xf8>
 802f49e:	4602      	mov	r2, r0
 802f4a0:	460b      	mov	r3, r1
 802f4a2:	4650      	mov	r0, sl
 802f4a4:	4659      	mov	r1, fp
 802f4a6:	f7d0 fe9b 	bl	80001e0 <__aeabi_dsub>
 802f4aa:	460b      	mov	r3, r1
 802f4ac:	4926      	ldr	r1, [pc, #152]	@ (802f548 <__kernel_cos+0x180>)
 802f4ae:	4602      	mov	r2, r0
 802f4b0:	2000      	movs	r0, #0
 802f4b2:	f7d0 fe95 	bl	80001e0 <__aeabi_dsub>
 802f4b6:	ec41 0b10 	vmov	d0, r0, r1
 802f4ba:	b003      	add	sp, #12
 802f4bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f4c0:	4b22      	ldr	r3, [pc, #136]	@ (802f54c <__kernel_cos+0x184>)
 802f4c2:	4921      	ldr	r1, [pc, #132]	@ (802f548 <__kernel_cos+0x180>)
 802f4c4:	4598      	cmp	r8, r3
 802f4c6:	bf8c      	ite	hi
 802f4c8:	4d21      	ldrhi	r5, [pc, #132]	@ (802f550 <__kernel_cos+0x188>)
 802f4ca:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 802f4ce:	2400      	movs	r4, #0
 802f4d0:	4622      	mov	r2, r4
 802f4d2:	462b      	mov	r3, r5
 802f4d4:	2000      	movs	r0, #0
 802f4d6:	f7d0 fe83 	bl	80001e0 <__aeabi_dsub>
 802f4da:	4622      	mov	r2, r4
 802f4dc:	4680      	mov	r8, r0
 802f4de:	4689      	mov	r9, r1
 802f4e0:	462b      	mov	r3, r5
 802f4e2:	4650      	mov	r0, sl
 802f4e4:	4659      	mov	r1, fp
 802f4e6:	f7d0 fe7b 	bl	80001e0 <__aeabi_dsub>
 802f4ea:	4632      	mov	r2, r6
 802f4ec:	463b      	mov	r3, r7
 802f4ee:	f7d0 fe77 	bl	80001e0 <__aeabi_dsub>
 802f4f2:	4602      	mov	r2, r0
 802f4f4:	460b      	mov	r3, r1
 802f4f6:	4640      	mov	r0, r8
 802f4f8:	4649      	mov	r1, r9
 802f4fa:	e7da      	b.n	802f4b2 <__kernel_cos+0xea>
 802f4fc:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 802f538 <__kernel_cos+0x170>
 802f500:	e7db      	b.n	802f4ba <__kernel_cos+0xf2>
 802f502:	bf00      	nop
 802f504:	f3af 8000 	nop.w
 802f508:	be8838d4 	.word	0xbe8838d4
 802f50c:	bda8fae9 	.word	0xbda8fae9
 802f510:	bdb4b1c4 	.word	0xbdb4b1c4
 802f514:	3e21ee9e 	.word	0x3e21ee9e
 802f518:	809c52ad 	.word	0x809c52ad
 802f51c:	3e927e4f 	.word	0x3e927e4f
 802f520:	19cb1590 	.word	0x19cb1590
 802f524:	3efa01a0 	.word	0x3efa01a0
 802f528:	16c15177 	.word	0x16c15177
 802f52c:	3f56c16c 	.word	0x3f56c16c
 802f530:	5555554c 	.word	0x5555554c
 802f534:	3fa55555 	.word	0x3fa55555
 802f538:	00000000 	.word	0x00000000
 802f53c:	3ff00000 	.word	0x3ff00000
 802f540:	3fe00000 	.word	0x3fe00000
 802f544:	3fd33332 	.word	0x3fd33332
 802f548:	3ff00000 	.word	0x3ff00000
 802f54c:	3fe90000 	.word	0x3fe90000
 802f550:	3fd20000 	.word	0x3fd20000
 802f554:	00000000 	.word	0x00000000

0802f558 <__kernel_sin>:
 802f558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f55c:	ec55 4b10 	vmov	r4, r5, d0
 802f560:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 802f564:	b085      	sub	sp, #20
 802f566:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 802f56a:	ed8d 1b02 	vstr	d1, [sp, #8]
 802f56e:	4680      	mov	r8, r0
 802f570:	d205      	bcs.n	802f57e <__kernel_sin+0x26>
 802f572:	4620      	mov	r0, r4
 802f574:	4629      	mov	r1, r5
 802f576:	f7d1 fa9b 	bl	8000ab0 <__aeabi_d2iz>
 802f57a:	2800      	cmp	r0, #0
 802f57c:	d052      	beq.n	802f624 <__kernel_sin+0xcc>
 802f57e:	4622      	mov	r2, r4
 802f580:	462b      	mov	r3, r5
 802f582:	4620      	mov	r0, r4
 802f584:	4629      	mov	r1, r5
 802f586:	f7d0 ffe3 	bl	8000550 <__aeabi_dmul>
 802f58a:	4682      	mov	sl, r0
 802f58c:	468b      	mov	fp, r1
 802f58e:	4602      	mov	r2, r0
 802f590:	460b      	mov	r3, r1
 802f592:	4620      	mov	r0, r4
 802f594:	4629      	mov	r1, r5
 802f596:	f7d0 ffdb 	bl	8000550 <__aeabi_dmul>
 802f59a:	a342      	add	r3, pc, #264	@ (adr r3, 802f6a4 <__kernel_sin+0x14c>)
 802f59c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f5a0:	e9cd 0100 	strd	r0, r1, [sp]
 802f5a4:	4650      	mov	r0, sl
 802f5a6:	4659      	mov	r1, fp
 802f5a8:	f7d0 ffd2 	bl	8000550 <__aeabi_dmul>
 802f5ac:	a33f      	add	r3, pc, #252	@ (adr r3, 802f6ac <__kernel_sin+0x154>)
 802f5ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f5b2:	f7d0 fe15 	bl	80001e0 <__aeabi_dsub>
 802f5b6:	4652      	mov	r2, sl
 802f5b8:	465b      	mov	r3, fp
 802f5ba:	f7d0 ffc9 	bl	8000550 <__aeabi_dmul>
 802f5be:	a33d      	add	r3, pc, #244	@ (adr r3, 802f6b4 <__kernel_sin+0x15c>)
 802f5c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f5c4:	f7d0 fe0e 	bl	80001e4 <__adddf3>
 802f5c8:	4652      	mov	r2, sl
 802f5ca:	465b      	mov	r3, fp
 802f5cc:	f7d0 ffc0 	bl	8000550 <__aeabi_dmul>
 802f5d0:	a33a      	add	r3, pc, #232	@ (adr r3, 802f6bc <__kernel_sin+0x164>)
 802f5d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f5d6:	f7d0 fe03 	bl	80001e0 <__aeabi_dsub>
 802f5da:	4652      	mov	r2, sl
 802f5dc:	465b      	mov	r3, fp
 802f5de:	f7d0 ffb7 	bl	8000550 <__aeabi_dmul>
 802f5e2:	a338      	add	r3, pc, #224	@ (adr r3, 802f6c4 <__kernel_sin+0x16c>)
 802f5e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f5e8:	f7d0 fdfc 	bl	80001e4 <__adddf3>
 802f5ec:	4606      	mov	r6, r0
 802f5ee:	460f      	mov	r7, r1
 802f5f0:	f1b8 0f00 	cmp.w	r8, #0
 802f5f4:	d11b      	bne.n	802f62e <__kernel_sin+0xd6>
 802f5f6:	4602      	mov	r2, r0
 802f5f8:	460b      	mov	r3, r1
 802f5fa:	4650      	mov	r0, sl
 802f5fc:	4659      	mov	r1, fp
 802f5fe:	f7d0 ffa7 	bl	8000550 <__aeabi_dmul>
 802f602:	a325      	add	r3, pc, #148	@ (adr r3, 802f698 <__kernel_sin+0x140>)
 802f604:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f608:	f7d0 fdea 	bl	80001e0 <__aeabi_dsub>
 802f60c:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f610:	f7d0 ff9e 	bl	8000550 <__aeabi_dmul>
 802f614:	4602      	mov	r2, r0
 802f616:	460b      	mov	r3, r1
 802f618:	4620      	mov	r0, r4
 802f61a:	4629      	mov	r1, r5
 802f61c:	f7d0 fde2 	bl	80001e4 <__adddf3>
 802f620:	4604      	mov	r4, r0
 802f622:	460d      	mov	r5, r1
 802f624:	ec45 4b10 	vmov	d0, r4, r5
 802f628:	b005      	add	sp, #20
 802f62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f62e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802f632:	4b1b      	ldr	r3, [pc, #108]	@ (802f6a0 <__kernel_sin+0x148>)
 802f634:	2200      	movs	r2, #0
 802f636:	f7d0 ff8b 	bl	8000550 <__aeabi_dmul>
 802f63a:	4632      	mov	r2, r6
 802f63c:	4680      	mov	r8, r0
 802f63e:	4689      	mov	r9, r1
 802f640:	463b      	mov	r3, r7
 802f642:	e9dd 0100 	ldrd	r0, r1, [sp]
 802f646:	f7d0 ff83 	bl	8000550 <__aeabi_dmul>
 802f64a:	4602      	mov	r2, r0
 802f64c:	460b      	mov	r3, r1
 802f64e:	4640      	mov	r0, r8
 802f650:	4649      	mov	r1, r9
 802f652:	f7d0 fdc5 	bl	80001e0 <__aeabi_dsub>
 802f656:	4652      	mov	r2, sl
 802f658:	465b      	mov	r3, fp
 802f65a:	f7d0 ff79 	bl	8000550 <__aeabi_dmul>
 802f65e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802f662:	f7d0 fdbd 	bl	80001e0 <__aeabi_dsub>
 802f666:	a30c      	add	r3, pc, #48	@ (adr r3, 802f698 <__kernel_sin+0x140>)
 802f668:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f66c:	4606      	mov	r6, r0
 802f66e:	460f      	mov	r7, r1
 802f670:	e9dd 0100 	ldrd	r0, r1, [sp]
 802f674:	f7d0 ff6c 	bl	8000550 <__aeabi_dmul>
 802f678:	4602      	mov	r2, r0
 802f67a:	460b      	mov	r3, r1
 802f67c:	4630      	mov	r0, r6
 802f67e:	4639      	mov	r1, r7
 802f680:	f7d0 fdb0 	bl	80001e4 <__adddf3>
 802f684:	4602      	mov	r2, r0
 802f686:	460b      	mov	r3, r1
 802f688:	4620      	mov	r0, r4
 802f68a:	4629      	mov	r1, r5
 802f68c:	f7d0 fda8 	bl	80001e0 <__aeabi_dsub>
 802f690:	e7c6      	b.n	802f620 <__kernel_sin+0xc8>
 802f692:	bf00      	nop
 802f694:	f3af 8000 	nop.w
 802f698:	55555549 	.word	0x55555549
 802f69c:	3fc55555 	.word	0x3fc55555
 802f6a0:	3fe00000 	.word	0x3fe00000
 802f6a4:	5acfd57c 	.word	0x5acfd57c
 802f6a8:	3de5d93a 	.word	0x3de5d93a
 802f6ac:	8a2b9ceb 	.word	0x8a2b9ceb
 802f6b0:	3e5ae5e6 	.word	0x3e5ae5e6
 802f6b4:	57b1fe7d 	.word	0x57b1fe7d
 802f6b8:	3ec71de3 	.word	0x3ec71de3
 802f6bc:	19c161d5 	.word	0x19c161d5
 802f6c0:	3f2a01a0 	.word	0x3f2a01a0
 802f6c4:	1110f8a6 	.word	0x1110f8a6
 802f6c8:	3f811111 	.word	0x3f811111
 802f6cc:	00000000 	.word	0x00000000

0802f6d0 <__kernel_tan>:
 802f6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f6d4:	ec5b ab10 	vmov	sl, fp, d0
 802f6d8:	4bdb      	ldr	r3, [pc, #876]	@ (802fa48 <__kernel_tan+0x378>)
 802f6da:	b089      	sub	sp, #36	@ 0x24
 802f6dc:	f02b 4700 	bic.w	r7, fp, #2147483648	@ 0x80000000
 802f6e0:	429f      	cmp	r7, r3
 802f6e2:	ec59 8b11 	vmov	r8, r9, d1
 802f6e6:	4606      	mov	r6, r0
 802f6e8:	f8cd b008 	str.w	fp, [sp, #8]
 802f6ec:	d85d      	bhi.n	802f7aa <__kernel_tan+0xda>
 802f6ee:	4650      	mov	r0, sl
 802f6f0:	4659      	mov	r1, fp
 802f6f2:	f7d1 f9dd 	bl	8000ab0 <__aeabi_d2iz>
 802f6f6:	4605      	mov	r5, r0
 802f6f8:	2800      	cmp	r0, #0
 802f6fa:	d17c      	bne.n	802f7f6 <__kernel_tan+0x126>
 802f6fc:	1c73      	adds	r3, r6, #1
 802f6fe:	4652      	mov	r2, sl
 802f700:	4313      	orrs	r3, r2
 802f702:	433b      	orrs	r3, r7
 802f704:	d110      	bne.n	802f728 <__kernel_tan+0x58>
 802f706:	ec4b ab10 	vmov	d0, sl, fp
 802f70a:	f001 fdbd 	bl	8031288 <fabs>
 802f70e:	49cf      	ldr	r1, [pc, #828]	@ (802fa4c <__kernel_tan+0x37c>)
 802f710:	ec53 2b10 	vmov	r2, r3, d0
 802f714:	2000      	movs	r0, #0
 802f716:	f7d1 f845 	bl	80007a4 <__aeabi_ddiv>
 802f71a:	4682      	mov	sl, r0
 802f71c:	468b      	mov	fp, r1
 802f71e:	ec4b ab10 	vmov	d0, sl, fp
 802f722:	b009      	add	sp, #36	@ 0x24
 802f724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f728:	2e01      	cmp	r6, #1
 802f72a:	d0f8      	beq.n	802f71e <__kernel_tan+0x4e>
 802f72c:	4642      	mov	r2, r8
 802f72e:	464b      	mov	r3, r9
 802f730:	4650      	mov	r0, sl
 802f732:	4659      	mov	r1, fp
 802f734:	f7d0 fd56 	bl	80001e4 <__adddf3>
 802f738:	4602      	mov	r2, r0
 802f73a:	460b      	mov	r3, r1
 802f73c:	460f      	mov	r7, r1
 802f73e:	2000      	movs	r0, #0
 802f740:	49c3      	ldr	r1, [pc, #780]	@ (802fa50 <__kernel_tan+0x380>)
 802f742:	f7d1 f82f 	bl	80007a4 <__aeabi_ddiv>
 802f746:	e9cd 0100 	strd	r0, r1, [sp]
 802f74a:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f74e:	462e      	mov	r6, r5
 802f750:	4652      	mov	r2, sl
 802f752:	462c      	mov	r4, r5
 802f754:	4630      	mov	r0, r6
 802f756:	461d      	mov	r5, r3
 802f758:	4639      	mov	r1, r7
 802f75a:	465b      	mov	r3, fp
 802f75c:	f7d0 fd40 	bl	80001e0 <__aeabi_dsub>
 802f760:	4602      	mov	r2, r0
 802f762:	460b      	mov	r3, r1
 802f764:	4640      	mov	r0, r8
 802f766:	4649      	mov	r1, r9
 802f768:	f7d0 fd3a 	bl	80001e0 <__aeabi_dsub>
 802f76c:	4632      	mov	r2, r6
 802f76e:	462b      	mov	r3, r5
 802f770:	f7d0 feee 	bl	8000550 <__aeabi_dmul>
 802f774:	4632      	mov	r2, r6
 802f776:	4682      	mov	sl, r0
 802f778:	468b      	mov	fp, r1
 802f77a:	462b      	mov	r3, r5
 802f77c:	4630      	mov	r0, r6
 802f77e:	4639      	mov	r1, r7
 802f780:	f7d0 fee6 	bl	8000550 <__aeabi_dmul>
 802f784:	4bb1      	ldr	r3, [pc, #708]	@ (802fa4c <__kernel_tan+0x37c>)
 802f786:	2200      	movs	r2, #0
 802f788:	f7d0 fd2c 	bl	80001e4 <__adddf3>
 802f78c:	4602      	mov	r2, r0
 802f78e:	460b      	mov	r3, r1
 802f790:	4650      	mov	r0, sl
 802f792:	4659      	mov	r1, fp
 802f794:	f7d0 fd26 	bl	80001e4 <__adddf3>
 802f798:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f79c:	f7d0 fed8 	bl	8000550 <__aeabi_dmul>
 802f7a0:	4622      	mov	r2, r4
 802f7a2:	462b      	mov	r3, r5
 802f7a4:	f7d0 fd1e 	bl	80001e4 <__adddf3>
 802f7a8:	e7b7      	b.n	802f71a <__kernel_tan+0x4a>
 802f7aa:	4baa      	ldr	r3, [pc, #680]	@ (802fa54 <__kernel_tan+0x384>)
 802f7ac:	429f      	cmp	r7, r3
 802f7ae:	d922      	bls.n	802f7f6 <__kernel_tan+0x126>
 802f7b0:	9b02      	ldr	r3, [sp, #8]
 802f7b2:	2b00      	cmp	r3, #0
 802f7b4:	da05      	bge.n	802f7c2 <__kernel_tan+0xf2>
 802f7b6:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 802f7ba:	469b      	mov	fp, r3
 802f7bc:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 802f7c0:	4699      	mov	r9, r3
 802f7c2:	4652      	mov	r2, sl
 802f7c4:	465b      	mov	r3, fp
 802f7c6:	a182      	add	r1, pc, #520	@ (adr r1, 802f9d0 <__kernel_tan+0x300>)
 802f7c8:	e9d1 0100 	ldrd	r0, r1, [r1]
 802f7cc:	f7d0 fd08 	bl	80001e0 <__aeabi_dsub>
 802f7d0:	4642      	mov	r2, r8
 802f7d2:	464b      	mov	r3, r9
 802f7d4:	4604      	mov	r4, r0
 802f7d6:	460d      	mov	r5, r1
 802f7d8:	a17f      	add	r1, pc, #508	@ (adr r1, 802f9d8 <__kernel_tan+0x308>)
 802f7da:	e9d1 0100 	ldrd	r0, r1, [r1]
 802f7de:	f7d0 fcff 	bl	80001e0 <__aeabi_dsub>
 802f7e2:	4622      	mov	r2, r4
 802f7e4:	462b      	mov	r3, r5
 802f7e6:	f7d0 fcfd 	bl	80001e4 <__adddf3>
 802f7ea:	f04f 0800 	mov.w	r8, #0
 802f7ee:	4682      	mov	sl, r0
 802f7f0:	468b      	mov	fp, r1
 802f7f2:	f04f 0900 	mov.w	r9, #0
 802f7f6:	4652      	mov	r2, sl
 802f7f8:	465b      	mov	r3, fp
 802f7fa:	4650      	mov	r0, sl
 802f7fc:	4659      	mov	r1, fp
 802f7fe:	f7d0 fea7 	bl	8000550 <__aeabi_dmul>
 802f802:	4602      	mov	r2, r0
 802f804:	460b      	mov	r3, r1
 802f806:	e9cd 2300 	strd	r2, r3, [sp]
 802f80a:	f7d0 fea1 	bl	8000550 <__aeabi_dmul>
 802f80e:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f812:	4604      	mov	r4, r0
 802f814:	460d      	mov	r5, r1
 802f816:	4650      	mov	r0, sl
 802f818:	4659      	mov	r1, fp
 802f81a:	f7d0 fe99 	bl	8000550 <__aeabi_dmul>
 802f81e:	a370      	add	r3, pc, #448	@ (adr r3, 802f9e0 <__kernel_tan+0x310>)
 802f820:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f824:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802f828:	4620      	mov	r0, r4
 802f82a:	4629      	mov	r1, r5
 802f82c:	f7d0 fe90 	bl	8000550 <__aeabi_dmul>
 802f830:	a36d      	add	r3, pc, #436	@ (adr r3, 802f9e8 <__kernel_tan+0x318>)
 802f832:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f836:	f7d0 fcd5 	bl	80001e4 <__adddf3>
 802f83a:	4622      	mov	r2, r4
 802f83c:	462b      	mov	r3, r5
 802f83e:	f7d0 fe87 	bl	8000550 <__aeabi_dmul>
 802f842:	a36b      	add	r3, pc, #428	@ (adr r3, 802f9f0 <__kernel_tan+0x320>)
 802f844:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f848:	f7d0 fccc 	bl	80001e4 <__adddf3>
 802f84c:	4622      	mov	r2, r4
 802f84e:	462b      	mov	r3, r5
 802f850:	f7d0 fe7e 	bl	8000550 <__aeabi_dmul>
 802f854:	a368      	add	r3, pc, #416	@ (adr r3, 802f9f8 <__kernel_tan+0x328>)
 802f856:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f85a:	f7d0 fcc3 	bl	80001e4 <__adddf3>
 802f85e:	4622      	mov	r2, r4
 802f860:	462b      	mov	r3, r5
 802f862:	f7d0 fe75 	bl	8000550 <__aeabi_dmul>
 802f866:	a366      	add	r3, pc, #408	@ (adr r3, 802fa00 <__kernel_tan+0x330>)
 802f868:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f86c:	f7d0 fcba 	bl	80001e4 <__adddf3>
 802f870:	4622      	mov	r2, r4
 802f872:	462b      	mov	r3, r5
 802f874:	f7d0 fe6c 	bl	8000550 <__aeabi_dmul>
 802f878:	a363      	add	r3, pc, #396	@ (adr r3, 802fa08 <__kernel_tan+0x338>)
 802f87a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f87e:	f7d0 fcb1 	bl	80001e4 <__adddf3>
 802f882:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f886:	f7d0 fe63 	bl	8000550 <__aeabi_dmul>
 802f88a:	a361      	add	r3, pc, #388	@ (adr r3, 802fa10 <__kernel_tan+0x340>)
 802f88c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f890:	e9cd 0106 	strd	r0, r1, [sp, #24]
 802f894:	4620      	mov	r0, r4
 802f896:	4629      	mov	r1, r5
 802f898:	f7d0 fe5a 	bl	8000550 <__aeabi_dmul>
 802f89c:	a35e      	add	r3, pc, #376	@ (adr r3, 802fa18 <__kernel_tan+0x348>)
 802f89e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f8a2:	f7d0 fc9f 	bl	80001e4 <__adddf3>
 802f8a6:	4622      	mov	r2, r4
 802f8a8:	462b      	mov	r3, r5
 802f8aa:	f7d0 fe51 	bl	8000550 <__aeabi_dmul>
 802f8ae:	a35c      	add	r3, pc, #368	@ (adr r3, 802fa20 <__kernel_tan+0x350>)
 802f8b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f8b4:	f7d0 fc96 	bl	80001e4 <__adddf3>
 802f8b8:	4622      	mov	r2, r4
 802f8ba:	462b      	mov	r3, r5
 802f8bc:	f7d0 fe48 	bl	8000550 <__aeabi_dmul>
 802f8c0:	a359      	add	r3, pc, #356	@ (adr r3, 802fa28 <__kernel_tan+0x358>)
 802f8c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f8c6:	f7d0 fc8d 	bl	80001e4 <__adddf3>
 802f8ca:	4622      	mov	r2, r4
 802f8cc:	462b      	mov	r3, r5
 802f8ce:	f7d0 fe3f 	bl	8000550 <__aeabi_dmul>
 802f8d2:	a357      	add	r3, pc, #348	@ (adr r3, 802fa30 <__kernel_tan+0x360>)
 802f8d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f8d8:	f7d0 fc84 	bl	80001e4 <__adddf3>
 802f8dc:	4622      	mov	r2, r4
 802f8de:	462b      	mov	r3, r5
 802f8e0:	f7d0 fe36 	bl	8000550 <__aeabi_dmul>
 802f8e4:	a354      	add	r3, pc, #336	@ (adr r3, 802fa38 <__kernel_tan+0x368>)
 802f8e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f8ea:	f7d0 fc7b 	bl	80001e4 <__adddf3>
 802f8ee:	4602      	mov	r2, r0
 802f8f0:	460b      	mov	r3, r1
 802f8f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802f8f6:	f7d0 fc75 	bl	80001e4 <__adddf3>
 802f8fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802f8fe:	f7d0 fe27 	bl	8000550 <__aeabi_dmul>
 802f902:	4642      	mov	r2, r8
 802f904:	464b      	mov	r3, r9
 802f906:	f7d0 fc6d 	bl	80001e4 <__adddf3>
 802f90a:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f90e:	f7d0 fe1f 	bl	8000550 <__aeabi_dmul>
 802f912:	4642      	mov	r2, r8
 802f914:	464b      	mov	r3, r9
 802f916:	f7d0 fc65 	bl	80001e4 <__adddf3>
 802f91a:	a349      	add	r3, pc, #292	@ (adr r3, 802fa40 <__kernel_tan+0x370>)
 802f91c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802f920:	4604      	mov	r4, r0
 802f922:	460d      	mov	r5, r1
 802f924:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 802f928:	f7d0 fe12 	bl	8000550 <__aeabi_dmul>
 802f92c:	4622      	mov	r2, r4
 802f92e:	462b      	mov	r3, r5
 802f930:	f7d0 fc58 	bl	80001e4 <__adddf3>
 802f934:	e9cd 0100 	strd	r0, r1, [sp]
 802f938:	460b      	mov	r3, r1
 802f93a:	4602      	mov	r2, r0
 802f93c:	4659      	mov	r1, fp
 802f93e:	4650      	mov	r0, sl
 802f940:	f7d0 fc50 	bl	80001e4 <__adddf3>
 802f944:	4b43      	ldr	r3, [pc, #268]	@ (802fa54 <__kernel_tan+0x384>)
 802f946:	429f      	cmp	r7, r3
 802f948:	4604      	mov	r4, r0
 802f94a:	460d      	mov	r5, r1
 802f94c:	f240 8084 	bls.w	802fa58 <__kernel_tan+0x388>
 802f950:	4630      	mov	r0, r6
 802f952:	f7d0 fd93 	bl	800047c <__aeabi_i2d>
 802f956:	4622      	mov	r2, r4
 802f958:	4680      	mov	r8, r0
 802f95a:	4689      	mov	r9, r1
 802f95c:	462b      	mov	r3, r5
 802f95e:	4620      	mov	r0, r4
 802f960:	4629      	mov	r1, r5
 802f962:	f7d0 fdf5 	bl	8000550 <__aeabi_dmul>
 802f966:	4642      	mov	r2, r8
 802f968:	4606      	mov	r6, r0
 802f96a:	460f      	mov	r7, r1
 802f96c:	464b      	mov	r3, r9
 802f96e:	4620      	mov	r0, r4
 802f970:	4629      	mov	r1, r5
 802f972:	f7d0 fc37 	bl	80001e4 <__adddf3>
 802f976:	4602      	mov	r2, r0
 802f978:	460b      	mov	r3, r1
 802f97a:	4630      	mov	r0, r6
 802f97c:	4639      	mov	r1, r7
 802f97e:	f7d0 ff11 	bl	80007a4 <__aeabi_ddiv>
 802f982:	e9dd 2300 	ldrd	r2, r3, [sp]
 802f986:	f7d0 fc2b 	bl	80001e0 <__aeabi_dsub>
 802f98a:	4602      	mov	r2, r0
 802f98c:	460b      	mov	r3, r1
 802f98e:	4650      	mov	r0, sl
 802f990:	4659      	mov	r1, fp
 802f992:	f7d0 fc25 	bl	80001e0 <__aeabi_dsub>
 802f996:	4602      	mov	r2, r0
 802f998:	460b      	mov	r3, r1
 802f99a:	f7d0 fc23 	bl	80001e4 <__adddf3>
 802f99e:	4602      	mov	r2, r0
 802f9a0:	460b      	mov	r3, r1
 802f9a2:	4640      	mov	r0, r8
 802f9a4:	4649      	mov	r1, r9
 802f9a6:	f7d0 fc1b 	bl	80001e0 <__aeabi_dsub>
 802f9aa:	9b02      	ldr	r3, [sp, #8]
 802f9ac:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 802f9b0:	f00a 0a02 	and.w	sl, sl, #2
 802f9b4:	4604      	mov	r4, r0
 802f9b6:	f1ca 0001 	rsb	r0, sl, #1
 802f9ba:	460d      	mov	r5, r1
 802f9bc:	f7d0 fd5e 	bl	800047c <__aeabi_i2d>
 802f9c0:	4602      	mov	r2, r0
 802f9c2:	460b      	mov	r3, r1
 802f9c4:	4620      	mov	r0, r4
 802f9c6:	4629      	mov	r1, r5
 802f9c8:	f7d0 fdc2 	bl	8000550 <__aeabi_dmul>
 802f9cc:	e6a5      	b.n	802f71a <__kernel_tan+0x4a>
 802f9ce:	bf00      	nop
 802f9d0:	54442d18 	.word	0x54442d18
 802f9d4:	3fe921fb 	.word	0x3fe921fb
 802f9d8:	33145c07 	.word	0x33145c07
 802f9dc:	3c81a626 	.word	0x3c81a626
 802f9e0:	74bf7ad4 	.word	0x74bf7ad4
 802f9e4:	3efb2a70 	.word	0x3efb2a70
 802f9e8:	32f0a7e9 	.word	0x32f0a7e9
 802f9ec:	3f12b80f 	.word	0x3f12b80f
 802f9f0:	1a8d1068 	.word	0x1a8d1068
 802f9f4:	3f3026f7 	.word	0x3f3026f7
 802f9f8:	fee08315 	.word	0xfee08315
 802f9fc:	3f57dbc8 	.word	0x3f57dbc8
 802fa00:	e96e8493 	.word	0xe96e8493
 802fa04:	3f8226e3 	.word	0x3f8226e3
 802fa08:	1bb341fe 	.word	0x1bb341fe
 802fa0c:	3faba1ba 	.word	0x3faba1ba
 802fa10:	db605373 	.word	0xdb605373
 802fa14:	bef375cb 	.word	0xbef375cb
 802fa18:	a03792a6 	.word	0xa03792a6
 802fa1c:	3f147e88 	.word	0x3f147e88
 802fa20:	f2f26501 	.word	0xf2f26501
 802fa24:	3f4344d8 	.word	0x3f4344d8
 802fa28:	c9560328 	.word	0xc9560328
 802fa2c:	3f6d6d22 	.word	0x3f6d6d22
 802fa30:	8406d637 	.word	0x8406d637
 802fa34:	3f9664f4 	.word	0x3f9664f4
 802fa38:	1110fe7a 	.word	0x1110fe7a
 802fa3c:	3fc11111 	.word	0x3fc11111
 802fa40:	55555563 	.word	0x55555563
 802fa44:	3fd55555 	.word	0x3fd55555
 802fa48:	3e2fffff 	.word	0x3e2fffff
 802fa4c:	3ff00000 	.word	0x3ff00000
 802fa50:	bff00000 	.word	0xbff00000
 802fa54:	3fe59427 	.word	0x3fe59427
 802fa58:	2e01      	cmp	r6, #1
 802fa5a:	d033      	beq.n	802fac4 <__kernel_tan+0x3f4>
 802fa5c:	f04f 0800 	mov.w	r8, #0
 802fa60:	4689      	mov	r9, r1
 802fa62:	4602      	mov	r2, r0
 802fa64:	460b      	mov	r3, r1
 802fa66:	2000      	movs	r0, #0
 802fa68:	4918      	ldr	r1, [pc, #96]	@ (802facc <__kernel_tan+0x3fc>)
 802fa6a:	e9cd 8902 	strd	r8, r9, [sp, #8]
 802fa6e:	f7d0 fe99 	bl	80007a4 <__aeabi_ddiv>
 802fa72:	4652      	mov	r2, sl
 802fa74:	460f      	mov	r7, r1
 802fa76:	465b      	mov	r3, fp
 802fa78:	4606      	mov	r6, r0
 802fa7a:	460d      	mov	r5, r1
 802fa7c:	4640      	mov	r0, r8
 802fa7e:	4649      	mov	r1, r9
 802fa80:	f7d0 fbae 	bl	80001e0 <__aeabi_dsub>
 802fa84:	4602      	mov	r2, r0
 802fa86:	460b      	mov	r3, r1
 802fa88:	e9dd 0100 	ldrd	r0, r1, [sp]
 802fa8c:	f7d0 fba8 	bl	80001e0 <__aeabi_dsub>
 802fa90:	4642      	mov	r2, r8
 802fa92:	463b      	mov	r3, r7
 802fa94:	f7d0 fd5c 	bl	8000550 <__aeabi_dmul>
 802fa98:	4642      	mov	r2, r8
 802fa9a:	4682      	mov	sl, r0
 802fa9c:	468b      	mov	fp, r1
 802fa9e:	463b      	mov	r3, r7
 802faa0:	4640      	mov	r0, r8
 802faa2:	4649      	mov	r1, r9
 802faa4:	f7d0 fd54 	bl	8000550 <__aeabi_dmul>
 802faa8:	4b09      	ldr	r3, [pc, #36]	@ (802fad0 <__kernel_tan+0x400>)
 802faaa:	2200      	movs	r2, #0
 802faac:	f7d0 fb9a 	bl	80001e4 <__adddf3>
 802fab0:	4602      	mov	r2, r0
 802fab2:	460b      	mov	r3, r1
 802fab4:	4650      	mov	r0, sl
 802fab6:	4659      	mov	r1, fp
 802fab8:	f7d0 fb94 	bl	80001e4 <__adddf3>
 802fabc:	4644      	mov	r4, r8
 802fabe:	4632      	mov	r2, r6
 802fac0:	463b      	mov	r3, r7
 802fac2:	e66b      	b.n	802f79c <__kernel_tan+0xcc>
 802fac4:	4682      	mov	sl, r0
 802fac6:	468b      	mov	fp, r1
 802fac8:	e629      	b.n	802f71e <__kernel_tan+0x4e>
 802faca:	bf00      	nop
 802facc:	bff00000 	.word	0xbff00000
 802fad0:	3ff00000 	.word	0x3ff00000
 802fad4:	00000000 	.word	0x00000000

0802fad8 <__ieee754_atan2>:
 802fad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802fadc:	ec57 6b11 	vmov	r6, r7, d1
 802fae0:	4273      	negs	r3, r6
 802fae2:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 802fc60 <__ieee754_atan2+0x188>
 802fae6:	f027 4200 	bic.w	r2, r7, #2147483648	@ 0x80000000
 802faea:	4333      	orrs	r3, r6
 802faec:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 802faf0:	4543      	cmp	r3, r8
 802faf2:	ec51 0b10 	vmov	r0, r1, d0
 802faf6:	4635      	mov	r5, r6
 802faf8:	d809      	bhi.n	802fb0e <__ieee754_atan2+0x36>
 802fafa:	4244      	negs	r4, r0
 802fafc:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 802fb00:	4304      	orrs	r4, r0
 802fb02:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 802fb06:	4544      	cmp	r4, r8
 802fb08:	468e      	mov	lr, r1
 802fb0a:	4681      	mov	r9, r0
 802fb0c:	d907      	bls.n	802fb1e <__ieee754_atan2+0x46>
 802fb0e:	4632      	mov	r2, r6
 802fb10:	463b      	mov	r3, r7
 802fb12:	f7d0 fb67 	bl	80001e4 <__adddf3>
 802fb16:	ec41 0b10 	vmov	d0, r0, r1
 802fb1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802fb1e:	f107 4440 	add.w	r4, r7, #3221225472	@ 0xc0000000
 802fb22:	f504 1480 	add.w	r4, r4, #1048576	@ 0x100000
 802fb26:	4334      	orrs	r4, r6
 802fb28:	d103      	bne.n	802fb32 <__ieee754_atan2+0x5a>
 802fb2a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802fb2e:	f001 ba13 	b.w	8030f58 <atan>
 802fb32:	17bc      	asrs	r4, r7, #30
 802fb34:	f004 0402 	and.w	r4, r4, #2
 802fb38:	ea53 0909 	orrs.w	r9, r3, r9
 802fb3c:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 802fb40:	d107      	bne.n	802fb52 <__ieee754_atan2+0x7a>
 802fb42:	2c02      	cmp	r4, #2
 802fb44:	d05f      	beq.n	802fc06 <__ieee754_atan2+0x12e>
 802fb46:	2c03      	cmp	r4, #3
 802fb48:	d1e5      	bne.n	802fb16 <__ieee754_atan2+0x3e>
 802fb4a:	a141      	add	r1, pc, #260	@ (adr r1, 802fc50 <__ieee754_atan2+0x178>)
 802fb4c:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fb50:	e7e1      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fb52:	4315      	orrs	r5, r2
 802fb54:	d106      	bne.n	802fb64 <__ieee754_atan2+0x8c>
 802fb56:	f1be 0f00 	cmp.w	lr, #0
 802fb5a:	da5f      	bge.n	802fc1c <__ieee754_atan2+0x144>
 802fb5c:	a13e      	add	r1, pc, #248	@ (adr r1, 802fc58 <__ieee754_atan2+0x180>)
 802fb5e:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fb62:	e7d8      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fb64:	4542      	cmp	r2, r8
 802fb66:	d10f      	bne.n	802fb88 <__ieee754_atan2+0xb0>
 802fb68:	4293      	cmp	r3, r2
 802fb6a:	f104 34ff 	add.w	r4, r4, #4294967295
 802fb6e:	d107      	bne.n	802fb80 <__ieee754_atan2+0xa8>
 802fb70:	2c02      	cmp	r4, #2
 802fb72:	d84c      	bhi.n	802fc0e <__ieee754_atan2+0x136>
 802fb74:	4b34      	ldr	r3, [pc, #208]	@ (802fc48 <__ieee754_atan2+0x170>)
 802fb76:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 802fb7a:	e9d3 0100 	ldrd	r0, r1, [r3]
 802fb7e:	e7ca      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fb80:	2c02      	cmp	r4, #2
 802fb82:	d848      	bhi.n	802fc16 <__ieee754_atan2+0x13e>
 802fb84:	4b31      	ldr	r3, [pc, #196]	@ (802fc4c <__ieee754_atan2+0x174>)
 802fb86:	e7f6      	b.n	802fb76 <__ieee754_atan2+0x9e>
 802fb88:	4543      	cmp	r3, r8
 802fb8a:	d0e4      	beq.n	802fb56 <__ieee754_atan2+0x7e>
 802fb8c:	1a9b      	subs	r3, r3, r2
 802fb8e:	f1b3 7f74 	cmp.w	r3, #63963136	@ 0x3d00000
 802fb92:	ea4f 5223 	mov.w	r2, r3, asr #20
 802fb96:	da1e      	bge.n	802fbd6 <__ieee754_atan2+0xfe>
 802fb98:	2f00      	cmp	r7, #0
 802fb9a:	da01      	bge.n	802fba0 <__ieee754_atan2+0xc8>
 802fb9c:	323c      	adds	r2, #60	@ 0x3c
 802fb9e:	db1e      	blt.n	802fbde <__ieee754_atan2+0x106>
 802fba0:	4632      	mov	r2, r6
 802fba2:	463b      	mov	r3, r7
 802fba4:	f7d0 fdfe 	bl	80007a4 <__aeabi_ddiv>
 802fba8:	ec41 0b10 	vmov	d0, r0, r1
 802fbac:	f001 fb6c 	bl	8031288 <fabs>
 802fbb0:	f001 f9d2 	bl	8030f58 <atan>
 802fbb4:	ec51 0b10 	vmov	r0, r1, d0
 802fbb8:	2c01      	cmp	r4, #1
 802fbba:	d013      	beq.n	802fbe4 <__ieee754_atan2+0x10c>
 802fbbc:	2c02      	cmp	r4, #2
 802fbbe:	d015      	beq.n	802fbec <__ieee754_atan2+0x114>
 802fbc0:	2c00      	cmp	r4, #0
 802fbc2:	d0a8      	beq.n	802fb16 <__ieee754_atan2+0x3e>
 802fbc4:	a318      	add	r3, pc, #96	@ (adr r3, 802fc28 <__ieee754_atan2+0x150>)
 802fbc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fbca:	f7d0 fb09 	bl	80001e0 <__aeabi_dsub>
 802fbce:	a318      	add	r3, pc, #96	@ (adr r3, 802fc30 <__ieee754_atan2+0x158>)
 802fbd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fbd4:	e014      	b.n	802fc00 <__ieee754_atan2+0x128>
 802fbd6:	a118      	add	r1, pc, #96	@ (adr r1, 802fc38 <__ieee754_atan2+0x160>)
 802fbd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fbdc:	e7ec      	b.n	802fbb8 <__ieee754_atan2+0xe0>
 802fbde:	2000      	movs	r0, #0
 802fbe0:	2100      	movs	r1, #0
 802fbe2:	e7e9      	b.n	802fbb8 <__ieee754_atan2+0xe0>
 802fbe4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 802fbe8:	4619      	mov	r1, r3
 802fbea:	e794      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fbec:	a30e      	add	r3, pc, #56	@ (adr r3, 802fc28 <__ieee754_atan2+0x150>)
 802fbee:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fbf2:	f7d0 faf5 	bl	80001e0 <__aeabi_dsub>
 802fbf6:	4602      	mov	r2, r0
 802fbf8:	460b      	mov	r3, r1
 802fbfa:	a10d      	add	r1, pc, #52	@ (adr r1, 802fc30 <__ieee754_atan2+0x158>)
 802fbfc:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fc00:	f7d0 faee 	bl	80001e0 <__aeabi_dsub>
 802fc04:	e787      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fc06:	a10a      	add	r1, pc, #40	@ (adr r1, 802fc30 <__ieee754_atan2+0x158>)
 802fc08:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fc0c:	e783      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fc0e:	a10c      	add	r1, pc, #48	@ (adr r1, 802fc40 <__ieee754_atan2+0x168>)
 802fc10:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fc14:	e77f      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fc16:	2000      	movs	r0, #0
 802fc18:	2100      	movs	r1, #0
 802fc1a:	e77c      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fc1c:	a106      	add	r1, pc, #24	@ (adr r1, 802fc38 <__ieee754_atan2+0x160>)
 802fc1e:	e9d1 0100 	ldrd	r0, r1, [r1]
 802fc22:	e778      	b.n	802fb16 <__ieee754_atan2+0x3e>
 802fc24:	f3af 8000 	nop.w
 802fc28:	33145c07 	.word	0x33145c07
 802fc2c:	3ca1a626 	.word	0x3ca1a626
 802fc30:	54442d18 	.word	0x54442d18
 802fc34:	400921fb 	.word	0x400921fb
 802fc38:	54442d18 	.word	0x54442d18
 802fc3c:	3ff921fb 	.word	0x3ff921fb
 802fc40:	54442d18 	.word	0x54442d18
 802fc44:	3fe921fb 	.word	0x3fe921fb
 802fc48:	0803aed8 	.word	0x0803aed8
 802fc4c:	0803aec0 	.word	0x0803aec0
 802fc50:	54442d18 	.word	0x54442d18
 802fc54:	c00921fb 	.word	0xc00921fb
 802fc58:	54442d18 	.word	0x54442d18
 802fc5c:	bff921fb 	.word	0xbff921fb
 802fc60:	7ff00000 	.word	0x7ff00000
 802fc64:	00000000 	.word	0x00000000

0802fc68 <__ieee754_exp>:
 802fc68:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802fc6c:	ec55 4b10 	vmov	r4, r5, d0
 802fc70:	49b1      	ldr	r1, [pc, #708]	@ (802ff38 <__ieee754_exp+0x2d0>)
 802fc72:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 802fc76:	428a      	cmp	r2, r1
 802fc78:	ea4f 76d5 	mov.w	r6, r5, lsr #31
 802fc7c:	d936      	bls.n	802fcec <__ieee754_exp+0x84>
 802fc7e:	49af      	ldr	r1, [pc, #700]	@ (802ff3c <__ieee754_exp+0x2d4>)
 802fc80:	428a      	cmp	r2, r1
 802fc82:	d914      	bls.n	802fcae <__ieee754_exp+0x46>
 802fc84:	f3c5 0313 	ubfx	r3, r5, #0, #20
 802fc88:	4323      	orrs	r3, r4
 802fc8a:	4622      	mov	r2, r4
 802fc8c:	d007      	beq.n	802fc9e <__ieee754_exp+0x36>
 802fc8e:	462b      	mov	r3, r5
 802fc90:	4620      	mov	r0, r4
 802fc92:	4629      	mov	r1, r5
 802fc94:	f7d0 faa6 	bl	80001e4 <__adddf3>
 802fc98:	4604      	mov	r4, r0
 802fc9a:	460d      	mov	r5, r1
 802fc9c:	e002      	b.n	802fca4 <__ieee754_exp+0x3c>
 802fc9e:	2e00      	cmp	r6, #0
 802fca0:	f040 8118 	bne.w	802fed4 <__ieee754_exp+0x26c>
 802fca4:	ec45 4b10 	vmov	d0, r4, r5
 802fca8:	b004      	add	sp, #16
 802fcaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802fcae:	a38c      	add	r3, pc, #560	@ (adr r3, 802fee0 <__ieee754_exp+0x278>)
 802fcb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fcb4:	4620      	mov	r0, r4
 802fcb6:	4629      	mov	r1, r5
 802fcb8:	f7d0 feda 	bl	8000a70 <__aeabi_dcmpgt>
 802fcbc:	4607      	mov	r7, r0
 802fcbe:	b128      	cbz	r0, 802fccc <__ieee754_exp+0x64>
 802fcc0:	2000      	movs	r0, #0
 802fcc2:	b004      	add	sp, #16
 802fcc4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802fcc8:	f003 b8d6 	b.w	8032e78 <__math_oflow>
 802fccc:	a386      	add	r3, pc, #536	@ (adr r3, 802fee8 <__ieee754_exp+0x280>)
 802fcce:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fcd2:	4620      	mov	r0, r4
 802fcd4:	4629      	mov	r1, r5
 802fcd6:	f7d0 fead 	bl	8000a34 <__aeabi_dcmplt>
 802fcda:	2800      	cmp	r0, #0
 802fcdc:	f000 8087 	beq.w	802fdee <__ieee754_exp+0x186>
 802fce0:	4638      	mov	r0, r7
 802fce2:	b004      	add	sp, #16
 802fce4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802fce8:	f003 b8be 	b.w	8032e68 <__math_uflow>
 802fcec:	4b94      	ldr	r3, [pc, #592]	@ (802ff40 <__ieee754_exp+0x2d8>)
 802fcee:	429a      	cmp	r2, r3
 802fcf0:	f240 80a9 	bls.w	802fe46 <__ieee754_exp+0x1de>
 802fcf4:	4b93      	ldr	r3, [pc, #588]	@ (802ff44 <__ieee754_exp+0x2dc>)
 802fcf6:	429a      	cmp	r2, r3
 802fcf8:	d879      	bhi.n	802fdee <__ieee754_exp+0x186>
 802fcfa:	4b93      	ldr	r3, [pc, #588]	@ (802ff48 <__ieee754_exp+0x2e0>)
 802fcfc:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802fd00:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd04:	4620      	mov	r0, r4
 802fd06:	4629      	mov	r1, r5
 802fd08:	f7d0 fa6a 	bl	80001e0 <__aeabi_dsub>
 802fd0c:	4b8f      	ldr	r3, [pc, #572]	@ (802ff4c <__ieee754_exp+0x2e4>)
 802fd0e:	00f7      	lsls	r7, r6, #3
 802fd10:	443b      	add	r3, r7
 802fd12:	ed93 7b00 	vldr	d7, [r3]
 802fd16:	ed8d 7b00 	vstr	d7, [sp]
 802fd1a:	f1c6 0a01 	rsb	sl, r6, #1
 802fd1e:	4680      	mov	r8, r0
 802fd20:	4689      	mov	r9, r1
 802fd22:	ebaa 0a06 	sub.w	sl, sl, r6
 802fd26:	e9dd 2300 	ldrd	r2, r3, [sp]
 802fd2a:	4640      	mov	r0, r8
 802fd2c:	4649      	mov	r1, r9
 802fd2e:	f7d0 fa57 	bl	80001e0 <__aeabi_dsub>
 802fd32:	4604      	mov	r4, r0
 802fd34:	460d      	mov	r5, r1
 802fd36:	4622      	mov	r2, r4
 802fd38:	462b      	mov	r3, r5
 802fd3a:	4620      	mov	r0, r4
 802fd3c:	4629      	mov	r1, r5
 802fd3e:	f7d0 fc07 	bl	8000550 <__aeabi_dmul>
 802fd42:	a36b      	add	r3, pc, #428	@ (adr r3, 802fef0 <__ieee754_exp+0x288>)
 802fd44:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd48:	4606      	mov	r6, r0
 802fd4a:	460f      	mov	r7, r1
 802fd4c:	f7d0 fc00 	bl	8000550 <__aeabi_dmul>
 802fd50:	a369      	add	r3, pc, #420	@ (adr r3, 802fef8 <__ieee754_exp+0x290>)
 802fd52:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd56:	f7d0 fa43 	bl	80001e0 <__aeabi_dsub>
 802fd5a:	4632      	mov	r2, r6
 802fd5c:	463b      	mov	r3, r7
 802fd5e:	f7d0 fbf7 	bl	8000550 <__aeabi_dmul>
 802fd62:	a367      	add	r3, pc, #412	@ (adr r3, 802ff00 <__ieee754_exp+0x298>)
 802fd64:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd68:	f7d0 fa3c 	bl	80001e4 <__adddf3>
 802fd6c:	4632      	mov	r2, r6
 802fd6e:	463b      	mov	r3, r7
 802fd70:	f7d0 fbee 	bl	8000550 <__aeabi_dmul>
 802fd74:	a364      	add	r3, pc, #400	@ (adr r3, 802ff08 <__ieee754_exp+0x2a0>)
 802fd76:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd7a:	f7d0 fa31 	bl	80001e0 <__aeabi_dsub>
 802fd7e:	4632      	mov	r2, r6
 802fd80:	463b      	mov	r3, r7
 802fd82:	f7d0 fbe5 	bl	8000550 <__aeabi_dmul>
 802fd86:	a362      	add	r3, pc, #392	@ (adr r3, 802ff10 <__ieee754_exp+0x2a8>)
 802fd88:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fd8c:	f7d0 fa2a 	bl	80001e4 <__adddf3>
 802fd90:	4632      	mov	r2, r6
 802fd92:	463b      	mov	r3, r7
 802fd94:	f7d0 fbdc 	bl	8000550 <__aeabi_dmul>
 802fd98:	4602      	mov	r2, r0
 802fd9a:	460b      	mov	r3, r1
 802fd9c:	4620      	mov	r0, r4
 802fd9e:	4629      	mov	r1, r5
 802fda0:	f7d0 fa1e 	bl	80001e0 <__aeabi_dsub>
 802fda4:	4602      	mov	r2, r0
 802fda6:	460b      	mov	r3, r1
 802fda8:	4606      	mov	r6, r0
 802fdaa:	460f      	mov	r7, r1
 802fdac:	4620      	mov	r0, r4
 802fdae:	4629      	mov	r1, r5
 802fdb0:	f7d0 fbce 	bl	8000550 <__aeabi_dmul>
 802fdb4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802fdb8:	f1ba 0f00 	cmp.w	sl, #0
 802fdbc:	d15c      	bne.n	802fe78 <__ieee754_exp+0x210>
 802fdbe:	2200      	movs	r2, #0
 802fdc0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 802fdc4:	4630      	mov	r0, r6
 802fdc6:	4639      	mov	r1, r7
 802fdc8:	f7d0 fa0a 	bl	80001e0 <__aeabi_dsub>
 802fdcc:	4602      	mov	r2, r0
 802fdce:	460b      	mov	r3, r1
 802fdd0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802fdd4:	f7d0 fce6 	bl	80007a4 <__aeabi_ddiv>
 802fdd8:	4622      	mov	r2, r4
 802fdda:	462b      	mov	r3, r5
 802fddc:	f7d0 fa00 	bl	80001e0 <__aeabi_dsub>
 802fde0:	4602      	mov	r2, r0
 802fde2:	460b      	mov	r3, r1
 802fde4:	2000      	movs	r0, #0
 802fde6:	495a      	ldr	r1, [pc, #360]	@ (802ff50 <__ieee754_exp+0x2e8>)
 802fde8:	f7d0 f9fa 	bl	80001e0 <__aeabi_dsub>
 802fdec:	e754      	b.n	802fc98 <__ieee754_exp+0x30>
 802fdee:	4b59      	ldr	r3, [pc, #356]	@ (802ff54 <__ieee754_exp+0x2ec>)
 802fdf0:	4620      	mov	r0, r4
 802fdf2:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 802fdf6:	4629      	mov	r1, r5
 802fdf8:	a347      	add	r3, pc, #284	@ (adr r3, 802ff18 <__ieee754_exp+0x2b0>)
 802fdfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fdfe:	f7d0 fba7 	bl	8000550 <__aeabi_dmul>
 802fe02:	e9d6 2300 	ldrd	r2, r3, [r6]
 802fe06:	f7d0 f9ed 	bl	80001e4 <__adddf3>
 802fe0a:	f7d0 fe51 	bl	8000ab0 <__aeabi_d2iz>
 802fe0e:	4682      	mov	sl, r0
 802fe10:	f7d0 fb34 	bl	800047c <__aeabi_i2d>
 802fe14:	a342      	add	r3, pc, #264	@ (adr r3, 802ff20 <__ieee754_exp+0x2b8>)
 802fe16:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fe1a:	4606      	mov	r6, r0
 802fe1c:	460f      	mov	r7, r1
 802fe1e:	f7d0 fb97 	bl	8000550 <__aeabi_dmul>
 802fe22:	4602      	mov	r2, r0
 802fe24:	460b      	mov	r3, r1
 802fe26:	4620      	mov	r0, r4
 802fe28:	4629      	mov	r1, r5
 802fe2a:	f7d0 f9d9 	bl	80001e0 <__aeabi_dsub>
 802fe2e:	a33e      	add	r3, pc, #248	@ (adr r3, 802ff28 <__ieee754_exp+0x2c0>)
 802fe30:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fe34:	4680      	mov	r8, r0
 802fe36:	4689      	mov	r9, r1
 802fe38:	4630      	mov	r0, r6
 802fe3a:	4639      	mov	r1, r7
 802fe3c:	f7d0 fb88 	bl	8000550 <__aeabi_dmul>
 802fe40:	e9cd 0100 	strd	r0, r1, [sp]
 802fe44:	e76f      	b.n	802fd26 <__ieee754_exp+0xbe>
 802fe46:	4b44      	ldr	r3, [pc, #272]	@ (802ff58 <__ieee754_exp+0x2f0>)
 802fe48:	429a      	cmp	r2, r3
 802fe4a:	d810      	bhi.n	802fe6e <__ieee754_exp+0x206>
 802fe4c:	a338      	add	r3, pc, #224	@ (adr r3, 802ff30 <__ieee754_exp+0x2c8>)
 802fe4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802fe52:	4620      	mov	r0, r4
 802fe54:	4629      	mov	r1, r5
 802fe56:	f7d0 f9c5 	bl	80001e4 <__adddf3>
 802fe5a:	4b3d      	ldr	r3, [pc, #244]	@ (802ff50 <__ieee754_exp+0x2e8>)
 802fe5c:	2200      	movs	r2, #0
 802fe5e:	f7d0 fe07 	bl	8000a70 <__aeabi_dcmpgt>
 802fe62:	b138      	cbz	r0, 802fe74 <__ieee754_exp+0x20c>
 802fe64:	4b3a      	ldr	r3, [pc, #232]	@ (802ff50 <__ieee754_exp+0x2e8>)
 802fe66:	2200      	movs	r2, #0
 802fe68:	4620      	mov	r0, r4
 802fe6a:	4629      	mov	r1, r5
 802fe6c:	e712      	b.n	802fc94 <__ieee754_exp+0x2c>
 802fe6e:	f04f 0a00 	mov.w	sl, #0
 802fe72:	e760      	b.n	802fd36 <__ieee754_exp+0xce>
 802fe74:	4682      	mov	sl, r0
 802fe76:	e75e      	b.n	802fd36 <__ieee754_exp+0xce>
 802fe78:	4632      	mov	r2, r6
 802fe7a:	463b      	mov	r3, r7
 802fe7c:	2000      	movs	r0, #0
 802fe7e:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 802fe82:	f7d0 f9ad 	bl	80001e0 <__aeabi_dsub>
 802fe86:	4602      	mov	r2, r0
 802fe88:	460b      	mov	r3, r1
 802fe8a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802fe8e:	f7d0 fc89 	bl	80007a4 <__aeabi_ddiv>
 802fe92:	4602      	mov	r2, r0
 802fe94:	460b      	mov	r3, r1
 802fe96:	e9dd 0100 	ldrd	r0, r1, [sp]
 802fe9a:	f7d0 f9a1 	bl	80001e0 <__aeabi_dsub>
 802fe9e:	4642      	mov	r2, r8
 802fea0:	464b      	mov	r3, r9
 802fea2:	f7d0 f99d 	bl	80001e0 <__aeabi_dsub>
 802fea6:	4602      	mov	r2, r0
 802fea8:	460b      	mov	r3, r1
 802feaa:	2000      	movs	r0, #0
 802feac:	4928      	ldr	r1, [pc, #160]	@ (802ff50 <__ieee754_exp+0x2e8>)
 802feae:	f7d0 f997 	bl	80001e0 <__aeabi_dsub>
 802feb2:	f46f 727f 	mvn.w	r2, #1020	@ 0x3fc
 802feb6:	4592      	cmp	sl, r2
 802feb8:	db02      	blt.n	802fec0 <__ieee754_exp+0x258>
 802feba:	eb01 510a 	add.w	r1, r1, sl, lsl #20
 802febe:	e6eb      	b.n	802fc98 <__ieee754_exp+0x30>
 802fec0:	f50a 7a7a 	add.w	sl, sl, #1000	@ 0x3e8
 802fec4:	eb01 510a 	add.w	r1, r1, sl, lsl #20
 802fec8:	2200      	movs	r2, #0
 802feca:	f04f 73b8 	mov.w	r3, #24117248	@ 0x1700000
 802fece:	f7d0 fb3f 	bl	8000550 <__aeabi_dmul>
 802fed2:	e6e1      	b.n	802fc98 <__ieee754_exp+0x30>
 802fed4:	2400      	movs	r4, #0
 802fed6:	2500      	movs	r5, #0
 802fed8:	e6e4      	b.n	802fca4 <__ieee754_exp+0x3c>
 802feda:	bf00      	nop
 802fedc:	f3af 8000 	nop.w
 802fee0:	fefa39ef 	.word	0xfefa39ef
 802fee4:	40862e42 	.word	0x40862e42
 802fee8:	d52d3051 	.word	0xd52d3051
 802feec:	c0874910 	.word	0xc0874910
 802fef0:	72bea4d0 	.word	0x72bea4d0
 802fef4:	3e663769 	.word	0x3e663769
 802fef8:	c5d26bf1 	.word	0xc5d26bf1
 802fefc:	3ebbbd41 	.word	0x3ebbbd41
 802ff00:	af25de2c 	.word	0xaf25de2c
 802ff04:	3f11566a 	.word	0x3f11566a
 802ff08:	16bebd93 	.word	0x16bebd93
 802ff0c:	3f66c16c 	.word	0x3f66c16c
 802ff10:	5555553e 	.word	0x5555553e
 802ff14:	3fc55555 	.word	0x3fc55555
 802ff18:	652b82fe 	.word	0x652b82fe
 802ff1c:	3ff71547 	.word	0x3ff71547
 802ff20:	fee00000 	.word	0xfee00000
 802ff24:	3fe62e42 	.word	0x3fe62e42
 802ff28:	35793c76 	.word	0x35793c76
 802ff2c:	3dea39ef 	.word	0x3dea39ef
 802ff30:	8800759c 	.word	0x8800759c
 802ff34:	7e37e43c 	.word	0x7e37e43c
 802ff38:	40862e41 	.word	0x40862e41
 802ff3c:	7fefffff 	.word	0x7fefffff
 802ff40:	3fd62e42 	.word	0x3fd62e42
 802ff44:	3ff0a2b1 	.word	0x3ff0a2b1
 802ff48:	0803af00 	.word	0x0803af00
 802ff4c:	0803aef0 	.word	0x0803aef0
 802ff50:	3ff00000 	.word	0x3ff00000
 802ff54:	0803af10 	.word	0x0803af10
 802ff58:	3defffff 	.word	0x3defffff
 802ff5c:	00000000 	.word	0x00000000

0802ff60 <__ieee754_pow>:
 802ff60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ff64:	b091      	sub	sp, #68	@ 0x44
 802ff66:	ed8d 1b00 	vstr	d1, [sp]
 802ff6a:	e9dd 1900 	ldrd	r1, r9, [sp]
 802ff6e:	f029 4a00 	bic.w	sl, r9, #2147483648	@ 0x80000000
 802ff72:	ea5a 0001 	orrs.w	r0, sl, r1
 802ff76:	ec57 6b10 	vmov	r6, r7, d0
 802ff7a:	d113      	bne.n	802ffa4 <__ieee754_pow+0x44>
 802ff7c:	19b3      	adds	r3, r6, r6
 802ff7e:	f487 2200 	eor.w	r2, r7, #524288	@ 0x80000
 802ff82:	4152      	adcs	r2, r2
 802ff84:	4298      	cmp	r0, r3
 802ff86:	4b98      	ldr	r3, [pc, #608]	@ (80301e8 <__ieee754_pow+0x288>)
 802ff88:	4193      	sbcs	r3, r2
 802ff8a:	f080 84ea 	bcs.w	8030962 <__ieee754_pow+0xa02>
 802ff8e:	e9dd 2300 	ldrd	r2, r3, [sp]
 802ff92:	4630      	mov	r0, r6
 802ff94:	4639      	mov	r1, r7
 802ff96:	f7d0 f925 	bl	80001e4 <__adddf3>
 802ff9a:	ec41 0b10 	vmov	d0, r0, r1
 802ff9e:	b011      	add	sp, #68	@ 0x44
 802ffa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ffa4:	4a91      	ldr	r2, [pc, #580]	@ (80301ec <__ieee754_pow+0x28c>)
 802ffa6:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 802ffaa:	4590      	cmp	r8, r2
 802ffac:	463d      	mov	r5, r7
 802ffae:	4633      	mov	r3, r6
 802ffb0:	d806      	bhi.n	802ffc0 <__ieee754_pow+0x60>
 802ffb2:	d101      	bne.n	802ffb8 <__ieee754_pow+0x58>
 802ffb4:	2e00      	cmp	r6, #0
 802ffb6:	d1ea      	bne.n	802ff8e <__ieee754_pow+0x2e>
 802ffb8:	4592      	cmp	sl, r2
 802ffba:	d801      	bhi.n	802ffc0 <__ieee754_pow+0x60>
 802ffbc:	d10e      	bne.n	802ffdc <__ieee754_pow+0x7c>
 802ffbe:	b169      	cbz	r1, 802ffdc <__ieee754_pow+0x7c>
 802ffc0:	f105 4540 	add.w	r5, r5, #3221225472	@ 0xc0000000
 802ffc4:	f505 1580 	add.w	r5, r5, #1048576	@ 0x100000
 802ffc8:	431d      	orrs	r5, r3
 802ffca:	d1e0      	bne.n	802ff8e <__ieee754_pow+0x2e>
 802ffcc:	e9dd 3200 	ldrd	r3, r2, [sp]
 802ffd0:	18db      	adds	r3, r3, r3
 802ffd2:	f482 2200 	eor.w	r2, r2, #524288	@ 0x80000
 802ffd6:	4152      	adcs	r2, r2
 802ffd8:	429d      	cmp	r5, r3
 802ffda:	e7d4      	b.n	802ff86 <__ieee754_pow+0x26>
 802ffdc:	2d00      	cmp	r5, #0
 802ffde:	46c3      	mov	fp, r8
 802ffe0:	da3a      	bge.n	8030058 <__ieee754_pow+0xf8>
 802ffe2:	4a83      	ldr	r2, [pc, #524]	@ (80301f0 <__ieee754_pow+0x290>)
 802ffe4:	4592      	cmp	sl, r2
 802ffe6:	d84d      	bhi.n	8030084 <__ieee754_pow+0x124>
 802ffe8:	f1a2 7254 	sub.w	r2, r2, #55574528	@ 0x3500000
 802ffec:	4592      	cmp	sl, r2
 802ffee:	f240 84c7 	bls.w	8030980 <__ieee754_pow+0xa20>
 802fff2:	ea4f 522a 	mov.w	r2, sl, asr #20
 802fff6:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 802fffa:	2a14      	cmp	r2, #20
 802fffc:	dd0f      	ble.n	803001e <__ieee754_pow+0xbe>
 802fffe:	f1c2 0234 	rsb	r2, r2, #52	@ 0x34
 8030002:	fa21 f402 	lsr.w	r4, r1, r2
 8030006:	fa04 f202 	lsl.w	r2, r4, r2
 803000a:	428a      	cmp	r2, r1
 803000c:	f040 84b8 	bne.w	8030980 <__ieee754_pow+0xa20>
 8030010:	f004 0401 	and.w	r4, r4, #1
 8030014:	f1c4 0402 	rsb	r4, r4, #2
 8030018:	2900      	cmp	r1, #0
 803001a:	d158      	bne.n	80300ce <__ieee754_pow+0x16e>
 803001c:	e00e      	b.n	803003c <__ieee754_pow+0xdc>
 803001e:	2900      	cmp	r1, #0
 8030020:	d154      	bne.n	80300cc <__ieee754_pow+0x16c>
 8030022:	f1c2 0214 	rsb	r2, r2, #20
 8030026:	fa4a f402 	asr.w	r4, sl, r2
 803002a:	fa04 f202 	lsl.w	r2, r4, r2
 803002e:	4552      	cmp	r2, sl
 8030030:	f040 84a3 	bne.w	803097a <__ieee754_pow+0xa1a>
 8030034:	f004 0401 	and.w	r4, r4, #1
 8030038:	f1c4 0402 	rsb	r4, r4, #2
 803003c:	4a6d      	ldr	r2, [pc, #436]	@ (80301f4 <__ieee754_pow+0x294>)
 803003e:	4592      	cmp	sl, r2
 8030040:	d12e      	bne.n	80300a0 <__ieee754_pow+0x140>
 8030042:	f1b9 0f00 	cmp.w	r9, #0
 8030046:	f280 8494 	bge.w	8030972 <__ieee754_pow+0xa12>
 803004a:	496a      	ldr	r1, [pc, #424]	@ (80301f4 <__ieee754_pow+0x294>)
 803004c:	4632      	mov	r2, r6
 803004e:	463b      	mov	r3, r7
 8030050:	2000      	movs	r0, #0
 8030052:	f7d0 fba7 	bl	80007a4 <__aeabi_ddiv>
 8030056:	e7a0      	b.n	802ff9a <__ieee754_pow+0x3a>
 8030058:	2400      	movs	r4, #0
 803005a:	bbc1      	cbnz	r1, 80300ce <__ieee754_pow+0x16e>
 803005c:	4a63      	ldr	r2, [pc, #396]	@ (80301ec <__ieee754_pow+0x28c>)
 803005e:	4592      	cmp	sl, r2
 8030060:	d1ec      	bne.n	803003c <__ieee754_pow+0xdc>
 8030062:	f108 4240 	add.w	r2, r8, #3221225472	@ 0xc0000000
 8030066:	f502 1280 	add.w	r2, r2, #1048576	@ 0x100000
 803006a:	431a      	orrs	r2, r3
 803006c:	f000 8479 	beq.w	8030962 <__ieee754_pow+0xa02>
 8030070:	4b61      	ldr	r3, [pc, #388]	@ (80301f8 <__ieee754_pow+0x298>)
 8030072:	4598      	cmp	r8, r3
 8030074:	d908      	bls.n	8030088 <__ieee754_pow+0x128>
 8030076:	f1b9 0f00 	cmp.w	r9, #0
 803007a:	f2c0 8476 	blt.w	803096a <__ieee754_pow+0xa0a>
 803007e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8030082:	e78a      	b.n	802ff9a <__ieee754_pow+0x3a>
 8030084:	2402      	movs	r4, #2
 8030086:	e7e8      	b.n	803005a <__ieee754_pow+0xfa>
 8030088:	f1b9 0f00 	cmp.w	r9, #0
 803008c:	f04f 0000 	mov.w	r0, #0
 8030090:	f04f 0100 	mov.w	r1, #0
 8030094:	da81      	bge.n	802ff9a <__ieee754_pow+0x3a>
 8030096:	e9dd 0300 	ldrd	r0, r3, [sp]
 803009a:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 803009e:	e77c      	b.n	802ff9a <__ieee754_pow+0x3a>
 80300a0:	f1b9 4f80 	cmp.w	r9, #1073741824	@ 0x40000000
 80300a4:	d106      	bne.n	80300b4 <__ieee754_pow+0x154>
 80300a6:	4632      	mov	r2, r6
 80300a8:	463b      	mov	r3, r7
 80300aa:	4630      	mov	r0, r6
 80300ac:	4639      	mov	r1, r7
 80300ae:	f7d0 fa4f 	bl	8000550 <__aeabi_dmul>
 80300b2:	e772      	b.n	802ff9a <__ieee754_pow+0x3a>
 80300b4:	4a51      	ldr	r2, [pc, #324]	@ (80301fc <__ieee754_pow+0x29c>)
 80300b6:	4591      	cmp	r9, r2
 80300b8:	d109      	bne.n	80300ce <__ieee754_pow+0x16e>
 80300ba:	2d00      	cmp	r5, #0
 80300bc:	db07      	blt.n	80300ce <__ieee754_pow+0x16e>
 80300be:	ec47 6b10 	vmov	d0, r6, r7
 80300c2:	b011      	add	sp, #68	@ 0x44
 80300c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80300c8:	f7ff b818 	b.w	802f0fc <__ieee754_sqrt>
 80300cc:	2400      	movs	r4, #0
 80300ce:	ec47 6b10 	vmov	d0, r6, r7
 80300d2:	9302      	str	r3, [sp, #8]
 80300d4:	f001 f8d8 	bl	8031288 <fabs>
 80300d8:	9b02      	ldr	r3, [sp, #8]
 80300da:	ec51 0b10 	vmov	r0, r1, d0
 80300de:	bb53      	cbnz	r3, 8030136 <__ieee754_pow+0x1d6>
 80300e0:	4b44      	ldr	r3, [pc, #272]	@ (80301f4 <__ieee754_pow+0x294>)
 80300e2:	f025 4240 	bic.w	r2, r5, #3221225472	@ 0xc0000000
 80300e6:	429a      	cmp	r2, r3
 80300e8:	d002      	beq.n	80300f0 <__ieee754_pow+0x190>
 80300ea:	f1b8 0f00 	cmp.w	r8, #0
 80300ee:	d122      	bne.n	8030136 <__ieee754_pow+0x1d6>
 80300f0:	f1b9 0f00 	cmp.w	r9, #0
 80300f4:	da05      	bge.n	8030102 <__ieee754_pow+0x1a2>
 80300f6:	4602      	mov	r2, r0
 80300f8:	460b      	mov	r3, r1
 80300fa:	2000      	movs	r0, #0
 80300fc:	493d      	ldr	r1, [pc, #244]	@ (80301f4 <__ieee754_pow+0x294>)
 80300fe:	f7d0 fb51 	bl	80007a4 <__aeabi_ddiv>
 8030102:	2d00      	cmp	r5, #0
 8030104:	f6bf af49 	bge.w	802ff9a <__ieee754_pow+0x3a>
 8030108:	f108 4840 	add.w	r8, r8, #3221225472	@ 0xc0000000
 803010c:	f508 1880 	add.w	r8, r8, #1048576	@ 0x100000
 8030110:	ea58 0804 	orrs.w	r8, r8, r4
 8030114:	d108      	bne.n	8030128 <__ieee754_pow+0x1c8>
 8030116:	4602      	mov	r2, r0
 8030118:	460b      	mov	r3, r1
 803011a:	4610      	mov	r0, r2
 803011c:	4619      	mov	r1, r3
 803011e:	f7d0 f85f 	bl	80001e0 <__aeabi_dsub>
 8030122:	4602      	mov	r2, r0
 8030124:	460b      	mov	r3, r1
 8030126:	e794      	b.n	8030052 <__ieee754_pow+0xf2>
 8030128:	2c01      	cmp	r4, #1
 803012a:	f47f af36 	bne.w	802ff9a <__ieee754_pow+0x3a>
 803012e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8030132:	4619      	mov	r1, r3
 8030134:	e731      	b.n	802ff9a <__ieee754_pow+0x3a>
 8030136:	0feb      	lsrs	r3, r5, #31
 8030138:	3b01      	subs	r3, #1
 803013a:	ea53 0204 	orrs.w	r2, r3, r4
 803013e:	d102      	bne.n	8030146 <__ieee754_pow+0x1e6>
 8030140:	4632      	mov	r2, r6
 8030142:	463b      	mov	r3, r7
 8030144:	e7e9      	b.n	803011a <__ieee754_pow+0x1ba>
 8030146:	3c01      	subs	r4, #1
 8030148:	431c      	orrs	r4, r3
 803014a:	d016      	beq.n	803017a <__ieee754_pow+0x21a>
 803014c:	ed9f 7b22 	vldr	d7, [pc, #136]	@ 80301d8 <__ieee754_pow+0x278>
 8030150:	f1ba 4f84 	cmp.w	sl, #1107296256	@ 0x42000000
 8030154:	ed8d 7b02 	vstr	d7, [sp, #8]
 8030158:	f240 8112 	bls.w	8030380 <__ieee754_pow+0x420>
 803015c:	4b28      	ldr	r3, [pc, #160]	@ (8030200 <__ieee754_pow+0x2a0>)
 803015e:	459a      	cmp	sl, r3
 8030160:	4b25      	ldr	r3, [pc, #148]	@ (80301f8 <__ieee754_pow+0x298>)
 8030162:	d916      	bls.n	8030192 <__ieee754_pow+0x232>
 8030164:	4598      	cmp	r8, r3
 8030166:	d80b      	bhi.n	8030180 <__ieee754_pow+0x220>
 8030168:	f1b9 0f00 	cmp.w	r9, #0
 803016c:	da0b      	bge.n	8030186 <__ieee754_pow+0x226>
 803016e:	2000      	movs	r0, #0
 8030170:	b011      	add	sp, #68	@ 0x44
 8030172:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8030176:	f002 be7f 	b.w	8032e78 <__math_oflow>
 803017a:	ed9f 7b19 	vldr	d7, [pc, #100]	@ 80301e0 <__ieee754_pow+0x280>
 803017e:	e7e7      	b.n	8030150 <__ieee754_pow+0x1f0>
 8030180:	f1b9 0f00 	cmp.w	r9, #0
 8030184:	dcf3      	bgt.n	803016e <__ieee754_pow+0x20e>
 8030186:	2000      	movs	r0, #0
 8030188:	b011      	add	sp, #68	@ 0x44
 803018a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803018e:	f002 be6b 	b.w	8032e68 <__math_uflow>
 8030192:	4598      	cmp	r8, r3
 8030194:	d20c      	bcs.n	80301b0 <__ieee754_pow+0x250>
 8030196:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 803019a:	2200      	movs	r2, #0
 803019c:	2300      	movs	r3, #0
 803019e:	f7d0 fc49 	bl	8000a34 <__aeabi_dcmplt>
 80301a2:	3800      	subs	r0, #0
 80301a4:	bf18      	it	ne
 80301a6:	2001      	movne	r0, #1
 80301a8:	f1b9 0f00 	cmp.w	r9, #0
 80301ac:	daec      	bge.n	8030188 <__ieee754_pow+0x228>
 80301ae:	e7df      	b.n	8030170 <__ieee754_pow+0x210>
 80301b0:	4b10      	ldr	r3, [pc, #64]	@ (80301f4 <__ieee754_pow+0x294>)
 80301b2:	4598      	cmp	r8, r3
 80301b4:	f04f 0200 	mov.w	r2, #0
 80301b8:	d924      	bls.n	8030204 <__ieee754_pow+0x2a4>
 80301ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80301be:	2300      	movs	r3, #0
 80301c0:	f7d0 fc38 	bl	8000a34 <__aeabi_dcmplt>
 80301c4:	3800      	subs	r0, #0
 80301c6:	bf18      	it	ne
 80301c8:	2001      	movne	r0, #1
 80301ca:	f1b9 0f00 	cmp.w	r9, #0
 80301ce:	dccf      	bgt.n	8030170 <__ieee754_pow+0x210>
 80301d0:	e7da      	b.n	8030188 <__ieee754_pow+0x228>
 80301d2:	bf00      	nop
 80301d4:	f3af 8000 	nop.w
 80301d8:	00000000 	.word	0x00000000
 80301dc:	3ff00000 	.word	0x3ff00000
 80301e0:	00000000 	.word	0x00000000
 80301e4:	bff00000 	.word	0xbff00000
 80301e8:	fff00000 	.word	0xfff00000
 80301ec:	7ff00000 	.word	0x7ff00000
 80301f0:	433fffff 	.word	0x433fffff
 80301f4:	3ff00000 	.word	0x3ff00000
 80301f8:	3fefffff 	.word	0x3fefffff
 80301fc:	3fe00000 	.word	0x3fe00000
 8030200:	43f00000 	.word	0x43f00000
 8030204:	4b5a      	ldr	r3, [pc, #360]	@ (8030370 <__ieee754_pow+0x410>)
 8030206:	f7cf ffeb 	bl	80001e0 <__aeabi_dsub>
 803020a:	a351      	add	r3, pc, #324	@ (adr r3, 8030350 <__ieee754_pow+0x3f0>)
 803020c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030210:	4604      	mov	r4, r0
 8030212:	460d      	mov	r5, r1
 8030214:	f7d0 f99c 	bl	8000550 <__aeabi_dmul>
 8030218:	a34f      	add	r3, pc, #316	@ (adr r3, 8030358 <__ieee754_pow+0x3f8>)
 803021a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803021e:	4606      	mov	r6, r0
 8030220:	460f      	mov	r7, r1
 8030222:	4620      	mov	r0, r4
 8030224:	4629      	mov	r1, r5
 8030226:	f7d0 f993 	bl	8000550 <__aeabi_dmul>
 803022a:	4b52      	ldr	r3, [pc, #328]	@ (8030374 <__ieee754_pow+0x414>)
 803022c:	4682      	mov	sl, r0
 803022e:	468b      	mov	fp, r1
 8030230:	2200      	movs	r2, #0
 8030232:	4620      	mov	r0, r4
 8030234:	4629      	mov	r1, r5
 8030236:	f7d0 f98b 	bl	8000550 <__aeabi_dmul>
 803023a:	4602      	mov	r2, r0
 803023c:	460b      	mov	r3, r1
 803023e:	a148      	add	r1, pc, #288	@ (adr r1, 8030360 <__ieee754_pow+0x400>)
 8030240:	e9d1 0100 	ldrd	r0, r1, [r1]
 8030244:	f7cf ffcc 	bl	80001e0 <__aeabi_dsub>
 8030248:	4622      	mov	r2, r4
 803024a:	462b      	mov	r3, r5
 803024c:	f7d0 f980 	bl	8000550 <__aeabi_dmul>
 8030250:	4602      	mov	r2, r0
 8030252:	460b      	mov	r3, r1
 8030254:	2000      	movs	r0, #0
 8030256:	4948      	ldr	r1, [pc, #288]	@ (8030378 <__ieee754_pow+0x418>)
 8030258:	f7cf ffc2 	bl	80001e0 <__aeabi_dsub>
 803025c:	4622      	mov	r2, r4
 803025e:	4680      	mov	r8, r0
 8030260:	4689      	mov	r9, r1
 8030262:	462b      	mov	r3, r5
 8030264:	4620      	mov	r0, r4
 8030266:	4629      	mov	r1, r5
 8030268:	f7d0 f972 	bl	8000550 <__aeabi_dmul>
 803026c:	4602      	mov	r2, r0
 803026e:	460b      	mov	r3, r1
 8030270:	4640      	mov	r0, r8
 8030272:	4649      	mov	r1, r9
 8030274:	f7d0 f96c 	bl	8000550 <__aeabi_dmul>
 8030278:	a33b      	add	r3, pc, #236	@ (adr r3, 8030368 <__ieee754_pow+0x408>)
 803027a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803027e:	f7d0 f967 	bl	8000550 <__aeabi_dmul>
 8030282:	4602      	mov	r2, r0
 8030284:	460b      	mov	r3, r1
 8030286:	4650      	mov	r0, sl
 8030288:	4659      	mov	r1, fp
 803028a:	f7cf ffa9 	bl	80001e0 <__aeabi_dsub>
 803028e:	4602      	mov	r2, r0
 8030290:	460b      	mov	r3, r1
 8030292:	4680      	mov	r8, r0
 8030294:	4689      	mov	r9, r1
 8030296:	4630      	mov	r0, r6
 8030298:	4639      	mov	r1, r7
 803029a:	f7cf ffa3 	bl	80001e4 <__adddf3>
 803029e:	2400      	movs	r4, #0
 80302a0:	4632      	mov	r2, r6
 80302a2:	463b      	mov	r3, r7
 80302a4:	4620      	mov	r0, r4
 80302a6:	460d      	mov	r5, r1
 80302a8:	f7cf ff9a 	bl	80001e0 <__aeabi_dsub>
 80302ac:	4602      	mov	r2, r0
 80302ae:	460b      	mov	r3, r1
 80302b0:	4640      	mov	r0, r8
 80302b2:	4649      	mov	r1, r9
 80302b4:	f7cf ff94 	bl	80001e0 <__aeabi_dsub>
 80302b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80302bc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80302c0:	2300      	movs	r3, #0
 80302c2:	9304      	str	r3, [sp, #16]
 80302c4:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 80302c8:	4606      	mov	r6, r0
 80302ca:	460f      	mov	r7, r1
 80302cc:	4652      	mov	r2, sl
 80302ce:	465b      	mov	r3, fp
 80302d0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80302d4:	f7cf ff84 	bl	80001e0 <__aeabi_dsub>
 80302d8:	4622      	mov	r2, r4
 80302da:	462b      	mov	r3, r5
 80302dc:	f7d0 f938 	bl	8000550 <__aeabi_dmul>
 80302e0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80302e4:	4680      	mov	r8, r0
 80302e6:	4689      	mov	r9, r1
 80302e8:	4630      	mov	r0, r6
 80302ea:	4639      	mov	r1, r7
 80302ec:	f7d0 f930 	bl	8000550 <__aeabi_dmul>
 80302f0:	4602      	mov	r2, r0
 80302f2:	460b      	mov	r3, r1
 80302f4:	4640      	mov	r0, r8
 80302f6:	4649      	mov	r1, r9
 80302f8:	f7cf ff74 	bl	80001e4 <__adddf3>
 80302fc:	4652      	mov	r2, sl
 80302fe:	465b      	mov	r3, fp
 8030300:	4606      	mov	r6, r0
 8030302:	460f      	mov	r7, r1
 8030304:	4620      	mov	r0, r4
 8030306:	4629      	mov	r1, r5
 8030308:	f7d0 f922 	bl	8000550 <__aeabi_dmul>
 803030c:	460b      	mov	r3, r1
 803030e:	4602      	mov	r2, r0
 8030310:	4680      	mov	r8, r0
 8030312:	4689      	mov	r9, r1
 8030314:	4630      	mov	r0, r6
 8030316:	4639      	mov	r1, r7
 8030318:	f7cf ff64 	bl	80001e4 <__adddf3>
 803031c:	4b17      	ldr	r3, [pc, #92]	@ (803037c <__ieee754_pow+0x41c>)
 803031e:	4299      	cmp	r1, r3
 8030320:	4604      	mov	r4, r0
 8030322:	460d      	mov	r5, r1
 8030324:	468a      	mov	sl, r1
 8030326:	468b      	mov	fp, r1
 8030328:	f340 82ef 	ble.w	803090a <__ieee754_pow+0x9aa>
 803032c:	f101 433f 	add.w	r3, r1, #3204448256	@ 0xbf000000
 8030330:	f503 03e0 	add.w	r3, r3, #7340032	@ 0x700000
 8030334:	4303      	orrs	r3, r0
 8030336:	f000 81e8 	beq.w	803070a <__ieee754_pow+0x7aa>
 803033a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 803033e:	2200      	movs	r2, #0
 8030340:	2300      	movs	r3, #0
 8030342:	f7d0 fb77 	bl	8000a34 <__aeabi_dcmplt>
 8030346:	3800      	subs	r0, #0
 8030348:	bf18      	it	ne
 803034a:	2001      	movne	r0, #1
 803034c:	e710      	b.n	8030170 <__ieee754_pow+0x210>
 803034e:	bf00      	nop
 8030350:	60000000 	.word	0x60000000
 8030354:	3ff71547 	.word	0x3ff71547
 8030358:	f85ddf44 	.word	0xf85ddf44
 803035c:	3e54ae0b 	.word	0x3e54ae0b
 8030360:	55555555 	.word	0x55555555
 8030364:	3fd55555 	.word	0x3fd55555
 8030368:	652b82fe 	.word	0x652b82fe
 803036c:	3ff71547 	.word	0x3ff71547
 8030370:	3ff00000 	.word	0x3ff00000
 8030374:	3fd00000 	.word	0x3fd00000
 8030378:	3fe00000 	.word	0x3fe00000
 803037c:	408fffff 	.word	0x408fffff
 8030380:	4bd5      	ldr	r3, [pc, #852]	@ (80306d8 <__ieee754_pow+0x778>)
 8030382:	402b      	ands	r3, r5
 8030384:	2200      	movs	r2, #0
 8030386:	b92b      	cbnz	r3, 8030394 <__ieee754_pow+0x434>
 8030388:	4bd4      	ldr	r3, [pc, #848]	@ (80306dc <__ieee754_pow+0x77c>)
 803038a:	f7d0 f8e1 	bl	8000550 <__aeabi_dmul>
 803038e:	f06f 0234 	mvn.w	r2, #52	@ 0x34
 8030392:	468b      	mov	fp, r1
 8030394:	ea4f 532b 	mov.w	r3, fp, asr #20
 8030398:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 803039c:	4413      	add	r3, r2
 803039e:	930a      	str	r3, [sp, #40]	@ 0x28
 80303a0:	4bcf      	ldr	r3, [pc, #828]	@ (80306e0 <__ieee754_pow+0x780>)
 80303a2:	f3cb 0b13 	ubfx	fp, fp, #0, #20
 80303a6:	f04b 557f 	orr.w	r5, fp, #1069547520	@ 0x3fc00000
 80303aa:	459b      	cmp	fp, r3
 80303ac:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 80303b0:	dd08      	ble.n	80303c4 <__ieee754_pow+0x464>
 80303b2:	4bcc      	ldr	r3, [pc, #816]	@ (80306e4 <__ieee754_pow+0x784>)
 80303b4:	459b      	cmp	fp, r3
 80303b6:	f340 81a5 	ble.w	8030704 <__ieee754_pow+0x7a4>
 80303ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80303bc:	3301      	adds	r3, #1
 80303be:	930a      	str	r3, [sp, #40]	@ 0x28
 80303c0:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
 80303c4:	f04f 0a00 	mov.w	sl, #0
 80303c8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80303cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80303ce:	4bc6      	ldr	r3, [pc, #792]	@ (80306e8 <__ieee754_pow+0x788>)
 80303d0:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80303d4:	ed93 7b00 	vldr	d7, [r3]
 80303d8:	4629      	mov	r1, r5
 80303da:	ec53 2b17 	vmov	r2, r3, d7
 80303de:	ed8d 7b06 	vstr	d7, [sp, #24]
 80303e2:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80303e6:	f7cf fefb 	bl	80001e0 <__aeabi_dsub>
 80303ea:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80303ee:	4606      	mov	r6, r0
 80303f0:	460f      	mov	r7, r1
 80303f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80303f6:	f7cf fef5 	bl	80001e4 <__adddf3>
 80303fa:	4602      	mov	r2, r0
 80303fc:	460b      	mov	r3, r1
 80303fe:	2000      	movs	r0, #0
 8030400:	49ba      	ldr	r1, [pc, #744]	@ (80306ec <__ieee754_pow+0x78c>)
 8030402:	f7d0 f9cf 	bl	80007a4 <__aeabi_ddiv>
 8030406:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 803040a:	4602      	mov	r2, r0
 803040c:	460b      	mov	r3, r1
 803040e:	4630      	mov	r0, r6
 8030410:	4639      	mov	r1, r7
 8030412:	f7d0 f89d 	bl	8000550 <__aeabi_dmul>
 8030416:	e9cd 0104 	strd	r0, r1, [sp, #16]
 803041a:	e9dd bc04 	ldrd	fp, ip, [sp, #16]
 803041e:	106d      	asrs	r5, r5, #1
 8030420:	f045 5500 	orr.w	r5, r5, #536870912	@ 0x20000000
 8030424:	f04f 0b00 	mov.w	fp, #0
 8030428:	f505 2500 	add.w	r5, r5, #524288	@ 0x80000
 803042c:	4661      	mov	r1, ip
 803042e:	2200      	movs	r2, #0
 8030430:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 8030434:	4658      	mov	r0, fp
 8030436:	46e1      	mov	r9, ip
 8030438:	e9cd bc0e 	strd	fp, ip, [sp, #56]	@ 0x38
 803043c:	4614      	mov	r4, r2
 803043e:	461d      	mov	r5, r3
 8030440:	f7d0 f886 	bl	8000550 <__aeabi_dmul>
 8030444:	4602      	mov	r2, r0
 8030446:	460b      	mov	r3, r1
 8030448:	4630      	mov	r0, r6
 803044a:	4639      	mov	r1, r7
 803044c:	f7cf fec8 	bl	80001e0 <__aeabi_dsub>
 8030450:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8030454:	4606      	mov	r6, r0
 8030456:	460f      	mov	r7, r1
 8030458:	4620      	mov	r0, r4
 803045a:	4629      	mov	r1, r5
 803045c:	f7cf fec0 	bl	80001e0 <__aeabi_dsub>
 8030460:	4602      	mov	r2, r0
 8030462:	460b      	mov	r3, r1
 8030464:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8030468:	f7cf feba 	bl	80001e0 <__aeabi_dsub>
 803046c:	465a      	mov	r2, fp
 803046e:	464b      	mov	r3, r9
 8030470:	f7d0 f86e 	bl	8000550 <__aeabi_dmul>
 8030474:	4602      	mov	r2, r0
 8030476:	460b      	mov	r3, r1
 8030478:	4630      	mov	r0, r6
 803047a:	4639      	mov	r1, r7
 803047c:	f7cf feb0 	bl	80001e0 <__aeabi_dsub>
 8030480:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8030484:	f7d0 f864 	bl	8000550 <__aeabi_dmul>
 8030488:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 803048c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8030490:	4610      	mov	r0, r2
 8030492:	4619      	mov	r1, r3
 8030494:	f7d0 f85c 	bl	8000550 <__aeabi_dmul>
 8030498:	a37d      	add	r3, pc, #500	@ (adr r3, 8030690 <__ieee754_pow+0x730>)
 803049a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803049e:	4604      	mov	r4, r0
 80304a0:	460d      	mov	r5, r1
 80304a2:	f7d0 f855 	bl	8000550 <__aeabi_dmul>
 80304a6:	a37c      	add	r3, pc, #496	@ (adr r3, 8030698 <__ieee754_pow+0x738>)
 80304a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80304ac:	f7cf fe9a 	bl	80001e4 <__adddf3>
 80304b0:	4622      	mov	r2, r4
 80304b2:	462b      	mov	r3, r5
 80304b4:	f7d0 f84c 	bl	8000550 <__aeabi_dmul>
 80304b8:	a379      	add	r3, pc, #484	@ (adr r3, 80306a0 <__ieee754_pow+0x740>)
 80304ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80304be:	f7cf fe91 	bl	80001e4 <__adddf3>
 80304c2:	4622      	mov	r2, r4
 80304c4:	462b      	mov	r3, r5
 80304c6:	f7d0 f843 	bl	8000550 <__aeabi_dmul>
 80304ca:	a377      	add	r3, pc, #476	@ (adr r3, 80306a8 <__ieee754_pow+0x748>)
 80304cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80304d0:	f7cf fe88 	bl	80001e4 <__adddf3>
 80304d4:	4622      	mov	r2, r4
 80304d6:	462b      	mov	r3, r5
 80304d8:	f7d0 f83a 	bl	8000550 <__aeabi_dmul>
 80304dc:	a374      	add	r3, pc, #464	@ (adr r3, 80306b0 <__ieee754_pow+0x750>)
 80304de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80304e2:	f7cf fe7f 	bl	80001e4 <__adddf3>
 80304e6:	4622      	mov	r2, r4
 80304e8:	462b      	mov	r3, r5
 80304ea:	f7d0 f831 	bl	8000550 <__aeabi_dmul>
 80304ee:	a372      	add	r3, pc, #456	@ (adr r3, 80306b8 <__ieee754_pow+0x758>)
 80304f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80304f4:	f7cf fe76 	bl	80001e4 <__adddf3>
 80304f8:	4622      	mov	r2, r4
 80304fa:	4606      	mov	r6, r0
 80304fc:	460f      	mov	r7, r1
 80304fe:	462b      	mov	r3, r5
 8030500:	4620      	mov	r0, r4
 8030502:	4629      	mov	r1, r5
 8030504:	f7d0 f824 	bl	8000550 <__aeabi_dmul>
 8030508:	4602      	mov	r2, r0
 803050a:	460b      	mov	r3, r1
 803050c:	4630      	mov	r0, r6
 803050e:	4639      	mov	r1, r7
 8030510:	f7d0 f81e 	bl	8000550 <__aeabi_dmul>
 8030514:	465a      	mov	r2, fp
 8030516:	4604      	mov	r4, r0
 8030518:	460d      	mov	r5, r1
 803051a:	464b      	mov	r3, r9
 803051c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8030520:	f7cf fe60 	bl	80001e4 <__adddf3>
 8030524:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8030528:	f7d0 f812 	bl	8000550 <__aeabi_dmul>
 803052c:	4622      	mov	r2, r4
 803052e:	462b      	mov	r3, r5
 8030530:	f7cf fe58 	bl	80001e4 <__adddf3>
 8030534:	465a      	mov	r2, fp
 8030536:	e9cd 0108 	strd	r0, r1, [sp, #32]
 803053a:	464b      	mov	r3, r9
 803053c:	4658      	mov	r0, fp
 803053e:	4649      	mov	r1, r9
 8030540:	f7d0 f806 	bl	8000550 <__aeabi_dmul>
 8030544:	4b6a      	ldr	r3, [pc, #424]	@ (80306f0 <__ieee754_pow+0x790>)
 8030546:	2200      	movs	r2, #0
 8030548:	4606      	mov	r6, r0
 803054a:	460f      	mov	r7, r1
 803054c:	f7cf fe4a 	bl	80001e4 <__adddf3>
 8030550:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8030554:	f7cf fe46 	bl	80001e4 <__adddf3>
 8030558:	46d8      	mov	r8, fp
 803055a:	e9dd bc0e 	ldrd	fp, ip, [sp, #56]	@ 0x38
 803055e:	460d      	mov	r5, r1
 8030560:	465a      	mov	r2, fp
 8030562:	460b      	mov	r3, r1
 8030564:	4640      	mov	r0, r8
 8030566:	4649      	mov	r1, r9
 8030568:	e9cd bc0c 	strd	fp, ip, [sp, #48]	@ 0x30
 803056c:	f7cf fff0 	bl	8000550 <__aeabi_dmul>
 8030570:	465c      	mov	r4, fp
 8030572:	4680      	mov	r8, r0
 8030574:	4689      	mov	r9, r1
 8030576:	4b5e      	ldr	r3, [pc, #376]	@ (80306f0 <__ieee754_pow+0x790>)
 8030578:	2200      	movs	r2, #0
 803057a:	4620      	mov	r0, r4
 803057c:	4629      	mov	r1, r5
 803057e:	f7cf fe2f 	bl	80001e0 <__aeabi_dsub>
 8030582:	4632      	mov	r2, r6
 8030584:	463b      	mov	r3, r7
 8030586:	f7cf fe2b 	bl	80001e0 <__aeabi_dsub>
 803058a:	4602      	mov	r2, r0
 803058c:	460b      	mov	r3, r1
 803058e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8030592:	f7cf fe25 	bl	80001e0 <__aeabi_dsub>
 8030596:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 803059a:	f7cf ffd9 	bl	8000550 <__aeabi_dmul>
 803059e:	4622      	mov	r2, r4
 80305a0:	4606      	mov	r6, r0
 80305a2:	460f      	mov	r7, r1
 80305a4:	462b      	mov	r3, r5
 80305a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80305aa:	f7cf ffd1 	bl	8000550 <__aeabi_dmul>
 80305ae:	4602      	mov	r2, r0
 80305b0:	460b      	mov	r3, r1
 80305b2:	4630      	mov	r0, r6
 80305b4:	4639      	mov	r1, r7
 80305b6:	f7cf fe15 	bl	80001e4 <__adddf3>
 80305ba:	4606      	mov	r6, r0
 80305bc:	460f      	mov	r7, r1
 80305be:	4602      	mov	r2, r0
 80305c0:	460b      	mov	r3, r1
 80305c2:	4640      	mov	r0, r8
 80305c4:	4649      	mov	r1, r9
 80305c6:	f7cf fe0d 	bl	80001e4 <__adddf3>
 80305ca:	e9dd bc0c 	ldrd	fp, ip, [sp, #48]	@ 0x30
 80305ce:	a33c      	add	r3, pc, #240	@ (adr r3, 80306c0 <__ieee754_pow+0x760>)
 80305d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80305d4:	4658      	mov	r0, fp
 80305d6:	e9cd bc08 	strd	fp, ip, [sp, #32]
 80305da:	460d      	mov	r5, r1
 80305dc:	f7cf ffb8 	bl	8000550 <__aeabi_dmul>
 80305e0:	465c      	mov	r4, fp
 80305e2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80305e6:	4642      	mov	r2, r8
 80305e8:	464b      	mov	r3, r9
 80305ea:	4620      	mov	r0, r4
 80305ec:	4629      	mov	r1, r5
 80305ee:	f7cf fdf7 	bl	80001e0 <__aeabi_dsub>
 80305f2:	4602      	mov	r2, r0
 80305f4:	460b      	mov	r3, r1
 80305f6:	4630      	mov	r0, r6
 80305f8:	4639      	mov	r1, r7
 80305fa:	f7cf fdf1 	bl	80001e0 <__aeabi_dsub>
 80305fe:	a332      	add	r3, pc, #200	@ (adr r3, 80306c8 <__ieee754_pow+0x768>)
 8030600:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030604:	f7cf ffa4 	bl	8000550 <__aeabi_dmul>
 8030608:	a331      	add	r3, pc, #196	@ (adr r3, 80306d0 <__ieee754_pow+0x770>)
 803060a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803060e:	4606      	mov	r6, r0
 8030610:	460f      	mov	r7, r1
 8030612:	4620      	mov	r0, r4
 8030614:	4629      	mov	r1, r5
 8030616:	f7cf ff9b 	bl	8000550 <__aeabi_dmul>
 803061a:	4602      	mov	r2, r0
 803061c:	460b      	mov	r3, r1
 803061e:	4630      	mov	r0, r6
 8030620:	4639      	mov	r1, r7
 8030622:	f7cf fddf 	bl	80001e4 <__adddf3>
 8030626:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8030628:	4b32      	ldr	r3, [pc, #200]	@ (80306f4 <__ieee754_pow+0x794>)
 803062a:	4413      	add	r3, r2
 803062c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030630:	f7cf fdd8 	bl	80001e4 <__adddf3>
 8030634:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8030638:	980a      	ldr	r0, [sp, #40]	@ 0x28
 803063a:	f7cf ff1f 	bl	800047c <__aeabi_i2d>
 803063e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8030640:	4b2d      	ldr	r3, [pc, #180]	@ (80306f8 <__ieee754_pow+0x798>)
 8030642:	4413      	add	r3, r2
 8030644:	e9d3 8900 	ldrd	r8, r9, [r3]
 8030648:	4606      	mov	r6, r0
 803064a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 803064e:	460f      	mov	r7, r1
 8030650:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8030654:	f7cf fdc6 	bl	80001e4 <__adddf3>
 8030658:	4642      	mov	r2, r8
 803065a:	464b      	mov	r3, r9
 803065c:	f7cf fdc2 	bl	80001e4 <__adddf3>
 8030660:	4632      	mov	r2, r6
 8030662:	463b      	mov	r3, r7
 8030664:	f7cf fdbe 	bl	80001e4 <__adddf3>
 8030668:	e9dd bc08 	ldrd	fp, ip, [sp, #32]
 803066c:	4632      	mov	r2, r6
 803066e:	463b      	mov	r3, r7
 8030670:	4658      	mov	r0, fp
 8030672:	460d      	mov	r5, r1
 8030674:	f7cf fdb4 	bl	80001e0 <__aeabi_dsub>
 8030678:	4642      	mov	r2, r8
 803067a:	464b      	mov	r3, r9
 803067c:	f7cf fdb0 	bl	80001e0 <__aeabi_dsub>
 8030680:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8030684:	f7cf fdac 	bl	80001e0 <__aeabi_dsub>
 8030688:	465c      	mov	r4, fp
 803068a:	4602      	mov	r2, r0
 803068c:	e036      	b.n	80306fc <__ieee754_pow+0x79c>
 803068e:	bf00      	nop
 8030690:	4a454eef 	.word	0x4a454eef
 8030694:	3fca7e28 	.word	0x3fca7e28
 8030698:	93c9db65 	.word	0x93c9db65
 803069c:	3fcd864a 	.word	0x3fcd864a
 80306a0:	a91d4101 	.word	0xa91d4101
 80306a4:	3fd17460 	.word	0x3fd17460
 80306a8:	518f264d 	.word	0x518f264d
 80306ac:	3fd55555 	.word	0x3fd55555
 80306b0:	db6fabff 	.word	0xdb6fabff
 80306b4:	3fdb6db6 	.word	0x3fdb6db6
 80306b8:	33333303 	.word	0x33333303
 80306bc:	3fe33333 	.word	0x3fe33333
 80306c0:	e0000000 	.word	0xe0000000
 80306c4:	3feec709 	.word	0x3feec709
 80306c8:	dc3a03fd 	.word	0xdc3a03fd
 80306cc:	3feec709 	.word	0x3feec709
 80306d0:	145b01f5 	.word	0x145b01f5
 80306d4:	be3e2fe0 	.word	0xbe3e2fe0
 80306d8:	7ff00000 	.word	0x7ff00000
 80306dc:	43400000 	.word	0x43400000
 80306e0:	0003988e 	.word	0x0003988e
 80306e4:	000bb679 	.word	0x000bb679
 80306e8:	0803af40 	.word	0x0803af40
 80306ec:	3ff00000 	.word	0x3ff00000
 80306f0:	40080000 	.word	0x40080000
 80306f4:	0803af20 	.word	0x0803af20
 80306f8:	0803af30 	.word	0x0803af30
 80306fc:	460b      	mov	r3, r1
 80306fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8030702:	e5d7      	b.n	80302b4 <__ieee754_pow+0x354>
 8030704:	f04f 0a01 	mov.w	sl, #1
 8030708:	e65e      	b.n	80303c8 <__ieee754_pow+0x468>
 803070a:	a3b4      	add	r3, pc, #720	@ (adr r3, 80309dc <__ieee754_pow+0xa7c>)
 803070c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030710:	4630      	mov	r0, r6
 8030712:	4639      	mov	r1, r7
 8030714:	f7cf fd66 	bl	80001e4 <__adddf3>
 8030718:	4642      	mov	r2, r8
 803071a:	e9cd 0100 	strd	r0, r1, [sp]
 803071e:	464b      	mov	r3, r9
 8030720:	4620      	mov	r0, r4
 8030722:	4629      	mov	r1, r5
 8030724:	f7cf fd5c 	bl	80001e0 <__aeabi_dsub>
 8030728:	4602      	mov	r2, r0
 803072a:	460b      	mov	r3, r1
 803072c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8030730:	f7d0 f99e 	bl	8000a70 <__aeabi_dcmpgt>
 8030734:	2800      	cmp	r0, #0
 8030736:	f47f ae00 	bne.w	803033a <__ieee754_pow+0x3da>
 803073a:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 803073e:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8030742:	f2aa 3afe 	subw	sl, sl, #1022	@ 0x3fe
 8030746:	fa43 fa0a 	asr.w	sl, r3, sl
 803074a:	44da      	add	sl, fp
 803074c:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8030750:	489d      	ldr	r0, [pc, #628]	@ (80309c8 <__ieee754_pow+0xa68>)
 8030752:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 8030756:	4108      	asrs	r0, r1
 8030758:	ea00 030a 	and.w	r3, r0, sl
 803075c:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8030760:	f1c1 0114 	rsb	r1, r1, #20
 8030764:	f44a 1a80 	orr.w	sl, sl, #1048576	@ 0x100000
 8030768:	fa4a fa01 	asr.w	sl, sl, r1
 803076c:	f1bb 0f00 	cmp.w	fp, #0
 8030770:	4640      	mov	r0, r8
 8030772:	4649      	mov	r1, r9
 8030774:	f04f 0200 	mov.w	r2, #0
 8030778:	bfb8      	it	lt
 803077a:	f1ca 0a00 	rsblt	sl, sl, #0
 803077e:	f7cf fd2f 	bl	80001e0 <__aeabi_dsub>
 8030782:	4680      	mov	r8, r0
 8030784:	4689      	mov	r9, r1
 8030786:	4632      	mov	r2, r6
 8030788:	463b      	mov	r3, r7
 803078a:	4640      	mov	r0, r8
 803078c:	4649      	mov	r1, r9
 803078e:	f7cf fd29 	bl	80001e4 <__adddf3>
 8030792:	2400      	movs	r4, #0
 8030794:	a37c      	add	r3, pc, #496	@ (adr r3, 8030988 <__ieee754_pow+0xa28>)
 8030796:	e9d3 2300 	ldrd	r2, r3, [r3]
 803079a:	4620      	mov	r0, r4
 803079c:	460d      	mov	r5, r1
 803079e:	f7cf fed7 	bl	8000550 <__aeabi_dmul>
 80307a2:	4642      	mov	r2, r8
 80307a4:	e9cd 0100 	strd	r0, r1, [sp]
 80307a8:	464b      	mov	r3, r9
 80307aa:	4620      	mov	r0, r4
 80307ac:	4629      	mov	r1, r5
 80307ae:	f7cf fd17 	bl	80001e0 <__aeabi_dsub>
 80307b2:	4602      	mov	r2, r0
 80307b4:	460b      	mov	r3, r1
 80307b6:	4630      	mov	r0, r6
 80307b8:	4639      	mov	r1, r7
 80307ba:	f7cf fd11 	bl	80001e0 <__aeabi_dsub>
 80307be:	a374      	add	r3, pc, #464	@ (adr r3, 8030990 <__ieee754_pow+0xa30>)
 80307c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80307c4:	f7cf fec4 	bl	8000550 <__aeabi_dmul>
 80307c8:	a373      	add	r3, pc, #460	@ (adr r3, 8030998 <__ieee754_pow+0xa38>)
 80307ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80307ce:	4680      	mov	r8, r0
 80307d0:	4689      	mov	r9, r1
 80307d2:	4620      	mov	r0, r4
 80307d4:	4629      	mov	r1, r5
 80307d6:	f7cf febb 	bl	8000550 <__aeabi_dmul>
 80307da:	4602      	mov	r2, r0
 80307dc:	460b      	mov	r3, r1
 80307de:	4640      	mov	r0, r8
 80307e0:	4649      	mov	r1, r9
 80307e2:	f7cf fcff 	bl	80001e4 <__adddf3>
 80307e6:	4604      	mov	r4, r0
 80307e8:	460d      	mov	r5, r1
 80307ea:	4602      	mov	r2, r0
 80307ec:	460b      	mov	r3, r1
 80307ee:	e9dd 0100 	ldrd	r0, r1, [sp]
 80307f2:	f7cf fcf7 	bl	80001e4 <__adddf3>
 80307f6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80307fa:	4680      	mov	r8, r0
 80307fc:	4689      	mov	r9, r1
 80307fe:	f7cf fcef 	bl	80001e0 <__aeabi_dsub>
 8030802:	4602      	mov	r2, r0
 8030804:	460b      	mov	r3, r1
 8030806:	4620      	mov	r0, r4
 8030808:	4629      	mov	r1, r5
 803080a:	f7cf fce9 	bl	80001e0 <__aeabi_dsub>
 803080e:	4642      	mov	r2, r8
 8030810:	4606      	mov	r6, r0
 8030812:	460f      	mov	r7, r1
 8030814:	464b      	mov	r3, r9
 8030816:	4640      	mov	r0, r8
 8030818:	4649      	mov	r1, r9
 803081a:	f7cf fe99 	bl	8000550 <__aeabi_dmul>
 803081e:	a360      	add	r3, pc, #384	@ (adr r3, 80309a0 <__ieee754_pow+0xa40>)
 8030820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030824:	4604      	mov	r4, r0
 8030826:	460d      	mov	r5, r1
 8030828:	f7cf fe92 	bl	8000550 <__aeabi_dmul>
 803082c:	a35e      	add	r3, pc, #376	@ (adr r3, 80309a8 <__ieee754_pow+0xa48>)
 803082e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030832:	f7cf fcd5 	bl	80001e0 <__aeabi_dsub>
 8030836:	4622      	mov	r2, r4
 8030838:	462b      	mov	r3, r5
 803083a:	f7cf fe89 	bl	8000550 <__aeabi_dmul>
 803083e:	a35c      	add	r3, pc, #368	@ (adr r3, 80309b0 <__ieee754_pow+0xa50>)
 8030840:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030844:	f7cf fcce 	bl	80001e4 <__adddf3>
 8030848:	4622      	mov	r2, r4
 803084a:	462b      	mov	r3, r5
 803084c:	f7cf fe80 	bl	8000550 <__aeabi_dmul>
 8030850:	a359      	add	r3, pc, #356	@ (adr r3, 80309b8 <__ieee754_pow+0xa58>)
 8030852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030856:	f7cf fcc3 	bl	80001e0 <__aeabi_dsub>
 803085a:	4622      	mov	r2, r4
 803085c:	462b      	mov	r3, r5
 803085e:	f7cf fe77 	bl	8000550 <__aeabi_dmul>
 8030862:	a357      	add	r3, pc, #348	@ (adr r3, 80309c0 <__ieee754_pow+0xa60>)
 8030864:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030868:	f7cf fcbc 	bl	80001e4 <__adddf3>
 803086c:	4622      	mov	r2, r4
 803086e:	462b      	mov	r3, r5
 8030870:	f7cf fe6e 	bl	8000550 <__aeabi_dmul>
 8030874:	4602      	mov	r2, r0
 8030876:	460b      	mov	r3, r1
 8030878:	4640      	mov	r0, r8
 803087a:	4649      	mov	r1, r9
 803087c:	f7cf fcb0 	bl	80001e0 <__aeabi_dsub>
 8030880:	4604      	mov	r4, r0
 8030882:	460d      	mov	r5, r1
 8030884:	4602      	mov	r2, r0
 8030886:	460b      	mov	r3, r1
 8030888:	4640      	mov	r0, r8
 803088a:	4649      	mov	r1, r9
 803088c:	f7cf fe60 	bl	8000550 <__aeabi_dmul>
 8030890:	2200      	movs	r2, #0
 8030892:	e9cd 0100 	strd	r0, r1, [sp]
 8030896:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 803089a:	4620      	mov	r0, r4
 803089c:	4629      	mov	r1, r5
 803089e:	f7cf fc9f 	bl	80001e0 <__aeabi_dsub>
 80308a2:	4602      	mov	r2, r0
 80308a4:	460b      	mov	r3, r1
 80308a6:	e9dd 0100 	ldrd	r0, r1, [sp]
 80308aa:	f7cf ff7b 	bl	80007a4 <__aeabi_ddiv>
 80308ae:	4632      	mov	r2, r6
 80308b0:	4604      	mov	r4, r0
 80308b2:	460d      	mov	r5, r1
 80308b4:	463b      	mov	r3, r7
 80308b6:	4640      	mov	r0, r8
 80308b8:	4649      	mov	r1, r9
 80308ba:	f7cf fe49 	bl	8000550 <__aeabi_dmul>
 80308be:	4632      	mov	r2, r6
 80308c0:	463b      	mov	r3, r7
 80308c2:	f7cf fc8f 	bl	80001e4 <__adddf3>
 80308c6:	4602      	mov	r2, r0
 80308c8:	460b      	mov	r3, r1
 80308ca:	4620      	mov	r0, r4
 80308cc:	4629      	mov	r1, r5
 80308ce:	f7cf fc87 	bl	80001e0 <__aeabi_dsub>
 80308d2:	4642      	mov	r2, r8
 80308d4:	464b      	mov	r3, r9
 80308d6:	f7cf fc83 	bl	80001e0 <__aeabi_dsub>
 80308da:	460b      	mov	r3, r1
 80308dc:	4602      	mov	r2, r0
 80308de:	493b      	ldr	r1, [pc, #236]	@ (80309cc <__ieee754_pow+0xa6c>)
 80308e0:	2000      	movs	r0, #0
 80308e2:	f7cf fc7d 	bl	80001e0 <__aeabi_dsub>
 80308e6:	ec41 0b10 	vmov	d0, r0, r1
 80308ea:	ee10 3a90 	vmov	r3, s1
 80308ee:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80308f2:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80308f6:	da30      	bge.n	803095a <__ieee754_pow+0x9fa>
 80308f8:	4650      	mov	r0, sl
 80308fa:	f001 ffd9 	bl	80328b0 <scalbn>
 80308fe:	ec51 0b10 	vmov	r0, r1, d0
 8030902:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8030906:	f7ff bbd2 	b.w	80300ae <__ieee754_pow+0x14e>
 803090a:	4c31      	ldr	r4, [pc, #196]	@ (80309d0 <__ieee754_pow+0xa70>)
 803090c:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8030910:	42a3      	cmp	r3, r4
 8030912:	d91a      	bls.n	803094a <__ieee754_pow+0x9ea>
 8030914:	4b2f      	ldr	r3, [pc, #188]	@ (80309d4 <__ieee754_pow+0xa74>)
 8030916:	440b      	add	r3, r1
 8030918:	4303      	orrs	r3, r0
 803091a:	d009      	beq.n	8030930 <__ieee754_pow+0x9d0>
 803091c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030920:	2200      	movs	r2, #0
 8030922:	2300      	movs	r3, #0
 8030924:	f7d0 f886 	bl	8000a34 <__aeabi_dcmplt>
 8030928:	3800      	subs	r0, #0
 803092a:	bf18      	it	ne
 803092c:	2001      	movne	r0, #1
 803092e:	e42b      	b.n	8030188 <__ieee754_pow+0x228>
 8030930:	4642      	mov	r2, r8
 8030932:	464b      	mov	r3, r9
 8030934:	f7cf fc54 	bl	80001e0 <__aeabi_dsub>
 8030938:	4632      	mov	r2, r6
 803093a:	463b      	mov	r3, r7
 803093c:	f7d0 f88e 	bl	8000a5c <__aeabi_dcmpge>
 8030940:	2800      	cmp	r0, #0
 8030942:	d1eb      	bne.n	803091c <__ieee754_pow+0x9bc>
 8030944:	f8df a09c 	ldr.w	sl, [pc, #156]	@ 80309e4 <__ieee754_pow+0xa84>
 8030948:	e6f7      	b.n	803073a <__ieee754_pow+0x7da>
 803094a:	469a      	mov	sl, r3
 803094c:	4b22      	ldr	r3, [pc, #136]	@ (80309d8 <__ieee754_pow+0xa78>)
 803094e:	459a      	cmp	sl, r3
 8030950:	f63f aef3 	bhi.w	803073a <__ieee754_pow+0x7da>
 8030954:	f8dd a010 	ldr.w	sl, [sp, #16]
 8030958:	e715      	b.n	8030786 <__ieee754_pow+0x826>
 803095a:	ec51 0b10 	vmov	r0, r1, d0
 803095e:	4619      	mov	r1, r3
 8030960:	e7cf      	b.n	8030902 <__ieee754_pow+0x9a2>
 8030962:	491a      	ldr	r1, [pc, #104]	@ (80309cc <__ieee754_pow+0xa6c>)
 8030964:	2000      	movs	r0, #0
 8030966:	f7ff bb18 	b.w	802ff9a <__ieee754_pow+0x3a>
 803096a:	2000      	movs	r0, #0
 803096c:	2100      	movs	r1, #0
 803096e:	f7ff bb14 	b.w	802ff9a <__ieee754_pow+0x3a>
 8030972:	4630      	mov	r0, r6
 8030974:	4639      	mov	r1, r7
 8030976:	f7ff bb10 	b.w	802ff9a <__ieee754_pow+0x3a>
 803097a:	460c      	mov	r4, r1
 803097c:	f7ff bb5e 	b.w	803003c <__ieee754_pow+0xdc>
 8030980:	2400      	movs	r4, #0
 8030982:	f7ff bb49 	b.w	8030018 <__ieee754_pow+0xb8>
 8030986:	bf00      	nop
 8030988:	00000000 	.word	0x00000000
 803098c:	3fe62e43 	.word	0x3fe62e43
 8030990:	fefa39ef 	.word	0xfefa39ef
 8030994:	3fe62e42 	.word	0x3fe62e42
 8030998:	0ca86c39 	.word	0x0ca86c39
 803099c:	be205c61 	.word	0xbe205c61
 80309a0:	72bea4d0 	.word	0x72bea4d0
 80309a4:	3e663769 	.word	0x3e663769
 80309a8:	c5d26bf1 	.word	0xc5d26bf1
 80309ac:	3ebbbd41 	.word	0x3ebbbd41
 80309b0:	af25de2c 	.word	0xaf25de2c
 80309b4:	3f11566a 	.word	0x3f11566a
 80309b8:	16bebd93 	.word	0x16bebd93
 80309bc:	3f66c16c 	.word	0x3f66c16c
 80309c0:	5555553e 	.word	0x5555553e
 80309c4:	3fc55555 	.word	0x3fc55555
 80309c8:	fff00000 	.word	0xfff00000
 80309cc:	3ff00000 	.word	0x3ff00000
 80309d0:	4090cbff 	.word	0x4090cbff
 80309d4:	3f6f3400 	.word	0x3f6f3400
 80309d8:	3fe00000 	.word	0x3fe00000
 80309dc:	652b82fe 	.word	0x652b82fe
 80309e0:	3c971547 	.word	0x3c971547
 80309e4:	4090cc00 	.word	0x4090cc00

080309e8 <__ieee754_rem_pio2>:
 80309e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80309ec:	ec57 6b10 	vmov	r6, r7, d0
 80309f0:	4bc5      	ldr	r3, [pc, #788]	@ (8030d08 <__ieee754_rem_pio2+0x320>)
 80309f2:	b08d      	sub	sp, #52	@ 0x34
 80309f4:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 80309f8:	4598      	cmp	r8, r3
 80309fa:	4604      	mov	r4, r0
 80309fc:	9704      	str	r7, [sp, #16]
 80309fe:	d807      	bhi.n	8030a10 <__ieee754_rem_pio2+0x28>
 8030a00:	2200      	movs	r2, #0
 8030a02:	2300      	movs	r3, #0
 8030a04:	ed80 0b00 	vstr	d0, [r0]
 8030a08:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8030a0c:	2500      	movs	r5, #0
 8030a0e:	e028      	b.n	8030a62 <__ieee754_rem_pio2+0x7a>
 8030a10:	4bbe      	ldr	r3, [pc, #760]	@ (8030d0c <__ieee754_rem_pio2+0x324>)
 8030a12:	4598      	cmp	r8, r3
 8030a14:	d878      	bhi.n	8030b08 <__ieee754_rem_pio2+0x120>
 8030a16:	9b04      	ldr	r3, [sp, #16]
 8030a18:	4dbd      	ldr	r5, [pc, #756]	@ (8030d10 <__ieee754_rem_pio2+0x328>)
 8030a1a:	2b00      	cmp	r3, #0
 8030a1c:	4630      	mov	r0, r6
 8030a1e:	a3ac      	add	r3, pc, #688	@ (adr r3, 8030cd0 <__ieee754_rem_pio2+0x2e8>)
 8030a20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a24:	4639      	mov	r1, r7
 8030a26:	dd38      	ble.n	8030a9a <__ieee754_rem_pio2+0xb2>
 8030a28:	f7cf fbda 	bl	80001e0 <__aeabi_dsub>
 8030a2c:	45a8      	cmp	r8, r5
 8030a2e:	4606      	mov	r6, r0
 8030a30:	460f      	mov	r7, r1
 8030a32:	d01a      	beq.n	8030a6a <__ieee754_rem_pio2+0x82>
 8030a34:	a3a8      	add	r3, pc, #672	@ (adr r3, 8030cd8 <__ieee754_rem_pio2+0x2f0>)
 8030a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a3a:	f7cf fbd1 	bl	80001e0 <__aeabi_dsub>
 8030a3e:	4602      	mov	r2, r0
 8030a40:	460b      	mov	r3, r1
 8030a42:	4680      	mov	r8, r0
 8030a44:	4689      	mov	r9, r1
 8030a46:	4630      	mov	r0, r6
 8030a48:	4639      	mov	r1, r7
 8030a4a:	f7cf fbc9 	bl	80001e0 <__aeabi_dsub>
 8030a4e:	a3a2      	add	r3, pc, #648	@ (adr r3, 8030cd8 <__ieee754_rem_pio2+0x2f0>)
 8030a50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a54:	f7cf fbc4 	bl	80001e0 <__aeabi_dsub>
 8030a58:	e9c4 8900 	strd	r8, r9, [r4]
 8030a5c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8030a60:	2501      	movs	r5, #1
 8030a62:	4628      	mov	r0, r5
 8030a64:	b00d      	add	sp, #52	@ 0x34
 8030a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030a6a:	a39d      	add	r3, pc, #628	@ (adr r3, 8030ce0 <__ieee754_rem_pio2+0x2f8>)
 8030a6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a70:	f7cf fbb6 	bl	80001e0 <__aeabi_dsub>
 8030a74:	a39c      	add	r3, pc, #624	@ (adr r3, 8030ce8 <__ieee754_rem_pio2+0x300>)
 8030a76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a7a:	4606      	mov	r6, r0
 8030a7c:	460f      	mov	r7, r1
 8030a7e:	f7cf fbaf 	bl	80001e0 <__aeabi_dsub>
 8030a82:	4602      	mov	r2, r0
 8030a84:	460b      	mov	r3, r1
 8030a86:	4680      	mov	r8, r0
 8030a88:	4689      	mov	r9, r1
 8030a8a:	4630      	mov	r0, r6
 8030a8c:	4639      	mov	r1, r7
 8030a8e:	f7cf fba7 	bl	80001e0 <__aeabi_dsub>
 8030a92:	a395      	add	r3, pc, #596	@ (adr r3, 8030ce8 <__ieee754_rem_pio2+0x300>)
 8030a94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030a98:	e7dc      	b.n	8030a54 <__ieee754_rem_pio2+0x6c>
 8030a9a:	f7cf fba3 	bl	80001e4 <__adddf3>
 8030a9e:	45a8      	cmp	r8, r5
 8030aa0:	4606      	mov	r6, r0
 8030aa2:	460f      	mov	r7, r1
 8030aa4:	d018      	beq.n	8030ad8 <__ieee754_rem_pio2+0xf0>
 8030aa6:	a38c      	add	r3, pc, #560	@ (adr r3, 8030cd8 <__ieee754_rem_pio2+0x2f0>)
 8030aa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030aac:	f7cf fb9a 	bl	80001e4 <__adddf3>
 8030ab0:	4602      	mov	r2, r0
 8030ab2:	460b      	mov	r3, r1
 8030ab4:	4680      	mov	r8, r0
 8030ab6:	4689      	mov	r9, r1
 8030ab8:	4630      	mov	r0, r6
 8030aba:	4639      	mov	r1, r7
 8030abc:	f7cf fb90 	bl	80001e0 <__aeabi_dsub>
 8030ac0:	a385      	add	r3, pc, #532	@ (adr r3, 8030cd8 <__ieee754_rem_pio2+0x2f0>)
 8030ac2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030ac6:	f7cf fb8d 	bl	80001e4 <__adddf3>
 8030aca:	f04f 35ff 	mov.w	r5, #4294967295
 8030ace:	e9c4 8900 	strd	r8, r9, [r4]
 8030ad2:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8030ad6:	e7c4      	b.n	8030a62 <__ieee754_rem_pio2+0x7a>
 8030ad8:	a381      	add	r3, pc, #516	@ (adr r3, 8030ce0 <__ieee754_rem_pio2+0x2f8>)
 8030ada:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030ade:	f7cf fb81 	bl	80001e4 <__adddf3>
 8030ae2:	a381      	add	r3, pc, #516	@ (adr r3, 8030ce8 <__ieee754_rem_pio2+0x300>)
 8030ae4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030ae8:	4606      	mov	r6, r0
 8030aea:	460f      	mov	r7, r1
 8030aec:	f7cf fb7a 	bl	80001e4 <__adddf3>
 8030af0:	4602      	mov	r2, r0
 8030af2:	460b      	mov	r3, r1
 8030af4:	4680      	mov	r8, r0
 8030af6:	4689      	mov	r9, r1
 8030af8:	4630      	mov	r0, r6
 8030afa:	4639      	mov	r1, r7
 8030afc:	f7cf fb70 	bl	80001e0 <__aeabi_dsub>
 8030b00:	a379      	add	r3, pc, #484	@ (adr r3, 8030ce8 <__ieee754_rem_pio2+0x300>)
 8030b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030b06:	e7de      	b.n	8030ac6 <__ieee754_rem_pio2+0xde>
 8030b08:	4b82      	ldr	r3, [pc, #520]	@ (8030d14 <__ieee754_rem_pio2+0x32c>)
 8030b0a:	4598      	cmp	r8, r3
 8030b0c:	f200 80d1 	bhi.w	8030cb2 <__ieee754_rem_pio2+0x2ca>
 8030b10:	f000 fbba 	bl	8031288 <fabs>
 8030b14:	ec57 6b10 	vmov	r6, r7, d0
 8030b18:	a375      	add	r3, pc, #468	@ (adr r3, 8030cf0 <__ieee754_rem_pio2+0x308>)
 8030b1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030b1e:	4630      	mov	r0, r6
 8030b20:	4639      	mov	r1, r7
 8030b22:	f7cf fd15 	bl	8000550 <__aeabi_dmul>
 8030b26:	4b7c      	ldr	r3, [pc, #496]	@ (8030d18 <__ieee754_rem_pio2+0x330>)
 8030b28:	2200      	movs	r2, #0
 8030b2a:	f7cf fb5b 	bl	80001e4 <__adddf3>
 8030b2e:	f7cf ffbf 	bl	8000ab0 <__aeabi_d2iz>
 8030b32:	4605      	mov	r5, r0
 8030b34:	f7cf fca2 	bl	800047c <__aeabi_i2d>
 8030b38:	4602      	mov	r2, r0
 8030b3a:	460b      	mov	r3, r1
 8030b3c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8030b40:	a363      	add	r3, pc, #396	@ (adr r3, 8030cd0 <__ieee754_rem_pio2+0x2e8>)
 8030b42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030b46:	f7cf fd03 	bl	8000550 <__aeabi_dmul>
 8030b4a:	4602      	mov	r2, r0
 8030b4c:	460b      	mov	r3, r1
 8030b4e:	4630      	mov	r0, r6
 8030b50:	4639      	mov	r1, r7
 8030b52:	f7cf fb45 	bl	80001e0 <__aeabi_dsub>
 8030b56:	a360      	add	r3, pc, #384	@ (adr r3, 8030cd8 <__ieee754_rem_pio2+0x2f0>)
 8030b58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030b5c:	4682      	mov	sl, r0
 8030b5e:	468b      	mov	fp, r1
 8030b60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030b64:	f7cf fcf4 	bl	8000550 <__aeabi_dmul>
 8030b68:	2d1f      	cmp	r5, #31
 8030b6a:	4606      	mov	r6, r0
 8030b6c:	460f      	mov	r7, r1
 8030b6e:	dc0c      	bgt.n	8030b8a <__ieee754_rem_pio2+0x1a2>
 8030b70:	4b6a      	ldr	r3, [pc, #424]	@ (8030d1c <__ieee754_rem_pio2+0x334>)
 8030b72:	1e6a      	subs	r2, r5, #1
 8030b74:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8030b78:	4543      	cmp	r3, r8
 8030b7a:	d006      	beq.n	8030b8a <__ieee754_rem_pio2+0x1a2>
 8030b7c:	4632      	mov	r2, r6
 8030b7e:	463b      	mov	r3, r7
 8030b80:	4650      	mov	r0, sl
 8030b82:	4659      	mov	r1, fp
 8030b84:	f7cf fb2c 	bl	80001e0 <__aeabi_dsub>
 8030b88:	e00e      	b.n	8030ba8 <__ieee754_rem_pio2+0x1c0>
 8030b8a:	463b      	mov	r3, r7
 8030b8c:	4632      	mov	r2, r6
 8030b8e:	4650      	mov	r0, sl
 8030b90:	4659      	mov	r1, fp
 8030b92:	f7cf fb25 	bl	80001e0 <__aeabi_dsub>
 8030b96:	ea4f 5328 	mov.w	r3, r8, asr #20
 8030b9a:	9305      	str	r3, [sp, #20]
 8030b9c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8030ba0:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8030ba4:	2b10      	cmp	r3, #16
 8030ba6:	dc02      	bgt.n	8030bae <__ieee754_rem_pio2+0x1c6>
 8030ba8:	e9c4 0100 	strd	r0, r1, [r4]
 8030bac:	e039      	b.n	8030c22 <__ieee754_rem_pio2+0x23a>
 8030bae:	a34c      	add	r3, pc, #304	@ (adr r3, 8030ce0 <__ieee754_rem_pio2+0x2f8>)
 8030bb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030bb4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030bb8:	f7cf fcca 	bl	8000550 <__aeabi_dmul>
 8030bbc:	4606      	mov	r6, r0
 8030bbe:	460f      	mov	r7, r1
 8030bc0:	4602      	mov	r2, r0
 8030bc2:	460b      	mov	r3, r1
 8030bc4:	4650      	mov	r0, sl
 8030bc6:	4659      	mov	r1, fp
 8030bc8:	f7cf fb0a 	bl	80001e0 <__aeabi_dsub>
 8030bcc:	4602      	mov	r2, r0
 8030bce:	460b      	mov	r3, r1
 8030bd0:	4680      	mov	r8, r0
 8030bd2:	4689      	mov	r9, r1
 8030bd4:	4650      	mov	r0, sl
 8030bd6:	4659      	mov	r1, fp
 8030bd8:	f7cf fb02 	bl	80001e0 <__aeabi_dsub>
 8030bdc:	4632      	mov	r2, r6
 8030bde:	463b      	mov	r3, r7
 8030be0:	f7cf fafe 	bl	80001e0 <__aeabi_dsub>
 8030be4:	a340      	add	r3, pc, #256	@ (adr r3, 8030ce8 <__ieee754_rem_pio2+0x300>)
 8030be6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030bea:	4606      	mov	r6, r0
 8030bec:	460f      	mov	r7, r1
 8030bee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030bf2:	f7cf fcad 	bl	8000550 <__aeabi_dmul>
 8030bf6:	4632      	mov	r2, r6
 8030bf8:	463b      	mov	r3, r7
 8030bfa:	f7cf faf1 	bl	80001e0 <__aeabi_dsub>
 8030bfe:	4602      	mov	r2, r0
 8030c00:	460b      	mov	r3, r1
 8030c02:	4606      	mov	r6, r0
 8030c04:	460f      	mov	r7, r1
 8030c06:	4640      	mov	r0, r8
 8030c08:	4649      	mov	r1, r9
 8030c0a:	f7cf fae9 	bl	80001e0 <__aeabi_dsub>
 8030c0e:	9a05      	ldr	r2, [sp, #20]
 8030c10:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8030c14:	1ad3      	subs	r3, r2, r3
 8030c16:	2b31      	cmp	r3, #49	@ 0x31
 8030c18:	dc20      	bgt.n	8030c5c <__ieee754_rem_pio2+0x274>
 8030c1a:	e9c4 0100 	strd	r0, r1, [r4]
 8030c1e:	46c2      	mov	sl, r8
 8030c20:	46cb      	mov	fp, r9
 8030c22:	e9d4 8900 	ldrd	r8, r9, [r4]
 8030c26:	4650      	mov	r0, sl
 8030c28:	4642      	mov	r2, r8
 8030c2a:	464b      	mov	r3, r9
 8030c2c:	4659      	mov	r1, fp
 8030c2e:	f7cf fad7 	bl	80001e0 <__aeabi_dsub>
 8030c32:	463b      	mov	r3, r7
 8030c34:	4632      	mov	r2, r6
 8030c36:	f7cf fad3 	bl	80001e0 <__aeabi_dsub>
 8030c3a:	9b04      	ldr	r3, [sp, #16]
 8030c3c:	2b00      	cmp	r3, #0
 8030c3e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8030c42:	f6bf af0e 	bge.w	8030a62 <__ieee754_rem_pio2+0x7a>
 8030c46:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8030c4a:	6063      	str	r3, [r4, #4]
 8030c4c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8030c50:	f8c4 8000 	str.w	r8, [r4]
 8030c54:	60a0      	str	r0, [r4, #8]
 8030c56:	60e3      	str	r3, [r4, #12]
 8030c58:	426d      	negs	r5, r5
 8030c5a:	e702      	b.n	8030a62 <__ieee754_rem_pio2+0x7a>
 8030c5c:	a326      	add	r3, pc, #152	@ (adr r3, 8030cf8 <__ieee754_rem_pio2+0x310>)
 8030c5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030c62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030c66:	f7cf fc73 	bl	8000550 <__aeabi_dmul>
 8030c6a:	4606      	mov	r6, r0
 8030c6c:	460f      	mov	r7, r1
 8030c6e:	4602      	mov	r2, r0
 8030c70:	460b      	mov	r3, r1
 8030c72:	4640      	mov	r0, r8
 8030c74:	4649      	mov	r1, r9
 8030c76:	f7cf fab3 	bl	80001e0 <__aeabi_dsub>
 8030c7a:	4602      	mov	r2, r0
 8030c7c:	460b      	mov	r3, r1
 8030c7e:	4682      	mov	sl, r0
 8030c80:	468b      	mov	fp, r1
 8030c82:	4640      	mov	r0, r8
 8030c84:	4649      	mov	r1, r9
 8030c86:	f7cf faab 	bl	80001e0 <__aeabi_dsub>
 8030c8a:	4632      	mov	r2, r6
 8030c8c:	463b      	mov	r3, r7
 8030c8e:	f7cf faa7 	bl	80001e0 <__aeabi_dsub>
 8030c92:	a31b      	add	r3, pc, #108	@ (adr r3, 8030d00 <__ieee754_rem_pio2+0x318>)
 8030c94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030c98:	4606      	mov	r6, r0
 8030c9a:	460f      	mov	r7, r1
 8030c9c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8030ca0:	f7cf fc56 	bl	8000550 <__aeabi_dmul>
 8030ca4:	4632      	mov	r2, r6
 8030ca6:	463b      	mov	r3, r7
 8030ca8:	f7cf fa9a 	bl	80001e0 <__aeabi_dsub>
 8030cac:	4606      	mov	r6, r0
 8030cae:	460f      	mov	r7, r1
 8030cb0:	e764      	b.n	8030b7c <__ieee754_rem_pio2+0x194>
 8030cb2:	4b1b      	ldr	r3, [pc, #108]	@ (8030d20 <__ieee754_rem_pio2+0x338>)
 8030cb4:	4598      	cmp	r8, r3
 8030cb6:	d935      	bls.n	8030d24 <__ieee754_rem_pio2+0x33c>
 8030cb8:	4632      	mov	r2, r6
 8030cba:	463b      	mov	r3, r7
 8030cbc:	4630      	mov	r0, r6
 8030cbe:	4639      	mov	r1, r7
 8030cc0:	f7cf fa8e 	bl	80001e0 <__aeabi_dsub>
 8030cc4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8030cc8:	e9c4 0100 	strd	r0, r1, [r4]
 8030ccc:	e69e      	b.n	8030a0c <__ieee754_rem_pio2+0x24>
 8030cce:	bf00      	nop
 8030cd0:	54400000 	.word	0x54400000
 8030cd4:	3ff921fb 	.word	0x3ff921fb
 8030cd8:	1a626331 	.word	0x1a626331
 8030cdc:	3dd0b461 	.word	0x3dd0b461
 8030ce0:	1a600000 	.word	0x1a600000
 8030ce4:	3dd0b461 	.word	0x3dd0b461
 8030ce8:	2e037073 	.word	0x2e037073
 8030cec:	3ba3198a 	.word	0x3ba3198a
 8030cf0:	6dc9c883 	.word	0x6dc9c883
 8030cf4:	3fe45f30 	.word	0x3fe45f30
 8030cf8:	2e000000 	.word	0x2e000000
 8030cfc:	3ba3198a 	.word	0x3ba3198a
 8030d00:	252049c1 	.word	0x252049c1
 8030d04:	397b839a 	.word	0x397b839a
 8030d08:	3fe921fb 	.word	0x3fe921fb
 8030d0c:	4002d97b 	.word	0x4002d97b
 8030d10:	3ff921fb 	.word	0x3ff921fb
 8030d14:	413921fb 	.word	0x413921fb
 8030d18:	3fe00000 	.word	0x3fe00000
 8030d1c:	0803af50 	.word	0x0803af50
 8030d20:	7fefffff 	.word	0x7fefffff
 8030d24:	ea4f 5528 	mov.w	r5, r8, asr #20
 8030d28:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 8030d2c:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8030d30:	4630      	mov	r0, r6
 8030d32:	460f      	mov	r7, r1
 8030d34:	f7cf febc 	bl	8000ab0 <__aeabi_d2iz>
 8030d38:	f7cf fba0 	bl	800047c <__aeabi_i2d>
 8030d3c:	4602      	mov	r2, r0
 8030d3e:	460b      	mov	r3, r1
 8030d40:	4630      	mov	r0, r6
 8030d42:	4639      	mov	r1, r7
 8030d44:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8030d48:	f7cf fa4a 	bl	80001e0 <__aeabi_dsub>
 8030d4c:	4b22      	ldr	r3, [pc, #136]	@ (8030dd8 <__ieee754_rem_pio2+0x3f0>)
 8030d4e:	2200      	movs	r2, #0
 8030d50:	f7cf fbfe 	bl	8000550 <__aeabi_dmul>
 8030d54:	460f      	mov	r7, r1
 8030d56:	4606      	mov	r6, r0
 8030d58:	f7cf feaa 	bl	8000ab0 <__aeabi_d2iz>
 8030d5c:	f7cf fb8e 	bl	800047c <__aeabi_i2d>
 8030d60:	4602      	mov	r2, r0
 8030d62:	460b      	mov	r3, r1
 8030d64:	4630      	mov	r0, r6
 8030d66:	4639      	mov	r1, r7
 8030d68:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8030d6c:	f7cf fa38 	bl	80001e0 <__aeabi_dsub>
 8030d70:	4b19      	ldr	r3, [pc, #100]	@ (8030dd8 <__ieee754_rem_pio2+0x3f0>)
 8030d72:	2200      	movs	r2, #0
 8030d74:	f7cf fbec 	bl	8000550 <__aeabi_dmul>
 8030d78:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8030d7c:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8030d80:	f04f 0803 	mov.w	r8, #3
 8030d84:	2600      	movs	r6, #0
 8030d86:	2700      	movs	r7, #0
 8030d88:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8030d8c:	4632      	mov	r2, r6
 8030d8e:	463b      	mov	r3, r7
 8030d90:	46c2      	mov	sl, r8
 8030d92:	f108 38ff 	add.w	r8, r8, #4294967295
 8030d96:	f7cf fe43 	bl	8000a20 <__aeabi_dcmpeq>
 8030d9a:	2800      	cmp	r0, #0
 8030d9c:	d1f4      	bne.n	8030d88 <__ieee754_rem_pio2+0x3a0>
 8030d9e:	4b0f      	ldr	r3, [pc, #60]	@ (8030ddc <__ieee754_rem_pio2+0x3f4>)
 8030da0:	9301      	str	r3, [sp, #4]
 8030da2:	2302      	movs	r3, #2
 8030da4:	9300      	str	r3, [sp, #0]
 8030da6:	462a      	mov	r2, r5
 8030da8:	4653      	mov	r3, sl
 8030daa:	4621      	mov	r1, r4
 8030dac:	a806      	add	r0, sp, #24
 8030dae:	f002 f86b 	bl	8032e88 <__kernel_rem_pio2>
 8030db2:	9b04      	ldr	r3, [sp, #16]
 8030db4:	2b00      	cmp	r3, #0
 8030db6:	4605      	mov	r5, r0
 8030db8:	f6bf ae53 	bge.w	8030a62 <__ieee754_rem_pio2+0x7a>
 8030dbc:	e9d4 2100 	ldrd	r2, r1, [r4]
 8030dc0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8030dc4:	e9c4 2300 	strd	r2, r3, [r4]
 8030dc8:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 8030dcc:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8030dd0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8030dd4:	e740      	b.n	8030c58 <__ieee754_rem_pio2+0x270>
 8030dd6:	bf00      	nop
 8030dd8:	41700000 	.word	0x41700000
 8030ddc:	0803afd0 	.word	0x0803afd0

08030de0 <__ieee754_sinh>:
 8030de0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8030de4:	ec55 4b10 	vmov	r4, r5, d0
 8030de8:	4a51      	ldr	r2, [pc, #324]	@ (8030f30 <__ieee754_sinh+0x150>)
 8030dea:	f025 4800 	bic.w	r8, r5, #2147483648	@ 0x80000000
 8030dee:	4590      	cmp	r8, r2
 8030df0:	462b      	mov	r3, r5
 8030df2:	d90a      	bls.n	8030e0a <__ieee754_sinh+0x2a>
 8030df4:	4622      	mov	r2, r4
 8030df6:	4620      	mov	r0, r4
 8030df8:	4629      	mov	r1, r5
 8030dfa:	f7cf f9f3 	bl	80001e4 <__adddf3>
 8030dfe:	4604      	mov	r4, r0
 8030e00:	460d      	mov	r5, r1
 8030e02:	ec45 4b10 	vmov	d0, r4, r5
 8030e06:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030e0a:	4b4a      	ldr	r3, [pc, #296]	@ (8030f34 <__ieee754_sinh+0x154>)
 8030e0c:	2d00      	cmp	r5, #0
 8030e0e:	bfac      	ite	ge
 8030e10:	4f49      	ldrge	r7, [pc, #292]	@ (8030f38 <__ieee754_sinh+0x158>)
 8030e12:	4f4a      	ldrlt	r7, [pc, #296]	@ (8030f3c <__ieee754_sinh+0x15c>)
 8030e14:	4598      	cmp	r8, r3
 8030e16:	f04f 0600 	mov.w	r6, #0
 8030e1a:	d852      	bhi.n	8030ec2 <__ieee754_sinh+0xe2>
 8030e1c:	4b48      	ldr	r3, [pc, #288]	@ (8030f40 <__ieee754_sinh+0x160>)
 8030e1e:	4598      	cmp	r8, r3
 8030e20:	d80c      	bhi.n	8030e3c <__ieee754_sinh+0x5c>
 8030e22:	a341      	add	r3, pc, #260	@ (adr r3, 8030f28 <__ieee754_sinh+0x148>)
 8030e24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030e28:	4620      	mov	r0, r4
 8030e2a:	4629      	mov	r1, r5
 8030e2c:	f7cf f9da 	bl	80001e4 <__adddf3>
 8030e30:	4b44      	ldr	r3, [pc, #272]	@ (8030f44 <__ieee754_sinh+0x164>)
 8030e32:	2200      	movs	r2, #0
 8030e34:	f7cf fe1c 	bl	8000a70 <__aeabi_dcmpgt>
 8030e38:	2800      	cmp	r0, #0
 8030e3a:	d1e2      	bne.n	8030e02 <__ieee754_sinh+0x22>
 8030e3c:	ec45 4b10 	vmov	d0, r4, r5
 8030e40:	f000 fa22 	bl	8031288 <fabs>
 8030e44:	f001 fdb4 	bl	80329b0 <expm1>
 8030e48:	4b3f      	ldr	r3, [pc, #252]	@ (8030f48 <__ieee754_sinh+0x168>)
 8030e4a:	4598      	cmp	r8, r3
 8030e4c:	ec55 4b10 	vmov	r4, r5, d0
 8030e50:	d826      	bhi.n	8030ea0 <__ieee754_sinh+0xc0>
 8030e52:	4622      	mov	r2, r4
 8030e54:	462b      	mov	r3, r5
 8030e56:	4620      	mov	r0, r4
 8030e58:	4629      	mov	r1, r5
 8030e5a:	f7cf f9c3 	bl	80001e4 <__adddf3>
 8030e5e:	4622      	mov	r2, r4
 8030e60:	4682      	mov	sl, r0
 8030e62:	468b      	mov	fp, r1
 8030e64:	462b      	mov	r3, r5
 8030e66:	4620      	mov	r0, r4
 8030e68:	4629      	mov	r1, r5
 8030e6a:	f7cf fb71 	bl	8000550 <__aeabi_dmul>
 8030e6e:	4b35      	ldr	r3, [pc, #212]	@ (8030f44 <__ieee754_sinh+0x164>)
 8030e70:	4680      	mov	r8, r0
 8030e72:	4689      	mov	r9, r1
 8030e74:	2200      	movs	r2, #0
 8030e76:	4620      	mov	r0, r4
 8030e78:	4629      	mov	r1, r5
 8030e7a:	f7cf f9b3 	bl	80001e4 <__adddf3>
 8030e7e:	4602      	mov	r2, r0
 8030e80:	460b      	mov	r3, r1
 8030e82:	4640      	mov	r0, r8
 8030e84:	4649      	mov	r1, r9
 8030e86:	f7cf fc8d 	bl	80007a4 <__aeabi_ddiv>
 8030e8a:	4602      	mov	r2, r0
 8030e8c:	460b      	mov	r3, r1
 8030e8e:	4650      	mov	r0, sl
 8030e90:	4659      	mov	r1, fp
 8030e92:	f7cf f9a5 	bl	80001e0 <__aeabi_dsub>
 8030e96:	4632      	mov	r2, r6
 8030e98:	463b      	mov	r3, r7
 8030e9a:	f7cf fb59 	bl	8000550 <__aeabi_dmul>
 8030e9e:	e7ae      	b.n	8030dfe <__ieee754_sinh+0x1e>
 8030ea0:	4b28      	ldr	r3, [pc, #160]	@ (8030f44 <__ieee754_sinh+0x164>)
 8030ea2:	2200      	movs	r2, #0
 8030ea4:	4620      	mov	r0, r4
 8030ea6:	4629      	mov	r1, r5
 8030ea8:	f7cf f99c 	bl	80001e4 <__adddf3>
 8030eac:	4602      	mov	r2, r0
 8030eae:	460b      	mov	r3, r1
 8030eb0:	4620      	mov	r0, r4
 8030eb2:	4629      	mov	r1, r5
 8030eb4:	f7cf fc76 	bl	80007a4 <__aeabi_ddiv>
 8030eb8:	4622      	mov	r2, r4
 8030eba:	462b      	mov	r3, r5
 8030ebc:	f7cf f992 	bl	80001e4 <__adddf3>
 8030ec0:	e7e9      	b.n	8030e96 <__ieee754_sinh+0xb6>
 8030ec2:	4b22      	ldr	r3, [pc, #136]	@ (8030f4c <__ieee754_sinh+0x16c>)
 8030ec4:	4598      	cmp	r8, r3
 8030ec6:	d806      	bhi.n	8030ed6 <__ieee754_sinh+0xf6>
 8030ec8:	f000 f9de 	bl	8031288 <fabs>
 8030ecc:	f7fe fecc 	bl	802fc68 <__ieee754_exp>
 8030ed0:	ec51 0b10 	vmov	r0, r1, d0
 8030ed4:	e7df      	b.n	8030e96 <__ieee754_sinh+0xb6>
 8030ed6:	4b1e      	ldr	r3, [pc, #120]	@ (8030f50 <__ieee754_sinh+0x170>)
 8030ed8:	4598      	cmp	r8, r3
 8030eda:	d905      	bls.n	8030ee8 <__ieee754_sinh+0x108>
 8030edc:	3301      	adds	r3, #1
 8030ede:	4598      	cmp	r8, r3
 8030ee0:	d11b      	bne.n	8030f1a <__ieee754_sinh+0x13a>
 8030ee2:	4b1c      	ldr	r3, [pc, #112]	@ (8030f54 <__ieee754_sinh+0x174>)
 8030ee4:	429c      	cmp	r4, r3
 8030ee6:	d818      	bhi.n	8030f1a <__ieee754_sinh+0x13a>
 8030ee8:	ec45 4b10 	vmov	d0, r4, r5
 8030eec:	f000 f9cc 	bl	8031288 <fabs>
 8030ef0:	4b11      	ldr	r3, [pc, #68]	@ (8030f38 <__ieee754_sinh+0x158>)
 8030ef2:	2200      	movs	r2, #0
 8030ef4:	ec51 0b10 	vmov	r0, r1, d0
 8030ef8:	f7cf fb2a 	bl	8000550 <__aeabi_dmul>
 8030efc:	ec41 0b10 	vmov	d0, r0, r1
 8030f00:	f7fe feb2 	bl	802fc68 <__ieee754_exp>
 8030f04:	ec55 4b10 	vmov	r4, r5, d0
 8030f08:	4630      	mov	r0, r6
 8030f0a:	4622      	mov	r2, r4
 8030f0c:	462b      	mov	r3, r5
 8030f0e:	4639      	mov	r1, r7
 8030f10:	f7cf fb1e 	bl	8000550 <__aeabi_dmul>
 8030f14:	4622      	mov	r2, r4
 8030f16:	462b      	mov	r3, r5
 8030f18:	e7bf      	b.n	8030e9a <__ieee754_sinh+0xba>
 8030f1a:	a303      	add	r3, pc, #12	@ (adr r3, 8030f28 <__ieee754_sinh+0x148>)
 8030f1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030f20:	4620      	mov	r0, r4
 8030f22:	4629      	mov	r1, r5
 8030f24:	e7b9      	b.n	8030e9a <__ieee754_sinh+0xba>
 8030f26:	bf00      	nop
 8030f28:	3cac7433 	.word	0x3cac7433
 8030f2c:	7fac7b1f 	.word	0x7fac7b1f
 8030f30:	7fefffff 	.word	0x7fefffff
 8030f34:	4035ffff 	.word	0x4035ffff
 8030f38:	3fe00000 	.word	0x3fe00000
 8030f3c:	bfe00000 	.word	0xbfe00000
 8030f40:	3e2fffff 	.word	0x3e2fffff
 8030f44:	3ff00000 	.word	0x3ff00000
 8030f48:	3fefffff 	.word	0x3fefffff
 8030f4c:	40862e41 	.word	0x40862e41
 8030f50:	408633cd 	.word	0x408633cd
 8030f54:	8fb9f87d 	.word	0x8fb9f87d

08030f58 <atan>:
 8030f58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8030f5c:	ec55 4b10 	vmov	r4, r5, d0
 8030f60:	4bbf      	ldr	r3, [pc, #764]	@ (8031260 <atan+0x308>)
 8030f62:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 8030f66:	429e      	cmp	r6, r3
 8030f68:	46ab      	mov	fp, r5
 8030f6a:	d918      	bls.n	8030f9e <atan+0x46>
 8030f6c:	4bbd      	ldr	r3, [pc, #756]	@ (8031264 <atan+0x30c>)
 8030f6e:	429e      	cmp	r6, r3
 8030f70:	d801      	bhi.n	8030f76 <atan+0x1e>
 8030f72:	d109      	bne.n	8030f88 <atan+0x30>
 8030f74:	b144      	cbz	r4, 8030f88 <atan+0x30>
 8030f76:	4622      	mov	r2, r4
 8030f78:	462b      	mov	r3, r5
 8030f7a:	4620      	mov	r0, r4
 8030f7c:	4629      	mov	r1, r5
 8030f7e:	f7cf f931 	bl	80001e4 <__adddf3>
 8030f82:	4604      	mov	r4, r0
 8030f84:	460d      	mov	r5, r1
 8030f86:	e006      	b.n	8030f96 <atan+0x3e>
 8030f88:	f1bb 0f00 	cmp.w	fp, #0
 8030f8c:	f340 812b 	ble.w	80311e6 <atan+0x28e>
 8030f90:	a597      	add	r5, pc, #604	@ (adr r5, 80311f0 <atan+0x298>)
 8030f92:	e9d5 4500 	ldrd	r4, r5, [r5]
 8030f96:	ec45 4b10 	vmov	d0, r4, r5
 8030f9a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030f9e:	4bb2      	ldr	r3, [pc, #712]	@ (8031268 <atan+0x310>)
 8030fa0:	429e      	cmp	r6, r3
 8030fa2:	d813      	bhi.n	8030fcc <atan+0x74>
 8030fa4:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 8030fa8:	429e      	cmp	r6, r3
 8030faa:	d80c      	bhi.n	8030fc6 <atan+0x6e>
 8030fac:	a392      	add	r3, pc, #584	@ (adr r3, 80311f8 <atan+0x2a0>)
 8030fae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8030fb2:	4620      	mov	r0, r4
 8030fb4:	4629      	mov	r1, r5
 8030fb6:	f7cf f915 	bl	80001e4 <__adddf3>
 8030fba:	4bac      	ldr	r3, [pc, #688]	@ (803126c <atan+0x314>)
 8030fbc:	2200      	movs	r2, #0
 8030fbe:	f7cf fd57 	bl	8000a70 <__aeabi_dcmpgt>
 8030fc2:	2800      	cmp	r0, #0
 8030fc4:	d1e7      	bne.n	8030f96 <atan+0x3e>
 8030fc6:	f04f 3aff 	mov.w	sl, #4294967295
 8030fca:	e029      	b.n	8031020 <atan+0xc8>
 8030fcc:	f000 f95c 	bl	8031288 <fabs>
 8030fd0:	4ba7      	ldr	r3, [pc, #668]	@ (8031270 <atan+0x318>)
 8030fd2:	429e      	cmp	r6, r3
 8030fd4:	ec55 4b10 	vmov	r4, r5, d0
 8030fd8:	f200 80bc 	bhi.w	8031154 <atan+0x1fc>
 8030fdc:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 8030fe0:	429e      	cmp	r6, r3
 8030fe2:	f200 809e 	bhi.w	8031122 <atan+0x1ca>
 8030fe6:	4622      	mov	r2, r4
 8030fe8:	462b      	mov	r3, r5
 8030fea:	4620      	mov	r0, r4
 8030fec:	4629      	mov	r1, r5
 8030fee:	f7cf f8f9 	bl	80001e4 <__adddf3>
 8030ff2:	4b9e      	ldr	r3, [pc, #632]	@ (803126c <atan+0x314>)
 8030ff4:	2200      	movs	r2, #0
 8030ff6:	f7cf f8f3 	bl	80001e0 <__aeabi_dsub>
 8030ffa:	2200      	movs	r2, #0
 8030ffc:	4606      	mov	r6, r0
 8030ffe:	460f      	mov	r7, r1
 8031000:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8031004:	4620      	mov	r0, r4
 8031006:	4629      	mov	r1, r5
 8031008:	f7cf f8ec 	bl	80001e4 <__adddf3>
 803100c:	4602      	mov	r2, r0
 803100e:	460b      	mov	r3, r1
 8031010:	4630      	mov	r0, r6
 8031012:	4639      	mov	r1, r7
 8031014:	f7cf fbc6 	bl	80007a4 <__aeabi_ddiv>
 8031018:	f04f 0a00 	mov.w	sl, #0
 803101c:	4604      	mov	r4, r0
 803101e:	460d      	mov	r5, r1
 8031020:	4622      	mov	r2, r4
 8031022:	462b      	mov	r3, r5
 8031024:	4620      	mov	r0, r4
 8031026:	4629      	mov	r1, r5
 8031028:	f7cf fa92 	bl	8000550 <__aeabi_dmul>
 803102c:	4602      	mov	r2, r0
 803102e:	460b      	mov	r3, r1
 8031030:	4680      	mov	r8, r0
 8031032:	4689      	mov	r9, r1
 8031034:	f7cf fa8c 	bl	8000550 <__aeabi_dmul>
 8031038:	a371      	add	r3, pc, #452	@ (adr r3, 8031200 <atan+0x2a8>)
 803103a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803103e:	4606      	mov	r6, r0
 8031040:	460f      	mov	r7, r1
 8031042:	f7cf fa85 	bl	8000550 <__aeabi_dmul>
 8031046:	a370      	add	r3, pc, #448	@ (adr r3, 8031208 <atan+0x2b0>)
 8031048:	e9d3 2300 	ldrd	r2, r3, [r3]
 803104c:	f7cf f8ca 	bl	80001e4 <__adddf3>
 8031050:	4632      	mov	r2, r6
 8031052:	463b      	mov	r3, r7
 8031054:	f7cf fa7c 	bl	8000550 <__aeabi_dmul>
 8031058:	a36d      	add	r3, pc, #436	@ (adr r3, 8031210 <atan+0x2b8>)
 803105a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803105e:	f7cf f8c1 	bl	80001e4 <__adddf3>
 8031062:	4632      	mov	r2, r6
 8031064:	463b      	mov	r3, r7
 8031066:	f7cf fa73 	bl	8000550 <__aeabi_dmul>
 803106a:	a36b      	add	r3, pc, #428	@ (adr r3, 8031218 <atan+0x2c0>)
 803106c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8031070:	f7cf f8b8 	bl	80001e4 <__adddf3>
 8031074:	4632      	mov	r2, r6
 8031076:	463b      	mov	r3, r7
 8031078:	f7cf fa6a 	bl	8000550 <__aeabi_dmul>
 803107c:	a368      	add	r3, pc, #416	@ (adr r3, 8031220 <atan+0x2c8>)
 803107e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8031082:	f7cf f8af 	bl	80001e4 <__adddf3>
 8031086:	4632      	mov	r2, r6
 8031088:	463b      	mov	r3, r7
 803108a:	f7cf fa61 	bl	8000550 <__aeabi_dmul>
 803108e:	a366      	add	r3, pc, #408	@ (adr r3, 8031228 <atan+0x2d0>)
 8031090:	e9d3 2300 	ldrd	r2, r3, [r3]
 8031094:	f7cf f8a6 	bl	80001e4 <__adddf3>
 8031098:	4642      	mov	r2, r8
 803109a:	464b      	mov	r3, r9
 803109c:	f7cf fa58 	bl	8000550 <__aeabi_dmul>
 80310a0:	a363      	add	r3, pc, #396	@ (adr r3, 8031230 <atan+0x2d8>)
 80310a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80310a6:	4680      	mov	r8, r0
 80310a8:	4689      	mov	r9, r1
 80310aa:	4630      	mov	r0, r6
 80310ac:	4639      	mov	r1, r7
 80310ae:	f7cf fa4f 	bl	8000550 <__aeabi_dmul>
 80310b2:	a361      	add	r3, pc, #388	@ (adr r3, 8031238 <atan+0x2e0>)
 80310b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80310b8:	f7cf f892 	bl	80001e0 <__aeabi_dsub>
 80310bc:	4632      	mov	r2, r6
 80310be:	463b      	mov	r3, r7
 80310c0:	f7cf fa46 	bl	8000550 <__aeabi_dmul>
 80310c4:	a35e      	add	r3, pc, #376	@ (adr r3, 8031240 <atan+0x2e8>)
 80310c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80310ca:	f7cf f889 	bl	80001e0 <__aeabi_dsub>
 80310ce:	4632      	mov	r2, r6
 80310d0:	463b      	mov	r3, r7
 80310d2:	f7cf fa3d 	bl	8000550 <__aeabi_dmul>
 80310d6:	a35c      	add	r3, pc, #368	@ (adr r3, 8031248 <atan+0x2f0>)
 80310d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80310dc:	f7cf f880 	bl	80001e0 <__aeabi_dsub>
 80310e0:	4632      	mov	r2, r6
 80310e2:	463b      	mov	r3, r7
 80310e4:	f7cf fa34 	bl	8000550 <__aeabi_dmul>
 80310e8:	a359      	add	r3, pc, #356	@ (adr r3, 8031250 <atan+0x2f8>)
 80310ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80310ee:	f7cf f877 	bl	80001e0 <__aeabi_dsub>
 80310f2:	4632      	mov	r2, r6
 80310f4:	463b      	mov	r3, r7
 80310f6:	f7cf fa2b 	bl	8000550 <__aeabi_dmul>
 80310fa:	4602      	mov	r2, r0
 80310fc:	460b      	mov	r3, r1
 80310fe:	4640      	mov	r0, r8
 8031100:	4649      	mov	r1, r9
 8031102:	f7cf f86f 	bl	80001e4 <__adddf3>
 8031106:	4622      	mov	r2, r4
 8031108:	462b      	mov	r3, r5
 803110a:	f7cf fa21 	bl	8000550 <__aeabi_dmul>
 803110e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8031112:	4602      	mov	r2, r0
 8031114:	460b      	mov	r3, r1
 8031116:	d148      	bne.n	80311aa <atan+0x252>
 8031118:	4620      	mov	r0, r4
 803111a:	4629      	mov	r1, r5
 803111c:	f7cf f860 	bl	80001e0 <__aeabi_dsub>
 8031120:	e72f      	b.n	8030f82 <atan+0x2a>
 8031122:	4b52      	ldr	r3, [pc, #328]	@ (803126c <atan+0x314>)
 8031124:	2200      	movs	r2, #0
 8031126:	4620      	mov	r0, r4
 8031128:	4629      	mov	r1, r5
 803112a:	f7cf f859 	bl	80001e0 <__aeabi_dsub>
 803112e:	4b4f      	ldr	r3, [pc, #316]	@ (803126c <atan+0x314>)
 8031130:	4606      	mov	r6, r0
 8031132:	460f      	mov	r7, r1
 8031134:	2200      	movs	r2, #0
 8031136:	4620      	mov	r0, r4
 8031138:	4629      	mov	r1, r5
 803113a:	f7cf f853 	bl	80001e4 <__adddf3>
 803113e:	4602      	mov	r2, r0
 8031140:	460b      	mov	r3, r1
 8031142:	4630      	mov	r0, r6
 8031144:	4639      	mov	r1, r7
 8031146:	f7cf fb2d 	bl	80007a4 <__aeabi_ddiv>
 803114a:	f04f 0a01 	mov.w	sl, #1
 803114e:	4604      	mov	r4, r0
 8031150:	460d      	mov	r5, r1
 8031152:	e765      	b.n	8031020 <atan+0xc8>
 8031154:	4b47      	ldr	r3, [pc, #284]	@ (8031274 <atan+0x31c>)
 8031156:	429e      	cmp	r6, r3
 8031158:	d21c      	bcs.n	8031194 <atan+0x23c>
 803115a:	4b47      	ldr	r3, [pc, #284]	@ (8031278 <atan+0x320>)
 803115c:	2200      	movs	r2, #0
 803115e:	4620      	mov	r0, r4
 8031160:	4629      	mov	r1, r5
 8031162:	f7cf f83d 	bl	80001e0 <__aeabi_dsub>
 8031166:	4b44      	ldr	r3, [pc, #272]	@ (8031278 <atan+0x320>)
 8031168:	4606      	mov	r6, r0
 803116a:	460f      	mov	r7, r1
 803116c:	2200      	movs	r2, #0
 803116e:	4620      	mov	r0, r4
 8031170:	4629      	mov	r1, r5
 8031172:	f7cf f9ed 	bl	8000550 <__aeabi_dmul>
 8031176:	4b3d      	ldr	r3, [pc, #244]	@ (803126c <atan+0x314>)
 8031178:	2200      	movs	r2, #0
 803117a:	f7cf f833 	bl	80001e4 <__adddf3>
 803117e:	4602      	mov	r2, r0
 8031180:	460b      	mov	r3, r1
 8031182:	4630      	mov	r0, r6
 8031184:	4639      	mov	r1, r7
 8031186:	f7cf fb0d 	bl	80007a4 <__aeabi_ddiv>
 803118a:	f04f 0a02 	mov.w	sl, #2
 803118e:	4604      	mov	r4, r0
 8031190:	460d      	mov	r5, r1
 8031192:	e745      	b.n	8031020 <atan+0xc8>
 8031194:	4622      	mov	r2, r4
 8031196:	462b      	mov	r3, r5
 8031198:	4938      	ldr	r1, [pc, #224]	@ (803127c <atan+0x324>)
 803119a:	2000      	movs	r0, #0
 803119c:	f7cf fb02 	bl	80007a4 <__aeabi_ddiv>
 80311a0:	f04f 0a03 	mov.w	sl, #3
 80311a4:	4604      	mov	r4, r0
 80311a6:	460d      	mov	r5, r1
 80311a8:	e73a      	b.n	8031020 <atan+0xc8>
 80311aa:	4b35      	ldr	r3, [pc, #212]	@ (8031280 <atan+0x328>)
 80311ac:	4e35      	ldr	r6, [pc, #212]	@ (8031284 <atan+0x32c>)
 80311ae:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80311b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80311b6:	f7cf f813 	bl	80001e0 <__aeabi_dsub>
 80311ba:	4622      	mov	r2, r4
 80311bc:	462b      	mov	r3, r5
 80311be:	f7cf f80f 	bl	80001e0 <__aeabi_dsub>
 80311c2:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80311c6:	4602      	mov	r2, r0
 80311c8:	460b      	mov	r3, r1
 80311ca:	e9d6 0100 	ldrd	r0, r1, [r6]
 80311ce:	f7cf f807 	bl	80001e0 <__aeabi_dsub>
 80311d2:	f1bb 0f00 	cmp.w	fp, #0
 80311d6:	4604      	mov	r4, r0
 80311d8:	460d      	mov	r5, r1
 80311da:	f6bf aedc 	bge.w	8030f96 <atan+0x3e>
 80311de:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80311e2:	461d      	mov	r5, r3
 80311e4:	e6d7      	b.n	8030f96 <atan+0x3e>
 80311e6:	a51c      	add	r5, pc, #112	@ (adr r5, 8031258 <atan+0x300>)
 80311e8:	e9d5 4500 	ldrd	r4, r5, [r5]
 80311ec:	e6d3      	b.n	8030f96 <atan+0x3e>
 80311ee:	bf00      	nop
 80311f0:	54442d18 	.word	0x54442d18
 80311f4:	3ff921fb 	.word	0x3ff921fb
 80311f8:	8800759c 	.word	0x8800759c
 80311fc:	7e37e43c 	.word	0x7e37e43c
 8031200:	e322da11 	.word	0xe322da11
 8031204:	3f90ad3a 	.word	0x3f90ad3a
 8031208:	24760deb 	.word	0x24760deb
 803120c:	3fa97b4b 	.word	0x3fa97b4b
 8031210:	a0d03d51 	.word	0xa0d03d51
 8031214:	3fb10d66 	.word	0x3fb10d66
 8031218:	c54c206e 	.word	0xc54c206e
 803121c:	3fb745cd 	.word	0x3fb745cd
 8031220:	920083ff 	.word	0x920083ff
 8031224:	3fc24924 	.word	0x3fc24924
 8031228:	5555550d 	.word	0x5555550d
 803122c:	3fd55555 	.word	0x3fd55555
 8031230:	2c6a6c2f 	.word	0x2c6a6c2f
 8031234:	bfa2b444 	.word	0xbfa2b444
 8031238:	52defd9a 	.word	0x52defd9a
 803123c:	3fadde2d 	.word	0x3fadde2d
 8031240:	af749a6d 	.word	0xaf749a6d
 8031244:	3fb3b0f2 	.word	0x3fb3b0f2
 8031248:	fe231671 	.word	0xfe231671
 803124c:	3fbc71c6 	.word	0x3fbc71c6
 8031250:	9998ebc4 	.word	0x9998ebc4
 8031254:	3fc99999 	.word	0x3fc99999
 8031258:	54442d18 	.word	0x54442d18
 803125c:	bff921fb 	.word	0xbff921fb
 8031260:	440fffff 	.word	0x440fffff
 8031264:	7ff00000 	.word	0x7ff00000
 8031268:	3fdbffff 	.word	0x3fdbffff
 803126c:	3ff00000 	.word	0x3ff00000
 8031270:	3ff2ffff 	.word	0x3ff2ffff
 8031274:	40038000 	.word	0x40038000
 8031278:	3ff80000 	.word	0x3ff80000
 803127c:	bff00000 	.word	0xbff00000
 8031280:	0803b0d8 	.word	0x0803b0d8
 8031284:	0803b0f8 	.word	0x0803b0f8

08031288 <fabs>:
 8031288:	ec51 0b10 	vmov	r0, r1, d0
 803128c:	4602      	mov	r2, r0
 803128e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8031292:	ec43 2b10 	vmov	d0, r2, r3
 8031296:	4770      	bx	lr

08031298 <__kernel_cosf>:
 8031298:	ee10 3a10 	vmov	r3, s0
 803129c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80312a0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80312a4:	eef0 6a40 	vmov.f32	s13, s0
 80312a8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80312ac:	d204      	bcs.n	80312b8 <__kernel_cosf+0x20>
 80312ae:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80312b2:	ee17 2a90 	vmov	r2, s15
 80312b6:	b342      	cbz	r2, 803130a <__kernel_cosf+0x72>
 80312b8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80312bc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8031328 <__kernel_cosf+0x90>
 80312c0:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 803132c <__kernel_cosf+0x94>
 80312c4:	4a1a      	ldr	r2, [pc, #104]	@ (8031330 <__kernel_cosf+0x98>)
 80312c6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80312ca:	4293      	cmp	r3, r2
 80312cc:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8031334 <__kernel_cosf+0x9c>
 80312d0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80312d4:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8031338 <__kernel_cosf+0xa0>
 80312d8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80312dc:	eddf 7a17 	vldr	s15, [pc, #92]	@ 803133c <__kernel_cosf+0xa4>
 80312e0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80312e4:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8031340 <__kernel_cosf+0xa8>
 80312e8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80312ec:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80312f0:	ee26 6a07 	vmul.f32	s12, s12, s14
 80312f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80312f8:	eee7 0a06 	vfma.f32	s1, s14, s12
 80312fc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031300:	d804      	bhi.n	803130c <__kernel_cosf+0x74>
 8031302:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8031306:	ee30 0a67 	vsub.f32	s0, s0, s15
 803130a:	4770      	bx	lr
 803130c:	4a0d      	ldr	r2, [pc, #52]	@ (8031344 <__kernel_cosf+0xac>)
 803130e:	4293      	cmp	r3, r2
 8031310:	bf9a      	itte	ls
 8031312:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8031316:	ee07 3a10 	vmovls	s14, r3
 803131a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 803131e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031322:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031326:	e7ec      	b.n	8031302 <__kernel_cosf+0x6a>
 8031328:	ad47d74e 	.word	0xad47d74e
 803132c:	310f74f6 	.word	0x310f74f6
 8031330:	3e999999 	.word	0x3e999999
 8031334:	b493f27c 	.word	0xb493f27c
 8031338:	37d00d01 	.word	0x37d00d01
 803133c:	bab60b61 	.word	0xbab60b61
 8031340:	3d2aaaab 	.word	0x3d2aaaab
 8031344:	3f480000 	.word	0x3f480000

08031348 <__kernel_sinf>:
 8031348:	ee10 3a10 	vmov	r3, s0
 803134c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031350:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031354:	d204      	bcs.n	8031360 <__kernel_sinf+0x18>
 8031356:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 803135a:	ee17 3a90 	vmov	r3, s15
 803135e:	b35b      	cbz	r3, 80313b8 <__kernel_sinf+0x70>
 8031360:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031364:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80313bc <__kernel_sinf+0x74>
 8031368:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80313c0 <__kernel_sinf+0x78>
 803136c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8031370:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80313c4 <__kernel_sinf+0x7c>
 8031374:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031378:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80313c8 <__kernel_sinf+0x80>
 803137c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8031380:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80313cc <__kernel_sinf+0x84>
 8031384:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031388:	eee6 7a07 	vfma.f32	s15, s12, s14
 803138c:	b930      	cbnz	r0, 803139c <__kernel_sinf+0x54>
 803138e:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80313d0 <__kernel_sinf+0x88>
 8031392:	eea7 6a27 	vfma.f32	s12, s14, s15
 8031396:	eea6 0a26 	vfma.f32	s0, s12, s13
 803139a:	4770      	bx	lr
 803139c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80313a0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80313a4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80313a8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80313ac:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80313d4 <__kernel_sinf+0x8c>
 80313b0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80313b4:	ee30 0a60 	vsub.f32	s0, s0, s1
 80313b8:	4770      	bx	lr
 80313ba:	bf00      	nop
 80313bc:	2f2ec9d3 	.word	0x2f2ec9d3
 80313c0:	b2d72f34 	.word	0xb2d72f34
 80313c4:	3638ef1b 	.word	0x3638ef1b
 80313c8:	b9500d01 	.word	0xb9500d01
 80313cc:	3c088889 	.word	0x3c088889
 80313d0:	be2aaaab 	.word	0xbe2aaaab
 80313d4:	3e2aaaab 	.word	0x3e2aaaab

080313d8 <__kernel_tanf>:
 80313d8:	b508      	push	{r3, lr}
 80313da:	ee10 3a10 	vmov	r3, s0
 80313de:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80313e2:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 80313e6:	eef0 7a40 	vmov.f32	s15, s0
 80313ea:	d217      	bcs.n	803141c <__kernel_tanf+0x44>
 80313ec:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80313f0:	ee17 1a10 	vmov	r1, s14
 80313f4:	bb41      	cbnz	r1, 8031448 <__kernel_tanf+0x70>
 80313f6:	1c43      	adds	r3, r0, #1
 80313f8:	4313      	orrs	r3, r2
 80313fa:	d108      	bne.n	803140e <__kernel_tanf+0x36>
 80313fc:	f7fd fc3a 	bl	802ec74 <fabsf>
 8031400:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031404:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031408:	eeb0 0a67 	vmov.f32	s0, s15
 803140c:	bd08      	pop	{r3, pc}
 803140e:	2801      	cmp	r0, #1
 8031410:	d0fa      	beq.n	8031408 <__kernel_tanf+0x30>
 8031412:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031416:	eec7 7a00 	vdiv.f32	s15, s14, s0
 803141a:	e7f5      	b.n	8031408 <__kernel_tanf+0x30>
 803141c:	494c      	ldr	r1, [pc, #304]	@ (8031550 <__kernel_tanf+0x178>)
 803141e:	428a      	cmp	r2, r1
 8031420:	d312      	bcc.n	8031448 <__kernel_tanf+0x70>
 8031422:	2b00      	cmp	r3, #0
 8031424:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8031554 <__kernel_tanf+0x17c>
 8031428:	bfb8      	it	lt
 803142a:	eef1 7a40 	vneglt.f32	s15, s0
 803142e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031432:	eddf 7a49 	vldr	s15, [pc, #292]	@ 8031558 <__kernel_tanf+0x180>
 8031436:	bfb8      	it	lt
 8031438:	eef1 0a60 	vneglt.f32	s1, s1
 803143c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8031440:	eddf 0a46 	vldr	s1, [pc, #280]	@ 803155c <__kernel_tanf+0x184>
 8031444:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031448:	ee67 6aa7 	vmul.f32	s13, s15, s15
 803144c:	eddf 5a44 	vldr	s11, [pc, #272]	@ 8031560 <__kernel_tanf+0x188>
 8031450:	ed9f 6a44 	vldr	s12, [pc, #272]	@ 8031564 <__kernel_tanf+0x18c>
 8031454:	ed9f 5a44 	vldr	s10, [pc, #272]	@ 8031568 <__kernel_tanf+0x190>
 8031458:	493d      	ldr	r1, [pc, #244]	@ (8031550 <__kernel_tanf+0x178>)
 803145a:	ee26 7aa6 	vmul.f32	s14, s13, s13
 803145e:	428a      	cmp	r2, r1
 8031460:	eea7 6a25 	vfma.f32	s12, s14, s11
 8031464:	eddf 5a41 	vldr	s11, [pc, #260]	@ 803156c <__kernel_tanf+0x194>
 8031468:	eee6 5a07 	vfma.f32	s11, s12, s14
 803146c:	ed9f 6a40 	vldr	s12, [pc, #256]	@ 8031570 <__kernel_tanf+0x198>
 8031470:	eea5 6a87 	vfma.f32	s12, s11, s14
 8031474:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8031574 <__kernel_tanf+0x19c>
 8031478:	eee6 5a07 	vfma.f32	s11, s12, s14
 803147c:	ed9f 6a3e 	vldr	s12, [pc, #248]	@ 8031578 <__kernel_tanf+0x1a0>
 8031480:	eea5 6a87 	vfma.f32	s12, s11, s14
 8031484:	eddf 5a3d 	vldr	s11, [pc, #244]	@ 803157c <__kernel_tanf+0x1a4>
 8031488:	eee7 5a05 	vfma.f32	s11, s14, s10
 803148c:	ed9f 5a3c 	vldr	s10, [pc, #240]	@ 8031580 <__kernel_tanf+0x1a8>
 8031490:	eea5 5a87 	vfma.f32	s10, s11, s14
 8031494:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8031584 <__kernel_tanf+0x1ac>
 8031498:	eee5 5a07 	vfma.f32	s11, s10, s14
 803149c:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 8031588 <__kernel_tanf+0x1b0>
 80314a0:	eea5 5a87 	vfma.f32	s10, s11, s14
 80314a4:	eddf 5a39 	vldr	s11, [pc, #228]	@ 803158c <__kernel_tanf+0x1b4>
 80314a8:	eee5 5a07 	vfma.f32	s11, s10, s14
 80314ac:	eeb0 7a46 	vmov.f32	s14, s12
 80314b0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80314b4:	ee27 5aa6 	vmul.f32	s10, s15, s13
 80314b8:	eeb0 6a60 	vmov.f32	s12, s1
 80314bc:	eea7 6a05 	vfma.f32	s12, s14, s10
 80314c0:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 8031590 <__kernel_tanf+0x1b8>
 80314c4:	eee6 0a26 	vfma.f32	s1, s12, s13
 80314c8:	eee5 0a07 	vfma.f32	s1, s10, s14
 80314cc:	ee37 6aa0 	vadd.f32	s12, s15, s1
 80314d0:	d31d      	bcc.n	803150e <__kernel_tanf+0x136>
 80314d2:	ee07 0a10 	vmov	s14, r0
 80314d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80314da:	ee26 5a06 	vmul.f32	s10, s12, s12
 80314de:	ee36 6a07 	vadd.f32	s12, s12, s14
 80314e2:	179b      	asrs	r3, r3, #30
 80314e4:	eec5 5a06 	vdiv.f32	s11, s10, s12
 80314e8:	f003 0302 	and.w	r3, r3, #2
 80314ec:	f1c3 0301 	rsb	r3, r3, #1
 80314f0:	ee06 3a90 	vmov	s13, r3
 80314f4:	ee35 6ae0 	vsub.f32	s12, s11, s1
 80314f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80314fc:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8031500:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 8031504:	eea7 7ac6 	vfms.f32	s14, s15, s12
 8031508:	ee66 7a87 	vmul.f32	s15, s13, s14
 803150c:	e77c      	b.n	8031408 <__kernel_tanf+0x30>
 803150e:	2801      	cmp	r0, #1
 8031510:	d01b      	beq.n	803154a <__kernel_tanf+0x172>
 8031512:	4b20      	ldr	r3, [pc, #128]	@ (8031594 <__kernel_tanf+0x1bc>)
 8031514:	ee16 2a10 	vmov	r2, s12
 8031518:	401a      	ands	r2, r3
 803151a:	ee05 2a90 	vmov	s11, r2
 803151e:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8031522:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031526:	ee70 0ae7 	vsub.f32	s1, s1, s15
 803152a:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 803152e:	eec7 6a86 	vdiv.f32	s13, s15, s12
 8031532:	ee16 2a90 	vmov	r2, s13
 8031536:	4013      	ands	r3, r2
 8031538:	ee07 3a90 	vmov	s15, r3
 803153c:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8031540:	eea0 7aa7 	vfma.f32	s14, s1, s15
 8031544:	eee7 7a26 	vfma.f32	s15, s14, s13
 8031548:	e75e      	b.n	8031408 <__kernel_tanf+0x30>
 803154a:	eef0 7a46 	vmov.f32	s15, s12
 803154e:	e75b      	b.n	8031408 <__kernel_tanf+0x30>
 8031550:	3f2ca140 	.word	0x3f2ca140
 8031554:	3f490fda 	.word	0x3f490fda
 8031558:	33222168 	.word	0x33222168
 803155c:	00000000 	.word	0x00000000
 8031560:	b79bae5f 	.word	0xb79bae5f
 8031564:	38a3f445 	.word	0x38a3f445
 8031568:	37d95384 	.word	0x37d95384
 803156c:	3a1a26c8 	.word	0x3a1a26c8
 8031570:	3b6b6916 	.word	0x3b6b6916
 8031574:	3cb327a4 	.word	0x3cb327a4
 8031578:	3e088889 	.word	0x3e088889
 803157c:	3895c07a 	.word	0x3895c07a
 8031580:	398137b9 	.word	0x398137b9
 8031584:	3abede48 	.word	0x3abede48
 8031588:	3c11371f 	.word	0x3c11371f
 803158c:	3d5d0dd1 	.word	0x3d5d0dd1
 8031590:	3eaaaaab 	.word	0x3eaaaaab
 8031594:	fffff000 	.word	0xfffff000

08031598 <__ieee754_acosf>:
 8031598:	b508      	push	{r3, lr}
 803159a:	ee10 3a10 	vmov	r3, s0
 803159e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80315a2:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 80315a6:	ed2d 8b0c 	vpush	{d8-d13}
 80315aa:	d10a      	bne.n	80315c2 <__ieee754_acosf+0x2a>
 80315ac:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8031744 <__ieee754_acosf+0x1ac>
 80315b0:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8031748 <__ieee754_acosf+0x1b0>
 80315b4:	2b00      	cmp	r3, #0
 80315b6:	bfc8      	it	gt
 80315b8:	eeb0 0a67 	vmovgt.f32	s0, s15
 80315bc:	ecbd 8b0c 	vpop	{d8-d13}
 80315c0:	bd08      	pop	{r3, pc}
 80315c2:	d904      	bls.n	80315ce <__ieee754_acosf+0x36>
 80315c4:	ee30 8a40 	vsub.f32	s16, s0, s0
 80315c8:	ee88 0a08 	vdiv.f32	s0, s16, s16
 80315cc:	e7f6      	b.n	80315bc <__ieee754_acosf+0x24>
 80315ce:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 80315d2:	d23c      	bcs.n	803164e <__ieee754_acosf+0xb6>
 80315d4:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 80315d8:	f240 80b1 	bls.w	803173e <__ieee754_acosf+0x1a6>
 80315dc:	ee60 7a00 	vmul.f32	s15, s0, s0
 80315e0:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 803174c <__ieee754_acosf+0x1b4>
 80315e4:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8031750 <__ieee754_acosf+0x1b8>
 80315e8:	ed9f 6a5a 	vldr	s12, [pc, #360]	@ 8031754 <__ieee754_acosf+0x1bc>
 80315ec:	eea7 7aa6 	vfma.f32	s14, s15, s13
 80315f0:	eddf 6a59 	vldr	s13, [pc, #356]	@ 8031758 <__ieee754_acosf+0x1c0>
 80315f4:	eee7 6a27 	vfma.f32	s13, s14, s15
 80315f8:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 803175c <__ieee754_acosf+0x1c4>
 80315fc:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8031600:	eddf 6a57 	vldr	s13, [pc, #348]	@ 8031760 <__ieee754_acosf+0x1c8>
 8031604:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031608:	ed9f 7a56 	vldr	s14, [pc, #344]	@ 8031764 <__ieee754_acosf+0x1cc>
 803160c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8031610:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031768 <__ieee754_acosf+0x1d0>
 8031614:	eea7 6aa6 	vfma.f32	s12, s15, s13
 8031618:	eddf 6a54 	vldr	s13, [pc, #336]	@ 803176c <__ieee754_acosf+0x1d4>
 803161c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8031620:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031770 <__ieee754_acosf+0x1d8>
 8031624:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8031628:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 803162c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8031630:	ee27 7a27 	vmul.f32	s14, s14, s15
 8031634:	eddf 7a4f 	vldr	s15, [pc, #316]	@ 8031774 <__ieee754_acosf+0x1dc>
 8031638:	ee87 6a26 	vdiv.f32	s12, s14, s13
 803163c:	eee0 7a46 	vfms.f32	s15, s0, s12
 8031640:	ee70 7a67 	vsub.f32	s15, s0, s15
 8031644:	ed9f 0a4c 	vldr	s0, [pc, #304]	@ 8031778 <__ieee754_acosf+0x1e0>
 8031648:	ee30 0a67 	vsub.f32	s0, s0, s15
 803164c:	e7b6      	b.n	80315bc <__ieee754_acosf+0x24>
 803164e:	2b00      	cmp	r3, #0
 8031650:	eddf da3e 	vldr	s27, [pc, #248]	@ 803174c <__ieee754_acosf+0x1b4>
 8031654:	eddf ca3e 	vldr	s25, [pc, #248]	@ 8031750 <__ieee754_acosf+0x1b8>
 8031658:	ed9f ca3f 	vldr	s24, [pc, #252]	@ 8031758 <__ieee754_acosf+0x1c0>
 803165c:	eddf ba3f 	vldr	s23, [pc, #252]	@ 803175c <__ieee754_acosf+0x1c4>
 8031660:	ed9f ba3f 	vldr	s22, [pc, #252]	@ 8031760 <__ieee754_acosf+0x1c8>
 8031664:	eddf 8a3f 	vldr	s17, [pc, #252]	@ 8031764 <__ieee754_acosf+0x1cc>
 8031668:	ed9f da3f 	vldr	s26, [pc, #252]	@ 8031768 <__ieee754_acosf+0x1d0>
 803166c:	eddf aa39 	vldr	s21, [pc, #228]	@ 8031754 <__ieee754_acosf+0x1bc>
 8031670:	ed9f aa3e 	vldr	s20, [pc, #248]	@ 803176c <__ieee754_acosf+0x1d4>
 8031674:	eddf 9a3e 	vldr	s19, [pc, #248]	@ 8031770 <__ieee754_acosf+0x1d8>
 8031678:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 803167c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031680:	da28      	bge.n	80316d4 <__ieee754_acosf+0x13c>
 8031682:	ee30 8a09 	vadd.f32	s16, s0, s18
 8031686:	ee28 0a27 	vmul.f32	s0, s16, s15
 803168a:	eee0 ca2d 	vfma.f32	s25, s0, s27
 803168e:	eee0 aa0d 	vfma.f32	s21, s0, s26
 8031692:	eeac ca80 	vfma.f32	s24, s25, s0
 8031696:	eeaa aa80 	vfma.f32	s20, s21, s0
 803169a:	eeec ba00 	vfma.f32	s23, s24, s0
 803169e:	eeea 9a00 	vfma.f32	s19, s20, s0
 80316a2:	eeab ba80 	vfma.f32	s22, s23, s0
 80316a6:	eea9 9a80 	vfma.f32	s18, s19, s0
 80316aa:	eeeb 8a00 	vfma.f32	s17, s22, s0
 80316ae:	ee68 8a80 	vmul.f32	s17, s17, s0
 80316b2:	f7fd fdfd 	bl	802f2b0 <__ieee754_sqrtf>
 80316b6:	ee88 7a89 	vdiv.f32	s14, s17, s18
 80316ba:	eddf 7a30 	vldr	s15, [pc, #192]	@ 803177c <__ieee754_acosf+0x1e4>
 80316be:	eee0 7a07 	vfma.f32	s15, s0, s14
 80316c2:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80316c6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80316ca:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031780 <__ieee754_acosf+0x1e8>
 80316ce:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80316d2:	e773      	b.n	80315bc <__ieee754_acosf+0x24>
 80316d4:	ee39 8a40 	vsub.f32	s16, s18, s0
 80316d8:	ee28 8a27 	vmul.f32	s16, s16, s15
 80316dc:	eeb0 0a48 	vmov.f32	s0, s16
 80316e0:	f7fd fde6 	bl	802f2b0 <__ieee754_sqrtf>
 80316e4:	eee8 ca2d 	vfma.f32	s25, s16, s27
 80316e8:	eee8 aa0d 	vfma.f32	s21, s16, s26
 80316ec:	eeac ca88 	vfma.f32	s24, s25, s16
 80316f0:	eeaa aa88 	vfma.f32	s20, s21, s16
 80316f4:	eeec ba08 	vfma.f32	s23, s24, s16
 80316f8:	ee10 3a10 	vmov	r3, s0
 80316fc:	eeab ba88 	vfma.f32	s22, s23, s16
 8031700:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8031704:	f023 030f 	bic.w	r3, r3, #15
 8031708:	eeea 9a08 	vfma.f32	s19, s20, s16
 803170c:	ee07 3a90 	vmov	s15, r3
 8031710:	eeeb 8a08 	vfma.f32	s17, s22, s16
 8031714:	eeb0 6a48 	vmov.f32	s12, s16
 8031718:	eea7 6ae7 	vfms.f32	s12, s15, s15
 803171c:	eea9 9a88 	vfma.f32	s18, s19, s16
 8031720:	ee70 6a27 	vadd.f32	s13, s0, s15
 8031724:	ee68 8a88 	vmul.f32	s17, s17, s16
 8031728:	ee86 7a26 	vdiv.f32	s14, s12, s13
 803172c:	eec8 6a89 	vdiv.f32	s13, s17, s18
 8031730:	eea0 7a26 	vfma.f32	s14, s0, s13
 8031734:	ee37 0a87 	vadd.f32	s0, s15, s14
 8031738:	ee30 0a00 	vadd.f32	s0, s0, s0
 803173c:	e73e      	b.n	80315bc <__ieee754_acosf+0x24>
 803173e:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031784 <__ieee754_acosf+0x1ec>
 8031742:	e73b      	b.n	80315bc <__ieee754_acosf+0x24>
 8031744:	40490fdb 	.word	0x40490fdb
 8031748:	00000000 	.word	0x00000000
 803174c:	3811ef08 	.word	0x3811ef08
 8031750:	3a4f7f04 	.word	0x3a4f7f04
 8031754:	bf303361 	.word	0xbf303361
 8031758:	bd241146 	.word	0xbd241146
 803175c:	3e4e0aa8 	.word	0x3e4e0aa8
 8031760:	bea6b090 	.word	0xbea6b090
 8031764:	3e2aaaab 	.word	0x3e2aaaab
 8031768:	3d9dc62e 	.word	0x3d9dc62e
 803176c:	4001572d 	.word	0x4001572d
 8031770:	c019d139 	.word	0xc019d139
 8031774:	33a22168 	.word	0x33a22168
 8031778:	3fc90fda 	.word	0x3fc90fda
 803177c:	b3a22168 	.word	0xb3a22168
 8031780:	40490fda 	.word	0x40490fda
 8031784:	3fc90fdb 	.word	0x3fc90fdb

08031788 <__ieee754_asinf>:
 8031788:	b538      	push	{r3, r4, r5, lr}
 803178a:	ee10 5a10 	vmov	r5, s0
 803178e:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8031792:	f1b4 5f7e 	cmp.w	r4, #1065353216	@ 0x3f800000
 8031796:	ed2d 8b04 	vpush	{d8-d9}
 803179a:	d10c      	bne.n	80317b6 <__ieee754_asinf+0x2e>
 803179c:	eddf 7a5d 	vldr	s15, [pc, #372]	@ 8031914 <__ieee754_asinf+0x18c>
 80317a0:	ed9f 7a5d 	vldr	s14, [pc, #372]	@ 8031918 <__ieee754_asinf+0x190>
 80317a4:	ee60 7a27 	vmul.f32	s15, s0, s15
 80317a8:	eee0 7a07 	vfma.f32	s15, s0, s14
 80317ac:	eeb0 0a67 	vmov.f32	s0, s15
 80317b0:	ecbd 8b04 	vpop	{d8-d9}
 80317b4:	bd38      	pop	{r3, r4, r5, pc}
 80317b6:	d904      	bls.n	80317c2 <__ieee754_asinf+0x3a>
 80317b8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80317bc:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 80317c0:	e7f6      	b.n	80317b0 <__ieee754_asinf+0x28>
 80317c2:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 80317c6:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 80317ca:	d20b      	bcs.n	80317e4 <__ieee754_asinf+0x5c>
 80317cc:	f1b4 5f48 	cmp.w	r4, #838860800	@ 0x32000000
 80317d0:	d252      	bcs.n	8031878 <__ieee754_asinf+0xf0>
 80317d2:	eddf 7a52 	vldr	s15, [pc, #328]	@ 803191c <__ieee754_asinf+0x194>
 80317d6:	ee70 7a27 	vadd.f32	s15, s0, s15
 80317da:	eef4 7ae8 	vcmpe.f32	s15, s17
 80317de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80317e2:	dce5      	bgt.n	80317b0 <__ieee754_asinf+0x28>
 80317e4:	f7fd fa46 	bl	802ec74 <fabsf>
 80317e8:	ee38 8ac0 	vsub.f32	s16, s17, s0
 80317ec:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80317f0:	ee28 8a27 	vmul.f32	s16, s16, s15
 80317f4:	ed9f 7a4a 	vldr	s14, [pc, #296]	@ 8031920 <__ieee754_asinf+0x198>
 80317f8:	eddf 7a4a 	vldr	s15, [pc, #296]	@ 8031924 <__ieee754_asinf+0x19c>
 80317fc:	ed9f 9a4a 	vldr	s18, [pc, #296]	@ 8031928 <__ieee754_asinf+0x1a0>
 8031800:	eea8 7a27 	vfma.f32	s14, s16, s15
 8031804:	eddf 7a49 	vldr	s15, [pc, #292]	@ 803192c <__ieee754_asinf+0x1a4>
 8031808:	eee7 7a08 	vfma.f32	s15, s14, s16
 803180c:	ed9f 7a48 	vldr	s14, [pc, #288]	@ 8031930 <__ieee754_asinf+0x1a8>
 8031810:	eea7 7a88 	vfma.f32	s14, s15, s16
 8031814:	eddf 7a47 	vldr	s15, [pc, #284]	@ 8031934 <__ieee754_asinf+0x1ac>
 8031818:	eee7 7a08 	vfma.f32	s15, s14, s16
 803181c:	ed9f 7a46 	vldr	s14, [pc, #280]	@ 8031938 <__ieee754_asinf+0x1b0>
 8031820:	eea7 9a88 	vfma.f32	s18, s15, s16
 8031824:	eddf 7a45 	vldr	s15, [pc, #276]	@ 803193c <__ieee754_asinf+0x1b4>
 8031828:	eee8 7a07 	vfma.f32	s15, s16, s14
 803182c:	ed9f 7a44 	vldr	s14, [pc, #272]	@ 8031940 <__ieee754_asinf+0x1b8>
 8031830:	eea7 7a88 	vfma.f32	s14, s15, s16
 8031834:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8031944 <__ieee754_asinf+0x1bc>
 8031838:	eee7 7a08 	vfma.f32	s15, s14, s16
 803183c:	eeb0 0a48 	vmov.f32	s0, s16
 8031840:	eee7 8a88 	vfma.f32	s17, s15, s16
 8031844:	f7fd fd34 	bl	802f2b0 <__ieee754_sqrtf>
 8031848:	4b3f      	ldr	r3, [pc, #252]	@ (8031948 <__ieee754_asinf+0x1c0>)
 803184a:	ee29 9a08 	vmul.f32	s18, s18, s16
 803184e:	429c      	cmp	r4, r3
 8031850:	ee89 6a28 	vdiv.f32	s12, s18, s17
 8031854:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8031858:	d93d      	bls.n	80318d6 <__ieee754_asinf+0x14e>
 803185a:	eea0 0a06 	vfma.f32	s0, s0, s12
 803185e:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 803194c <__ieee754_asinf+0x1c4>
 8031862:	eee0 7a26 	vfma.f32	s15, s0, s13
 8031866:	ed9f 0a2c 	vldr	s0, [pc, #176]	@ 8031918 <__ieee754_asinf+0x190>
 803186a:	ee30 0a67 	vsub.f32	s0, s0, s15
 803186e:	2d00      	cmp	r5, #0
 8031870:	bfd8      	it	le
 8031872:	eeb1 0a40 	vnegle.f32	s0, s0
 8031876:	e79b      	b.n	80317b0 <__ieee754_asinf+0x28>
 8031878:	ee60 7a00 	vmul.f32	s15, s0, s0
 803187c:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8031924 <__ieee754_asinf+0x19c>
 8031880:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 8031920 <__ieee754_asinf+0x198>
 8031884:	ed9f 6a2c 	vldr	s12, [pc, #176]	@ 8031938 <__ieee754_asinf+0x1b0>
 8031888:	eea7 7aa6 	vfma.f32	s14, s15, s13
 803188c:	eddf 6a27 	vldr	s13, [pc, #156]	@ 803192c <__ieee754_asinf+0x1a4>
 8031890:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031894:	ed9f 7a26 	vldr	s14, [pc, #152]	@ 8031930 <__ieee754_asinf+0x1a8>
 8031898:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803189c:	eddf 6a25 	vldr	s13, [pc, #148]	@ 8031934 <__ieee754_asinf+0x1ac>
 80318a0:	eee7 6a27 	vfma.f32	s13, s14, s15
 80318a4:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8031928 <__ieee754_asinf+0x1a0>
 80318a8:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80318ac:	eddf 6a23 	vldr	s13, [pc, #140]	@ 803193c <__ieee754_asinf+0x1b4>
 80318b0:	eee7 6a86 	vfma.f32	s13, s15, s12
 80318b4:	ed9f 6a22 	vldr	s12, [pc, #136]	@ 8031940 <__ieee754_asinf+0x1b8>
 80318b8:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80318bc:	eddf 6a21 	vldr	s13, [pc, #132]	@ 8031944 <__ieee754_asinf+0x1bc>
 80318c0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80318c4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80318c8:	eee6 8aa7 	vfma.f32	s17, s13, s15
 80318cc:	eec7 7a28 	vdiv.f32	s15, s14, s17
 80318d0:	eea0 0a27 	vfma.f32	s0, s0, s15
 80318d4:	e76c      	b.n	80317b0 <__ieee754_asinf+0x28>
 80318d6:	ee10 3a10 	vmov	r3, s0
 80318da:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 80318de:	f023 030f 	bic.w	r3, r3, #15
 80318e2:	ee07 3a10 	vmov	s14, r3
 80318e6:	eea7 8a47 	vfms.f32	s16, s14, s14
 80318ea:	ee70 5a00 	vadd.f32	s11, s0, s0
 80318ee:	ee30 0a07 	vadd.f32	s0, s0, s14
 80318f2:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031914 <__ieee754_asinf+0x18c>
 80318f6:	ee88 5a00 	vdiv.f32	s10, s16, s0
 80318fa:	ed9f 0a15 	vldr	s0, [pc, #84]	@ 8031950 <__ieee754_asinf+0x1c8>
 80318fe:	eee5 7a66 	vfms.f32	s15, s10, s13
 8031902:	eed5 7a86 	vfnms.f32	s15, s11, s12
 8031906:	eeb0 6a40 	vmov.f32	s12, s0
 803190a:	eea7 6a66 	vfms.f32	s12, s14, s13
 803190e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8031912:	e7aa      	b.n	803186a <__ieee754_asinf+0xe2>
 8031914:	b33bbd2e 	.word	0xb33bbd2e
 8031918:	3fc90fdb 	.word	0x3fc90fdb
 803191c:	7149f2ca 	.word	0x7149f2ca
 8031920:	3a4f7f04 	.word	0x3a4f7f04
 8031924:	3811ef08 	.word	0x3811ef08
 8031928:	3e2aaaab 	.word	0x3e2aaaab
 803192c:	bd241146 	.word	0xbd241146
 8031930:	3e4e0aa8 	.word	0x3e4e0aa8
 8031934:	bea6b090 	.word	0xbea6b090
 8031938:	3d9dc62e 	.word	0x3d9dc62e
 803193c:	bf303361 	.word	0xbf303361
 8031940:	4001572d 	.word	0x4001572d
 8031944:	c019d139 	.word	0xc019d139
 8031948:	3f799999 	.word	0x3f799999
 803194c:	333bbd2e 	.word	0x333bbd2e
 8031950:	3f490fdb 	.word	0x3f490fdb

08031954 <__ieee754_atan2f>:
 8031954:	ee10 2a90 	vmov	r2, s1
 8031958:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 803195c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031960:	b510      	push	{r4, lr}
 8031962:	eef0 7a40 	vmov.f32	s15, s0
 8031966:	d806      	bhi.n	8031976 <__ieee754_atan2f+0x22>
 8031968:	ee10 0a10 	vmov	r0, s0
 803196c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031970:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031974:	d904      	bls.n	8031980 <__ieee754_atan2f+0x2c>
 8031976:	ee77 7aa0 	vadd.f32	s15, s15, s1
 803197a:	eeb0 0a67 	vmov.f32	s0, s15
 803197e:	bd10      	pop	{r4, pc}
 8031980:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031984:	d103      	bne.n	803198e <__ieee754_atan2f+0x3a>
 8031986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803198a:	f7fd b85b 	b.w	802ea44 <atanf>
 803198e:	1794      	asrs	r4, r2, #30
 8031990:	f004 0402 	and.w	r4, r4, #2
 8031994:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031998:	b943      	cbnz	r3, 80319ac <__ieee754_atan2f+0x58>
 803199a:	2c02      	cmp	r4, #2
 803199c:	d05e      	beq.n	8031a5c <__ieee754_atan2f+0x108>
 803199e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8031a70 <__ieee754_atan2f+0x11c>
 80319a2:	2c03      	cmp	r4, #3
 80319a4:	bf08      	it	eq
 80319a6:	eef0 7a47 	vmoveq.f32	s15, s14
 80319aa:	e7e6      	b.n	803197a <__ieee754_atan2f+0x26>
 80319ac:	b941      	cbnz	r1, 80319c0 <__ieee754_atan2f+0x6c>
 80319ae:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031a74 <__ieee754_atan2f+0x120>
 80319b2:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8031a78 <__ieee754_atan2f+0x124>
 80319b6:	2800      	cmp	r0, #0
 80319b8:	bfb8      	it	lt
 80319ba:	eef0 7a47 	vmovlt.f32	s15, s14
 80319be:	e7dc      	b.n	803197a <__ieee754_atan2f+0x26>
 80319c0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80319c4:	d110      	bne.n	80319e8 <__ieee754_atan2f+0x94>
 80319c6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80319ca:	f104 34ff 	add.w	r4, r4, #4294967295
 80319ce:	d107      	bne.n	80319e0 <__ieee754_atan2f+0x8c>
 80319d0:	2c02      	cmp	r4, #2
 80319d2:	d846      	bhi.n	8031a62 <__ieee754_atan2f+0x10e>
 80319d4:	4b29      	ldr	r3, [pc, #164]	@ (8031a7c <__ieee754_atan2f+0x128>)
 80319d6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80319da:	edd3 7a00 	vldr	s15, [r3]
 80319de:	e7cc      	b.n	803197a <__ieee754_atan2f+0x26>
 80319e0:	2c02      	cmp	r4, #2
 80319e2:	d841      	bhi.n	8031a68 <__ieee754_atan2f+0x114>
 80319e4:	4b26      	ldr	r3, [pc, #152]	@ (8031a80 <__ieee754_atan2f+0x12c>)
 80319e6:	e7f6      	b.n	80319d6 <__ieee754_atan2f+0x82>
 80319e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80319ec:	d0df      	beq.n	80319ae <__ieee754_atan2f+0x5a>
 80319ee:	1a5b      	subs	r3, r3, r1
 80319f0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80319f4:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80319f8:	da1a      	bge.n	8031a30 <__ieee754_atan2f+0xdc>
 80319fa:	2a00      	cmp	r2, #0
 80319fc:	da01      	bge.n	8031a02 <__ieee754_atan2f+0xae>
 80319fe:	313c      	adds	r1, #60	@ 0x3c
 8031a00:	db19      	blt.n	8031a36 <__ieee754_atan2f+0xe2>
 8031a02:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031a06:	f7fd f935 	bl	802ec74 <fabsf>
 8031a0a:	f7fd f81b 	bl	802ea44 <atanf>
 8031a0e:	eef0 7a40 	vmov.f32	s15, s0
 8031a12:	2c01      	cmp	r4, #1
 8031a14:	d012      	beq.n	8031a3c <__ieee754_atan2f+0xe8>
 8031a16:	2c02      	cmp	r4, #2
 8031a18:	d017      	beq.n	8031a4a <__ieee754_atan2f+0xf6>
 8031a1a:	2c00      	cmp	r4, #0
 8031a1c:	d0ad      	beq.n	803197a <__ieee754_atan2f+0x26>
 8031a1e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031a84 <__ieee754_atan2f+0x130>
 8031a22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031a26:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031a88 <__ieee754_atan2f+0x134>
 8031a2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031a2e:	e7a4      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a30:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031a74 <__ieee754_atan2f+0x120>
 8031a34:	e7ed      	b.n	8031a12 <__ieee754_atan2f+0xbe>
 8031a36:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031a8c <__ieee754_atan2f+0x138>
 8031a3a:	e7ea      	b.n	8031a12 <__ieee754_atan2f+0xbe>
 8031a3c:	ee17 3a90 	vmov	r3, s15
 8031a40:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031a44:	ee07 3a90 	vmov	s15, r3
 8031a48:	e797      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a4a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031a84 <__ieee754_atan2f+0x130>
 8031a4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031a52:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031a88 <__ieee754_atan2f+0x134>
 8031a56:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031a5a:	e78e      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a5c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031a88 <__ieee754_atan2f+0x134>
 8031a60:	e78b      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a62:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031a90 <__ieee754_atan2f+0x13c>
 8031a66:	e788      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a68:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031a8c <__ieee754_atan2f+0x138>
 8031a6c:	e785      	b.n	803197a <__ieee754_atan2f+0x26>
 8031a6e:	bf00      	nop
 8031a70:	c0490fdb 	.word	0xc0490fdb
 8031a74:	3fc90fdb 	.word	0x3fc90fdb
 8031a78:	bfc90fdb 	.word	0xbfc90fdb
 8031a7c:	0803b124 	.word	0x0803b124
 8031a80:	0803b118 	.word	0x0803b118
 8031a84:	33bbbd2e 	.word	0x33bbbd2e
 8031a88:	40490fdb 	.word	0x40490fdb
 8031a8c:	00000000 	.word	0x00000000
 8031a90:	3f490fdb 	.word	0x3f490fdb

08031a94 <__ieee754_coshf>:
 8031a94:	b510      	push	{r4, lr}
 8031a96:	ee10 3a10 	vmov	r3, s0
 8031a9a:	f023 4400 	bic.w	r4, r3, #2147483648	@ 0x80000000
 8031a9e:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031aa2:	ed2d 8b02 	vpush	{d8}
 8031aa6:	d306      	bcc.n	8031ab6 <__ieee754_coshf+0x22>
 8031aa8:	ee60 7a00 	vmul.f32	s15, s0, s0
 8031aac:	ecbd 8b02 	vpop	{d8}
 8031ab0:	eeb0 0a67 	vmov.f32	s0, s15
 8031ab4:	bd10      	pop	{r4, pc}
 8031ab6:	4b23      	ldr	r3, [pc, #140]	@ (8031b44 <__ieee754_coshf+0xb0>)
 8031ab8:	429c      	cmp	r4, r3
 8031aba:	d813      	bhi.n	8031ae4 <__ieee754_coshf+0x50>
 8031abc:	f7fd f8da 	bl	802ec74 <fabsf>
 8031ac0:	f7fd f9c8 	bl	802ee54 <expm1f>
 8031ac4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031ac8:	f1b4 5f10 	cmp.w	r4, #603979776	@ 0x24000000
 8031acc:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031ad0:	d3ec      	bcc.n	8031aac <__ieee754_coshf+0x18>
 8031ad2:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8031ad6:	ee20 0a00 	vmul.f32	s0, s0, s0
 8031ada:	eec0 6a27 	vdiv.f32	s13, s0, s15
 8031ade:	ee76 7a87 	vadd.f32	s15, s13, s14
 8031ae2:	e7e3      	b.n	8031aac <__ieee754_coshf+0x18>
 8031ae4:	4b18      	ldr	r3, [pc, #96]	@ (8031b48 <__ieee754_coshf+0xb4>)
 8031ae6:	429c      	cmp	r4, r3
 8031ae8:	d80a      	bhi.n	8031b00 <__ieee754_coshf+0x6c>
 8031aea:	f7fd f8c3 	bl	802ec74 <fabsf>
 8031aee:	f000 f831 	bl	8031b54 <__ieee754_expf>
 8031af2:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8031af6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031afa:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031afe:	e7d5      	b.n	8031aac <__ieee754_coshf+0x18>
 8031b00:	4b12      	ldr	r3, [pc, #72]	@ (8031b4c <__ieee754_coshf+0xb8>)
 8031b02:	429c      	cmp	r4, r3
 8031b04:	d808      	bhi.n	8031b18 <__ieee754_coshf+0x84>
 8031b06:	f7fd f8b5 	bl	802ec74 <fabsf>
 8031b0a:	f000 f823 	bl	8031b54 <__ieee754_expf>
 8031b0e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031b12:	ee67 7a80 	vmul.f32	s15, s15, s0
 8031b16:	e7c9      	b.n	8031aac <__ieee754_coshf+0x18>
 8031b18:	4b0d      	ldr	r3, [pc, #52]	@ (8031b50 <__ieee754_coshf+0xbc>)
 8031b1a:	429c      	cmp	r4, r3
 8031b1c:	d80a      	bhi.n	8031b34 <__ieee754_coshf+0xa0>
 8031b1e:	f7fd f8a9 	bl	802ec74 <fabsf>
 8031b22:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8031b26:	ee20 0a08 	vmul.f32	s0, s0, s16
 8031b2a:	f000 f813 	bl	8031b54 <__ieee754_expf>
 8031b2e:	ee60 7a08 	vmul.f32	s15, s0, s16
 8031b32:	e7ee      	b.n	8031b12 <__ieee754_coshf+0x7e>
 8031b34:	ecbd 8b02 	vpop	{d8}
 8031b38:	2000      	movs	r0, #0
 8031b3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031b3e:	f7fd bad7 	b.w	802f0f0 <__math_oflowf>
 8031b42:	bf00      	nop
 8031b44:	3eb17217 	.word	0x3eb17217
 8031b48:	41afffff 	.word	0x41afffff
 8031b4c:	42b17217 	.word	0x42b17217
 8031b50:	42b2d4fc 	.word	0x42b2d4fc

08031b54 <__ieee754_expf>:
 8031b54:	ee10 2a10 	vmov	r2, s0
 8031b58:	f022 4300 	bic.w	r3, r2, #2147483648	@ 0x80000000
 8031b5c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b60:	d902      	bls.n	8031b68 <__ieee754_expf+0x14>
 8031b62:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031b66:	4770      	bx	lr
 8031b68:	ea4f 71d2 	mov.w	r1, r2, lsr #31
 8031b6c:	d106      	bne.n	8031b7c <__ieee754_expf+0x28>
 8031b6e:	eddf 7a4e 	vldr	s15, [pc, #312]	@ 8031ca8 <__ieee754_expf+0x154>
 8031b72:	2900      	cmp	r1, #0
 8031b74:	bf18      	it	ne
 8031b76:	eeb0 0a67 	vmovne.f32	s0, s15
 8031b7a:	4770      	bx	lr
 8031b7c:	484b      	ldr	r0, [pc, #300]	@ (8031cac <__ieee754_expf+0x158>)
 8031b7e:	4282      	cmp	r2, r0
 8031b80:	dd02      	ble.n	8031b88 <__ieee754_expf+0x34>
 8031b82:	2000      	movs	r0, #0
 8031b84:	f7fd bab4 	b.w	802f0f0 <__math_oflowf>
 8031b88:	2a00      	cmp	r2, #0
 8031b8a:	da05      	bge.n	8031b98 <__ieee754_expf+0x44>
 8031b8c:	4a48      	ldr	r2, [pc, #288]	@ (8031cb0 <__ieee754_expf+0x15c>)
 8031b8e:	4293      	cmp	r3, r2
 8031b90:	d902      	bls.n	8031b98 <__ieee754_expf+0x44>
 8031b92:	2000      	movs	r0, #0
 8031b94:	f7fd baa6 	b.w	802f0e4 <__math_uflowf>
 8031b98:	4a46      	ldr	r2, [pc, #280]	@ (8031cb4 <__ieee754_expf+0x160>)
 8031b9a:	4293      	cmp	r3, r2
 8031b9c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8031ba0:	d952      	bls.n	8031c48 <__ieee754_expf+0xf4>
 8031ba2:	4a45      	ldr	r2, [pc, #276]	@ (8031cb8 <__ieee754_expf+0x164>)
 8031ba4:	4293      	cmp	r3, r2
 8031ba6:	ea4f 0281 	mov.w	r2, r1, lsl #2
 8031baa:	d834      	bhi.n	8031c16 <__ieee754_expf+0xc2>
 8031bac:	4b43      	ldr	r3, [pc, #268]	@ (8031cbc <__ieee754_expf+0x168>)
 8031bae:	4413      	add	r3, r2
 8031bb0:	ed93 7a00 	vldr	s14, [r3]
 8031bb4:	4b42      	ldr	r3, [pc, #264]	@ (8031cc0 <__ieee754_expf+0x16c>)
 8031bb6:	4413      	add	r3, r2
 8031bb8:	ee30 7a47 	vsub.f32	s14, s0, s14
 8031bbc:	f1c1 0201 	rsb	r2, r1, #1
 8031bc0:	edd3 7a00 	vldr	s15, [r3]
 8031bc4:	1a52      	subs	r2, r2, r1
 8031bc6:	ee37 0a67 	vsub.f32	s0, s14, s15
 8031bca:	ee20 6a00 	vmul.f32	s12, s0, s0
 8031bce:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8031cc4 <__ieee754_expf+0x170>
 8031bd2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8031cc8 <__ieee754_expf+0x174>
 8031bd6:	eee6 6a05 	vfma.f32	s13, s12, s10
 8031bda:	ed9f 5a3c 	vldr	s10, [pc, #240]	@ 8031ccc <__ieee754_expf+0x178>
 8031bde:	eea6 5a86 	vfma.f32	s10, s13, s12
 8031be2:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 8031cd0 <__ieee754_expf+0x17c>
 8031be6:	eee5 6a06 	vfma.f32	s13, s10, s12
 8031bea:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 8031cd4 <__ieee754_expf+0x180>
 8031bee:	eea6 5a86 	vfma.f32	s10, s13, s12
 8031bf2:	eef0 6a40 	vmov.f32	s13, s0
 8031bf6:	eee5 6a46 	vfms.f32	s13, s10, s12
 8031bfa:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 8031bfe:	ee20 5a26 	vmul.f32	s10, s0, s13
 8031c02:	bb92      	cbnz	r2, 8031c6a <__ieee754_expf+0x116>
 8031c04:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8031c08:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8031c0c:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8031c10:	ee35 0ac0 	vsub.f32	s0, s11, s0
 8031c14:	4770      	bx	lr
 8031c16:	4b30      	ldr	r3, [pc, #192]	@ (8031cd8 <__ieee754_expf+0x184>)
 8031c18:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031cdc <__ieee754_expf+0x188>
 8031c1c:	eddf 6a30 	vldr	s13, [pc, #192]	@ 8031ce0 <__ieee754_expf+0x18c>
 8031c20:	4413      	add	r3, r2
 8031c22:	edd3 7a00 	vldr	s15, [r3]
 8031c26:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031c2a:	eeb0 7a40 	vmov.f32	s14, s0
 8031c2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8031c32:	ee17 2a90 	vmov	r2, s15
 8031c36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031c3a:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8031c3e:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8031ce4 <__ieee754_expf+0x190>
 8031c42:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031c46:	e7be      	b.n	8031bc6 <__ieee754_expf+0x72>
 8031c48:	f1b3 5f50 	cmp.w	r3, #872415232	@ 0x34000000
 8031c4c:	d20b      	bcs.n	8031c66 <__ieee754_expf+0x112>
 8031c4e:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8031ce8 <__ieee754_expf+0x194>
 8031c52:	ee70 6a26 	vadd.f32	s13, s0, s13
 8031c56:	eef4 6ae5 	vcmpe.f32	s13, s11
 8031c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031c5e:	dd02      	ble.n	8031c66 <__ieee754_expf+0x112>
 8031c60:	ee30 0a25 	vadd.f32	s0, s0, s11
 8031c64:	4770      	bx	lr
 8031c66:	2200      	movs	r2, #0
 8031c68:	e7af      	b.n	8031bca <__ieee754_expf+0x76>
 8031c6a:	ee36 6a66 	vsub.f32	s12, s12, s13
 8031c6e:	f112 0f7d 	cmn.w	r2, #125	@ 0x7d
 8031c72:	eec5 6a06 	vdiv.f32	s13, s10, s12
 8031c76:	bfb8      	it	lt
 8031c78:	3264      	addlt	r2, #100	@ 0x64
 8031c7a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031c7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031c82:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8031c86:	ee17 3a90 	vmov	r3, s15
 8031c8a:	bfab      	itete	ge
 8031c8c:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 8031c90:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 8031c94:	ee00 3a10 	vmovge	s0, r3
 8031c98:	eddf 7a14 	vldrlt	s15, [pc, #80]	@ 8031cec <__ieee754_expf+0x198>
 8031c9c:	bfbc      	itt	lt
 8031c9e:	ee00 3a10 	vmovlt	s0, r3
 8031ca2:	ee20 0a27 	vmullt.f32	s0, s0, s15
 8031ca6:	4770      	bx	lr
 8031ca8:	00000000 	.word	0x00000000
 8031cac:	42b17217 	.word	0x42b17217
 8031cb0:	42cff1b5 	.word	0x42cff1b5
 8031cb4:	3eb17218 	.word	0x3eb17218
 8031cb8:	3f851591 	.word	0x3f851591
 8031cbc:	0803b138 	.word	0x0803b138
 8031cc0:	0803b130 	.word	0x0803b130
 8031cc4:	3331bb4c 	.word	0x3331bb4c
 8031cc8:	b5ddea0e 	.word	0xb5ddea0e
 8031ccc:	388ab355 	.word	0x388ab355
 8031cd0:	bb360b61 	.word	0xbb360b61
 8031cd4:	3e2aaaab 	.word	0x3e2aaaab
 8031cd8:	0803b140 	.word	0x0803b140
 8031cdc:	3fb8aa3b 	.word	0x3fb8aa3b
 8031ce0:	3f317180 	.word	0x3f317180
 8031ce4:	3717f7d1 	.word	0x3717f7d1
 8031ce8:	7149f2ca 	.word	0x7149f2ca
 8031cec:	0d800000 	.word	0x0d800000

08031cf0 <__ieee754_fmodf>:
 8031cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031cf2:	ee10 5a90 	vmov	r5, s1
 8031cf6:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031cfa:	1e43      	subs	r3, r0, #1
 8031cfc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031d00:	d206      	bcs.n	8031d10 <__ieee754_fmodf+0x20>
 8031d02:	ee10 3a10 	vmov	r3, s0
 8031d06:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031d0a:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031d0e:	d304      	bcc.n	8031d1a <__ieee754_fmodf+0x2a>
 8031d10:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031d14:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031d18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031d1a:	4286      	cmp	r6, r0
 8031d1c:	dbfc      	blt.n	8031d18 <__ieee754_fmodf+0x28>
 8031d1e:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031d22:	d105      	bne.n	8031d30 <__ieee754_fmodf+0x40>
 8031d24:	4b32      	ldr	r3, [pc, #200]	@ (8031df0 <__ieee754_fmodf+0x100>)
 8031d26:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031d2a:	ed93 0a00 	vldr	s0, [r3]
 8031d2e:	e7f3      	b.n	8031d18 <__ieee754_fmodf+0x28>
 8031d30:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031d34:	d140      	bne.n	8031db8 <__ieee754_fmodf+0xc8>
 8031d36:	0232      	lsls	r2, r6, #8
 8031d38:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031d3c:	2a00      	cmp	r2, #0
 8031d3e:	dc38      	bgt.n	8031db2 <__ieee754_fmodf+0xc2>
 8031d40:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031d44:	d13e      	bne.n	8031dc4 <__ieee754_fmodf+0xd4>
 8031d46:	0207      	lsls	r7, r0, #8
 8031d48:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031d4c:	2f00      	cmp	r7, #0
 8031d4e:	da36      	bge.n	8031dbe <__ieee754_fmodf+0xce>
 8031d50:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031d54:	bfb9      	ittee	lt
 8031d56:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031d5a:	1a5b      	sublt	r3, r3, r1
 8031d5c:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031d60:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031d64:	bfb8      	it	lt
 8031d66:	fa06 f303 	lsllt.w	r3, r6, r3
 8031d6a:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031d6e:	bfb5      	itete	lt
 8031d70:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031d74:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031d78:	1aad      	sublt	r5, r5, r2
 8031d7a:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031d7e:	bfb8      	it	lt
 8031d80:	40a8      	lsllt	r0, r5
 8031d82:	1a89      	subs	r1, r1, r2
 8031d84:	1a1d      	subs	r5, r3, r0
 8031d86:	bb01      	cbnz	r1, 8031dca <__ieee754_fmodf+0xda>
 8031d88:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031d8c:	bf38      	it	cc
 8031d8e:	462b      	movcc	r3, r5
 8031d90:	2b00      	cmp	r3, #0
 8031d92:	d0c7      	beq.n	8031d24 <__ieee754_fmodf+0x34>
 8031d94:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031d98:	db1f      	blt.n	8031dda <__ieee754_fmodf+0xea>
 8031d9a:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031d9e:	db1f      	blt.n	8031de0 <__ieee754_fmodf+0xf0>
 8031da0:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031da4:	327f      	adds	r2, #127	@ 0x7f
 8031da6:	4323      	orrs	r3, r4
 8031da8:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031dac:	ee00 3a10 	vmov	s0, r3
 8031db0:	e7b2      	b.n	8031d18 <__ieee754_fmodf+0x28>
 8031db2:	3901      	subs	r1, #1
 8031db4:	0052      	lsls	r2, r2, #1
 8031db6:	e7c1      	b.n	8031d3c <__ieee754_fmodf+0x4c>
 8031db8:	15f1      	asrs	r1, r6, #23
 8031dba:	397f      	subs	r1, #127	@ 0x7f
 8031dbc:	e7c0      	b.n	8031d40 <__ieee754_fmodf+0x50>
 8031dbe:	3a01      	subs	r2, #1
 8031dc0:	007f      	lsls	r7, r7, #1
 8031dc2:	e7c3      	b.n	8031d4c <__ieee754_fmodf+0x5c>
 8031dc4:	15c2      	asrs	r2, r0, #23
 8031dc6:	3a7f      	subs	r2, #127	@ 0x7f
 8031dc8:	e7c2      	b.n	8031d50 <__ieee754_fmodf+0x60>
 8031dca:	2d00      	cmp	r5, #0
 8031dcc:	da02      	bge.n	8031dd4 <__ieee754_fmodf+0xe4>
 8031dce:	005b      	lsls	r3, r3, #1
 8031dd0:	3901      	subs	r1, #1
 8031dd2:	e7d7      	b.n	8031d84 <__ieee754_fmodf+0x94>
 8031dd4:	d0a6      	beq.n	8031d24 <__ieee754_fmodf+0x34>
 8031dd6:	006b      	lsls	r3, r5, #1
 8031dd8:	e7fa      	b.n	8031dd0 <__ieee754_fmodf+0xe0>
 8031dda:	005b      	lsls	r3, r3, #1
 8031ddc:	3a01      	subs	r2, #1
 8031dde:	e7d9      	b.n	8031d94 <__ieee754_fmodf+0xa4>
 8031de0:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031de4:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031de8:	3282      	adds	r2, #130	@ 0x82
 8031dea:	4113      	asrs	r3, r2
 8031dec:	4323      	orrs	r3, r4
 8031dee:	e7dd      	b.n	8031dac <__ieee754_fmodf+0xbc>
 8031df0:	0803b148 	.word	0x0803b148

08031df4 <__ieee754_logf>:
 8031df4:	ee10 3a10 	vmov	r3, s0
 8031df8:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8031dfc:	d106      	bne.n	8031e0c <__ieee754_logf+0x18>
 8031dfe:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8031f98 <__ieee754_logf+0x1a4>
 8031e02:	eddf 7a66 	vldr	s15, [pc, #408]	@ 8031f9c <__ieee754_logf+0x1a8>
 8031e06:	ee87 0a27 	vdiv.f32	s0, s14, s15
 8031e0a:	4770      	bx	lr
 8031e0c:	2b00      	cmp	r3, #0
 8031e0e:	461a      	mov	r2, r3
 8031e10:	da02      	bge.n	8031e18 <__ieee754_logf+0x24>
 8031e12:	ee30 7a40 	vsub.f32	s14, s0, s0
 8031e16:	e7f4      	b.n	8031e02 <__ieee754_logf+0xe>
 8031e18:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031e1c:	db02      	blt.n	8031e24 <__ieee754_logf+0x30>
 8031e1e:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031e22:	4770      	bx	lr
 8031e24:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031e28:	bfb8      	it	lt
 8031e2a:	eddf 7a5d 	vldrlt	s15, [pc, #372]	@ 8031fa0 <__ieee754_logf+0x1ac>
 8031e2e:	485d      	ldr	r0, [pc, #372]	@ (8031fa4 <__ieee754_logf+0x1b0>)
 8031e30:	bfbe      	ittt	lt
 8031e32:	ee60 7a27 	vmullt.f32	s15, s0, s15
 8031e36:	f06f 0118 	mvnlt.w	r1, #24
 8031e3a:	ee17 2a90 	vmovlt	r2, s15
 8031e3e:	ea4f 53e2 	mov.w	r3, r2, asr #23
 8031e42:	f3c2 0216 	ubfx	r2, r2, #0, #23
 8031e46:	4410      	add	r0, r2
 8031e48:	bfa8      	it	ge
 8031e4a:	2100      	movge	r1, #0
 8031e4c:	3b7f      	subs	r3, #127	@ 0x7f
 8031e4e:	440b      	add	r3, r1
 8031e50:	f400 0100 	and.w	r1, r0, #8388608	@ 0x800000
 8031e54:	f081 517e 	eor.w	r1, r1, #1065353216	@ 0x3f800000
 8031e58:	4311      	orrs	r1, r2
 8031e5a:	ee00 1a10 	vmov	s0, r1
 8031e5e:	4952      	ldr	r1, [pc, #328]	@ (8031fa8 <__ieee754_logf+0x1b4>)
 8031e60:	eb03 53d0 	add.w	r3, r3, r0, lsr #23
 8031e64:	f102 000f 	add.w	r0, r2, #15
 8031e68:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8031e6c:	4001      	ands	r1, r0
 8031e6e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031e72:	bb89      	cbnz	r1, 8031ed8 <__ieee754_logf+0xe4>
 8031e74:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8031e78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031e7c:	d10f      	bne.n	8031e9e <__ieee754_logf+0xaa>
 8031e7e:	2b00      	cmp	r3, #0
 8031e80:	f000 8087 	beq.w	8031f92 <__ieee754_logf+0x19e>
 8031e84:	ee07 3a90 	vmov	s15, r3
 8031e88:	ed9f 0a48 	vldr	s0, [pc, #288]	@ 8031fac <__ieee754_logf+0x1b8>
 8031e8c:	ed9f 7a48 	vldr	s14, [pc, #288]	@ 8031fb0 <__ieee754_logf+0x1bc>
 8031e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031e94:	ee27 0a80 	vmul.f32	s0, s15, s0
 8031e98:	eea7 0a87 	vfma.f32	s0, s15, s14
 8031e9c:	4770      	bx	lr
 8031e9e:	eddf 6a45 	vldr	s13, [pc, #276]	@ 8031fb4 <__ieee754_logf+0x1c0>
 8031ea2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031ea6:	eee0 7a66 	vfms.f32	s15, s0, s13
 8031eaa:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031eae:	ee27 7a27 	vmul.f32	s14, s14, s15
 8031eb2:	b913      	cbnz	r3, 8031eba <__ieee754_logf+0xc6>
 8031eb4:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031eb8:	4770      	bx	lr
 8031eba:	ee07 3a90 	vmov	s15, r3
 8031ebe:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 8031fac <__ieee754_logf+0x1b8>
 8031ec2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031ec6:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8031eca:	ee37 0a40 	vsub.f32	s0, s14, s0
 8031ece:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8031fb0 <__ieee754_logf+0x1bc>
 8031ed2:	ee97 0a87 	vfnms.f32	s0, s15, s14
 8031ed6:	4770      	bx	lr
 8031ed8:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8031edc:	ee70 7a27 	vadd.f32	s15, s0, s15
 8031ee0:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8031fb8 <__ieee754_logf+0x1c4>
 8031ee4:	eddf 4a35 	vldr	s9, [pc, #212]	@ 8031fbc <__ieee754_logf+0x1c8>
 8031ee8:	4935      	ldr	r1, [pc, #212]	@ (8031fc0 <__ieee754_logf+0x1cc>)
 8031eea:	ee80 6a27 	vdiv.f32	s12, s0, s15
 8031eee:	4411      	add	r1, r2
 8031ef0:	f5c2 1257 	rsb	r2, r2, #3522560	@ 0x35c000
 8031ef4:	f502 7222 	add.w	r2, r2, #648	@ 0x288
 8031ef8:	430a      	orrs	r2, r1
 8031efa:	2a00      	cmp	r2, #0
 8031efc:	ee07 3a90 	vmov	s15, r3
 8031f00:	ee26 5a06 	vmul.f32	s10, s12, s12
 8031f04:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8031f08:	ee25 7a05 	vmul.f32	s14, s10, s10
 8031f0c:	eddf 7a2d 	vldr	s15, [pc, #180]	@ 8031fc4 <__ieee754_logf+0x1d0>
 8031f10:	eee7 7a25 	vfma.f32	s15, s14, s11
 8031f14:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 8031fc8 <__ieee754_logf+0x1d4>
 8031f18:	eee7 5a87 	vfma.f32	s11, s15, s14
 8031f1c:	eddf 7a2b 	vldr	s15, [pc, #172]	@ 8031fcc <__ieee754_logf+0x1d8>
 8031f20:	eee7 7a24 	vfma.f32	s15, s14, s9
 8031f24:	eddf 4a2a 	vldr	s9, [pc, #168]	@ 8031fd0 <__ieee754_logf+0x1dc>
 8031f28:	eee7 4a87 	vfma.f32	s9, s15, s14
 8031f2c:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8031fd4 <__ieee754_logf+0x1e0>
 8031f30:	eee4 7a87 	vfma.f32	s15, s9, s14
 8031f34:	ee67 7a85 	vmul.f32	s15, s15, s10
 8031f38:	eee5 7a87 	vfma.f32	s15, s11, s14
 8031f3c:	dd1a      	ble.n	8031f74 <__ieee754_logf+0x180>
 8031f3e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8031f42:	ee20 7a07 	vmul.f32	s14, s0, s14
 8031f46:	ee27 7a00 	vmul.f32	s14, s14, s0
 8031f4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031f4e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8031f52:	b913      	cbnz	r3, 8031f5a <__ieee754_logf+0x166>
 8031f54:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031f58:	e7ac      	b.n	8031eb4 <__ieee754_logf+0xc0>
 8031f5a:	ed9f 6a14 	vldr	s12, [pc, #80]	@ 8031fac <__ieee754_logf+0x1b8>
 8031f5e:	eee6 7a86 	vfma.f32	s15, s13, s12
 8031f62:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031f66:	ee37 0a40 	vsub.f32	s0, s14, s0
 8031f6a:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8031fb0 <__ieee754_logf+0x1bc>
 8031f6e:	ee96 0aa7 	vfnms.f32	s0, s13, s15
 8031f72:	4770      	bx	lr
 8031f74:	ee70 7a67 	vsub.f32	s15, s0, s15
 8031f78:	ee67 7a86 	vmul.f32	s15, s15, s12
 8031f7c:	b913      	cbnz	r3, 8031f84 <__ieee754_logf+0x190>
 8031f7e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031f82:	4770      	bx	lr
 8031f84:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8031fac <__ieee754_logf+0x1b8>
 8031f88:	eee6 7ac7 	vfms.f32	s15, s13, s14
 8031f8c:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8031f90:	e7eb      	b.n	8031f6a <__ieee754_logf+0x176>
 8031f92:	ed9f 0a02 	vldr	s0, [pc, #8]	@ 8031f9c <__ieee754_logf+0x1a8>
 8031f96:	4770      	bx	lr
 8031f98:	cc000000 	.word	0xcc000000
 8031f9c:	00000000 	.word	0x00000000
 8031fa0:	4c000000 	.word	0x4c000000
 8031fa4:	004afb20 	.word	0x004afb20
 8031fa8:	007ffff0 	.word	0x007ffff0
 8031fac:	3717f7d1 	.word	0x3717f7d1
 8031fb0:	3f317180 	.word	0x3f317180
 8031fb4:	3eaaaaab 	.word	0x3eaaaaab
 8031fb8:	3e1cd04f 	.word	0x3e1cd04f
 8031fbc:	3e178897 	.word	0x3e178897
 8031fc0:	ffcf5c30 	.word	0xffcf5c30
 8031fc4:	3e638e29 	.word	0x3e638e29
 8031fc8:	3ecccccd 	.word	0x3ecccccd
 8031fcc:	3e3a3325 	.word	0x3e3a3325
 8031fd0:	3e924925 	.word	0x3e924925
 8031fd4:	3f2aaaab 	.word	0x3f2aaaab

08031fd8 <__ieee754_powf>:
 8031fd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8031fdc:	ee10 4a90 	vmov	r4, s1
 8031fe0:	f034 4900 	bics.w	r9, r4, #2147483648	@ 0x80000000
 8031fe4:	ed2d 8b02 	vpush	{d8}
 8031fe8:	ee10 6a10 	vmov	r6, s0
 8031fec:	eeb0 8a40 	vmov.f32	s16, s0
 8031ff0:	eef0 8a60 	vmov.f32	s17, s1
 8031ff4:	d10c      	bne.n	8032010 <__ieee754_powf+0x38>
 8031ff6:	f486 0680 	eor.w	r6, r6, #4194304	@ 0x400000
 8031ffa:	0076      	lsls	r6, r6, #1
 8031ffc:	f516 0f00 	cmn.w	r6, #8388608	@ 0x800000
 8032000:	f240 829c 	bls.w	803253c <__ieee754_powf+0x564>
 8032004:	ee38 0a28 	vadd.f32	s0, s16, s17
 8032008:	ecbd 8b02 	vpop	{d8}
 803200c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032010:	f026 4800 	bic.w	r8, r6, #2147483648	@ 0x80000000
 8032014:	f1b8 4fff 	cmp.w	r8, #2139095040	@ 0x7f800000
 8032018:	d802      	bhi.n	8032020 <__ieee754_powf+0x48>
 803201a:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 803201e:	d908      	bls.n	8032032 <__ieee754_powf+0x5a>
 8032020:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 8032024:	d1ee      	bne.n	8032004 <__ieee754_powf+0x2c>
 8032026:	f484 0480 	eor.w	r4, r4, #4194304	@ 0x400000
 803202a:	0064      	lsls	r4, r4, #1
 803202c:	f514 0f00 	cmn.w	r4, #8388608	@ 0x800000
 8032030:	e7e6      	b.n	8032000 <__ieee754_powf+0x28>
 8032032:	2e00      	cmp	r6, #0
 8032034:	da1e      	bge.n	8032074 <__ieee754_powf+0x9c>
 8032036:	f1b9 4f97 	cmp.w	r9, #1266679808	@ 0x4b800000
 803203a:	d22b      	bcs.n	8032094 <__ieee754_powf+0xbc>
 803203c:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8032040:	d332      	bcc.n	80320a8 <__ieee754_powf+0xd0>
 8032042:	ea4f 53e9 	mov.w	r3, r9, asr #23
 8032046:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 803204a:	fa49 f503 	asr.w	r5, r9, r3
 803204e:	fa05 f303 	lsl.w	r3, r5, r3
 8032052:	454b      	cmp	r3, r9
 8032054:	d126      	bne.n	80320a4 <__ieee754_powf+0xcc>
 8032056:	f005 0501 	and.w	r5, r5, #1
 803205a:	f1c5 0502 	rsb	r5, r5, #2
 803205e:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8032062:	d122      	bne.n	80320aa <__ieee754_powf+0xd2>
 8032064:	2c00      	cmp	r4, #0
 8032066:	f280 826f 	bge.w	8032548 <__ieee754_powf+0x570>
 803206a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 803206e:	ee87 0a88 	vdiv.f32	s0, s15, s16
 8032072:	e7c9      	b.n	8032008 <__ieee754_powf+0x30>
 8032074:	2500      	movs	r5, #0
 8032076:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 803207a:	d1f0      	bne.n	803205e <__ieee754_powf+0x86>
 803207c:	f1b8 5f7e 	cmp.w	r8, #1065353216	@ 0x3f800000
 8032080:	f000 825c 	beq.w	803253c <__ieee754_powf+0x564>
 8032084:	d908      	bls.n	8032098 <__ieee754_powf+0xc0>
 8032086:	ed9f 0ad8 	vldr	s0, [pc, #864]	@ 80323e8 <__ieee754_powf+0x410>
 803208a:	2c00      	cmp	r4, #0
 803208c:	bfa8      	it	ge
 803208e:	eeb0 0a68 	vmovge.f32	s0, s17
 8032092:	e7b9      	b.n	8032008 <__ieee754_powf+0x30>
 8032094:	2502      	movs	r5, #2
 8032096:	e7ee      	b.n	8032076 <__ieee754_powf+0x9e>
 8032098:	2c00      	cmp	r4, #0
 803209a:	f280 8252 	bge.w	8032542 <__ieee754_powf+0x56a>
 803209e:	eeb1 0a68 	vneg.f32	s0, s17
 80320a2:	e7b1      	b.n	8032008 <__ieee754_powf+0x30>
 80320a4:	2500      	movs	r5, #0
 80320a6:	e7da      	b.n	803205e <__ieee754_powf+0x86>
 80320a8:	2500      	movs	r5, #0
 80320aa:	f1b4 4f80 	cmp.w	r4, #1073741824	@ 0x40000000
 80320ae:	d102      	bne.n	80320b6 <__ieee754_powf+0xde>
 80320b0:	ee28 0a08 	vmul.f32	s0, s16, s16
 80320b4:	e7a8      	b.n	8032008 <__ieee754_powf+0x30>
 80320b6:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 80320ba:	d109      	bne.n	80320d0 <__ieee754_powf+0xf8>
 80320bc:	2e00      	cmp	r6, #0
 80320be:	db07      	blt.n	80320d0 <__ieee754_powf+0xf8>
 80320c0:	eeb0 0a48 	vmov.f32	s0, s16
 80320c4:	ecbd 8b02 	vpop	{d8}
 80320c8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80320cc:	f7fd b8f0 	b.w	802f2b0 <__ieee754_sqrtf>
 80320d0:	eeb0 0a48 	vmov.f32	s0, s16
 80320d4:	f7fc fdce 	bl	802ec74 <fabsf>
 80320d8:	f026 4340 	bic.w	r3, r6, #3221225472	@ 0xc0000000
 80320dc:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 80320e0:	4647      	mov	r7, r8
 80320e2:	d002      	beq.n	80320ea <__ieee754_powf+0x112>
 80320e4:	f1b8 0f00 	cmp.w	r8, #0
 80320e8:	d117      	bne.n	803211a <__ieee754_powf+0x142>
 80320ea:	2c00      	cmp	r4, #0
 80320ec:	bfbc      	itt	lt
 80320ee:	eef7 7a00 	vmovlt.f32	s15, #112	@ 0x3f800000  1.0
 80320f2:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 80320f6:	2e00      	cmp	r6, #0
 80320f8:	da86      	bge.n	8032008 <__ieee754_powf+0x30>
 80320fa:	f1a8 587e 	sub.w	r8, r8, #1065353216	@ 0x3f800000
 80320fe:	ea58 0805 	orrs.w	r8, r8, r5
 8032102:	d104      	bne.n	803210e <__ieee754_powf+0x136>
 8032104:	ee70 7a40 	vsub.f32	s15, s0, s0
 8032108:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 803210c:	e77c      	b.n	8032008 <__ieee754_powf+0x30>
 803210e:	2d01      	cmp	r5, #1
 8032110:	f47f af7a 	bne.w	8032008 <__ieee754_powf+0x30>
 8032114:	eeb1 0a40 	vneg.f32	s0, s0
 8032118:	e776      	b.n	8032008 <__ieee754_powf+0x30>
 803211a:	0ff0      	lsrs	r0, r6, #31
 803211c:	3801      	subs	r0, #1
 803211e:	ea55 0300 	orrs.w	r3, r5, r0
 8032122:	d104      	bne.n	803212e <__ieee754_powf+0x156>
 8032124:	ee38 8a48 	vsub.f32	s16, s16, s16
 8032128:	ee88 0a08 	vdiv.f32	s0, s16, s16
 803212c:	e76c      	b.n	8032008 <__ieee754_powf+0x30>
 803212e:	f1b9 4f9a 	cmp.w	r9, #1291845632	@ 0x4d000000
 8032132:	d973      	bls.n	803221c <__ieee754_powf+0x244>
 8032134:	4bad      	ldr	r3, [pc, #692]	@ (80323ec <__ieee754_powf+0x414>)
 8032136:	4598      	cmp	r8, r3
 8032138:	d808      	bhi.n	803214c <__ieee754_powf+0x174>
 803213a:	2c00      	cmp	r4, #0
 803213c:	da0b      	bge.n	8032156 <__ieee754_powf+0x17e>
 803213e:	2000      	movs	r0, #0
 8032140:	ecbd 8b02 	vpop	{d8}
 8032144:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032148:	f7fc bfd2 	b.w	802f0f0 <__math_oflowf>
 803214c:	4ba8      	ldr	r3, [pc, #672]	@ (80323f0 <__ieee754_powf+0x418>)
 803214e:	4598      	cmp	r8, r3
 8032150:	d908      	bls.n	8032164 <__ieee754_powf+0x18c>
 8032152:	2c00      	cmp	r4, #0
 8032154:	dcf3      	bgt.n	803213e <__ieee754_powf+0x166>
 8032156:	2000      	movs	r0, #0
 8032158:	ecbd 8b02 	vpop	{d8}
 803215c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032160:	f7fc bfc0 	b.w	802f0e4 <__math_uflowf>
 8032164:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8032168:	ee30 0a67 	vsub.f32	s0, s0, s15
 803216c:	eddf 6aa1 	vldr	s13, [pc, #644]	@ 80323f4 <__ieee754_powf+0x41c>
 8032170:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8032174:	eee0 6a67 	vfms.f32	s13, s0, s15
 8032178:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 803217c:	eee6 7ac0 	vfms.f32	s15, s13, s0
 8032180:	ee20 7a00 	vmul.f32	s14, s0, s0
 8032184:	ee27 7a27 	vmul.f32	s14, s14, s15
 8032188:	eddf 7a9b 	vldr	s15, [pc, #620]	@ 80323f8 <__ieee754_powf+0x420>
 803218c:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 8032190:	ed9f 7a9a 	vldr	s14, [pc, #616]	@ 80323fc <__ieee754_powf+0x424>
 8032194:	eee0 7a07 	vfma.f32	s15, s0, s14
 8032198:	ed9f 7a99 	vldr	s14, [pc, #612]	@ 8032400 <__ieee754_powf+0x428>
 803219c:	eef0 6a67 	vmov.f32	s13, s15
 80321a0:	eee0 6a07 	vfma.f32	s13, s0, s14
 80321a4:	ee16 3a90 	vmov	r3, s13
 80321a8:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 80321ac:	f023 030f 	bic.w	r3, r3, #15
 80321b0:	ee06 3a90 	vmov	s13, r3
 80321b4:	eee0 6a47 	vfms.f32	s13, s0, s14
 80321b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80321bc:	3d01      	subs	r5, #1
 80321be:	f424 647f 	bic.w	r4, r4, #4080	@ 0xff0
 80321c2:	4305      	orrs	r5, r0
 80321c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80321c8:	f024 040f 	bic.w	r4, r4, #15
 80321cc:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 80321d0:	bf18      	it	ne
 80321d2:	eeb0 8a47 	vmovne.f32	s16, s14
 80321d6:	ee07 4a10 	vmov	s14, r4
 80321da:	ee67 0aa8 	vmul.f32	s1, s15, s17
 80321de:	ee38 7ac7 	vsub.f32	s14, s17, s14
 80321e2:	ee07 3a90 	vmov	s15, r3
 80321e6:	eee7 0a27 	vfma.f32	s1, s14, s15
 80321ea:	ee07 4a10 	vmov	s14, r4
 80321ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80321f2:	ee30 7aa7 	vadd.f32	s14, s1, s15
 80321f6:	ee17 1a10 	vmov	r1, s14
 80321fa:	2900      	cmp	r1, #0
 80321fc:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8032200:	f340 80dd 	ble.w	80323be <__ieee754_powf+0x3e6>
 8032204:	f1b3 4f86 	cmp.w	r3, #1124073472	@ 0x43000000
 8032208:	f240 80ca 	bls.w	80323a0 <__ieee754_powf+0x3c8>
 803220c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8032210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032214:	bf4c      	ite	mi
 8032216:	2001      	movmi	r0, #1
 8032218:	2000      	movpl	r0, #0
 803221a:	e791      	b.n	8032140 <__ieee754_powf+0x168>
 803221c:	f016 4fff 	tst.w	r6, #2139095040	@ 0x7f800000
 8032220:	bf01      	itttt	eq
 8032222:	eddf 7a78 	vldreq	s15, [pc, #480]	@ 8032404 <__ieee754_powf+0x42c>
 8032226:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 803222a:	f06f 0317 	mvneq.w	r3, #23
 803222e:	ee17 7a90 	vmoveq	r7, s15
 8032232:	ea4f 52e7 	mov.w	r2, r7, asr #23
 8032236:	bf18      	it	ne
 8032238:	2300      	movne	r3, #0
 803223a:	3a7f      	subs	r2, #127	@ 0x7f
 803223c:	441a      	add	r2, r3
 803223e:	4b72      	ldr	r3, [pc, #456]	@ (8032408 <__ieee754_powf+0x430>)
 8032240:	f3c7 0716 	ubfx	r7, r7, #0, #23
 8032244:	429f      	cmp	r7, r3
 8032246:	f047 517e 	orr.w	r1, r7, #1065353216	@ 0x3f800000
 803224a:	dd06      	ble.n	803225a <__ieee754_powf+0x282>
 803224c:	4b6f      	ldr	r3, [pc, #444]	@ (803240c <__ieee754_powf+0x434>)
 803224e:	429f      	cmp	r7, r3
 8032250:	f340 80a4 	ble.w	803239c <__ieee754_powf+0x3c4>
 8032254:	3201      	adds	r2, #1
 8032256:	f5a1 0100 	sub.w	r1, r1, #8388608	@ 0x800000
 803225a:	2600      	movs	r6, #0
 803225c:	4b6c      	ldr	r3, [pc, #432]	@ (8032410 <__ieee754_powf+0x438>)
 803225e:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8032262:	ee07 1a10 	vmov	s14, r1
 8032266:	edd3 5a00 	vldr	s11, [r3]
 803226a:	4b6a      	ldr	r3, [pc, #424]	@ (8032414 <__ieee754_powf+0x43c>)
 803226c:	ee75 7a87 	vadd.f32	s15, s11, s14
 8032270:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8032274:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 8032278:	1049      	asrs	r1, r1, #1
 803227a:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
 803227e:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
 8032282:	eb01 5146 	add.w	r1, r1, r6, lsl #21
 8032286:	ee37 6a65 	vsub.f32	s12, s14, s11
 803228a:	ee07 1a90 	vmov	s15, r1
 803228e:	ee26 5a24 	vmul.f32	s10, s12, s9
 8032292:	ee77 5ae5 	vsub.f32	s11, s15, s11
 8032296:	ee15 7a10 	vmov	r7, s10
 803229a:	401f      	ands	r7, r3
 803229c:	ee06 7a90 	vmov	s13, r7
 80322a0:	eea6 6ae7 	vfms.f32	s12, s13, s15
 80322a4:	ee37 7a65 	vsub.f32	s14, s14, s11
 80322a8:	ee65 7a05 	vmul.f32	s15, s10, s10
 80322ac:	eea6 6ac7 	vfms.f32	s12, s13, s14
 80322b0:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8032418 <__ieee754_powf+0x440>
 80322b4:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 803241c <__ieee754_powf+0x444>
 80322b8:	eee7 5a87 	vfma.f32	s11, s15, s14
 80322bc:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8032420 <__ieee754_powf+0x448>
 80322c0:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80322c4:	eddf 5a4b 	vldr	s11, [pc, #300]	@ 80323f4 <__ieee754_powf+0x41c>
 80322c8:	eee7 5a27 	vfma.f32	s11, s14, s15
 80322cc:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 8032424 <__ieee754_powf+0x44c>
 80322d0:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80322d4:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8032428 <__ieee754_powf+0x450>
 80322d8:	ee26 6a24 	vmul.f32	s12, s12, s9
 80322dc:	eee7 5a27 	vfma.f32	s11, s14, s15
 80322e0:	ee35 7a26 	vadd.f32	s14, s10, s13
 80322e4:	ee67 4aa7 	vmul.f32	s9, s15, s15
 80322e8:	ee27 7a06 	vmul.f32	s14, s14, s12
 80322ec:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
 80322f0:	eea4 7aa5 	vfma.f32	s14, s9, s11
 80322f4:	eef0 5a67 	vmov.f32	s11, s15
 80322f8:	eee6 5aa6 	vfma.f32	s11, s13, s13
 80322fc:	ee75 5a87 	vadd.f32	s11, s11, s14
 8032300:	ee15 1a90 	vmov	r1, s11
 8032304:	4019      	ands	r1, r3
 8032306:	ee05 1a90 	vmov	s11, r1
 803230a:	ee75 7ae7 	vsub.f32	s15, s11, s15
 803230e:	eee6 7ae6 	vfms.f32	s15, s13, s13
 8032312:	ee77 7a67 	vsub.f32	s15, s14, s15
 8032316:	ee67 7a85 	vmul.f32	s15, s15, s10
 803231a:	eee6 7a25 	vfma.f32	s15, s12, s11
 803231e:	eeb0 6a67 	vmov.f32	s12, s15
 8032322:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8032326:	ee16 1a10 	vmov	r1, s12
 803232a:	4019      	ands	r1, r3
 803232c:	ee06 1a10 	vmov	s12, r1
 8032330:	eeb0 7a46 	vmov.f32	s14, s12
 8032334:	eea6 7ae5 	vfms.f32	s14, s13, s11
 8032338:	493c      	ldr	r1, [pc, #240]	@ (803242c <__ieee754_powf+0x454>)
 803233a:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 803233e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032342:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8032430 <__ieee754_powf+0x458>
 8032346:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8032434 <__ieee754_powf+0x45c>
 803234a:	ee67 7a87 	vmul.f32	s15, s15, s14
 803234e:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8032438 <__ieee754_powf+0x460>
 8032352:	eee6 7a07 	vfma.f32	s15, s12, s14
 8032356:	ed91 7a00 	vldr	s14, [r1]
 803235a:	ee77 7a87 	vadd.f32	s15, s15, s14
 803235e:	ee07 2a10 	vmov	s14, r2
 8032362:	eef0 6a67 	vmov.f32	s13, s15
 8032366:	4a35      	ldr	r2, [pc, #212]	@ (803243c <__ieee754_powf+0x464>)
 8032368:	eee6 6a25 	vfma.f32	s13, s12, s11
 803236c:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8032370:	ed92 5a00 	vldr	s10, [r2]
 8032374:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8032378:	ee76 6a85 	vadd.f32	s13, s13, s10
 803237c:	ee76 6a87 	vadd.f32	s13, s13, s14
 8032380:	ee16 2a90 	vmov	r2, s13
 8032384:	4013      	ands	r3, r2
 8032386:	ee06 3a90 	vmov	s13, r3
 803238a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 803238e:	ee37 7a45 	vsub.f32	s14, s14, s10
 8032392:	eea6 7a65 	vfms.f32	s14, s12, s11
 8032396:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803239a:	e70f      	b.n	80321bc <__ieee754_powf+0x1e4>
 803239c:	2601      	movs	r6, #1
 803239e:	e75d      	b.n	803225c <__ieee754_powf+0x284>
 80323a0:	d152      	bne.n	8032448 <__ieee754_powf+0x470>
 80323a2:	eddf 6a27 	vldr	s13, [pc, #156]	@ 8032440 <__ieee754_powf+0x468>
 80323a6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80323aa:	ee70 6aa6 	vadd.f32	s13, s1, s13
 80323ae:	eef4 6ac7 	vcmpe.f32	s13, s14
 80323b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80323b6:	f73f af29 	bgt.w	803220c <__ieee754_powf+0x234>
 80323ba:	2386      	movs	r3, #134	@ 0x86
 80323bc:	e048      	b.n	8032450 <__ieee754_powf+0x478>
 80323be:	4a21      	ldr	r2, [pc, #132]	@ (8032444 <__ieee754_powf+0x46c>)
 80323c0:	4293      	cmp	r3, r2
 80323c2:	d907      	bls.n	80323d4 <__ieee754_powf+0x3fc>
 80323c4:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80323c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80323cc:	bf4c      	ite	mi
 80323ce:	2001      	movmi	r0, #1
 80323d0:	2000      	movpl	r0, #0
 80323d2:	e6c1      	b.n	8032158 <__ieee754_powf+0x180>
 80323d4:	d138      	bne.n	8032448 <__ieee754_powf+0x470>
 80323d6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80323da:	eeb4 7ae0 	vcmpe.f32	s14, s1
 80323de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80323e2:	dbea      	blt.n	80323ba <__ieee754_powf+0x3e2>
 80323e4:	e7ee      	b.n	80323c4 <__ieee754_powf+0x3ec>
 80323e6:	bf00      	nop
 80323e8:	00000000 	.word	0x00000000
 80323ec:	3f7ffff3 	.word	0x3f7ffff3
 80323f0:	3f800007 	.word	0x3f800007
 80323f4:	3eaaaaab 	.word	0x3eaaaaab
 80323f8:	3fb8aa3b 	.word	0x3fb8aa3b
 80323fc:	36eca570 	.word	0x36eca570
 8032400:	3fb8aa00 	.word	0x3fb8aa00
 8032404:	4b800000 	.word	0x4b800000
 8032408:	001cc471 	.word	0x001cc471
 803240c:	005db3d6 	.word	0x005db3d6
 8032410:	0803b160 	.word	0x0803b160
 8032414:	fffff000 	.word	0xfffff000
 8032418:	3e6c3255 	.word	0x3e6c3255
 803241c:	3e53f142 	.word	0x3e53f142
 8032420:	3e8ba305 	.word	0x3e8ba305
 8032424:	3edb6db7 	.word	0x3edb6db7
 8032428:	3f19999a 	.word	0x3f19999a
 803242c:	0803b150 	.word	0x0803b150
 8032430:	3f76384f 	.word	0x3f76384f
 8032434:	3f763800 	.word	0x3f763800
 8032438:	369dc3a0 	.word	0x369dc3a0
 803243c:	0803b158 	.word	0x0803b158
 8032440:	3338aa3c 	.word	0x3338aa3c
 8032444:	43160000 	.word	0x43160000
 8032448:	f1b3 5f7c 	cmp.w	r3, #1056964608	@ 0x3f000000
 803244c:	d971      	bls.n	8032532 <__ieee754_powf+0x55a>
 803244e:	15db      	asrs	r3, r3, #23
 8032450:	3b7e      	subs	r3, #126	@ 0x7e
 8032452:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8032456:	4118      	asrs	r0, r3
 8032458:	4408      	add	r0, r1
 803245a:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 803245e:	4a3c      	ldr	r2, [pc, #240]	@ (8032550 <__ieee754_powf+0x578>)
 8032460:	3b7f      	subs	r3, #127	@ 0x7f
 8032462:	411a      	asrs	r2, r3
 8032464:	4002      	ands	r2, r0
 8032466:	ee07 2a10 	vmov	s14, r2
 803246a:	f3c0 0016 	ubfx	r0, r0, #0, #23
 803246e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8032472:	f1c3 0317 	rsb	r3, r3, #23
 8032476:	4118      	asrs	r0, r3
 8032478:	2900      	cmp	r1, #0
 803247a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803247e:	bfb8      	it	lt
 8032480:	4240      	neglt	r0, r0
 8032482:	ee37 7aa0 	vadd.f32	s14, s15, s1
 8032486:	eddf 6a33 	vldr	s13, [pc, #204]	@ 8032554 <__ieee754_powf+0x57c>
 803248a:	ed9f 6a33 	vldr	s12, [pc, #204]	@ 8032558 <__ieee754_powf+0x580>
 803248e:	ee17 3a10 	vmov	r3, s14
 8032492:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8032496:	f023 030f 	bic.w	r3, r3, #15
 803249a:	ee07 3a10 	vmov	s14, r3
 803249e:	ee77 7a67 	vsub.f32	s15, s14, s15
 80324a2:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80324a6:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80324aa:	eddf 7a2c 	vldr	s15, [pc, #176]	@ 803255c <__ieee754_powf+0x584>
 80324ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 80324b2:	eee0 7aa6 	vfma.f32	s15, s1, s13
 80324b6:	eef0 6a67 	vmov.f32	s13, s15
 80324ba:	eee7 6a06 	vfma.f32	s13, s14, s12
 80324be:	eef0 5a66 	vmov.f32	s11, s13
 80324c2:	eee7 5a46 	vfms.f32	s11, s14, s12
 80324c6:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80324ca:	ee77 7ae5 	vsub.f32	s15, s15, s11
 80324ce:	ed9f 6a24 	vldr	s12, [pc, #144]	@ 8032560 <__ieee754_powf+0x588>
 80324d2:	eddf 5a24 	vldr	s11, [pc, #144]	@ 8032564 <__ieee754_powf+0x58c>
 80324d6:	eea7 6a25 	vfma.f32	s12, s14, s11
 80324da:	eddf 5a23 	vldr	s11, [pc, #140]	@ 8032568 <__ieee754_powf+0x590>
 80324de:	eee6 5a07 	vfma.f32	s11, s12, s14
 80324e2:	ed9f 6a22 	vldr	s12, [pc, #136]	@ 803256c <__ieee754_powf+0x594>
 80324e6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80324ea:	eddf 5a21 	vldr	s11, [pc, #132]	@ 8032570 <__ieee754_powf+0x598>
 80324ee:	eee6 5a07 	vfma.f32	s11, s12, s14
 80324f2:	eeb0 6a66 	vmov.f32	s12, s13
 80324f6:	eea5 6ac7 	vfms.f32	s12, s11, s14
 80324fa:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80324fe:	ee66 5a86 	vmul.f32	s11, s13, s12
 8032502:	ee36 6a47 	vsub.f32	s12, s12, s14
 8032506:	eee6 7aa7 	vfma.f32	s15, s13, s15
 803250a:	ee85 7a86 	vdiv.f32	s14, s11, s12
 803250e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8032512:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8032516:	ee30 0a67 	vsub.f32	s0, s0, s15
 803251a:	ee10 3a10 	vmov	r3, s0
 803251e:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 8032522:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8032526:	da06      	bge.n	8032536 <__ieee754_powf+0x55e>
 8032528:	f7fb fc26 	bl	802dd78 <scalbnf>
 803252c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8032530:	e56a      	b.n	8032008 <__ieee754_powf+0x30>
 8032532:	2000      	movs	r0, #0
 8032534:	e7a5      	b.n	8032482 <__ieee754_powf+0x4aa>
 8032536:	ee00 3a10 	vmov	s0, r3
 803253a:	e7f7      	b.n	803252c <__ieee754_powf+0x554>
 803253c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8032540:	e562      	b.n	8032008 <__ieee754_powf+0x30>
 8032542:	ed9f 0a0c 	vldr	s0, [pc, #48]	@ 8032574 <__ieee754_powf+0x59c>
 8032546:	e55f      	b.n	8032008 <__ieee754_powf+0x30>
 8032548:	eeb0 0a48 	vmov.f32	s0, s16
 803254c:	e55c      	b.n	8032008 <__ieee754_powf+0x30>
 803254e:	bf00      	nop
 8032550:	ff800000 	.word	0xff800000
 8032554:	3f317218 	.word	0x3f317218
 8032558:	3f317200 	.word	0x3f317200
 803255c:	35bfbe8c 	.word	0x35bfbe8c
 8032560:	b5ddea0e 	.word	0xb5ddea0e
 8032564:	3331bb4c 	.word	0x3331bb4c
 8032568:	388ab355 	.word	0x388ab355
 803256c:	bb360b61 	.word	0xbb360b61
 8032570:	3e2aaaab 	.word	0x3e2aaaab
 8032574:	00000000 	.word	0x00000000

08032578 <__ieee754_rem_pio2f>:
 8032578:	b5f0      	push	{r4, r5, r6, r7, lr}
 803257a:	ee10 6a10 	vmov	r6, s0
 803257e:	4b88      	ldr	r3, [pc, #544]	@ (80327a0 <__ieee754_rem_pio2f+0x228>)
 8032580:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8032584:	429d      	cmp	r5, r3
 8032586:	b087      	sub	sp, #28
 8032588:	4604      	mov	r4, r0
 803258a:	d805      	bhi.n	8032598 <__ieee754_rem_pio2f+0x20>
 803258c:	2300      	movs	r3, #0
 803258e:	ed80 0a00 	vstr	s0, [r0]
 8032592:	6043      	str	r3, [r0, #4]
 8032594:	2000      	movs	r0, #0
 8032596:	e022      	b.n	80325de <__ieee754_rem_pio2f+0x66>
 8032598:	4b82      	ldr	r3, [pc, #520]	@ (80327a4 <__ieee754_rem_pio2f+0x22c>)
 803259a:	429d      	cmp	r5, r3
 803259c:	d83a      	bhi.n	8032614 <__ieee754_rem_pio2f+0x9c>
 803259e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 80325a2:	2e00      	cmp	r6, #0
 80325a4:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 80327a8 <__ieee754_rem_pio2f+0x230>
 80325a8:	4a80      	ldr	r2, [pc, #512]	@ (80327ac <__ieee754_rem_pio2f+0x234>)
 80325aa:	f023 030f 	bic.w	r3, r3, #15
 80325ae:	dd18      	ble.n	80325e2 <__ieee754_rem_pio2f+0x6a>
 80325b0:	4293      	cmp	r3, r2
 80325b2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80325b6:	bf09      	itett	eq
 80325b8:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 80327b0 <__ieee754_rem_pio2f+0x238>
 80325bc:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80327b4 <__ieee754_rem_pio2f+0x23c>
 80325c0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80327b8 <__ieee754_rem_pio2f+0x240>
 80325c4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80325c8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80325cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80325d0:	ed80 7a00 	vstr	s14, [r0]
 80325d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80325d8:	edc0 7a01 	vstr	s15, [r0, #4]
 80325dc:	2001      	movs	r0, #1
 80325de:	b007      	add	sp, #28
 80325e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80325e2:	4293      	cmp	r3, r2
 80325e4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80325e8:	bf09      	itett	eq
 80325ea:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 80327b0 <__ieee754_rem_pio2f+0x238>
 80325ee:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80327b4 <__ieee754_rem_pio2f+0x23c>
 80325f2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80327b8 <__ieee754_rem_pio2f+0x240>
 80325f6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80325fa:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80325fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032602:	ed80 7a00 	vstr	s14, [r0]
 8032606:	ee77 7aa6 	vadd.f32	s15, s15, s13
 803260a:	edc0 7a01 	vstr	s15, [r0, #4]
 803260e:	f04f 30ff 	mov.w	r0, #4294967295
 8032612:	e7e4      	b.n	80325de <__ieee754_rem_pio2f+0x66>
 8032614:	4b69      	ldr	r3, [pc, #420]	@ (80327bc <__ieee754_rem_pio2f+0x244>)
 8032616:	429d      	cmp	r5, r3
 8032618:	d873      	bhi.n	8032702 <__ieee754_rem_pio2f+0x18a>
 803261a:	f7fc fb2b 	bl	802ec74 <fabsf>
 803261e:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80327c0 <__ieee754_rem_pio2f+0x248>
 8032622:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8032626:	eee0 7a07 	vfma.f32	s15, s0, s14
 803262a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803262e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8032632:	ee17 0a90 	vmov	r0, s15
 8032636:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80327a8 <__ieee754_rem_pio2f+0x230>
 803263a:	eea7 0a67 	vfms.f32	s0, s14, s15
 803263e:	281f      	cmp	r0, #31
 8032640:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80327b4 <__ieee754_rem_pio2f+0x23c>
 8032644:	ee67 7a27 	vmul.f32	s15, s14, s15
 8032648:	eeb1 6a47 	vneg.f32	s12, s14
 803264c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8032650:	ee16 1a90 	vmov	r1, s13
 8032654:	dc09      	bgt.n	803266a <__ieee754_rem_pio2f+0xf2>
 8032656:	4a5b      	ldr	r2, [pc, #364]	@ (80327c4 <__ieee754_rem_pio2f+0x24c>)
 8032658:	1e47      	subs	r7, r0, #1
 803265a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 803265e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8032662:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8032666:	4293      	cmp	r3, r2
 8032668:	d107      	bne.n	803267a <__ieee754_rem_pio2f+0x102>
 803266a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 803266e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8032672:	2a08      	cmp	r2, #8
 8032674:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8032678:	dc14      	bgt.n	80326a4 <__ieee754_rem_pio2f+0x12c>
 803267a:	6021      	str	r1, [r4, #0]
 803267c:	ed94 7a00 	vldr	s14, [r4]
 8032680:	ee30 0a47 	vsub.f32	s0, s0, s14
 8032684:	2e00      	cmp	r6, #0
 8032686:	ee30 0a67 	vsub.f32	s0, s0, s15
 803268a:	ed84 0a01 	vstr	s0, [r4, #4]
 803268e:	daa6      	bge.n	80325de <__ieee754_rem_pio2f+0x66>
 8032690:	eeb1 7a47 	vneg.f32	s14, s14
 8032694:	eeb1 0a40 	vneg.f32	s0, s0
 8032698:	ed84 7a00 	vstr	s14, [r4]
 803269c:	ed84 0a01 	vstr	s0, [r4, #4]
 80326a0:	4240      	negs	r0, r0
 80326a2:	e79c      	b.n	80325de <__ieee754_rem_pio2f+0x66>
 80326a4:	eddf 5a42 	vldr	s11, [pc, #264]	@ 80327b0 <__ieee754_rem_pio2f+0x238>
 80326a8:	eef0 6a40 	vmov.f32	s13, s0
 80326ac:	eee6 6a25 	vfma.f32	s13, s12, s11
 80326b0:	ee70 7a66 	vsub.f32	s15, s0, s13
 80326b4:	eee6 7a25 	vfma.f32	s15, s12, s11
 80326b8:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80327b8 <__ieee754_rem_pio2f+0x240>
 80326bc:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80326c0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80326c4:	ee15 2a90 	vmov	r2, s11
 80326c8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80326cc:	1a5b      	subs	r3, r3, r1
 80326ce:	2b19      	cmp	r3, #25
 80326d0:	dc04      	bgt.n	80326dc <__ieee754_rem_pio2f+0x164>
 80326d2:	edc4 5a00 	vstr	s11, [r4]
 80326d6:	eeb0 0a66 	vmov.f32	s0, s13
 80326da:	e7cf      	b.n	803267c <__ieee754_rem_pio2f+0x104>
 80326dc:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80327c8 <__ieee754_rem_pio2f+0x250>
 80326e0:	eeb0 0a66 	vmov.f32	s0, s13
 80326e4:	eea6 0a25 	vfma.f32	s0, s12, s11
 80326e8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80326ec:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80327cc <__ieee754_rem_pio2f+0x254>
 80326f0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80326f4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80326f8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80326fc:	ed84 7a00 	vstr	s14, [r4]
 8032700:	e7bc      	b.n	803267c <__ieee754_rem_pio2f+0x104>
 8032702:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8032706:	d306      	bcc.n	8032716 <__ieee754_rem_pio2f+0x19e>
 8032708:	ee70 7a40 	vsub.f32	s15, s0, s0
 803270c:	edc0 7a01 	vstr	s15, [r0, #4]
 8032710:	edc0 7a00 	vstr	s15, [r0]
 8032714:	e73e      	b.n	8032594 <__ieee754_rem_pio2f+0x1c>
 8032716:	15ea      	asrs	r2, r5, #23
 8032718:	3a86      	subs	r2, #134	@ 0x86
 803271a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 803271e:	ee07 3a90 	vmov	s15, r3
 8032722:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8032726:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80327d0 <__ieee754_rem_pio2f+0x258>
 803272a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 803272e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032732:	ed8d 7a03 	vstr	s14, [sp, #12]
 8032736:	ee67 7aa6 	vmul.f32	s15, s15, s13
 803273a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 803273e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8032742:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032746:	ed8d 7a04 	vstr	s14, [sp, #16]
 803274a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 803274e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8032752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032756:	edcd 7a05 	vstr	s15, [sp, #20]
 803275a:	d11e      	bne.n	803279a <__ieee754_rem_pio2f+0x222>
 803275c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8032760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032764:	bf0c      	ite	eq
 8032766:	2301      	moveq	r3, #1
 8032768:	2302      	movne	r3, #2
 803276a:	491a      	ldr	r1, [pc, #104]	@ (80327d4 <__ieee754_rem_pio2f+0x25c>)
 803276c:	9101      	str	r1, [sp, #4]
 803276e:	2102      	movs	r1, #2
 8032770:	9100      	str	r1, [sp, #0]
 8032772:	a803      	add	r0, sp, #12
 8032774:	4621      	mov	r1, r4
 8032776:	f000 fedf 	bl	8033538 <__kernel_rem_pio2f>
 803277a:	2e00      	cmp	r6, #0
 803277c:	f6bf af2f 	bge.w	80325de <__ieee754_rem_pio2f+0x66>
 8032780:	edd4 7a00 	vldr	s15, [r4]
 8032784:	eef1 7a67 	vneg.f32	s15, s15
 8032788:	edc4 7a00 	vstr	s15, [r4]
 803278c:	edd4 7a01 	vldr	s15, [r4, #4]
 8032790:	eef1 7a67 	vneg.f32	s15, s15
 8032794:	edc4 7a01 	vstr	s15, [r4, #4]
 8032798:	e782      	b.n	80326a0 <__ieee754_rem_pio2f+0x128>
 803279a:	2303      	movs	r3, #3
 803279c:	e7e5      	b.n	803276a <__ieee754_rem_pio2f+0x1f2>
 803279e:	bf00      	nop
 80327a0:	3f490fd8 	.word	0x3f490fd8
 80327a4:	4016cbe3 	.word	0x4016cbe3
 80327a8:	3fc90f80 	.word	0x3fc90f80
 80327ac:	3fc90fd0 	.word	0x3fc90fd0
 80327b0:	37354400 	.word	0x37354400
 80327b4:	37354443 	.word	0x37354443
 80327b8:	2e85a308 	.word	0x2e85a308
 80327bc:	43490f80 	.word	0x43490f80
 80327c0:	3f22f984 	.word	0x3f22f984
 80327c4:	0803b168 	.word	0x0803b168
 80327c8:	2e85a300 	.word	0x2e85a300
 80327cc:	248d3132 	.word	0x248d3132
 80327d0:	43800000 	.word	0x43800000
 80327d4:	0803b1e8 	.word	0x0803b1e8

080327d8 <__ieee754_sinhf>:
 80327d8:	b510      	push	{r4, lr}
 80327da:	ee10 3a10 	vmov	r3, s0
 80327de:	f023 4400 	bic.w	r4, r3, #2147483648	@ 0x80000000
 80327e2:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80327e6:	ed2d 8b02 	vpush	{d8}
 80327ea:	eef0 7a40 	vmov.f32	s15, s0
 80327ee:	d306      	bcc.n	80327fe <__ieee754_sinhf+0x26>
 80327f0:	ee70 7a00 	vadd.f32	s15, s0, s0
 80327f4:	ecbd 8b02 	vpop	{d8}
 80327f8:	eeb0 0a67 	vmov.f32	s0, s15
 80327fc:	bd10      	pop	{r4, pc}
 80327fe:	2b00      	cmp	r3, #0
 8032800:	4b27      	ldr	r3, [pc, #156]	@ (80328a0 <__ieee754_sinhf+0xc8>)
 8032802:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8032806:	eebe 8a00 	vmov.f32	s16, #224	@ 0xbf000000 -0.5
 803280a:	bfa8      	it	ge
 803280c:	eeb0 8a68 	vmovge.f32	s16, s17
 8032810:	429c      	cmp	r4, r3
 8032812:	d82c      	bhi.n	803286e <__ieee754_sinhf+0x96>
 8032814:	f1b4 5f46 	cmp.w	r4, #830472192	@ 0x31800000
 8032818:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 803281c:	d208      	bcs.n	8032830 <__ieee754_sinhf+0x58>
 803281e:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 80328a4 <__ieee754_sinhf+0xcc>
 8032822:	ee30 7a07 	vadd.f32	s14, s0, s14
 8032826:	eeb4 7ae8 	vcmpe.f32	s14, s17
 803282a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803282e:	dce1      	bgt.n	80327f4 <__ieee754_sinhf+0x1c>
 8032830:	eeb0 0a67 	vmov.f32	s0, s15
 8032834:	f7fc fa1e 	bl	802ec74 <fabsf>
 8032838:	f7fc fb0c 	bl	802ee54 <expm1f>
 803283c:	f1b4 5f7e 	cmp.w	r4, #1065353216	@ 0x3f800000
 8032840:	d20c      	bcs.n	803285c <__ieee754_sinhf+0x84>
 8032842:	ee20 7a00 	vmul.f32	s14, s0, s0
 8032846:	ee70 8a28 	vadd.f32	s17, s0, s17
 803284a:	eec7 7a28 	vdiv.f32	s15, s14, s17
 803284e:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8032852:	eed0 7a07 	vfnms.f32	s15, s0, s14
 8032856:	ee67 7a88 	vmul.f32	s15, s15, s16
 803285a:	e7cb      	b.n	80327f4 <__ieee754_sinhf+0x1c>
 803285c:	ee70 8a28 	vadd.f32	s17, s0, s17
 8032860:	eec0 7a28 	vdiv.f32	s15, s0, s17
 8032864:	ee37 0a80 	vadd.f32	s0, s15, s0
 8032868:	ee60 7a08 	vmul.f32	s15, s0, s16
 803286c:	e7c2      	b.n	80327f4 <__ieee754_sinhf+0x1c>
 803286e:	4b0e      	ldr	r3, [pc, #56]	@ (80328a8 <__ieee754_sinhf+0xd0>)
 8032870:	429c      	cmp	r4, r3
 8032872:	d804      	bhi.n	803287e <__ieee754_sinhf+0xa6>
 8032874:	f7fc f9fe 	bl	802ec74 <fabsf>
 8032878:	f7ff f96c 	bl	8031b54 <__ieee754_expf>
 803287c:	e7f4      	b.n	8032868 <__ieee754_sinhf+0x90>
 803287e:	4b0b      	ldr	r3, [pc, #44]	@ (80328ac <__ieee754_sinhf+0xd4>)
 8032880:	429c      	cmp	r4, r3
 8032882:	d808      	bhi.n	8032896 <__ieee754_sinhf+0xbe>
 8032884:	f7fc f9f6 	bl	802ec74 <fabsf>
 8032888:	ee20 0a28 	vmul.f32	s0, s0, s17
 803288c:	f7ff f962 	bl	8031b54 <__ieee754_expf>
 8032890:	ee28 8a00 	vmul.f32	s16, s16, s0
 8032894:	e7e8      	b.n	8032868 <__ieee754_sinhf+0x90>
 8032896:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 80328a4 <__ieee754_sinhf+0xcc>
 803289a:	ee60 7a07 	vmul.f32	s15, s0, s14
 803289e:	e7a9      	b.n	80327f4 <__ieee754_sinhf+0x1c>
 80328a0:	41afffff 	.word	0x41afffff
 80328a4:	7cf0bdc2 	.word	0x7cf0bdc2
 80328a8:	42b17217 	.word	0x42b17217
 80328ac:	42b2d4fc 	.word	0x42b2d4fc

080328b0 <scalbn>:
 80328b0:	b570      	push	{r4, r5, r6, lr}
 80328b2:	ec55 4b10 	vmov	r4, r5, d0
 80328b6:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80328ba:	4606      	mov	r6, r0
 80328bc:	462b      	mov	r3, r5
 80328be:	b991      	cbnz	r1, 80328e6 <scalbn+0x36>
 80328c0:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 80328c4:	4323      	orrs	r3, r4
 80328c6:	d03d      	beq.n	8032944 <scalbn+0x94>
 80328c8:	4b35      	ldr	r3, [pc, #212]	@ (80329a0 <scalbn+0xf0>)
 80328ca:	4620      	mov	r0, r4
 80328cc:	4629      	mov	r1, r5
 80328ce:	2200      	movs	r2, #0
 80328d0:	f7cd fe3e 	bl	8000550 <__aeabi_dmul>
 80328d4:	4b33      	ldr	r3, [pc, #204]	@ (80329a4 <scalbn+0xf4>)
 80328d6:	429e      	cmp	r6, r3
 80328d8:	4604      	mov	r4, r0
 80328da:	460d      	mov	r5, r1
 80328dc:	da0f      	bge.n	80328fe <scalbn+0x4e>
 80328de:	a328      	add	r3, pc, #160	@ (adr r3, 8032980 <scalbn+0xd0>)
 80328e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80328e4:	e01e      	b.n	8032924 <scalbn+0x74>
 80328e6:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 80328ea:	4291      	cmp	r1, r2
 80328ec:	d10b      	bne.n	8032906 <scalbn+0x56>
 80328ee:	4622      	mov	r2, r4
 80328f0:	4620      	mov	r0, r4
 80328f2:	4629      	mov	r1, r5
 80328f4:	f7cd fc76 	bl	80001e4 <__adddf3>
 80328f8:	4604      	mov	r4, r0
 80328fa:	460d      	mov	r5, r1
 80328fc:	e022      	b.n	8032944 <scalbn+0x94>
 80328fe:	460b      	mov	r3, r1
 8032900:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8032904:	3936      	subs	r1, #54	@ 0x36
 8032906:	f24c 3250 	movw	r2, #50000	@ 0xc350
 803290a:	4296      	cmp	r6, r2
 803290c:	dd0d      	ble.n	803292a <scalbn+0x7a>
 803290e:	2d00      	cmp	r5, #0
 8032910:	a11d      	add	r1, pc, #116	@ (adr r1, 8032988 <scalbn+0xd8>)
 8032912:	e9d1 0100 	ldrd	r0, r1, [r1]
 8032916:	da02      	bge.n	803291e <scalbn+0x6e>
 8032918:	a11d      	add	r1, pc, #116	@ (adr r1, 8032990 <scalbn+0xe0>)
 803291a:	e9d1 0100 	ldrd	r0, r1, [r1]
 803291e:	a31a      	add	r3, pc, #104	@ (adr r3, 8032988 <scalbn+0xd8>)
 8032920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032924:	f7cd fe14 	bl	8000550 <__aeabi_dmul>
 8032928:	e7e6      	b.n	80328f8 <scalbn+0x48>
 803292a:	1872      	adds	r2, r6, r1
 803292c:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8032930:	428a      	cmp	r2, r1
 8032932:	dcec      	bgt.n	803290e <scalbn+0x5e>
 8032934:	2a00      	cmp	r2, #0
 8032936:	dd08      	ble.n	803294a <scalbn+0x9a>
 8032938:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 803293c:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8032940:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8032944:	ec45 4b10 	vmov	d0, r4, r5
 8032948:	bd70      	pop	{r4, r5, r6, pc}
 803294a:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 803294e:	da08      	bge.n	8032962 <scalbn+0xb2>
 8032950:	2d00      	cmp	r5, #0
 8032952:	a10b      	add	r1, pc, #44	@ (adr r1, 8032980 <scalbn+0xd0>)
 8032954:	e9d1 0100 	ldrd	r0, r1, [r1]
 8032958:	dac1      	bge.n	80328de <scalbn+0x2e>
 803295a:	a10f      	add	r1, pc, #60	@ (adr r1, 8032998 <scalbn+0xe8>)
 803295c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8032960:	e7bd      	b.n	80328de <scalbn+0x2e>
 8032962:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8032966:	3236      	adds	r2, #54	@ 0x36
 8032968:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 803296c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8032970:	4620      	mov	r0, r4
 8032972:	4b0d      	ldr	r3, [pc, #52]	@ (80329a8 <scalbn+0xf8>)
 8032974:	4629      	mov	r1, r5
 8032976:	2200      	movs	r2, #0
 8032978:	e7d4      	b.n	8032924 <scalbn+0x74>
 803297a:	bf00      	nop
 803297c:	f3af 8000 	nop.w
 8032980:	c2f8f359 	.word	0xc2f8f359
 8032984:	01a56e1f 	.word	0x01a56e1f
 8032988:	8800759c 	.word	0x8800759c
 803298c:	7e37e43c 	.word	0x7e37e43c
 8032990:	8800759c 	.word	0x8800759c
 8032994:	fe37e43c 	.word	0xfe37e43c
 8032998:	c2f8f359 	.word	0xc2f8f359
 803299c:	81a56e1f 	.word	0x81a56e1f
 80329a0:	43500000 	.word	0x43500000
 80329a4:	ffff3cb0 	.word	0xffff3cb0
 80329a8:	3c900000 	.word	0x3c900000
 80329ac:	00000000 	.word	0x00000000

080329b0 <expm1>:
 80329b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80329b4:	ec5b ab10 	vmov	sl, fp, d0
 80329b8:	49cf      	ldr	r1, [pc, #828]	@ (8032cf8 <expm1+0x348>)
 80329ba:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80329be:	428b      	cmp	r3, r1
 80329c0:	b085      	sub	sp, #20
 80329c2:	f00b 4400 	and.w	r4, fp, #2147483648	@ 0x80000000
 80329c6:	d93b      	bls.n	8032a40 <expm1+0x90>
 80329c8:	49cc      	ldr	r1, [pc, #816]	@ (8032cfc <expm1+0x34c>)
 80329ca:	428b      	cmp	r3, r1
 80329cc:	d922      	bls.n	8032a14 <expm1+0x64>
 80329ce:	49cc      	ldr	r1, [pc, #816]	@ (8032d00 <expm1+0x350>)
 80329d0:	428b      	cmp	r3, r1
 80329d2:	d911      	bls.n	80329f8 <expm1+0x48>
 80329d4:	f3cb 0213 	ubfx	r2, fp, #0, #20
 80329d8:	4653      	mov	r3, sl
 80329da:	431a      	orrs	r2, r3
 80329dc:	d006      	beq.n	80329ec <expm1+0x3c>
 80329de:	4652      	mov	r2, sl
 80329e0:	465b      	mov	r3, fp
 80329e2:	4650      	mov	r0, sl
 80329e4:	4659      	mov	r1, fp
 80329e6:	f7cd fbfd 	bl	80001e4 <__adddf3>
 80329ea:	e1b7      	b.n	8032d5c <expm1+0x3ac>
 80329ec:	bb1c      	cbnz	r4, 8032a36 <expm1+0x86>
 80329ee:	ec4b ab10 	vmov	d0, sl, fp
 80329f2:	b005      	add	sp, #20
 80329f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80329f8:	a3a7      	add	r3, pc, #668	@ (adr r3, 8032c98 <expm1+0x2e8>)
 80329fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80329fe:	4650      	mov	r0, sl
 8032a00:	4659      	mov	r1, fp
 8032a02:	f7ce f835 	bl	8000a70 <__aeabi_dcmpgt>
 8032a06:	b128      	cbz	r0, 8032a14 <expm1+0x64>
 8032a08:	2000      	movs	r0, #0
 8032a0a:	b005      	add	sp, #20
 8032a0c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032a10:	f000 ba32 	b.w	8032e78 <__math_oflow>
 8032a14:	2c00      	cmp	r4, #0
 8032a16:	f000 80c1 	beq.w	8032b9c <expm1+0x1ec>
 8032a1a:	a3a1      	add	r3, pc, #644	@ (adr r3, 8032ca0 <expm1+0x2f0>)
 8032a1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032a20:	4650      	mov	r0, sl
 8032a22:	4659      	mov	r1, fp
 8032a24:	f7cd fbde 	bl	80001e4 <__adddf3>
 8032a28:	2200      	movs	r2, #0
 8032a2a:	2300      	movs	r3, #0
 8032a2c:	f7ce f802 	bl	8000a34 <__aeabi_dcmplt>
 8032a30:	2800      	cmp	r0, #0
 8032a32:	f000 80de 	beq.w	8032bf2 <expm1+0x242>
 8032a36:	f8df b2ec 	ldr.w	fp, [pc, #748]	@ 8032d24 <expm1+0x374>
 8032a3a:	f04f 0a00 	mov.w	sl, #0
 8032a3e:	e7d6      	b.n	80329ee <expm1+0x3e>
 8032a40:	4ab0      	ldr	r2, [pc, #704]	@ (8032d04 <expm1+0x354>)
 8032a42:	4293      	cmp	r3, r2
 8032a44:	f240 80ed 	bls.w	8032c22 <expm1+0x272>
 8032a48:	4aaf      	ldr	r2, [pc, #700]	@ (8032d08 <expm1+0x358>)
 8032a4a:	4293      	cmp	r3, r2
 8032a4c:	f200 80dd 	bhi.w	8032c0a <expm1+0x25a>
 8032a50:	a395      	add	r3, pc, #596	@ (adr r3, 8032ca8 <expm1+0x2f8>)
 8032a52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032a56:	4650      	mov	r0, sl
 8032a58:	4659      	mov	r1, fp
 8032a5a:	2c00      	cmp	r4, #0
 8032a5c:	f040 8093 	bne.w	8032b86 <expm1+0x1d6>
 8032a60:	f7cd fbbe 	bl	80001e0 <__aeabi_dsub>
 8032a64:	f20f 2948 	addw	r9, pc, #584	@ 0x248
 8032a68:	e9d9 8900 	ldrd	r8, r9, [r9]
 8032a6c:	4606      	mov	r6, r0
 8032a6e:	460f      	mov	r7, r1
 8032a70:	2401      	movs	r4, #1
 8032a72:	4642      	mov	r2, r8
 8032a74:	464b      	mov	r3, r9
 8032a76:	4630      	mov	r0, r6
 8032a78:	4639      	mov	r1, r7
 8032a7a:	f7cd fbb1 	bl	80001e0 <__aeabi_dsub>
 8032a7e:	4602      	mov	r2, r0
 8032a80:	460b      	mov	r3, r1
 8032a82:	4682      	mov	sl, r0
 8032a84:	468b      	mov	fp, r1
 8032a86:	4630      	mov	r0, r6
 8032a88:	4639      	mov	r1, r7
 8032a8a:	f7cd fba9 	bl	80001e0 <__aeabi_dsub>
 8032a8e:	4642      	mov	r2, r8
 8032a90:	464b      	mov	r3, r9
 8032a92:	f7cd fba5 	bl	80001e0 <__aeabi_dsub>
 8032a96:	e9cd 0100 	strd	r0, r1, [sp]
 8032a9a:	4b9c      	ldr	r3, [pc, #624]	@ (8032d0c <expm1+0x35c>)
 8032a9c:	2200      	movs	r2, #0
 8032a9e:	4650      	mov	r0, sl
 8032aa0:	4659      	mov	r1, fp
 8032aa2:	f7cd fd55 	bl	8000550 <__aeabi_dmul>
 8032aa6:	4606      	mov	r6, r0
 8032aa8:	460f      	mov	r7, r1
 8032aaa:	4602      	mov	r2, r0
 8032aac:	460b      	mov	r3, r1
 8032aae:	4650      	mov	r0, sl
 8032ab0:	4659      	mov	r1, fp
 8032ab2:	f7cd fd4d 	bl	8000550 <__aeabi_dmul>
 8032ab6:	a380      	add	r3, pc, #512	@ (adr r3, 8032cb8 <expm1+0x308>)
 8032ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032abc:	4680      	mov	r8, r0
 8032abe:	4689      	mov	r9, r1
 8032ac0:	f7cd fd46 	bl	8000550 <__aeabi_dmul>
 8032ac4:	a37e      	add	r3, pc, #504	@ (adr r3, 8032cc0 <expm1+0x310>)
 8032ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032aca:	f7cd fb8b 	bl	80001e4 <__adddf3>
 8032ace:	4642      	mov	r2, r8
 8032ad0:	464b      	mov	r3, r9
 8032ad2:	f7cd fd3d 	bl	8000550 <__aeabi_dmul>
 8032ad6:	a37c      	add	r3, pc, #496	@ (adr r3, 8032cc8 <expm1+0x318>)
 8032ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032adc:	f7cd fb80 	bl	80001e0 <__aeabi_dsub>
 8032ae0:	4642      	mov	r2, r8
 8032ae2:	464b      	mov	r3, r9
 8032ae4:	f7cd fd34 	bl	8000550 <__aeabi_dmul>
 8032ae8:	a379      	add	r3, pc, #484	@ (adr r3, 8032cd0 <expm1+0x320>)
 8032aea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032aee:	f7cd fb79 	bl	80001e4 <__adddf3>
 8032af2:	4642      	mov	r2, r8
 8032af4:	464b      	mov	r3, r9
 8032af6:	f7cd fd2b 	bl	8000550 <__aeabi_dmul>
 8032afa:	a377      	add	r3, pc, #476	@ (adr r3, 8032cd8 <expm1+0x328>)
 8032afc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032b00:	f7cd fb6e 	bl	80001e0 <__aeabi_dsub>
 8032b04:	4642      	mov	r2, r8
 8032b06:	464b      	mov	r3, r9
 8032b08:	f7cd fd22 	bl	8000550 <__aeabi_dmul>
 8032b0c:	4b80      	ldr	r3, [pc, #512]	@ (8032d10 <expm1+0x360>)
 8032b0e:	2200      	movs	r2, #0
 8032b10:	f7cd fb68 	bl	80001e4 <__adddf3>
 8032b14:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8032b18:	4602      	mov	r2, r0
 8032b1a:	460b      	mov	r3, r1
 8032b1c:	4630      	mov	r0, r6
 8032b1e:	4639      	mov	r1, r7
 8032b20:	f7cd fd16 	bl	8000550 <__aeabi_dmul>
 8032b24:	4602      	mov	r2, r0
 8032b26:	460b      	mov	r3, r1
 8032b28:	2000      	movs	r0, #0
 8032b2a:	497a      	ldr	r1, [pc, #488]	@ (8032d14 <expm1+0x364>)
 8032b2c:	f7cd fb58 	bl	80001e0 <__aeabi_dsub>
 8032b30:	4602      	mov	r2, r0
 8032b32:	460b      	mov	r3, r1
 8032b34:	4606      	mov	r6, r0
 8032b36:	460f      	mov	r7, r1
 8032b38:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8032b3c:	f7cd fb50 	bl	80001e0 <__aeabi_dsub>
 8032b40:	4632      	mov	r2, r6
 8032b42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8032b46:	463b      	mov	r3, r7
 8032b48:	4650      	mov	r0, sl
 8032b4a:	4659      	mov	r1, fp
 8032b4c:	f7cd fd00 	bl	8000550 <__aeabi_dmul>
 8032b50:	4602      	mov	r2, r0
 8032b52:	460b      	mov	r3, r1
 8032b54:	2000      	movs	r0, #0
 8032b56:	4970      	ldr	r1, [pc, #448]	@ (8032d18 <expm1+0x368>)
 8032b58:	f7cd fb42 	bl	80001e0 <__aeabi_dsub>
 8032b5c:	4602      	mov	r2, r0
 8032b5e:	460b      	mov	r3, r1
 8032b60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8032b64:	f7cd fe1e 	bl	80007a4 <__aeabi_ddiv>
 8032b68:	4642      	mov	r2, r8
 8032b6a:	464b      	mov	r3, r9
 8032b6c:	f7cd fcf0 	bl	8000550 <__aeabi_dmul>
 8032b70:	4602      	mov	r2, r0
 8032b72:	460b      	mov	r3, r1
 8032b74:	2c00      	cmp	r4, #0
 8032b76:	d16b      	bne.n	8032c50 <expm1+0x2a0>
 8032b78:	4650      	mov	r0, sl
 8032b7a:	4659      	mov	r1, fp
 8032b7c:	f7cd fce8 	bl	8000550 <__aeabi_dmul>
 8032b80:	4642      	mov	r2, r8
 8032b82:	464b      	mov	r3, r9
 8032b84:	e059      	b.n	8032c3a <expm1+0x28a>
 8032b86:	f7cd fb2d 	bl	80001e4 <__adddf3>
 8032b8a:	f20f 1954 	addw	r9, pc, #340	@ 0x154
 8032b8e:	e9d9 8900 	ldrd	r8, r9, [r9]
 8032b92:	4606      	mov	r6, r0
 8032b94:	460f      	mov	r7, r1
 8032b96:	f04f 34ff 	mov.w	r4, #4294967295
 8032b9a:	e76a      	b.n	8032a72 <expm1+0xc2>
 8032b9c:	a352      	add	r3, pc, #328	@ (adr r3, 8032ce8 <expm1+0x338>)
 8032b9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032ba2:	4650      	mov	r0, sl
 8032ba4:	4659      	mov	r1, fp
 8032ba6:	f7cd fcd3 	bl	8000550 <__aeabi_dmul>
 8032baa:	4602      	mov	r2, r0
 8032bac:	460b      	mov	r3, r1
 8032bae:	4957      	ldr	r1, [pc, #348]	@ (8032d0c <expm1+0x35c>)
 8032bb0:	2000      	movs	r0, #0
 8032bb2:	f7cd fb17 	bl	80001e4 <__adddf3>
 8032bb6:	f7cd ff7b 	bl	8000ab0 <__aeabi_d2iz>
 8032bba:	4604      	mov	r4, r0
 8032bbc:	f7cd fc5e 	bl	800047c <__aeabi_i2d>
 8032bc0:	a339      	add	r3, pc, #228	@ (adr r3, 8032ca8 <expm1+0x2f8>)
 8032bc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032bc6:	4680      	mov	r8, r0
 8032bc8:	4689      	mov	r9, r1
 8032bca:	f7cd fcc1 	bl	8000550 <__aeabi_dmul>
 8032bce:	4602      	mov	r2, r0
 8032bd0:	460b      	mov	r3, r1
 8032bd2:	4650      	mov	r0, sl
 8032bd4:	4659      	mov	r1, fp
 8032bd6:	f7cd fb03 	bl	80001e0 <__aeabi_dsub>
 8032bda:	a335      	add	r3, pc, #212	@ (adr r3, 8032cb0 <expm1+0x300>)
 8032bdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032be0:	4606      	mov	r6, r0
 8032be2:	460f      	mov	r7, r1
 8032be4:	4640      	mov	r0, r8
 8032be6:	4649      	mov	r1, r9
 8032be8:	f7cd fcb2 	bl	8000550 <__aeabi_dmul>
 8032bec:	4680      	mov	r8, r0
 8032bee:	4689      	mov	r9, r1
 8032bf0:	e73f      	b.n	8032a72 <expm1+0xc2>
 8032bf2:	a33d      	add	r3, pc, #244	@ (adr r3, 8032ce8 <expm1+0x338>)
 8032bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032bf8:	4650      	mov	r0, sl
 8032bfa:	4659      	mov	r1, fp
 8032bfc:	f7cd fca8 	bl	8000550 <__aeabi_dmul>
 8032c00:	4602      	mov	r2, r0
 8032c02:	460b      	mov	r3, r1
 8032c04:	4945      	ldr	r1, [pc, #276]	@ (8032d1c <expm1+0x36c>)
 8032c06:	2000      	movs	r0, #0
 8032c08:	e7d3      	b.n	8032bb2 <expm1+0x202>
 8032c0a:	a337      	add	r3, pc, #220	@ (adr r3, 8032ce8 <expm1+0x338>)
 8032c0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032c10:	4650      	mov	r0, sl
 8032c12:	4659      	mov	r1, fp
 8032c14:	f7cd fc9c 	bl	8000550 <__aeabi_dmul>
 8032c18:	4602      	mov	r2, r0
 8032c1a:	460b      	mov	r3, r1
 8032c1c:	2c00      	cmp	r4, #0
 8032c1e:	d1f1      	bne.n	8032c04 <expm1+0x254>
 8032c20:	e7c5      	b.n	8032bae <expm1+0x1fe>
 8032c22:	4a3f      	ldr	r2, [pc, #252]	@ (8032d20 <expm1+0x370>)
 8032c24:	4293      	cmp	r3, r2
 8032c26:	d811      	bhi.n	8032c4c <expm1+0x29c>
 8032c28:	a331      	add	r3, pc, #196	@ (adr r3, 8032cf0 <expm1+0x340>)
 8032c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8032c2e:	4650      	mov	r0, sl
 8032c30:	4659      	mov	r1, fp
 8032c32:	f7cd fad7 	bl	80001e4 <__adddf3>
 8032c36:	4602      	mov	r2, r0
 8032c38:	460b      	mov	r3, r1
 8032c3a:	f7cd fad1 	bl	80001e0 <__aeabi_dsub>
 8032c3e:	4602      	mov	r2, r0
 8032c40:	460b      	mov	r3, r1
 8032c42:	4650      	mov	r0, sl
 8032c44:	4659      	mov	r1, fp
 8032c46:	f7cd facb 	bl	80001e0 <__aeabi_dsub>
 8032c4a:	e087      	b.n	8032d5c <expm1+0x3ac>
 8032c4c:	2400      	movs	r4, #0
 8032c4e:	e724      	b.n	8032a9a <expm1+0xea>
 8032c50:	e9dd 2300 	ldrd	r2, r3, [sp]
 8032c54:	f7cd fac4 	bl	80001e0 <__aeabi_dsub>
 8032c58:	4652      	mov	r2, sl
 8032c5a:	465b      	mov	r3, fp
 8032c5c:	f7cd fc78 	bl	8000550 <__aeabi_dmul>
 8032c60:	e9dd 2300 	ldrd	r2, r3, [sp]
 8032c64:	f7cd fabc 	bl	80001e0 <__aeabi_dsub>
 8032c68:	464b      	mov	r3, r9
 8032c6a:	4642      	mov	r2, r8
 8032c6c:	f7cd fab8 	bl	80001e0 <__aeabi_dsub>
 8032c70:	1c63      	adds	r3, r4, #1
 8032c72:	4606      	mov	r6, r0
 8032c74:	460f      	mov	r7, r1
 8032c76:	d157      	bne.n	8032d28 <expm1+0x378>
 8032c78:	4602      	mov	r2, r0
 8032c7a:	460b      	mov	r3, r1
 8032c7c:	4650      	mov	r0, sl
 8032c7e:	4659      	mov	r1, fp
 8032c80:	f7cd faae 	bl	80001e0 <__aeabi_dsub>
 8032c84:	4b21      	ldr	r3, [pc, #132]	@ (8032d0c <expm1+0x35c>)
 8032c86:	2200      	movs	r2, #0
 8032c88:	f7cd fc62 	bl	8000550 <__aeabi_dmul>
 8032c8c:	4b1f      	ldr	r3, [pc, #124]	@ (8032d0c <expm1+0x35c>)
 8032c8e:	2200      	movs	r2, #0
 8032c90:	e7d9      	b.n	8032c46 <expm1+0x296>
 8032c92:	bf00      	nop
 8032c94:	f3af 8000 	nop.w
 8032c98:	fefa39ef 	.word	0xfefa39ef
 8032c9c:	40862e42 	.word	0x40862e42
 8032ca0:	c2f8f359 	.word	0xc2f8f359
 8032ca4:	01a56e1f 	.word	0x01a56e1f
 8032ca8:	fee00000 	.word	0xfee00000
 8032cac:	3fe62e42 	.word	0x3fe62e42
 8032cb0:	35793c76 	.word	0x35793c76
 8032cb4:	3dea39ef 	.word	0x3dea39ef
 8032cb8:	6e09c32d 	.word	0x6e09c32d
 8032cbc:	be8afdb7 	.word	0xbe8afdb7
 8032cc0:	86e65239 	.word	0x86e65239
 8032cc4:	3ed0cfca 	.word	0x3ed0cfca
 8032cc8:	9eaadbb7 	.word	0x9eaadbb7
 8032ccc:	3f14ce19 	.word	0x3f14ce19
 8032cd0:	19fe5585 	.word	0x19fe5585
 8032cd4:	3f5a01a0 	.word	0x3f5a01a0
 8032cd8:	111110f4 	.word	0x111110f4
 8032cdc:	3fa11111 	.word	0x3fa11111
 8032ce0:	35793c76 	.word	0x35793c76
 8032ce4:	bdea39ef 	.word	0xbdea39ef
 8032ce8:	652b82fe 	.word	0x652b82fe
 8032cec:	3ff71547 	.word	0x3ff71547
 8032cf0:	8800759c 	.word	0x8800759c
 8032cf4:	7e37e43c 	.word	0x7e37e43c
 8032cf8:	40436879 	.word	0x40436879
 8032cfc:	40862e41 	.word	0x40862e41
 8032d00:	7fefffff 	.word	0x7fefffff
 8032d04:	3fd62e42 	.word	0x3fd62e42
 8032d08:	3ff0a2b1 	.word	0x3ff0a2b1
 8032d0c:	3fe00000 	.word	0x3fe00000
 8032d10:	3ff00000 	.word	0x3ff00000
 8032d14:	40080000 	.word	0x40080000
 8032d18:	40180000 	.word	0x40180000
 8032d1c:	bfe00000 	.word	0xbfe00000
 8032d20:	3c8fffff 	.word	0x3c8fffff
 8032d24:	bff00000 	.word	0xbff00000
 8032d28:	2c01      	cmp	r4, #1
 8032d2a:	d127      	bne.n	8032d7c <expm1+0x3cc>
 8032d2c:	4b34      	ldr	r3, [pc, #208]	@ (8032e00 <expm1+0x450>)
 8032d2e:	2200      	movs	r2, #0
 8032d30:	4650      	mov	r0, sl
 8032d32:	4659      	mov	r1, fp
 8032d34:	f7cd fe7e 	bl	8000a34 <__aeabi_dcmplt>
 8032d38:	b198      	cbz	r0, 8032d62 <expm1+0x3b2>
 8032d3a:	4b32      	ldr	r3, [pc, #200]	@ (8032e04 <expm1+0x454>)
 8032d3c:	2200      	movs	r2, #0
 8032d3e:	4650      	mov	r0, sl
 8032d40:	4659      	mov	r1, fp
 8032d42:	f7cd fa4f 	bl	80001e4 <__adddf3>
 8032d46:	4602      	mov	r2, r0
 8032d48:	460b      	mov	r3, r1
 8032d4a:	4630      	mov	r0, r6
 8032d4c:	4639      	mov	r1, r7
 8032d4e:	f7cd fa47 	bl	80001e0 <__aeabi_dsub>
 8032d52:	2200      	movs	r2, #0
 8032d54:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8032d58:	f7cd fbfa 	bl	8000550 <__aeabi_dmul>
 8032d5c:	4682      	mov	sl, r0
 8032d5e:	468b      	mov	fp, r1
 8032d60:	e645      	b.n	80329ee <expm1+0x3e>
 8032d62:	4632      	mov	r2, r6
 8032d64:	463b      	mov	r3, r7
 8032d66:	4650      	mov	r0, sl
 8032d68:	4659      	mov	r1, fp
 8032d6a:	f7cd fa39 	bl	80001e0 <__aeabi_dsub>
 8032d6e:	4602      	mov	r2, r0
 8032d70:	460b      	mov	r3, r1
 8032d72:	f7cd fa37 	bl	80001e4 <__adddf3>
 8032d76:	4b24      	ldr	r3, [pc, #144]	@ (8032e08 <expm1+0x458>)
 8032d78:	2200      	movs	r2, #0
 8032d7a:	e634      	b.n	80329e6 <expm1+0x36>
 8032d7c:	1c63      	adds	r3, r4, #1
 8032d7e:	2b39      	cmp	r3, #57	@ 0x39
 8032d80:	ea4f 5504 	mov.w	r5, r4, lsl #20
 8032d84:	d90e      	bls.n	8032da4 <expm1+0x3f4>
 8032d86:	4652      	mov	r2, sl
 8032d88:	465b      	mov	r3, fp
 8032d8a:	f7cd fa29 	bl	80001e0 <__aeabi_dsub>
 8032d8e:	4602      	mov	r2, r0
 8032d90:	460b      	mov	r3, r1
 8032d92:	2000      	movs	r0, #0
 8032d94:	491c      	ldr	r1, [pc, #112]	@ (8032e08 <expm1+0x458>)
 8032d96:	f7cd fa23 	bl	80001e0 <__aeabi_dsub>
 8032d9a:	186b      	adds	r3, r5, r1
 8032d9c:	4619      	mov	r1, r3
 8032d9e:	2200      	movs	r2, #0
 8032da0:	4b19      	ldr	r3, [pc, #100]	@ (8032e08 <expm1+0x458>)
 8032da2:	e750      	b.n	8032c46 <expm1+0x296>
 8032da4:	2c13      	cmp	r4, #19
 8032da6:	f04f 0200 	mov.w	r2, #0
 8032daa:	dc17      	bgt.n	8032ddc <expm1+0x42c>
 8032dac:	f44f 1600 	mov.w	r6, #2097152	@ 0x200000
 8032db0:	fa46 f404 	asr.w	r4, r6, r4
 8032db4:	f1c4 537f 	rsb	r3, r4, #1069547520	@ 0x3fc00000
 8032db8:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
 8032dbc:	4616      	mov	r6, r2
 8032dbe:	461f      	mov	r7, r3
 8032dc0:	4652      	mov	r2, sl
 8032dc2:	465b      	mov	r3, fp
 8032dc4:	f7cd fa0c 	bl	80001e0 <__aeabi_dsub>
 8032dc8:	4602      	mov	r2, r0
 8032dca:	460b      	mov	r3, r1
 8032dcc:	4630      	mov	r0, r6
 8032dce:	4639      	mov	r1, r7
 8032dd0:	f7cd fa06 	bl	80001e0 <__aeabi_dsub>
 8032dd4:	4682      	mov	sl, r0
 8032dd6:	eb05 0b01 	add.w	fp, r5, r1
 8032dda:	e608      	b.n	80329ee <expm1+0x3e>
 8032ddc:	f5c4 747f 	rsb	r4, r4, #1020	@ 0x3fc
 8032de0:	3403      	adds	r4, #3
 8032de2:	0523      	lsls	r3, r4, #20
 8032de4:	f7cd f9fe 	bl	80001e4 <__adddf3>
 8032de8:	4602      	mov	r2, r0
 8032dea:	460b      	mov	r3, r1
 8032dec:	4650      	mov	r0, sl
 8032dee:	4659      	mov	r1, fp
 8032df0:	f7cd f9f6 	bl	80001e0 <__aeabi_dsub>
 8032df4:	4b04      	ldr	r3, [pc, #16]	@ (8032e08 <expm1+0x458>)
 8032df6:	2200      	movs	r2, #0
 8032df8:	f7cd f9f4 	bl	80001e4 <__adddf3>
 8032dfc:	e7ea      	b.n	8032dd4 <expm1+0x424>
 8032dfe:	bf00      	nop
 8032e00:	bfd00000 	.word	0xbfd00000
 8032e04:	3fe00000 	.word	0x3fe00000
 8032e08:	3ff00000 	.word	0x3ff00000

08032e0c <with_errno>:
 8032e0c:	b510      	push	{r4, lr}
 8032e0e:	ed2d 8b02 	vpush	{d8}
 8032e12:	eeb0 8a40 	vmov.f32	s16, s0
 8032e16:	eef0 8a60 	vmov.f32	s17, s1
 8032e1a:	4604      	mov	r4, r0
 8032e1c:	f7fa fee8 	bl	802dbf0 <__errno>
 8032e20:	eeb0 0a48 	vmov.f32	s0, s16
 8032e24:	eef0 0a68 	vmov.f32	s1, s17
 8032e28:	ecbd 8b02 	vpop	{d8}
 8032e2c:	6004      	str	r4, [r0, #0]
 8032e2e:	bd10      	pop	{r4, pc}

08032e30 <xflow>:
 8032e30:	4603      	mov	r3, r0
 8032e32:	b507      	push	{r0, r1, r2, lr}
 8032e34:	ec51 0b10 	vmov	r0, r1, d0
 8032e38:	b183      	cbz	r3, 8032e5c <xflow+0x2c>
 8032e3a:	4602      	mov	r2, r0
 8032e3c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8032e40:	e9cd 2300 	strd	r2, r3, [sp]
 8032e44:	e9dd 2300 	ldrd	r2, r3, [sp]
 8032e48:	f7cd fb82 	bl	8000550 <__aeabi_dmul>
 8032e4c:	ec41 0b10 	vmov	d0, r0, r1
 8032e50:	2022      	movs	r0, #34	@ 0x22
 8032e52:	b003      	add	sp, #12
 8032e54:	f85d eb04 	ldr.w	lr, [sp], #4
 8032e58:	f7ff bfd8 	b.w	8032e0c <with_errno>
 8032e5c:	4602      	mov	r2, r0
 8032e5e:	460b      	mov	r3, r1
 8032e60:	e7ee      	b.n	8032e40 <xflow+0x10>
 8032e62:	0000      	movs	r0, r0
 8032e64:	0000      	movs	r0, r0
	...

08032e68 <__math_uflow>:
 8032e68:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8032e70 <__math_uflow+0x8>
 8032e6c:	f7ff bfe0 	b.w	8032e30 <xflow>
 8032e70:	00000000 	.word	0x00000000
 8032e74:	10000000 	.word	0x10000000

08032e78 <__math_oflow>:
 8032e78:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8032e80 <__math_oflow+0x8>
 8032e7c:	f7ff bfd8 	b.w	8032e30 <xflow>
 8032e80:	00000000 	.word	0x00000000
 8032e84:	70000000 	.word	0x70000000

08032e88 <__kernel_rem_pio2>:
 8032e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032e8c:	ed2d 8b02 	vpush	{d8}
 8032e90:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 8032e94:	f112 0f14 	cmn.w	r2, #20
 8032e98:	9306      	str	r3, [sp, #24]
 8032e9a:	9104      	str	r1, [sp, #16]
 8032e9c:	4bbe      	ldr	r3, [pc, #760]	@ (8033198 <__kernel_rem_pio2+0x310>)
 8032e9e:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8032ea0:	9008      	str	r0, [sp, #32]
 8032ea2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8032ea6:	9300      	str	r3, [sp, #0]
 8032ea8:	9b06      	ldr	r3, [sp, #24]
 8032eaa:	f103 33ff 	add.w	r3, r3, #4294967295
 8032eae:	bfa8      	it	ge
 8032eb0:	1ed4      	subge	r4, r2, #3
 8032eb2:	9305      	str	r3, [sp, #20]
 8032eb4:	bfb2      	itee	lt
 8032eb6:	2400      	movlt	r4, #0
 8032eb8:	2318      	movge	r3, #24
 8032eba:	fb94 f4f3 	sdivge	r4, r4, r3
 8032ebe:	f06f 0317 	mvn.w	r3, #23
 8032ec2:	fb04 3303 	mla	r3, r4, r3, r3
 8032ec6:	eb03 0b02 	add.w	fp, r3, r2
 8032eca:	9b00      	ldr	r3, [sp, #0]
 8032ecc:	9a05      	ldr	r2, [sp, #20]
 8032ece:	ed9f 8bae 	vldr	d8, [pc, #696]	@ 8033188 <__kernel_rem_pio2+0x300>
 8032ed2:	eb03 0802 	add.w	r8, r3, r2
 8032ed6:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8032ed8:	1aa7      	subs	r7, r4, r2
 8032eda:	ae20      	add	r6, sp, #128	@ 0x80
 8032edc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8032ee0:	2500      	movs	r5, #0
 8032ee2:	4545      	cmp	r5, r8
 8032ee4:	dd13      	ble.n	8032f0e <__kernel_rem_pio2+0x86>
 8032ee6:	9b06      	ldr	r3, [sp, #24]
 8032ee8:	aa20      	add	r2, sp, #128	@ 0x80
 8032eea:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8032eee:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8032ef2:	f04f 0800 	mov.w	r8, #0
 8032ef6:	9b00      	ldr	r3, [sp, #0]
 8032ef8:	4598      	cmp	r8, r3
 8032efa:	dc31      	bgt.n	8032f60 <__kernel_rem_pio2+0xd8>
 8032efc:	ed9f 7ba2 	vldr	d7, [pc, #648]	@ 8033188 <__kernel_rem_pio2+0x300>
 8032f00:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8032f04:	ed8d 7b02 	vstr	d7, [sp, #8]
 8032f08:	462f      	mov	r7, r5
 8032f0a:	2600      	movs	r6, #0
 8032f0c:	e01b      	b.n	8032f46 <__kernel_rem_pio2+0xbe>
 8032f0e:	42ef      	cmn	r7, r5
 8032f10:	d407      	bmi.n	8032f22 <__kernel_rem_pio2+0x9a>
 8032f12:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8032f16:	f7cd fab1 	bl	800047c <__aeabi_i2d>
 8032f1a:	e8e6 0102 	strd	r0, r1, [r6], #8
 8032f1e:	3501      	adds	r5, #1
 8032f20:	e7df      	b.n	8032ee2 <__kernel_rem_pio2+0x5a>
 8032f22:	ec51 0b18 	vmov	r0, r1, d8
 8032f26:	e7f8      	b.n	8032f1a <__kernel_rem_pio2+0x92>
 8032f28:	e9d7 2300 	ldrd	r2, r3, [r7]
 8032f2c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8032f30:	f7cd fb0e 	bl	8000550 <__aeabi_dmul>
 8032f34:	4602      	mov	r2, r0
 8032f36:	460b      	mov	r3, r1
 8032f38:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8032f3c:	f7cd f952 	bl	80001e4 <__adddf3>
 8032f40:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8032f44:	3601      	adds	r6, #1
 8032f46:	9b05      	ldr	r3, [sp, #20]
 8032f48:	429e      	cmp	r6, r3
 8032f4a:	f1a7 0708 	sub.w	r7, r7, #8
 8032f4e:	ddeb      	ble.n	8032f28 <__kernel_rem_pio2+0xa0>
 8032f50:	ed9d 7b02 	vldr	d7, [sp, #8]
 8032f54:	f108 0801 	add.w	r8, r8, #1
 8032f58:	ecaa 7b02 	vstmia	sl!, {d7}
 8032f5c:	3508      	adds	r5, #8
 8032f5e:	e7ca      	b.n	8032ef6 <__kernel_rem_pio2+0x6e>
 8032f60:	9b00      	ldr	r3, [sp, #0]
 8032f62:	f8dd 8000 	ldr.w	r8, [sp]
 8032f66:	aa0c      	add	r2, sp, #48	@ 0x30
 8032f68:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8032f6c:	930a      	str	r3, [sp, #40]	@ 0x28
 8032f6e:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8032f70:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8032f74:	9309      	str	r3, [sp, #36]	@ 0x24
 8032f76:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8032f7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8032f7c:	ab98      	add	r3, sp, #608	@ 0x260
 8032f7e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8032f82:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 8032f86:	ed8d 7b02 	vstr	d7, [sp, #8]
 8032f8a:	ac0c      	add	r4, sp, #48	@ 0x30
 8032f8c:	ab70      	add	r3, sp, #448	@ 0x1c0
 8032f8e:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 8032f92:	46a1      	mov	r9, r4
 8032f94:	46c2      	mov	sl, r8
 8032f96:	f1ba 0f00 	cmp.w	sl, #0
 8032f9a:	f1a5 0508 	sub.w	r5, r5, #8
 8032f9e:	dc77      	bgt.n	8033090 <__kernel_rem_pio2+0x208>
 8032fa0:	4658      	mov	r0, fp
 8032fa2:	ed9d 0b02 	vldr	d0, [sp, #8]
 8032fa6:	f7ff fc83 	bl	80328b0 <scalbn>
 8032faa:	ec57 6b10 	vmov	r6, r7, d0
 8032fae:	2200      	movs	r2, #0
 8032fb0:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8032fb4:	4630      	mov	r0, r6
 8032fb6:	4639      	mov	r1, r7
 8032fb8:	f7cd faca 	bl	8000550 <__aeabi_dmul>
 8032fbc:	ec41 0b10 	vmov	d0, r0, r1
 8032fc0:	f000 fd2e 	bl	8033a20 <floor>
 8032fc4:	4b75      	ldr	r3, [pc, #468]	@ (803319c <__kernel_rem_pio2+0x314>)
 8032fc6:	ec51 0b10 	vmov	r0, r1, d0
 8032fca:	2200      	movs	r2, #0
 8032fcc:	f7cd fac0 	bl	8000550 <__aeabi_dmul>
 8032fd0:	4602      	mov	r2, r0
 8032fd2:	460b      	mov	r3, r1
 8032fd4:	4630      	mov	r0, r6
 8032fd6:	4639      	mov	r1, r7
 8032fd8:	f7cd f902 	bl	80001e0 <__aeabi_dsub>
 8032fdc:	460f      	mov	r7, r1
 8032fde:	4606      	mov	r6, r0
 8032fe0:	f7cd fd66 	bl	8000ab0 <__aeabi_d2iz>
 8032fe4:	9002      	str	r0, [sp, #8]
 8032fe6:	f7cd fa49 	bl	800047c <__aeabi_i2d>
 8032fea:	4602      	mov	r2, r0
 8032fec:	460b      	mov	r3, r1
 8032fee:	4630      	mov	r0, r6
 8032ff0:	4639      	mov	r1, r7
 8032ff2:	f7cd f8f5 	bl	80001e0 <__aeabi_dsub>
 8032ff6:	f1bb 0f00 	cmp.w	fp, #0
 8032ffa:	4606      	mov	r6, r0
 8032ffc:	460f      	mov	r7, r1
 8032ffe:	dd6c      	ble.n	80330da <__kernel_rem_pio2+0x252>
 8033000:	f108 31ff 	add.w	r1, r8, #4294967295
 8033004:	ab0c      	add	r3, sp, #48	@ 0x30
 8033006:	9d02      	ldr	r5, [sp, #8]
 8033008:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 803300c:	f1cb 0018 	rsb	r0, fp, #24
 8033010:	fa43 f200 	asr.w	r2, r3, r0
 8033014:	4415      	add	r5, r2
 8033016:	4082      	lsls	r2, r0
 8033018:	1a9b      	subs	r3, r3, r2
 803301a:	aa0c      	add	r2, sp, #48	@ 0x30
 803301c:	9502      	str	r5, [sp, #8]
 803301e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8033022:	f1cb 0217 	rsb	r2, fp, #23
 8033026:	fa43 f902 	asr.w	r9, r3, r2
 803302a:	f1b9 0f00 	cmp.w	r9, #0
 803302e:	dd64      	ble.n	80330fa <__kernel_rem_pio2+0x272>
 8033030:	9b02      	ldr	r3, [sp, #8]
 8033032:	2200      	movs	r2, #0
 8033034:	3301      	adds	r3, #1
 8033036:	9302      	str	r3, [sp, #8]
 8033038:	4615      	mov	r5, r2
 803303a:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 803303e:	4590      	cmp	r8, r2
 8033040:	f300 80b8 	bgt.w	80331b4 <__kernel_rem_pio2+0x32c>
 8033044:	f1bb 0f00 	cmp.w	fp, #0
 8033048:	dd07      	ble.n	803305a <__kernel_rem_pio2+0x1d2>
 803304a:	f1bb 0f01 	cmp.w	fp, #1
 803304e:	f000 80bf 	beq.w	80331d0 <__kernel_rem_pio2+0x348>
 8033052:	f1bb 0f02 	cmp.w	fp, #2
 8033056:	f000 80c6 	beq.w	80331e6 <__kernel_rem_pio2+0x35e>
 803305a:	f1b9 0f02 	cmp.w	r9, #2
 803305e:	d14c      	bne.n	80330fa <__kernel_rem_pio2+0x272>
 8033060:	4632      	mov	r2, r6
 8033062:	463b      	mov	r3, r7
 8033064:	494e      	ldr	r1, [pc, #312]	@ (80331a0 <__kernel_rem_pio2+0x318>)
 8033066:	2000      	movs	r0, #0
 8033068:	f7cd f8ba 	bl	80001e0 <__aeabi_dsub>
 803306c:	4606      	mov	r6, r0
 803306e:	460f      	mov	r7, r1
 8033070:	2d00      	cmp	r5, #0
 8033072:	d042      	beq.n	80330fa <__kernel_rem_pio2+0x272>
 8033074:	4658      	mov	r0, fp
 8033076:	ed9f 0b46 	vldr	d0, [pc, #280]	@ 8033190 <__kernel_rem_pio2+0x308>
 803307a:	f7ff fc19 	bl	80328b0 <scalbn>
 803307e:	4630      	mov	r0, r6
 8033080:	4639      	mov	r1, r7
 8033082:	ec53 2b10 	vmov	r2, r3, d0
 8033086:	f7cd f8ab 	bl	80001e0 <__aeabi_dsub>
 803308a:	4606      	mov	r6, r0
 803308c:	460f      	mov	r7, r1
 803308e:	e034      	b.n	80330fa <__kernel_rem_pio2+0x272>
 8033090:	4b44      	ldr	r3, [pc, #272]	@ (80331a4 <__kernel_rem_pio2+0x31c>)
 8033092:	2200      	movs	r2, #0
 8033094:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8033098:	f7cd fa5a 	bl	8000550 <__aeabi_dmul>
 803309c:	f7cd fd08 	bl	8000ab0 <__aeabi_d2iz>
 80330a0:	f7cd f9ec 	bl	800047c <__aeabi_i2d>
 80330a4:	4b40      	ldr	r3, [pc, #256]	@ (80331a8 <__kernel_rem_pio2+0x320>)
 80330a6:	2200      	movs	r2, #0
 80330a8:	4606      	mov	r6, r0
 80330aa:	460f      	mov	r7, r1
 80330ac:	f7cd fa50 	bl	8000550 <__aeabi_dmul>
 80330b0:	4602      	mov	r2, r0
 80330b2:	460b      	mov	r3, r1
 80330b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80330b8:	f7cd f892 	bl	80001e0 <__aeabi_dsub>
 80330bc:	f7cd fcf8 	bl	8000ab0 <__aeabi_d2iz>
 80330c0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80330c4:	f849 0b04 	str.w	r0, [r9], #4
 80330c8:	4639      	mov	r1, r7
 80330ca:	4630      	mov	r0, r6
 80330cc:	f7cd f88a 	bl	80001e4 <__adddf3>
 80330d0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80330d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80330d8:	e75d      	b.n	8032f96 <__kernel_rem_pio2+0x10e>
 80330da:	d107      	bne.n	80330ec <__kernel_rem_pio2+0x264>
 80330dc:	f108 33ff 	add.w	r3, r8, #4294967295
 80330e0:	aa0c      	add	r2, sp, #48	@ 0x30
 80330e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80330e6:	ea4f 59e3 	mov.w	r9, r3, asr #23
 80330ea:	e79e      	b.n	803302a <__kernel_rem_pio2+0x1a2>
 80330ec:	4b2f      	ldr	r3, [pc, #188]	@ (80331ac <__kernel_rem_pio2+0x324>)
 80330ee:	2200      	movs	r2, #0
 80330f0:	f7cd fcb4 	bl	8000a5c <__aeabi_dcmpge>
 80330f4:	2800      	cmp	r0, #0
 80330f6:	d143      	bne.n	8033180 <__kernel_rem_pio2+0x2f8>
 80330f8:	4681      	mov	r9, r0
 80330fa:	2200      	movs	r2, #0
 80330fc:	2300      	movs	r3, #0
 80330fe:	4630      	mov	r0, r6
 8033100:	4639      	mov	r1, r7
 8033102:	f7cd fc8d 	bl	8000a20 <__aeabi_dcmpeq>
 8033106:	2800      	cmp	r0, #0
 8033108:	f000 80bf 	beq.w	803328a <__kernel_rem_pio2+0x402>
 803310c:	f108 33ff 	add.w	r3, r8, #4294967295
 8033110:	2200      	movs	r2, #0
 8033112:	9900      	ldr	r1, [sp, #0]
 8033114:	428b      	cmp	r3, r1
 8033116:	da6e      	bge.n	80331f6 <__kernel_rem_pio2+0x36e>
 8033118:	2a00      	cmp	r2, #0
 803311a:	f000 8089 	beq.w	8033230 <__kernel_rem_pio2+0x3a8>
 803311e:	f108 38ff 	add.w	r8, r8, #4294967295
 8033122:	ab0c      	add	r3, sp, #48	@ 0x30
 8033124:	f1ab 0b18 	sub.w	fp, fp, #24
 8033128:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 803312c:	2b00      	cmp	r3, #0
 803312e:	d0f6      	beq.n	803311e <__kernel_rem_pio2+0x296>
 8033130:	4658      	mov	r0, fp
 8033132:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8033190 <__kernel_rem_pio2+0x308>
 8033136:	f7ff fbbb 	bl	80328b0 <scalbn>
 803313a:	f108 0301 	add.w	r3, r8, #1
 803313e:	00da      	lsls	r2, r3, #3
 8033140:	9205      	str	r2, [sp, #20]
 8033142:	ec55 4b10 	vmov	r4, r5, d0
 8033146:	aa70      	add	r2, sp, #448	@ 0x1c0
 8033148:	f8df b058 	ldr.w	fp, [pc, #88]	@ 80331a4 <__kernel_rem_pio2+0x31c>
 803314c:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8033150:	4646      	mov	r6, r8
 8033152:	f04f 0a00 	mov.w	sl, #0
 8033156:	2e00      	cmp	r6, #0
 8033158:	f280 80cf 	bge.w	80332fa <__kernel_rem_pio2+0x472>
 803315c:	4644      	mov	r4, r8
 803315e:	2c00      	cmp	r4, #0
 8033160:	f2c0 80fd 	blt.w	803335e <__kernel_rem_pio2+0x4d6>
 8033164:	4b12      	ldr	r3, [pc, #72]	@ (80331b0 <__kernel_rem_pio2+0x328>)
 8033166:	461f      	mov	r7, r3
 8033168:	ab70      	add	r3, sp, #448	@ 0x1c0
 803316a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 803316e:	9306      	str	r3, [sp, #24]
 8033170:	f04f 0a00 	mov.w	sl, #0
 8033174:	f04f 0b00 	mov.w	fp, #0
 8033178:	2600      	movs	r6, #0
 803317a:	eba8 0504 	sub.w	r5, r8, r4
 803317e:	e0e2      	b.n	8033346 <__kernel_rem_pio2+0x4be>
 8033180:	f04f 0902 	mov.w	r9, #2
 8033184:	e754      	b.n	8033030 <__kernel_rem_pio2+0x1a8>
 8033186:	bf00      	nop
	...
 8033194:	3ff00000 	.word	0x3ff00000
 8033198:	0803b540 	.word	0x0803b540
 803319c:	40200000 	.word	0x40200000
 80331a0:	3ff00000 	.word	0x3ff00000
 80331a4:	3e700000 	.word	0x3e700000
 80331a8:	41700000 	.word	0x41700000
 80331ac:	3fe00000 	.word	0x3fe00000
 80331b0:	0803b500 	.word	0x0803b500
 80331b4:	f854 3b04 	ldr.w	r3, [r4], #4
 80331b8:	b945      	cbnz	r5, 80331cc <__kernel_rem_pio2+0x344>
 80331ba:	b123      	cbz	r3, 80331c6 <__kernel_rem_pio2+0x33e>
 80331bc:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 80331c0:	f844 3c04 	str.w	r3, [r4, #-4]
 80331c4:	2301      	movs	r3, #1
 80331c6:	3201      	adds	r2, #1
 80331c8:	461d      	mov	r5, r3
 80331ca:	e738      	b.n	803303e <__kernel_rem_pio2+0x1b6>
 80331cc:	1acb      	subs	r3, r1, r3
 80331ce:	e7f7      	b.n	80331c0 <__kernel_rem_pio2+0x338>
 80331d0:	f108 32ff 	add.w	r2, r8, #4294967295
 80331d4:	ab0c      	add	r3, sp, #48	@ 0x30
 80331d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80331da:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80331de:	a90c      	add	r1, sp, #48	@ 0x30
 80331e0:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80331e4:	e739      	b.n	803305a <__kernel_rem_pio2+0x1d2>
 80331e6:	f108 32ff 	add.w	r2, r8, #4294967295
 80331ea:	ab0c      	add	r3, sp, #48	@ 0x30
 80331ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80331f0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80331f4:	e7f3      	b.n	80331de <__kernel_rem_pio2+0x356>
 80331f6:	a90c      	add	r1, sp, #48	@ 0x30
 80331f8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80331fc:	3b01      	subs	r3, #1
 80331fe:	430a      	orrs	r2, r1
 8033200:	e787      	b.n	8033112 <__kernel_rem_pio2+0x28a>
 8033202:	3401      	adds	r4, #1
 8033204:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8033208:	2a00      	cmp	r2, #0
 803320a:	d0fa      	beq.n	8033202 <__kernel_rem_pio2+0x37a>
 803320c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 803320e:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8033212:	eb0d 0503 	add.w	r5, sp, r3
 8033216:	9b06      	ldr	r3, [sp, #24]
 8033218:	aa20      	add	r2, sp, #128	@ 0x80
 803321a:	4443      	add	r3, r8
 803321c:	f108 0701 	add.w	r7, r8, #1
 8033220:	3d98      	subs	r5, #152	@ 0x98
 8033222:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 8033226:	4444      	add	r4, r8
 8033228:	42bc      	cmp	r4, r7
 803322a:	da04      	bge.n	8033236 <__kernel_rem_pio2+0x3ae>
 803322c:	46a0      	mov	r8, r4
 803322e:	e6a2      	b.n	8032f76 <__kernel_rem_pio2+0xee>
 8033230:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8033232:	2401      	movs	r4, #1
 8033234:	e7e6      	b.n	8033204 <__kernel_rem_pio2+0x37c>
 8033236:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8033238:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 803323c:	f7cd f91e 	bl	800047c <__aeabi_i2d>
 8033240:	ed9f 7bb1 	vldr	d7, [pc, #708]	@ 8033508 <__kernel_rem_pio2+0x680>
 8033244:	e8e6 0102 	strd	r0, r1, [r6], #8
 8033248:	ed8d 7b02 	vstr	d7, [sp, #8]
 803324c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8033250:	46b2      	mov	sl, r6
 8033252:	f04f 0800 	mov.w	r8, #0
 8033256:	9b05      	ldr	r3, [sp, #20]
 8033258:	4598      	cmp	r8, r3
 803325a:	dd05      	ble.n	8033268 <__kernel_rem_pio2+0x3e0>
 803325c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8033260:	3701      	adds	r7, #1
 8033262:	eca5 7b02 	vstmia	r5!, {d7}
 8033266:	e7df      	b.n	8033228 <__kernel_rem_pio2+0x3a0>
 8033268:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 803326c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8033270:	f7cd f96e 	bl	8000550 <__aeabi_dmul>
 8033274:	4602      	mov	r2, r0
 8033276:	460b      	mov	r3, r1
 8033278:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 803327c:	f7cc ffb2 	bl	80001e4 <__adddf3>
 8033280:	f108 0801 	add.w	r8, r8, #1
 8033284:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8033288:	e7e5      	b.n	8033256 <__kernel_rem_pio2+0x3ce>
 803328a:	f1cb 0000 	rsb	r0, fp, #0
 803328e:	ec47 6b10 	vmov	d0, r6, r7
 8033292:	f7ff fb0d 	bl	80328b0 <scalbn>
 8033296:	ec55 4b10 	vmov	r4, r5, d0
 803329a:	4b9d      	ldr	r3, [pc, #628]	@ (8033510 <__kernel_rem_pio2+0x688>)
 803329c:	2200      	movs	r2, #0
 803329e:	4620      	mov	r0, r4
 80332a0:	4629      	mov	r1, r5
 80332a2:	f7cd fbdb 	bl	8000a5c <__aeabi_dcmpge>
 80332a6:	b300      	cbz	r0, 80332ea <__kernel_rem_pio2+0x462>
 80332a8:	4b9a      	ldr	r3, [pc, #616]	@ (8033514 <__kernel_rem_pio2+0x68c>)
 80332aa:	2200      	movs	r2, #0
 80332ac:	4620      	mov	r0, r4
 80332ae:	4629      	mov	r1, r5
 80332b0:	f7cd f94e 	bl	8000550 <__aeabi_dmul>
 80332b4:	f7cd fbfc 	bl	8000ab0 <__aeabi_d2iz>
 80332b8:	4606      	mov	r6, r0
 80332ba:	f7cd f8df 	bl	800047c <__aeabi_i2d>
 80332be:	4b94      	ldr	r3, [pc, #592]	@ (8033510 <__kernel_rem_pio2+0x688>)
 80332c0:	2200      	movs	r2, #0
 80332c2:	f7cd f945 	bl	8000550 <__aeabi_dmul>
 80332c6:	460b      	mov	r3, r1
 80332c8:	4602      	mov	r2, r0
 80332ca:	4629      	mov	r1, r5
 80332cc:	4620      	mov	r0, r4
 80332ce:	f7cc ff87 	bl	80001e0 <__aeabi_dsub>
 80332d2:	f7cd fbed 	bl	8000ab0 <__aeabi_d2iz>
 80332d6:	ab0c      	add	r3, sp, #48	@ 0x30
 80332d8:	f10b 0b18 	add.w	fp, fp, #24
 80332dc:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80332e0:	f108 0801 	add.w	r8, r8, #1
 80332e4:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 80332e8:	e722      	b.n	8033130 <__kernel_rem_pio2+0x2a8>
 80332ea:	4620      	mov	r0, r4
 80332ec:	4629      	mov	r1, r5
 80332ee:	f7cd fbdf 	bl	8000ab0 <__aeabi_d2iz>
 80332f2:	ab0c      	add	r3, sp, #48	@ 0x30
 80332f4:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80332f8:	e71a      	b.n	8033130 <__kernel_rem_pio2+0x2a8>
 80332fa:	ab0c      	add	r3, sp, #48	@ 0x30
 80332fc:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8033300:	f7cd f8bc 	bl	800047c <__aeabi_i2d>
 8033304:	4622      	mov	r2, r4
 8033306:	462b      	mov	r3, r5
 8033308:	f7cd f922 	bl	8000550 <__aeabi_dmul>
 803330c:	4652      	mov	r2, sl
 803330e:	e967 0102 	strd	r0, r1, [r7, #-8]!
 8033312:	465b      	mov	r3, fp
 8033314:	4620      	mov	r0, r4
 8033316:	4629      	mov	r1, r5
 8033318:	f7cd f91a 	bl	8000550 <__aeabi_dmul>
 803331c:	3e01      	subs	r6, #1
 803331e:	4604      	mov	r4, r0
 8033320:	460d      	mov	r5, r1
 8033322:	e718      	b.n	8033156 <__kernel_rem_pio2+0x2ce>
 8033324:	9906      	ldr	r1, [sp, #24]
 8033326:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 803332a:	9106      	str	r1, [sp, #24]
 803332c:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8033330:	f7cd f90e 	bl	8000550 <__aeabi_dmul>
 8033334:	4602      	mov	r2, r0
 8033336:	460b      	mov	r3, r1
 8033338:	4650      	mov	r0, sl
 803333a:	4659      	mov	r1, fp
 803333c:	f7cc ff52 	bl	80001e4 <__adddf3>
 8033340:	3601      	adds	r6, #1
 8033342:	4682      	mov	sl, r0
 8033344:	468b      	mov	fp, r1
 8033346:	9b00      	ldr	r3, [sp, #0]
 8033348:	429e      	cmp	r6, r3
 803334a:	dc01      	bgt.n	8033350 <__kernel_rem_pio2+0x4c8>
 803334c:	42b5      	cmp	r5, r6
 803334e:	dae9      	bge.n	8033324 <__kernel_rem_pio2+0x49c>
 8033350:	ab48      	add	r3, sp, #288	@ 0x120
 8033352:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8033356:	e9c5 ab00 	strd	sl, fp, [r5]
 803335a:	3c01      	subs	r4, #1
 803335c:	e6ff      	b.n	803315e <__kernel_rem_pio2+0x2d6>
 803335e:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8033360:	2b02      	cmp	r3, #2
 8033362:	dc0b      	bgt.n	803337c <__kernel_rem_pio2+0x4f4>
 8033364:	2b00      	cmp	r3, #0
 8033366:	dc39      	bgt.n	80333dc <__kernel_rem_pio2+0x554>
 8033368:	d05d      	beq.n	8033426 <__kernel_rem_pio2+0x59e>
 803336a:	9b02      	ldr	r3, [sp, #8]
 803336c:	f003 0007 	and.w	r0, r3, #7
 8033370:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 8033374:	ecbd 8b02 	vpop	{d8}
 8033378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803337c:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 803337e:	2b03      	cmp	r3, #3
 8033380:	d1f3      	bne.n	803336a <__kernel_rem_pio2+0x4e2>
 8033382:	9b05      	ldr	r3, [sp, #20]
 8033384:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8033388:	eb0d 0403 	add.w	r4, sp, r3
 803338c:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8033390:	4625      	mov	r5, r4
 8033392:	46c2      	mov	sl, r8
 8033394:	f1ba 0f00 	cmp.w	sl, #0
 8033398:	f1a5 0508 	sub.w	r5, r5, #8
 803339c:	dc6b      	bgt.n	8033476 <__kernel_rem_pio2+0x5ee>
 803339e:	4645      	mov	r5, r8
 80333a0:	2d01      	cmp	r5, #1
 80333a2:	f1a4 0408 	sub.w	r4, r4, #8
 80333a6:	f300 8087 	bgt.w	80334b8 <__kernel_rem_pio2+0x630>
 80333aa:	9c05      	ldr	r4, [sp, #20]
 80333ac:	ab48      	add	r3, sp, #288	@ 0x120
 80333ae:	441c      	add	r4, r3
 80333b0:	2000      	movs	r0, #0
 80333b2:	2100      	movs	r1, #0
 80333b4:	f1b8 0f01 	cmp.w	r8, #1
 80333b8:	f300 809c 	bgt.w	80334f4 <__kernel_rem_pio2+0x66c>
 80333bc:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	@ 0x120
 80333c0:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	@ 0x128
 80333c4:	f1b9 0f00 	cmp.w	r9, #0
 80333c8:	f040 80a6 	bne.w	8033518 <__kernel_rem_pio2+0x690>
 80333cc:	9b04      	ldr	r3, [sp, #16]
 80333ce:	e9c3 7800 	strd	r7, r8, [r3]
 80333d2:	e9c3 5602 	strd	r5, r6, [r3, #8]
 80333d6:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80333da:	e7c6      	b.n	803336a <__kernel_rem_pio2+0x4e2>
 80333dc:	9d05      	ldr	r5, [sp, #20]
 80333de:	ab48      	add	r3, sp, #288	@ 0x120
 80333e0:	441d      	add	r5, r3
 80333e2:	4644      	mov	r4, r8
 80333e4:	2000      	movs	r0, #0
 80333e6:	2100      	movs	r1, #0
 80333e8:	2c00      	cmp	r4, #0
 80333ea:	da35      	bge.n	8033458 <__kernel_rem_pio2+0x5d0>
 80333ec:	f1b9 0f00 	cmp.w	r9, #0
 80333f0:	d038      	beq.n	8033464 <__kernel_rem_pio2+0x5dc>
 80333f2:	4602      	mov	r2, r0
 80333f4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80333f8:	9c04      	ldr	r4, [sp, #16]
 80333fa:	e9c4 2300 	strd	r2, r3, [r4]
 80333fe:	4602      	mov	r2, r0
 8033400:	460b      	mov	r3, r1
 8033402:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8033406:	f7cc feeb 	bl	80001e0 <__aeabi_dsub>
 803340a:	ad4a      	add	r5, sp, #296	@ 0x128
 803340c:	2401      	movs	r4, #1
 803340e:	45a0      	cmp	r8, r4
 8033410:	da2b      	bge.n	803346a <__kernel_rem_pio2+0x5e2>
 8033412:	f1b9 0f00 	cmp.w	r9, #0
 8033416:	d002      	beq.n	803341e <__kernel_rem_pio2+0x596>
 8033418:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 803341c:	4619      	mov	r1, r3
 803341e:	9b04      	ldr	r3, [sp, #16]
 8033420:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8033424:	e7a1      	b.n	803336a <__kernel_rem_pio2+0x4e2>
 8033426:	9c05      	ldr	r4, [sp, #20]
 8033428:	ab48      	add	r3, sp, #288	@ 0x120
 803342a:	441c      	add	r4, r3
 803342c:	2000      	movs	r0, #0
 803342e:	2100      	movs	r1, #0
 8033430:	f1b8 0f00 	cmp.w	r8, #0
 8033434:	da09      	bge.n	803344a <__kernel_rem_pio2+0x5c2>
 8033436:	f1b9 0f00 	cmp.w	r9, #0
 803343a:	d002      	beq.n	8033442 <__kernel_rem_pio2+0x5ba>
 803343c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8033440:	4619      	mov	r1, r3
 8033442:	9b04      	ldr	r3, [sp, #16]
 8033444:	e9c3 0100 	strd	r0, r1, [r3]
 8033448:	e78f      	b.n	803336a <__kernel_rem_pio2+0x4e2>
 803344a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 803344e:	f7cc fec9 	bl	80001e4 <__adddf3>
 8033452:	f108 38ff 	add.w	r8, r8, #4294967295
 8033456:	e7eb      	b.n	8033430 <__kernel_rem_pio2+0x5a8>
 8033458:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 803345c:	f7cc fec2 	bl	80001e4 <__adddf3>
 8033460:	3c01      	subs	r4, #1
 8033462:	e7c1      	b.n	80333e8 <__kernel_rem_pio2+0x560>
 8033464:	4602      	mov	r2, r0
 8033466:	460b      	mov	r3, r1
 8033468:	e7c6      	b.n	80333f8 <__kernel_rem_pio2+0x570>
 803346a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 803346e:	f7cc feb9 	bl	80001e4 <__adddf3>
 8033472:	3401      	adds	r4, #1
 8033474:	e7cb      	b.n	803340e <__kernel_rem_pio2+0x586>
 8033476:	ed95 7b00 	vldr	d7, [r5]
 803347a:	ed8d 7b00 	vstr	d7, [sp]
 803347e:	ed95 7b02 	vldr	d7, [r5, #8]
 8033482:	e9dd 0100 	ldrd	r0, r1, [sp]
 8033486:	ec53 2b17 	vmov	r2, r3, d7
 803348a:	ed8d 7b06 	vstr	d7, [sp, #24]
 803348e:	f7cc fea9 	bl	80001e4 <__adddf3>
 8033492:	4602      	mov	r2, r0
 8033494:	460b      	mov	r3, r1
 8033496:	4606      	mov	r6, r0
 8033498:	460f      	mov	r7, r1
 803349a:	e9dd 0100 	ldrd	r0, r1, [sp]
 803349e:	f7cc fe9f 	bl	80001e0 <__aeabi_dsub>
 80334a2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80334a6:	f7cc fe9d 	bl	80001e4 <__adddf3>
 80334aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80334ae:	e9c5 0102 	strd	r0, r1, [r5, #8]
 80334b2:	e9c5 6700 	strd	r6, r7, [r5]
 80334b6:	e76d      	b.n	8033394 <__kernel_rem_pio2+0x50c>
 80334b8:	ed94 7b00 	vldr	d7, [r4]
 80334bc:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 80334c0:	ec51 0b17 	vmov	r0, r1, d7
 80334c4:	4652      	mov	r2, sl
 80334c6:	465b      	mov	r3, fp
 80334c8:	ed8d 7b00 	vstr	d7, [sp]
 80334cc:	f7cc fe8a 	bl	80001e4 <__adddf3>
 80334d0:	4602      	mov	r2, r0
 80334d2:	460b      	mov	r3, r1
 80334d4:	4606      	mov	r6, r0
 80334d6:	460f      	mov	r7, r1
 80334d8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80334dc:	f7cc fe80 	bl	80001e0 <__aeabi_dsub>
 80334e0:	4652      	mov	r2, sl
 80334e2:	465b      	mov	r3, fp
 80334e4:	f7cc fe7e 	bl	80001e4 <__adddf3>
 80334e8:	3d01      	subs	r5, #1
 80334ea:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80334ee:	e9c4 6700 	strd	r6, r7, [r4]
 80334f2:	e755      	b.n	80333a0 <__kernel_rem_pio2+0x518>
 80334f4:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80334f8:	f7cc fe74 	bl	80001e4 <__adddf3>
 80334fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8033500:	e758      	b.n	80333b4 <__kernel_rem_pio2+0x52c>
 8033502:	bf00      	nop
 8033504:	f3af 8000 	nop.w
	...
 8033510:	41700000 	.word	0x41700000
 8033514:	3e700000 	.word	0x3e700000
 8033518:	9b04      	ldr	r3, [sp, #16]
 803351a:	9a04      	ldr	r2, [sp, #16]
 803351c:	601f      	str	r7, [r3, #0]
 803351e:	f108 4400 	add.w	r4, r8, #2147483648	@ 0x80000000
 8033522:	605c      	str	r4, [r3, #4]
 8033524:	609d      	str	r5, [r3, #8]
 8033526:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 803352a:	60d3      	str	r3, [r2, #12]
 803352c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8033530:	6110      	str	r0, [r2, #16]
 8033532:	6153      	str	r3, [r2, #20]
 8033534:	e719      	b.n	803336a <__kernel_rem_pio2+0x4e2>
 8033536:	bf00      	nop

08033538 <__kernel_rem_pio2f>:
 8033538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803353c:	ed2d 8b04 	vpush	{d8-d9}
 8033540:	b0d9      	sub	sp, #356	@ 0x164
 8033542:	4690      	mov	r8, r2
 8033544:	9001      	str	r0, [sp, #4]
 8033546:	4ab9      	ldr	r2, [pc, #740]	@ (803382c <__kernel_rem_pio2f+0x2f4>)
 8033548:	9866      	ldr	r0, [sp, #408]	@ 0x198
 803354a:	f118 0f04 	cmn.w	r8, #4
 803354e:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8033552:	460f      	mov	r7, r1
 8033554:	f103 3bff 	add.w	fp, r3, #4294967295
 8033558:	db27      	blt.n	80335aa <__kernel_rem_pio2f+0x72>
 803355a:	f1b8 0203 	subs.w	r2, r8, #3
 803355e:	bf48      	it	mi
 8033560:	f108 0204 	addmi.w	r2, r8, #4
 8033564:	10d2      	asrs	r2, r2, #3
 8033566:	1c55      	adds	r5, r2, #1
 8033568:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 803356a:	ed9f 7ab4 	vldr	s14, [pc, #720]	@ 803383c <__kernel_rem_pio2f+0x304>
 803356e:	00e8      	lsls	r0, r5, #3
 8033570:	eba2 060b 	sub.w	r6, r2, fp
 8033574:	9002      	str	r0, [sp, #8]
 8033576:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 803357a:	eb0a 0c0b 	add.w	ip, sl, fp
 803357e:	ac1c      	add	r4, sp, #112	@ 0x70
 8033580:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8033584:	2000      	movs	r0, #0
 8033586:	4560      	cmp	r0, ip
 8033588:	dd11      	ble.n	80335ae <__kernel_rem_pio2f+0x76>
 803358a:	a91c      	add	r1, sp, #112	@ 0x70
 803358c:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8033590:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8033594:	f04f 0c00 	mov.w	ip, #0
 8033598:	45d4      	cmp	ip, sl
 803359a:	dc27      	bgt.n	80335ec <__kernel_rem_pio2f+0xb4>
 803359c:	f8dd e004 	ldr.w	lr, [sp, #4]
 80335a0:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 803383c <__kernel_rem_pio2f+0x304>
 80335a4:	4606      	mov	r6, r0
 80335a6:	2400      	movs	r4, #0
 80335a8:	e016      	b.n	80335d8 <__kernel_rem_pio2f+0xa0>
 80335aa:	2200      	movs	r2, #0
 80335ac:	e7db      	b.n	8033566 <__kernel_rem_pio2f+0x2e>
 80335ae:	42c6      	cmn	r6, r0
 80335b0:	bf5d      	ittte	pl
 80335b2:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80335b6:	ee07 1a90 	vmovpl	s15, r1
 80335ba:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80335be:	eef0 7a47 	vmovmi.f32	s15, s14
 80335c2:	ece4 7a01 	vstmia	r4!, {s15}
 80335c6:	3001      	adds	r0, #1
 80335c8:	e7dd      	b.n	8033586 <__kernel_rem_pio2f+0x4e>
 80335ca:	ecfe 6a01 	vldmia	lr!, {s13}
 80335ce:	ed96 7a00 	vldr	s14, [r6]
 80335d2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80335d6:	3401      	adds	r4, #1
 80335d8:	455c      	cmp	r4, fp
 80335da:	f1a6 0604 	sub.w	r6, r6, #4
 80335de:	ddf4      	ble.n	80335ca <__kernel_rem_pio2f+0x92>
 80335e0:	ece9 7a01 	vstmia	r9!, {s15}
 80335e4:	f10c 0c01 	add.w	ip, ip, #1
 80335e8:	3004      	adds	r0, #4
 80335ea:	e7d5      	b.n	8033598 <__kernel_rem_pio2f+0x60>
 80335ec:	a908      	add	r1, sp, #32
 80335ee:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80335f2:	9104      	str	r1, [sp, #16]
 80335f4:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80335f6:	eddf 8a90 	vldr	s17, [pc, #576]	@ 8033838 <__kernel_rem_pio2f+0x300>
 80335fa:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 8033834 <__kernel_rem_pio2f+0x2fc>
 80335fe:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8033602:	9203      	str	r2, [sp, #12]
 8033604:	4654      	mov	r4, sl
 8033606:	00a2      	lsls	r2, r4, #2
 8033608:	9205      	str	r2, [sp, #20]
 803360a:	aa58      	add	r2, sp, #352	@ 0x160
 803360c:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8033610:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8033614:	a944      	add	r1, sp, #272	@ 0x110
 8033616:	aa08      	add	r2, sp, #32
 8033618:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 803361c:	4694      	mov	ip, r2
 803361e:	4626      	mov	r6, r4
 8033620:	2e00      	cmp	r6, #0
 8033622:	f1a0 0004 	sub.w	r0, r0, #4
 8033626:	dc4c      	bgt.n	80336c2 <__kernel_rem_pio2f+0x18a>
 8033628:	4628      	mov	r0, r5
 803362a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 803362e:	f7fa fba3 	bl	802dd78 <scalbnf>
 8033632:	eeb0 8a40 	vmov.f32	s16, s0
 8033636:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 803363a:	ee28 0a00 	vmul.f32	s0, s16, s0
 803363e:	f7fb fe7d 	bl	802f33c <floorf>
 8033642:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8033646:	eea0 8a67 	vfms.f32	s16, s0, s15
 803364a:	2d00      	cmp	r5, #0
 803364c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8033650:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8033654:	ee17 9a90 	vmov	r9, s15
 8033658:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803365c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8033660:	dd41      	ble.n	80336e6 <__kernel_rem_pio2f+0x1ae>
 8033662:	f104 3cff 	add.w	ip, r4, #4294967295
 8033666:	a908      	add	r1, sp, #32
 8033668:	f1c5 0e08 	rsb	lr, r5, #8
 803366c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8033670:	fa46 f00e 	asr.w	r0, r6, lr
 8033674:	4481      	add	r9, r0
 8033676:	fa00 f00e 	lsl.w	r0, r0, lr
 803367a:	1a36      	subs	r6, r6, r0
 803367c:	f1c5 0007 	rsb	r0, r5, #7
 8033680:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8033684:	4106      	asrs	r6, r0
 8033686:	2e00      	cmp	r6, #0
 8033688:	dd3c      	ble.n	8033704 <__kernel_rem_pio2f+0x1cc>
 803368a:	f04f 0e00 	mov.w	lr, #0
 803368e:	f109 0901 	add.w	r9, r9, #1
 8033692:	4670      	mov	r0, lr
 8033694:	4574      	cmp	r4, lr
 8033696:	dc68      	bgt.n	803376a <__kernel_rem_pio2f+0x232>
 8033698:	2d00      	cmp	r5, #0
 803369a:	dd03      	ble.n	80336a4 <__kernel_rem_pio2f+0x16c>
 803369c:	2d01      	cmp	r5, #1
 803369e:	d074      	beq.n	803378a <__kernel_rem_pio2f+0x252>
 80336a0:	2d02      	cmp	r5, #2
 80336a2:	d07d      	beq.n	80337a0 <__kernel_rem_pio2f+0x268>
 80336a4:	2e02      	cmp	r6, #2
 80336a6:	d12d      	bne.n	8033704 <__kernel_rem_pio2f+0x1cc>
 80336a8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80336ac:	ee30 8a48 	vsub.f32	s16, s0, s16
 80336b0:	b340      	cbz	r0, 8033704 <__kernel_rem_pio2f+0x1cc>
 80336b2:	4628      	mov	r0, r5
 80336b4:	9306      	str	r3, [sp, #24]
 80336b6:	f7fa fb5f 	bl	802dd78 <scalbnf>
 80336ba:	9b06      	ldr	r3, [sp, #24]
 80336bc:	ee38 8a40 	vsub.f32	s16, s16, s0
 80336c0:	e020      	b.n	8033704 <__kernel_rem_pio2f+0x1cc>
 80336c2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80336c6:	3e01      	subs	r6, #1
 80336c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80336cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80336d0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80336d4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80336d8:	ecac 0a01 	vstmia	ip!, {s0}
 80336dc:	ed90 0a00 	vldr	s0, [r0]
 80336e0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80336e4:	e79c      	b.n	8033620 <__kernel_rem_pio2f+0xe8>
 80336e6:	d105      	bne.n	80336f4 <__kernel_rem_pio2f+0x1bc>
 80336e8:	1e60      	subs	r0, r4, #1
 80336ea:	a908      	add	r1, sp, #32
 80336ec:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80336f0:	11f6      	asrs	r6, r6, #7
 80336f2:	e7c8      	b.n	8033686 <__kernel_rem_pio2f+0x14e>
 80336f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80336f8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80336fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8033700:	da31      	bge.n	8033766 <__kernel_rem_pio2f+0x22e>
 8033702:	2600      	movs	r6, #0
 8033704:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8033708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803370c:	f040 8098 	bne.w	8033840 <__kernel_rem_pio2f+0x308>
 8033710:	1e60      	subs	r0, r4, #1
 8033712:	2200      	movs	r2, #0
 8033714:	4550      	cmp	r0, sl
 8033716:	da4b      	bge.n	80337b0 <__kernel_rem_pio2f+0x278>
 8033718:	2a00      	cmp	r2, #0
 803371a:	d065      	beq.n	80337e8 <__kernel_rem_pio2f+0x2b0>
 803371c:	3c01      	subs	r4, #1
 803371e:	ab08      	add	r3, sp, #32
 8033720:	3d08      	subs	r5, #8
 8033722:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8033726:	2b00      	cmp	r3, #0
 8033728:	d0f8      	beq.n	803371c <__kernel_rem_pio2f+0x1e4>
 803372a:	4628      	mov	r0, r5
 803372c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8033730:	f7fa fb22 	bl	802dd78 <scalbnf>
 8033734:	1c63      	adds	r3, r4, #1
 8033736:	aa44      	add	r2, sp, #272	@ 0x110
 8033738:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8033838 <__kernel_rem_pio2f+0x300>
 803373c:	0099      	lsls	r1, r3, #2
 803373e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8033742:	4623      	mov	r3, r4
 8033744:	2b00      	cmp	r3, #0
 8033746:	f280 80a9 	bge.w	803389c <__kernel_rem_pio2f+0x364>
 803374a:	4623      	mov	r3, r4
 803374c:	2b00      	cmp	r3, #0
 803374e:	f2c0 80c7 	blt.w	80338e0 <__kernel_rem_pio2f+0x3a8>
 8033752:	aa44      	add	r2, sp, #272	@ 0x110
 8033754:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8033758:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8033830 <__kernel_rem_pio2f+0x2f8>
 803375c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 803383c <__kernel_rem_pio2f+0x304>
 8033760:	2000      	movs	r0, #0
 8033762:	1ae2      	subs	r2, r4, r3
 8033764:	e0b1      	b.n	80338ca <__kernel_rem_pio2f+0x392>
 8033766:	2602      	movs	r6, #2
 8033768:	e78f      	b.n	803368a <__kernel_rem_pio2f+0x152>
 803376a:	f852 1b04 	ldr.w	r1, [r2], #4
 803376e:	b948      	cbnz	r0, 8033784 <__kernel_rem_pio2f+0x24c>
 8033770:	b121      	cbz	r1, 803377c <__kernel_rem_pio2f+0x244>
 8033772:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8033776:	f842 1c04 	str.w	r1, [r2, #-4]
 803377a:	2101      	movs	r1, #1
 803377c:	f10e 0e01 	add.w	lr, lr, #1
 8033780:	4608      	mov	r0, r1
 8033782:	e787      	b.n	8033694 <__kernel_rem_pio2f+0x15c>
 8033784:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8033788:	e7f5      	b.n	8033776 <__kernel_rem_pio2f+0x23e>
 803378a:	f104 3cff 	add.w	ip, r4, #4294967295
 803378e:	aa08      	add	r2, sp, #32
 8033790:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8033794:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8033798:	a908      	add	r1, sp, #32
 803379a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 803379e:	e781      	b.n	80336a4 <__kernel_rem_pio2f+0x16c>
 80337a0:	f104 3cff 	add.w	ip, r4, #4294967295
 80337a4:	aa08      	add	r2, sp, #32
 80337a6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80337aa:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80337ae:	e7f3      	b.n	8033798 <__kernel_rem_pio2f+0x260>
 80337b0:	a908      	add	r1, sp, #32
 80337b2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80337b6:	3801      	subs	r0, #1
 80337b8:	430a      	orrs	r2, r1
 80337ba:	e7ab      	b.n	8033714 <__kernel_rem_pio2f+0x1dc>
 80337bc:	3201      	adds	r2, #1
 80337be:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80337c2:	2e00      	cmp	r6, #0
 80337c4:	d0fa      	beq.n	80337bc <__kernel_rem_pio2f+0x284>
 80337c6:	9905      	ldr	r1, [sp, #20]
 80337c8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80337cc:	eb0d 0001 	add.w	r0, sp, r1
 80337d0:	18e6      	adds	r6, r4, r3
 80337d2:	a91c      	add	r1, sp, #112	@ 0x70
 80337d4:	f104 0c01 	add.w	ip, r4, #1
 80337d8:	384c      	subs	r0, #76	@ 0x4c
 80337da:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80337de:	4422      	add	r2, r4
 80337e0:	4562      	cmp	r2, ip
 80337e2:	da04      	bge.n	80337ee <__kernel_rem_pio2f+0x2b6>
 80337e4:	4614      	mov	r4, r2
 80337e6:	e70e      	b.n	8033606 <__kernel_rem_pio2f+0xce>
 80337e8:	9804      	ldr	r0, [sp, #16]
 80337ea:	2201      	movs	r2, #1
 80337ec:	e7e7      	b.n	80337be <__kernel_rem_pio2f+0x286>
 80337ee:	9903      	ldr	r1, [sp, #12]
 80337f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80337f4:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80337f8:	9105      	str	r1, [sp, #20]
 80337fa:	ee07 1a90 	vmov	s15, r1
 80337fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8033802:	2400      	movs	r4, #0
 8033804:	ece6 7a01 	vstmia	r6!, {s15}
 8033808:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 803383c <__kernel_rem_pio2f+0x304>
 803380c:	46b1      	mov	r9, r6
 803380e:	455c      	cmp	r4, fp
 8033810:	dd04      	ble.n	803381c <__kernel_rem_pio2f+0x2e4>
 8033812:	ece0 7a01 	vstmia	r0!, {s15}
 8033816:	f10c 0c01 	add.w	ip, ip, #1
 803381a:	e7e1      	b.n	80337e0 <__kernel_rem_pio2f+0x2a8>
 803381c:	ecfe 6a01 	vldmia	lr!, {s13}
 8033820:	ed39 7a01 	vldmdb	r9!, {s14}
 8033824:	3401      	adds	r4, #1
 8033826:	eee6 7a87 	vfma.f32	s15, s13, s14
 803382a:	e7f0      	b.n	803380e <__kernel_rem_pio2f+0x2d6>
 803382c:	0803b57c 	.word	0x0803b57c
 8033830:	0803b550 	.word	0x0803b550
 8033834:	43800000 	.word	0x43800000
 8033838:	3b800000 	.word	0x3b800000
 803383c:	00000000 	.word	0x00000000
 8033840:	9b02      	ldr	r3, [sp, #8]
 8033842:	eeb0 0a48 	vmov.f32	s0, s16
 8033846:	eba3 0008 	sub.w	r0, r3, r8
 803384a:	f7fa fa95 	bl	802dd78 <scalbnf>
 803384e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8033834 <__kernel_rem_pio2f+0x2fc>
 8033852:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8033856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803385a:	db19      	blt.n	8033890 <__kernel_rem_pio2f+0x358>
 803385c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8033838 <__kernel_rem_pio2f+0x300>
 8033860:	ee60 7a27 	vmul.f32	s15, s0, s15
 8033864:	aa08      	add	r2, sp, #32
 8033866:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803386a:	3508      	adds	r5, #8
 803386c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8033870:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8033874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8033878:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 803387c:	ee10 3a10 	vmov	r3, s0
 8033880:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8033884:	ee17 3a90 	vmov	r3, s15
 8033888:	3401      	adds	r4, #1
 803388a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803388e:	e74c      	b.n	803372a <__kernel_rem_pio2f+0x1f2>
 8033890:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8033894:	aa08      	add	r2, sp, #32
 8033896:	ee10 3a10 	vmov	r3, s0
 803389a:	e7f6      	b.n	803388a <__kernel_rem_pio2f+0x352>
 803389c:	a808      	add	r0, sp, #32
 803389e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80338a2:	9001      	str	r0, [sp, #4]
 80338a4:	ee07 0a90 	vmov	s15, r0
 80338a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80338ac:	3b01      	subs	r3, #1
 80338ae:	ee67 7a80 	vmul.f32	s15, s15, s0
 80338b2:	ee20 0a07 	vmul.f32	s0, s0, s14
 80338b6:	ed62 7a01 	vstmdb	r2!, {s15}
 80338ba:	e743      	b.n	8033744 <__kernel_rem_pio2f+0x20c>
 80338bc:	ecfc 6a01 	vldmia	ip!, {s13}
 80338c0:	ecb5 7a01 	vldmia	r5!, {s14}
 80338c4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80338c8:	3001      	adds	r0, #1
 80338ca:	4550      	cmp	r0, sl
 80338cc:	dc01      	bgt.n	80338d2 <__kernel_rem_pio2f+0x39a>
 80338ce:	4282      	cmp	r2, r0
 80338d0:	daf4      	bge.n	80338bc <__kernel_rem_pio2f+0x384>
 80338d2:	a858      	add	r0, sp, #352	@ 0x160
 80338d4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80338d8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80338dc:	3b01      	subs	r3, #1
 80338de:	e735      	b.n	803374c <__kernel_rem_pio2f+0x214>
 80338e0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80338e2:	2b02      	cmp	r3, #2
 80338e4:	dc09      	bgt.n	80338fa <__kernel_rem_pio2f+0x3c2>
 80338e6:	2b00      	cmp	r3, #0
 80338e8:	dc2b      	bgt.n	8033942 <__kernel_rem_pio2f+0x40a>
 80338ea:	d044      	beq.n	8033976 <__kernel_rem_pio2f+0x43e>
 80338ec:	f009 0007 	and.w	r0, r9, #7
 80338f0:	b059      	add	sp, #356	@ 0x164
 80338f2:	ecbd 8b04 	vpop	{d8-d9}
 80338f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80338fa:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80338fc:	2b03      	cmp	r3, #3
 80338fe:	d1f5      	bne.n	80338ec <__kernel_rem_pio2f+0x3b4>
 8033900:	aa30      	add	r2, sp, #192	@ 0xc0
 8033902:	1f0b      	subs	r3, r1, #4
 8033904:	4413      	add	r3, r2
 8033906:	461a      	mov	r2, r3
 8033908:	4620      	mov	r0, r4
 803390a:	2800      	cmp	r0, #0
 803390c:	f1a2 0204 	sub.w	r2, r2, #4
 8033910:	dc52      	bgt.n	80339b8 <__kernel_rem_pio2f+0x480>
 8033912:	4622      	mov	r2, r4
 8033914:	2a01      	cmp	r2, #1
 8033916:	f1a3 0304 	sub.w	r3, r3, #4
 803391a:	dc5d      	bgt.n	80339d8 <__kernel_rem_pio2f+0x4a0>
 803391c:	ab30      	add	r3, sp, #192	@ 0xc0
 803391e:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 803383c <__kernel_rem_pio2f+0x304>
 8033922:	440b      	add	r3, r1
 8033924:	2c01      	cmp	r4, #1
 8033926:	dc67      	bgt.n	80339f8 <__kernel_rem_pio2f+0x4c0>
 8033928:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 803392c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8033930:	2e00      	cmp	r6, #0
 8033932:	d167      	bne.n	8033a04 <__kernel_rem_pio2f+0x4cc>
 8033934:	edc7 6a00 	vstr	s13, [r7]
 8033938:	ed87 7a01 	vstr	s14, [r7, #4]
 803393c:	edc7 7a02 	vstr	s15, [r7, #8]
 8033940:	e7d4      	b.n	80338ec <__kernel_rem_pio2f+0x3b4>
 8033942:	ab30      	add	r3, sp, #192	@ 0xc0
 8033944:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 803383c <__kernel_rem_pio2f+0x304>
 8033948:	440b      	add	r3, r1
 803394a:	4622      	mov	r2, r4
 803394c:	2a00      	cmp	r2, #0
 803394e:	da24      	bge.n	803399a <__kernel_rem_pio2f+0x462>
 8033950:	b34e      	cbz	r6, 80339a6 <__kernel_rem_pio2f+0x46e>
 8033952:	eef1 7a47 	vneg.f32	s15, s14
 8033956:	edc7 7a00 	vstr	s15, [r7]
 803395a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 803395e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8033962:	aa31      	add	r2, sp, #196	@ 0xc4
 8033964:	2301      	movs	r3, #1
 8033966:	429c      	cmp	r4, r3
 8033968:	da20      	bge.n	80339ac <__kernel_rem_pio2f+0x474>
 803396a:	b10e      	cbz	r6, 8033970 <__kernel_rem_pio2f+0x438>
 803396c:	eef1 7a67 	vneg.f32	s15, s15
 8033970:	edc7 7a01 	vstr	s15, [r7, #4]
 8033974:	e7ba      	b.n	80338ec <__kernel_rem_pio2f+0x3b4>
 8033976:	ab30      	add	r3, sp, #192	@ 0xc0
 8033978:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 803383c <__kernel_rem_pio2f+0x304>
 803397c:	440b      	add	r3, r1
 803397e:	2c00      	cmp	r4, #0
 8033980:	da05      	bge.n	803398e <__kernel_rem_pio2f+0x456>
 8033982:	b10e      	cbz	r6, 8033988 <__kernel_rem_pio2f+0x450>
 8033984:	eef1 7a67 	vneg.f32	s15, s15
 8033988:	edc7 7a00 	vstr	s15, [r7]
 803398c:	e7ae      	b.n	80338ec <__kernel_rem_pio2f+0x3b4>
 803398e:	ed33 7a01 	vldmdb	r3!, {s14}
 8033992:	3c01      	subs	r4, #1
 8033994:	ee77 7a87 	vadd.f32	s15, s15, s14
 8033998:	e7f1      	b.n	803397e <__kernel_rem_pio2f+0x446>
 803399a:	ed73 7a01 	vldmdb	r3!, {s15}
 803399e:	3a01      	subs	r2, #1
 80339a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80339a4:	e7d2      	b.n	803394c <__kernel_rem_pio2f+0x414>
 80339a6:	eef0 7a47 	vmov.f32	s15, s14
 80339aa:	e7d4      	b.n	8033956 <__kernel_rem_pio2f+0x41e>
 80339ac:	ecb2 7a01 	vldmia	r2!, {s14}
 80339b0:	3301      	adds	r3, #1
 80339b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80339b6:	e7d6      	b.n	8033966 <__kernel_rem_pio2f+0x42e>
 80339b8:	edd2 7a00 	vldr	s15, [r2]
 80339bc:	edd2 6a01 	vldr	s13, [r2, #4]
 80339c0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80339c4:	3801      	subs	r0, #1
 80339c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80339ca:	ed82 7a00 	vstr	s14, [r2]
 80339ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80339d2:	edc2 7a01 	vstr	s15, [r2, #4]
 80339d6:	e798      	b.n	803390a <__kernel_rem_pio2f+0x3d2>
 80339d8:	edd3 7a00 	vldr	s15, [r3]
 80339dc:	edd3 6a01 	vldr	s13, [r3, #4]
 80339e0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80339e4:	3a01      	subs	r2, #1
 80339e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80339ea:	ed83 7a00 	vstr	s14, [r3]
 80339ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80339f2:	edc3 7a01 	vstr	s15, [r3, #4]
 80339f6:	e78d      	b.n	8033914 <__kernel_rem_pio2f+0x3dc>
 80339f8:	ed33 7a01 	vldmdb	r3!, {s14}
 80339fc:	3c01      	subs	r4, #1
 80339fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8033a02:	e78f      	b.n	8033924 <__kernel_rem_pio2f+0x3ec>
 8033a04:	eef1 6a66 	vneg.f32	s13, s13
 8033a08:	eeb1 7a47 	vneg.f32	s14, s14
 8033a0c:	edc7 6a00 	vstr	s13, [r7]
 8033a10:	ed87 7a01 	vstr	s14, [r7, #4]
 8033a14:	eef1 7a67 	vneg.f32	s15, s15
 8033a18:	e790      	b.n	803393c <__kernel_rem_pio2f+0x404>
 8033a1a:	bf00      	nop
 8033a1c:	0000      	movs	r0, r0
	...

08033a20 <floor>:
 8033a20:	ec51 0b10 	vmov	r0, r1, d0
 8033a24:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8033a28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8033a2c:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8033a30:	2e13      	cmp	r6, #19
 8033a32:	460c      	mov	r4, r1
 8033a34:	4605      	mov	r5, r0
 8033a36:	4680      	mov	r8, r0
 8033a38:	dc34      	bgt.n	8033aa4 <floor+0x84>
 8033a3a:	2e00      	cmp	r6, #0
 8033a3c:	da17      	bge.n	8033a6e <floor+0x4e>
 8033a3e:	a332      	add	r3, pc, #200	@ (adr r3, 8033b08 <floor+0xe8>)
 8033a40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8033a44:	f7cc fbce 	bl	80001e4 <__adddf3>
 8033a48:	2200      	movs	r2, #0
 8033a4a:	2300      	movs	r3, #0
 8033a4c:	f7cd f810 	bl	8000a70 <__aeabi_dcmpgt>
 8033a50:	b150      	cbz	r0, 8033a68 <floor+0x48>
 8033a52:	2c00      	cmp	r4, #0
 8033a54:	da55      	bge.n	8033b02 <floor+0xe2>
 8033a56:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8033a5a:	432c      	orrs	r4, r5
 8033a5c:	2500      	movs	r5, #0
 8033a5e:	42ac      	cmp	r4, r5
 8033a60:	4c2b      	ldr	r4, [pc, #172]	@ (8033b10 <floor+0xf0>)
 8033a62:	bf08      	it	eq
 8033a64:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8033a68:	4621      	mov	r1, r4
 8033a6a:	4628      	mov	r0, r5
 8033a6c:	e023      	b.n	8033ab6 <floor+0x96>
 8033a6e:	4f29      	ldr	r7, [pc, #164]	@ (8033b14 <floor+0xf4>)
 8033a70:	4137      	asrs	r7, r6
 8033a72:	ea01 0307 	and.w	r3, r1, r7
 8033a76:	4303      	orrs	r3, r0
 8033a78:	d01d      	beq.n	8033ab6 <floor+0x96>
 8033a7a:	a323      	add	r3, pc, #140	@ (adr r3, 8033b08 <floor+0xe8>)
 8033a7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8033a80:	f7cc fbb0 	bl	80001e4 <__adddf3>
 8033a84:	2200      	movs	r2, #0
 8033a86:	2300      	movs	r3, #0
 8033a88:	f7cc fff2 	bl	8000a70 <__aeabi_dcmpgt>
 8033a8c:	2800      	cmp	r0, #0
 8033a8e:	d0eb      	beq.n	8033a68 <floor+0x48>
 8033a90:	2c00      	cmp	r4, #0
 8033a92:	bfbe      	ittt	lt
 8033a94:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8033a98:	4133      	asrlt	r3, r6
 8033a9a:	18e4      	addlt	r4, r4, r3
 8033a9c:	ea24 0407 	bic.w	r4, r4, r7
 8033aa0:	2500      	movs	r5, #0
 8033aa2:	e7e1      	b.n	8033a68 <floor+0x48>
 8033aa4:	2e33      	cmp	r6, #51	@ 0x33
 8033aa6:	dd0a      	ble.n	8033abe <floor+0x9e>
 8033aa8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8033aac:	d103      	bne.n	8033ab6 <floor+0x96>
 8033aae:	4602      	mov	r2, r0
 8033ab0:	460b      	mov	r3, r1
 8033ab2:	f7cc fb97 	bl	80001e4 <__adddf3>
 8033ab6:	ec41 0b10 	vmov	d0, r0, r1
 8033aba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8033abe:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8033ac2:	f04f 37ff 	mov.w	r7, #4294967295
 8033ac6:	40df      	lsrs	r7, r3
 8033ac8:	4207      	tst	r7, r0
 8033aca:	d0f4      	beq.n	8033ab6 <floor+0x96>
 8033acc:	a30e      	add	r3, pc, #56	@ (adr r3, 8033b08 <floor+0xe8>)
 8033ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8033ad2:	f7cc fb87 	bl	80001e4 <__adddf3>
 8033ad6:	2200      	movs	r2, #0
 8033ad8:	2300      	movs	r3, #0
 8033ada:	f7cc ffc9 	bl	8000a70 <__aeabi_dcmpgt>
 8033ade:	2800      	cmp	r0, #0
 8033ae0:	d0c2      	beq.n	8033a68 <floor+0x48>
 8033ae2:	2c00      	cmp	r4, #0
 8033ae4:	da0a      	bge.n	8033afc <floor+0xdc>
 8033ae6:	2e14      	cmp	r6, #20
 8033ae8:	d101      	bne.n	8033aee <floor+0xce>
 8033aea:	3401      	adds	r4, #1
 8033aec:	e006      	b.n	8033afc <floor+0xdc>
 8033aee:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8033af2:	2301      	movs	r3, #1
 8033af4:	40b3      	lsls	r3, r6
 8033af6:	441d      	add	r5, r3
 8033af8:	4545      	cmp	r5, r8
 8033afa:	d3f6      	bcc.n	8033aea <floor+0xca>
 8033afc:	ea25 0507 	bic.w	r5, r5, r7
 8033b00:	e7b2      	b.n	8033a68 <floor+0x48>
 8033b02:	2500      	movs	r5, #0
 8033b04:	462c      	mov	r4, r5
 8033b06:	e7af      	b.n	8033a68 <floor+0x48>
 8033b08:	8800759c 	.word	0x8800759c
 8033b0c:	7e37e43c 	.word	0x7e37e43c
 8033b10:	bff00000 	.word	0xbff00000
 8033b14:	000fffff 	.word	0x000fffff

08033b18 <_init>:
 8033b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033b1a:	bf00      	nop
 8033b1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033b1e:	bc08      	pop	{r3}
 8033b20:	469e      	mov	lr, r3
 8033b22:	4770      	bx	lr

08033b24 <_fini>:
 8033b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033b26:	bf00      	nop
 8033b28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033b2a:	bc08      	pop	{r3}
 8033b2c:	469e      	mov	lr, r3
 8033b2e:	4770      	bx	lr
